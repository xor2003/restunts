; ---------------------------------------------------------------------------

struct FILE		 ;	(sizeof=0xC, standard type)
_ptr		dd ?			; offset
_cnt		dw ?
_base		dd ?			; offset
_flag		db ?
_file		db ?
ends


;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; +-------------------------------------------------------------------------+
;

; File Name   :	C:\stunts2\game.exe
; Format      :	MS-DOS executable (EXE)
; Base Address:	1000h Range: 10000h-483D0h Loaded length: 30D40h
; Entry	Point :	2CC5:12
; OS type	  :  MS	DOS
; Application type:  Executable	16bit

		.686p
		.mmx
		.model large

; ===========================================================================

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int p_argc, const char **p_argv, const char *envp)
_main		proc far		; CODE XREF: start+97P

var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_4		= word ptr -4
var_2		= word ptr -2
p_argc		= word ptr  6
p_argv		= dword	ptr  8
envp		= dword	ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 12h
		push	di
		push	si
		push	word ptr [bp+p_argv]
		push	[bp+p_argc]
		call	sub_39E56
		add	sp, 4
		call	sub_19EE8
		sub	si, si

loc_1001D:				; CODE XREF: _main+82j
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_C], ax
		mov	ax, 1Dh
		sub	ax, si
		mov	[bp+var_E], ax
		mov	ax, 1Eh
		imul	[bp+var_E]
		mov	bx, [bp+var_C]
		mov	[bx-5A30h], ax
		mov	ax, 1Eh
		imul	si
		mov	bx, [bp+var_C]
		mov	[bx-73C4h], ax
		mov	ax, [bp+var_E]
		mov	cl, 0Ah
		shl	ax, cl
		mov	[bp+var_10], ax
		mov	bx, [bp+var_C]
		mov	[bx-7E84h], ax
		mov	bx, [bp+var_C]
		mov	ax, [bp+var_10]
		add	ah, 2
		mov	[bx-55EAh], ax
		mov	ax, si
		shl	ax, cl
		mov	[bp+var_12], ax
		mov	bx, [bp+var_C]
		mov	[bx-6CE2h], ax
		mov	bx, [bp+var_C]
		mov	ax, [bp+var_12]
		add	ah, 2
		mov	[bx+750Eh], ax
		inc	si
		cmp	si, 1Eh
		jl	short loc_1001D
		sub	si, si

loc_10086:				; CODE XREF: _main+ABj
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_12], ax
		mov	bx, ax
		mov	ax, si
		mov	cl, 0Ah
		shl	ax, cl
		mov	[bx+7556h], ax
		mov	bx, [bp+var_12]
		mov	ax, si
		shl	ax, cl
		add	ah, 2
		mov	[bx-599Eh], ax
		inc	si
		cmp	si, 1Eh
		jl	short loc_10086
		mov	ax, 42h	; 'B'
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	word_44CEC, ax
		mov	word_44CEE, dx
		mov	ax, 47h	; 'G'
		push	ax		; char *
		sub	ax, ax
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_454C6, ax
		mov	word_454C8, dx
		mov	ax, 53h	; 'S'
		push	ax		; char *
		sub	ax, ax
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_44D22, ax
		mov	word_44D24, dx
		call	sub_298A8
		call	sub_24D64
		mov	si, 6BF3h
		mov	ax, si
		cwd
		push	dx
		push	ax
		mov	ax, 5Dh	; ']'
		push	ax
		call	sub_3A460
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	word ptr dword_42D22, ax
		mov	word ptr dword_42D22+2,	dx
		add	[bp+var_4], 70Ah
		mov	ax, [bp+var_4]
		mov	word ptr dword_438E8, ax
		mov	word ptr dword_438E8+2,	dx
		add	[bp+var_4], 70Ah
		mov	ax, [bp+var_4]
		mov	word ptr dword_43942, ax
		mov	word ptr dword_43942+2,	dx
		add	[bp+var_4], 70Ah
		mov	ax, [bp+var_4]
		mov	word ptr dword_44D3E, ax
		mov	word ptr dword_44D3E+2,	dx
		add	[bp+var_4], 80h	; 'Ä'
		mov	ax, [bp+var_4]
		mov	word ptr dword_44D4A, ax
		mov	word ptr dword_44D4A+2,	dx
		add	[bp+var_4], 80h	; 'Ä'
		mov	ax, [bp+var_4]
		mov	word_454D0, ax
		mov	word_454D2, dx
		add	[bp+var_4], 80h	; 'Ä'
		mov	ax, [bp+var_4]
		mov	word_454B4, ax
		mov	word_454B6, dx
		add	[bp+var_4], 80h	; 'Ä'
		mov	ax, [bp+var_4]
		mov	word_45DB4, ax
		mov	word_45DB6, dx
		add	[bp+var_4], 60h	; '`'
		mov	ax, [bp+var_4]
		mov	word_449DC, ax
		mov	word_449DE, dx
		add	[bp+var_4], 180h
		mov	ax, [bp+var_4]
		mov	word ptr dword_42A30, ax
		mov	word ptr dword_42A30+2,	dx
		add	[bp+var_4], 120h
		mov	ax, [bp+var_4]
		mov	word ptr dword_44CE6, ax
		mov	word ptr dword_44CE6+2,	dx
		add	[bp+var_4], 16Ch
		mov	ax, [bp+var_4]
		mov	word ptr dword_449EE, ax
		mov	word ptr dword_449EE+2,	dx
		add	[bp+var_4], 0F0h ; ''
		mov	ax, [bp+var_4]
		mov	word ptr dword_46162, ax
		mov	word ptr dword_46162+2,	dx
		add	[bp+var_4], 1Ah
		mov	ax, [bp+var_4]
		mov	word ptr dword_44D42, ax
		mov	word ptr dword_44D42+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_454BC, ax
		mov	word ptr dword_454BC+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_4562E, ax
		mov	word ptr dword_4562E+2,	dx
		add	[bp+var_4], 2EE0h
		mov	ax, [bp+var_4]
		mov	word ptr dword_449D4, ax
		mov	word ptr dword_449D4+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_454D6, ax
		mov	word ptr dword_454D6+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_45E56, ax
		mov	word ptr dword_45E56+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_443F6, ax
		mov	word ptr dword_443F6+2,	dx
		add	[bp+var_4], 7ACh
		mov	ax, [bp+var_4]
		mov	word ptr dword_4563C, ax
		mov	word ptr dword_4563C+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word ptr dword_459DA, ax
		mov	word ptr dword_459DA+2,	dx
		add	[bp+var_4], 385h
		mov	ax, [bp+var_4]
		mov	word_463DC, ax
		mov	word_463DE, dx
		add	[bp+var_4], 30h	; '0'
		call	sub_22532
		mov	ax, 18Eh
		push	ax
		call	sub_19E21
		add	sp, 2
		mov	ax, 66h	; 'f'
		push	ax
		mov	ax, 9241h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		sub	si, si
		mov	ax, 1
		push	ax
		call	sub_289E2
		add	sp, 2
		mov	ax, 1
		push	ax
		call	sub_289E2
		add	sp, 2
		call	sub_28DB6
		mov	byte_3B8F8, 0
		mov	byte_45E1A, 1
		push	cs
		call	near ptr sub_146E4
		mov	si, 1
		jmp	loc_103F1
; ---------------------------------------------------------------------------
		nop

loc_102B8:				; CODE XREF: _main+490j
		sub	ax, ax

loc_102BA:				; CODE XREF: _main+379j
		push	ax
		push	cs
		call	near ptr sub_110D0
		add	sp, 2
		jmp	loc_10440
; ---------------------------------------------------------------------------
		nop

loc_102C6:				; CODE XREF: _main+488j
		call	sub_28EE4
		call	sub_296AA
		push	cs
		call	near ptr sub_1293C
		jmp	loc_10440
; ---------------------------------------------------------------------------
		nop

loc_102D8:				; CODE XREF: _main+498j
		call	sub_28EE4
		call	sub_296AA
		push	cs
		call	near ptr sub_12F4A
		or	al, al
		jnz	short loc_102ED
		jmp	loc_10440
; ---------------------------------------------------------------------------

loc_102ED:				; CODE XREF: _main+2E8j
		mov	[bp+var_A], 1
		jmp	short loc_1031C
; ---------------------------------------------------------------------------
		nop

loc_102F4:				; CODE XREF: _main+480j
		call	sub_28EE4
		call	sub_296AA
		sub	ax, ax
		push	ax
		mov	ax, 9239h
		push	ax
		mov	ax, 9238h
		push	ax
		mov	ax, 9234h
		push	ax
		push	cs
		call	near ptr sub_11C42
		add	sp, 8
		jmp	loc_10440
; ---------------------------------------------------------------------------
		nop

loc_10318:				; CODE XREF: _main+478j
		mov	[bp+var_A], 0

loc_1031C:				; CODE XREF: _main+2F1j
		push	si
		push	di
		mov	di, 9DC0h
		mov	si, 9234h
		push	ds
		pop	es
		assume es:dseg
		mov	cx, 0Dh
		repne movsw
		pop	di
		pop	si
		sub	si, si

loc_1032F:				; CODE XREF: _main+342j
		les	bx, dword_44D42
		assume es:nothing
		mov	al, es:[bx+si]
		les	bx, dword_443F6
		mov	es:[bx+si], al
		inc	si
		cmp	si, 70Ah
		jl	short loc_1032F
		sub	si, si

loc_10346:				; CODE XREF: _main+364j
		les	bx, dword_443F6
		mov	al, [si+9Ch]
		mov	es:[bx+si+70Ah], al
		les	bx, dword_443F6
		mov	al, [si+0EEh]
		mov	es:[bx+si+75Bh], al
		inc	si
		cmp	si, 51h	; 'Q'
		jl	short loc_10346
		cmp	byte_44AE2, 0
		jnz	short loc_103DA
		call	sub_206D4
		or	al, al
		jz	short loc_1037C
		mov	ax, 1
		jmp	loc_102BA
; ---------------------------------------------------------------------------

loc_1037C:				; CODE XREF: _main+374j
		call	sub_3A25C
		cmp	byte_45E1A, 0
		jnz	short loc_1039E
		call	sub_2998E
		cwd
		mov	cx, 14h
		idiv	cx
		mov	ax, dx
		cbw
		push	ax
		push	cs
		call	near ptr sub_144CF
		add	sp, 2

loc_1039E:				; CODE XREF: _main+386j _main+3E8j
		call	sub_29858
		mov	ax, 5780h
		cwd
		push	dx
		push	ax
		mov	ax, 90h	; 'ê'
		push	ax
		call	sub_3A460
		add	sp, 6
		mov	word_45A20, ax
		mov	word_45A22, dx
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2
		cmp	[bp+var_A], 0
		jnz	short loc_103D1
		jmp	loc_104A6
; ---------------------------------------------------------------------------

loc_103D1:				; CODE XREF: _main+3CCj
		mov	byte_43966, 0
		jmp	loc_104AC
; ---------------------------------------------------------------------------
		nop

loc_103DA:				; CODE XREF: _main+36Bj
		mov	ax, 88h	; 'à'
		push	ax
		call	sub_2FFD4
		add	sp, 2
		or	ax, ax
		jnz	short loc_1039E

loc_103EA:				; CODE XREF: _main+471j
		call	sub_29858

loc_103EF:				; CODE XREF: _main:loc_10536j
					; _main+572j
		sub	si, si

loc_103F1:				; CODE XREF: _main+2B4j
		mov	ax, 2
		push	ax
		call	sub_2A1A6
		add	sp, 2
		or	si, si
		jz	short loc_1042D
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 6Eh	; 'n'
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		push	word ptr dword_44D42+2
		push	word ptr dword_44D42
		mov	ax, 95F8h
		push	ax
		call	sub_30AEF
		add	sp, 6

loc_1042D:				; CODE XREF: _main+3FFj
		mov	byte_44AE2, 0
		push	cs
		call	near ptr sub_1059A
		mov	di, ax
		cmp	di, 1Bh
		jnz	short loc_10440
		jmp	loc_1053A
; ---------------------------------------------------------------------------

loc_10440:				; CODE XREF: _main+2C2j _main+2D4j ...
		mov	ax, 2
		push	ax
		call	sub_2A1A6
		add	sp, 2
		cmp	byte_3B8F3, 0
		jnz	short loc_10467
		mov	ax, 73h	; 's'
		push	ax
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 7Fh	; ''
		push	ax		; char *
		call	sub_297FC
		add	sp, 6

loc_10467:				; CODE XREF: _main+451j
		push	cs
		call	near ptr sub_10F3C
		cbw
		cmp	ax, 0FFFFh
		jnz	short loc_10474
		jmp	loc_103EA
; ---------------------------------------------------------------------------

loc_10474:				; CODE XREF: _main+46Fj
		or	ax, ax
		jnz	short loc_1047B
		jmp	loc_10318
; ---------------------------------------------------------------------------

loc_1047B:				; CODE XREF: _main+476j
		cmp	ax, 1
		jnz	short loc_10483
		jmp	loc_102F4
; ---------------------------------------------------------------------------

loc_10483:				; CODE XREF: _main+47Ej
		cmp	ax, 2
		jnz	short loc_1048B
		jmp	loc_102C6
; ---------------------------------------------------------------------------

loc_1048B:				; CODE XREF: _main+486j
		cmp	ax, 3
		jnz	short loc_10493
		jmp	loc_102B8
; ---------------------------------------------------------------------------

loc_10493:				; CODE XREF: _main+48Ej
		cmp	ax, 4
		jnz	short loc_1049B
		jmp	loc_102D8
; ---------------------------------------------------------------------------

loc_1049B:				; CODE XREF: _main+496j
		jmp	short loc_10440
; ---------------------------------------------------------------------------
		nop

loc_1049E:				; CODE XREF: _main+4CBj
		mov	byte_43966, 4
		jmp	short loc_104AC
; ---------------------------------------------------------------------------
		nop

loc_104A6:				; CODE XREF: _main+3CEj _main+4D0j
		mov	word_449BC, 0

loc_104AC:				; CODE XREF: _main+3D6j _main+4A3j
		call	sub_296AA
		call	sub_21B7A
		cmp	byte_44AE2, 0
		jnz	short loc_104D2
		cmp	byte_43966, 0
		jz	short loc_104D2
		push	cs
		call	near ptr sub_13178
		cbw
		or	ax, ax
		jz	short loc_1049E
		cmp	ax, 1
		jz	short loc_104A6

loc_104D2:				; CODE XREF: _main+4BBj _main+4C2j
		push	si
		push	di
		mov	di, 9234h
		mov	si, 9DC0h
		push	ds
		pop	es
		assume es:dseg
		mov	cx, 0Dh
		repne movsw
		pop	di
		pop	si
		sub	si, si

loc_104E5:				; CODE XREF: _main+4F8j
		les	bx, dword_443F6
		assume es:nothing
		mov	al, es:[bx+si]
		les	bx, dword_44D42
		mov	es:[bx+si], al
		inc	si
		cmp	si, 70Ah
		jl	short loc_104E5
		sub	si, si

loc_104FC:				; CODE XREF: _main+51Aj
		les	bx, dword_443F6
		mov	al, es:[bx+si+70Ah]
		mov	[si+9Ch], al
		les	bx, dword_443F6
		mov	al, es:[bx+si+75Bh]
		mov	[si+0EEh], al
		inc	si
		cmp	si, 51h	; 'Q'
		jl	short loc_104FC
		push	word_45A22
		push	word_45A20
		call	sub_31641
		add	sp, 4
		cmp	byte_44AE2, 0
		jnz	short loc_10536
		jmp	loc_10440
; ---------------------------------------------------------------------------

loc_10536:				; CODE XREF: _main+531j
		jmp	loc_103EF
; ---------------------------------------------------------------------------
		nop

loc_1053A:				; CODE XREF: _main+43Dj
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 94h	; 'î'
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		cmp	ax, 1
		jge	short loc_10575
		jmp	loc_103EF
; ---------------------------------------------------------------------------

loc_10575:				; CODE XREF: _main+570j
		call	sub_28DB6
		call	sub_30268
		call	sub_37A64
		call	sub_30883
		call	sub_36AF4
		call	sub_30120
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_main		endp

; ---------------------------------------------------------------------------
		nop

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1059A	proc far		; CODE XREF: _main+433p
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	ax, 1A2h
		push	ax
		mov	ax, 1A7h
		push	ax
		mov	ax, 1AEh
		push	ax		; char *
		call	sub_297FC
		add	sp, 6
		mov	ax, 1B7h
		push	ax		; char *
		mov	ax, 2
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_45E12, ax
		mov	word_45E14, dx
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		push	cs
		call	near ptr sub_1069C
		mov	si, ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		push	word_45E14
		push	word_45E12
		call	sub_3147C
		add	sp, 4
		or	si, si
		jnz	short loc_1068E
		call	sub_1D93C
		cbw
		mov	si, ax
		or	si, si
		jnz	short loc_1068E
		mov	ax, 1BEh
		push	ax		; char *
		mov	ax, 2
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_45E12, ax
		mov	word_45E14, dx
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		call	sub_28F7C
		sub	ax, ax
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		push	cs
		call	near ptr sub_10786
		cbw
		mov	si, ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		push	word_45E14
		push	word_45E12
		call	sub_3147C
		add	sp, 4

loc_1068E:				; CODE XREF: sub_1059A+75j
					; sub_1059A+81j
		call	sub_29858
		mov	ax, si
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_1059A	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1069C	proc far		; CODE XREF: sub_1059A+4Ep
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		call	sub_28DB6
		call	sub_28F4E
		call	sub_28D9E
		call	sub_28F7C
		mov	ax, 1C5h
		push	ax
		push	word_45E14
		push	word_45E12
		call	sub_30F9D
		add	sp, 6
		mov	bx, ax
		mov	es, dx
		cmp	word ptr es:[bx+0Ah], 0
		jz	short loc_106DE
		mov	word_44382, 0A0h ; '†'
		jmp	short loc_106E4
; ---------------------------------------------------------------------------

loc_106DE:				; CODE XREF: sub_1069C+38j
		mov	word_44382, 0B4h ; '¥'

loc_106E4:				; CODE XREF: sub_1069C+40j
		mov	ax, 1CAh
		push	ax
		push	word_45E14
		push	word_45E12
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D4E
		add	sp, 4
		mov	ax, 0FFFFh
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	si, ax
		or	si, si
		jnz	short loc_1077F
		mov	ax, 190h
		push	ax
		call	sub_2913A
		add	sp, 2
		mov	si, ax
		or	si, si
		jnz	short loc_1077F
		call	sub_28F7C
		mov	word_44382, 0B4h ; '¥'
		mov	ax, 1CFh
		push	ax
		push	word_45E14
		push	word_45E12
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D4E
		add	sp, 4
		mov	ax, 0FFFFh
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	si, ax
		or	si, si
		jnz	short loc_1077F
		mov	ax, 190h
		push	ax
		call	sub_2913A
		add	sp, 2
		mov	si, ax

loc_1077F:				; CODE XREF: sub_1069C+7Ej
					; sub_1069C+90j ...
		mov	ax, si
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_1069C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10786	proc far		; CODE XREF: sub_1059A+CEp

var_46		= word ptr -46h
var_44		= word ptr -44h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 46h
		push	di
		push	si
		mov	ax, 1D4h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_3A], ax
		mov	[bp+var_38], dx
		lea	ax, [bp+var_34]
		push	ax
		mov	ax, 1D9h
		push	ax
		push	word_45E14
		push	word_45E12
		call	sub_367B2
		add	sp, 8
		mov	word_44382, 96h	; 'ñ'
		call	sub_28F7C
		les	bx, [bp+var_30]
		mov	ax, es:[bx+8]
		mov	[bp+var_2], ax
		mov	ax, es:[bx+0Ah]
		mov	[bp+var_4], ax
		mov	ax, es:[bx]
		imul	word_44AE4
		mov	[bp+var_3E], ax
		mov	ax, es:[bx+2]
		mov	[bp+var_44], ax
		mov	ax, 206h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407DA
		push	word_407D8
		sub	ax, ax
		push	ax
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 20Ah
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 0Ch
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 20Fh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 14h
		push	ax
		mov	ax, 68h	; 'h'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 214h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407DE
		push	word_407DC
		mov	ax, 20h	; ' '
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 218h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 2Ch	; ','
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 21Dh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 34h	; '4'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 222h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 227h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 44h	; 'D'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 22Ch
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 4Ch	; 'L'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 231h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407EA
		push	word_407E8
		mov	ax, 5Ch	; '\'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 235h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 68h	; 'h'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 23Ah
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 70h	; 'p'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 23Fh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 244h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407E2
		push	word_407E0
		mov	ax, 20h	; ' '
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 248h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 2Ch	; ','
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 24Dh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407E2
		push	word_407E0
		mov	ax, 38h	; '8'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 251h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 256h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 48h	; 'H'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 25Bh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407E6
		push	word_407E4
		mov	ax, 54h	; 'T'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 25Fh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 60h	; '`'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 264h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 68h	; 'h'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 269h
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 70h	; 'p'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 26Eh
		push	ax
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		push	word_407D6
		push	word_407D4
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_28A78
		add	sp, 4
		mov	ax, 0FFFFh
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		call	sub_28F3C
		call	sub_2A230
		mov	si, 14Ah

loc_10D77:				; CODE XREF: sub_10786+661j
		call	sub_2A230
		mov	[bp+var_40], ax
		shl	ax, 1
		sub	si, ax
		cmp	[bp+var_2], si
		jle	short loc_10DA0

loc_10D88:				; CODE XREF: sub_10786+663j
		les	bx, [bp+var_34]
		mov	ax, es:[bx+0Ah]
		mov	[bp+var_4], ax
		mov	[bp+var_36], 0
		sub	si, si
		mov	di, 2
		jmp	loc_10E83
; ---------------------------------------------------------------------------
		align 2

loc_10DA0:				; CODE XREF: sub_10786+600j
		call	sub_28DB6
		push	[bp+var_4]
		push	si
		push	word ptr [bp+var_30+2]
		push	word ptr [bp+var_30]
		call	sub_33BBC
		add	sp, 8
		sub	ax, ax
		push	ax
		push	[bp+var_44]
		mov	ax, 20h	; ' '
		push	ax
		push	[bp+var_4]
		mov	ax, [bp+var_3E]
		add	ax, si
		push	ax
		call	sub_33578
		add	sp, 0Ah
		call	sub_28D9E
		push	[bp+var_40]
		call	sub_289E2
		add	sp, 2
		mov	[bp+var_46], ax
		or	ax, ax
		jz	short loc_10D77
		jmp	short loc_10D88
; ---------------------------------------------------------------------------
		align 2

loc_10DEC:				; CODE XREF: sub_10786+708j
		call	sub_28F6A
		mov	ax, 0C8h ; '»'
		push	ax
		push	[bp+var_4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-32h]
		push	word ptr [bx-34h]
		call	sub_33D4E
		add	sp, 4
		call	sub_28F3C
		mov	ax, 0C8h ; '»'
		push	ax
		push	[bp+var_4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		call	sub_28D9E
		add	[bp+var_36], 5
		jmp	short loc_10E7D
; ---------------------------------------------------------------------------

loc_10E66:				; CODE XREF: sub_10786+6FAj
		call	sub_2A230
		mov	[bp+var_40], ax
		push	ax
		call	sub_289E2
		add	sp, 2
		mov	[bp+var_46], ax
		add	si, [bp+var_40]

loc_10E7D:				; CODE XREF: sub_10786+6DEj
		cmp	[bp+var_36], si
		jg	short loc_10E66
		inc	di

loc_10E83:				; CODE XREF: sub_10786+616j
		cmp	di, 0Ah
		jge	short loc_10E91
		cmp	[bp+var_46], 0
		jnz	short loc_10E91
		jmp	loc_10DEC
; ---------------------------------------------------------------------------

loc_10E91:				; CODE XREF: sub_10786+700j
					; sub_10786+706j
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3477E
		add	sp, 4
		call	sub_28F6A
		mov	ax, 0C8h ; '»'
		push	ax
		push	[bp+var_4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		push	word ptr [bp+var_34+2]
		push	word ptr [bp+var_34]
		call	sub_33D4E
		add	sp, 4
		push	[bp+var_A]
		push	[bp+var_C]
		call	sub_33D4E
		add	sp, 4
		sub	ax, ax
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_46], ax
		or	ax, ax
		jnz	short loc_10F2B
		mov	ax, 1F4h
		push	ax
		call	sub_2913A
		add	sp, 2
		or	ax, ax
		jz	short loc_10F34

loc_10F2B:				; CODE XREF: sub_10786+793j
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_10F34:				; CODE XREF: sub_10786+7A3j
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_10786	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10F3C	proc far		; CODE XREF: _main+468p

var_10		= byte ptr -10h
var_E		= byte ptr -0Eh
var_C		= byte ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 10h
		mov	[bp+var_6], 0FFh
		mov	[bp+var_10], 0
		mov	[bp+var_C], 0FFh
		call	sub_296AA
		mov	word_44382, 0B4h ; '¥'
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		mov	ax, 273h
		push	ax		; char *
		mov	ax, 2
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		call	sub_28F6A
		mov	ax, 27Ah
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D4E
		add	sp, 4
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_3147C
		add	sp, 4

loc_10FB9:				; CODE XREF: sub_10F3C+13Cj
					; sub_10F3C+15Bj ...
		mov	al, [bp+var_C]
		cmp	[bp+var_10], al
		jz	short loc_10FEF
		mov	al, [bp+var_10]
		mov	[bp+var_C], al
		call	sub_28F6A
		mov	al, [bp+var_6]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_6], 0FEh ; '˛'
		call	sub_28F3C
		call	sub_29772

loc_10FEF:				; CODE XREF: sub_10F3C+83j
		push	word_407D0
		push	word_407CE
		mov	ax, 2AAh
		push	ax
		mov	ax, 2A0h
		push	ax
		mov	ax, 296h
		push	ax
		mov	ax, 28Ch
		push	ax
		mov	al, [bp+var_10]
		cbw
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_8], ax
		push	ax
		call	sub_287C4
		add	sp, 2
		mov	[bp+var_A], ax
		mov	ax, 2AAh
		push	ax
		mov	ax, 2A0h
		push	ax
		mov	ax, 296h
		push	ax
		mov	ax, 28Ch
		push	ax
		mov	ax, 5
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_E], al
		cmp	al, 0FFh
		jz	short loc_11049
		mov	[bp+var_10], al

loc_11049:				; CODE XREF: sub_10F3C+108j
		mov	ax, [bp+var_8]
		add	word_449F2, ax
		cmp	word_449F2, 1770h
		jle	short loc_11062
		mov	word_449F2, 0
		inc	byte_44AE2

loc_11062:				; CODE XREF: sub_10F3C+11Aj
		cmp	byte_44AE2, 0
		jz	short loc_11072
		mov	[bp+var_10], 0
		mov	[bp+var_A], 0Dh

loc_11072:				; CODE XREF: sub_10F3C+12Bj
		cmp	[bp+var_A], 0
		jnz	short loc_1107B
		jmp	loc_10FB9
; ---------------------------------------------------------------------------

loc_1107B:				; CODE XREF: sub_10F3C+13Aj
		mov	ax, [bp+var_A]
		cmp	ax, 0Dh
		jz	short loc_110BA
		cmp	ax, 1Bh
		jz	short loc_110B6
		cmp	ax, 20h	; ' '
		jz	short loc_110BA
		cmp	ax, 4B00h
		jz	short loc_1109A
		cmp	ax, 4D00h
		jz	short loc_110AA
		jmp	loc_10FB9
; ---------------------------------------------------------------------------

loc_1109A:				; CODE XREF: sub_10F3C+154j
		mov	al, [bp+var_10]
		cbw
		mov	bx, ax
		mov	al, [bx+280h]

loc_110A4:				; CODE XREF: sub_10F3C+178j
		mov	[bp+var_10], al
		jmp	loc_10FB9
; ---------------------------------------------------------------------------

loc_110AA:				; CODE XREF: sub_10F3C+159j
		mov	al, [bp+var_10]
		cbw
		mov	bx, ax
		mov	al, [bx+286h]
		jmp	short loc_110A4
; ---------------------------------------------------------------------------

loc_110B6:				; CODE XREF: sub_10F3C+14Aj
		mov	[bp+var_10], 0FFh

loc_110BA:				; CODE XREF: sub_10F3C+145j
					; sub_10F3C+14Fj
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		mov	al, [bp+var_10]
		cbw
		mov	sp, bp
		pop	bp
		retf
sub_10F3C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_110D0	proc far		; CODE XREF: _main+2BCp

var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_12		= byte ptr -12h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= byte ptr -8
var_7		= byte ptr -7
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	di
		push	si
		mov	ax, 3
		push	ax
		call	sub_2A1A6
		add	sp, 2
		cmp	[bp+arg_0], 0
		jz	short loc_110ED
		jmp	loc_1156A
; ---------------------------------------------------------------------------

loc_110ED:				; CODE XREF: sub_110D0+18j
					; sub_110D0+47Fj ...
		mov	[bp+var_6], 0FFh
		mov	[bp+var_16], 0
		mov	[bp+var_12], 0FFh
		call	sub_296AA
		mov	word_44382, 9Bh	; 'õ'
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		les	bx, dword_44D42
		mov	al, es:[bx+384h]
		sub	ah, ah
		push	ax
		call	sub_1D7A2
		add	sp, 2
		call	sub_1FE94
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		mov	ax, 28h	; '('
		push	ax
		push	ax
		call	sub_322F3
		add	sp, 8
		mov	ax, 0FFFEh
		push	ax
		call	sub_16B02
		add	sp, 2
		call	sub_28F6A
		push	word_44A88
		call	sub_332C0
		add	sp, 2
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_1CBDC
		call	sub_1FF5E
		call	sub_1D8B4
		call	sub_28F6A
		mov	ax, 2B4h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 9241h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 2B6h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 6
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_11588
		add	sp, 2
		or	al, al
		jz	short loc_111F9
		jmp	loc_112E5
; ---------------------------------------------------------------------------

loc_111F9:				; CODE XREF: sub_110D0+124j
		mov	ax, 34h	; '4'
		imul	word_46170
		mov	di, ax
		les	bx, dword_44CE6
		cmp	word ptr es:[bx+di+32h], 0FFFFh
		jnz	short loc_11210
		jmp	loc_112E5
; ---------------------------------------------------------------------------

loc_11210:				; CODE XREF: sub_110D0+13Bj
		mov	ax, 2B8h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 12h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		lea	ax, [bp+var_A]
		push	ax
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_118D4
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		call	sub_34B0C
		add	sp, 4
		mov	ax, 1Eh
		push	ax
		mov	ax, 10h
		push	ax
		mov	al, [bp+var_A]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 1Eh
		push	ax
		mov	ax, 78h	; 'x'
		push	ax
		mov	al, [bp+var_9]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 1Eh
		push	ax
		mov	ax, 0E0h ; '‡'
		push	ax
		mov	al, [bp+var_8]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 1Eh
		push	ax
		mov	ax, 110h
		push	ax
		mov	al, [bp+var_7]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		call	sub_298A8

loc_112E5:				; CODE XREF: sub_110D0+126j
					; sub_110D0+13Dj
		mov	ax, 2BCh
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 18h
		push	ax
		mov	ax, 5Eh	; '^'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 11h
		push	ax
		mov	ax, 2C2h
		push	ax
		push	dx
		push	[bp+var_4]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 18h
		push	ax
		mov	ax, 5Eh	; '^'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 71h	; 'q'
		push	ax
		mov	ax, 2C6h
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 18h
		push	ax
		mov	ax, 5Eh	; '^'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0D1h ; '—'
		push	ax
		mov	ax, 2CAh
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28A78
		add	sp, 4

loc_113B4:				; CODE XREF: sub_110D0+39Dj
					; sub_110D0+3BCj ...
		mov	al, [bp+var_12]
		cmp	[bp+var_16], al
		jz	short loc_113E5
		mov	al, [bp+var_16]
		mov	[bp+var_12], al
		mov	al, [bp+var_6]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_6], 0FEh ; '˛'
		call	sub_28F3C
		call	sub_29772

loc_113E5:				; CODE XREF: sub_110D0+2EAj
		push	word_407D0
		push	word_407CE
		mov	ax, 2EEh
		push	ax
		mov	ax, 2E8h
		push	ax
		mov	ax, 2E2h
		push	ax
		mov	ax, 2DCh
		push	ax
		mov	al, [bp+var_16]
		cbw
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_C], ax
		add	word_449F2, ax
		cmp	word_449F2, 1770h
		jle	short loc_11423
		mov	word_449F2, 0
		inc	byte_44AE2

loc_11423:				; CODE XREF: sub_110D0+347j
		push	[bp+var_C]
		call	sub_287C4
		add	sp, 2
		mov	[bp+var_E], ax
		mov	ax, 2EEh
		push	ax
		mov	ax, 2E8h
		push	ax
		mov	ax, 2E2h
		push	ax
		mov	ax, 2DCh
		push	ax
		mov	ax, 3
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_14], al
		cmp	al, 0FFh
		jz	short loc_11457
		mov	[bp+var_16], al

loc_11457:				; CODE XREF: sub_110D0+382j
		cmp	byte_44AE2, 0
		jz	short loc_11467
		mov	[bp+var_16], 2
		mov	[bp+var_E], 0Dh

loc_11467:				; CODE XREF: sub_110D0+38Cj
		cmp	[bp+var_E], 0
		jnz	short loc_11470
		jmp	loc_113B4
; ---------------------------------------------------------------------------

loc_11470:				; CODE XREF: sub_110D0+39Bj
		mov	ax, [bp+var_E]
		cmp	ax, 0Dh
		jz	short loc_114BC
		cmp	ax, 1Bh
		jz	short loc_114B8
		cmp	ax, 20h	; ' '
		jz	short loc_114BC
		cmp	ax, 4B00h
		jz	short loc_11490
		cmp	ax, 4D00h
		jz	short loc_114A4
		jmp	loc_113B4
; ---------------------------------------------------------------------------
		align 2

loc_11490:				; CODE XREF: sub_110D0+3B5j
		cmp	[bp+var_16], 0
		jz	short loc_1149C
		dec	[bp+var_16]
		jmp	loc_113B4
; ---------------------------------------------------------------------------

loc_1149C:				; CODE XREF: sub_110D0+3C4j
		mov	[bp+var_16], 2
		jmp	loc_113B4
; ---------------------------------------------------------------------------
		align 2

loc_114A4:				; CODE XREF: sub_110D0+3BAj
		cmp	[bp+var_16], 2
		jge	short loc_114B0
		inc	[bp+var_16]
		jmp	loc_113B4
; ---------------------------------------------------------------------------

loc_114B0:				; CODE XREF: sub_110D0+3D8j
		mov	[bp+var_16], 0
		jmp	loc_113B4
; ---------------------------------------------------------------------------
		align 2

loc_114B8:				; CODE XREF: sub_110D0+3ABj
		mov	[bp+var_16], 0FFh

loc_114BC:				; CODE XREF: sub_110D0+3A6j
					; sub_110D0+3B0j
		mov	al, [bp+var_16]
		cbw
		or	ax, ax
		jz	short loc_114E2
		cmp	ax, 1
		jnz	short loc_114CC
		jmp	loc_1155A
; ---------------------------------------------------------------------------

loc_114CC:				; CODE XREF: sub_110D0+3F7j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_114E2:				; CODE XREF: sub_110D0+3F2j
		mov	ax, 2CEh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 2D2h
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_27ED4
		add	sp, 0Ah
		cbw
		mov	si, ax
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 2D7h
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		or	si, si
		jz	short loc_11552
		push	word ptr dword_44D42+2
		push	word ptr dword_44D42
		mov	ax, 95F8h
		push	ax
		call	sub_30AEF
		add	sp, 6
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		jmp	loc_110ED
; ---------------------------------------------------------------------------

loc_11552:				; CODE XREF: sub_110D0+459j
		mov	[bp+var_12], 0FFh
		jmp	loc_113B4
; ---------------------------------------------------------------------------
		align 2

loc_1155A:				; CODE XREF: sub_110D0+3F9j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4

loc_1156A:				; CODE XREF: sub_110D0+1Aj
		call	sub_28EE4
		call	sub_296AA
		mov	word_44382, 82h	; 'Ç'
		call	sub_206D4
		call	sub_2A2BC
		jmp	loc_110ED
sub_110D0	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11588	proc far		; CODE XREF: sub_110D0+11Cp
					; sub_13178+84Cp ...

var_3A		= word ptr -3Ah
var_38		= byte ptr -38h
var_27		= byte ptr -27h
var_F		= byte ptr -0Fh
var_E		= byte ptr -0Eh
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 3Ah
		push	di
		push	si
		mov	byte_449CE, 0FFh
		mov	[bp+var_3A], 0

loc_1159A:				; CODE XREF: sub_11588+25j
		mov	bx, [bp+var_3A]
		shl	bx, 1
		mov	ax, [bp+var_3A]
		mov	[bx-5600h], ax
		inc	[bp+var_3A]
		cmp	[bp+var_3A], 7
		jl	short loc_1159A
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 2F4h
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		cmp	[bp+arg_0], 0
		jnz	short loc_1160A
		mov	byte_3B8FB, 1
		push	word ptr dword_44CE6+2
		push	word ptr dword_44CE6
		mov	ax, 95F8h
		push	ax
		mov	ax, 0Ah
		push	ax
		call	sub_29A86
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	byte_3B8FB, 0
		or	ax, dx
		jnz	short loc_11602

loc_115F9:				; CODE XREF: sub_11588:loc_1168Bj
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_11602:				; CODE XREF: sub_11588+6Fj
					; sub_11588+100j
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_1160A:				; CODE XREF: sub_11588+43j
		mov	ax, 2F9h
		push	ax
		lea	ax, [bp+var_38]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 30Eh
		push	ax
		lea	ax, [bp+var_27]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	[bp+var_F], 0
		mov	ax, 326h
		push	ax
		lea	ax, [bp+var_E]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	[bp+var_6], 0FFFFh
		mov	[bp+var_3A], 0

loc_11648:				; CODE XREF: sub_11588+DDj
		mov	ax, 34h	; '4'
		imul	[bp+var_3A]
		mov	bx, ax
		les	si, dword_44CE6
		lea	di, [bx+si]
		lea	si, [bp+var_38]
		mov	cx, 1Ah
		repne movsw
		inc	[bp+var_3A]
		cmp	[bp+var_3A], 7
		jl	short loc_11648
		mov	ax, 16Ch
		cwd
		push	dx
		push	ax
		push	word ptr dword_44CE6+2
		push	word ptr dword_44CE6
		mov	ax, 95F8h
		push	ax
		call	sub_3250B
		add	sp, 0Ah
		mov	[bp+var_3A], ax
		or	ax, ax
		jnz	short loc_1168B
		jmp	loc_11602
; ---------------------------------------------------------------------------

loc_1168B:				; CODE XREF: sub_11588+FEj
		jmp	loc_115F9
sub_11588	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1168E	proc far		; CODE XREF: sub_11A1C+F0p
					; sub_11A1C+173p ...

var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= byte ptr -4
var_3		= byte ptr -3
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		call	sub_28F6A
		mov	ax, 32Eh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 332h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 9241h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 335h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 5
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		mov	ax, 337h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 10h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		mov	ax, 33Bh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		mov	ax, 33Fh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 0E0h ; '‡'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		mov	ax, 343h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 110h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		mov	[bp+var_A], 0
		jmp	loc_118A0
; ---------------------------------------------------------------------------

loc_1181A:				; CODE XREF: sub_1168E+230j
		mov	[bp+var_2], 0

loc_1181F:				; CODE XREF: sub_1168E+239j
		mov	al, [bp+var_A]
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 19h
		mov	[bp+var_8], ax
		sub	ax, ax
		push	ax
		push	[bp+var_2]
		call	sub_34B0C
		add	sp, 4
		push	[bp+var_8]
		mov	ax, 10h
		push	ax
		mov	al, [bp+var_6]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		push	[bp+var_8]
		mov	ax, 78h	; 'x'
		push	ax
		mov	al, [bp+var_5]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		push	[bp+var_8]
		mov	ax, 0E0h ; '‡'
		push	ax
		mov	al, [bp+var_4]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		push	[bp+var_8]
		mov	ax, 110h
		push	ax
		mov	al, [bp+var_3]
		cbw
		add	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		inc	[bp+var_A]

loc_118A0:				; CODE XREF: sub_1168E+189j
		cmp	[bp+var_A], 7
		jge	short loc_118CA
		lea	ax, [bp+var_6]
		push	ax
		mov	al, [bp+var_A]
		cbw
		push	ax
		push	cs
		call	near ptr sub_118D4
		add	sp, 4
		mov	al, byte_449CE
		cmp	[bp+var_A], al
		jz	short loc_118C1
		jmp	loc_1181A
; ---------------------------------------------------------------------------

loc_118C1:				; CODE XREF: sub_1168E+22Ej
		mov	ax, word_40802
		mov	[bp+var_2], ax
		jmp	loc_1181F
; ---------------------------------------------------------------------------

loc_118CA:				; CODE XREF: sub_1168E+216j
		call	sub_298A8
		mov	sp, bp
		pop	bp
		retf
sub_1168E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_118D4	proc far		; CODE XREF: sub_110D0+19Ep
					; sub_1168E+222p

var_4A		= byte ptr -4Ah
var_39		= byte ptr -39h
var_21		= byte ptr -21h
var_20		= byte ptr -20h
var_18		= word ptr -18h
var_16		= byte ptr -16h
var_14		= word ptr -14h
var_12		= byte ptr -12h
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4Ah
		push	di
		push	si
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, 34h	; '4'
		imul	word ptr [bx-5600h]
		add	ax, word ptr dword_44CE6
		mov	dx, word ptr dword_44CE6+2
		push	si
		lea	di, [bp+var_4A]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 1Ah
		repne movsw
		pop	ds
		pop	si
		mov	bx, [bp+arg_2]
		mov	byte ptr [bx], 0
		lea	ax, [bp+var_4A]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		inc	al
		mov	[bp+var_16], al
		mov	bx, [bp+arg_2]
		mov	[bx+1],	al
		lea	ax, [bp+var_39]
		push	ax
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		inc	al
		add	[bp+var_16], al
		mov	bx, [bp+arg_2]
		mov	al, [bp+var_16]
		mov	[bx+2],	al
		mov	al, [bp+var_16]
		cbw
		mov	si, ax
		add	si, 0AC74h
		mov	byte ptr [si], 0
		cmp	[bp+var_21], 1
		jnz	short loc_11981
		mov	ax, 347h
		push	ax
		push	si		; char *
		call	_strcat
		add	sp, 4

loc_11981:				; CODE XREF: sub_118D4+9Ej
		lea	ax, [bp+var_20]
		push	ax
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		cmp	[bp+var_21], 1
		jnz	short loc_119AF
		mov	ax, 349h
		push	ax
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4

loc_119AF:				; CODE XREF: sub_118D4+C5j
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		inc	al
		add	[bp+var_16], al
		mov	ax, word_449D0
		mov	[bp+var_14], ax
		mov	word_449D0, 14h
		cmp	[bp+var_18], 0FFFFh
		jz	short loc_119E0
		mov	ax, 1
		push	ax
		push	[bp+var_18]
		jmp	short loc_119E7
; ---------------------------------------------------------------------------
		align 2

loc_119E0:				; CODE XREF: sub_118D4+100j
		mov	ax, 1
		push	ax		; int
		sub	ax, ax
		push	ax

loc_119E7:				; CODE XREF: sub_118D4+109j
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		mov	bx, [bp+arg_2]
		mov	al, [bp+var_16]
		mov	[bx+3],	al
		lea	ax, [bp+var_12]
		push	ax
		mov	al, [bp+var_16]
		cbw
		add	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, [bp+var_14]
		mov	word_449D0, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_118D4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11A1C	proc far		; CODE XREF: sub_13178+DC7p
					; sub_13178+DFCp

var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= byte ptr -38h
var_36		= byte ptr -36h
var_25		= byte ptr -25h
var_D		= byte ptr -0Dh
var_C		= byte ptr -0Ch
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= byte ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 3Ch
		push	di
		push	si
		cmp	word_449D0, 0Ah
		jnz	short loc_11A2E
		shl	[bp+arg_0], 1

loc_11A2E:				; CODE XREF: sub_11A1C+Dj
		les	bx, dword_44CE6
		mov	ax, [bp+arg_0]
		cmp	es:[bx+16Ah], ax
		ja	short loc_11A3F
		jmp	loc_11BAA
; ---------------------------------------------------------------------------

loc_11A3F:				; CODE XREF: sub_11A1C+1Ej
		mov	[bp+var_38], 0
		jmp	short loc_11A5D
; ---------------------------------------------------------------------------
		align 2

loc_11A46:				; CODE XREF: sub_11A1C+53j
		cmp	[bp+var_38], 7
		jge	short loc_11A71
		mov	al, [bp+var_38]
		cbw
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		mov	[bx-5600h], si
		inc	[bp+var_38]

loc_11A5D:				; CODE XREF: sub_11A1C+27j
		mov	al, 34h	; '4'
		imul	[bp+var_38]
		mov	di, ax
		les	bx, dword_44CE6
		mov	ax, [bp+arg_0]
		cmp	es:[bx+di+32h],	ax
		jbe	short loc_11A46

loc_11A71:				; CODE XREF: sub_11A1C+2Ej
		mov	al, [bp+var_38]
		mov	[bp+var_2], al
		mov	byte_449CE, al
		jmp	short loc_11A8D
; ---------------------------------------------------------------------------

loc_11A7C:				; CODE XREF: sub_11A1C+75j
		mov	al, [bp+var_38]
		cbw
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		mov	[bx-55FEh], si
		inc	[bp+var_38]

loc_11A8D:				; CODE XREF: sub_11A1C+5Ej
		cmp	[bp+var_38], 6
		jl	short loc_11A7C
		mov	al, [bp+var_2]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	word ptr [bx-5600h], 6
		mov	ax, [bp+arg_0]
		mov	[bp+var_4], ax
		mov	[bp+var_36], 0
		mov	ax, 8C14h
		push	ax
		lea	ax, [bp+var_25]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	al, [bp+arg_6]
		mov	[bp+var_D], al
		cmp	byte_449AA, 0
		jz	short loc_11AE6
		mov	ax, 0ACF4h
		push	ax
		lea	ax, [bp+var_C]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	[bp+var_A], 2Fh	; '/'
		mov	ax, 81F7h
		push	ax
		lea	ax, [bp+var_9]
		jmp	short loc_11AED
; ---------------------------------------------------------------------------
		align 2

loc_11AE6:				; CODE XREF: sub_11A1C+AAj
		mov	ax, 34Bh
		push	ax
		lea	ax, [bp+var_C]

loc_11AED:				; CODE XREF: sub_11A1C+C7j
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		les	bx, dword_44CE6
		lea	di, [bx+138h]
		lea	si, [bp+var_36]
		mov	cx, 1Ah
		repne movsw
		call	sub_28F6A
		push	cs
		call	near ptr sub_1168E
		mov	ax, 0FFFFh
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_3C]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		push	[bp+arg_4]
		push	[bp+arg_2]
		sub	ax, ax
		push	ax
		mov	ax, 3
		push	ax
		call	sub_27686
		add	sp, 12h
		call	sub_28EE4
		mov	ax, 7530h
		cwd
		push	dx		; int
		push	ax		; int
		push	[bp+var_3A]	; int
		push	[bp+var_3C]	; int
		mov	ax, 10h
		push	ax
		mov	ax, 0A270h
		push	ax		; char *
		call	sub_290BC
		add	sp, 0Ch
		mov	ax, 0A270h
		push	ax
		lea	ax, [bp+var_36]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		les	bx, dword_44CE6
		lea	di, [bx+138h]
		lea	si, [bp+var_36]
		mov	cx, 1Ah
		repne movsw
		call	sub_28F6A
		push	cs
		call	near ptr sub_1168E
		mov	ax, 0FFFFh
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		push	cs
		call	near ptr sub_11BB4

loc_11BAA:				; CODE XREF: sub_11A1C+20j
		push	cs
		call	near ptr sub_1168E
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_11A1C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11BB4	proc far		; CODE XREF: sub_11A1C+18Bp

var_16E		= word ptr -16Eh
var_16C		= byte ptr -16Ch

		push	bp
		mov	bp, sp
		sub	sp, 16Eh
		push	di
		push	si
		mov	[bp+var_16E], 0

loc_11BC3:				; CODE XREF: sub_11BB4+4Bj
		mov	bx, [bp+var_16E]
		shl	bx, 1
		mov	ax, 34h	; '4'
		imul	word ptr [bx-5600h]
		add	ax, word ptr dword_44CE6
		mov	dx, word ptr dword_44CE6+2
		mov	cx, ax
		mov	ax, 34h	; '4'
		mov	bx, dx
		imul	[bp+var_16E]
		mov	si, ax
		lea	di, [bp+si+var_16C]
		mov	si, cx
		push	ss
		pop	es
		push	ds
		mov	ds, bx
		mov	cx, 1Ah
		repne movsw
		pop	ds
		inc	[bp+var_16E]
		cmp	[bp+var_16E], 7
		jl	short loc_11BC3
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 34Dh
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		mov	byte_3B8FB, 1
		mov	ax, 16Ch
		cwd
		push	dx
		push	ax
		lea	ax, [bp+var_16C]
		push	ss
		push	ax
		mov	ax, 95F8h
		push	ax
		call	sub_3250B
		add	sp, 0Ah
		mov	byte_3B8FB, 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_11BB4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11C42	proc far		; CODE XREF: _main+30Ep sub_1293C+521p

var_10C		= dword	ptr -10Ch
var_108		= byte ptr -108h
var_106		= byte ptr -106h
var_104		= word ptr -104h
var_102		= word ptr -102h
var_100		= word ptr -100h
var_FE		= word ptr -0FEh
var_FC		= dword	ptr -0FCh
var_F8		= word ptr -0F8h
var_F6		= byte ptr -0F6h
var_F4		= word ptr -0F4h
var_F2		= byte ptr -0F2h
var_F0		= byte ptr -0F0h
var_EE		= byte ptr -0EEh
var_ED		= byte ptr -0EDh
var_EC		= byte ptr -0ECh
var_EB		= byte ptr -0EBh
var_EA		= byte ptr -0EAh
var_4C		= word ptr -4Ch
var_4A		= word ptr -4Ah
var_48		= word ptr -48h
var_46		= byte ptr -46h
var_44		= word ptr -44h
var_42		= dword	ptr -42h
var_3E		= byte ptr -3Eh
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= byte ptr -38h
var_36		= word ptr -36h
var_34		= word ptr -34h
var_32		= byte ptr -32h
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= byte ptr -20h
var_1F		= byte ptr -1Fh
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= byte ptr -10h
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10Ch
		push	di
		push	si
		push	si
		lea	di, [bp+var_32]
		mov	si, 3EEh
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	[bp+var_2C], 80F4h
		mov	[bp+var_28], 0
		mov	[bp+var_26], 0
		mov	[bp+var_22], 7530h
		mov	ax, word_44CEA
		mov	word_44984, ax
		or	ax, ax
		jz	short loc_11C82
		lea	ax, [bp+var_10]
		mov	[bp+var_2A], ax
		mov	[bp+var_20], 8
		jmp	short loc_11C86
; ---------------------------------------------------------------------------

loc_11C82:				; CODE XREF: sub_11C42+32j
		mov	[bp+var_20], 0

loc_11C86:				; CODE XREF: sub_11C42+3Ej
		mov	ax, 2
		push	ax
		call	sub_2A1A6
		add	sp, 2
		mov	ax, 352h
		push	ax		; int
		mov	ax, 357h
		push	ax
		sub	ax, ax
		push	ax		; char *
		call	sub_39E24
		add	sp, 6
		mov	[bp+var_F4], ax
		or	ax, ax
		jnz	short loc_11CB8
		call	nullsub_1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_11CB8:				; CODE XREF: sub_11C42+69j
		mov	bx, [bp+var_F4]
		mov	al, [bx+3]
		mov	[bp+var_EE], al
		mov	al, [bx+4]
		mov	[bp+var_ED], al
		mov	al, [bx+5]
		mov	[bp+var_EC], al
		mov	al, [bx+6]
		mov	[bp+var_EB], al
		mov	[bp+var_EA], 0
		mov	[bp+var_46], 1

loc_11CE1:				; CODE XREF: sub_11C42+100j
		call	sub_39E4C
		mov	[bp+var_F4], ax
		or	ax, ax
		jz	short loc_11D44
		mov	al, [bp+var_46]
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		mov	di, ax
		add	di, bp
		mov	bx, [bp+var_F4]
		mov	al, [bx+3]
		mov	[di-0EEh], al
		mov	bx, [bp+var_F4]
		mov	al, [bx+4]
		mov	[di-0EDh], al
		mov	bx, [bp+var_F4]
		mov	al, [bx+5]
		mov	[di-0ECh], al
		mov	bx, [bp+var_F4]
		mov	al, [bx+6]
		mov	[di-0EBh], al
		mov	al, [bp+var_46]
		cbw
		mov	di, ax
		shl	di, 1
		shl	di, 1
		add	di, ax
		mov	[bp+di+var_EA],	0
		inc	[bp+var_46]
		cmp	[bp+var_46], 20h ; ' '
		jnz	short loc_11CE1

loc_11D44:				; CODE XREF: sub_11C42+AAj
		call	nullsub_1
		cmp	[bp+var_46], 1
		jg	short loc_11D52
		jmp	loc_11E10
; ---------------------------------------------------------------------------

loc_11D52:				; CODE XREF: sub_11C42+10Bj
		mov	[bp+var_4A], 0
		jmp	loc_11DFB
; ---------------------------------------------------------------------------

loc_11D5A:				; CODE XREF: sub_11C42+151j
					; sub_11C42+1B3j
		inc	[bp+var_44]

loc_11D5D:				; CODE XREF: sub_11C42+1CAj
		mov	al, [bp+var_46]
		cbw
		cmp	ax, [bp+var_44]
		ja	short loc_11D69
		jmp	loc_11DF8
; ---------------------------------------------------------------------------

loc_11D69:				; CODE XREF: sub_11C42+122j
		mov	di, [bp+var_44]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax
		mov	di, [bp+var_4A]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax		; char *
		call	_strcmp
		add	sp, 4
		or	ax, ax
		jle	short loc_11D5A
		mov	di, [bp+var_4A]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	di, [bp+var_44]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax
		mov	di, [bp+var_4A]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 0AC74h
		push	ax
		mov	di, [bp+var_44]
		mov	ax, di
		shl	di, 1
		shl	di, 1
		add	di, ax
		lea	ax, [bp+di+var_EE]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		jmp	loc_11D5A
; ---------------------------------------------------------------------------

loc_11DF8:				; CODE XREF: sub_11C42+124j
		inc	[bp+var_4A]

loc_11DFB:				; CODE XREF: sub_11C42+115j
		mov	al, [bp+var_46]
		cbw
		dec	ax
		cmp	ax, [bp+var_4A]
		jle	short loc_11E10
		mov	ax, [bp+var_4A]
		inc	ax
		mov	[bp+var_44], ax
		jmp	loc_11D5D
; ---------------------------------------------------------------------------
		align 2

loc_11E10:				; CODE XREF: sub_11C42+10Dj
					; sub_11C42+1C1j
		mov	[bp+var_F0], 0
		mov	[bp+var_F6], 0
		jmp	short loc_11E20
; ---------------------------------------------------------------------------

loc_11E1C:				; CODE XREF: sub_11C42+201j
					; sub_11C42+20Aj ...
		inc	[bp+var_F6]

loc_11E20:				; CODE XREF: sub_11C42+1D8j
		mov	al, [bp+var_46]
		cmp	[bp+var_F6], al
		jge	short loc_11E68
		mov	al, [bp+var_F6]
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		mov	di, ax
		add	di, bp
		mov	bx, [bp+arg_0]
		mov	al, [di-0EEh]
		cmp	[bx], al
		jnz	short loc_11E1C
		mov	al, [di-0EDh]
		cmp	[bx+1],	al
		jnz	short loc_11E1C
		mov	al, [di-0ECh]
		cmp	[bx+2],	al
		jnz	short loc_11E1C
		mov	al, [di-0EBh]
		cmp	[bx+3],	al
		jnz	short loc_11E1C
		mov	al, [bp+var_F6]
		mov	[bp+var_F0], al

loc_11E68:				; CODE XREF: sub_11C42+1E5j
		mov	word_44382, 5Ah	; 'Z'
		mov	[bp+var_3E], 0FFh
		mov	byte_45514, 2Dh	; '-'
		mov	ax, 35Ch
		push	ax
		call	sub_3385C
		add	sp, 2
		mov	[bp+var_36], ax
		mov	[bp+var_34], dx
		cmp	[bp+arg_6], 0
		jnz	short loc_11EA2
		mov	ax, 363h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	word_455CC, ax
		mov	word_455CE, dx

loc_11EA2:				; CODE XREF: sub_11C42+24Bj
		cmp	[bp+arg_6], 0
		jnz	short loc_11EAB
		jmp	loc_11F4A
; ---------------------------------------------------------------------------

loc_11EAB:				; CODE XREF: sub_11C42+264j
		mov	word_3BB58, 0F0h ; ''
		cmp	byte_46436, 0
		jnz	short loc_11EBB
		jmp	loc_11F50
; ---------------------------------------------------------------------------

loc_11EBB:				; CODE XREF: sub_11C42+274j
		mov	bx, [bp+arg_6]
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx-5A4Eh]
		mov	dx, [bx-5A4Ch]
		mov	word ptr [bp+var_10C], ax
		mov	word ptr [bp+var_10C+2], dx
		mov	ax, 0Fh
		push	ax
		les	bx, [bp+var_10C]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_34C0C
		add	sp, 6
		mov	word ptr [bp+var_42], ax
		mov	word ptr [bp+var_42+2],	dx
		call	sub_3A9A0
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		mov	al, byte ptr [bp+arg_6]
		add	al, 30h	; '0'
		cbw
		push	ax
		push	word_44A02
		push	word_44A00
		call	nullsub_2
		add	sp, 6
		sub	ax, ax
		push	ax
		push	ax
		mov	bx, [bp+arg_6]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx-5A4Ch]
		push	word ptr [bx-5A4Eh]
		call	sub_343B0
		add	sp, 8
		sub	ax, ax
		push	ax
		push	ax
		les	bx, [bp+var_42]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3475A
		add	sp, 8
		jmp	short loc_11F50
; ---------------------------------------------------------------------------
		align 2

loc_11F4A:				; CODE XREF: sub_11C42+266j
		mov	word_3BB58, 140h

loc_11F50:				; CODE XREF: sub_11C42+276j
					; sub_11C42+305j
		mov	[bp+var_38], 0FFh
		mov	[bp+var_1E], 0
		mov	[bp+var_106], 0
		call	sub_29772
		mov	[bp+var_4C], 0
		mov	[bp+var_F2], 0FFh
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 140h
		push	ax
		mov	ax, 11h
		push	ax
		mov	ax, 24h	; '$'
		push	ax
		call	sub_322F3
		add	sp, 8
		call	sub_2A230
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx

loc_11FA5:				; CODE XREF: sub_11C42+98Bj
					; sub_11C42:loc_125FAj	...
		mov	al, [bp+var_38]
		cmp	[bp+var_F0], al
		jnz	short loc_11FB1
		jmp	loc_12405
; ---------------------------------------------------------------------------

loc_11FB1:				; CODE XREF: sub_11C42+36Aj
		cmp	al, 0FFh
		jz	short loc_11FC8
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28A78
		add	sp, 4
		call	sub_20438

loc_11FC8:				; CODE XREF: sub_11C42+371j
		mov	ax, 923Bh
		push	ax
		mov	al, [bp+var_F0]
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 0EEh ; 'Ó'
		push	ax
		call	sub_1FF92
		add	sp, 4
		mov	al, [bp+var_F0]
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		mov	di, ax
		add	di, bp
		mov	al, [di-0EEh]
		mov	byte_3B90D, al
		mov	al, [di-0EDh]
		mov	byte_3B90E, al
		mov	al, [di-0ECh]
		mov	byte_3B90F, al
		mov	al, [di-0EBh]
		mov	byte_3B910, al
		mov	ax, 19Ah
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		sub	ax, ax
		push	ax
		push	dx
		push	[bp+var_4]
		call	sub_19CA2
		add	sp, 6
		call	sub_28F7C
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 61h	; 'a'
		push	ax
		mov	ax, 140h
		push	ax
		mov	ax, 67h	; 'g'
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 55h	; 'U'
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 6Dh	; 'm'
		push	ax
		mov	ax, 5
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 55h	; 'U'
		push	ax
		mov	ax, 8Ch	; 'å'
		push	ax
		mov	ax, 6Dh	; 'm'
		push	ax
		mov	ax, 52h	; 'R'
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	ax, 368h
		push	ax
		push	[bp+var_34]
		push	[bp+var_36]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D4E
		add	sp, 4
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		push	word_407CA
		sub	ax, ax
		push	ax
		call	sub_34B0C
		add	sp, 4
		mov	ax, 73h	; 's'
		push	ax
		mov	ax, 9
		push	ax
		mov	ax, 36Dh
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 87h	; 'á'
		push	ax
		mov	ax, 9
		push	ax
		mov	ax, 371h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 9Bh	; 'õ'
		push	ax
		mov	ax, 9
		push	ax
		mov	ax, 375h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, 9
		push	ax
		mov	ax, 379h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 0B9h ; 'π'
		push	ax
		mov	ax, 1Ah
		push	ax
		mov	ax, 37Dh
		push	ax
		call	sub_33742
		add	sp, 6
		call	sub_298A8
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB3C
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		mov	ax, 387h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB3E
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		mov	ax, 38Bh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB40
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		mov	ax, 38Fh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx], 0
		jz	short loc_12226
		mov	ax, 393h
		jmp	short loc_12229
; ---------------------------------------------------------------------------

loc_12226:				; CODE XREF: sub_11C42+5DDj
		mov	ax, 397h

loc_12229:				; CODE XREF: sub_11C42+5E2j
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		mov	[bp+var_3C], ax
		mov	[bp+var_3A], dx
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB42
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		push	dx
		push	[bp+var_3C]
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB44
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		mov	ax, 39Bh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	ax, word_449D0
		mov	[bp+var_12], ax
		mov	word_449D0, 14h
		mov	ax, 0FFFEh
		push	ax
		call	sub_16B02
		add	sp, 2
		mov	byte_446B2, 1
		mov	[bp+var_4A], 0

loc_122CE:				; CODE XREF: sub_11C42+700j
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_17A78
		add	sp, 8
		mov	ax, word_44610
		mov	cl, 8
		shr	ax, cl
		mov	[bp+var_8], ax
		mov	ax, 96h	; 'ñ'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_8]
		cwd
		mov	cl, 6

loc_122FB:				; CODE XREF: sub_11C42+6BFj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_122FB
		push	dx
		push	ax
		call	__aFuldiv
		sub	ax, 0B5h ; 'µ'
		neg	ax
		mov	[bp+var_48], ax
		cmp	ax, 75h	; 'u'
		jb	short loc_12344
		mov	ax, 26h	; '&'
		imul	[bp+var_4A]
		sub	dx, dx
		mov	cx, 320h
		div	cx
		add	ax, 1Ch
		mov	[bp+var_44], ax
		push	word_40800
		push	[bp+var_48]
		push	ax
		call	sub_35B26
		add	sp, 6
		inc	[bp+var_4A]
		cmp	[bp+var_4A], 320h
		jl	short loc_122CE

loc_12344:				; CODE XREF: sub_11C42+6D3j
		mov	ax, [bp+var_12]
		mov	word_449D0, ax
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		mov	ax, 39Fh
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28AA2
		add	sp, 6
		mov	word ptr [bp+var_FC], ax
		mov	word ptr [bp+var_FC+2],	dx
		mov	[bp+var_44], 0
		mov	[bp+var_48], 74h ; 't'

loc_1237E:				; CODE XREF: sub_11C42+791j
		les	bx, [bp+var_FC]
		inc	word ptr [bp+var_FC]
		mov	al, es:[bx]
		mov	[bp+var_1C], al
		cmp	al, 5Dh	; ']'
		jnz	short loc_123BE
		cmp	[bp+var_44], 0
		jz	short loc_123B1
		mov	bx, [bp+var_44]
		mov	byte ptr [bx-538Ch], 0
		push	[bp+var_48]
		mov	ax, 58h	; 'X'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6

loc_123B1:				; CODE XREF: sub_11C42+752j
		mov	[bp+var_44], 0
		mov	ax, word_459F2
		add	[bp+var_48], ax
		jmp	short loc_123CB
; ---------------------------------------------------------------------------

loc_123BE:				; CODE XREF: sub_11C42+74Cj
		mov	bx, [bp+var_44]
		inc	[bp+var_44]
		mov	al, [bp+var_1C]
		mov	[bx-538Ch], al

loc_123CB:				; CODE XREF: sub_11C42+77Aj
		les	bx, [bp+var_FC]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_1237E
		call	sub_298A8
		call	sub_2A230
		mov	[bp+var_F2], 0FFh
		mov	[bp+var_104], 0
		mov	[bp+var_102], 140h
		mov	[bp+var_100], 0
		mov	[bp+var_FE], 0C8h ; '»'
		mov	[bp+var_108], 0
		mov	[bp+var_6], 3

loc_12405:				; CODE XREF: sub_11C42+36Cj
		mov	ax, [bp+var_4C]
		add	[bp+var_1E], ax
		mov	al, [bp+var_6]
		cbw
		or	ax, ax
		jz	short loc_12423
		cmp	ax, 1
		jnz	short loc_1241B
		jmp	loc_125FE
; ---------------------------------------------------------------------------

loc_1241B:				; CODE XREF: sub_11C42+7D4j
		cmp	ax, 3
		jz	short loc_12423
		jmp	loc_124DE
; ---------------------------------------------------------------------------

loc_12423:				; CODE XREF: sub_11C42+7CFj
					; sub_11C42+7DCj
		push	word_3BB62
		push	word_3BB60
		call	sub_2EA4E
		add	sp, 4
		mov	[bp+var_F8], ax
		cmp	word_44984, 0
		jz	short loc_12448
		push	si
		lea	di, [bp+var_10]
		mov	si, 3394h
		jmp	short loc_1244F
; ---------------------------------------------------------------------------
		align 2

loc_12448:				; CODE XREF: sub_11C42+7FAj
		push	si
		lea	di, [bp+var_10]
		mov	si, 3B0h

loc_1244F:				; CODE XREF: sub_11C42+803j
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	si
		sub	ax, ax
		push	ax
		mov	ax, 3B0h
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_F8]
		push	ax
		call	sub_24E06
		add	sp, 0Ah
		mov	bx, [bp+arg_2]
		mov	al, byte_4386C
		cmp	[bx], al
		jl	short loc_1247A
		mov	byte ptr [bx], 0

loc_1247A:				; CODE XREF: sub_11C42+833j
		mov	ax, [bp+var_1E]
		mov	[bp+var_24], ax
		mov	bx, [bp+arg_2]
		mov	al, [bx]
		mov	[bp+var_1F], al
		lea	ax, [bp+var_32]
		push	ax
		call	sub_24E9E
		add	sp, 2
		mov	al, [bp+var_38]
		cmp	[bp+var_F0], al
		jnz	short loc_124A6
		mov	word_3BB5C, 5Fh	; '_'
		jmp	short loc_124AC
; ---------------------------------------------------------------------------
		align 2

loc_124A6:				; CODE XREF: sub_11C42+859j
		mov	word_3BB5C, 0C8h ; '»'

loc_124AC:				; CODE XREF: sub_11C42+861j
		mov	ax, 3E6h
		push	ax
		lea	ax, [bp+var_10]
		push	ax
		call	sub_265EC
		add	sp, 4
		lea	ax, [bp+var_1A]
		push	ax
		lea	ax, [bp+var_104]
		push	ax
		lea	ax, [bp+var_10]
		push	ax
		call	sub_26572
		add	sp, 6
		cmp	[bp+var_6], 3
		jnz	short loc_124DA
		jmp	loc_125FE
; ---------------------------------------------------------------------------

loc_124DA:				; CODE XREF: sub_11C42+893j
		mov	[bp+var_6], 1

loc_124DE:				; CODE XREF: sub_11C42+7DEj
					; sub_11C42+AEDj
		mov	al, [bp+var_F2]
		cmp	[bp+var_106], al
		jz	short loc_12541
		cmp	al, 0FFh
		jz	short loc_12534
		call	sub_28F3C
		mov	ax, word_3BB4E
		inc	ax
		push	ax
		push	word_3BB3C
		mov	ax, word_3BB32
		add	ax, word_44DC8
		and	ax, word_454D4
		push	ax
		push	word_3BB28
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		call	sub_28D9E
		call	sub_28F3C

loc_12534:				; CODE XREF: sub_11C42+8A8j
		call	sub_29772
		mov	al, [bp+var_106]
		mov	[bp+var_F2], al

loc_12541:				; CODE XREF: sub_11C42+8A4j
		call	sub_28F3C
		push	word_407D0
		push	word_407CE
		mov	ax, 3D6h
		push	ax
		mov	ax, 3CCh
		push	ax
		mov	ax, 3C2h
		push	ax
		mov	ax, 3B8h
		push	ax
		mov	al, [bp+var_106]
		cbw
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_4C], ax
		add	word_449F2, ax
		cmp	word_449F2, 2EE0h
		jle	short loc_12585
		mov	word_449F2, 0
		inc	byte_44AE2

loc_12585:				; CODE XREF: sub_11C42+937j
		push	[bp+var_4C]
		call	sub_287C4
		add	sp, 2
		mov	si, ax
		mov	ax, 3D6h
		push	ax
		mov	ax, 3CCh
		push	ax
		mov	ax, 3C2h
		push	ax
		mov	ax, 3B8h
		push	ax
		mov	ax, 5
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_F6], al
		cmp	al, 0FFh
		jz	short loc_125BA
		mov	[bp+var_106], al

loc_125BA:				; CODE XREF: sub_11C42+972j
		cmp	byte_44AE2, 0
		jz	short loc_125C9
		mov	[bp+var_106], 0
		mov	si, 0Dh

loc_125C9:				; CODE XREF: sub_11C42+97Dj
		or	si, si
		jnz	short loc_125D0
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_125D0:				; CODE XREF: sub_11C42+989j
		mov	ax, si
		cmp	ax, 0Dh
		jnz	short loc_125DA
		jmp	loc_12732
; ---------------------------------------------------------------------------

loc_125DA:				; CODE XREF: sub_11C42+993j
		cmp	ax, 1Bh
		jnz	short loc_125E2
		jmp	loc_12732
; ---------------------------------------------------------------------------

loc_125E2:				; CODE XREF: sub_11C42+99Bj
		cmp	ax, 20h	; ' '
		jnz	short loc_125EA
		jmp	loc_12732
; ---------------------------------------------------------------------------

loc_125EA:				; CODE XREF: sub_11C42+9A3j
		cmp	ax, 4800h
		jnz	short loc_125F2
		jmp	loc_12910
; ---------------------------------------------------------------------------

loc_125F2:				; CODE XREF: sub_11C42+9ABj
		cmp	ax, 5000h
		jnz	short loc_125FA
		jmp	loc_12926
; ---------------------------------------------------------------------------

loc_125FA:				; CODE XREF: sub_11C42+9B3j
		jmp	loc_11FA5
; ---------------------------------------------------------------------------
		align 2

loc_125FE:				; CODE XREF: sub_11C42+7D6j
					; sub_11C42+895j
		mov	[bp+var_6], 0
		mov	[bp+var_108], 1
		call	sub_28F6A
		push	[bp+var_14]
		push	[bp+var_16]
		push	[bp+var_18]
		push	[bp+var_1A]
		call	sub_3327F
		add	sp, 8
		mov	ax, 3A3h
		push	ax
		push	[bp+var_34]
		push	[bp+var_36]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33BDA
		add	sp, 4
		call	sub_25FF6
		call	sub_28F6A
		push	[bp+var_14]
		push	[bp+var_16]
		push	[bp+var_18]
		push	[bp+var_1A]
		call	sub_3327F
		add	sp, 8
		push	si
		lea	di, [bp+var_104]
		lea	si, [bp+var_10]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	si
		cmp	[bp+arg_6], 0
		jz	short loc_126D1
		mov	al, [bp+var_38]
		cmp	[bp+var_F0], al
		jz	short loc_126D1
		call	sub_28F6A
		cmp	byte_46436, 0
		jnz	short loc_126B8
		mov	al, byte ptr [bp+arg_6]
		add	al, 30h	; '0'
		cbw
		push	ax
		push	word_44A02
		push	word_44A00
		call	nullsub_2
		add	sp, 6
		sub	ax, ax
		push	ax
		mov	ax, 0F0h ; ''
		push	ax
		mov	bx, [bp+arg_6]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx-5A4Ch]
		push	word ptr [bx-5A4Eh]
		call	sub_343B0
		jmp	short loc_126CE
; ---------------------------------------------------------------------------

loc_126B8:				; CODE XREF: sub_11C42+A40j
		sub	ax, ax
		push	ax
		mov	ax, 0F0h ; ''
		push	ax
		les	bx, [bp+var_42]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC

loc_126CE:				; CODE XREF: sub_11C42+A74j
		add	sp, 8

loc_126D1:				; CODE XREF: sub_11C42+A2Bj
					; sub_11C42+A34j
		call	sub_28F3C
		push	[bp+var_14]
		push	[bp+var_16]
		push	[bp+var_18]
		push	[bp+var_1A]
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		cmp	[bp+var_3E], 0FEh ; '˛'
		jz	short loc_12710
		mov	al, [bp+var_3E]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_3E], 0FEh ; '˛'
		jmp	short loc_12723
; ---------------------------------------------------------------------------

loc_12710:				; CODE XREF: sub_11C42+AB1j
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4

loc_12723:				; CODE XREF: sub_11C42+ACCj
		call	sub_28D9E
		mov	al, [bp+var_F0]
		mov	[bp+var_38], al
		jmp	loc_124DE
; ---------------------------------------------------------------------------

loc_12732:				; CODE XREF: sub_11C42+995j
					; sub_11C42+99Dj ...
		mov	al, [bp+var_106]
		cbw
		or	ax, ax
		jz	short loc_1275E
		cmp	ax, 1
		jnz	short loc_12743
		jmp	loc_12836
; ---------------------------------------------------------------------------

loc_12743:				; CODE XREF: sub_11C42+AFCj
		cmp	ax, 2
		jnz	short loc_1274B
		jmp	loc_1284E
; ---------------------------------------------------------------------------

loc_1274B:				; CODE XREF: sub_11C42+B04j
		cmp	ax, 3
		jnz	short loc_12753
		jmp	loc_12864
; ---------------------------------------------------------------------------

loc_12753:				; CODE XREF: sub_11C42+B0Cj
		cmp	ax, 4
		jnz	short loc_1275B
		jmp	loc_12904
; ---------------------------------------------------------------------------

loc_1275B:				; CODE XREF: sub_11C42+B14j
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_1275E:				; CODE XREF: sub_11C42+AF7j
		cmp	[bp+var_108], 0
		jnz	short loc_12768
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12768:				; CODE XREF: sub_11C42+B21j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28A78
		add	sp, 4
		call	sub_20438
		cmp	[bp+arg_6], 0
		jz	short loc_127A6
		cmp	byte_46436, 0
		jz	short loc_127A6
		push	word ptr [bp+var_42+2]
		push	word ptr [bp+var_42]
		call	sub_324AA
		add	sp, 4

loc_127A6:				; CODE XREF: sub_11C42+B4Dj
					; sub_11C42+B54j
		cmp	[bp+arg_6], 0
		jnz	short loc_127BC
		push	word_455CE
		push	word_455CC
		call	sub_28A78
		add	sp, 4

loc_127BC:				; CODE XREF: sub_11C42+B68j
		push	[bp+var_34]
		push	[bp+var_36]
		call	sub_3147C
		add	sp, 4
		call	sub_28DB6
		mov	al, [bp+var_F0]
		cbw
		mov	di, ax
		shl	di, 1
		shl	di, 1
		add	di, ax
		mov	al, [bp+di+var_EE]
		mov	bx, [bp+arg_0]
		mov	[bx], al
		mov	al, [bp+var_F0]
		cbw
		mov	di, ax
		shl	di, 1
		shl	di, 1
		add	di, ax
		mov	al, [bp+di+var_ED]
		mov	bx, [bp+arg_0]
		mov	[bx+1],	al
		mov	al, [bp+var_F0]
		cbw
		mov	di, ax
		shl	di, 1
		shl	di, 1
		add	di, ax
		mov	al, [bp+di+var_EC]
		mov	bx, [bp+arg_0]
		mov	[bx+2],	al
		mov	al, [bp+var_F0]
		cbw
		mov	di, ax
		shl	di, 1
		shl	di, 1
		add	di, ax
		mov	al, [bp+di+var_EB]
		mov	bx, [bp+arg_0]
		mov	[bx+3],	al
		mov	byte_44AE2, 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_12836:				; CODE XREF: sub_11C42+AFEj
		inc	[bp+var_F0]
		mov	al, [bp+var_46]
		cmp	[bp+var_F0], al
		jz	short loc_12846
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12846:				; CODE XREF: sub_11C42+BFFj
		mov	[bp+var_F0], 0
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_1284E:				; CODE XREF: sub_11C42+B06j
		dec	[bp+var_F0]
		js	short loc_12857
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12857:				; CODE XREF: sub_11C42+C10j
		mov	al, [bp+var_46]
		dec	al
		mov	[bp+var_F0], al
		jmp	loc_11FA5
; ---------------------------------------------------------------------------
		align 2

loc_12864:				; CODE XREF: sub_11C42+B0Ej
		mov	bx, [bp+arg_4]
		xor	byte ptr [bx], 1
		call	sub_28F6A
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx], 0
		jz	short loc_1287C
		mov	ax, 3A8h
		jmp	short loc_1287F
; ---------------------------------------------------------------------------

loc_1287C:				; CODE XREF: sub_11C42+C33j
		mov	ax, 3ACh

loc_1287F:				; CODE XREF: sub_11C42+C38j
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		mov	[bp+var_3C], ax
		mov	[bp+var_3A], dx
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB42
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		push	dx
		push	[bp+var_3C]
		call	sub_292DC
		add	sp, 14h
		call	sub_28F3C
		call	sub_28DB6
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 10h
		push	ax
		mov	ax, 56h	; 'V'
		push	ax
		mov	ax, word_3BB42
		inc	ax
		push	ax
		mov	ax, word_3BB28
		inc	ax
		push	ax
		push	[bp+var_3A]
		push	[bp+var_3C]
		call	sub_292DC
		add	sp, 14h
		call	sub_28D9E
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12904:				; CODE XREF: sub_11C42+B16j
		mov	bx, [bp+arg_2]
		inc	byte ptr [bx]
		mov	[bp+var_6], 3
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12910:				; CODE XREF: sub_11C42+9ADj
		cmp	[bp+var_106], 0
		jz	short loc_1291E
		dec	[bp+var_106]
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_1291E:				; CODE XREF: sub_11C42+CD3j
		mov	[bp+var_106], 4
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12926:				; CODE XREF: sub_11C42+9B5j
		cmp	[bp+var_106], 4
		jge	short loc_12934
		inc	[bp+var_106]
		jmp	loc_11FA5
; ---------------------------------------------------------------------------

loc_12934:				; CODE XREF: sub_11C42+CE9j
		mov	[bp+var_106], 0
		jmp	loc_11FA5
sub_11C42	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1293C	proc far		; CODE XREF: _main+2D1p

var_1E		= byte ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= dword	ptr -1Ah
var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= byte ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 1Eh
		push	si
		mov	ax, 4
		push	ax
		call	sub_2A1A6
		add	sp, 2
		mov	ax, 3F4h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	word_455CC, ax
		mov	word_455CE, dx
		mov	ax, 3F9h
		push	ax		; char *
		mov	ax, 8
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_44A00, ax
		mov	word_44A02, dx
		mov	ax, 0A5B2h
		push	ax
		mov	ax, 400h
		push	ax
		push	dx
		push	word_44A00
		call	sub_367B2
		add	sp, 8
		mov	[bp+var_1C], 0
		mov	[bp+var_6], 0
		mov	[bp+var_1E], 0FFh
		mov	[bp+var_4], 0FFh
		call	sub_29772

loc_129A3:				; CODE XREF: sub_1293C+52Bj
		call	sub_28D9E

loc_129A8:				; CODE XREF: sub_1293C+45Bj
					; sub_1293C:loc_12DBBj	...
		mov	al, byte_449AA
		cmp	[bp+var_1E], al
		jnz	short loc_129B3
		jmp	loc_12CFB
; ---------------------------------------------------------------------------

loc_129B3:				; CODE XREF: sub_1293C+72j
		cmp	[bp+var_1E], 0FFh
		jz	short loc_129DD
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		cmp	[bp+var_6], 0
		jz	short loc_129DD
		push	[bp+var_A]
		push	[bp+var_C]
		call	sub_28A78
		add	sp, 4

loc_129DD:				; CODE XREF: sub_1293C+7Bj
					; sub_1293C+91j
		mov	ax, 4
		push	ax
		call	sub_2A1A6
		add	sp, 2
		cmp	byte_449AA, 0
		jz	short loc_12A10
		mov	al, byte_449AA
		add	al, 30h	; '0'
		mov	byte_3B907, al
		mov	ax, 194h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_C], ax
		mov	[bp+var_A], dx
		mov	[bp+var_6], 1
		jmp	short loc_12A14
; ---------------------------------------------------------------------------

loc_12A10:				; CODE XREF: sub_1293C+B2j
		mov	[bp+var_6], 0

loc_12A14:				; CODE XREF: sub_1293C+D2j
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		mov	al, byte_449AA
		mov	[bp+var_1E], al
		mov	[bp+var_14], 0FFh
		cmp	byte_46436, 0
		jnz	short loc_12A48
		call	sub_28F6A
		jmp	short loc_12A4D
; ---------------------------------------------------------------------------
		align 2

loc_12A48:				; CODE XREF: sub_1293C+102j
		call	sub_3A9A0

loc_12A4D:				; CODE XREF: sub_1293C+109j
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		mov	ax, 37h	; '7'
		push	ax
		push	word_44A02
		push	word_44A00
		call	nullsub_2
		add	sp, 6
		mov	ax, 41Dh
		push	ax
		push	word_44A02
		push	word_44A00
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_34526
		add	sp, 4
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 12h
		push	ax
		mov	ax, 36h	; '6'
		push	ax
		mov	ax, word_3BBC8
		inc	ax
		push	ax
		mov	ax, 15h
		push	ax
		mov	ax, 422h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 12h
		push	ax
		mov	ax, 36h	; '6'
		push	ax
		mov	ax, word_3BBC8
		inc	ax
		push	ax
		mov	ax, 4Dh	; 'M'
		push	ax
		mov	ax, 426h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 12h
		push	ax
		mov	ax, 36h	; '6'
		push	ax
		mov	ax, word_3BBC8
		inc	ax
		push	ax
		mov	ax, 85h	; 'Ö'
		push	ax
		mov	ax, 42Ah
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 12h
		push	ax
		mov	ax, 36h	; '6'
		push	ax
		mov	ax, word_3BBC8
		inc	ax
		push	ax
		mov	ax, 0BDh ; 'Ω'
		push	ax
		mov	ax, 42Eh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 12h
		push	ax
		mov	ax, 36h	; '6'
		push	ax
		mov	ax, word_3BBC8
		inc	ax
		push	ax
		mov	ax, 0F5h ; 'ı'
		push	ax
		mov	ax, 432h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	al, byte_449AA
		add	al, 30h	; '0'
		cbw
		push	ax
		push	word_44A02
		push	word_44A00
		call	nullsub_2
		add	sp, 6
		mov	al, byte_449AA
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx-5A4Ch]
		push	word ptr [bx-5A4Eh]
		call	sub_34526
		add	sp, 4
		mov	ax, 37h	; '7'
		push	ax
		push	word_44A02
		push	word_44A00
		call	nullsub_2
		add	sp, 6
		mov	ax, 436h
		push	ax
		push	word_44A02
		push	word_44A00
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_34526
		add	sp, 4
		cmp	byte_46436, 0
		jz	short loc_12C46
		sub	ax, ax
		push	ax
		push	ax
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3475A
		add	sp, 8
		call	sub_28F6A

loc_12C46:				; CODE XREF: sub_1293C+2ECj
		cmp	byte_449AA, 0
		jz	short loc_12C5A
		mov	ax, 43Bh
		push	ax
		push	[bp+var_A]
		push	[bp+var_C]
		jmp	short loc_12C66
; ---------------------------------------------------------------------------
		align 2

loc_12C5A:				; CODE XREF: sub_1293C+30Fj
		mov	ax, 43Fh
		push	ax
		push	word_455CE
		push	word_455CC

loc_12C66:				; CODE XREF: sub_1293C+31Bj
		call	sub_28AA2
		add	sp, 6
		mov	word ptr [bp+var_1A], ax
		mov	word ptr [bp+var_1A+2],	dx
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		push	word_407CA
		sub	ax, ax
		push	ax
		call	sub_34B0C
		add	sp, 4
		mov	[bp+var_8], 0
		mov	[bp+var_E], 0

loc_12C9D:				; CODE XREF: sub_1293C+3B8j
		les	bx, [bp+var_1A]
		inc	word ptr [bp+var_1A]
		mov	al, es:[bx]
		mov	[bp+var_2], al
		cmp	al, 5Dh	; ']'
		jnz	short loc_12CE0
		cmp	[bp+var_8], 0
		jz	short loc_12CD2
		mov	bx, [bp+var_8]
		mov	byte ptr [bx-538Ch], 0
		mov	ax, [bp+var_E]
		add	ax, 21h	; '!'
		push	ax
		mov	ax, 0Ch
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6

loc_12CD2:				; CODE XREF: sub_1293C+375j
		mov	[bp+var_8], 0
		mov	ax, word_459F2
		add	[bp+var_E], ax
		jmp	short loc_12CED
; ---------------------------------------------------------------------------
		align 2

loc_12CE0:				; CODE XREF: sub_1293C+36Fj
		mov	bx, [bp+var_8]
		inc	[bp+var_8]
		mov	al, [bp+var_2]
		mov	[bx-538Ch], al

loc_12CED:				; CODE XREF: sub_1293C+3A1j
		les	bx, [bp+var_1A]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_12C9D
		call	sub_298A8

loc_12CFB:				; CODE XREF: sub_1293C+74j
		mov	al, [bp+var_14]
		cmp	[bp+var_1C], al
		jz	short loc_12D2C
		mov	al, [bp+var_1C]
		mov	[bp+var_14], al
		mov	al, [bp+var_4]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_4], 0FEh ; '˛'
		call	sub_2A230
		call	sub_29772

loc_12D2C:				; CODE XREF: sub_1293C+3C5j
		push	word_407D0
		push	word_407CE
		mov	ax, 462h
		push	ax
		mov	ax, 458h
		push	ax
		mov	ax, 44Eh
		push	ax
		mov	ax, 444h
		push	ax
		mov	al, [bp+var_1C]
		cbw
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_10], ax
		push	ax
		call	sub_287C4
		add	sp, 2
		mov	si, ax
		mov	ax, 462h
		push	ax
		mov	ax, 458h
		push	ax
		mov	ax, 44Eh
		push	ax
		mov	ax, 444h
		push	ax
		mov	ax, 5
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_16], al
		cmp	al, 0FFh
		jz	short loc_12D93
		cmp	byte_449AA, 0
		jnz	short loc_12D8D
		cmp	al, 3
		jz	short loc_12D93

loc_12D8D:				; CODE XREF: sub_1293C+44Bj
		mov	al, [bp+var_16]
		mov	[bp+var_1C], al

loc_12D93:				; CODE XREF: sub_1293C+444j
					; sub_1293C+44Fj
		or	si, si
		jnz	short loc_12D9A
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12D9A:				; CODE XREF: sub_1293C+459j
		mov	ax, si
		cmp	ax, 0Dh
		jz	short loc_12DBE
		cmp	ax, 1Bh
		jz	short loc_12DBE
		cmp	ax, 20h	; ' '
		jz	short loc_12DBE
		cmp	ax, 4B00h
		jnz	short loc_12DB3
		jmp	loc_12EF6
; ---------------------------------------------------------------------------

loc_12DB3:				; CODE XREF: sub_1293C+472j
		cmp	ax, 4D00h
		jnz	short loc_12DBB
		jmp	loc_12F20
; ---------------------------------------------------------------------------

loc_12DBB:				; CODE XREF: sub_1293C+47Aj
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12DBE:				; CODE XREF: sub_1293C+463j
					; sub_1293C+468j ...
		mov	al, [bp+var_1C]
		cbw
		or	ax, ax
		jz	short loc_12DE0
		cmp	ax, 1
		jz	short loc_12DF6
		cmp	ax, 2
		jz	short loc_12E0C
		cmp	ax, 3
		jz	short loc_12E14
		cmp	ax, 4
		jnz	short loc_12DDD
		jmp	loc_12E6A
; ---------------------------------------------------------------------------

loc_12DDD:				; CODE XREF: sub_1293C+49Cj
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12DE0:				; CODE XREF: sub_1293C+488j
		dec	byte_449AA
		cmp	byte_449AA, 1
		jl	short loc_12DEE
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12DEE:				; CODE XREF: sub_1293C+4ADj
		mov	byte_449AA, 6
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12DF6:				; CODE XREF: sub_1293C+48Dj
		inc	byte_449AA
		cmp	byte_449AA, 7
		jz	short loc_12E04
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12E04:				; CODE XREF: sub_1293C+4C3j
		mov	byte_449AA, 1
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12E0C:				; CODE XREF: sub_1293C+492j
		mov	byte_449AA, 0
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12E14:				; CODE XREF: sub_1293C+497j
		cmp	byte_449AA, 0
		jnz	short loc_12E1E
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12E1E:				; CODE XREF: sub_1293C+4DDj
		call	sub_28EE4
		call	sub_28DB6
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		push	[bp+var_A]
		push	[bp+var_C]
		call	sub_28A78
		add	sp, 4
		call	sub_296AA
		mov	al, byte_449AA
		cbw
		push	ax
		mov	ax, 9240h
		push	ax
		mov	ax, 923Fh
		push	ax
		mov	ax, 923Bh
		push	ax
		push	cs
		call	near ptr sub_11C42
		add	sp, 8
		mov	[bp+var_1E], 0FFh
		jmp	loc_129A3
; ---------------------------------------------------------------------------

loc_12E6A:				; CODE XREF: sub_1293C+49Ej
		cmp	byte_449AA, 0
		jz	short loc_12EA2
		cmp	byte_449AB, 0FFh
		jnz	short loc_12EA7
		mov	al, byte_449A4
		mov	byte_449AB, al
		mov	al, byte_449A5
		mov	byte_449AC, al
		mov	al, byte_449A6
		mov	byte_449AD, al
		mov	al, byte_449A7
		mov	byte_449AE, al
		mov	al, byte_449A8
		and	al, 1
		xor	al, 1
		mov	byte_449AF, al
		mov	byte_449B0, 0
		jmp	short loc_12EA7
; ---------------------------------------------------------------------------
		align 2

loc_12EA2:				; CODE XREF: sub_1293C+533j
		mov	byte_449AB, 0FFh

loc_12EA7:				; CODE XREF: sub_1293C+53Aj
					; sub_1293C+563j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		cmp	[bp+var_6], 0
		jz	short loc_12ECB
		push	[bp+var_A]
		push	[bp+var_C]
		call	sub_28A78
		add	sp, 4

loc_12ECB:				; CODE XREF: sub_1293C+57Fj
		push	word_44A02
		push	word_44A00
		call	sub_3147C
		add	sp, 4
		push	word_455CE
		push	word_455CC
		call	sub_28A78
		add	sp, 4
		call	sub_28DB6
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_12EF6:				; CODE XREF: sub_1293C+474j
		cmp	[bp+var_1C], 0
		jz	short loc_12F02
		dec	[bp+var_1C]
		jmp	short loc_12F06
; ---------------------------------------------------------------------------
		align 2

loc_12F02:				; CODE XREF: sub_1293C+5BEj
		mov	[bp+var_1C], 4

loc_12F06:				; CODE XREF: sub_1293C+5C3j
		cmp	byte_449AA, 0
		jz	short loc_12F10
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12F10:				; CODE XREF: sub_1293C+5CFj
		cmp	[bp+var_1C], 3
		jz	short loc_12F19
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12F19:				; CODE XREF: sub_1293C+5D8j
		dec	[bp+var_1C]
		jmp	loc_129A8
; ---------------------------------------------------------------------------
		align 2

loc_12F20:				; CODE XREF: sub_1293C+47Cj
		cmp	[bp+var_1C], 4
		jge	short loc_12F2C
		inc	[bp+var_1C]
		jmp	short loc_12F30
; ---------------------------------------------------------------------------
		align 2

loc_12F2C:				; CODE XREF: sub_1293C+5E8j
		mov	[bp+var_1C], 0

loc_12F30:				; CODE XREF: sub_1293C+5EDj
		cmp	byte_449AA, 0
		jz	short loc_12F3A
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12F3A:				; CODE XREF: sub_1293C+5F9j
		cmp	[bp+var_1C], 3
		jz	short loc_12F43
		jmp	loc_129A8
; ---------------------------------------------------------------------------

loc_12F43:				; CODE XREF: sub_1293C+602j
		inc	[bp+var_1C]
		jmp	loc_129A8
sub_1293C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12F4A	proc far		; CODE XREF: _main+2E3p

var_6		= byte ptr -6
var_4		= byte ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		mov	ax, 46Ch
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	word_455CC, ax
		mov	word_455CE, dx
		call	sub_28F3C
		push	word_407FA
		call	sub_332C0
		add	sp, 2
		mov	ax, 471h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 6
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	ax, 476h
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 10h
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		mov	[bp+var_4], 1

loc_13004:				; CODE XREF: sub_12F4A+216j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 47Bh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_2], al
		cbw
		sub	ax, 0FFFFh
		cmp	ax, 7
		jbe	short loc_13046
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_13046:				; CODE XREF: sub_12F4A+F7j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_1314A[bx]

loc_1304E:				; DATA XREF: sub_12F4A+202o
		cmp	byte_3B8F2, 0
		jz	short loc_1305C
		mov	[bp+var_6], 2
		jmp	short loc_1306E
; ---------------------------------------------------------------------------
		align 2

loc_1305C:				; CODE XREF: sub_12F4A+109j
		cmp	byte_3FE00, 0
		jz	short loc_1306A
		mov	[bp+var_6], 1
		jmp	short loc_1306E
; ---------------------------------------------------------------------------
		align 2

loc_1306A:				; CODE XREF: sub_12F4A+117j
		mov	[bp+var_6], 0

loc_1306E:				; CODE XREF: sub_12F4A+10Fj
					; sub_12F4A+11Dj
		mov	al, [bp+var_6]
		cbw
		push	ax
		sub	ax, ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 47Fh
		push	ax
		push	word_455CE
		push	word_455CC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_2], al
		cbw
		or	ax, ax
		jz	short loc_130BA
		cmp	ax, 1
		jz	short loc_130C2
		cmp	ax, 2
		jz	short loc_130CA
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_130BA:				; CODE XREF: sub_12F4A+161j
		call	sub_29D9A
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_130C2:				; CODE XREF: sub_12F4A+166j
		call	sub_29B32
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_130CA:				; CODE XREF: sub_12F4A+16Bj
		call	sub_29DF4
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_130D2:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A+204o
		call	sub_29E98
		jmp	loc_1315A
; ---------------------------------------------------------------------------

loc_130DA:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A+206o
		call	sub_29EFA
		jmp	short loc_1315A
; ---------------------------------------------------------------------------
		align 2

loc_130E2:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A+208o
		mov	ax, 483h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 487h
		push	ax		; int
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		call	sub_27ED4
		add	sp, 0Ah
		mov	[bp+var_6], al
		or	al, al
		jz	short loc_1315A
		mov	word_44382, 96h	; 'ñ'
		call	sub_296AA
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		call	sub_22C92
		add	sp, 4
		mov	[bp+var_4], 1
		jmp	short loc_13163
; ---------------------------------------------------------------------------

loc_13134:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A+20Ao
		call	sub_29FB6
		jmp	short loc_1315A
; ---------------------------------------------------------------------------
		align 2

loc_1313C:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A+20Co
		call	sub_29F5C
		jmp	short loc_1315A
; ---------------------------------------------------------------------------
		align 2

loc_13144:				; CODE XREF: sub_12F4A+FFj
					; DATA XREF: sub_12F4A:off_1314Ao ...
		mov	[bp+var_4], 0
		jmp	short loc_1315A
; ---------------------------------------------------------------------------
off_1314A	dw offset loc_13144	; DATA XREF: sub_12F4A+FFr
		dw offset loc_1304E
		dw offset loc_130D2
		dw offset loc_130DA
		dw offset loc_130E2
		dw offset loc_13134
		dw offset loc_1313C
		dw offset loc_13144
; ---------------------------------------------------------------------------

loc_1315A:				; CODE XREF: sub_12F4A+F9j
					; sub_12F4A+16Dj ...
		cmp	[bp+var_4], 0
		jz	short loc_13163
		jmp	loc_13004
; ---------------------------------------------------------------------------

loc_13163:				; CODE XREF: sub_12F4A+1E8j
					; sub_12F4A+214j
		push	word_455CE
		push	word_455CC
		call	sub_28A78
		mov	al, [bp+var_4]
		cbw
		mov	sp, bp
		pop	bp
		retf
sub_12F4A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13178	proc far		; CODE XREF: _main+4C5p

var_9E		= word ptr -9Eh
var_9C		= word ptr -9Ch
var_9A		= byte ptr -9Ah
var_98		= byte ptr -98h
var_92		= byte ptr -92h
var_90		= word ptr -90h
var_8E		= byte ptr -8Eh
var_8C		= word ptr -8Ch
var_8A		= word ptr -8Ah
var_88		= word ptr -88h
var_86		= dword	ptr -86h
var_82		= byte ptr -82h
var_80		= word ptr -80h
var_7E		= word ptr -7Eh
var_7C		= word ptr -7Ch
var_7A		= word ptr -7Ah
var_78		= byte ptr -78h
var_72		= word ptr -72h
var_70		= word ptr -70h
var_6E		= byte ptr -6Eh
var_6C		= byte ptr -6Ch
var_6A		= byte ptr -6Ah
var_68		= word ptr -68h
var_66		= word ptr -66h
var_64		= byte ptr -64h
var_62		= byte ptr -62h
var_5C		= word ptr -5Ch
var_5A		= word ptr -5Ah
var_58		= word ptr -58h
var_56		= dword	ptr -56h
var_52		= byte ptr -52h
var_50		= word ptr -50h
var_4E		= word ptr -4Eh
var_4C		= word ptr -4Ch
var_4A		= dword	ptr -4Ah
var_46		= dword	ptr -46h
var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= byte ptr -3Eh
var_3C		= byte ptr -3Ch
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h
var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_12		= byte ptr -12h
var_11		= byte ptr -11h
var_10		= byte ptr -10h

		push	bp
		mov	bp, sp
		sub	sp, 9Eh
		push	di
		push	si
		mov	ax, 4
		push	ax
		call	sub_2A1A6
		add	sp, 2
		mov	ax, 48Ch
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_4E], ax
		mov	[bp+var_4C], dx
		cmp	byte_449AA, 0
		jz	short loc_131C0
		mov	al, byte_449AA
		add	al, 30h	; '0'
		mov	byte_3B907, al
		mov	ax, 194h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_68], ax
		mov	[bp+var_66], dx

loc_131C0:				; CODE XREF: sub_13178+2Cj
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		cmp	byte_46436, 0
		jz	short loc_131FC
		mov	ax, 0Fh
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr [bp+var_46], ax
		mov	word ptr [bp+var_46+2],	dx

loc_131FC:				; CODE XREF: sub_13178+68j
		mov	[bp+var_52], 0FFh
		call	sub_28F7C
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 63h	; 'c'
		push	ax
		mov	ax, 140h
		push	ax
		mov	ax, 65h	; 'e'
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	[bp+var_70], 6Bh ; 'k'
		mov	ax, 491h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		cmp	word_4434E, 0
		jnz	short loc_13281
		jmp	loc_13354
; ---------------------------------------------------------------------------

loc_13281:				; CODE XREF: sub_13178+104j
		mov	ax, 1
		push	ax		; int
		mov	ax, word_4434E
		sub	ax, word_44356
		push	ax
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		test	byte_43966, 2
		jz	short loc_132DC
		mov	ax, 495h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6

loc_132DC:				; CODE XREF: sub_13178+136j
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah
		cmp	word_44356, 0
		jnz	short loc_1330D
		jmp	loc_133A7
; ---------------------------------------------------------------------------

loc_1330D:				; CODE XREF: sub_13178+190j
		mov	ax, 499h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 1
		push	ax		; int
		push	word_44356
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		jmp	short loc_13380
; ---------------------------------------------------------------------------
		align 2

loc_13354:				; CODE XREF: sub_13178+106j
		mov	ax, 49Dh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6

loc_13380:				; CODE XREF: sub_13178+1D9j
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah

loc_133A7:				; CODE XREF: sub_13178+192j
		mov	[bp+var_18], 2
		cmp	byte_449AA, 0
		jnz	short loc_133B5
		jmp	loc_134DC
; ---------------------------------------------------------------------------

loc_133B5:				; CODE XREF: sub_13178+238j
		cmp	word_44350, 0
		jnz	short loc_1340C
		mov	ax, 4A1h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 4A5h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		jmp	loc_134AA
; ---------------------------------------------------------------------------
		align 2

loc_1340C:				; CODE XREF: sub_13178+242j
		cmp	word_4434E, 0
		jz	short loc_1341C
		mov	ax, word_4434E
		cmp	word_44350, ax
		jnb	short loc_13466

loc_1341C:				; CODE XREF: sub_13178+299j
		mov	ax, 4A9h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 1
		push	ax		; int
		push	word_44350
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	[bp+var_18], 1
		jmp	short loc_134B5
; ---------------------------------------------------------------------------

loc_13466:				; CODE XREF: sub_13178+2A2j
		mov	ax, 4ADh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 1
		push	ax		; int
		push	word_44350
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4

loc_134AA:				; CODE XREF: sub_13178+290j
		cmp	word_4434E, 0
		jz	short loc_134B5
		mov	[bp+var_18], 0

loc_134B5:				; CODE XREF: sub_13178+2ECj
					; sub_13178+337j
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah

loc_134DC:				; CODE XREF: sub_13178+23Aj
		cmp	[bp+var_18], 0
		jnz	short loc_134F0
		mov	ax, 4B1h
		push	ax
		mov	ax, 4B6h
		push	ax
		mov	ax, 4BDh
		jmp	short loc_134FB
; ---------------------------------------------------------------------------
		align 2

loc_134F0:				; CODE XREF: sub_13178+368j
		mov	ax, 4C6h
		push	ax
		mov	ax, 4CBh
		push	ax
		mov	ax, 4D2h

loc_134FB:				; CODE XREF: sub_13178+375j
		push	ax		; char *
		call	sub_297FC
		add	sp, 6
		mov	al, byte_449AA
		mov	[bp+var_16], al
		cmp	[bp+var_18], 2
		jnz	short loc_1351D
		mov	ax, word_44352
		cmp	word_44354, ax
		jz	short loc_1351D
		mov	[bp+var_16], 0

loc_1351D:				; CODE XREF: sub_13178+396j
					; sub_13178+39Fj
		mov	ax, 4DBh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, word_44352
		add	ax, word_45A24
		jz	short loc_1356A
		mov	ax, word_44352
		add	ax, word_45A24
		sub	cx, cx
		push	cx
		push	ax
		push	word_4434A
		push	word_44348
		call	__aFuldiv
		mov	al, ah
		mov	ah, dl
		mov	dl, dh
		sub	dh, dh
		mov	di, ax
		jmp	short loc_1356C
; ---------------------------------------------------------------------------

loc_1356A:				; CODE XREF: sub_13178+3CCj
		sub	di, di

loc_1356C:				; CODE XREF: sub_13178+3F0j
		mov	ax, 3
		push	ax		; int
		sub	ax, ax
		push	ax		; int
		push	di
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 4DFh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah
		cmp	word_44358, 0
		jnz	short loc_135ED
		jmp	loc_1368B
; ---------------------------------------------------------------------------

loc_135ED:				; CODE XREF: sub_13178+470j
		mov	ax, 4E3h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 3
		push	ax		; int
		sub	ax, ax
		push	ax		; int
		mov	ax, word_44358
		mov	cl, 8
		shr	ax, cl
		push	ax
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 4E7h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah

loc_1368B:				; CODE XREF: sub_13178+472j
		mov	ax, 4EBh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 3
		push	ax		; int
		sub	ax, ax
		push	ax		; int
		mov	ax, word_4435A
		mov	cl, 8
		shr	ax, cl
		push	ax
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		mov	ax, 4EFh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		add	[bp+var_70], 0Ah
		cmp	word_4435C, 0
		jz	short loc_1379A
		mov	ax, 4F3h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 3
		push	ax		; int
		sub	ax, ax
		push	ax		; int
		push	word_4435C
		lea	ax, [bp+var_12]
		push	ax		; char *
		call	sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcat
		add	sp, 4
		sub	ax, ax
		push	ax
		push	word_407CA
		push	[bp+var_70]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah

loc_1379A:				; CODE XREF: sub_13178+5B6j
		cmp	[bp+var_16], 0
		jnz	short loc_137A3
		jmp	loc_138FF
; ---------------------------------------------------------------------------

loc_137A3:				; CODE XREF: sub_13178+626j
		test	byte_43966, 4
		jz	short loc_137AD
		jmp	loc_1384B
; ---------------------------------------------------------------------------

loc_137AD:				; CODE XREF: sub_13178+630j
		mov	ax, word_40D40
		mov	word_40D3A, ax
		mov	ax, word_40D42
		mov	word_40D3C, ax
		mov	ax, word_40D44
		mov	word_40D3E, ax
		call	sub_2998E
		cwd
		mov	cx, 3
		idiv	cx
		mov	word_40D40, dx
		mov	ax, word_40D3A
		cmp	dx, ax
		jnz	short loc_137E0
		mov	bx, dx
		shl	bx, 1
		mov	ax, [bx+56Eh]
		mov	word_40D40, ax

loc_137E0:				; CODE XREF: sub_13178+65Bj
		call	sub_2998E
		cwd
		mov	cx, 3
		idiv	cx
		mov	word_40D44, dx
		mov	ax, word_40D3E
		cmp	dx, ax
		jnz	short loc_13801
		mov	bx, dx
		shl	bx, 1
		mov	ax, [bx+56Eh]
		mov	word_40D44, ax

loc_13801:				; CODE XREF: sub_13178+67Cj
		cmp	[bp+var_18], 1
		jnz	short loc_1382A
		cmp	word_4434E, 0
		jz	short loc_1381E
		call	sub_2998E
		cwd
		mov	cx, 2
		idiv	cx
		add	dx, cx
		jmp	short loc_13835
; ---------------------------------------------------------------------------
		align 2

loc_1381E:				; CODE XREF: sub_13178+694j
		call	sub_2998E
		cwd
		mov	cx, 2
		jmp	short loc_13833
; ---------------------------------------------------------------------------
		align 2

loc_1382A:				; CODE XREF: sub_13178+68Dj
		call	sub_2998E
		cwd
		mov	cx, 4

loc_13833:				; CODE XREF: sub_13178+6AFj
		idiv	cx

loc_13835:				; CODE XREF: sub_13178+6A3j
		mov	word_40D42, dx
		mov	ax, word_40D3C
		cmp	dx, ax
		jnz	short loc_1384B
		mov	bx, dx
		shl	bx, 1
		mov	ax, [bx+574h]
		mov	word_40D42, ax

loc_1384B:				; CODE XREF: sub_13178+632j
					; sub_13178+6C6j
		cmp	[bp+var_18], 1
		jnz	short loc_138B6
		mov	al, byte_449AA
		add	al, 30h	; '0'
		mov	byte_3BD17, al
		mov	ax, 5A4h
		push	ax		; char *
		mov	ax, 3
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	[bp+var_1C], ax
		mov	[bp+var_1A], dx
		mov	ax, 4F7h
		push	ax
		push	[bp+var_66]
		push	[bp+var_68]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_5A], ax
		mov	[bp+var_58], dx
		cmp	word_4434E, 0
		jz	short loc_138A0
		call	sub_19E7B
		add	ax, word_4434C
		and	ax, 1
		add	ax, 2
		jmp	short loc_138AC
; ---------------------------------------------------------------------------
		align 2

loc_138A0:				; CODE XREF: sub_13178+714j
		call	sub_19E7B
		add	ax, word_4434C
		and	ax, 1

loc_138AC:				; CODE XREF: sub_13178+725j
		mov	word_40D42, ax
		mov	[bp+var_6A], 76h ; 'v'
		jmp	short loc_138FF
; ---------------------------------------------------------------------------
		align 2

loc_138B6:				; CODE XREF: sub_13178+6D7j
		mov	al, byte_449AA
		add	al, 30h	; '0'
		mov	byte_3BD1F, al
		mov	ax, 5ACh
		push	ax		; char *
		mov	ax, 3
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	[bp+var_1C], ax
		mov	[bp+var_1A], dx
		mov	ax, 4FCh
		push	ax
		push	[bp+var_66]
		push	[bp+var_68]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_5A], ax
		mov	[bp+var_58], dx
		call	sub_19E7B
		add	ax, word_4434C
		and	ax, 3
		mov	word_40D42, ax
		mov	[bp+var_6A], 64h ; 'd'

loc_138FF:				; CODE XREF: sub_13178+628j
					; sub_13178+73Bj
		mov	[bp+var_6E], 0
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 501h
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 1
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word ptr [bp+var_4A], ax
		mov	word ptr [bp+var_4A+2],	dx
		or	ax, dx
		jnz	short loc_1397F
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 506h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		call	sub_27686
		add	sp, 12h
		or	ax, ax
		jz	short loc_1397F
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 1
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word ptr [bp+var_4A], ax
		mov	word ptr [bp+var_4A+2],	dx

loc_1397F:				; CODE XREF: sub_13178+7BBj
					; sub_13178+7EFj
		mov	ax, word ptr [bp+var_4A]
		or	ax, word ptr [bp+var_4A+2]
		jz	short loc_139B6
		sub	di, di
		jmp	short loc_1398D
; ---------------------------------------------------------------------------
		align 2

loc_1398C:				; CODE XREF: sub_13178+828j
		inc	di

loc_1398D:				; CODE XREF: sub_13178+811j
		cmp	di, 385h
		jge	short loc_139A6
		les	bx, dword_44D42
		mov	al, es:[bx+di]
		les	bx, [bp+var_4A]
		cmp	es:[bx+di], al
		jz	short loc_1398C
		mov	[bp+var_6E], 0FFh

loc_139A6:				; CODE XREF: sub_13178+819j
		push	word ptr [bp+var_4A+2]
		push	word ptr [bp+var_4A]
		call	sub_31641
		add	sp, 4
		jmp	short loc_139BA
; ---------------------------------------------------------------------------

loc_139B6:				; CODE XREF: sub_13178+80Dj
		mov	[bp+var_6E], 0FFh

loc_139BA:				; CODE XREF: sub_13178+83Cj
		cmp	[bp+var_6E], 0FFh
		jz	short loc_139E1
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_11588
		add	sp, 2
		or	al, al
		jz	short loc_139E1
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_11588
		add	sp, 2
		or	al, al
		jz	short loc_139E1
		mov	[bp+var_6E], 0FFh

loc_139E1:				; CODE XREF: sub_13178+846j
					; sub_13178+854j ...
		cmp	[bp+var_6E], 0
		jnz	short loc_13A0F
		cmp	word_4434E, 0
		jz	short loc_13A0F
		mov	ax, word_4434E
		mov	[bp+var_88], ax
		test	byte_43966, 6
		jnz	short loc_13A0F
		or	ax, ax
		jz	short loc_13A0F
		les	bx, dword_44CE6
		cmp	es:[bx+16Ah], ax
		jbe	short loc_13A0F
		mov	[bp+var_6E], 1

loc_13A0F:				; CODE XREF: sub_13178+86Dj
					; sub_13178+874j ...
		mov	[bp+var_8E], 0
		mov	[bp+var_42], 1Eh
		mov	[bp+var_14], 1

loc_13A1D:				; CODE XREF: sub_13178+1289j
					; sub_13178+1290j
		cmp	[bp+var_16], 0
		jz	short loc_13A42
		cmp	[bp+var_6E], 2
		jnz	short loc_13A42
		mov	[bp+var_6E], 0
		call	sub_28F6A
		push	cs
		call	near ptr sub_1168E
		mov	[bp+var_92], 1
		mov	[bp+var_14], 1
		jmp	loc_13FDA
; ---------------------------------------------------------------------------

loc_13A42:				; CODE XREF: sub_13178+8A9j
					; sub_13178+8AFj
		cmp	[bp+var_16], 0
		jnz	short loc_13A4B
		jmp	loc_13F48
; ---------------------------------------------------------------------------

loc_13A4B:				; CODE XREF: sub_13178+8CEj
		mov	byte_3BD29, 31h	; '1'
		mov	ax, 5B6h
		push	ax
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_56], ax
		mov	word ptr [bp+var_56+2],	dx
		les	bx, [bp+var_56]
		mov	ax, es:[bx]
		imul	word_44AE4
		mov	[bp+var_70], ax
		mov	ax, 138h
		sub	ax, [bp+var_70]
		mov	[bp+var_8C], ax
		mov	ax, 63h	; 'c'
		sub	ax, es:[bx+2]
		sar	ax, 1
		mov	[bp+var_90], ax
		push	word_407D2
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, es:[bx+2]
		add	ax, 5
		push	ax
		mov	ax, [bp+var_70]
		add	ax, 5
		push	ax
		mov	ax, [bp+var_90]
		sub	ax, 3
		push	ax
		mov	ax, [bp+var_8C]
		sub	ax, 3
		push	ax
		call	sub_2916E
		add	sp, 0Eh
		mov	al, [bp+var_8E]
		cbw
		mov	bx, ax
		add	bx, [bp+var_5A]
		mov	es, [bp+var_58]
		mov	al, es:[bx]
		add	al, 30h	; '0'
		mov	byte_3BD29, al
		push	[bp+var_90]
		push	[bp+var_8C]
		mov	ax, 5B6h
		push	ax
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33DE2
		add	sp, 8
		mov	al, [bp+var_8E]
		mov	[bp+var_6C], al
		sub	ax, ax
		push	ax
		push	ax
		call	sub_34B0C
		add	sp, 4
		mov	[bp+var_70], 8
		mov	[bp+var_40], 0
		mov	[bp+var_50], 0
		mov	[bp+var_80], 0
		cmp	[bp+var_18], 2
		jnz	short loc_13B2C
		mov	[bp+var_7A], 1
		jmp	short loc_13B31
; ---------------------------------------------------------------------------
		align 2

loc_13B2C:				; CODE XREF: sub_13178+9AAj
		mov	[bp+var_7A], 3

loc_13B31:				; CODE XREF: sub_13178+9B1j
		sub	di, di
		jmp	loc_13CAF
; ---------------------------------------------------------------------------

loc_13B36:				; CODE XREF: sub_13178+B42j
		cmp	[bp+var_18], 2
		jnz	short loc_13B42
		mov	ax, 50Ah
		jmp	short loc_13B57
; ---------------------------------------------------------------------------
		align 2

loc_13B42:				; CODE XREF: sub_13178+9C2j
		mov	al, [bp+var_6A]
		mov	[bp+var_12], al
		mov	[bp+var_11], 31h ; '1'
		mov	al, byte ptr word_40D40

loc_13B4F:				; CODE XREF: sub_13178+A65j
					; sub_13178+A75j
		add	al, 61h	; 'a'
		mov	[bp+var_10], al
		lea	ax, [bp+var_12]

loc_13B57:				; CODE XREF: sub_13178+9C7j
		push	ax
		push	[bp+var_66]
		push	[bp+var_68]
		call	sub_28AA2
		add	sp, 6
		mov	word ptr [bp+var_86], ax
		mov	word ptr [bp+var_86+2],	dx

loc_13B6E:				; CODE XREF: sub_13178:loc_13CCDj
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4

loc_13B7E:				; CODE XREF: sub_13178+B2Ej
		les	bx, [bp+var_86]
		inc	word ptr [bp+var_86]
		mov	al, es:[bx]
		mov	[bp+var_3E], al
		cmp	al, 20h	; ' '
		jz	short loc_13B97
		or	al, al
		jz	short loc_13B97
		jmp	loc_13C92
; ---------------------------------------------------------------------------

loc_13B97:				; CODE XREF: sub_13178+A16j
					; sub_13178+A1Aj
		mov	bx, [bp+var_80]
		add	bx, bp
		mov	byte ptr [bx-3Ch], 0
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_8A], ax
		add	ax, [bp+var_50]
		mov	cx, [bp+var_8C]
		sub	cx, 10h
		cmp	ax, cx
		jge	short loc_13C1A
		mov	ax, [bp+var_40]
		add	ax, [bp+var_80]
		cmp	ax, 50h	; 'P'
		jge	short loc_13C1A
		mov	[bp+var_5C], 0
		jmp	short loc_13BF3
; ---------------------------------------------------------------------------

loc_13BD0:				; CODE XREF: sub_13178+B4Aj
		mov	al, [bp+var_6A]
		mov	[bp+var_12], al
		mov	[bp+var_11], 32h ; '2'
		mov	al, byte ptr word_40D42
		jmp	loc_13B4F
; ---------------------------------------------------------------------------

loc_13BE0:				; CODE XREF: sub_13178+B52j
		mov	al, [bp+var_6A]
		mov	[bp+var_12], al
		mov	[bp+var_11], 33h ; '3'
		mov	al, byte ptr word_40D44
		jmp	loc_13B4F
; ---------------------------------------------------------------------------

loc_13BF0:				; CODE XREF: sub_13178+A95j
		inc	[bp+var_5C]

loc_13BF3:				; CODE XREF: sub_13178+A56j
		mov	ax, [bp+var_80]
		cmp	[bp+var_5C], ax
		jge	short loc_13C10
		mov	bx, [bp+var_5C]
		add	bx, bp
		mov	al, [bx-3Ch]
		mov	bx, [bp+var_40]
		inc	[bp+var_40]
		mov	[bx-538Ch], al
		jmp	short loc_13BF0
; ---------------------------------------------------------------------------
		align 2

loc_13C10:				; CODE XREF: sub_13178+A81j
		mov	ax, [bp+var_8A]
		add	[bp+var_50], ax
		jmp	short loc_13C86
; ---------------------------------------------------------------------------
		align 2

loc_13C1A:				; CODE XREF: sub_13178+A44j
					; sub_13178+A4Fj
		mov	bx, [bp+var_40]
		mov	byte ptr [bx-538Ch], 0
		push	[bp+var_70]
		mov	ax, 8
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		add	[bp+var_70], 8
		cmp	[bp+var_3C], 20h ; ' '
		jnz	short loc_13C46
		mov	[bp+var_5C], 1
		jmp	short loc_13C4B
; ---------------------------------------------------------------------------

loc_13C46:				; CODE XREF: sub_13178+AC5j
		mov	[bp+var_5C], 0

loc_13C4B:				; CODE XREF: sub_13178+ACCj
		mov	[bp+var_40], 0
		jmp	short loc_13C67
; ---------------------------------------------------------------------------

loc_13C52:				; CODE XREF: sub_13178+AF5j
		mov	bx, [bp+var_5C]
		add	bx, bp
		mov	al, [bx-3Ch]
		mov	bx, [bp+var_40]
		inc	[bp+var_40]
		mov	[bx-538Ch], al
		inc	[bp+var_5C]

loc_13C67:				; CODE XREF: sub_13178+AD8j
		mov	ax, [bp+var_80]
		cmp	[bp+var_5C], ax
		jl	short loc_13C52
		mov	bx, [bp+var_40]
		mov	byte ptr [bx-538Ch], 0
		mov	ax, 0AC74h
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_50], ax

loc_13C86:				; CODE XREF: sub_13178+A9Fj
		mov	[bp+var_80], 1
		mov	[bp+var_3C], 20h ; ' '
		jmp	short loc_13CA0
; ---------------------------------------------------------------------------
		align 2

loc_13C92:				; CODE XREF: sub_13178+A1Cj
		mov	bx, [bp+var_80]
		inc	[bp+var_80]
		add	bx, bp
		mov	al, [bp+var_3E]
		mov	[bx-3Ch], al

loc_13CA0:				; CODE XREF: sub_13178+B17j
		cmp	[bp+var_3E], 0
		jz	short loc_13CA9
		jmp	loc_13B7E
; ---------------------------------------------------------------------------

loc_13CA9:				; CODE XREF: sub_13178+B2Cj
		call	sub_298A8
		inc	di

loc_13CAF:				; CODE XREF: sub_13178+9BBj
		cmp	[bp+var_7A], di
		jle	short loc_13CD0
		mov	ax, di
		or	ax, ax
		jnz	short loc_13CBD
		jmp	loc_13B36
; ---------------------------------------------------------------------------

loc_13CBD:				; CODE XREF: sub_13178+B40j
		cmp	ax, 1
		jnz	short loc_13CC5
		jmp	loc_13BD0
; ---------------------------------------------------------------------------

loc_13CC5:				; CODE XREF: sub_13178+B48j
		cmp	ax, 2
		jnz	short loc_13CCD
		jmp	loc_13BE0
; ---------------------------------------------------------------------------

loc_13CCD:				; CODE XREF: sub_13178+B50j
		jmp	loc_13B6E
; ---------------------------------------------------------------------------

loc_13CD0:				; CODE XREF: sub_13178+B3Aj
		cmp	[bp+var_40], 0
		jz	short loc_13D06
		push	word_44D24
		push	word_44D22
		call	sub_2988A
		add	sp, 4
		mov	bx, [bp+var_40]
		mov	byte ptr [bx-538Ch], 0
		push	[bp+var_70]
		mov	ax, 8
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		call	sub_298A8

loc_13D06:				; CODE XREF: sub_13178+B5Cj
		mov	[bp+var_14], 0
		cmp	[bp+var_6E], 0
		jg	short loc_13D13
		jmp	loc_13FDA
; ---------------------------------------------------------------------------

loc_13D13:				; CODE XREF: sub_13178+B96j
		mov	[bp+var_6E], 0
		mov	[bp+var_14], 1
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 15h
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, 81h	; 'Å'
		push	ax
		mov	ax, 50Eh
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	al, [bp+var_52]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_52], 0FEh ; '˛'
		call	sub_29772
		call	sub_28EE4
		mov	[bp+var_70], 1
		call	sub_28F3C

loc_13D83:				; CODE XREF: sub_13178+D52j
		push	word_407D0
		push	word_407CE
		mov	ax, 59Ah
		push	ax
		mov	ax, 590h
		push	ax
		mov	ax, 586h
		push	ax
		mov	ax, 57Ch
		push	ax
		mov	ax, 4
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_72], ax
		add	[bp+var_42], ax
		cmp	[bp+var_42], 1Eh
		jl	short loc_13DD3
		sub	[bp+var_42], 1Eh
		inc	[bp+var_8E]
		mov	al, [bp+var_8E]
		cbw
		mov	bx, ax
		add	bx, [bp+var_5A]
		mov	es, [bp+var_58]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_13DD3
		mov	[bp+var_8E], 0

loc_13DD3:				; CODE XREF: sub_13178+C39j
					; sub_13178+C54j
		mov	al, [bp+var_6C]
		cmp	[bp+var_8E], al
		jnz	short loc_13DDF
		jmp	loc_13EA5
; ---------------------------------------------------------------------------

loc_13DDF:				; CODE XREF: sub_13178+C62j
		mov	al, [bp+var_8E]
		mov	[bp+var_6C], al
		cbw
		mov	bx, ax
		add	bx, [bp+var_5A]
		mov	es, [bp+var_58]
		mov	al, es:[bx]
		add	al, 30h	; '0'
		mov	byte_3BD29, al
		call	sub_28DB6
		mov	ax, 5B6h
		push	ax
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_56], ax
		mov	word ptr [bp+var_56+2],	dx
		cmp	byte_46436, 0
		jz	short loc_13E8A
		push	word ptr [bp+var_46+2]
		push	word ptr [bp+var_46]
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		push	word ptr [bp+var_56+2]
		push	word ptr [bp+var_56]
		call	sub_33DE2
		add	sp, 8
		call	sub_28F3C
		les	bx, [bp+var_56]
		mov	ax, es:[bx+2]
		add	ax, [bp+var_90]
		push	ax
		push	[bp+var_90]
		mov	ax, es:[bx]
		imul	word_44AE4
		add	ax, [bp+var_8C]
		push	ax
		push	[bp+var_8C]
		call	sub_3327F
		add	sp, 8
		push	[bp+var_90]
		push	[bp+var_8C]
		les	bx, [bp+var_46]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC
		add	sp, 8
		call	sub_28F3C
		jmp	short loc_13EA0
; ---------------------------------------------------------------------------
		align 2

loc_13E8A:				; CODE XREF: sub_13178+CA1j
		push	[bp+var_90]
		push	[bp+var_8C]
		push	word ptr [bp+var_56+2]
		push	word ptr [bp+var_56]
		call	sub_33DE2
		add	sp, 8

loc_13EA0:				; CODE XREF: sub_13178+D0Fj
		call	sub_28D9E

loc_13EA5:				; CODE XREF: sub_13178+C64j
		push	di
		call	sub_287C4
		add	sp, 2
		mov	si, ax
		cmp	si, 0Dh
		jz	short loc_13EBF
		cmp	si, 20h	; ' '
		jz	short loc_13EBF
		cmp	si, 1Bh
		jnz	short loc_13EC4

loc_13EBF:				; CODE XREF: sub_13178+D3Bj
					; sub_13178+D40j
		mov	[bp+var_70], 0

loc_13EC4:				; CODE XREF: sub_13178+D45j
		cmp	[bp+var_70], 0
		jz	short loc_13ECD
		jmp	loc_13D83
; ---------------------------------------------------------------------------

loc_13ECD:				; CODE XREF: sub_13178+D50j
		call	sub_28F6A
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		mov	ax, word_3BD0A
		inc	ax
		push	ax
		push	word_3BD00
		mov	ax, 138h
		push	ax
		mov	ax, 8
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_407F8
		call	sub_332C0
		add	sp, 2
		call	sub_28DB6
		mov	al, [bp+var_18]
		cbw
		push	ax
		mov	ax, 512h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		push	[bp+var_88]
		push	cs
		call	near ptr sub_11A1C
		add	sp, 8
		jmp	loc_13FDA
; ---------------------------------------------------------------------------

loc_13F48:				; CODE XREF: sub_13178+8D0j
		cmp	[bp+var_6E], 0
		jle	short loc_13F84
		call	sub_28EE4
		call	sub_28DB6
		sub	ax, ax
		push	ax
		mov	ax, 516h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		push	[bp+var_88]
		push	cs
		call	near ptr sub_11A1C
		add	sp, 8
		mov	[bp+var_6E], 0
		mov	[bp+var_52], 0FEh ; '˛'
		jmp	short loc_13FDA
; ---------------------------------------------------------------------------

loc_13F84:				; CODE XREF: sub_13178+DD4j
		call	sub_28DB6
		cmp	[bp+var_6E], 0FFh
		jnz	short loc_13FD6
		mov	ax, 51Ah
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 32h	; '2'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29008
		add	sp, 0Ah
		jmp	short loc_13FDA
; ---------------------------------------------------------------------------
		align 2

loc_13FD6:				; CODE XREF: sub_13178+E15j
		push	cs
		call	near ptr sub_1168E

loc_13FDA:				; CODE XREF: sub_13178+8C7j
					; sub_13178+B98j ...
		mov	[bp+var_92], 1
		mov	[bp+var_78], 1
		call	sub_29772
		call	sub_28F6A
		cmp	[bp+var_16], 0
		jz	short loc_13FF9
		cmp	[bp+var_6E], 0FFh
		jnz	short loc_14002

loc_13FF9:				; CODE XREF: sub_13178+E79j
		mov	[bp+var_9C], 0FFDCh
		jmp	short loc_14058
; ---------------------------------------------------------------------------
		align 2

loc_14002:				; CODE XREF: sub_13178+E7Fj
		mov	[bp+var_9C], 0
		cmp	[bp+var_14], 0
		jz	short loc_14014
		mov	ax, 51Eh
		jmp	short loc_14017
; ---------------------------------------------------------------------------
		align 2

loc_14014:				; CODE XREF: sub_13178+E94j
		mov	ax, 522h

loc_14017:				; CODE XREF: sub_13178+E99j
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		mov	[bp+var_7E], ax
		mov	[bp+var_7C], dx
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 15h
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, word_3BCEC
		inc	ax
		push	ax
		push	dx
		push	[bp+var_7E]
		call	sub_292DC
		add	sp, 14h

loc_14058:				; CODE XREF: sub_13178+E87j
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 15h
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, [bp+var_9C]
		add	ax, word_3BCEE
		inc	ax
		push	ax
		mov	ax, 526h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		cmp	[bp+var_16], 0
		jz	short loc_140A4
		mov	ax, 52Ah
		jmp	short loc_140A7
; ---------------------------------------------------------------------------

loc_140A4:				; CODE XREF: sub_13178+F25j
		mov	ax, 52Eh

loc_140A7:				; CODE XREF: sub_13178+F2Aj
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		mov	[bp+var_7E], ax
		mov	[bp+var_7C], dx
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 15h
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, [bp+var_9C]
		add	ax, word_3BCF0
		inc	ax
		push	ax
		push	dx
		push	[bp+var_7E]
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 15h
		push	ax
		mov	ax, 46h	; 'F'
		push	ax
		mov	ax, 0AFh ; 'Ø'
		push	ax
		mov	ax, [bp+var_9C]
		add	ax, word_3BCF2
		inc	ax
		push	ax
		mov	ax, 532h
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	di, di

loc_14130:				; CODE XREF: sub_13178+FEBj
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_9E], ax
		mov	bx, ax
		mov	ax, [bx+57Ch]
		add	ax, [bp+var_9C]
		add	bx, bp
		mov	[bx-64h], ax
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_9E], ax
		mov	bx, ax
		mov	ax, [bx+586h]
		add	ax, [bp+var_9C]
		add	bx, bp
		mov	[bx-9Ah], ax
		inc	di
		cmp	di, 4
		jl	short loc_14130
		call	sub_28EE4
		mov	al, [bp+var_52]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_52], 0FEh ; '˛'
		call	sub_28F3C

loc_14188:				; CODE XREF: sub_13178+122Ej
					; sub_13178:loc_143C3j	...
		mov	al, [bp+var_78]
		cmp	[bp+var_92], al
		jz	short loc_141DC
		mov	al, [bp+var_92]
		mov	[bp+var_78], al
		call	sub_28F3C
		mov	ax, word_3BD0A
		inc	ax
		push	ax
		push	word_3BD00
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		call	sub_28D9E
		call	sub_2A230
		call	sub_29772

loc_141DC:				; CODE XREF: sub_13178+1017j
		push	word_407D0
		push	word_407CE
		mov	ax, 59Ah
		push	ax
		mov	ax, 590h
		push	ax
		lea	ax, [bp+var_9A]
		push	ax
		lea	ax, [bp+var_64]
		push	ax
		mov	al, [bp+var_92]
		cbw
		push	ax
		call	sub_29786
		add	sp, 0Eh
		mov	[bp+var_72], ax
		cmp	[bp+var_14], 0
		jz	short loc_1420F
		jmp	loc_14337
; ---------------------------------------------------------------------------

loc_1420F:				; CODE XREF: sub_13178+1092j
		cmp	[bp+var_18], 2
		jnz	short loc_14218
		jmp	loc_14337
; ---------------------------------------------------------------------------

loc_14218:				; CODE XREF: sub_13178+109Bj
		add	[bp+var_42], ax
		cmp	[bp+var_42], 1Eh
		jl	short loc_14241
		sub	[bp+var_42], 1Eh
		inc	[bp+var_8E]
		mov	al, [bp+var_8E]
		cbw
		mov	bx, ax
		add	bx, [bp+var_5A]
		mov	es, [bp+var_58]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_14241
		mov	[bp+var_8E], 0

loc_14241:				; CODE XREF: sub_13178+10A7j
					; sub_13178+10C2j
		mov	al, [bp+var_6C]
		cmp	[bp+var_8E], al
		jnz	short loc_1424D
		jmp	loc_14337
; ---------------------------------------------------------------------------

loc_1424D:				; CODE XREF: sub_13178+10D0j
		mov	al, [bp+var_8E]
		mov	[bp+var_6C], al
		cbw
		mov	bx, ax
		add	bx, [bp+var_5A]
		mov	es, [bp+var_58]
		mov	al, es:[bx]
		add	al, 30h	; '0'
		mov	byte_3BD29, al
		call	sub_28DB6
		mov	ax, 5B6h
		push	ax
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_56], ax
		mov	word ptr [bp+var_56+2],	dx
		cmp	byte_46436, 0
		jz	short loc_142F8
		push	word ptr [bp+var_46+2]
		push	word ptr [bp+var_46]
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		push	word ptr [bp+var_56+2]
		push	word ptr [bp+var_56]
		call	sub_33DE2
		add	sp, 8
		call	sub_28F3C
		les	bx, [bp+var_56]
		mov	ax, es:[bx+2]
		add	ax, [bp+var_90]
		push	ax
		push	[bp+var_90]
		mov	ax, es:[bx]
		imul	word_44AE4
		add	ax, [bp+var_8C]
		push	ax
		push	[bp+var_8C]
		call	sub_3327F
		add	sp, 8
		push	[bp+var_90]
		push	[bp+var_8C]
		les	bx, [bp+var_46]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC
		add	sp, 8
		call	sub_28F3C
		jmp	short loc_1430E
; ---------------------------------------------------------------------------
		align 2

loc_142F8:				; CODE XREF: sub_13178+110Fj
		push	[bp+var_90]
		push	[bp+var_8C]
		push	word ptr [bp+var_56+2]
		push	word ptr [bp+var_56]
		call	sub_33DE2
		add	sp, 8

loc_1430E:				; CODE XREF: sub_13178+117Dj
		push	[bp+var_90]
		push	[bp+var_8C]
		mov	ax, 5B6h
		push	ax
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33DE2
		add	sp, 8
		call	sub_28D9E

loc_14337:				; CODE XREF: sub_13178+1094j
					; sub_13178+109Dj ...
		cmp	[bp+var_16], 0
		jz	short loc_14343
		cmp	[bp+var_6E], 0FFh
		jnz	short loc_1436C

loc_14343:				; CODE XREF: sub_13178+11C3j
		mov	ax, 59Ch
		push	ax
		mov	ax, 592h
		push	ax
		lea	ax, [bp+var_98]
		push	ax
		lea	ax, [bp+var_62]
		push	ax
		mov	ax, 3
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_82], al
		cmp	al, 0FFh
		jz	short loc_14395
		inc	al
		jmp	short loc_14391
; ---------------------------------------------------------------------------

loc_1436C:				; CODE XREF: sub_13178+11C9j
		mov	ax, 59Ah
		push	ax
		mov	ax, 590h
		push	ax
		lea	ax, [bp+var_9A]
		push	ax
		lea	ax, [bp+var_64]
		push	ax
		mov	ax, 4
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_82], al
		cmp	al, 0FFh
		jz	short loc_14395

loc_14391:				; CODE XREF: sub_13178+11F2j
		mov	[bp+var_92], al

loc_14395:				; CODE XREF: sub_13178+11EEj
					; sub_13178+1217j
		push	[bp+var_72]
		call	sub_287C4
		add	sp, 2
		mov	si, ax
		or	si, si
		jnz	short loc_143A9
		jmp	loc_14188
; ---------------------------------------------------------------------------

loc_143A9:				; CODE XREF: sub_13178+122Cj
		cmp	ax, 0Dh
		jz	short loc_143C6
		cmp	ax, 20h	; ' '
		jz	short loc_143C6
		cmp	ax, 4B00h
		jnz	short loc_143BB
		jmp	loc_1447A
; ---------------------------------------------------------------------------

loc_143BB:				; CODE XREF: sub_13178+123Ej
		cmp	ax, 4D00h
		jnz	short loc_143C3
		jmp	loc_144A4
; ---------------------------------------------------------------------------

loc_143C3:				; CODE XREF: sub_13178+1246j
		jmp	loc_14188
; ---------------------------------------------------------------------------

loc_143C6:				; CODE XREF: sub_13178+1234j
					; sub_13178+1239j
		cmp	[bp+var_92], 0
		jnz	short loc_1440C
		call	sub_28F6A
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	ax
		call	sub_292DC
		add	sp, 14h
		cmp	[bp+var_14], 0
		jz	short loc_14404
		mov	[bp+var_6E], 0
		jmp	loc_13A1D
; ---------------------------------------------------------------------------

loc_14404:				; CODE XREF: sub_13178+1283j
		mov	[bp+var_6E], 2
		jmp	loc_13A1D
; ---------------------------------------------------------------------------
		align 2

loc_1440C:				; CODE XREF: sub_13178+1253j
		call	sub_29858
		cmp	[bp+var_16], 0
		jz	short loc_14425
		push	[bp+var_1A]
		push	[bp+var_1C]
		call	sub_31641
		add	sp, 4

loc_14425:				; CODE XREF: sub_13178+129Dj
		cmp	byte_46436, 0
		jz	short loc_1443A
		push	word ptr [bp+var_46+2]
		push	word ptr [bp+var_46]
		call	sub_324AA
		add	sp, 4

loc_1443A:				; CODE XREF: sub_13178+12B2j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		cmp	byte_449AA, 0
		jz	short loc_1445F
		push	[bp+var_66]
		push	[bp+var_68]
		call	sub_28A78
		add	sp, 4

loc_1445F:				; CODE XREF: sub_13178+12D7j
		push	[bp+var_4C]
		push	[bp+var_4E]
		call	sub_28A78
		add	sp, 4
		mov	al, [bp+var_92]
		cbw
		dec	ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_1447A:				; CODE XREF: sub_13178+1240j
		cmp	[bp+var_16], 0
		jz	short loc_14486
		cmp	[bp+var_6E], 0FFh
		jnz	short loc_14496

loc_14486:				; CODE XREF: sub_13178+1306j
		cmp	[bp+var_92], 1
		jg	short loc_1449D

loc_1448D:				; CODE XREF: sub_13178+1323j
		mov	[bp+var_92], 3
		jmp	loc_14188
; ---------------------------------------------------------------------------
		align 2

loc_14496:				; CODE XREF: sub_13178+130Cj
		cmp	[bp+var_92], 0
		jz	short loc_1448D

loc_1449D:				; CODE XREF: sub_13178+1313j
		dec	[bp+var_92]
		jmp	loc_14188
; ---------------------------------------------------------------------------

loc_144A4:				; CODE XREF: sub_13178+1248j
		cmp	[bp+var_92], 3
		jge	short loc_144B2
		inc	[bp+var_92]
		jmp	loc_14188
; ---------------------------------------------------------------------------

loc_144B2:				; CODE XREF: sub_13178+1331j
		cmp	[bp+var_16], 0
		jz	short loc_144BE
		cmp	[bp+var_6E], 0FFh
		jnz	short loc_144C6

loc_144BE:				; CODE XREF: sub_13178+133Ej
		mov	[bp+var_92], 1
		jmp	loc_14188
; ---------------------------------------------------------------------------

loc_144C6:				; CODE XREF: sub_13178+1344j
		mov	[bp+var_92], 0
		jmp	loc_14188
sub_13178	endp

; ---------------------------------------------------------------------------
		pop	si

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_144CF	proc far		; CODE XREF: _main+398p

var_440		= byte ptr -440h
var_43E		= byte ptr -43Eh
var_428		= word ptr -428h
var_426		= word ptr -426h
var_424		= word ptr -424h
var_422		= word ptr -422h
var_420		= word ptr -420h
var_41E		= word ptr -41Eh
var_41C		= word ptr -41Ch
var_41A		= word ptr -41Ah
var_40E		= word ptr -40Eh
var_40C		= word ptr -40Ch
var_40A		= word ptr -40Ah
var_408		= word ptr -408h
var_406		= byte ptr -406h
var_405		= byte ptr -405h
var_404		= byte ptr -404h
var_403		= byte ptr -403h
var_402		= byte ptr -402h
var_401		= byte ptr -401h
var_400		= byte ptr -400h
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 440h
		push	si
		mov	bx, [bp+arg_0]
		mov	al, [bx+5C4h]
		mov	byte_3BD4C, al
		mov	al, [bx+5C4h]
		mov	byte_3BD50, al
		mov	ax, 5BBh
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_40C], ax
		mov	[bp+var_40A], dx
		mov	ax, 5C0h
		push	ax
		push	dx
		push	[bp+var_40C]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		lea	ax, [bp+var_400]
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 5DAh
		push	ax
		push	[bp+var_40A]
		push	[bp+var_40C]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AC7Ah
		push	ax
		lea	ax, [bp+var_400]
		push	ax		; char *
		call	_strcat
		add	sp, 4
		sub	si, si

loc_14551:				; CODE XREF: sub_144CF+8Ej
		mov	al, [si-538Ch]
		mov	[bp+si+var_406], al
		inc	si
		cmp	si, 6
		jl	short loc_14551
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_428]
		push	ax
		push	word_40800
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		lea	ax, [bp+var_400]
		push	ss
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	byte_463E6, 0
		mov	al, [bp+var_406]
		mov	byte_463E4, al
		mov	al, [bp+var_405]
		mov	byte_463E5, al
		push	[bp+var_426]
		push	[bp+var_428]
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	al, [bp+var_404]
		mov	byte_463E4, al
		mov	al, [bp+var_403]
		mov	byte_463E5, al
		push	[bp+var_422]
		push	[bp+var_424]
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	al, [bp+var_402]
		mov	byte_463E4, al
		mov	al, [bp+var_401]
		mov	byte_463E5, al
		push	[bp+var_41E]
		push	[bp+var_420]
		mov	ax, 0AC74h
		push	ax
		call	sub_33742
		add	sp, 6
		mov	ax, 5DEh
		push	ax
		push	[bp+var_40A]
		push	[bp+var_40C]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, [bp+var_41C]
		mov	dx, [bp+var_41A]
		mov	[bp+var_428], ax
		mov	[bp+var_426], dx
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_408], ax
		mov	[bp+var_43E], 0
		mov	[bp+var_40E], 0

loc_14641:				; CODE XREF: sub_144CF+1F3j
		mov	ax, 7530h
		cwd
		push	dx		; int
		push	ax		; int
		push	[bp+var_426]	; int
		push	[bp+var_428]	; int
		push	[bp+var_408]
		lea	ax, [bp+var_43E]
		push	ax		; char *
		call	sub_290BC
		add	sp, 0Ch
		sub	si, si
		jmp	short loc_1468D
; ---------------------------------------------------------------------------

loc_14664:				; CODE XREF: sub_144CF+1C3j
		mov	al, [bp+si+var_43E]
		cbw
		mov	bx, ax
		mov	al, [bx+382Fh]
		and	al, 1
		mov	[bp+var_440], al
		or	al, al
		jz	short loc_1468C
		jz	short loc_14684
		mov	al, [bp+si+var_43E]
		add	al, 20h	; ' '
		jmp	short loc_14688
; ---------------------------------------------------------------------------
		align 2

loc_14684:				; CODE XREF: sub_144CF+1AAj
		mov	al, [bp+si+var_43E]

loc_14688:				; CODE XREF: sub_144CF+1B2j
		mov	[bp+si+var_43E], al

loc_1468C:				; CODE XREF: sub_144CF+1A8j
		inc	si

loc_1468D:				; CODE XREF: sub_144CF+193j
		cmp	[bp+si+var_43E], 0
		jnz	short loc_14664
		mov	ax, 0AC74h
		push	ax
		lea	ax, [bp+var_43E]
		push	ax		; char *
		call	_strcmp
		add	sp, 4
		or	ax, ax
		jnz	short loc_146B0
		mov	byte_45E1A, 1
		jmp	short loc_146B4
; ---------------------------------------------------------------------------

loc_146B0:				; CODE XREF: sub_144CF+1D8j
		inc	[bp+var_40E]

loc_146B4:				; CODE XREF: sub_144CF+1DFj
		cmp	byte_45E1A, 0
		jnz	short loc_146C5
		cmp	[bp+var_40E], 3
		jz	short loc_146C5
		jmp	loc_14641
; ---------------------------------------------------------------------------

loc_146C5:				; CODE XREF: sub_144CF+1EAj
					; sub_144CF+1F1j
		call	sub_275C6
		call	sub_28D9E
		push	[bp+var_40A]
		push	[bp+var_40C]
		call	sub_28A78
		add	sp, 4
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_144CF	endp


; =============== S U B	R O U T	I N E =======================================


sub_146E4	proc far		; CODE XREF: _main+2AEp
		mov	byte_449A4, 43h	; 'C'
		mov	byte_449A5, 4Fh	; 'O'
		mov	byte_449A6, 55h	; 'U'
		mov	byte_449A7, 4Eh	; 'N'
		mov	byte_449A8, 0
		mov	byte_449AA, 0
		mov	byte_449AF, 0
		mov	byte_449A9, 1
		mov	byte_449AB, 0FFh
		retf
sub_146E4	endp

seg000		ends

; ===========================================================================

; Segment type:	Pure code
seg001		segment	byte public 'CODE' use16
		assume cs:seg001
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14712	proc far		; CODE XREF: sub_17008+D1p
					; sub_195E0+1p

var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= byte ptr -20h
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= byte ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6

		push	bp
		mov	bp, sp
		sub	sp, 40h
		push	di
		push	si
		cmp	word_449D0, 14h
		jnz	short loc_1472E
		mov	[bp+var_14], 8
		mov	[bp+var_10], 1
		jmp	short loc_14738
; ---------------------------------------------------------------------------
		align 2

loc_1472E:				; CODE XREF: sub_14712+Dj
		mov	[bp+var_14], 10h
		mov	[bp+var_10], 2

loc_14738:				; CODE XREF: sub_14712+19j
		cmp	word_446EC, 0
		jnz	short loc_14746
		cmp	byte_44889, 2
		jnz	short loc_1474C

loc_14746:				; CODE XREF: sub_14712+2Bj
		mov	[bp+var_20], 1
		jmp	short loc_14750
; ---------------------------------------------------------------------------

loc_1474C:				; CODE XREF: sub_14712+32j
		mov	[bp+var_20], 0

loc_14750:				; CODE XREF: sub_14712+38j
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_14759:				; CODE XREF: sub_14712+4Dj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14759
		mov	[bp+var_28], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_1476D:				; CODE XREF: sub_14712+61j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1476D
		mov	[bp+var_2A], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_14781:				; CODE XREF: sub_14712+75j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14781
		mov	[bp+var_36], ax
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_14795:				; CODE XREF: sub_14712+89j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14795
		mov	[bp+var_34], ax
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_147A9:				; CODE XREF: sub_14712+9Dj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_147A9
		mov	[bp+var_3E], ax
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_147BD:				; CODE XREF: sub_14712+B1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_147BD
		mov	[bp+var_40], ax
		mov	byte_44785, 0
		mov	byte_448F2, 0
		mov	ax, 1
		push	ax
		push	word_446CE
		push	word_446D0
		push	word_446D2
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_16], ax
		mov	byte_44785, 1
		cmp	byte_4477F, 0
		jz	short loc_1480C
		cmp	word_446E2, 0
		jz	short loc_14803
		jmp	loc_14B72
; ---------------------------------------------------------------------------

loc_14803:				; CODE XREF: sub_14712+ECj
		mov	byte_44785, 0
		jmp	loc_14B72
; ---------------------------------------------------------------------------
		align 2

loc_1480C:				; CODE XREF: sub_14712+E5j
		push	si
		lea	di, [bp+var_3C]
		mov	si, 8FEAh
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		cmp	[bp+var_3A], 0FFFFh
		jz	short loc_14848
		mov	ax, [bp+var_3C]
		sub	ax, [bp+var_28]
		mov	[bp+var_32], ax
		mov	ax, [bp+var_3A]
		sub	ax, [bp+var_2A]
		mov	[bp+var_30], ax
		mov	ax, [bp+var_38]
		sub	ax, [bp+var_36]
		mov	[bp+var_2E], ax
		lea	ax, [bp+var_32]
		push	ax
		call	sub_2EA08
		add	sp, 2
		jmp	short loc_1485E
; ---------------------------------------------------------------------------

loc_14848:				; CODE XREF: sub_14712+10Bj
		mov	ax, [bp+var_38]
		sub	ax, [bp+var_36]
		push	ax
		mov	ax, [bp+var_3C]
		sub	ax, [bp+var_28]
		push	ax
		call	sub_300B6
		add	sp, 4

loc_1485E:				; CODE XREF: sub_14712+134j
		mov	si, ax
		cmp	si, 0C8h ; '»'
		jge	short loc_148B3

loc_14866:				; CODE XREF: sub_14712+401j
		mov	ax, 911Dh
		push	ax
		mov	al, byte_44784
		inc	byte_44784
		sub	ah, ah
		push	ax
		mov	ax, 8FEAh
		push	ax
		mov	bx, word_44700
		shl	bx, 1
		les	di, dword_43942
		push	word ptr es:[bx+di]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		or	al, al
		jz	short loc_148B3
		inc	word_44700
		mov	bx, word_44700
		shl	bx, 1
		les	di, dword_43942
		cmp	word ptr es:[bx+di], 0
		jnz	short loc_148AE
		inc	byte_44783
		mov	word_44700, 0

loc_148AE:				; CODE XREF: sub_14712+190j
		mov	byte_44784, 0

loc_148B3:				; CODE XREF: sub_14712+152j
					; sub_14712+17Cj
		cmp	byte_44889, 2
		jnz	short loc_148EC

loc_148BA:				; CODE XREF: sub_14712+20Cj
					; sub_14712+222j ...
		push	si
		lea	di, [bp+var_C]
		mov	si, 8FEAh
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si

loc_148C7:				; CODE XREF: sub_14712+2D6j
					; sub_14712+2E0j ...
		push	si
		lea	di, [bp+var_26]
		lea	si, [bp+var_C]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	ax, [bp+var_28]
		sub	[bp+var_26], ax
		cmp	[bp+var_A], 0FFFFh
		jz	short loc_148E3
		jmp	loc_14A6E
; ---------------------------------------------------------------------------

loc_148E3:				; CODE XREF: sub_14712+1CCj
		mov	[bp+var_24], 0
		jmp	loc_14A74
; ---------------------------------------------------------------------------
		align 2

loc_148EC:				; CODE XREF: sub_14712+1A6j
		mov	ax, [bp+var_34]
		sub	ax, [bp+var_28]
		mov	[bp+var_26], ax
		mov	ax, [bp+var_3E]
		sub	ax, [bp+var_2A]
		mov	[bp+var_24], ax
		mov	ax, [bp+var_40]
		sub	ax, [bp+var_36]
		mov	[bp+var_22], ax
		lea	ax, [bp+var_1C]
		push	ax
		push	[bp+var_16]
		lea	ax, [bp+var_26]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_1A], 5Ah ; 'Z'
		jg	short loc_148BA
		cmp	[bp+var_1C], 0
		jge	short loc_1492E
		mov	ax, [bp+var_1C]
		neg	ax
		jmp	short loc_14931
; ---------------------------------------------------------------------------
		align 2

loc_1492E:				; CODE XREF: sub_14712+212j
		mov	ax, [bp+var_1C]

loc_14931:				; CODE XREF: sub_14712+219j
		cmp	ax, 0B4h ; '¥'
		jg	short loc_148BA
		cmp	[bp+var_18], 258h
		jle	short loc_14940
		jmp	loc_148BA
; ---------------------------------------------------------------------------

loc_14940:				; CODE XREF: sub_14712+229j
		cmp	[bp+var_18], 0FF4Ch
		jge	short loc_1494A
		jmp	loc_148BA
; ---------------------------------------------------------------------------

loc_1494A:				; CODE XREF: sub_14712+233j
		mov	ax, [bp+var_34]
		sub	ax, word_4475A
		mov	[bp+var_26], ax
		cmp	word_4475C, 0FFFFh
		jnz	short loc_14962
		mov	[bp+var_24], 0
		jmp	short loc_1496C
; ---------------------------------------------------------------------------

loc_14962:				; CODE XREF: sub_14712+247j
		mov	ax, [bp+var_3E]
		sub	ax, word_4475C
		mov	[bp+var_24], ax

loc_1496C:				; CODE XREF: sub_14712+24Ej
		mov	ax, [bp+var_40]
		sub	ax, word_4475E
		mov	[bp+var_22], ax
		lea	ax, [bp+var_6]
		push	ax
		push	[bp+var_16]
		lea	ax, [bp+var_26]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_6], 0
		jge	short loc_149FE
		mov	ax, word_44766
		cwd
		mov	cx, ax
		mov	ax, word_4475A
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_C], ax
		cmp	word_4475C, 0FFFFh
		jnz	short loc_149B4
		mov	[bp+var_A], 0FFFFh
		jmp	short loc_149CB
; ---------------------------------------------------------------------------

loc_149B4:				; CODE XREF: sub_14712+299j
		mov	ax, word_44768
		cwd
		mov	cx, ax
		mov	ax, word_4475C
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_A], ax

loc_149CB:				; CODE XREF: sub_14712+2A0j
		mov	ax, word_4476A
		cwd
		mov	cx, ax
		mov	ax, word_4475E
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_8], ax
		cmp	[bp+var_18], 0FFB2h
		jg	short loc_149EB
		jmp	loc_148C7
; ---------------------------------------------------------------------------

loc_149EB:				; CODE XREF: sub_14712+2D4j
		cmp	byte_446AF, 0
		jz	short loc_149F5
		jmp	loc_148C7
; ---------------------------------------------------------------------------

loc_149F5:				; CODE XREF: sub_14712+2DEj
		mov	byte_448F2, 2
		jmp	loc_148C7
; ---------------------------------------------------------------------------
		align 2

loc_149FE:				; CODE XREF: sub_14712+27Bj
		mov	ax, word_44760
		cwd
		mov	cx, ax
		mov	ax, word_4475A
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_C], ax
		cmp	word_4475C, 0FFFFh
		jnz	short loc_14A24
		mov	[bp+var_A], 0FFFFh
		jmp	short loc_14A3B
; ---------------------------------------------------------------------------
		align 2

loc_14A24:				; CODE XREF: sub_14712+308j
		mov	ax, word_44762
		cwd
		mov	cx, ax
		mov	ax, word_4475C
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_A], ax

loc_14A3B:				; CODE XREF: sub_14712+30Fj
		mov	ax, word_44764
		cwd
		mov	cx, ax
		mov	ax, word_4475E
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	[bp+var_8], ax
		cmp	[bp+var_18], 0FFB2h
		jg	short loc_14A5B
		jmp	loc_148C7
; ---------------------------------------------------------------------------

loc_14A5B:				; CODE XREF: sub_14712+344j
		cmp	byte_446AF, 0
		jz	short loc_14A65
		jmp	loc_148C7
; ---------------------------------------------------------------------------

loc_14A65:				; CODE XREF: sub_14712+34Ej
		mov	byte_448F2, 1
		jmp	loc_148C7
; ---------------------------------------------------------------------------
		align 2

loc_14A6E:				; CODE XREF: sub_14712+1CEj
		mov	ax, [bp+var_2A]
		sub	[bp+var_24], ax

loc_14A74:				; CODE XREF: sub_14712+1D6j
		mov	ax, [bp+var_36]
		sub	[bp+var_22], ax
		lea	ax, [bp+var_3C]
		push	ax
		push	[bp+var_16]
		lea	ax, [bp+var_26]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_38]
		push	[bp+var_3C]
		call	sub_2EA4E
		add	sp, 4
		mov	[bp+var_2C], ax
		cmp	byte_4477D, 0
		jnz	short loc_14B03
		or	ax, ax
		jge	short loc_14AAE
		neg	ax
		jmp	short loc_14AB1
; ---------------------------------------------------------------------------
		align 2

loc_14AAE:				; CODE XREF: sub_14712+395j
		mov	ax, [bp+var_2C]

loc_14AB1:				; CODE XREF: sub_14712+399j
		cmp	ax, 100h
		jle	short loc_14B03
		mov	ax, 911Dh
		push	ax
		mov	al, byte_44784
		inc	byte_44784
		sub	ah, ah
		push	ax
		mov	ax, 8FEAh
		push	ax
		mov	bx, word_44700
		shl	bx, 1
		les	di, dword_43942
		push	word ptr es:[bx+di]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		or	al, al
		jz	short loc_14B03
		inc	word_44700
		mov	bx, word_44700
		shl	bx, 1
		les	di, dword_43942
		cmp	word ptr es:[bx+di], 0
		jnz	short loc_14AFE
		inc	byte_44783
		mov	word_44700, 0

loc_14AFE:				; CODE XREF: sub_14712+3E0j
		mov	byte_44784, 0

loc_14B03:				; CODE XREF: sub_14712+391j
					; sub_14712+3A2j ...
		cmp	[bp+var_2C], 41h ; 'A'
		jle	short loc_14B1E
		cmp	[bp+var_20], 0
		jnz	short loc_14B16

loc_14B0F:				; CODE XREF: sub_14712+416j
		mov	[bp+var_20], 1
		jmp	loc_14866
; ---------------------------------------------------------------------------

loc_14B16:				; CODE XREF: sub_14712+3FBj
		mov	[bp+var_2C], 41h ; 'A'
		jmp	short loc_14B2F
; ---------------------------------------------------------------------------
		align 2

loc_14B1E:				; CODE XREF: sub_14712+3F5j
		cmp	[bp+var_2C], 0FFBFh
		jge	short loc_14B2F
		cmp	[bp+var_20], 0
		jz	short loc_14B0F
		mov	[bp+var_2C], 0FFBFh

loc_14B2F:				; CODE XREF: sub_14712+409j
					; sub_14712+410j
		cmp	byte_44775, 0
		jnz	short loc_14B3B
		mov	[bp+var_2C], 0

loc_14B3B:				; CODE XREF: sub_14712+422j
		mov	si, [bp+var_2C]
		sub	si, word_446D6
		jns	short loc_14B4A
		mov	ax, si
		neg	ax
		jmp	short loc_14B4C
; ---------------------------------------------------------------------------

loc_14B4A:				; CODE XREF: sub_14712+430j
		mov	ax, si

loc_14B4C:				; CODE XREF: sub_14712+436j
		cmp	ax, [bp+var_14]
		jle	short loc_14B6C
		mov	ax, word_446D6
		cmp	[bp+var_2C], ax
		jge	short loc_14B62
		mov	ax, [bp+var_14]
		sub	word_446D6, ax
		jmp	short loc_14B72
; ---------------------------------------------------------------------------

loc_14B62:				; CODE XREF: sub_14712+445j
		mov	ax, [bp+var_14]
		add	word_446D6, ax
		jmp	short loc_14B72
; ---------------------------------------------------------------------------
		align 2

loc_14B6C:				; CODE XREF: sub_14712+43Dj
		mov	ax, [bp+var_2C]
		mov	word_446D6, ax

loc_14B72:				; CODE XREF: sub_14712+EEj
					; sub_14712+F6j ...
		mov	[bp+var_E], 0
		cmp	byte_44776, 0
		jz	short loc_14BFA
		cmp	byte_4477F, 0
		jnz	short loc_14BF6
		cmp	word_446EC, 0
		jz	short loc_14BB6
		mov	ax, [bp+var_10]
		mov	cl, 9
		shl	ax, cl
		cmp	ax, word_446E2
		jbe	short loc_14BA8
		mov	word_446E2, 0
		mov	word_446EC, 0
		jmp	short loc_14BFA
; ---------------------------------------------------------------------------
		align 4

loc_14BA8:				; CODE XREF: sub_14712+484j
		mov	ax, [bp+var_10]
		mov	cl, 9
		shl	ax, cl
		sub	word_446E2, ax
		jmp	short loc_14BFA
; ---------------------------------------------------------------------------
		align 2

loc_14BB6:				; CODE XREF: sub_14712+477j
		mov	ax, word_446FC
		cmp	word_446FA, ax
		jg	short loc_14BF6
		cmp	byte_44889, 2
		jnz	short loc_14BCE
		mov	[bp+var_12], 4000h
		jmp	short loc_14BD7
; ---------------------------------------------------------------------------
		align 2

loc_14BCE:				; CODE XREF: sub_14712+4B2j
		mov	ah, byte_4488D
		sub	al, al
		mov	[bp+var_12], ax

loc_14BD7:				; CODE XREF: sub_14712+4B9j
		mov	ax, [bp+var_12]
		sub	ax, 100h
		cmp	ax, word_446E0
		jbe	short loc_14BEA
		mov	[bp+var_E], 1
		jmp	short loc_14BFA
; ---------------------------------------------------------------------------
		align 2

loc_14BEA:				; CODE XREF: sub_14712+4CFj
		mov	ax, [bp+var_12]
		add	ah, 3
		cmp	ax, word_446E0
		jnb	short loc_14BFA

loc_14BF6:				; CODE XREF: sub_14712+470j
					; sub_14712+4ABj
		mov	[bp+var_E], 2

loc_14BFA:				; CODE XREF: sub_14712+469j
					; sub_14712+492j ...
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		mov	ax, 1
		push	ax
		mov	al, [bp+var_E]
		cbw
		push	ax
		push	cs
		call	near ptr sub_17A78
		add	sp, 8
		sub	ax, ax
		push	ax
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		push	cs
		call	near ptr sub_17FD6
		add	sp, 6
		mov	ax, 1
		push	ax
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		push	cs
		call	near ptr sub_14DA2
		add	sp, 0Ah
		cmp	byte_4477F, 0
		jz	short loc_14C49
		jmp	loc_14CD7
; ---------------------------------------------------------------------------

loc_14C49:				; CODE XREF: sub_14712+532j
		push	si
		lea	di, [bp+var_26]
		mov	si, 8FEAh
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_14C5F:				; CODE XREF: sub_14712+553j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14C5F
		sub	[bp+var_26], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_14C73:				; CODE XREF: sub_14712+567j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14C73
		sub	[bp+var_24], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_14C87:				; CODE XREF: sub_14712+57Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_14C87
		sub	[bp+var_22], ax
		mov	ax, 1
		push	ax
		push	word_446CE
		push	word_446D0
		push	word_446D2
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_16], ax
		lea	ax, [bp+var_3C]
		push	ax
		push	[bp+var_16]
		lea	ax, [bp+var_26]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_38]
		mov	ax, [bp+var_3C]
		neg	ax
		push	ax
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		mov	word_446FE, ax

loc_14CD7:				; CODE XREF: sub_14712+534j
		cmp	byte_44783, 0
		jnz	short loc_14CE1
		jmp	loc_14D66
; ---------------------------------------------------------------------------

loc_14CE1:				; CODE XREF: sub_14712+5CAj
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		mov	cx, word_446BE
		mov	bx, word_446C0
		mov	dx, cx
		mov	cl, 6

loc_14CF9:				; CODE XREF: sub_14712+5EDj
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_14CF9
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	si, ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	cx, word_446B6
		mov	bx, word_446B8
		mov	dx, cx
		mov	cl, 6

loc_14D33:				; CODE XREF: sub_14712+627j
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_14D33
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	si, ax
		jns	short loc_14D66
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_14D66:				; CODE XREF: sub_14712+5CCj
					; sub_14712+643j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_14712	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14D6C	proc far		; CODE XREF: sub_14DA2+F0Bp
					; sub_19794+103p

var_12		= byte ptr -12h
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 12h
		push	di
		push	si
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_4]
		lea	di, [bp+var_12]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 9
		repne movsw
		pop	ds
		push	[bp+arg_6]
		lea	ax, [bp+var_12]
		push	ax
		push	[bp+arg_0]
		call	sub_328EE
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_14D6C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14DA2	proc far		; CODE XREF: sub_14712+527p
					; sub_171E8+ABp

var_1E4		= word ptr -1E4h
var_1E2		= word ptr -1E2h
var_1E0		= word ptr -1E0h
var_1DE		= word ptr -1DEh
var_1DC		= word ptr -1DCh
var_1DA		= word ptr -1DAh
var_1D8		= word ptr -1D8h
var_1D6		= word ptr -1D6h
var_1D4		= word ptr -1D4h
var_1D2		= word ptr -1D2h
var_1D0		= word ptr -1D0h
var_1CE		= word ptr -1CEh
var_1CC		= word ptr -1CCh
var_1CA		= word ptr -1CAh
var_1C8		= word ptr -1C8h
var_1C6		= word ptr -1C6h
var_1C4		= word ptr -1C4h
var_1C2		= word ptr -1C2h
var_1C0		= word ptr -1C0h
var_1BE		= word ptr -1BEh
var_1BC		= word ptr -1BCh
var_1BA		= word ptr -1BAh
var_1B8		= word ptr -1B8h
var_1B6		= word ptr -1B6h
var_1B4		= word ptr -1B4h
var_1B2		= word ptr -1B2h
var_1B0		= word ptr -1B0h
var_1AE		= word ptr -1AEh
var_1AC		= word ptr -1ACh
var_1AA		= word ptr -1AAh
var_1A8		= word ptr -1A8h
var_1A6		= word ptr -1A6h
var_1A4		= word ptr -1A4h
var_1A2		= word ptr -1A2h
var_1A0		= word ptr -1A0h
var_19E		= word ptr -19Eh
var_19C		= word ptr -19Ch
var_19A		= word ptr -19Ah
var_198		= word ptr -198h
var_196		= word ptr -196h
var_194		= word ptr -194h
var_192		= word ptr -192h
var_190		= word ptr -190h
var_18E		= word ptr -18Eh
var_18C		= word ptr -18Ch
var_18A		= word ptr -18Ah
var_188		= word ptr -188h
var_186		= word ptr -186h
var_184		= word ptr -184h
var_182		= word ptr -182h
var_180		= word ptr -180h
var_17E		= word ptr -17Eh
var_17C		= word ptr -17Ch
var_17A		= word ptr -17Ah
var_178		= word ptr -178h
var_176		= byte ptr -176h
var_146		= word ptr -146h
var_144		= word ptr -144h
var_142		= word ptr -142h
var_140		= word ptr -140h
var_138		= word ptr -138h
var_136		= byte ptr -136h
var_134		= byte ptr -134h
var_122		= word ptr -122h
var_120		= word ptr -120h
var_11E		= word ptr -11Eh
var_11C		= byte ptr -11Ch
var_11A		= word ptr -11Ah
var_118		= word ptr -118h
var_116		= word ptr -116h
var_114		= word ptr -114h
var_112		= word ptr -112h
var_110		= word ptr -110h
var_10E		= byte ptr -10Eh
var_FC		= word ptr -0FCh
var_FA		= word ptr -0FAh
var_F8		= word ptr -0F8h
var_F4		= word ptr -0F4h
var_F2		= word ptr -0F2h
var_F0		= word ptr -0F0h
var_EE		= word ptr -0EEh
var_EC		= byte ptr -0ECh
var_EA		= word ptr -0EAh
var_E8		= byte ptr -0E8h
var_E6		= word ptr -0E6h
var_E4		= word ptr -0E4h
var_E2		= word ptr -0E2h
var_E0		= word ptr -0E0h
var_DE		= word ptr -0DEh
var_DC		= byte ptr -0DCh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= dword	ptr -6
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= byte ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 1E4h
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	word_449BE, ax
		mov	word_449C0, dx
		mov	[bx+0Ch], ax
		mov	[bx+0Eh], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	word_449C6, ax
		mov	word_449C8, dx
		mov	[bx+10h], ax
		mov	[bx+12h], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	word_449CA, ax
		mov	word_449CC, dx
		mov	[bx+14h], ax
		mov	[bx+16h], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bx+1Ch]
		mov	word_44998, ax
		mov	word_44F42, ax
		mov	ax, [bx+1Ah]
		mov	word_44986, ax
		mov	word_44F44, ax
		mov	ax, [bx+18h]
		mov	word_4435E, ax
		mov	word_44F46, ax
		cmp	byte ptr [bx+0C1h], 0
		jz	short loc_14E1E
		mov	ax, [bx+40h]
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_142], ax
		jmp	short loc_14E24
; ---------------------------------------------------------------------------

loc_14E1E:				; CODE XREF: sub_14DA2+6Dj
		mov	[bp+var_142], 0

loc_14E24:				; CODE XREF: sub_14DA2+7Aj
		cmp	word_449D0, 0Ah
		jnz	short loc_14E30
		mov	ax, 1E00h
		jmp	short loc_14E33
; ---------------------------------------------------------------------------

loc_14E30:				; CODE XREF: sub_14DA2+87j
		mov	ax, 3C00h

loc_14E33:				; CODE XREF: sub_14DA2+8Cj
		sub	dx, dx
		push	dx
		push	ax
		mov	ax, 580h
		cwd
		push	dx
		push	ax
		mov	bx, [bp+arg_0]
		sub	ax, ax
		push	ax
		push	word ptr [bx+2Ch]
		call	__aFlmul
		push	dx
		push	ax
		call	__aFuldiv
		mov	[bp+var_E6], ax
		sub	ax, ax
		push	ax
		mov	ax, word_4435E
		neg	ax
		push	ax
		mov	ax, word_44986
		neg	ax
		push	ax
		mov	ax, word_44998
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		push	si
		mov	di, 8B62h
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		mov	cx, 9
		repne movsw
		pop	si
		cmp	word_44986, 0
		jnz	short loc_14E8F
		cmp	word_44998, 0
		jz	short loc_14EC6

loc_14E8F:				; CODE XREF: sub_14DA2+E4j
		mov	[bp+var_1C6], 0
		mov	[bp+var_1C4], 0
		mov	[bp+var_1C2], 82h ; 'Ç'
		lea	ax, [bp+var_FC]
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_FA]
		neg	ax
		mov	[bx+1Eh], ax
		jmp	short loc_14ECE
; ---------------------------------------------------------------------------
		align 2

loc_14EC6:				; CODE XREF: sub_14DA2+EBj
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+1Eh], 0

loc_14ECE:				; CODE XREF: sub_14DA2+121j
		mov	bx, [bp+arg_0]
		test	word ptr [bx+3Eh], 3FFh
		jz	short loc_14F04
		mov	[bp+var_EC], 1
		sub	ax, ax
		push	ax
		mov	ax, [bx+3Eh]
		neg	ax
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		push	si
		lea	di, [bp+var_10E]
		mov	si, ax
		push	ss
		pop	es
		assume es:nothing
		mov	cx, 9
		repne movsw
		pop	si
		jmp	short loc_14F09
; ---------------------------------------------------------------------------
		align 2

loc_14F04:				; CODE XREF: sub_14DA2+134j
		mov	[bp+var_EC], 0

loc_14F09:				; CODE XREF: sub_14DA2+15Fj
		mov	[bp+var_1C6], 0
		mov	[bp+var_1C4], 7530h
		mov	[bp+var_1C2], 0
		lea	ax, [bp+var_FC]
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C1h], 0
		jz	short loc_14F76
		cmp	[bp+var_FA], 0
		jge	short loc_14F76
		cmp	word ptr [bx+2Ch], 1E00h
		jbe	short loc_14F6E
		mov	[bp+var_F0], 0C0h ; '¿'
		mov	[bp+var_1C4], 0FF40h
		lea	ax, [bp+var_E4]
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		jmp	short loc_14F7C
; ---------------------------------------------------------------------------
		align 2

loc_14F6E:				; CODE XREF: sub_14DA2+1A5j
		mov	[bp+var_F0], 0FF40h
		jmp	short loc_14F7C
; ---------------------------------------------------------------------------

loc_14F76:				; CODE XREF: sub_14DA2+197j
					; sub_14DA2+19Ej
		mov	[bp+var_F0], 0

loc_14F7C:				; CODE XREF: sub_14DA2+1C9j
					; sub_14DA2+1D2j
		mov	word_44F36, 0
		mov	word_44F38, 0
		mov	word_44F4A, 0FFFFh
		lea	ax, [bp+var_1C0]
		mov	[bp+var_DE], ax
		lea	ax, [bp+var_176]
		mov	[bp+var_146], ax
		mov	[bp+var_E8], 0
		jmp	short loc_14FFA
; ---------------------------------------------------------------------------
		align 2

loc_14FA6:				; CODE XREF: sub_14DA2+381j
					; sub_14DA2+38Bj
		mov	bx, [bp+arg_0]
		mov	ax, [bx+36h]

loc_14FAC:				; CODE XREF: sub_14DA2+398j
		mov	word_44F48, ax
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	ax, word_44F48
		mov	[bp+di+var_140], ax
		push	cs
		call	near ptr sub_19794
		mov	ax, word_44F3C
		cwd
		mov	bx, [bp+var_DE]
		add	[bx], ax
		adc	[bx+2],	dx
		mov	ax, word_44F3E
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+4],	ax
		adc	[bx+6],	dx
		mov	ax, word_44F40
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+8],	ax
		adc	[bx+0Ah], dx

loc_14FEC:				; CODE XREF: sub_14DA2+370j
		add	[bp+var_DE], 0Ch
		add	[bp+var_146], 0Ch
		inc	[bp+var_E8]

loc_14FFA:				; CODE XREF: sub_14DA2+201j
		cmp	[bp+var_E8], 4
		jl	short loc_15004
		jmp	loc_1513E
; ---------------------------------------------------------------------------

loc_15004:				; CODE XREF: sub_14DA2+25Dj
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	bx, [bp+arg_2]
		push	si
		lea	si, [bx+di+0D2h]
		lea	di, [bp+var_1C6]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [bx+di+54h]
		add	ax, 180h
		neg	ax
		mov	[bp+var_1C4], ax
		cmp	[bp+var_F0], 0
		jge	short loc_1504A
		mov	ax, [bp+var_F0]
		sub	[bp+var_1C4], ax

loc_1504A:				; CODE XREF: sub_14DA2+29Ej
		cmp	[bp+var_EC], 0
		jz	short loc_15077
		lea	ax, [bp+var_FC]
		push	ax
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	si
		lea	di, [bp+var_1C6]
		lea	si, [bp+var_FC]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si

loc_15077:				; CODE XREF: sub_14DA2+2ADj
		lea	ax, [bp+var_FC]
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_FC]
		cwd
		add	ax, word_449BE
		adc	dx, word_449C0
		mov	bx, [bp+var_DE]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	ax, [bp+var_FA]
		cwd
		add	ax, word_449C6
		adc	dx, word_449C8
		mov	bx, [bp+var_DE]
		mov	[bx+4],	ax
		mov	[bx+6],	dx
		mov	ax, [bp+var_F8]
		cwd
		add	ax, word_449CA
		adc	dx, word_449CC
		mov	bx, [bp+var_DE]
		mov	[bx+8],	ax
		mov	[bx+0Ah], dx
		mov	bx, [bp+var_146]
		mov	di, [bp+var_DE]
		mov	ax, [di]
		mov	dx, [di+2]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	bx, [bp+var_146]
		mov	di, [bp+var_DE]
		mov	ax, [di+4]
		mov	dx, [di+6]
		mov	[bx+4],	ax
		mov	[bx+6],	dx
		mov	bx, [bp+var_146]
		mov	di, [bp+var_DE]
		mov	ax, [di+8]
		mov	dx, [di+0Ah]
		mov	[bx+8],	ax
		mov	[bx+0Ah], dx
		cmp	[bp+var_E6], 0
		jnz	short loc_15115
		jmp	loc_14FEC
; ---------------------------------------------------------------------------

loc_15115:				; CODE XREF: sub_14DA2+36Ej
		mov	ax, [bp+var_E6]
		mov	word_44F3A, ax
		cmp	[bp+var_142], 0
		jnz	short loc_15126
		jmp	loc_14FA6
; ---------------------------------------------------------------------------

loc_15126:				; CODE XREF: sub_14DA2+37Fj
		cmp	[bp+var_E8], 2
		jl	short loc_15130
		jmp	loc_14FA6
; ---------------------------------------------------------------------------

loc_15130:				; CODE XREF: sub_14DA2+389j
		mov	bx, [bp+arg_0]
		mov	ax, [bx+36h]
		sub	ax, [bp+var_142]
		jmp	loc_14FAC
; ---------------------------------------------------------------------------
		align 2

loc_1513E:				; CODE XREF: sub_14DA2+25Fj
		mov	[bp+var_2], 0

loc_15142:				; CODE XREF: sub_14DA2+7FCj
		inc	[bp+var_2]
		cmp	[bp+var_2], 5
		jnz	short loc_151A2
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+36h], 200h
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_15163:				; CODE XREF: sub_14DA2+F9Ej
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C2h], 5
		jnz	short loc_15192
		cmp	byte ptr [bx+0C3h], 5
		jnz	short loc_15192
		cmp	byte ptr [bx+0C4h], 5
		jnz	short loc_15192
		cmp	byte ptr [bx+0C5h], 5
		jnz	short loc_15192
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_15192:				; CODE XREF: sub_14DA2+3C9j
					; sub_14DA2+3D0j ...
		lea	ax, [bp+var_1C0]
		mov	[bp+var_DE], ax
		mov	[bp+var_E8], 0
		jmp	loc_15DD1
; ---------------------------------------------------------------------------

loc_151A2:				; CODE XREF: sub_14DA2+3A7j
		lea	ax, [bp+var_1C0]
		mov	[bp+var_DE], ax
		lea	ax, [bp+var_176]
		mov	[bp+var_146], ax
		mov	[bp+var_E8], 0
		jmp	loc_15D39
; ---------------------------------------------------------------------------

loc_151BA:				; CODE XREF: sub_14DA2+FEFj
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+arg_0]
		add	ax, 74h	; 't'
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_1E1A0
		add	sp, 4

loc_151DB:				; CODE XREF: sub_14DA2+1011j
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		mov	bx, [bp+arg_0]
		mov	al, byte_44D47
		mov	[bx+di+0C2h], al
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_151F7:				; CODE XREF: sub_14DA2+45Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_151F7
		mov	[bp+var_1C6], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_1520F:				; CODE XREF: sub_14DA2+473j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1520F
		mov	[bp+var_1C4], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_15227:				; CODE XREF: sub_14DA2+48Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15227
		mov	[bp+var_1C2], ax
		cmp	byte_44889, 2
		jnz	short loc_15240
		mov	ax, [bp+var_1C4]
		jmp	short loc_15257
; ---------------------------------------------------------------------------

loc_15240:				; CODE XREF: sub_14DA2+496j
		push	[bp+var_1C2]
		push	[bp+var_1C4]
		push	[bp+var_1C6]
		push	word_44DC6
		push	cs
		call	near ptr sub_19926
		add	sp, 8

loc_15257:				; CODE XREF: sub_14DA2+49Cj
		mov	word_459FE, ax
		cmp	word_4428E, 0FFFFh
		jnz	short loc_15264
		jmp	loc_15950
; ---------------------------------------------------------------------------

loc_15264:				; CODE XREF: sub_14DA2+4BDj
		mov	ax, word_44988
		cmp	word_459FE, ax
		jg	short loc_15270
		jmp	loc_15950
; ---------------------------------------------------------------------------

loc_15270:				; CODE XREF: sub_14DA2+4C9j
		mov	ax, word_44A8C
		cmp	word_459FE, ax
		jl	short loc_1527C
		jmp	loc_15950
; ---------------------------------------------------------------------------

loc_1527C:				; CODE XREF: sub_14DA2+4D5j
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, [bp+arg_0]
		mov	ax, [di+74h]
		sub	ax, word_42D20
		mov	[bp+var_182], ax
		mov	[bp+var_180], 0
		mov	ax, [di+78h]
		sub	ax, word_42D2C
		mov	[bp+var_17E], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_152B5:				; CODE XREF: sub_14DA2+519j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_152B5
		sub	ax, word_42D20
		mov	[bp+var_1E4], ax
		mov	[bp+var_1E2], 0
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_152D7:				; CODE XREF: sub_14DA2+53Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_152D7
		sub	ax, word_42D2C
		mov	[bp+var_1E0], ax
		mov	ax, word_45D96
		neg	ax
		sub	ax, 100h
		push	ax
		lea	ax, [bp+var_134]
		push	ax
		call	sub_36F80
		add	sp, 4
		lea	ax, [bp+var_C]
		push	ax
		lea	ax, [bp+var_134]
		push	ax
		lea	ax, [bp+var_182]
		push	ax
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_1C]
		push	ax
		lea	ax, [bp+var_134]
		push	ax
		lea	ax, [bp+var_1E4]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_18], 0
		jle	short loc_15338
		cmp	[bp+var_8], 0
		jle	short loc_15338
		jmp	loc_15950
; ---------------------------------------------------------------------------

loc_15338:				; CODE XREF: sub_14DA2+58Bj
					; sub_14DA2+591j
		cmp	[bp+var_18], 0
		jge	short loc_15347
		cmp	[bp+var_8], 0
		jge	short loc_15347
		jmp	loc_15950
; ---------------------------------------------------------------------------

loc_15347:				; CODE XREF: sub_14DA2+59Aj
					; sub_14DA2+5A0j
		mov	ax, [bp+var_8]
		cmp	[bp+var_18], ax
		jle	short loc_1537C
		mov	[bp+var_136], 1
		push	si
		lea	di, [bp+var_FC]
		lea	si, [bp+var_1C]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		push	si
		lea	di, [bp+var_1C]
		lea	si, [bp+var_C]
		movsw
		movsw
		movsw
		pop	si
		push	si
		lea	di, [bp+var_C]
		lea	si, [bp+var_FC]
		movsw
		movsw
		movsw
		pop	si
		jmp	short loc_15381
; ---------------------------------------------------------------------------
		align 2

loc_1537C:				; CODE XREF: sub_14DA2+5ABj
		mov	[bp+var_136], 0

loc_15381:				; CODE XREF: sub_14DA2+5D7j
		cmp	[bp+var_18], 0
		jnz	short loc_15398
		mov	ax, [bp+var_E6]
		mov	[bp+var_F4], ax
		mov	[bp+var_F2], 0
		jmp	short loc_1540C
; ---------------------------------------------------------------------------
		align 2

loc_15398:				; CODE XREF: sub_14DA2+5E3j
		cmp	[bp+var_8], 0
		jnz	short loc_153AE
		mov	[bp+var_F4], 0
		mov	ax, [bp+var_E6]
		mov	[bp+var_F2], ax
		jmp	short loc_1540C
; ---------------------------------------------------------------------------

loc_153AE:				; CODE XREF: sub_14DA2+5FAj
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_FC]
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		lea	ax, [bp+var_1C]
		push	ax
		call	sub_33014
		add	sp, 8
		mov	ax, [bp+var_1C]
		sub	ax, [bp+var_FC]
		mov	cl, 6
		shl	ax, cl
		mov	[bp+var_17C], ax
		mov	ax, [bp+var_1A]
		sub	ax, [bp+var_FA]
		shl	ax, cl
		mov	[bp+var_17A], ax
		mov	ax, [bp+var_18]
		sub	ax, [bp+var_F8]
		shl	ax, cl
		mov	[bp+var_178], ax
		lea	ax, [bp+var_17C]
		push	ax
		call	sub_2EA08
		add	sp, 2
		mov	[bp+var_F2], ax
		mov	ax, [bp+var_E6]
		sub	ax, [bp+var_F2]
		mov	[bp+var_F4], ax

loc_1540C:				; CODE XREF: sub_14DA2+5F3j
					; sub_14DA2+60Aj
		mov	ax, word_4435E
		neg	ax
		sub	ax, word_45D96
		and	ah, 3
		mov	[bp+var_EE], ax
		mov	ax, [bp+var_F2]
		mov	[bp+var_F8], ax
		mov	[bp+var_FA], 0
		cmp	[bp+var_EE], 100h
		jl	short loc_1543A
		cmp	[bp+var_EE], 300h
		jle	short loc_1544A

loc_1543A:				; CODE XREF: sub_14DA2+68Ej
		mov	ax, word_45D96
		mov	[bp+var_EE], ax
		mov	[bp+var_FC], 300h
		jmp	short loc_1545D
; ---------------------------------------------------------------------------
		align 2

loc_1544A:				; CODE XREF: sub_14DA2+696j
		mov	ax, word_45D96
		add	ah, 2
		and	ah, 3
		mov	[bp+var_EE], ax
		mov	[bp+var_FC], 0FD00h

loc_1545D:				; CODE XREF: sub_14DA2+6A5j
		cmp	[bp+var_136], 0
		jz	short loc_1546E
		mov	ax, [bp+var_FC]
		neg	ax
		mov	[bp+var_FC], ax

loc_1546E:				; CODE XREF: sub_14DA2+6C0j
		sub	ax, ax
		push	ax
		push	[bp+var_EE]
		mov	ax, word_44986
		neg	ax
		push	ax
		mov	ax, word_44998
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_EA], ax
		lea	ax, [bp+var_1C]
		push	ax
		push	[bp+var_EA]
		lea	ax, [bp+var_FC]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, word_4435E
		neg	ax
		mov	si, ax
		sub	si, [bp+var_EE]
		and	si, 3FFh
		mov	[bp+var_138], 0
		cmp	si, 100h
		jle	short loc_154CA
		mov	ax, 400h
		sub	ax, si
		mov	si, ax
		mov	[bp+var_138], 1

loc_154CA:				; CODE XREF: sub_14DA2+719j
		mov	ax, 46h	; 'F'
		imul	si
		mov	cl, 8
		sar	ax, cl
		sub	ax, 64h	; 'd'
		neg	ax
		mov	ch, al
		sub	cl, cl
		mov	[bp+var_190], cx
		mov	bx, [bp+arg_0]
		mov	ax, cx
		cmp	[bx+2Ch], ax
		jbe	short loc_15513
		cmp	[bp+var_138], 0
		jz	short loc_154F8
		mov	ax, si
		neg	ax
		jmp	short loc_154FA
; ---------------------------------------------------------------------------
		align 2

loc_154F8:				; CODE XREF: sub_14DA2+74Dj
		mov	ax, si

loc_154FA:				; CODE XREF: sub_14DA2+753j
		shl	ax, 1
		mov	[bp+var_138], ax
		mov	[bx+36h], ax
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_15513:				; CODE XREF: sub_14DA2+746j
		mov	bx, [bp+arg_0]
		or	byte ptr [bx+0CFh], 10h
		lea	ax, [bp+var_1C0]
		mov	[bp+var_DE], ax
		lea	ax, [bp+var_176]
		mov	[bp+var_146], ax
		sub	si, si
		jmp	short loc_15599
; ---------------------------------------------------------------------------
		align 2

loc_15530:				; CODE XREF: sub_14DA2+804j
		mov	[bp+var_C], 0
		mov	[bp+var_A], 0
		mov	[bp+var_8], 0

loc_1553F:				; CODE XREF: sub_14DA2+89Dj
		mov	ax, [bp+var_C]
		add	ax, [bp+var_1C]
		cwd
		mov	bx, [bp+var_146]
		add	ax, [bx]
		adc	dx, [bx+2]
		mov	bx, [bp+var_DE]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	ax, [bp+var_A]
		add	ax, [bp+var_1A]
		cwd
		mov	bx, [bp+var_146]
		add	ax, [bx+4]
		adc	dx, [bx+6]
		mov	bx, [bp+var_DE]
		mov	[bx+4],	ax
		mov	[bx+6],	dx
		mov	ax, [bp+var_8]
		add	ax, [bp+var_18]
		cwd
		mov	bx, [bp+var_146]
		add	ax, [bx+8]
		adc	dx, [bx+0Ah]
		mov	bx, [bp+var_DE]
		mov	[bx+8],	ax
		mov	[bx+0Ah], dx
		add	[bp+var_DE], 0Ch
		add	[bp+var_146], 0Ch
		inc	si

loc_15599:				; CODE XREF: sub_14DA2+78Bj
		cmp	si, 4
		jl	short loc_155A1
		jmp	loc_15142
; ---------------------------------------------------------------------------

loc_155A1:				; CODE XREF: sub_14DA2+7FAj
		cmp	[bp+var_F4], 0
		jz	short loc_15530
		mov	ax, [bp+var_E6]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	bx, [bp+var_146]
		sub	ax, [bx]
		sbb	dx, [bx+2]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_C], ax
		mov	ax, [bp+var_E6]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	bx, [bp+var_146]
		sub	ax, [bx+4]
		sbb	dx, [bx+6]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_A], ax
		mov	ax, [bp+var_E6]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	bx, [bp+var_146]
		sub	ax, [bx+8]
		sbb	dx, [bx+0Ah]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_8], ax
		jmp	loc_1553F
; ---------------------------------------------------------------------------

loc_15642:				; CODE XREF: sub_14DA2+BBFj
					; sub_14DA2+BC9j
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [di+602h]
		add	[bx+di+4Ch], ax
		mov	al, [bp+var_E8]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, [bp+arg_0]
		mov	ax, [bx+4Ch]
		cwd
		mov	bx, [bp+var_DE]
		sub	[bx+4],	ax
		sbb	[bx+6],	dx
		cmp	word_449D0, 0Ah
		jnz	short loc_156A3
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [di+602h]
		add	[bx+di+4Ch], ax
		mov	al, [bp+var_E8]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, [bp+arg_0]
		mov	ax, [bx+4Ch]
		cwd
		mov	bx, [bp+var_DE]
		sub	[bx+4],	ax
		sbb	[bx+6],	dx

loc_156A3:				; CODE XREF: sub_14DA2+8D2j
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_156AF:				; CODE XREF: sub_14DA2+913j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_156AF
		mov	[bp+var_1C4], ax
		cmp	byte_44889, 2
		jz	short loc_156D6
		push	[bp+var_1C2]
		push	ax
		push	[bp+var_1C6]
		push	word_44DC6
		push	cs
		call	near ptr sub_19926
		add	sp, 8

loc_156D6:				; CODE XREF: sub_14DA2+91Ej
		mov	word_459FE, ax
		cmp	ax, 0Ch
		jle	short loc_156ED
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+di+0C2h], 0

loc_156ED:				; CODE XREF: sub_14DA2+93Aj
					; sub_14DA2+BB5j ...
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	ax, word_459FE
		mov	[bp+di+var_16],	ax
		or	ax, ax
		jnz	short loc_15703
		jmp	loc_15CE8
; ---------------------------------------------------------------------------

loc_15703:				; CODE XREF: sub_14DA2+95Cj
		or	ax, ax
		jl	short loc_1570A
		jmp	loc_15D2B
; ---------------------------------------------------------------------------

loc_1570A:				; CODE XREF: sub_14DA2+963j
		mov	ax, 22h	; '"'
		imul	word_44DC6
		add	ax, word_454C2
		mov	dx, word_454C4
		mov	word ptr [bp+var_6], ax
		mov	word ptr [bp+var_6+2], dx
		les	bx, [bp+var_6]
		mov	ax, es:[bx+4]
		add	ax, word_449E0
		mov	[bp+var_122], ax
		mov	ax, es:[bx+6]
		add	ax, word_449EC
		mov	[bp+var_120], ax
		mov	ax, es:[bx+8]
		add	ax, word_449F6
		mov	[bp+var_11E], ax
		mov	bx, [bp+var_146]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_15751:				; CODE XREF: sub_14DA2+9B5j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15751
		sub	ax, [bp+var_122]
		mov	[bp+var_182], ax
		mov	bx, [bp+var_146]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_1576D:				; CODE XREF: sub_14DA2+9D1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1576D
		sub	ax, [bp+var_120]
		mov	[bp+var_180], ax
		mov	bx, [bp+var_146]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_15789:				; CODE XREF: sub_14DA2+9EDj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15789
		sub	ax, [bp+var_11E]
		mov	[bp+var_17E], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_157A4:				; CODE XREF: sub_14DA2+A08j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_157A4
		sub	ax, [bp+var_122]
		mov	[bp+var_1E4], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_157C0:				; CODE XREF: sub_14DA2+A24j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_157C0
		sub	ax, [bp+var_120]
		mov	[bp+var_1E2], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_157DC:				; CODE XREF: sub_14DA2+A40j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_157DC
		sub	ax, [bp+var_11E]
		mov	[bp+var_1E0], ax
		mov	ax, word ptr [bp+var_6]
		mov	dx, word ptr [bp+var_6+2]
		add	ax, 10h
		push	si
		lea	di, [bp+var_134]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 9
		repne movsw
		pop	ds
		pop	si
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_134]
		push	ax
		call	sub_32A72
		add	sp, 4
		lea	ax, [bp+var_C]
		push	ax
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_182]
		push	ax
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_1C]
		push	ax
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_1E4]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	[bp+var_136], 0
		cmp	byte_4392C, 0
		jnz	short loc_15879
		cmp	[bp+var_A], 0FFF4h
		jge	short loc_15879
		cmp	[bp+var_1A], 0FFF4h
		jge	short loc_15879
		cmp	[bp+var_1A], 0FFE8h
		jle	short loc_158DA
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 5
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4
		mov	[bp+var_136], 1

loc_15879:				; CODE XREF: sub_14DA2+AAEj
					; sub_14DA2+AB4j ...
		cmp	[bp+var_1A], 0
		jz	short loc_15882
		jmp	loc_1599E
; ---------------------------------------------------------------------------

loc_15882:				; CODE XREF: sub_14DA2+ADBj
		mov	word_44F36, 0
		mov	word_44F38, 0
		mov	word_44F3A, 40h	; '@'
		mov	ax, word_44DC6
		mov	word_44F4A, ax
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	ax, [bp+di+var_140]
		mov	word_44F48, ax
		push	cs
		call	near ptr sub_19794
		mov	ax, word_44F3C
		cwd
		mov	bx, [bp+var_DE]
		sub	[bx], ax
		sbb	[bx+2],	dx
		mov	ax, word_44F3E
		cwd
		mov	bx, [bp+var_DE]
		sub	[bx+4],	ax
		sbb	[bx+6],	dx
		mov	ax, word_44F40
		cwd
		mov	bx, [bp+var_DE]
		sub	[bx+8],	ax
		sbb	[bx+0Ah], dx
		jmp	loc_15CDF
; ---------------------------------------------------------------------------

loc_158DA:				; CODE XREF: sub_14DA2+AC0j
		mov	word_44DC6, 0
		mov	ax, word_454C2
		mov	dx, word_454C4
		mov	word_44D64, ax
		mov	word_44D66, dx
		mov	byte_4392C, 1
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_158FE:				; CODE XREF: sub_14DA2+B62j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_158FE
		mov	[bp+var_1C6], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_15916:				; CODE XREF: sub_14DA2+B7Aj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15916
		mov	[bp+var_1C4], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_1592E:				; CODE XREF: sub_14DA2+B92j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1592E
		mov	[bp+var_1C2], ax
		push	ax
		push	[bp+var_1C4]
		push	[bp+var_1C6]
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_19926
		add	sp, 8
		mov	word_459FE, ax

loc_15950:				; CODE XREF: sub_14DA2+4BFj
					; sub_14DA2+4CBj ...
		cmp	word_459FE, 0
		jg	short loc_1595A
		jmp	loc_156ED
; ---------------------------------------------------------------------------

loc_1595A:				; CODE XREF: sub_14DA2+BB3j
		cmp	[bp+var_F0], 0
		jg	short loc_15964
		jmp	loc_15642
; ---------------------------------------------------------------------------

loc_15964:				; CODE XREF: sub_14DA2+BBDj
		cmp	word_459FE, 18h
		jl	short loc_1596E
		jmp	loc_15642
; ---------------------------------------------------------------------------

loc_1596E:				; CODE XREF: sub_14DA2+BC7j
		mov	ax, [bp+var_E4]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx], ax
		adc	[bx+2],	dx
		mov	ax, [bp+var_E2]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+4],	ax
		adc	[bx+6],	dx
		mov	ax, [bp+var_E0]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+8],	ax
		adc	[bx+0Ah], dx
		jmp	loc_156ED
; ---------------------------------------------------------------------------
		align 2

loc_1599E:				; CODE XREF: sub_14DA2+ADDj
		cmp	[bp+var_A], 0
		jle	short loc_159AD
		cmp	[bp+var_1A], 0
		jge	short loc_159AD
		jmp	loc_15A30
; ---------------------------------------------------------------------------

loc_159AD:				; CODE XREF: sub_14DA2+C00j
					; sub_14DA2+C06j
		mov	word_44F36, 0
		mov	word_44F38, 0
		mov	ax, [bp+var_E6]
		mov	word_44F3A, ax
		mov	ax, word_44DC6
		mov	word_44F4A, ax
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	ax, [bp+di+var_140]
		mov	word_44F48, ax
		push	cs
		call	near ptr sub_19794
		mov	ax, word_44F3C
		cwd
		mov	bx, [bp+var_146]
		mov	cx, [bx]
		mov	di, [bx+2]
		add	cx, ax
		adc	di, dx
		mov	bx, [bp+var_DE]
		mov	[bx], cx
		mov	[bx+2],	di
		mov	ax, word_44F3E
		cwd
		mov	bx, [bp+var_146]
		mov	cx, [bx+4]
		mov	di, [bx+6]
		add	cx, ax
		adc	di, dx
		mov	bx, [bp+var_DE]
		mov	[bx+4],	cx
		mov	[bx+6],	di
		mov	ax, word_44F40
		cwd
		mov	bx, [bp+var_146]
		mov	cx, [bx+8]
		mov	di, [bx+0Ah]
		add	cx, ax
		adc	di, dx
		mov	bx, [bp+var_DE]
		mov	[bx+8],	cx
		mov	[bx+0Ah], di
		jmp	loc_15C04
; ---------------------------------------------------------------------------
		align 2

loc_15A30:				; CODE XREF: sub_14DA2+C08j
		mov	ax, [bp+var_8]
		mov	[bp+var_EE], ax
		mov	ax, [bp+var_A]
		neg	ax
		mov	[bp+var_8], ax
		mov	ax, [bp+var_EE]
		mov	[bp+var_A], ax
		mov	ax, [bp+var_18]
		mov	[bp+var_EE], ax
		mov	ax, [bp+var_1A]
		neg	ax
		mov	[bp+var_18], ax
		mov	ax, [bp+var_EE]
		mov	[bp+var_1A], ax
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_FC]
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		lea	ax, [bp+var_1C]
		push	ax
		call	sub_33014
		add	sp, 8
		mov	ax, [bp+var_1C]
		sub	ax, [bp+var_FC]
		mov	cl, 6
		shl	ax, cl
		mov	[bp+var_17C], ax
		mov	ax, [bp+var_1A]
		sub	ax, [bp+var_FA]
		shl	ax, cl
		mov	[bp+var_17A], ax
		mov	ax, [bp+var_18]
		sub	ax, [bp+var_F8]
		shl	ax, cl
		mov	[bp+var_178], ax
		lea	ax, [bp+var_17C]
		push	ax
		call	sub_2EA08
		add	sp, 2
		mov	[bp+var_EE], ax
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [bx+di+4Ch]
		add	ax, [bp+var_E6]
		mov	[bp+var_F4], ax
		sub	ax, [bp+var_EE]
		mov	[bp+var_F2], ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F2]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	bx, [bp+var_146]
		sub	ax, [bx]
		sbb	dx, [bx+2]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_C], ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F2]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	bx, [bp+var_146]
		sub	ax, [bx+4]
		sbb	dx, [bx+6]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_A], ax
		mov	ax, [bp+var_F4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_F2]
		cwd
		push	dx
		push	ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	bx, [bp+var_146]
		sub	ax, [bx+8]
		sbb	dx, [bx+0Ah]
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_8], ax
		mov	word_44F36, 0
		mov	word_44F38, 0
		mov	ax, [bp+var_EE]
		mov	word_44F3A, ax
		mov	ax, word_44DC6
		mov	word_44F4A, ax
		mov	ax, [bp+di+var_140]
		mov	word_44F48, ax
		push	cs
		call	near ptr sub_19794
		mov	bx, [bp+var_146]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cx, ax
		mov	ax, [bp+var_C]
		mov	bx, dx
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, word_44F3C
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, bx
		mov	bx, [bp+var_DE]
		mov	[bx], cx
		mov	[bx+2],	ax
		mov	bx, [bp+var_146]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cx, ax
		mov	ax, [bp+var_A]
		mov	bx, dx
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, word_44F3E
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, bx
		mov	bx, [bp+var_DE]
		mov	[bx+4],	cx
		mov	[bx+6],	ax
		mov	bx, [bp+var_146]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cx, ax
		mov	ax, [bp+var_8]
		mov	bx, dx
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, word_44F40
		cwd
		add	cx, ax
		adc	bx, dx
		mov	ax, bx
		mov	bx, [bp+var_DE]
		mov	[bx+8],	cx
		mov	[bx+0Ah], ax

loc_15C04:				; CODE XREF: sub_14DA2+C8Aj
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_15C0F:				; CODE XREF: sub_14DA2+E73j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15C0F
		mov	[bp+var_1C6], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_15C27:				; CODE XREF: sub_14DA2+E8Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15C27
		mov	[bp+var_1C4], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_15C3F:				; CODE XREF: sub_14DA2+EA3j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15C3F
		mov	[bp+var_1C2], ax
		push	ax
		push	[bp+var_1C4]
		push	[bp+var_1C6]
		push	word_44DC6
		push	cs
		call	near ptr sub_19926
		add	sp, 8
		mov	word_459FE, ax
		or	ax, ax
		jge	short loc_15CDF
		cmp	[bp+var_136], 0
		jz	short loc_15C75
		neg	ax
		add	ax, 6
		mov	word_459FE, ax

loc_15C75:				; CODE XREF: sub_14DA2+EC9j
		mov	[bp+var_1C2], 0
		mov	[bp+var_1C6], 0
		mov	ax, word_459FE
		neg	ax
		mov	cl, 6
		shl	ax, cl
		mov	[bp+var_1C4], ax
		lea	ax, [bp+var_FC]
		push	ax
		mov	ax, 22h	; '"'
		imul	word_44DC6
		add	ax, word_454C2
		mov	dx, word_454C4
		add	ax, 10h
		push	dx
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		push	cs
		call	near ptr sub_14D6C
		add	sp, 8
		mov	ax, [bp+var_FC]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx], ax
		adc	[bx+2],	dx
		mov	ax, [bp+var_FA]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+4],	ax
		adc	[bx+6],	dx
		mov	ax, [bp+var_F8]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+8],	ax
		adc	[bx+0Ah], dx

loc_15CDF:				; CODE XREF: sub_14DA2+B35j
					; sub_14DA2+EC2j
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1

loc_15CE8:				; CODE XREF: sub_14DA2+95Ej
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+di+4Ch], 0FAh ; '˙'
		jle	short loc_15CF7
		or	byte ptr [bx+0CFh], 20h

loc_15CF7:				; CODE XREF: sub_14DA2+F4Ej
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+di+4Ch], 5AEBh
		jle	short loc_15D1A
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_15D1A:				; CODE XREF: sub_14DA2+F66j
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+di+4Ch], 0

loc_15D2B:				; CODE XREF: sub_14DA2+965j
		add	[bp+var_DE], 0Ch
		add	[bp+var_146], 0Ch
		inc	[bp+var_E8]

loc_15D39:				; CODE XREF: sub_14DA2+415j
		cmp	[bp+var_E8], 4
		jl	short loc_15D43
		jmp	loc_15163
; ---------------------------------------------------------------------------

loc_15D43:				; CODE XREF: sub_14DA2+F9Cj
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_15D4E:				; CODE XREF: sub_14DA2+FB2j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15D4E
		mov	[bp+var_1C6], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_15D66:				; CODE XREF: sub_14DA2+FCAj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15D66
		mov	[bp+var_1C4], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_15D7E:				; CODE XREF: sub_14DA2+FE2j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15D7E
		mov	[bp+var_1C2], ax
		cmp	byte_44889, 2
		jz	short loc_15D94
		jmp	loc_151BA
; ---------------------------------------------------------------------------

loc_15D94:				; CODE XREF: sub_14DA2+FEDj
		mov	word_4428E, 0FFFFh
		mov	byte_44D47, 1
		mov	word_44DC6, 0
		mov	ax, word_454C2
		mov	dx, word_454C4
		mov	word_44D64, ax
		mov	word_44D66, dx
		jmp	loc_151DB
; ---------------------------------------------------------------------------

loc_15DB6:				; CODE XREF: sub_14DA2+10E0j
		mov	ax, [bp+var_EE]
		add	ax, 180h
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+4],	ax
		adc	[bx+6],	dx

loc_15DC8:				; CODE XREF: sub_14DA2+113Cj
		add	[bp+var_DE], 0Ch
		inc	[bp+var_E8]

loc_15DD1:				; CODE XREF: sub_14DA2+3FDj
		cmp	[bp+var_E8], 4
		jl	short loc_15DDB
		jmp	loc_15EE2
; ---------------------------------------------------------------------------

loc_15DDB:				; CODE XREF: sub_14DA2+1034j
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_15DE6:				; CODE XREF: sub_14DA2+104Aj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15DE6
		mov	cx, ax
		mov	al, [bp+var_E8]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, [bp+arg_0]
		mov	[bx+74h], cx
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_15E0F:				; CODE XREF: sub_14DA2+1073j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15E0F
		mov	cx, ax
		mov	al, [bp+var_E8]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, [bp+arg_0]
		mov	[bx+76h], cx
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_15E38:				; CODE XREF: sub_14DA2+109Cj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15E38
		mov	cx, ax
		mov	al, [bp+var_E8]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, [bp+arg_0]
		mov	[bx+78h], cx
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		push	di
		mov	bx, di
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-16h]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_185F6
		add	sp, 6
		mov	[bp+var_EE], ax
		cmp	word_44998, 0
		jnz	short loc_15E85
		cmp	word_44986, 0
		jnz	short loc_15E85
		jmp	loc_15DB6
; ---------------------------------------------------------------------------

loc_15E85:				; CODE XREF: sub_14DA2+10D7j
					; sub_14DA2+10DEj
		mov	[bp+var_1C2], 0
		mov	[bp+var_1C6], 0
		mov	ax, [bp+var_EE]
		add	ax, 180h
		mov	[bp+var_1C4], ax
		lea	ax, [bp+var_182]
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_182]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx], ax
		adc	[bx+2],	dx
		mov	ax, [bp+var_180]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+4],	ax
		adc	[bx+6],	dx
		mov	ax, [bp+var_17E]
		cwd
		mov	bx, [bp+var_DE]
		add	[bx+8],	ax
		adc	[bx+0Ah], dx
		jmp	loc_15DC8
; ---------------------------------------------------------------------------
		align 2

loc_15EE2:				; CODE XREF: sub_14DA2+1036j
		mov	ax, [bp+var_1C0]
		mov	dx, [bp+var_1BE]
		add	ax, [bp+var_1B4]
		adc	dx, [bp+var_1B2]
		add	ax, [bp+var_1A8]
		adc	dx, [bp+var_1A6]
		add	ax, [bp+var_19C]
		adc	dx, [bp+var_19A]
		mov	cl, 2

loc_15F04:				; CODE XREF: sub_14DA2+1168j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15F04
		mov	word_449BE, ax
		mov	word_449C0, dx
		mov	ax, [bp+var_1BC]
		mov	dx, [bp+var_1BA]
		add	ax, [bp+var_1B0]
		adc	dx, [bp+var_1AE]
		add	ax, [bp+var_1A4]
		adc	dx, [bp+var_1A2]
		add	ax, [bp+var_198]
		adc	dx, [bp+var_196]
		mov	cl, 2

loc_15F35:				; CODE XREF: sub_14DA2+1199j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15F35
		mov	word_449C6, ax
		mov	word_449C8, dx
		mov	ax, [bp+var_1B8]
		mov	dx, [bp+var_1B6]
		add	ax, [bp+var_1AC]
		adc	dx, [bp+var_1AA]
		add	ax, [bp+var_1A0]
		adc	dx, [bp+var_19E]
		add	ax, [bp+var_194]
		adc	dx, [bp+var_192]
		mov	cl, 2

loc_15F66:				; CODE XREF: sub_14DA2+11CAj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_15F66
		mov	word_449CA, ax
		mov	word_449CC, dx
		lea	ax, [bp+var_1C0]
		mov	[bp+var_DE], ax
		mov	[bp+var_E8], 0

loc_15F82:				; CODE XREF: sub_14DA2+122Bj
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		mov	bx, [bp+var_DE]
		mov	ax, [bx]
		sub	ax, word_449BE
		mov	[di-1DEh], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+4]
		sub	ax, word_449C6
		mov	[di-1DCh], ax
		mov	bx, [bp+var_DE]
		mov	ax, [bx+8]
		sub	ax, word_449CA
		mov	[di-1DAh], ax
		add	[bp+var_DE], 0Ch
		inc	[bp+var_E8]
		cmp	[bp+var_E8], 4
		jl	short loc_15F82
		cmp	word_449C8, 0
		jge	short loc_15FDE
		sub	ax, ax
		mov	word_449C8, ax
		mov	word_449C6, ax

loc_15FDE:				; CODE XREF: sub_14DA2+1232j
		cmp	word_449C0, 1Dh
		jl	short loc_15FFE
		jg	short loc_15FEF
		cmp	word_449BE, 0F100h
		jbe	short loc_15FFE

loc_15FEF:				; CODE XREF: sub_14DA2+1243j
		mov	word_449BE, 0F0FFh
		mov	word_449C0, 1Dh
		jmp	short loc_1601B
; ---------------------------------------------------------------------------
		align 2

loc_15FFE:				; CODE XREF: sub_14DA2+1241j
					; sub_14DA2+124Bj
		cmp	word_449C0, 0
		jg	short loc_1601B
		jl	short loc_1600F
		cmp	word_449BE, 0F00h
		jnb	short loc_1601B

loc_1600F:				; CODE XREF: sub_14DA2+1263j
		mov	word_449BE, 0F00h
		mov	word_449C0, 0

loc_1601B:				; CODE XREF: sub_14DA2+1259j
					; sub_14DA2+1261j ...
		cmp	word_449CC, 1Dh
		jl	short loc_1603A
		jg	short loc_1602C
		cmp	word_449CA, 0F100h
		jbe	short loc_1603A

loc_1602C:				; CODE XREF: sub_14DA2+1280j
		mov	word_449CA, 0F0FFh
		mov	word_449CC, 1Dh
		jmp	short loc_16057
; ---------------------------------------------------------------------------

loc_1603A:				; CODE XREF: sub_14DA2+127Ej
					; sub_14DA2+1288j
		cmp	word_449CC, 0
		jg	short loc_16057
		jl	short loc_1604B
		cmp	word_449CA, 0F00h
		jnb	short loc_16057

loc_1604B:				; CODE XREF: sub_14DA2+129Fj
		mov	word_449CA, 0F00h
		mov	word_449CC, 0

loc_16057:				; CODE XREF: sub_14DA2+1296j
					; sub_14DA2+129Dj ...
		mov	ax, [bp+var_1CC]
		add	ax, [bp+var_1D2]
		sub	ax, [bp+var_1DE]
		sub	ax, [bp+var_1D8]
		mov	[bp+var_EE], ax
		mov	ax, [bp+var_1C8]
		add	ax, [bp+var_1CE]
		sub	ax, [bp+var_1DA]
		sub	ax, [bp+var_1D4]
		mov	[bp+var_F2], ax
		neg	ax
		push	ax
		push	[bp+var_EE]
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		mov	word_4435E, ax
		push	ax
		lea	ax, [bp+var_10E]
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	[bp+var_E8], 0

loc_160A7:				; CODE XREF: sub_14DA2+1345j
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		sub	di, 1DEh
		push	si
		push	di
		mov	si, di
		lea	di, [bp+var_FC]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		push	di
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_FC]
		push	ax
		call	sub_328EE
		add	sp, 6
		inc	[bp+var_E8]
		cmp	[bp+var_E8], 4
		jl	short loc_160A7
		mov	ax, [bp+var_1C8]
		add	ax, [bp+var_1CE]
		sub	ax, [bp+var_1DA]
		sub	ax, [bp+var_1D4]
		mov	[bp+var_F2], ax
		mov	ax, [bp+var_1CA]
		add	ax, [bp+var_1D0]
		sub	ax, [bp+var_1DC]
		sub	ax, [bp+var_1D6]
		mov	[bp+var_F4], ax
		or	ax, ax
		jnz	short loc_1611C
		cmp	[bp+var_F2], 0
		jl	short loc_16146

loc_1611C:				; CODE XREF: sub_14DA2+1371j
		push	[bp+var_F4]
		mov	ax, [bp+var_F2]
		neg	ax
		push	ax
		call	sub_2EA4E
		add	sp, 4
		sub	ax, 100h
		mov	word_44986, ax
		or	ax, ax
		jge	short loc_1613E
		neg	ax
		jmp	short loc_16141
; ---------------------------------------------------------------------------
		align 2

loc_1613E:				; CODE XREF: sub_14DA2+1395j
		mov	ax, word_44986

loc_16141:				; CODE XREF: sub_14DA2+1399j
		cmp	ax, 2
		jge	short loc_1614C

loc_16146:				; CODE XREF: sub_14DA2+1378j
		mov	word_44986, 0

loc_1614C:				; CODE XREF: sub_14DA2+13A2j
		cmp	word_44986, 0
		jz	short loc_161AB
		push	word_44986
		lea	ax, [bp+var_10E]
		push	ax
		call	sub_36F2A
		add	sp, 4
		mov	[bp+var_E8], 0

loc_16169:				; CODE XREF: sub_14DA2+1407j
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		sub	di, 1DEh
		push	si
		push	di
		mov	si, di
		lea	di, [bp+var_FC]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		push	di
		lea	ax, [bp+var_10E]
		push	ax
		lea	ax, [bp+var_FC]
		push	ax
		call	sub_328EE
		add	sp, 6
		inc	[bp+var_E8]
		cmp	[bp+var_E8], 4
		jl	short loc_16169

loc_161AB:				; CODE XREF: sub_14DA2+13AFj
		mov	ax, [bp+var_1D8]
		add	ax, [bp+var_1D2]
		sub	ax, [bp+var_1DE]
		sub	ax, [bp+var_1CC]
		mov	[bp+var_F2], ax
		mov	ax, [bp+var_1D6]
		add	ax, [bp+var_1D0]
		sub	ax, [bp+var_1DC]
		sub	ax, [bp+var_1CA]
		mov	[bp+var_F4], ax
		or	ax, ax
		jnz	short loc_161DE
		cmp	[bp+var_F2], 0
		jg	short loc_16204

loc_161DE:				; CODE XREF: sub_14DA2+1433j
		push	[bp+var_F4]
		push	[bp+var_F2]
		call	sub_2EA4E
		add	sp, 4
		sub	ax, 100h
		mov	word_44998, ax
		or	ax, ax
		jge	short loc_161FC
		neg	ax
		jmp	short loc_161FF
; ---------------------------------------------------------------------------

loc_161FC:				; CODE XREF: sub_14DA2+1454j
		mov	ax, word_44998

loc_161FF:				; CODE XREF: sub_14DA2+1458j
		cmp	ax, 2
		jge	short loc_1620A

loc_16204:				; CODE XREF: sub_14DA2+143Aj
		mov	word_44998, 0

loc_1620A:				; CODE XREF: sub_14DA2+1460j
		mov	bx, [bp+arg_0]
		mov	di, bx
		mov	al, [di+0C2h]
		add	al, [di+0C3h]
		mov	[bx+0BFh], al
		mov	bx, [bp+arg_0]
		mov	di, bx
		mov	al, [di+0C4h]
		add	al, [di+0C5h]
		mov	[bx+0C0h], al
		cmp	byte_44889, 2
		jnz	short loc_16236
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_16236:				; CODE XREF: sub_14DA2+148Fj
		cmp	byte_454B8, 0
		jnz	short loc_1625F
		cmp	[bp+arg_8], 0
		jz	short loc_1624A
		push	word_4408C
		jmp	short loc_1624E
; ---------------------------------------------------------------------------
		align 2

loc_1624A:				; CODE XREF: sub_14DA2+149Fj
		push	word_43964

loc_1624E:				; CODE XREF: sub_14DA2+14A5j
		mov	bx, [bp+arg_0]
		mov	al, [bx+0CFh]
		sub	ah, ah
		push	ax
		push	cs
		call	near ptr sub_18CD8
		add	sp, 4

loc_1625F:				; CODE XREF: sub_14DA2+1499j
		sub	ax, ax
		push	ax
		mov	ax, word_4435E
		neg	ax
		push	ax
		mov	ax, word_44986
		neg	ax
		push	ax
		mov	ax, word_44998
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_EA], ax
		mov	[bp+var_E8], 0
		jmp	loc_1632C
; ---------------------------------------------------------------------------

loc_16288:				; CODE XREF: sub_14DA2+1679j
		mov	ax, word_44DC6
		mov	[bp+var_E], ax
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		push	si
		lea	si, [bx+di+8Ch]
		lea	di, [bp+var_1C6]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		lea	ax, [bp+var_17C]
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_1E1A0
		add	sp, 4
		mov	ax, word_44DC6
		cmp	[bp+var_E], ax
		jnz	short loc_16309
		push	[bp+var_1C2]
		push	[bp+var_1C4]
		push	[bp+var_1C6]
		push	ax
		push	cs
		call	near ptr sub_19926
		add	sp, 8
		mov	[bp+var_138], ax
		cmp	byte_45DB2, 1
		jz	short loc_16309
		or	si, si
		jge	short loc_162EE
		or	ax, ax
		jg	short loc_162F9

loc_162EE:				; CODE XREF: sub_14DA2+1546j
		or	si, si
		jle	short loc_16309
		cmp	[bp+var_138], 0
		jge	short loc_16309

loc_162F9:				; CODE XREF: sub_14DA2+154Aj
					; sub_14DA2:loc_16425j
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 5
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_16309:				; CODE XREF: sub_14DA2+1523j
					; sub_14DA2+1542j ...
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	bx, [bp+arg_0]
		push	si
		lea	di, [bx+di+8Ch]
		lea	si, [bp+var_17C]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		pop	si
		inc	[bp+var_E8]

loc_1632C:				; CODE XREF: sub_14DA2+14E3j
		cmp	[bp+var_E8], 4
		jl	short loc_16336
		jmp	loc_16428
; ---------------------------------------------------------------------------

loc_16336:				; CODE XREF: sub_14DA2+158Fj
		mov	al, [bp+var_E8]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	bx, [bp+arg_2]
		push	si
		lea	si, [bx+di+0D2h]
		lea	di, [bp+var_1C6]
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		pop	si
		mov	bx, [bp+arg_2]
		mov	ax, [bx+0CAh]
		mov	cl, 6
		shl	ax, cl
		mov	[bp+var_1C4], ax
		lea	ax, [bp+var_FC]
		push	ax
		push	[bp+var_EA]
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_FC]
		cwd
		add	ax, word_449BE
		adc	dx, word_449C0
		mov	cl, 6

loc_16389:				; CODE XREF: sub_14DA2+15EDj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16389
		mov	[bp+var_1C6], ax
		mov	ax, [bp+var_FA]
		cwd
		add	ax, word_449C6
		adc	dx, word_449C8
		mov	cl, 6

loc_163A4:				; CODE XREF: sub_14DA2+1608j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_163A4
		mov	[bp+var_1C4], ax
		mov	ax, [bp+var_F8]
		cwd
		add	ax, word_449CA
		adc	dx, word_449CC
		mov	cl, 6

loc_163BF:				; CODE XREF: sub_14DA2+1623j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_163BF
		mov	[bp+var_1C2], ax
		push	si
		lea	di, [bp+var_17C]
		lea	si, [bp+var_1C6]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	al, [bp+var_E8]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+arg_0]
		add	ax, 8Ch	; 'å'
		push	ax
		lea	ax, [bp+var_1C6]
		push	ax
		call	sub_1E1A0
		add	sp, 4
		push	[bp+var_1C2]
		push	[bp+var_1C4]
		push	[bp+var_1C6]
		push	word_44DC6
		push	cs
		call	near ptr sub_19926
		add	sp, 8
		mov	si, ax
		cmp	word_44DC6, 4
		jl	short loc_1641E
		jmp	loc_16288
; ---------------------------------------------------------------------------

loc_1641E:				; CODE XREF: sub_14DA2+1677j
		or	si, si
		jle	short loc_16425
		jmp	loc_16309
; ---------------------------------------------------------------------------

loc_16425:				; CODE XREF: sub_14DA2+167Ej
		jmp	loc_162F9
; ---------------------------------------------------------------------------

loc_16428:				; CODE XREF: sub_14DA2+1591j
		mov	bx, [bp+arg_0]
		mov	al, [bx+0BFh]
		add	al, [bx+0C0h]
		mov	[bp+var_11C], al
		cmp	[bp+arg_8], 0
		jnz	short loc_1644C
		or	al, al
		jnz	short loc_1644C
		cmp	byte ptr [bx+0C1h], 0
		jz	short loc_1644C
		inc	word_445E4

loc_1644C:				; CODE XREF: sub_14DA2+1699j
					; sub_14DA2+169Dj ...
		mov	al, [bp+var_11C]
		mov	[bx+0C1h], al
		mov	ax, word_449BE
		mov	dx, word_449C0
		mov	cl, 6

loc_1645D:				; CODE XREF: sub_14DA2+16C1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1645D
		mov	[bp+var_11A], ax
		mov	ax, word_449C6
		mov	dx, word_449C8
		mov	cl, 6

loc_16472:				; CODE XREF: sub_14DA2+16D6j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16472
		mov	[bp+var_118], ax
		mov	ax, word_449CA
		mov	dx, word_449CC
		mov	cl, 6

loc_16487:				; CODE XREF: sub_14DA2+16EBj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16487
		mov	[bp+var_116], ax
		mov	ax, word_44998
		mov	[bp+var_114], ax
		mov	ax, word_44986
		mov	[bp+var_112], ax
		mov	ax, word_4435E
		mov	[bp+var_110], ax
		cmp	byte_449AA, 0
		jnz	short loc_164B2
		jmp	loc_16578
; ---------------------------------------------------------------------------

loc_164B2:				; CODE XREF: sub_14DA2+170Bj
		mov	bx, [bp+arg_4]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_164BC:				; CODE XREF: sub_14DA2+1720j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_164BC
		mov	[bp+var_18E], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_164D3:				; CODE XREF: sub_14DA2+1737j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_164D3
		mov	[bp+var_18C], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_164EA:				; CODE XREF: sub_14DA2+174Ej
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_164EA
		mov	[bp+var_18A], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+1Ch]
		mov	[bp+var_188], ax
		mov	ax, [bx+1Ah]
		mov	[bp+var_186], ax
		mov	ax, [bx+18h]
		mov	[bp+var_184], ax
		lea	ax, [bp+var_18E]
		push	ax
		mov	ax, [bp+arg_6]
		add	ax, 0C8h ; '»'
		push	ax
		lea	ax, [bp+var_11A]
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 0C8h ; '»'
		push	ax
		push	cs
		call	near ptr sub_19074
		add	sp, 8
		or	al, al
		jz	short loc_16578
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C8h], 0
		jz	short loc_1653E
		jmp	loc_16892
; ---------------------------------------------------------------------------

loc_1653E:				; CODE XREF: sub_14DA2+1797j
		push	[bp+arg_4]
		push	bx
		push	cs
		call	near ptr sub_18466
		add	sp, 4
		or	al, al
		jnz	short loc_16550
		jmp	loc_16892
; ---------------------------------------------------------------------------

loc_16550:				; CODE XREF: sub_14DA2+17A9j
		mov	al, [bp+arg_8]
		cbw
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4
		mov	al, [bp+arg_8]
		cbw
		xor	al, 1

loc_16566:				; CODE XREF: sub_14DA2+18AAj
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_16578:				; CODE XREF: sub_14DA2+170Dj
					; sub_14DA2+178Dj
		mov	ax, [bp+var_11A]
		mov	cl, 0Ah
		sar	ax, cl
		mov	[bp+var_FC], ax
		mov	ax, [bp+var_116]
		sar	ax, cl
		sub	ax, 1Dh
		neg	ax
		mov	[bp+var_F8], ax
		mov	[bp+var_188], 0
		mov	[bp+var_186], 0
		mov	[bp+var_184], 0
		cmp	[bp+var_FC], 0
		jge	short loc_165AF
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_165AF:				; CODE XREF: sub_14DA2+1808j
		cmp	[bp+var_FC], 1Eh
		jl	short loc_165B9
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_165B9:				; CODE XREF: sub_14DA2+1812j
		or	ax, ax
		jge	short loc_165C0
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_165C0:				; CODE XREF: sub_14DA2+1819j
		cmp	ax, 1Eh
		jl	short loc_165C8
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_165C8:				; CODE XREF: sub_14DA2+1821j
		lea	ax, [bp+var_DC]
		push	ax
		push	[bp+var_F8]
		push	[bp+var_FC]
		call	sub_1FAE4
		add	sp, 6
		mov	[bp+var_EC], al
		or	al, al
		jz	short loc_16650
		sub	si, si
		jmp	short loc_165F0
; ---------------------------------------------------------------------------
		align 2

loc_165EA:				; CODE XREF: sub_14DA2+189Cj
		add	[bp+var_144], 6
		inc	si

loc_165F0:				; CODE XREF: sub_14DA2+1845j
		mov	al, [bp+var_EC]
		sub	ah, ah
		cmp	ax, si
		jbe	short loc_16650
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		mov	ax, [di-0DCh]
		mov	[bp+var_18E], ax
		mov	ax, [di-0DAh]
		mov	[bp+var_18C], ax
		mov	ax, [di-0D8h]
		mov	[bp+var_18A], ax
		lea	ax, [bp+var_18E]
		push	ax
		mov	ax, 5FAh
		push	ax
		lea	ax, [bp+var_11A]
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 0C8h ; '»'
		push	ax
		push	cs
		call	near ptr sub_19074
		add	sp, 8
		or	al, al
		jz	short loc_165EA
		mov	bx, [bp+arg_0]
		sub	word ptr [bx+36h], 200h

loc_16648:				; CODE XREF: sub_14DA2+1A9Bj
		mov	al, [bp+arg_8]
		cbw
		jmp	loc_16566
; ---------------------------------------------------------------------------
		align 2

loc_16650:				; CODE XREF: sub_14DA2+1841j
					; sub_14DA2+1856j
		mov	bx, [bp+var_F8]
		shl	bx, 1
		mov	bx, [bx-5A30h]
		add	bx, [bp+var_FC]
		les	di, dword_45E56
		mov	al, es:[bx+di]
		cbw
		mov	si, ax
		cmp	si, 0FFFFh
		jnz	short loc_16670
		jmp	loc_16710
; ---------------------------------------------------------------------------

loc_16670:				; CODE XREF: sub_14DA2+18C9j
		cmp	byte ptr [si-6EE2h], 0
		jz	short loc_1667A
		jmp	loc_16710
; ---------------------------------------------------------------------------

loc_1667A:				; CODE XREF: sub_14DA2+18D3j
		mov	bx, si
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		les	di, dword_42A30
		mov	ax, es:[bx+di]
		mov	[bp+var_18E], ax
		mov	di, si
		mov	ax, di
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	bx, word ptr dword_42A30
		mov	ax, es:[bx+di+2]
		mov	[bp+var_18C], ax
		mov	di, si
		mov	ax, di
		shl	di, 1
		add	di, ax
		shl	di, 1
		mov	ax, es:[bx+di+4]
		mov	[bp+var_18A], ax
		lea	ax, [bp+var_18E]
		push	ax
		mov	ax, 5EAh
		push	ax
		lea	ax, [bp+var_11A]
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 0C8h ; '»'
		push	ax
		push	cs
		call	near ptr sub_19074
		add	sp, 8
		or	al, al
		jz	short loc_16710
		mov	byte ptr [si-6EE2h], 1
		mov	ax, 3C00h
		cwd
		push	dx
		push	ax
		mov	ax, 580h
		cwd
		push	dx
		push	ax
		mov	bx, [bp+arg_0]
		sub	ax, ax
		push	ax
		push	word ptr [bx+2Ch]
		call	__aFlmul
		push	dx
		push	ax
		call	__aFuldiv
		push	ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+18h]
		neg	ax
		push	ax
		lea	ax, [si+2]
		push	ax
		push	cs
		call	near ptr sub_19A2C
		add	sp, 6

loc_16710:				; CODE XREF: sub_14DA2+18CBj
					; sub_14DA2+18D5j ...
		mov	al, byte_4499A
		cbw
		mov	di, ax
		cmp	[bp+var_FC], di
		jz	short loc_1671F
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_1671F:				; CODE XREF: sub_14DA2+1978j
		mov	al, byte_4499E
		cbw
		cmp	[bp+var_F8], ax
		jz	short loc_1672C
		jmp	loc_16840
; ---------------------------------------------------------------------------

loc_1672C:				; CODE XREF: sub_14DA2+1985j
		mov	ax, 7Eh	; '~'
		push	ax
		mov	ax, word_45516
		add	ah, 1
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, di
		shl	bx, 1
		mov	cx, [bx-599Eh]
		add	cx, ax
		mov	[bp+var_18E], cx
		mov	al, byte_4499B
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+178h]
		mov	[bp+var_18C], ax
		mov	ax, 7Eh	; '~'
		push	ax
		mov	ax, word_45516
		add	ah, 1
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-55EAh]
		mov	[bp+var_18A], cx
		lea	ax, [bp+var_18E]
		push	ax
		mov	ax, 5F2h
		push	ax
		lea	ax, [bp+var_11A]
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 0C8h ; '»'
		push	ax
		push	cs
		call	near ptr sub_19074
		add	sp, 8
		cbw
		mov	[bp+var_138], ax
		or	ax, ax
		jnz	short loc_16836
		mov	ax, 7Eh	; '~'
		push	ax
		mov	ax, word_45516
		add	ah, 3
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-599Eh]
		mov	[bp+var_18E], cx
		mov	ax, 7Eh	; '~'
		push	ax
		mov	ax, word_45516
		add	ah, 3
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-55EAh]
		mov	[bp+var_18A], cx
		lea	ax, [bp+var_18E]
		push	ax
		mov	ax, 5F2h
		push	ax
		lea	ax, [bp+var_11A]
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 0C8h ; '»'
		push	ax
		push	cs
		call	near ptr sub_19074
		add	sp, 8
		cbw
		mov	[bp+var_138], ax

loc_16836:				; CODE XREF: sub_14DA2+1A15j
		cmp	[bp+var_138], 0
		jz	short loc_16840
		jmp	loc_16648
; ---------------------------------------------------------------------------

loc_16840:				; CODE XREF: sub_14DA2+1491j
					; sub_14DA2+180Aj ...
		mov	bx, [bp+arg_0]
		mov	ax, word_449BE
		mov	dx, word_449C0
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	bx, [bp+arg_0]
		mov	ax, word_449C6
		mov	dx, word_449C8
		mov	[bx+4],	ax
		mov	[bx+6],	dx
		mov	bx, [bp+arg_0]
		mov	ax, word_449CA
		mov	dx, word_449CC
		mov	[bx+8],	ax
		mov	[bx+0Ah], dx
		mov	bx, [bp+arg_0]
		mov	ax, word_44998
		mov	[bx+1Ch], ax
		mov	bx, [bp+arg_0]
		mov	ax, word_44986
		mov	[bx+1Ah], ax
		mov	bx, [bp+arg_0]
		mov	ax, word_4435E
		mov	[bx+18h], ax
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C8h], 0

loc_16892:				; CODE XREF: sub_14DA2+1799j
					; sub_14DA2+17ABj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_14DA2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16898	proc far		; CODE XREF: sub_16B02+2BAp
					; sub_16B02+3F0p ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= byte ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= word ptr  16h
arg_12		= word ptr  18h

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		sub	si, si
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_6]
		mov	dx, [bp+arg_8]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_6]
		mov	dx, [bp+arg_8]
		mov	[bx+0Ch], ax
		mov	[bx+0Eh], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_A]
		mov	dx, [bp+arg_C]
		add	ax, 200h
		adc	dx, si
		mov	[bx+4],	ax
		mov	[bx+6],	dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_A]
		mov	dx, [bp+arg_C]
		mov	[bx+10h], ax
		mov	[bx+12h], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_E]
		mov	dx, [bp+arg_10]
		mov	[bx+8],	ax
		mov	[bx+0Ah], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_E]
		mov	dx, [bp+arg_10]
		mov	[bx+14h], ax
		mov	[bx+16h], dx
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_12]
		mov	[bx+18h], ax
		mov	bx, [bp+arg_0]
		mov	[bx+1Ah], si
		mov	bx, [bp+arg_0]
		mov	[bx+1Ch], si
		mov	bx, [bp+arg_0]
		mov	[bx+36h], si
		mov	bx, [bp+arg_0]
		mov	[bx+1Eh], si
		mov	bx, [bp+arg_0]
		mov	[bx+20h], si
		mov	bx, [bp+arg_0]
		sub	al, al
		mov	[bx+0BCh], al
		mov	bx, [bp+arg_0]
		mov	[bx+0BDh], al
		mov	bx, [bp+arg_2]
		mov	ax, [bx+6]
		mov	bx, [bp+arg_0]
		mov	[bx+22h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+22h]
		mov	[bx+24h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+22h]
		mov	[bx+26h], ax
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0BEh], 1
		mov	bx, [bp+arg_0]
		mov	[bx+28h], si
		mov	bx, [bp+arg_0]
		mov	[bx+2Ah], si
		mov	bx, [bp+arg_0]
		mov	[bx+2Ch], si
		mov	bx, [bp+arg_0]
		mov	[bx+2Eh], si
		mov	bx, [bp+arg_2]
		mov	ax, [bx+10h]
		mov	bx, [bp+arg_0]
		mov	[bx+30h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+30h]
		mov	cl, 8
		shr	ax, cl
		mov	[bx+32h], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+20h]
		mov	bx, [bp+arg_0]
		mov	[bx+34h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+34h]
		mov	[bx+3Ah], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+22h]
		mov	bx, [bp+arg_0]
		mov	[bx+38h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+38h]
		mov	[bx+3Ch], ax
		mov	bx, [bp+arg_0]
		mov	[bx+3Eh], si
		mov	bx, [bp+arg_0]
		mov	[bx+40h], si
		mov	bx, [bp+arg_0]
		mov	[bx+42h], si
		mov	bx, [bp+arg_0]
		mov	[bx+48h], si
		mov	bx, [bp+arg_0]
		mov	[bx+4Ah], si
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0BFh], 2
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C0h], 2
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C1h], 4
		mov	bx, [bp+arg_0]
		mov	[bx+44h], si
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+46h], 3E8h
		mov	ax, [bp+arg_6]
		mov	dx, [bp+arg_8]
		mov	cl, 6

loc_16A04:				; CODE XREF: sub_16898+172j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16A04
		mov	[bp+var_A], ax
		mov	ax, [bp+arg_A]
		mov	dx, [bp+arg_C]
		mov	cl, 6

loc_16A17:				; CODE XREF: sub_16898+185j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16A17
		mov	[bp+var_8], ax
		mov	ax, [bp+arg_E]
		mov	dx, [bp+arg_10]
		mov	cl, 6

loc_16A2A:				; CODE XREF: sub_16898+198j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_16A2A
		mov	[bp+var_6], ax
		sub	di, di

loc_16A37:				; CODE XREF: sub_16898+213j
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+di+0C2h], 1
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_C], ax
		mov	bx, [bp+arg_0]
		add	bx, ax
		mov	[bx+4Ch], si
		mov	bx, [bp+arg_0]
		add	bx, [bp+var_C]
		mov	[bx+54h], si
		mov	bx, [bp+arg_0]
		add	bx, [bp+var_C]
		mov	[bx+5Ch], si
		mov	bx, [bp+arg_0]
		add	bx, [bp+var_C]
		mov	[bx+64h], si
		mov	bx, [bp+arg_0]
		add	bx, [bp+var_C]
		mov	[bx+6Ch], si
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_E], ax
		mov	bx, [bp+arg_0]
		add	bx, ax
		push	si
		push	di
		lea	di, [bx+74h]
		lea	si, [bp+var_A]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, [bp+arg_0]
		add	bx, [bp+var_E]
		push	si
		push	di
		lea	di, [bx+8Ch]
		lea	si, [bp+var_A]
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	di
		cmp	di, 4
		jl	short loc_16A37
		mov	bx, [bp+arg_0]
		mov	ax, si
		mov	[bx+0C6h], al
		mov	bx, [bp+arg_0]
		mov	[bx+0C7h], al
		mov	bx, [bp+arg_0]
		mov	[bx+0C8h], al
		mov	bx, [bp+arg_0]
		mov	[bx+0C9h], al
		mov	bx, [bp+arg_0]
		mov	[bx+0CAh], al
		mov	bx, [bp+arg_0]
		mov	[bx+0CBh], al
		mov	bx, [bp+arg_0]
		mov	al, [bp+arg_4]
		mov	[bx+0CCh], al
		mov	bx, [bp+arg_0]
		mov	ax, si
		mov	[bx+0CDh], al
		mov	bx, [bp+arg_0]
		mov	[bx+0CEh], al
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0CFh], 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_16898	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16B02	proc far		; CODE XREF: _main+3C0P sub_110D0+81P	...

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		sub	si, si
		cmp	[bp+arg_0], 0FFFFh
		jnz	short loc_16B4D
		mov	word_45A24, si
		sub	di, di

loc_16B18:				; CODE XREF: sub_16B02+49j
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, di
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, 3F4h
		adc	dx, 0
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	es, dx
		assume es:nothing
		mov	bx, ax
		mov	ax, si
		mov	es:[bx], al
		inc	di
		cmp	di, 14h
		jl	short loc_16B18

loc_16B4D:				; CODE XREF: sub_16B02+Ej
		cmp	word_449D0, 0Ah
		jnz	short loc_16B5C
		mov	word_449E8, 64Ah
		jmp	short loc_16B62
; ---------------------------------------------------------------------------

loc_16B5C:				; CODE XREF: sub_16B02+50j
		mov	word_449E8, 60Ah

loc_16B62:				; CODE XREF: sub_16B02+58j
		mov	ax, 1Eh
		imul	word_449D0
		mov	word_45A00, ax
		mov	ax, 64h	; 'd'
		cwd
		mov	cx, word_449D0
		idiv	cx
		mov	word_4499C, ax
		cmp	[bp+arg_0], 0FFFDh
		jnz	short loc_16B82
		jmp	loc_16F34
; ---------------------------------------------------------------------------

loc_16B82:				; CODE XREF: sub_16B02+7Bj
		call	sub_22532
		mov	byte_44888, 1
		mov	word_445CE, 1
		mov	ax, si
		mov	byte_44889, al
		mov	byte_4488A, al
		mov	word_445CC, si
		mov	word_44788, si
		mov	byte_4488B, al
		mov	byte_4488C, al
		mov	di, si
		jmp	short loc_16BB3
; ---------------------------------------------------------------------------

loc_16BAC:				; CODE XREF: sub_16B02+B4j
		mov	ax, si
		mov	[di-6EE2h], al
		inc	di

loc_16BB3:				; CODE XREF: sub_16B02+A8j
		cmp	di, 30h	; '0'
		jl	short loc_16BAC
		mov	di, si
		jmp	short loc_16BC5
; ---------------------------------------------------------------------------

loc_16BBC:				; CODE XREF: sub_16B02+C6j
		mov	bx, di
		shl	bx, 1
		mov	[bx-6F4Eh], si
		inc	di

loc_16BC5:				; CODE XREF: sub_16B02+B8j
		cmp	di, 18h
		jl	short loc_16BBC
		mov	ax, 200h
		push	ax
		mov	ax, word_45516
		add	ah, 3
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 1000h
		push	cx
		mov	cx, word_45516
		add	ch, 2
		push	cx
		mov	[bp+var_A], ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, [bp+var_A]
		mov	cx, ax
		mov	al, byte_4499A
		cbw
		mov	dx, cx
		mov	cl, 0Ah
		shl	ax, cl
		add	dx, ax
		mov	word_445B4, dx
		mov	al, byte_4499B
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+178h]
		add	ax, 3C0h
		mov	word_445B6, ax
		mov	ax, 200h
		push	ax
		mov	ax, word_45516
		add	ah, 3
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 1000h
		push	cx
		mov	cx, word_45516
		add	ch, 2
		push	cx
		mov	[bp+var_A], ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-7E84h]
		add	cx, [bp+var_A]
		mov	word_445B8, cx
		push	si
		push	di
		mov	di, 8E4Ah
		mov	si, 8E44h
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		pop	di
		pop	si
		push	si
		push	di
		mov	di, 8E50h
		mov	si, 8E44h
		movsw
		movsw
		movsw
		pop	di
		pop	si
		push	si
		push	di
		mov	di, 8E56h
		mov	si, 8E44h
		movsw
		movsw
		movsw
		pop	di
		pop	si
		sub	ax, ax
		mov	word_445D2, ax
		mov	word_445D0, ax
		mov	word_445D4, si
		mov	word_445D6, si
		mov	word_445D8, si
		mov	word_445DA, si
		mov	word_445DC, si
		mov	word_445DE, si
		mov	word_445E0, si
		mov	word_445E2, si
		mov	word_445E4, si
		mov	ax, 0D2h ; '“'
		push	ax
		mov	ax, word_45516
		add	ah, 2
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 24h	; '$'
		push	cx
		mov	cx, word_45516
		add	ch, 1
		push	cx
		mov	[bp+var_A], ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, [bp+var_A]
		mov	[bp+var_8], ax
		mov	ax, 0D2h ; '“'
		push	ax
		mov	ax, word_45516
		add	ah, 2
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 24h	; '$'
		push	cx
		mov	cx, word_45516
		add	ch, 1
		push	cx
		mov	[bp+var_A], ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, [bp+var_A]
		mov	[bp+var_2], ax
		mov	ax, word_45516
		neg	ax
		push	ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		add	ax, [bp+var_2]
		cwd
		mov	cl, 6

loc_16D6F:				; CODE XREF: sub_16B02+273j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16D6F
		push	dx
		push	ax
		mov	al, byte_4499B
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+178h]
		cwd
		mov	cl, 6

loc_16D88:				; CODE XREF: sub_16B02+28Cj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16D88
		push	dx
		push	ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		add	ax, [bp+var_8]
		cwd
		mov	cl, 6

loc_16DA4:				; CODE XREF: sub_16B02+2A8j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16DA4
		push	dx
		push	ax
		mov	al, byte_449A9
		cbw
		push	ax
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		push	cs
		call	near ptr sub_16898
		add	sp, 14h
		mov	word_44786, si
		mov	ax, si
		mov	byte_448F1, al
		mov	byte_448F2, al
		mov	byte_448EF, al
		mov	byte_448F0, al
		mov	al, byte_4499A
		cbw
		mov	word_4478A, ax
		mov	word_4478C, ax
		mov	al, byte_4499E
		cbw
		mov	word_4478E, ax
		mov	word_44790, ax
		cmp	[bp+arg_0], 0FFFEh
		jz	short loc_16E0A
		sub	ax, ax
		push	ax
		mov	al, byte_446B4
		inc	byte_446B4
		sub	ah, ah
		push	ax
		mov	ax, 8F1Ah
		push	ax
		push	word_44630
		push	cs
		call	near ptr sub_18D60
		add	sp, 8

loc_16E0A:				; CODE XREF: sub_16B02+2EAj
		mov	ax, 0D2h ; '“'
		push	ax
		mov	ax, word_45516
		add	ah, 2
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 24h	; '$'
		push	cx
		mov	cx, word_45516
		add	ch, 3
		push	cx
		mov	[bp+var_A], ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, [bp+var_A]
		mov	[bp+var_8], ax
		mov	ax, 0D2h ; '“'
		push	ax
		mov	ax, word_45516
		add	ah, 2
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 24h	; '$'
		push	cx
		mov	cx, word_45516
		add	ch, 3
		push	cx
		mov	[bp+var_A], ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, [bp+var_A]
		mov	[bp+var_2], ax
		mov	ax, word_45516
		neg	ax
		push	ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		add	ax, [bp+var_2]
		cwd
		mov	cl, 6

loc_16EA6:				; CODE XREF: sub_16B02+3AAj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16EA6
		push	dx
		push	ax
		mov	al, byte_4499B
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+178h]
		cwd
		mov	cl, 6

loc_16EBF:				; CODE XREF: sub_16B02+3C3j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16EBF
		push	dx
		push	ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		add	ax, [bp+var_8]
		cwd
		mov	cl, 6

loc_16EDB:				; CODE XREF: sub_16B02+3DFj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_16EDB
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		push	cs
		call	near ptr sub_16898
		add	sp, 14h
		cmp	byte_449AA, 0
		jz	short loc_16F2F
		cmp	[bp+arg_0], 0FFFEh
		jz	short loc_16F2F
		mov	ax, 911Dh
		push	ax
		mov	al, byte_44784
		inc	byte_44784
		sub	ah, ah
		push	ax
		mov	ax, 8FEAh
		push	ax
		mov	bx, word_44700
		shl	bx, 1
		add	bx, word ptr dword_43942
		mov	es, word ptr dword_43942+2
		assume es:nothing
		push	word ptr es:[bx]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8

loc_16F2F:				; CODE XREF: sub_16B02+3FBj
					; sub_16B02+401j
		mov	ax, si
		mov	byte_448BE, al

loc_16F34:				; CODE XREF: sub_16B02+7Dj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_16B02	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16F3A	proc far		; CODE XREF: sub_21B7A+1CCP
					; sub_21B7A+1D8P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	[bp+arg_0], 0
		jnz	short loc_16F59
		cmp	word_45A24, 0
		jnz	short loc_16F59
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_16B02
		add	sp, 2

loc_16F59:				; CODE XREF: sub_16F3A+Cj
					; sub_16F3A+13j
		mov	ax, [bp+arg_0]
		cwd
		mov	cx, word_45A00
		idiv	cx
		mov	si, ax
		cmp	si, 14h
		jnz	short loc_16F6B
		dec	si

loc_16F6B:				; CODE XREF: sub_16F3A+2Ej
		mov	ax, word_445D4
		cmp	[bp+arg_0], ax
		jb	short loc_16FB1

loc_16F73:				; CODE XREF: sub_16F3A+C5j
		mov	ax, word_45A00
		imul	si
		cmp	ax, word_445D4
		ja	short loc_16F81
		jmp	loc_17002
; ---------------------------------------------------------------------------

loc_16F81:				; CODE XREF: sub_16F3A+42j
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, si
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, 3F4h
		adc	dx, 0
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	es, dx
		mov	bx, ax
		cmp	byte ptr es:[bx], 0
		jz	short loc_16FFE

loc_16FB1:				; CODE XREF: sub_16F3A+37j
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, si
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		push	si
		mov	di, 8D24h
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		push	ds
		mov	ds, dx
		mov	cx, 230h
		repne movsw
		pop	ds
		pop	si
		mov	ax, 9112h
		push	ax
		call	sub_19E21
		add	sp, 2
		mov	ax, word_445D4
		mov	word_42D02, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		db 3 dup(90h)
; ---------------------------------------------------------------------------

loc_16FFE:				; CODE XREF: sub_16F3A+75j
		dec	si
		jmp	loc_16F73
; ---------------------------------------------------------------------------

loc_17002:				; CODE XREF: sub_16F3A+44j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_16F3A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17008	proc far		; CODE XREF: sub_21B7A+1F3P
					; sub_21B7A:loc_21D9DP	...

var_4		= byte ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	bx, word_445D4
		les	di, dword_4562E
		assume es:nothing
		mov	al, es:[bx+di]
		mov	[bp+var_4], al
		or	al, al
		jz	short loc_17027
		mov	byte_44889, 1

loc_17027:				; CODE XREF: sub_17008+18j
		mov	ax, bx
		sub	dx, dx
		div	word_45A00
		or	dx, dx
		jnz	short loc_17079
		mov	ax, bx
		sub	dx, dx
		div	word_45A00
		mov	si, ax
		mov	ax, 9112h
		push	ax
		call	sub_19E4E
		add	sp, 2
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, si
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	bx, ax
		mov	es, dx
		push	si
		mov	di, bx
		mov	si, 8D24h
		mov	cx, 230h
		repne movsw
		pop	si

loc_17079:				; CODE XREF: sub_17008+29j
		inc	word_445D4
		cmp	byte_4488A, 0
		jz	short loc_170BE
		mov	ax, word_445CE
		cmp	word_445CC, ax
		jge	short loc_170BE
		inc	word_445CC
		cmp	word_445CC, ax
		jnz	short loc_170BE
		cmp	byte_449DA, 0
		jnz	short loc_170BE
		cmp	byte_446AF, 1
		jnz	short loc_170B2
		cmp	word_44612, 0
		jz	short loc_170B2
		inc	word_445CE
		jmp	short loc_170BE
; ---------------------------------------------------------------------------

loc_170B2:				; CODE XREF: sub_17008+9Bj
					; sub_17008+A2j
		cmp	byte_45DB2, 0
		jnz	short loc_170BE
		mov	byte_449DA, 1

loc_170BE:				; CODE XREF: sub_17008+7Aj
					; sub_17008+83j ...
		cmp	byte_44889, 0
		jz	short loc_170F6
		mov	al, [bp+var_4]
		cbw
		push	ax
		push	cs
		call	near ptr sub_171E8
		add	sp, 2
		cmp	byte_449AA, 0
		jz	short loc_170DC
		push	cs
		call	near ptr sub_14712

loc_170DC:				; CODE XREF: sub_17008+CEj
		call	sub_2298C
		cmp	byte_448BE, 0
		jz	short loc_170EC
		push	cs
		call	near ptr sub_19BA0

loc_170EC:				; CODE XREF: sub_17008+DEj
		push	cs
		call	near ptr sub_188A4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_170F6:				; CODE XREF: sub_17008+BBj
		cmp	byte_45DB2, 1
		jz	short loc_17100
		jmp	loc_171E1
; ---------------------------------------------------------------------------

loc_17100:				; CODE XREF: sub_17008+F3j
		push	cs
		call	near ptr sub_188A4
		cmp	byte_4393C, 0
		jnz	short loc_1710E
		jmp	loc_171E1
; ---------------------------------------------------------------------------

loc_1710E:				; CODE XREF: sub_17008+101j
		cmp	word_44DCA, 1C2h
		jge	short loc_1711B
		add	word_44DCA, 8

loc_1711B:				; CODE XREF: sub_17008+10Cj
		cmp	byte_4393C, 1
		jnz	short loc_1712E
		cmp	word_44DCA, 180h
		jle	short loc_1712E
		inc	byte_4393C

loc_1712E:				; CODE XREF: sub_17008+118j
					; sub_17008+120j
		cmp	byte_4393C, 2
		jz	short loc_17138
		jmp	loc_171E1
; ---------------------------------------------------------------------------

loc_17138:				; CODE XREF: sub_17008+12Bj
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		mov	cx, word_445EE
		mov	bx, word_445F0
		mov	dx, cx
		mov	cl, 6

loc_17150:				; CODE XREF: sub_17008+14Ej
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_17150
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	si, ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	cx, word_445E6
		mov	bx, word_445E8
		mov	dx, cx
		mov	cl, 6

loc_1718A:				; CODE XREF: sub_17008+188j
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_1718A
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	si, ax
		cmp	si, 0E4h ; '‰'
		jle	short loc_171D0
		cmp	word_44610, 500h
		jnb	short loc_171CC
		mov	ax, 1

loc_171BD:				; CODE XREF: sub_17008+1C6j
					; sub_17008+1D2j
		push	ax
		push	cs
		call	near ptr sub_171E8
		add	sp, 2
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_171CC:				; CODE XREF: sub_17008+1B0j
		sub	ax, ax
		jmp	short loc_171BD
; ---------------------------------------------------------------------------

loc_171D0:				; CODE XREF: sub_17008+1A8j
		cmp	word_44610, 0
		jz	short loc_171DC
		mov	ax, 2
		jmp	short loc_171BD
; ---------------------------------------------------------------------------

loc_171DC:				; CODE XREF: sub_17008+1CDj
		mov	byte_4393C, 0

loc_171E1:				; CODE XREF: sub_17008+F5j
					; sub_17008+103j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_17008	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_171E8	proc far		; CODE XREF: sub_17008+C3p
					; sub_17008+1B7p

var_52		= word ptr -52h
var_4E		= word ptr -4Eh
var_3A		= byte ptr -3Ah
var_38		= word ptr -38h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= byte ptr -2Ch
var_2A		= byte ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= word ptr -1Ah
var_16		= word ptr -16h
var_2		= word ptr -2
arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 52h
		push	di
		push	si
		cmp	byte_4499F, 0
		jz	short loc_171FB
		dec	byte_4499F

loc_171FB:				; CODE XREF: sub_171E8+Dj
		mov	byte_446B5, 1
		cmp	byte_446AF, 0
		jz	short loc_17242
		mov	byte_448F1, 0
		mov	[bp+arg_0], 2
		cmp	word_44612, 0
		jnz	short loc_17242
		mov	byte_446B5, 0
		cmp	word_44610, 0
		jnz	short loc_17242
		cmp	word_44632, 0
		jnz	short loc_17242
		cmp	word_44634, 0
		jnz	short loc_17242
		cmp	word_44636, 0
		jnz	short loc_17242
		cmp	word_44638, 0
		jnz	short loc_17242
		jmp	loc_17810
; ---------------------------------------------------------------------------

loc_17242:				; CODE XREF: sub_171E8+1Dj
					; sub_171E8+2Dj ...
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		sub	ax, ax
		push	ax
		mov	al, [bp+arg_0]
		cbw
		push	ax
		push	cs
		call	near ptr sub_17A78
		add	sp, 8
		mov	al, [bp+arg_0]
		cbw
		sar	ax, 1
		sar	ax, 1
		and	ax, 3
		push	ax
		push	cs
		call	near ptr sub_187B2
		add	sp, 2
		mov	ax, 1
		push	ax
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		push	cs
		call	near ptr sub_17FD6
		add	sp, 6
		sub	ax, ax
		push	ax
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		mov	ax, 0A6EAh
		push	ax
		mov	ax, 8E76h
		push	ax
		push	cs
		call	near ptr sub_14DA2
		add	sp, 0Ah
		mov	ax, word_44612
		sub	dx, dx
		add	word_445D0, ax
		adc	word_445D2, dx
		mov	al, byte_448EF
		mov	[bp+var_1C], al
		mov	ax, word_44786
		mov	[bp+var_2], ax
		lea	ax, [bp+var_1E]
		push	ax
		lea	ax, [bp+var_2]
		push	ax
		push	cs
		call	near ptr sub_17816
		add	sp, 4
		cbw
		mov	si, ax
		or	si, si
		jnz	short loc_172CB
		jmp	loc_173B3
; ---------------------------------------------------------------------------

loc_172CB:				; CODE XREF: sub_171E8+DEj
		cmp	[bp+var_1E], 0FFFEh
		jnz	short loc_172D8
		mov	byte_448EF, 1
		jmp	short loc_172E4
; ---------------------------------------------------------------------------

loc_172D8:				; CODE XREF: sub_171E8+E7j
		cmp	byte_448EF, 1
		jnz	short loc_172E9
		mov	byte_448EF, 0

loc_172E4:				; CODE XREF: sub_171E8+EEj
		mov	byte_448F0, 0

loc_172E9:				; CODE XREF: sub_171E8+F5j
		cmp	byte_448EF, 0
		jz	short loc_172F3
		jmp	loc_173AD
; ---------------------------------------------------------------------------

loc_172F3:				; CODE XREF: sub_171E8+106j
		cmp	[bp+var_2], 0
		jnz	short loc_17308
		cmp	word_44788, 0
		jz	short loc_17308
		inc	byte_446B3
		jmp	short loc_1737B
; ---------------------------------------------------------------------------
		align 4

loc_17308:				; CODE XREF: sub_171E8+10Fj
					; sub_171E8+116j
		cmp	[bp+var_1E], 0
		jl	short loc_17322
		cmp	[bp+var_1E], 3
		jge	short loc_17322
		mov	byte_448F0, 0
		mov	ax, [bp+var_2]
		mov	word_44786, ax
		jmp	loc_173AD
; ---------------------------------------------------------------------------

loc_17322:				; CODE XREF: sub_171E8+124j
					; sub_171E8+12Aj
		cmp	[bp+var_1E], 0FFFFh
		jz	short loc_1732E
		cmp	[bp+var_1E], 3
		jle	short loc_173AD

loc_1732E:				; CODE XREF: sub_171E8+13Ej
		mov	di, word_44788
		shl	di, 1
		les	bx, dword_42D22
		mov	ax, [bp+var_2]
		cmp	es:[bx+di], ax
		jz	short loc_17349
		les	bx, dword_438E8
		cmp	es:[bx+di], ax
		jnz	short loc_17350

loc_17349:				; CODE XREF: sub_171E8+156j
		inc	byte_448F0
		jmp	short loc_17374
; ---------------------------------------------------------------------------
		align 2

loc_17350:				; CODE XREF: sub_171E8+15Fj
		mov	di, [bp+var_2]
		shl	di, 1
		les	bx, dword_42D22
		mov	ax, word_44788
		cmp	es:[bx+di], ax
		jz	short loc_1736A
		les	bx, dword_438E8
		cmp	es:[bx+di], ax
		jnz	short loc_1736F

loc_1736A:				; CODE XREF: sub_171E8+177j
		mov	byte_448EF, 2

loc_1736F:				; CODE XREF: sub_171E8+180j
		mov	byte_448F0, 1

loc_17374:				; CODE XREF: sub_171E8+165j
		cmp	byte_448F0, 3
		jl	short loc_173AD

loc_1737B:				; CODE XREF: sub_171E8+11Cj
		mov	ax, [bp+var_2]
		mov	word_44786, ax
		mov	byte_448F0, 0
		cmp	[bp+var_1E], 0
		jle	short loc_173AD
		mov	ax, [bp+var_1E]
		imul	word_449D0
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		mov	word_461CA, ax
		mov	al, byte ptr word_449D0
		shl	al, 1
		shl	al, 1
		mov	byte_4499F, al
		mov	ax, word_461CA
		add	word_445DE, ax

loc_173AD:				; CODE XREF: sub_171E8+108j
					; sub_171E8+137j ...
		mov	ax, [bp+var_2]
		mov	word_44788, ax

loc_173B3:				; CODE XREF: sub_171E8+E0j
		mov	byte_448F1, 0
		cmp	byte_448EF, 1
		jnz	short loc_173C2
		jmp	loc_17810
; ---------------------------------------------------------------------------

loc_173C2:				; CODE XREF: sub_171E8+1D5j
		mov	ax, 1
		push	ax
		push	word_445FE
		push	word_44600
		push	word_44602
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_20], ax
		cmp	byte_448EF, 2
		jnz	short loc_173F6
		cmp	byte_446AF, 0
		jnz	short loc_173F0
		mov	byte_448F1, 3

loc_173F0:				; CODE XREF: sub_171E8+201j
		mov	ax, word_44788
		jmp	loc_174C9
; ---------------------------------------------------------------------------

loc_173F6:				; CODE XREF: sub_171E8+1FAj
		cmp	word_44630, 0FFFFh
		jnz	short loc_17402

loc_173FD:				; CODE XREF: sub_171E8+24Fj
		sub	si, si
		jmp	loc_174B3
; ---------------------------------------------------------------------------

loc_17402:				; CODE XREF: sub_171E8+213j
		cmp	[bp+var_1C], 0
		jz	short loc_1740F
		cmp	byte_448EF, 0
		jz	short loc_17431

loc_1740F:				; CODE XREF: sub_171E8+21Ej
		mov	ax, word_44786
		cmp	word_44630, ax
		jz	short loc_1743A
		mov	di, ax
		shl	di, 1
		les	bx, dword_42D22
		mov	ax, word_44630
		cmp	es:[bx+di], ax
		jz	short loc_1743A
		les	bx, dword_438E8
		cmp	es:[bx+di], ax
		jz	short loc_1743A

loc_17431:				; CODE XREF: sub_171E8+225j
		mov	word_44630, 0FFFFh
		jmp	short loc_173FD
; ---------------------------------------------------------------------------
		align 2

loc_1743A:				; CODE XREF: sub_171E8+22Ej
					; sub_171E8+23Ej ...
		mov	ax, word_4468A
		mov	cx, word_445E6
		mov	bx, word_445E8
		mov	dx, cx
		mov	cl, 6

loc_17449:				; CODE XREF: sub_171E8+267j
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_17449
		sub	ax, dx
		mov	[bp+var_32], ax
		cmp	word_4468C, 0FFFFh
		jz	short loc_1747C
		mov	ax, word_4468C
		mov	cx, word_445EA
		mov	bx, word_445EC
		mov	dx, cx
		mov	cl, 6

loc_1746C:				; CODE XREF: sub_171E8+28Aj
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_1746C
		sub	ax, dx
		mov	[bp+var_30], ax
		jmp	short loc_17481
; ---------------------------------------------------------------------------
		align 2

loc_1747C:				; CODE XREF: sub_171E8+273j
		mov	[bp+var_30], 0

loc_17481:				; CODE XREF: sub_171E8+291j
		mov	ax, word_4468E
		mov	cx, word_445EE
		mov	bx, word_445F0
		mov	dx, cx
		mov	cl, 6

loc_17490:				; CODE XREF: sub_171E8+2AEj
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_17490
		sub	ax, dx
		mov	[bp+var_2E], ax
		lea	ax, [bp+var_38]
		push	ax
		push	[bp+var_20]
		lea	ax, [bp+var_32]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	si, [bp+var_34]

loc_174B3:				; CODE XREF: sub_171E8+217j
		cmp	si, 113h
		jl	short loc_174BC
		jmp	loc_17699
; ---------------------------------------------------------------------------

loc_174BC:				; CODE XREF: sub_171E8+2CFj
		cmp	word_44630, 0FFFFh
		jz	short loc_174C6
		jmp	loc_1764C
; ---------------------------------------------------------------------------

loc_174C6:				; CODE XREF: sub_171E8+2D9j
		mov	ax, word_44786

loc_174C9:				; CODE XREF: sub_171E8+20Bj
		mov	[bp+var_2], ax
		mov	bx, ax
		shl	bx, 1
		les	di, dword_438E8
		cmp	word ptr es:[bx+di], 0FFFFh
		jz	short loc_174DD
		jmp	loc_17771
; ---------------------------------------------------------------------------

loc_174DD:				; CODE XREF: sub_171E8+2F0j
		mov	[bp+var_2A], 0
		mov	[bp+var_2C], 0

loc_174E5:				; CODE XREF: sub_171E8+3BAj
		sub	ax, ax
		push	ax
		mov	al, [bp+var_2C]
		sub	ah, ah
		push	ax
		mov	ax, 8F1Ah
		push	ax
		push	[bp+var_2]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		mov	[bp+var_2A], al
		push	si
		lea	di, [bp+var_28]
		mov	si, 8F1Ah
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_17515:				; CODE XREF: sub_171E8+333j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_17515
		sub	[bp+var_28], ax
		cmp	[bp+var_26], 0FFFFh
		jnz	short loc_1753E
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_1752F:				; CODE XREF: sub_171E8+34Dj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1752F
		neg	ax
		mov	[bp+var_26], ax
		jmp	short loc_17552
; ---------------------------------------------------------------------------

loc_1753E:				; CODE XREF: sub_171E8+33Cj
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_17547:				; CODE XREF: sub_171E8+365j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_17547
		sub	[bp+var_26], ax

loc_17552:				; CODE XREF: sub_171E8+354j
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_1755B:				; CODE XREF: sub_171E8+379j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1755B
		sub	[bp+var_24], ax
		lea	ax, [bp+var_38]
		push	ax
		push	[bp+var_20]
		lea	ax, [bp+var_28]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_2C], 0
		jz	short loc_1758D
		mov	ax, [bp+var_2E]
		cmp	[bp+var_34], ax
		jge	short loc_17599
		cmp	[bp+var_34], 0
		jle	short loc_17599

loc_1758D:				; CODE XREF: sub_171E8+395j
		mov	al, [bp+var_2C]
		mov	[bp+var_3A], al
		mov	ax, [bp+var_34]
		mov	[bp+var_2E], ax

loc_17599:				; CODE XREF: sub_171E8+39Dj
					; sub_171E8+3A3j
		inc	[bp+var_2C]
		cmp	[bp+var_2A], 0
		jnz	short loc_175A5
		jmp	loc_174E5
; ---------------------------------------------------------------------------

loc_175A5:				; CODE XREF: sub_171E8+3B8j
		cmp	byte_448EF, 2
		jz	short loc_175AF
		jmp	loc_17640
; ---------------------------------------------------------------------------

loc_175AF:				; CODE XREF: sub_171E8+3C2j
		cmp	[bp+var_3A], 0
		jnz	short loc_175D0
		sub	ax, ax
		push	ax
		push	ax
		lea	ax, [bp+var_52]
		push	ax
		push	[bp+var_2]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		sub	ax, ax
		push	ax
		mov	ax, 1
		jmp	short loc_175F0
; ---------------------------------------------------------------------------
		align 2

loc_175D0:				; CODE XREF: sub_171E8+3CBj
		sub	ax, ax
		push	ax
		mov	al, [bp+var_3A]
		dec	al
		cbw
		push	ax
		lea	ax, [bp+var_52]
		push	ax
		push	[bp+var_2]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		sub	ax, ax
		push	ax
		mov	al, [bp+var_3A]
		sub	ah, ah

loc_175F0:				; CODE XREF: sub_171E8+3E5j
		push	ax
		lea	ax, [bp+var_1A]
		push	ax
		push	[bp+var_2]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		mov	ax, [bp+var_16]
		sub	ax, [bp+var_4E]
		push	ax
		mov	ax, [bp+var_52]
		sub	ax, [bp+var_1A]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	si, ax
		and	si, 3FFh
		mov	ax, word_445FE
		sub	ax, si
		and	ah, 3
		mov	si, ax
		cmp	si, 380h
		jg	short loc_17631
		cmp	si, 80h	; 'Ä'
		jge	short loc_1764C

loc_17631:				; CODE XREF: sub_171E8+441j
		mov	byte_448EF, 0
		mov	byte_448F0, 1
		mov	ax, [bp+var_2]
		jmp	short loc_17643
; ---------------------------------------------------------------------------

loc_17640:				; CODE XREF: sub_171E8+3C4j
		mov	ax, word_44786

loc_17643:				; CODE XREF: sub_171E8+456j
		mov	word_44630, ax
		mov	al, [bp+var_3A]
		mov	byte_446B4, al

loc_1764C:				; CODE XREF: sub_171E8+2DBj
					; sub_171E8+447j
		sub	ax, ax
		push	ax
		mov	al, byte_446B4
		inc	byte_446B4
		sub	ah, ah
		push	ax
		mov	ax, 8F1Ah
		push	ax
		push	word_44630
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		or	al, al
		jz	short loc_17699
		mov	bx, word_44786
		shl	bx, 1
		les	di, dword_438E8
		cmp	word ptr es:[bx+di], 0FFFFh
		jz	short loc_17684
		mov	word_44630, 0FFFFh
		jmp	short loc_17694
; ---------------------------------------------------------------------------

loc_17684:				; CODE XREF: sub_171E8+492j
		mov	bx, word_44786
		shl	bx, 1
		les	di, dword_42D22
		mov	ax, es:[bx+di]
		mov	word_44630, ax

loc_17694:				; CODE XREF: sub_171E8+49Aj
		mov	byte_446B4, 0

loc_17699:				; CODE XREF: sub_171E8+2D1j
					; sub_171E8+482j
		push	si
		lea	di, [bp+var_28]
		mov	si, 8F1Ah
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		cmp	word_44630, 0FFFFh
		jnz	short loc_176B0
		jmp	loc_17771
; ---------------------------------------------------------------------------

loc_176B0:				; CODE XREF: sub_171E8+4C3j
		cmp	byte_448EF, 0
		jz	short loc_176BA
		jmp	loc_17771
; ---------------------------------------------------------------------------

loc_176BA:				; CODE XREF: sub_171E8+4CDj
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_176C3:				; CODE XREF: sub_171E8+4E1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_176C3
		sub	[bp+var_28], ax
		cmp	[bp+var_26], 0FFFFh
		jnz	short loc_176DC
		mov	[bp+var_26], 0
		jmp	short loc_176F0
; ---------------------------------------------------------------------------
		align 2

loc_176DC:				; CODE XREF: sub_171E8+4EAj
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_176E5:				; CODE XREF: sub_171E8+503j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_176E5
		sub	[bp+var_26], ax

loc_176F0:				; CODE XREF: sub_171E8+4F1j
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_176F9:				; CODE XREF: sub_171E8+517j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_176F9
		sub	[bp+var_24], ax
		mov	ax, 1
		push	ax
		push	word_445FE
		push	word_44600
		push	word_44602
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_20], ax
		lea	ax, [bp+var_38]
		push	ax
		push	[bp+var_20]
		lea	ax, [bp+var_28]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_34]
		mov	ax, [bp+var_38]
		neg	ax
		push	ax
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		mov	word_4462E, ax
		cmp	byte_446AF, 0
		jnz	short loc_17771
		add	ax, 80h	; 'Ä'
		and	ah, 3
		mov	cl, 8
		shr	ax, cl
		cmp	ax, 1
		jz	short loc_1776C
		cmp	ax, 3
		jz	short loc_1779E

loc_17764:				; CODE XREF: sub_171E8+5BBj
		mov	byte_448F1, 0
		jmp	short loc_17771
; ---------------------------------------------------------------------------
		align 2

loc_1776C:				; CODE XREF: sub_171E8+575j
		mov	byte_448F1, 1

loc_17771:				; CODE XREF: sub_171E8+2F2j
					; sub_171E8+4C5j ...
		cmp	byte_446B3, 0
		jnz	short loc_1777B
		jmp	loc_17810
; ---------------------------------------------------------------------------

loc_1777B:				; CODE XREF: sub_171E8+58Ej
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		mov	cx, word_445EE
		mov	bx, word_445F0
		mov	dx, cx
		mov	cl, 6

loc_17793:				; CODE XREF: sub_171E8+5B3j
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jz	short loc_177AC
		jmp	short loc_17793
; ---------------------------------------------------------------------------
		align 2

loc_1779E:				; CODE XREF: sub_171E8+57Aj
		cmp	word_4469C, 0
		jnz	short loc_17764
		mov	byte_448F1, 2
		jmp	short loc_17771
; ---------------------------------------------------------------------------

loc_177AC:				; CODE XREF: sub_171E8+5B1j
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	si, ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	cx, word_445E6
		mov	bx, word_445E8
		mov	dx, cx
		mov	cl, 6

loc_177DE:				; CODE XREF: sub_171E8+5FCj
		sar	bx, 1
		rcr	dx, 1
		dec	cl
		jnz	short loc_177DE
		sub	ax, dx
		push	ax
		push	word_45516
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	si, ax
		jns	short loc_17810
		sub	ax, ax
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_195E6
		add	sp, 4

loc_17810:				; CODE XREF: sub_171E8+57j
					; sub_171E8+1D7j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_171E8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17816	proc far		; CODE XREF: sub_171E8+D3p

var_5A4		= word ptr -5A4h
var_5A2		= byte ptr -5A2h
var_21A		= word ptr -21Ah
var_218		= byte ptr -218h
var_116		= byte ptr -116h
var_114		= byte ptr -114h
var_110		= word ptr -110h
var_E		= byte ptr -0Eh
var_C		= byte ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= byte ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 5A4h
		push	di
		push	si
		mov	al, byte ptr word_445E8
		mov	[bp+var_4], al
		mov	al, 1Dh
		sub	al, byte ptr word_445F0
		mov	[bp+var_A], al
		mov	al, [bp+var_4]
		cbw
		mov	[bp+var_5A4], ax
		mov	ax, word_4478A
		cmp	[bp+var_5A4], ax
		jz	short loc_17848
		mov	ax, word_4478C
		cmp	[bp+var_5A4], ax
		jnz	short loc_17872

loc_17848:				; CODE XREF: sub_17816+27j
		mov	al, [bp+var_A]
		cbw
		mov	[bp+var_5A4], ax
		mov	ax, word_4478E
		cmp	[bp+var_5A4], ax
		jz	short loc_17862
		mov	ax, word_44790
		cmp	[bp+var_5A4], ax
		jnz	short loc_17872

loc_17862:				; CODE XREF: sub_17816+41j
		mov	bx, [bp+arg_2]
		mov	word ptr [bx], 0
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_17872:				; CODE XREF: sub_17816+30j
					; sub_17816+4Aj
		cmp	[bp+var_4], 0
		jge	short loc_1787B
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_1787B:				; CODE XREF: sub_17816+60j
		cmp	[bp+var_4], 1Dh
		jle	short loc_17884
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_17884:				; CODE XREF: sub_17816+69j
		cmp	[bp+var_A], 0
		jge	short loc_1788D
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_1788D:				; CODE XREF: sub_17816+72j
		cmp	[bp+var_A], 1Dh
		jle	short loc_17896
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_17896:				; CODE XREF: sub_17816+7Bj
		mov	[bp+var_6], 0
		mov	[bp+var_21A], 0
		sub	di, di
		sub	si, si
		jmp	short loc_178AE
; ---------------------------------------------------------------------------
		align 2

loc_178A8:				; CODE XREF: sub_17816+9Cj
		mov	[bp+si+var_5A2], 0
		inc	si

loc_178AE:				; CODE XREF: sub_17816+8Fj
		cmp	word_45DD0, si
		jg	short loc_178A8
		mov	bx, [bp+arg_0]
		mov	si, [bx]

loc_178B9:				; CODE XREF: sub_17816+E1j
					; sub_17816+25Ej
		mov	bx, si
		shl	bx, 1
		add	bx, word ptr dword_42D22
		mov	es, word ptr dword_42D22+2
		mov	ax, es:[bx]
		mov	[bp+var_2], ax
		mov	bx, ax
		add	bx, bp
		cmp	byte ptr [bx-5A2h], 0
		jz	short loc_17938
		cmp	[bp+var_21A], 0
		jz	short loc_178FA
		dec	[bp+var_21A]
		mov	ax, [bp+var_21A]
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_5A4], ax
		mov	bx, ax
		mov	si, [bx-216h]
		mov	di, [bx-10Eh]
		jmp	short loc_178B9
; ---------------------------------------------------------------------------
		align 2

loc_178FA:				; CODE XREF: sub_17816+C5j
		cmp	[bp+var_6], 0
		jz	short loc_1791A
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_110]
		mov	[bx], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bp+var_6]
		mov	[bx], ax

loc_17911:				; CODE XREF: sub_17816+11Fj
					; sub_17816+255j
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_1791A:				; CODE XREF: sub_17816+E8j
		mov	al, [bp+var_4]
		cbw
		mov	word_4478A, ax
		mov	word_4478C, ax
		mov	al, [bp+var_A]
		cbw
		mov	word_4478E, ax
		mov	word_44790, ax

loc_1792E:				; CODE XREF: sub_17816+62j
					; sub_17816+6Bj ...
		mov	bx, [bp+arg_2]
		mov	word ptr [bx], 0FFFEh
		jmp	short loc_17911
; ---------------------------------------------------------------------------
		align 2

loc_17938:				; CODE XREF: sub_17816+BEj
		mov	bx, [bp+var_2]
		add	bx, bp
		mov	byte ptr [bx-5A2h], 1
		mov	bx, [bp+var_2]
		add	bx, word ptr dword_459DA
		mov	es, word ptr dword_459DA+2
		mov	al, es:[bx]
		mov	[bp+var_E], al
		mov	bx, [bp+var_2]
		add	bx, word ptr dword_449D4
		mov	es, word ptr dword_449D4+2
		mov	al, es:[bx]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		mov	[bp+var_116], al
		test	[bp+var_116], 1
		jz	short loc_17986
		mov	al, [bp+var_E]
		inc	al
		jmp	short loc_17989
; ---------------------------------------------------------------------------
		align 2

loc_17986:				; CODE XREF: sub_17816+166j
		mov	al, [bp+var_E]

loc_17989:				; CODE XREF: sub_17816+16Dj
		mov	[bp+var_218], al
		mov	bx, [bp+var_2]
		add	bx, word ptr dword_4563C
		mov	es, word ptr dword_4563C+2
		mov	al, es:[bx]
		mov	[bp+var_C], al
		test	[bp+var_116], 2
		jz	short loc_179AA
		inc	al
		jmp	short loc_179AD
; ---------------------------------------------------------------------------
		align 2

loc_179AA:				; CODE XREF: sub_17816+18Dj
		mov	al, [bp+var_C]

loc_179AD:				; CODE XREF: sub_17816+191j
		mov	[bp+var_114], al
		mov	al, [bp+var_4]
		cmp	[bp+var_C], al
		jz	short loc_179BF
		cmp	[bp+var_114], al
		jnz	short loc_17A19

loc_179BF:				; CODE XREF: sub_17816+1A1j
		mov	al, [bp+var_A]
		cmp	[bp+var_E], al
		jz	short loc_179CD
		cmp	[bp+var_218], al
		jnz	short loc_17A19

loc_179CD:				; CODE XREF: sub_17816+1AFj
		mov	bx, si
		shl	bx, 1
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2
		cmp	word ptr es:[bx], 0FFFFh
		jz	short loc_179E2
		mov	[bp+var_2], si

loc_179E2:				; CODE XREF: sub_17816+1C7j
		mov	al, [bp+var_C]
		cbw
		mov	word_4478A, ax
		mov	al, [bp+var_114]
		cbw
		mov	word_4478C, ax
		mov	al, [bp+var_E]
		cbw
		mov	word_4478E, ax
		mov	al, [bp+var_218]
		cbw
		mov	word_44790, ax
		or	di, di
		jle	short loc_17A5E
		cmp	[bp+var_6], 0
		jz	short loc_17A0F
		cmp	[bp+var_6], di
		jle	short loc_17A19

loc_17A0F:				; CODE XREF: sub_17816+1F2j
		mov	ax, [bp+var_2]
		mov	[bp+var_110], ax
		mov	[bp+var_6], di

loc_17A19:				; CODE XREF: sub_17816+1A7j
					; sub_17816+1B5j ...
		mov	bx, si
		shl	bx, 1
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2
		mov	ax, es:[bx]
		mov	[bp+var_8], ax
		cmp	ax, 0FFFFh
		jz	short loc_17A4F
		mov	bx, [bp+var_21A]
		shl	bx, 1
		add	bx, bp
		mov	[bx-10Eh], di
		mov	bx, [bp+var_21A]
		inc	[bp+var_21A]
		shl	bx, 1
		add	bx, bp
		mov	ax, [bp+var_8]
		mov	[bx-216h], ax

loc_17A4F:				; CODE XREF: sub_17816+218j
		cmp	[bp+var_2], 0
		jz	short loc_17A6E
		cmp	di, 0FFFFh
		jz	short loc_17A71
		inc	di
		jmp	short loc_17A71
; ---------------------------------------------------------------------------
		align 2

loc_17A5E:				; CODE XREF: sub_17816+1ECj
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_2]
		mov	[bx], ax
		mov	bx, [bp+arg_2]
		mov	[bx], di
		jmp	loc_17911
; ---------------------------------------------------------------------------

loc_17A6E:				; CODE XREF: sub_17816+23Dj
		mov	di, 0FFFFh

loc_17A71:				; CODE XREF: sub_17816+242j
					; sub_17816+245j
		mov	si, [bp+var_2]
		jmp	loc_178B9
sub_17816	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17A78	proc far		; CODE XREF: sub_11C42+69BP
					; sub_14712+4FAp ...

var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= byte ptr  6
arg_2		= byte ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		cmp	word_449D0, 14h
		jnz	short loc_17A8E
		mov	[bp+var_2], 6
		jmp	short loc_17A93
; ---------------------------------------------------------------------------

loc_17A8E:				; CODE XREF: sub_17A78+Dj
		mov	[bp+var_2], 0Ch

loc_17A93:				; CODE XREF: sub_17A78+14j
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0C6h], 0
		jz	short loc_17AA1
		dec	byte ptr [bx+0C6h]

loc_17AA1:				; CODE XREF: sub_17A78+23j
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+2Ch]
		sub	ax, [si+2Eh]
		mov	[bx+28h], ax
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+2Ch]
		mov	[bx+2Eh], ax
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+22h]
		mov	[bx+24h], ax
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0CCh], 0
		jnz	short loc_17AE6
		cmp	byte ptr [bx+0CAh], 0
		jnz	short loc_17AE6
		test	[bp+arg_0], 10h
		jnz	short loc_17B0F
		test	[bp+arg_0], 20h
		jnz	short loc_17B2E
		jmp	loc_17B86
; ---------------------------------------------------------------------------
		align 2

loc_17AE6:				; CODE XREF: sub_17A78+55j
					; sub_17A78+5Cj
		cmp	byte ptr [bx+0BEh], 0
		jnz	short loc_17AF0
		jmp	loc_17B86
; ---------------------------------------------------------------------------

loc_17AF0:				; CODE XREF: sub_17A78+73j
		cmp	byte ptr [bx+0CAh], 0
		jz	short loc_17AFA
		jmp	loc_17B86
; ---------------------------------------------------------------------------

loc_17AFA:				; CODE XREF: sub_17A78+7Dj
		cmp	byte ptr [bx+0C0h], 0
		jnz	short loc_17B04
		jmp	loc_17B86
; ---------------------------------------------------------------------------

loc_17B04:				; CODE XREF: sub_17A78+87j
		mov	si, [bp+arg_6]
		mov	ax, [si+0Ah]
		cmp	[bx+22h], ax
		jbe	short loc_17B20

loc_17B0F:				; CODE XREF: sub_17A78+62j
		mov	si, [bp+arg_6]
		mov	al, [si]
		cmp	[bx+0BEh], al
		jz	short loc_17B86
		inc	byte ptr [bx+0BEh]
		jmp	short loc_17B39
; ---------------------------------------------------------------------------

loc_17B20:				; CODE XREF: sub_17A78+95j
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_6]
		mov	ax, [si+8]
		cmp	[bx+22h], ax
		jnb	short loc_17B86

loc_17B2E:				; CODE XREF: sub_17A78+68j
		cmp	byte ptr [bx+0BEh], 1
		jle	short loc_17B86
		dec	byte ptr [bx+0BEh]

loc_17B39:				; CODE XREF: sub_17A78+A6j
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0CAh], 1
		mov	al, byte ptr word_449D0
		cbw
		sar	ax, 1
		add	al, byte ptr word_449D0
		mov	bx, [bp+arg_4]
		mov	[bx+0CBh], al
		mov	bx, [bp+arg_4]
		mov	al, [bx+0BEh]
		cbw
		mov	si, ax
		shl	si, 1
		shl	si, 1
		mov	bx, [bp+arg_6]
		mov	ax, [bx+si+1Ch]
		mov	bx, [bp+arg_4]
		mov	[bx+3Ah], ax
		mov	bx, [bp+arg_4]
		mov	al, [bx+0BEh]
		cbw
		mov	si, ax
		shl	si, 1
		shl	si, 1
		mov	bx, [bp+arg_6]
		mov	ax, [bx+si+1Eh]
		mov	bx, [bp+arg_4]
		mov	[bx+3Ch], ax

loc_17B86:				; CODE XREF: sub_17A78+6Aj
					; sub_17A78+75j ...
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0CAh], 0
		jnz	short loc_17B93
		jmp	loc_17C9E
; ---------------------------------------------------------------------------

loc_17B93:				; CODE XREF: sub_17A78+116j
		mov	si, bx
		mov	ax, [si+3Ah]
		cmp	[bx+34h], ax
		jnz	short loc_17C0C
		mov	ax, [bx+3Ch]
		sub	ax, [bx+38h]
		mov	[bp+var_4], ax
		or	ax, ax
		jnz	short loc_17BDA
		mov	byte ptr [bx+0CAh], 0
		mov	bx, [bp+arg_4]
		mov	al, [bx+0BEh]
		cbw
		mov	si, ax
		shl	si, 1
		mov	bx, [bp+arg_6]
		mov	ax, [bx+si+0Eh]
		mov	bx, [bp+arg_4]
		mov	[bx+30h], ax
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+30h]
		mov	cl, 8
		shr	ax, cl
		mov	[bx+32h], ax
		jmp	loc_17CAC
; ---------------------------------------------------------------------------
		align 2

loc_17BDA:				; CODE XREF: sub_17A78+130j
		push	[bp+var_4]	; int
		call	_abs
		add	sp, 2
		cmp	ax, [bp+var_2]
		jg	short loc_17BF6
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+3Ch]
		jmp	loc_17C84
; ---------------------------------------------------------------------------
		align 2

loc_17BF6:				; CODE XREF: sub_17A78+170j
		cmp	[bp+var_4], 0
		jle	short loc_17BFF
		jmp	loc_17C93
; ---------------------------------------------------------------------------

loc_17BFF:				; CODE XREF: sub_17A78+182j
					; sub_17A78+218j
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_2]
		sub	[bx+38h], ax
		jmp	loc_17CAC
; ---------------------------------------------------------------------------
		align 2

loc_17C0C:				; CODE XREF: sub_17A78+123j
		mov	bx, [bp+arg_6]
		mov	si, [bp+arg_4]
		mov	ax, [si+38h]
		cmp	[bx+1Eh], ax
		jnz	short loc_17C5E
		mov	bx, si
		mov	ax, [bx+3Ah]
		sub	ax, [bx+34h]
		mov	[bp+var_4], ax
		push	ax		; int
		call	_abs
		add	sp, 2
		cmp	ax, [bp+var_2]
		jg	short loc_17C40
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+3Ah]
		mov	[bx+34h], ax
		jmp	short loc_17CAC
; ---------------------------------------------------------------------------

loc_17C40:				; CODE XREF: sub_17A78+1B9j
		cmp	[bp+var_4], 0
		jle	short loc_17C52
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_2]
		add	[bx+34h], ax
		jmp	short loc_17CAC
; ---------------------------------------------------------------------------
		align 2

loc_17C52:				; CODE XREF: sub_17A78+1CCj
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_2]
		sub	[bx+34h], ax
		jmp	short loc_17CAC
; ---------------------------------------------------------------------------
		align 2

loc_17C5E:				; CODE XREF: sub_17A78+1A0j
		mov	bx, [bp+arg_6]
		mov	ax, [bx+1Eh]
		mov	bx, [bp+arg_4]
		sub	ax, [bx+38h]
		mov	[bp+var_4], ax
		push	ax		; int
		call	_abs
		add	sp, 2
		cmp	ax, [bp+var_2]
		jg	short loc_17C8A
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_6]
		mov	ax, [si+1Eh]

loc_17C84:				; CODE XREF: sub_17A78+17Aj
		mov	[bx+38h], ax
		jmp	short loc_17CAC
; ---------------------------------------------------------------------------
		align 2

loc_17C8A:				; CODE XREF: sub_17A78+201j
		cmp	[bp+var_4], 0
		jg	short loc_17C93
		jmp	loc_17BFF
; ---------------------------------------------------------------------------

loc_17C93:				; CODE XREF: sub_17A78+184j
					; sub_17A78+216j
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_2]
		add	[bx+38h], ax
		jmp	short loc_17CAC
; ---------------------------------------------------------------------------

loc_17C9E:				; CODE XREF: sub_17A78+118j
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0CBh], 0
		jz	short loc_17CAC
		dec	byte ptr [bx+0CBh]

loc_17CAC:				; CODE XREF: sub_17A78+15Ej
					; sub_17A78+190j ...
		mov	bx, [bp+arg_4]
		mov	ax, [bx+2Ah]
		mov	[bp+var_6], ax
		mov	si, ax
		mov	cl, 0Ah
		shr	si, cl
		shl	si, 1
		mov	bx, [bp+arg_6]
		les	bx, [bx+304h]
		mov	di, [bp+arg_4]
		mov	ax, [di+1Eh]
		sub	ax, es:[bx+si]
		mov	[bp+var_8], ax
		mov	bx, di
		mov	si, [bp+arg_6]
		mov	ax, [si+0Ch]
		cmp	[bx+22h], ax
		jbe	short loc_17CEA
		dec	ax
		mov	[bx+22h], ax

loc_17CE1:				; CODE XREF: sub_17A78+2B4j
		mov	bx, [bp+arg_6]
		mov	ax, [bx+4]
		jmp	short loc_17D36
; ---------------------------------------------------------------------------
		align 2

loc_17CEA:				; CODE XREF: sub_17A78+263j
		mov	al, [bp+arg_0]
		and	ax, 3
		cmp	ax, 1
		jnz	short loc_17CF8
		jmp	loc_17D82
; ---------------------------------------------------------------------------

loc_17CF8:				; CODE XREF: sub_17A78+27Bj
		cmp	ax, 2
		jz	short loc_17D10
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BDh], 0
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BCh], 0
		jmp	short loc_17D39
; ---------------------------------------------------------------------------
		align 2

loc_17D10:				; CODE XREF: sub_17A78+283j
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BDh], 0
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0C6h], 0
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BCh], 1
		cmp	[bp+arg_2], 0
		jz	short loc_17CE1
		mov	bx, [bp+arg_6]
		mov	ax, [bx+4]
		shl	ax, 1

loc_17D36:				; CODE XREF: sub_17A78+26Fj
		sub	[bp+var_8], ax

loc_17D39:				; CODE XREF: sub_17A78+295j
					; sub_17A78+337j ...
		cmp	word_449D0, 0Ah
		jnz	short loc_17D46
		mov	ax, [bp+var_8]
		add	[bp+var_8], ax

loc_17D46:				; CODE XREF: sub_17A78+2C6j
		cmp	[bp+var_8], 0
		jge	short loc_17D4F
		jmp	loc_17EE2
; ---------------------------------------------------------------------------

loc_17D4F:				; CODE XREF: sub_17A78+2D2j
		cmp	[bp+var_6], 8000h
		jb	short loc_17D59
		jmp	loc_17EC2
; ---------------------------------------------------------------------------

loc_17D59:				; CODE XREF: sub_17A78+2DCj
					; sub_17A78+474j
		mov	ax, [bp+var_8]
		add	[bp+var_6], ax

loc_17D5F:				; CODE XREF: sub_17A78+45Ej
					; sub_17A78+466j ...
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0C0h], 0
		jnz	short loc_17D6C
		jmp	loc_17F3C
; ---------------------------------------------------------------------------

loc_17D6C:				; CODE XREF: sub_17A78+2EFj
		mov	ax, [bx+2Ch]
		sub	ax, [bp+var_6]
		mov	[bp+var_4], ax
		or	ax, ax
		jl	short loc_17D7C
		jmp	loc_17EF8
; ---------------------------------------------------------------------------

loc_17D7C:				; CODE XREF: sub_17A78+2FFj
		neg	ax
		jmp	loc_17EFB
; ---------------------------------------------------------------------------
		align 2

loc_17D82:				; CODE XREF: sub_17A78+27Dj
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BCh], 0
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0BDh], 1
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0CAh], 0
		jz	short loc_17DBC
		mov	byte ptr [bx+0C6h], 0
		cmp	word_449D0, 0Ah
		jnz	short loc_17DB2
		mov	bx, [bp+arg_4]
		sub	word ptr [bx+22h], 50h ; 'P'
		jmp	short loc_17D39
; ---------------------------------------------------------------------------
		align 2

loc_17DB2:				; CODE XREF: sub_17A78+32Ej
		mov	bx, [bp+arg_4]
		sub	word ptr [bx+22h], 28h ; '('
		jmp	loc_17D39
; ---------------------------------------------------------------------------

loc_17DBC:				; CODE XREF: sub_17A78+322j
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0C0h], 0
		jnz	short loc_17DE6
		mov	si, [bp+arg_6]
		mov	ax, [si+0Ch]
		cmp	[bx+22h], ax
		jb	short loc_17DD4
		jmp	loc_17D39
; ---------------------------------------------------------------------------

loc_17DD4:				; CODE XREF: sub_17A78+357j
		cmp	[bp+var_6], 0FA00h
		jb	short loc_17DDE
		jmp	loc_17D39
; ---------------------------------------------------------------------------

loc_17DDE:				; CODE XREF: sub_17A78+361j
		add	byte ptr [bp+var_8+1], 3
		jmp	loc_17D39
; ---------------------------------------------------------------------------
		align 2

loc_17DE6:				; CODE XREF: sub_17A78+34Cj
		cmp	byte ptr [bx+0BEh], 1
		jg	short loc_17DFC
		cmp	word ptr [bx+22h], 0A28h
		jge	short loc_17DFC
		mov	bx, [bp+arg_6]
		mov	al, [bx+3Ah]
		jmp	short loc_17E0C
; ---------------------------------------------------------------------------

loc_17DFC:				; CODE XREF: sub_17A78+373j
					; sub_17A78+37Aj
		mov	bx, [bp+arg_4]
		mov	si, [bx+22h]
		mov	cl, 7
		shr	si, cl
		mov	bx, [bp+arg_6]
		mov	al, [bx+si+3Bh]

loc_17E0C:				; CODE XREF: sub_17A78+382j
		mov	[bp+var_A], al
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0C6h], 0
		jz	short loc_17E34
		cmp	word ptr [bx+22h], 1388h
		jge	short loc_17E34
		mov	bx, [bp+arg_6]
		mov	al, [bx+3Ah]
		sub	ah, ah
		mov	cl, [bp+var_A]
		sub	ch, ch
		add	ax, cx
		shr	ax, 1
		mov	[bp+var_A], al

loc_17E34:				; CODE XREF: sub_17A78+39Fj
					; sub_17A78+3A6j
		mov	al, [bp+var_A]
		sub	ah, ah
		mov	cx, ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+32h]
		mul	cx
		mov	cl, 4
		shr	ax, cl
		add	[bp+var_8], ax
		mov	bx, [bp+arg_6]
		sub	ax, ax
		push	ax
		push	word ptr [bx+2]
		mov	ax, 19h
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_8]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFuldiv
		sar	ax, 1
		mov	[bp+var_8], ax
		cmp	[bp+arg_2], 0
		jz	short loc_17EAD
		mov	al, byte_44D50
		sub	ah, ah
		sub	ax, 0C8h ; '»'
		neg	ax
		shr	ax, 1
		mov	[bp+var_A], al
		or	al, al
		jz	short loc_17EAD
		mov	ax, 0C8h ; '»'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_8]
		cwd
		push	dx
		push	ax
		mov	al, [bp+var_A]
		sub	ah, ah
		sub	cx, cx
		push	cx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		sub	[bp+var_8], ax

loc_17EAD:				; CODE XREF: sub_17A78+3FCj
					; sub_17A78+40Fj
		cmp	[bp+var_8], 128h
		jg	short loc_17EB7
		jmp	loc_17D39
; ---------------------------------------------------------------------------

loc_17EB7:				; CODE XREF: sub_17A78+43Aj
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0C6h], 5
		jmp	loc_17D39
; ---------------------------------------------------------------------------

loc_17EC2:				; CODE XREF: sub_17A78+2DEj
		mov	ax, [bp+var_8]
		add	[bp+var_6], ax
		cmp	[bp+var_6], 8000h
		jb	short loc_17ED9
		cmp	[bp+var_6], 0F500h
		ja	short loc_17ED9
		jmp	loc_17D5F
; ---------------------------------------------------------------------------

loc_17ED9:				; CODE XREF: sub_17A78+455j
					; sub_17A78+45Cj
		mov	[bp+var_6], 0F500h
		jmp	loc_17D5F
; ---------------------------------------------------------------------------
		align 2

loc_17EE2:				; CODE XREF: sub_17A78+2D4j
		mov	ax, [bp+var_8]
		neg	ax
		cmp	ax, [bp+var_6]
		ja	short loc_17EEF
		jmp	loc_17D59
; ---------------------------------------------------------------------------

loc_17EEF:				; CODE XREF: sub_17A78+472j
		mov	[bp+var_6], 0
		jmp	loc_17D5F
; ---------------------------------------------------------------------------
		align 2

loc_17EF8:				; CODE XREF: sub_17A78+301j
		mov	ax, [bp+var_4]

loc_17EFB:				; CODE XREF: sub_17A78+306j
		cmp	ax, 1400h
		jle	short loc_17F28
		mov	si, bx
		mov	ax, [si+2Ah]
		sub	dx, dx
		add	ax, [si+2Ch]
		adc	dx, dx
		shr	dx, 1
		rcr	ax, 1
		mov	[bx+2Ah], ax
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+2Ah]
		mov	[bx+2Ch], ax
		mov	bx, [bp+arg_4]
		mov	byte ptr [bx+0C6h], 5
		jmp	short loc_17F45
; ---------------------------------------------------------------------------

loc_17F28:				; CODE XREF: sub_17A78+486j
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_6]
		mov	[bx+2Ah], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_6]
		mov	[bx+2Ch], ax
		jmp	short loc_17F45
; ---------------------------------------------------------------------------

loc_17F3C:				; CODE XREF: sub_17A78+2F1j
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_6]
		mov	[bx+2Ah], ax

loc_17F45:				; CODE XREF: sub_17A78+4AEj
					; sub_17A78+4C2j
		mov	bx, [bp+arg_6]
		push	word ptr [bx+6]
		mov	bx, [bp+arg_4]
		mov	al, [bx+0CAh]
		cbw
		push	ax
		push	word ptr [bx+30h]
		push	word ptr [bx+2Ah]
		push	word ptr [bx+22h]
		call	sub_19DC6
		add	sp, 0Ah
		mov	bx, [bp+arg_4]
		mov	[bx+22h], ax
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx+0C1h], 0
		jz	short loc_17FBF
		mov	si, bx
		mov	ax, [si+22h]
		cmp	[bx+24h], ax
		jle	short loc_17FBF
		mov	ax, [bx+24h]
		sub	ax, [bx+22h]
		cmp	ax, 7D0h
		jle	short loc_17FA4
		mov	bx, [bp+arg_6]
		mov	al, [bx+3Ah]
		sub	ah, ah
		mov	bx, si
		mul	word ptr [bx+32h]
		cmp	ax, 2EE0h
		jle	short loc_17FBF
		mov	byte ptr [bx+0C6h], 1Eh
		jmp	short loc_17FBF
; ---------------------------------------------------------------------------
		align 2

loc_17FA4:				; CODE XREF: sub_17A78+510j
		mov	bx, [bp+arg_4]
		mov	ax, [bx+22h]
		sub	ax, [bx+24h]
		cmp	ax, 7D0h
		jle	short loc_17FBF
		mov	byte ptr [bx+0C6h], 0Ah
		mov	bx, [bp+arg_4]
		sub	word ptr [bx+2Ch], 500h

loc_17FBF:				; CODE XREF: sub_17A78+4FBj
					; sub_17A78+505j ...
		mov	bx, [bp+arg_4]
		mov	ax, word_445E2
		cmp	[bx+2Ch], ax
		jbe	short loc_17FD0
		mov	ax, [bx+2Ch]
		mov	word_445E2, ax

loc_17FD0:				; CODE XREF: sub_17A78+550j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_17A78	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17FD6	proc far		; CODE XREF: sub_14712+50Cp
					; sub_171E8+91p

var_10		= word ptr -10h
var_E		= byte ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C1h], 0
		jnz	short loc_17FFC
		mov	word ptr [bx+40h], 0
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C7h], 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_17FFC:				; CODE XREF: sub_17FD6+10j
		mov	[bp+var_8], 0
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C2h], 4
		jnz	short loc_1800E
		inc	[bp+var_8]

loc_1800E:				; CODE XREF: sub_17FD6+33j
		cmp	byte ptr [bx+0C3h], 4
		jnz	short loc_18018
		inc	[bp+var_8]

loc_18018:				; CODE XREF: sub_17FD6+3Dj
		cmp	byte ptr [bx+0C4h], 4
		jnz	short loc_18022
		inc	[bp+var_8]

loc_18022:				; CODE XREF: sub_17FD6+47j
		cmp	byte ptr [bx+0C5h], 4
		jnz	short loc_1802C
		inc	[bp+var_8]

loc_1802C:				; CODE XREF: sub_17FD6+51j
		cmp	[bp+var_8], 0
		jz	short loc_18051
		mov	ax, [bx+2Ch]
		sub	dx, dx
		mov	bx, [bp+var_8]
		shl	bx, 1
		div	word ptr [bx+688h]
		mov	bx, [bp+arg_0]
		sub	[bx+2Ch], ax
		mov	bx, [bp+arg_0]
		mov	si, bx
		mov	ax, [si+2Ch]
		mov	[bx+2Ah], ax

loc_18051:				; CODE XREF: sub_17FD6+5Aj
		mov	bx, [bp+arg_0]
		mov	ax, [bx+20h]
		add	ax, [bx+36h]
		mov	[bp+var_10], ax
		mov	[bp+var_C], ax
		mov	ax, [bx+2Ah]
		mov	cl, 8
		shr	ax, cl
		mov	[bp+var_2], ax
		cmp	[bp+var_C], 0
		jge	short loc_18078
		mov	ax, [bp+var_C]
		neg	ax
		jmp	short loc_1807B
; ---------------------------------------------------------------------------
		align 2

loc_18078:				; CODE XREF: sub_17FD6+98j
		mov	ax, [bp+var_C]

loc_1807B:				; CODE XREF: sub_17FD6+9Fj
		mov	cl, 3
		sar	ax, cl
		mov	[bp+var_8], ax
		mov	ax, [bp+var_2]
		mul	ax
		mov	cl, 6
		shr	ax, cl
		mul	[bp+var_8]
		mov	[bp+var_4], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+0A4h]
		shl	ax, 1
		mov	[bp+var_6], ax
		cwd
		push	dx
		push	ax
		mov	bx, [bp+arg_0]
		mov	al, [bx+0C5h]
		cbw
		mov	si, ax
		shl	si, 1
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_0]
		mov	al, [di+0C4h]
		cbw
		mov	di, ax
		shl	di, 1
		mov	ax, [bx+si+0B4h]
		mov	bx, [bp+arg_0]
		mov	cx, ax
		mov	al, [bx+0C3h]
		cbw
		mov	si, ax
		shl	si, 1
		mov	bx, [bp+arg_2]
		mov	ax, [bx+si+0B4h]
		mov	bx, [bp+arg_0]
		mov	dx, ax
		mov	al, [bx+0C2h]
		cbw
		mov	si, ax
		shl	si, 1
		mov	bx, [bp+arg_2]
		mov	ax, [bx+si+0B4h]
		add	ax, dx
		add	ax, [bx+di+0B4h]
		add	ax, cx
		cwd
		push	dx
		push	ax
		call	__aFlmul
		mov	cl, 0Ah

loc_180FB:				; CODE XREF: sub_17FD6+12Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_180FB
		mov	[bp+var_6], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_4]
		mov	[bx+44h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_6]
		mov	[bx+46h], ax
		cmp	[bp+arg_4], 0
		jnz	short loc_18121
		jmp	loc_1835E
; ---------------------------------------------------------------------------

loc_18121:				; CODE XREF: sub_17FD6+146j
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+20h], 0
		jnz	short loc_18168
		mov	al, [bx+18h]
		sub	ah, ah
		mov	[bp+var_8], ax
		cmp	ax, 7Fh	; ''
		jle	short loc_1813C
		sub	[bp+var_8], 100h

loc_1813C:				; CODE XREF: sub_17FD6+15Fj
		cmp	[bp+var_8], 0
		jz	short loc_18168
		jge	short loc_1814C
		mov	ax, [bp+var_8]
		neg	ax
		jmp	short loc_1814F
; ---------------------------------------------------------------------------
		align 2

loc_1814C:				; CODE XREF: sub_17FD6+16Cj
		mov	ax, [bp+var_8]

loc_1814F:				; CODE XREF: sub_17FD6+173j
		cmp	ax, 8
		jge	short loc_18168
		cmp	[bp+var_8], 0
		jle	short loc_18162
		mov	bx, [bp+arg_0]
		dec	word ptr [bx+18h]
		jmp	short loc_18168
; ---------------------------------------------------------------------------

loc_18162:				; CODE XREF: sub_17FD6+182j
		mov	bx, [bp+arg_0]
		inc	word ptr [bx+18h]

loc_18168:				; CODE XREF: sub_17FD6+152j
					; sub_17FD6+16Aj ...
		mov	ax, [bp+var_6]
		cmp	[bp+var_4], ax
		jle	short loc_181CE
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C7h], 1
		mov	ax, [bp+var_2]
		cwd
		push	dx
		push	ax
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		mov	ax, [bp+var_6]
		cwd
		mov	dh, dl
		mov	dl, ah
		mov	ah, al
		sub	al, al
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_C], ax
		cmp	[bp+var_10], 0
		jge	short loc_181AD
		mov	ax, 0FFFFh
		imul	[bp+var_C]
		mov	[bp+var_C], ax

loc_181AD:				; CODE XREF: sub_17FD6+1CCj
		mov	ax, [bp+var_C]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	ax, [bp+var_10]
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_C], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_10]
		sub	ax, [bp+var_C]
		mov	[bx+42h], ax
		jmp	short loc_18207
; ---------------------------------------------------------------------------

loc_181CE:				; CODE XREF: sub_17FD6+198j
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C7h], 0
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+42h], 0
		jz	short loc_18207
		mov	si, bx
		mov	ax, [si+42h]
		mov	cl, 4
		sar	ax, cl
		sub	[bx+42h], ax
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+42h], 0
		jge	short loc_181FC
		mov	ax, [bx+42h]
		neg	ax
		jmp	short loc_181FF
; ---------------------------------------------------------------------------
		align 2

loc_181FC:				; CODE XREF: sub_17FD6+21Cj
		mov	ax, [bx+42h]

loc_181FF:				; CODE XREF: sub_17FD6+223j
		cmp	ax, 10h
		jge	short loc_18207
		sar	word ptr [bx+42h], 1

loc_18207:				; CODE XREF: sub_17FD6+1F6j
					; sub_17FD6+207j ...
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+3Eh], 0
		jnz	short loc_18220
		cmp	byte ptr [bx+0C9h], 1
		jz	short loc_18220
		mov	ax, [bp+var_C]
		mov	[bx+40h], ax
		jmp	short loc_18228
; ---------------------------------------------------------------------------
		align 2

loc_18220:				; CODE XREF: sub_17FD6+238j
					; sub_17FD6+23Fj
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+40h], 0

loc_18228:				; CODE XREF: sub_17FD6+247j
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+1Ch], 0
		jnz	short loc_18234
		jmp	loc_182BD
; ---------------------------------------------------------------------------

loc_18234:				; CODE XREF: sub_17FD6+259j
		jge	short loc_1823E
		mov	ax, [bx+1Ch]
		neg	ax
		jmp	short loc_18241
; ---------------------------------------------------------------------------
		align 2

loc_1823E:				; CODE XREF: sub_17FD6:loc_18234j
		mov	ax, [bx+1Ch]

loc_18241:				; CODE XREF: sub_17FD6+265j
		cmp	ax, 4
		jle	short loc_182BD
		mov	al, [bx+2]
		mov	[bp+var_A], al
		mov	al, [bx+0Ah]
		mov	[bp+var_E], al
		mov	bl, al
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_A]
		sub	ah, ah
		add	bx, ax
		les	si, dword_44D42
		mov	al, es:[bx+si]
		cmp	ax, 0FDh ; '˝'
		jz	short loc_1827C
		cmp	ax, 0FEh ; '˛'
		jz	short loc_1827F
		cmp	ax, 0FFh
		jz	short loc_182A8
		jmp	short loc_18282
; ---------------------------------------------------------------------------
		align 2

loc_1827C:				; CODE XREF: sub_17FD6+297j
		dec	[bp+var_A]

loc_1827F:				; CODE XREF: sub_17FD6+29Cj
		inc	[bp+var_E]

loc_18282:				; CODE XREF: sub_17FD6+2A3j
					; sub_17FD6+2D5j
		mov	bl, [bp+var_E]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_A]
		sub	ah, ah
		add	bx, ax
		les	si, dword_44D42
		mov	al, es:[bx+si]
		cmp	ax, 34h	; '4'
		jb	short loc_182BD
		cmp	ax, 37h	; '7'
		jbe	short loc_182AE
		jmp	short loc_182BD
; ---------------------------------------------------------------------------
		align 2

loc_182A8:				; CODE XREF: sub_17FD6+2A1j
		dec	[bp+var_A]
		jmp	short loc_18282
; ---------------------------------------------------------------------------
		align 2

loc_182AE:				; CODE XREF: sub_17FD6+2CDj
		mov	bx, [bp+arg_0]
		mov	ax, [bx+1Ch]
		cwd
		mov	cx, 5
		idiv	cx
		add	[bx+40h], ax

loc_182BD:				; CODE XREF: sub_17FD6+25Bj
					; sub_17FD6+26Ej ...
		mov	ax, [bp+var_6]
		add	ax, 3E8h
		cmp	ax, [bp+var_4]
		jge	short loc_182EA
		mov	ax, [bp+var_C]
		sub	ax, [bp+var_10]
		cwd
		mov	cx, 0Eh
		idiv	cx
		mov	bx, [bp+arg_0]
		add	[bx+3Eh], ax
		mov	bx, [bp+arg_0]
		mov	cx, 2
		mov	ax, [bx+3Eh]
		cwd
		idiv	cx
		jmp	loc_1838B
; ---------------------------------------------------------------------------
		align 2

loc_182EA:				; CODE XREF: sub_17FD6+2F0j
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+3Eh], 0
		jnz	short loc_182F6
		jmp	loc_1838E
; ---------------------------------------------------------------------------

loc_182F6:				; CODE XREF: sub_17FD6+31Bj
		mov	ax, [bp+var_C]
		sub	ax, [bp+var_10]
		cwd
		mov	cx, 0Eh
		idiv	cx
		add	[bx+3Eh], ax
		mov	bx, [bp+arg_0]
		mov	cx, 2
		mov	ax, [bx+3Eh]
		cwd
		idiv	cx
		mov	[bx+3Eh], ax
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+3Eh], 0
		jnz	short loc_1838E
		push	word ptr [bx+2Ch]
		push	word ptr [bx+36h]
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	[bx+2Ch], ax
		mov	bx, [bp+arg_0]
		push	word ptr [bx+36h]
		call	sub_3272C
		add	sp, 2
		or	ax, ax
		jge	short loc_18354
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+2Ch], 0

loc_18354:				; CODE XREF: sub_17FD6+374j
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+36h], 0
		jmp	short loc_1838E
; ---------------------------------------------------------------------------

loc_1835E:				; CODE XREF: sub_17FD6+148j
		mov	bx, [bp+arg_0]
		mov	si, bx
		mov	ax, [si+20h]
		shl	ax, 1
		shl	ax, 1
		mov	[bx+40h], ax
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+3Eh], 0
		jz	short loc_1838E
		mov	si, bx
		mov	ax, [si+3Eh]
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		sub	ax, cx
		mov	cl, 4
		sar	ax, cl

loc_1838B:				; CODE XREF: sub_17FD6+310j
		mov	[bx+3Eh], ax

loc_1838E:				; CODE XREF: sub_17FD6+31Dj
					; sub_17FD6+345j ...
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+36h], 0
		jz	short loc_183B5
		cmp	word ptr [bx+3Eh], 0
		jnz	short loc_183B5
		mov	si, bx
		mov	ax, [si+36h]
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		sub	ax, cx
		mov	cl, 4
		sar	ax, cl
		mov	[bx+36h], ax

loc_183B5:				; CODE XREF: sub_17FD6+3BFj
					; sub_17FD6+3C5j
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+3Eh], 0
		jz	short loc_183C6
		mov	si, bx
		mov	ax, [si+3Eh]
		sub	[bx+36h], ax

loc_183C6:				; CODE XREF: sub_17FD6+3E6j
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C7h], 0
		jnz	short loc_183D3
		jmp	loc_18458
; ---------------------------------------------------------------------------

loc_183D3:				; CODE XREF: sub_17FD6+3F8j
		cmp	word ptr [bx+42h], 0
		jge	short loc_183E0
		mov	ax, [bx+42h]
		neg	ax
		jmp	short loc_183E3
; ---------------------------------------------------------------------------

loc_183E0:				; CODE XREF: sub_17FD6+401j
		mov	ax, [bx+42h]

loc_183E3:				; CODE XREF: sub_17FD6+408j
		shl	ax, 1
		mov	[bp+var_8], ax
		cmp	[bx+2Ah], ax
		jbe	short loc_18448
		cmp	[bx+2Ch], ax
		jbe	short loc_18400
		sub	[bx+2Ah], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_8]
		sub	[bx+2Ch], ax
		jmp	short loc_18410
; ---------------------------------------------------------------------------

loc_18400:				; CODE XREF: sub_17FD6+41Aj
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+2Ah], 0
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+2Ch], 0

loc_18410:				; CODE XREF: sub_17FD6+428j
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+0C9h], 0
		jnz	short loc_18458
		cmp	byte ptr [bx+0C2h], 1
		jz	short loc_18436
		cmp	byte ptr [bx+0C3h], 1
		jz	short loc_18436
		cmp	byte ptr [bx+0C4h], 1
		jz	short loc_18436
		cmp	byte ptr [bx+0C5h], 1
		jnz	short loc_1843E

loc_18436:				; CODE XREF: sub_17FD6+449j
					; sub_17FD6+450j ...
		or	byte ptr [bx+0CFh], 2
		jmp	short loc_18458
; ---------------------------------------------------------------------------
		align 2

loc_1843E:				; CODE XREF: sub_17FD6+45Ej
		mov	bx, [bp+arg_0]
		or	byte ptr [bx+0CFh], 4
		jmp	short loc_18458
; ---------------------------------------------------------------------------

loc_18448:				; CODE XREF: sub_17FD6+415j
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+2Ah], 0
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+2Ch], 0

loc_18458:				; CODE XREF: sub_17FD6+3FAj
					; sub_17FD6+442j ...
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+42h], 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_17FD6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_18466	proc far		; CODE XREF: sub_14DA2+17A1p

var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	si
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+0C8h], 1
		mov	bx, [bp+arg_2]
		mov	byte ptr [bx+0C8h], 1
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2Ch]
		mov	[bp+var_6], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+2Ch]
		mov	[bp+var_C], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+18h]
		mov	[bp+var_2], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+18h]
		mov	[bp+var_4], ax
		push	[bp+var_2]
		call	sub_326DE
		add	sp, 2
		push	ax
		mov	ax, [bp+var_6]
		mov	cl, 8
		shr	ax, cl
		push	ax
		call	sub_30044
		add	sp, 4
		mov	[bp+var_10], ax
		push	[bp+var_4]
		call	sub_326DE
		add	sp, 2
		push	ax
		mov	ax, [bp+var_C]
		mov	cl, 8
		shr	ax, cl
		push	ax
		call	sub_30044
		add	sp, 4
		mov	[bp+var_14], ax
		push	[bp+var_2]
		call	sub_3272C
		add	sp, 2
		push	ax
		mov	ax, [bp+var_6]
		mov	cl, 8
		shr	ax, cl
		push	ax
		call	sub_30044
		add	sp, 4
		mov	[bp+var_12], ax
		push	[bp+var_4]
		call	sub_3272C
		add	sp, 2
		push	ax
		mov	ax, [bp+var_C]
		mov	cl, 8
		shr	ax, cl
		push	ax
		call	sub_30044
		add	sp, 4
		mov	[bp+var_16], ax
		sub	ax, [bp+var_12]
		push	ax
		mov	ax, [bp+var_14]
		sub	ax, [bp+var_10]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_A], ax
		cmp	ax, 0Ah
		jge	short loc_1853D
		mov	[bp+var_A], 0Ah

loc_1853D:				; CODE XREF: sub_18466+D0j
		mov	ax, [bp+var_2]
		sub	ax, [bp+var_4]
		and	ah, 3
		mov	[bp+var_8], ax
		mov	ah, byte ptr [bp+var_A]
		sub	al, al
		mov	[bp+var_E], ax
		mov	ax, 300h
		imul	[bp+var_A]
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_18], ax
		mov	bx, [bp+arg_0]
		cmp	[bx+2Ch], ax
		jnb	short loc_1856E
		mov	word ptr [bx+2Ch], 0
		jmp	short loc_18577
; ---------------------------------------------------------------------------
		align 2

loc_1856E:				; CODE XREF: sub_18466+FEj
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_18]
		sub	[bx+2Ch], ax

loc_18577:				; CODE XREF: sub_18466+105j
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_4]
		sub	ax, [bp+var_2]
		mov	[bx+36h], ax
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+36h], 200h
		jl	short loc_18592
		sub	word ptr [bx+36h], 400h

loc_18592:				; CODE XREF: sub_18466+125j
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+36h], 0FE00h
		jg	short loc_185A0
		add	byte ptr [bx+37h], 4

loc_185A0:				; CODE XREF: sub_18466+134j
		mov	bx, [bp+arg_2]
		mov	ax, [bp+var_2]
		sub	ax, [bp+var_4]
		mov	[bx+36h], ax
		mov	bx, [bp+arg_2]
		cmp	word ptr [bx+36h], 200h
		jl	short loc_185BB
		sub	word ptr [bx+36h], 400h

loc_185BB:				; CODE XREF: sub_18466+14Ej
		mov	bx, [bp+arg_2]
		cmp	word ptr [bx+36h], 0FE00h
		jg	short loc_185C9
		add	byte ptr [bx+37h], 4

loc_185C9:				; CODE XREF: sub_18466+15Dj
		mov	bx, [bp+arg_0]
		mov	si, bx
		mov	ax, [si+2Ch]
		mov	[bx+2Ah], ax
		mov	bx, [bp+arg_2]
		mov	si, bx
		mov	ax, [si+2Ch]
		mov	[bx+2Ah], ax
		cmp	[bp+var_A], 1Eh
		jle	short loc_185EE
		mov	ax, 1
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_185EE:				; CODE XREF: sub_18466+17Dj
		sub	ax, ax
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_18466	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_185F6	proc far		; CODE XREF: sub_14DA2+10C8p

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		mov	ax, [si+54h]
		mov	[bp+var_2], ax
		mov	[bp+var_4], 0
		mov	[bp+var_6], 0
		cmp	word ptr [si+6Ch], 0
		jz	short loc_18659
		jge	short loc_18636
		add	word ptr [si+6Ch], 4
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		add	si, 6Ch	; 'l'
		mov	ax, [si]
		cmp	[bp+var_6], ax
		jge	short loc_18659
		jmp	short loc_18654
; ---------------------------------------------------------------------------

loc_18636:				; CODE XREF: sub_185F6+26j
		mov	di, [bp+arg_4]
		shl	di, 1
		mov	bx, [bp+arg_0]
		sub	word ptr [bx+di+6Ch], 4
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		add	si, 6Ch	; 'l'
		mov	ax, [si]
		cmp	[bp+var_6], ax
		jle	short loc_18659

loc_18654:				; CODE XREF: sub_185F6+3Ej
		mov	ax, [bp+var_6]
		mov	[si], ax

loc_18659:				; CODE XREF: sub_185F6+24j
					; sub_185F6+3Cj ...
		mov	di, [bp+arg_4]
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	si, [bx+di+6Ch]
		mov	di, [bp+arg_4]
		shl	di, 1
		mov	[bx+di+6Ch], si
		cmp	[bp+arg_2], 0
		jge	short loc_18689
		mov	di, [bp+arg_4]
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_2]
		neg	ax
		cmp	[bx+di+54h], ax
		jle	short loc_18689
		mov	[bp+arg_2], 0

loc_18689:				; CODE XREF: sub_185F6+7Aj
					; sub_185F6+8Cj
		cmp	[bp+arg_2], 0
		jnz	short loc_186FA
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		mov	ax, [si+6Ch]
		cmp	[si+54h], ax
		jle	short loc_186C8
		sub	word ptr [si+54h], 80h ; 'Ä'
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		mov	ax, [si+6Ch]
		cmp	[si+54h], ax
		jge	short loc_186B7
		mov	[si+54h], ax

loc_186B7:				; CODE XREF: sub_185F6+BCj
		mov	ax, [bp+var_2]
		mov	si, [bp+arg_4]
		shl	si, 1
		mov	bx, [bp+arg_0]
		sub	ax, [bx+si+54h]
		jmp	loc_187A2
; ---------------------------------------------------------------------------

loc_186C8:				; CODE XREF: sub_185F6+A7j
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		mov	ax, [si+6Ch]
		cmp	[si+54h], ax
		jl	short loc_186DB
		jmp	loc_187A5
; ---------------------------------------------------------------------------

loc_186DB:				; CODE XREF: sub_185F6+E0j
		add	word ptr [si+54h], 80h ; 'Ä'
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		mov	ax, [si+6Ch]
		cmp	[si+54h], ax
		jg	short loc_186F3
		jmp	loc_187A5
; ---------------------------------------------------------------------------

loc_186F3:				; CODE XREF: sub_185F6+F8j
		mov	[si+54h], ax
		jmp	loc_187A5
; ---------------------------------------------------------------------------
		align 2

loc_186FA:				; CODE XREF: sub_185F6+97j
		cmp	[bp+arg_2], 0
		jle	short loc_18748
		cmp	[bp+arg_2], 0C0h ; '¿'
		jle	short loc_18716
		mov	si, [bp+arg_4]
		shl	si, 1
		mov	bx, [bp+arg_0]
		add	word ptr [bx+si+54h], 0C0h ; '¿'
		jmp	short loc_18724
; ---------------------------------------------------------------------------

loc_18716:				; CODE XREF: sub_185F6+10Fj
		mov	si, [bp+arg_4]
		shl	si, 1
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_2]
		add	[bx+si+54h], ax

loc_18724:				; CODE XREF: sub_185F6+11Ej
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		add	si, 54h	; 'T'
		cmp	word ptr [si], 180h
		jle	short loc_18739
		mov	word ptr [si], 180h

loc_18739:				; CODE XREF: sub_185F6+13Dj
		mov	si, [bp+arg_4]
		shl	si, 1
		mov	bx, [bp+arg_0]
		mov	word ptr [bx+si+64h], 0
		jmp	short loc_187A5
; ---------------------------------------------------------------------------

loc_18748:				; CODE XREF: sub_185F6+108j
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		add	si, 54h	; 'T'
		mov	ax, [bp+arg_2]
		add	ax, [si]
		cmp	ax, 0FEE0h
		jle	short loc_18764
		mov	ax, [bp+arg_2]
		add	[si], ax
		jmp	short loc_18791
; ---------------------------------------------------------------------------

loc_18764:				; CODE XREF: sub_185F6+165j
		mov	di, [bp+arg_4]
		shl	di, 1
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_2]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		sar	ax, 1
		sar	ax, 1
		add	[bx+di+54h], ax
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, [bp+arg_0]
		add	si, 54h	; 'T'
		cmp	word ptr [si], 0FE80h
		jge	short loc_18791
		mov	word ptr [si], 0FE80h

loc_18791:				; CODE XREF: sub_185F6+16Cj
					; sub_185F6+195j
		mov	ax, [bp+var_2]
		mov	si, [bp+arg_4]
		shl	si, 1
		mov	bx, [bp+arg_0]
		sub	ax, [bx+si+54h]
		add	ax, [bp+arg_2]

loc_187A2:				; CODE XREF: sub_185F6+CFj
		mov	[bp+var_4], ax

loc_187A5:				; CODE XREF: sub_185F6+E2j
					; sub_185F6+FAj ...
		mov	ax, [bp+var_2]
		add	ax, [bp+var_4]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_185F6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_187B2	proc far		; CODE XREF: sub_171E8+7Ep

var_4		= byte ptr -4
arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		mov	di, word_44606
		mov	ax, word_44612
		mov	cl, 0Ah
		shr	ax, cl
		and	al, 0FCh
		mov	[bp+var_4], al
		cbw
		mov	bx, ax
		mov	al, [bp+arg_0]
		cbw
		add	bx, ax
		add	bx, word_449E8
		mov	al, [bx]
		cbw
		mov	si, ax
		or	si, si
		jle	short loc_187E8
		cmp	di, 0FFFFh
		jge	short loc_187F5
		jmp	short loc_187F1
; ---------------------------------------------------------------------------
		align 2

loc_187E8:				; CODE XREF: sub_187B2+2Cj
		or	si, si
		jz	short loc_187F5
		cmp	di, 1
		jle	short loc_187F5

loc_187F1:				; CODE XREF: sub_187B2+33j
		mov	cl, 2
		shl	si, cl

loc_187F5:				; CODE XREF: sub_187B2+31j
					; sub_187B2+38j ...
		or	si, si
		jnz	short loc_18835
		cmp	word_44612, 0
		jz	short loc_18835
		or	di, di
		jz	short loc_18835
		mov	al, [bp+var_4]
		cbw
		mov	bx, ax
		add	bx, word_449E8
		mov	al, [bx+1]
		cbw
		mov	si, ax
		shl	si, 1
		or	di, di
		jge	short loc_18820
		mov	ax, di
		neg	ax
		jmp	short loc_18822
; ---------------------------------------------------------------------------

loc_18820:				; CODE XREF: sub_187B2+66j
		mov	ax, di

loc_18822:				; CODE XREF: sub_187B2+6Cj
		cmp	ax, si
		jle	short loc_1882E
		or	di, di
		jle	short loc_18835
		mov	ax, si
		jmp	short loc_18831
; ---------------------------------------------------------------------------

loc_1882E:				; CODE XREF: sub_187B2+72j
		mov	ax, word_44606

loc_18831:				; CODE XREF: sub_187B2+7Aj
		neg	ax
		mov	si, ax

loc_18835:				; CODE XREF: sub_187B2+45j
					; sub_187B2+4Cj ...
		cmp	word_449D0, 0Ah
		jnz	short loc_18850
		cmp	si, 0A0h ; '†'
		jle	short loc_18845
		mov	si, 0A0h ; '†'

loc_18845:				; CODE XREF: sub_187B2+8Ej
		cmp	si, 0FF60h
		jge	short loc_18860
		mov	si, 0FF60h
		jmp	short loc_18860
; ---------------------------------------------------------------------------

loc_18850:				; CODE XREF: sub_187B2+88j
		cmp	si, 50h	; 'P'
		jle	short loc_18858
		mov	si, 50h	; 'P'

loc_18858:				; CODE XREF: sub_187B2+A1j
		cmp	si, 0FFB0h
		jge	short loc_18860
		mov	si, 0FFB0h

loc_18860:				; CODE XREF: sub_187B2+97j
					; sub_187B2+9Cj ...
		add	di, si
		cmp	di, 0F0h ; ''
		jle	short loc_1886B
		mov	di, 0F0h ; ''

loc_1886B:				; CODE XREF: sub_187B2+B4j
		cmp	di, 0FF10h
		jge	short loc_18874
		mov	di, 0FF10h

loc_18874:				; CODE XREF: sub_187B2+BDj
		mov	al, [bp+var_4]
		cbw
		mov	bx, ax
		mov	al, [bp+arg_0]
		cbw
		add	bx, ax
		add	bx, word_449E8
		cmp	byte ptr [bx], 0
		jnz	short loc_18899
		push	di		; int
		call	_abs
		add	sp, 2
		cmp	ax, 8
		jge	short loc_18899
		sub	di, di

loc_18899:				; CODE XREF: sub_187B2+D5j
					; sub_187B2+E3j
		mov	word_44606, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_187B2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_188A4	proc far		; CODE XREF: sub_17008+E5p
					; sub_17008+F9p ...

var_34		= dword	ptr -34h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= byte ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 34h
		push	di
		push	si
		cmp	byte_454B8, 0
		jnz	short loc_188B6
		jmp	loc_1893A
; ---------------------------------------------------------------------------

loc_188B6:				; CODE XREF: sub_188A4+Dj
		cmp	byte_459D8, 0
		jz	short loc_18925
		mov	ax, word_449E4
		mov	word_44D1E, ax
		test	byte_42D26, 6
		jz	short loc_188D6
		push	word_43964
		call	sub_27466
		add	sp, 2

loc_188D6:				; CODE XREF: sub_188A4+24j
		test	byte_42D26, 1
		jz	short loc_188E9
		push	word_43964
		call	sub_26F6D
		add	sp, 2

loc_188E9:				; CODE XREF: sub_188A4+37j
		cmp	byte_449AA, 0
		jz	short loc_18916
		test	byte_42D2A, 6
		jz	short loc_18903
		push	word_4408C
		call	sub_27466
		add	sp, 2

loc_18903:				; CODE XREF: sub_188A4+51j
		test	byte_42D2A, 1
		jz	short loc_18916
		push	word_4408C
		call	sub_26F6D
		add	sp, 2

loc_18916:				; CODE XREF: sub_188A4+4Aj
					; sub_188A4+64j
		mov	byte_459D8, 0
		mov	byte_42D26, 0
		mov	byte_42D2A, 0

loc_18925:				; CODE XREF: sub_188A4+17j
		mov	al, byte_3BE02
		cmp	byte_454B8, al
		jnz	short loc_18931
		jmp	loc_18CCC
; ---------------------------------------------------------------------------

loc_18931:				; CODE XREF: sub_188A4+88j
		call	sub_38178
		jmp	loc_18CCC
; ---------------------------------------------------------------------------
		align 2

loc_1893A:				; CODE XREF: sub_188A4+Fj
		mov	ax, word_445F2
		mov	dx, word_445F4
		mov	cl, 6

loc_18943:				; CODE XREF: sub_188A4+A5j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_18943
		mov	[bp+var_1C], ax
		mov	ax, word_445F6
		mov	dx, word_445F8
		mov	cl, 6

loc_18957:				; CODE XREF: sub_188A4+B9j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_18957
		mov	[bp+var_1A], ax
		mov	ax, word_445FA
		mov	dx, word_445FC
		mov	cl, 6

loc_1896B:				; CODE XREF: sub_188A4+CDj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1896B
		mov	[bp+var_18], ax
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_1897F:				; CODE XREF: sub_188A4+E1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1897F
		mov	[bp+var_8], ax
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_18993:				; CODE XREF: sub_188A4+F5j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_18993
		mov	[bp+var_6], ax
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_189A7:				; CODE XREF: sub_188A4+109j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_189A7
		mov	[bp+var_4], ax
		cmp	byte_449AA, 0
		jz	short loc_18A31
		mov	ax, word_446C2
		mov	dx, word_446C4
		mov	cl, 6

loc_189C2:				; CODE XREF: sub_188A4+124j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_189C2
		mov	[bp+var_24], ax
		mov	ax, word_446C6
		mov	dx, word_446C8
		mov	cl, 6

loc_189D6:				; CODE XREF: sub_188A4+138j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_189D6
		mov	[bp+var_22], ax
		mov	ax, word_446CA
		mov	dx, word_446CC
		mov	cl, 6

loc_189EA:				; CODE XREF: sub_188A4+14Cj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_189EA
		mov	[bp+var_20], ax
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_189FE:				; CODE XREF: sub_188A4+160j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_189FE
		mov	[bp+var_E], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_18A12:				; CODE XREF: sub_188A4+174j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_18A12
		mov	[bp+var_C], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_18A26:				; CODE XREF: sub_188A4+188j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_18A26
		mov	[bp+var_A], ax

loc_18A31:				; CODE XREF: sub_188A4+113j
		mov	al, byte_3B8F5
		cbw
		or	ax, ax
		jz	short loc_18A52
		cmp	ax, 1
		jnz	short loc_18A41
		jmp	loc_18B42
; ---------------------------------------------------------------------------

loc_18A41:				; CODE XREF: sub_188A4+198j
		cmp	ax, 2
		jz	short loc_18A52
		cmp	ax, 3
		jnz	short loc_18A4E
		jmp	loc_18B6E
; ---------------------------------------------------------------------------

loc_18A4E:				; CODE XREF: sub_188A4+1A5j
		jmp	short loc_18A82
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_18A52:				; CODE XREF: sub_188A4+193j
					; sub_188A4+1A0j
		cmp	byte_463E0, 0
		jz	short loc_18A6E
		lea	di, [bp+var_14]
		lea	si, [bp+var_E]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		lea	di, [bp+var_2A]
		lea	si, [bp+var_24]

loc_18A6A:				; CODE XREF: sub_188A4+30Fj
		push	ss
		pop	es
		jmp	short loc_18A7F
; ---------------------------------------------------------------------------

loc_18A6E:				; CODE XREF: sub_188A4+1B3j
		lea	di, [bp+var_14]
		lea	si, [bp+var_8]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		lea	di, [bp+var_2A]
		lea	si, [bp+var_1C]

loc_18A7F:				; CODE XREF: sub_188A4+1C8j
		movsw
		movsw
		movsw

loc_18A82:				; CODE XREF: sub_188A4:loc_18A4Ej
					; sub_188A4+2C6j
		mov	ax, 22h	; '"'
		imul	word_449E4
		add	ax, 97DCh
		mov	[bp+var_2], ax
		mov	bx, ax
		mov	ax, [bp+var_2A]
		sub	ax, [bp+var_1C]
		mov	[bx+6],	ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_28]
		sub	ax, [bp+var_1A]
		mov	[bx+8],	ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_26]
		sub	ax, [bp+var_18]
		mov	[bx+0Ah], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_14]
		sub	ax, [bp+var_8]
		mov	[bx+0Ch], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_12]
		sub	ax, [bp+var_6]
		mov	[bx+0Eh], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_10]
		sub	ax, [bp+var_4]
		mov	[bx+10h], ax
		mov	bx, [bp+var_2]
		mov	ax, word_44608
		mov	[bx+1Eh], ax
		cmp	byte_449AA, 0
		jnz	short loc_18AE9
		jmp	loc_18BB6
; ---------------------------------------------------------------------------

loc_18AE9:				; CODE XREF: sub_188A4+240j
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_2A]
		sub	ax, [bp+var_24]
		mov	[bx+12h], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_28]
		sub	ax, [bp+var_22]
		mov	[bx+14h], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_26]
		sub	ax, [bp+var_20]
		mov	[bx+16h], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_14]
		sub	ax, [bp+var_E]
		mov	[bx+18h], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_12]
		sub	ax, [bp+var_C]
		mov	[bx+1Ah], ax
		mov	bx, [bp+var_2]
		mov	ax, [bp+var_10]
		sub	ax, [bp+var_A]
		mov	[bx+1Ch], ax
		mov	bx, [bp+var_2]
		mov	ax, word_446D8
		mov	[bx+20h], ax
		mov	[bp+var_30], 2
		jmp	short loc_18BBB
; ---------------------------------------------------------------------------
		align 2

loc_18B42:				; CODE XREF: sub_188A4+19Aj
		mov	al, byte_463E0
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	si, ax
		push	si
		lea	di, [bp+var_14]
		lea	si, [si-71BCh]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		push	si
		lea	di, [bp+var_2A]
		lea	si, [si-71B0h]
		movsw
		movsw
		movsw
		pop	si
		jmp	loc_18A82
; ---------------------------------------------------------------------------
		align 2

loc_18B6E:				; CODE XREF: sub_188A4+1A7j
		mov	al, byte_463E0
		cbw
		mov	bx, ax
		mov	al, [bx-6EE5h]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word_449DC
		mov	dx, word_449DE
		mov	word ptr [bp+var_34], ax
		mov	word ptr [bp+var_34+2],	dx
		les	bx, [bp+var_34]
		mov	ax, es:[bx]
		mov	[bp+var_14], ax
		mov	ax, es:[bx+2]
		add	ax, word_44D20
		add	ax, 5Ah	; 'Z'
		mov	[bp+var_12], ax
		mov	ax, es:[bx+4]
		mov	[bp+var_10], ax
		lea	di, [bp+var_2A]
		lea	si, [bp+var_14]
		jmp	loc_18A6A
; ---------------------------------------------------------------------------

loc_18BB6:				; CODE XREF: sub_188A4+242j
		mov	[bp+var_30], 1

loc_18BBB:				; CODE XREF: sub_188A4+29Bj
		mov	[bp+var_1E], 0
		jmp	loc_18C93
; ---------------------------------------------------------------------------
		align 2

loc_18BC4:				; CODE XREF: sub_188A4+3FDj
		mov	[bp+var_2C], 8E76h
		mov	ax, word_43964
		mov	[bp+var_2E], ax
		mov	al, byte_42D26

loc_18BD2:				; CODE XREF: sub_188A4+40Ej
		mov	[bp+var_16], al
		mov	bx, [bp+var_2C]
		test	byte ptr [bx+0CFh], 1
		jz	short loc_18BF4
		test	[bp+var_16], 1
		jnz	short loc_18C08
		or	[bp+var_16], 1
		push	[bp+var_2E]
		call	sub_26EF4
		jmp	short loc_18C05
; ---------------------------------------------------------------------------
		align 2

loc_18BF4:				; CODE XREF: sub_188A4+339j
		test	[bp+var_16], 1
		jz	short loc_18C08
		dec	[bp+var_16]
		push	[bp+var_2E]
		call	sub_26F6D

loc_18C05:				; CODE XREF: sub_188A4+34Dj
		add	sp, 2

loc_18C08:				; CODE XREF: sub_188A4+33Fj
					; sub_188A4+354j
		mov	bx, [bp+var_2C]
		test	byte ptr [bx+0CFh], 6
		jz	short loc_18C56
		mov	al, [bp+var_16]
		and	al, 6
		mov	byte ptr [bp+var_34], al
		mov	al, [bx+0CFh]
		and	al, 6
		cmp	al, byte ptr [bp+var_34]
		jz	short loc_18C7B
		test	[bp+var_16], 6
		jnz	short loc_18C5C
		test	byte ptr [bx+0CFh], 2
		jz	short loc_18C44
		push	[bp+var_2E]
		call	sub_273B0
		add	sp, 2
		add	[bp+var_16], 2
		jmp	short loc_18C7B
; ---------------------------------------------------------------------------
		align 2

loc_18C44:				; CODE XREF: sub_188A4+38Cj
		push	[bp+var_2E]
		call	sub_2740B
		add	sp, 2
		add	[bp+var_16], 4
		jmp	short loc_18C7B
; ---------------------------------------------------------------------------
		align 2

loc_18C56:				; CODE XREF: sub_188A4+36Cj
		test	[bp+var_16], 6
		jz	short loc_18C7B

loc_18C5C:				; CODE XREF: sub_188A4+385j
		test	[bp+var_16], 2
		jz	short loc_18C66
		sub	[bp+var_16], 2

loc_18C66:				; CODE XREF: sub_188A4+3BCj
		test	[bp+var_16], 4
		jz	short loc_18C70
		sub	[bp+var_16], 4

loc_18C70:				; CODE XREF: sub_188A4+3C6j
		push	[bp+var_2E]
		call	sub_27466
		add	sp, 2

loc_18C7B:				; CODE XREF: sub_188A4+37Fj
					; sub_188A4+39Dj ...
		cmp	[bp+var_1E], 0
		jz	short loc_18C8A
		mov	al, [bp+var_16]
		mov	byte_42D2A, al
		jmp	short loc_18C90
; ---------------------------------------------------------------------------
		align 2

loc_18C8A:				; CODE XREF: sub_188A4+3DBj
		mov	al, [bp+var_16]
		mov	byte_42D26, al

loc_18C90:				; CODE XREF: sub_188A4+3E3j
		inc	[bp+var_1E]

loc_18C93:				; CODE XREF: sub_188A4+31Cj
		mov	ax, [bp+var_30]
		cmp	[bp+var_1E], ax
		jge	short loc_18CB6
		cmp	[bp+var_1E], 0
		jnz	short loc_18CA4
		jmp	loc_18BC4
; ---------------------------------------------------------------------------

loc_18CA4:				; CODE XREF: sub_188A4+3FBj
		mov	[bp+var_2C], 8F46h
		mov	ax, word_4408C
		mov	[bp+var_2E], ax
		mov	al, byte_42D2A
		jmp	loc_18BD2
; ---------------------------------------------------------------------------
		align 2

loc_18CB6:				; CODE XREF: sub_188A4+3F5j
		mov	byte_459D8, 1
		inc	word_449E4
		cmp	word_449E4, 28h	; '('
		jnz	short loc_18CCC
		mov	word_449E4, 0

loc_18CCC:				; CODE XREF: sub_188A4+8Aj
					; sub_188A4+92j ...
		mov	al, byte_454B8
		mov	byte_3BE02, al
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_188A4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_18CD8	proc far		; CODE XREF: sub_14DA2+14B7p

arg_0		= byte ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		cmp	byte_459D8, 0
		jz	short loc_18D04
		test	[bp+arg_0], 10h
		jz	short loc_18CF3
		push	[bp+arg_2]
		call	sub_27374
		add	sp, 2

loc_18CF3:				; CODE XREF: sub_18CD8+Ej
		test	[bp+arg_0], 20h
		jz	short loc_18D04
		push	[bp+arg_2]
		call	sub_27338
		add	sp, 2

loc_18D04:				; CODE XREF: sub_18CD8+8j
					; sub_18CD8+1Fj
		pop	bp
		retf
sub_18CD8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_18D06	proc far		; CODE XREF: seg005:0A6FP

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	[bp+arg_2]
		mov	bx, [bp+arg_0]
		push	word ptr [bx+10h]
		push	word ptr [bx+0Eh]
		push	word ptr [bx+0Ch]
		push	word ptr [bx+0Ah]
		push	word ptr [bx+8]
		push	word ptr [bx+6]
		push	word ptr [bx+1Eh]
		push	word_43964
		call	sub_2712E
		add	sp, 12h
		cmp	byte_449AA, 0
		jz	short loc_18D5E
		push	[bp+arg_2]
		mov	bx, [bp+arg_0]
		push	word ptr [bx+1Ch]
		push	word ptr [bx+1Ah]
		push	word ptr [bx+18h]
		push	word ptr [bx+16h]
		push	word ptr [bx+14h]
		push	word ptr [bx+12h]
		push	word ptr [bx+20h]
		push	word_4408C
		call	sub_2712E
		add	sp, 12h

loc_18D5E:				; CODE XREF: sub_18D06+2Fj
		pop	bp
		retf
sub_18D06	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_18D60	proc far		; CODE XREF: sub_14712+174p
					; sub_14712+3C4p ...

var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= byte ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h
var_16		= byte ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= byte ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= dword	ptr -6
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= byte ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 30h
		push	di
		push	si
		mov	bx, [bp+arg_0]
		les	si, dword_449D4
		mov	al, es:[bx+si]
		mov	[bp+var_2], al
		les	si, dword_454D6
		mov	al, es:[bx+si]
		and	al, 0Fh
		mov	[bp+var_1C], al
		mov	al, es:[bx+si]
		and	al, 10h
		mov	[bp+var_28], al
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_26], ax
		mov	bx, ax
		mov	ax, [bx]
		mov	[bp+var_14], ax
		mov	[bp+var_12], ds
		mov	al, [bp+var_1C]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_14]
		mov	dx, ds
		mov	word ptr [bp+var_6], ax
		mov	word ptr [bp+var_6+2], dx
		mov	[bp+var_24], 0
		les	bx, [bp+var_6]
		mov	al, es:[bx+5]
		mov	[bp+var_18], al
		cmp	[bp+var_28], 0
		jnz	short loc_18DE2
		mov	al, [bp+arg_4]
		shl	al, 1
		jmp	short loc_18DEC
; ---------------------------------------------------------------------------

loc_18DE2:				; CODE XREF: sub_18D60+79j
		mov	al, [bp+var_18]
		sub	al, [bp+arg_4]
		shl	al, 1
		sub	al, 2

loc_18DEC:				; CODE XREF: sub_18D60+80j
		mov	[bp+var_10], al
		cmp	[bp+arg_6], 0
		jz	short loc_18E1A
		mov	al, es:[bx+0Dh]
		mov	[bp+var_16], al
		mov	bx, [bp+var_26]
		mov	al, [bx+9]
		mov	byte ptr [bp+var_1A], al
		mov	si, [bp+var_1A]
		and	si, 0FFh
		mov	bl, [bp+var_16]
		sub	bh, bh
		mov	al, [bx+si-6A20h]
		mov	bx, [bp+arg_6]
		mov	[bx], al

loc_18E1A:				; CODE XREF: sub_18D60+93j
		les	bx, [bp+var_6]
		cmp	word ptr es:[bx+0Ah], 0
		jz	short loc_18E29
		mov	[bp+var_24], 1

loc_18E29:				; CODE XREF: sub_18D60+C2j
		cmp	[bp+var_28], 0
		jz	short loc_18E76
		cmp	[bp+var_24], 0
		jz	short loc_18E3C
		mov	ax, es:[bx+0Ah]
		jmp	short loc_18E7D
; ---------------------------------------------------------------------------
		align 2

loc_18E3C:				; CODE XREF: sub_18D60+D3j
		les	bx, [bp+var_6]
		mov	ax, es:[bx+8]
		mov	[bp+var_2C], ax
		mov	[bp+var_2A], ds
		mov	al, [bp+var_10]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_2C]
		mov	dx, ds
		mov	[bp+var_30], ax
		mov	[bp+var_2E], dx
		add	ax, 6
		lea	di, [bp+var_C]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		movsw
		movsw
		movsw
		pop	ds
		mov	ax, [bp+var_30]
		jmp	short loc_18EAA
; ---------------------------------------------------------------------------
		align 2

loc_18E76:				; CODE XREF: sub_18D60+CDj
		les	bx, [bp+var_6]
		mov	ax, es:[bx+8]

loc_18E7D:				; CODE XREF: sub_18D60+D9j
		mov	[bp+var_2C], ax
		mov	[bp+var_2A], ds
		mov	al, [bp+var_10]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_2C]
		mov	dx, ds
		mov	[bp+var_30], ax
		mov	[bp+var_2E], dx
		lea	di, [bp+var_C]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		movsw
		movsw
		movsw
		pop	ds
		add	ax, 6

loc_18EAA:				; CODE XREF: sub_18D60+113j
		lea	di, [bp+var_22]
		mov	si, ax
		push	ds
		mov	ds, dx
		movsw
		movsw
		movsw
		pop	ds
		les	bx, [bp+var_6]
		mov	ax, es:[bx+6]
		cmp	ax, 100h
		jnz	short loc_18EC5
		jmp	loc_18F74
; ---------------------------------------------------------------------------

loc_18EC5:				; CODE XREF: sub_18D60+160j
		cmp	ax, 200h
		jnz	short loc_18ECD
		jmp	loc_18F52
; ---------------------------------------------------------------------------

loc_18ECD:				; CODE XREF: sub_18D60+168j
		cmp	ax, 300h
		jnz	short loc_18EFA
		mov	ax, [bp+var_C]
		mov	[bp+var_E], ax
		mov	ax, [bp+var_8]
		neg	ax
		mov	[bp+var_C], ax
		mov	ax, [bp+var_E]
		mov	[bp+var_8], ax
		mov	ax, [bp+var_22]
		mov	[bp+var_E], ax
		mov	ax, [bp+var_1E]
		neg	ax
		mov	[bp+var_22], ax
		mov	ax, [bp+var_E]

loc_18EF7:				; CODE XREF: sub_18D60+239j
		mov	[bp+var_1E], ax

loc_18EFA:				; CODE XREF: sub_18D60+170j
					; sub_18D60+212j
		mov	bx, [bp+arg_0]
		les	si, dword_4563C
		mov	al, es:[bx+si]
		mov	[bp+var_16], al
		les	si, dword_459DA
		mov	al, es:[bx+si]
		mov	byte ptr [bp+var_1A], al
		cmp	[bp+var_A], 0FFFFh
		jz	short loc_18F3B
		mov	bl, al
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_16]
		sub	ah, ah
		add	bx, ax
		les	si, dword_454BC
		cmp	byte ptr es:[bx+si], 6
		jnz	short loc_18F3B
		mov	ax, word_3B8EA
		add	[bp+var_A], ax
		add	[bp+var_20], ax

loc_18F3B:				; CODE XREF: sub_18D60+1B5j
					; sub_18D60+1D0j
		mov	bx, [bp+var_26]
		test	byte ptr [bx+0Bh], 1
		jz	short loc_18F9C
		mov	bl, byte ptr [bp+var_1A]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx-7E84h]
		jmp	short loc_18FA7
; ---------------------------------------------------------------------------
		align 2

loc_18F52:				; CODE XREF: sub_18D60+16Aj
		mov	ax, [bp+var_8]
		neg	ax
		mov	[bp+var_8], ax
		mov	ax, [bp+var_C]
		neg	ax
		mov	[bp+var_C], ax
		mov	ax, [bp+var_1E]
		neg	ax
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_22]
		neg	ax
		mov	[bp+var_22], ax
		jmp	short loc_18EFA
; ---------------------------------------------------------------------------

loc_18F74:				; CODE XREF: sub_18D60+162j
		mov	ax, [bp+var_C]
		mov	[bp+var_E], ax
		mov	ax, [bp+var_8]
		mov	[bp+var_C], ax
		mov	ax, [bp+var_E]
		neg	ax
		mov	[bp+var_8], ax
		mov	ax, [bp+var_22]
		mov	[bp+var_E], ax
		mov	ax, [bp+var_1E]
		mov	[bp+var_22], ax
		mov	ax, [bp+var_E]
		neg	ax
		jmp	loc_18EF7
; ---------------------------------------------------------------------------

loc_18F9C:				; CODE XREF: sub_18D60+1E2j
		mov	bl, byte ptr [bp+var_1A]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx-55EAh]

loc_18FA7:				; CODE XREF: sub_18D60+1EFj
		add	[bp+var_8], si
		add	[bp+var_1E], si
		mov	bx, [bp+var_26]
		test	byte ptr [bx+0Bh], 2
		jz	short loc_18FC4
		mov	bl, [bp+var_16]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx+7558h]
		jmp	short loc_18FCF
; ---------------------------------------------------------------------------
		align 2

loc_18FC4:				; CODE XREF: sub_18D60+254j
		mov	bl, [bp+var_16]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx-599Eh]

loc_18FCF:				; CODE XREF: sub_18D60+261j
		add	[bp+var_C], si
		add	[bp+var_22], si
		mov	ax, [bp+var_22]
		cwd
		mov	cx, ax
		mov	ax, [bp+var_C]
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	bx, [bp+arg_2]
		mov	[bx], ax
		cmp	[bp+var_A], 0FFFFh
		jnz	short loc_18FFE
		mov	bx, [bp+arg_2]
		mov	word ptr [bx+2], 0FFFFh
		jmp	short loc_19018
; ---------------------------------------------------------------------------

loc_18FFE:				; CODE XREF: sub_18D60+292j
		mov	ax, [bp+var_20]
		cwd
		mov	cx, ax
		mov	ax, [bp+var_A]
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	bx, [bp+arg_2]
		mov	[bx+2],	ax

loc_19018:				; CODE XREF: sub_18D60+29Cj
		mov	ax, [bp+var_1E]
		cwd
		mov	cx, ax
		mov	ax, [bp+var_8]
		mov	bx, dx
		cwd
		add	ax, cx
		adc	dx, bx
		sar	dx, 1
		rcr	ax, 1
		mov	bx, [bp+arg_2]
		mov	[bx+4],	ax
		mov	bx, [bp+arg_2]
		lea	di, [bx+6]
		lea	si, [bp+var_C]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		mov	bx, [bp+arg_2]
		lea	di, [bx+0Ch]
		lea	si, [bp+var_22]
		movsw
		movsw
		movsw
		mov	bx, [bp+arg_2]
		mov	ax, [bp+var_24]
		mov	[bx+12h], ax
		mov	al, [bp+arg_4]
		cbw
		mov	cl, [bp+var_18]
		sub	ch, ch
		dec	cx
		cmp	cx, ax
		jnz	short loc_1906C
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_1906C:				; CODE XREF: sub_18D60+301j
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_18D60	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19074	proc far		; CODE XREF: sub_14DA2+1785p
					; sub_14DA2+1894p ...

var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= byte ptr -24h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 2Ah
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bx+6]
		mov	bx, [bp+arg_4]
		add	si, [bx+6]
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_6]
		mov	ax, [di]
		cmp	[bx], ax
		jl	short loc_19098
		mov	ax, [bx]
		mov	bx, di

loc_19098:				; CODE XREF: sub_19074+1Ej
		sub	ax, [bx]
		cmp	ax, si
		jg	short loc_190D2
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_6]
		mov	ax, [di+4]
		cmp	[bx+4],	ax
		jl	short loc_190B1
		mov	ax, [bx+4]
		mov	bx, di

loc_190B1:				; CODE XREF: sub_19074+36j
		sub	ax, [bx+4]
		cmp	ax, si
		jg	short loc_190D2
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_6]
		mov	ax, [di+2]
		cmp	[bx+2],	ax
		jl	short loc_190CB
		mov	ax, [bx+2]
		mov	bx, di

loc_190CB:				; CODE XREF: sub_19074+50j
		sub	ax, [bx+2]
		cmp	ax, si
		jle	short loc_190DA

loc_190D2:				; CODE XREF: sub_19074+28j
					; sub_19074+42j ...
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_190DA:				; CODE XREF: sub_19074+5Cj
		mov	bx, [bp+arg_2]
		mov	ax, [bx]
		mov	bx, [bp+arg_6]
		sub	ax, [bx]
		mov	[bp+var_2A], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+2]
		mov	bx, [bp+arg_6]
		sub	ax, [bx+2]
		mov	[bp+var_28], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+4]
		mov	bx, [bp+arg_6]
		sub	ax, [bx+4]
		mov	[bp+var_26], ax
		lea	ax, [bp+var_2A]
		push	ax
		call	sub_2EA08
		add	sp, 2
		cmp	ax, si
		ja	short loc_190D2
		sub	ax, ax
		push	ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+0Ah]
		neg	ax
		push	ax
		mov	ax, [bx+8]
		neg	ax
		push	ax
		mov	ax, [bx+6]
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_6], 0
		jmp	short loc_191B2
; ---------------------------------------------------------------------------

loc_1913E:				; CODE XREF: sub_19074+153j
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		neg	ax

loc_19145:				; CODE XREF: sub_19074+15Bj
		mov	[bp+var_C], ax
		mov	[bp+var_A], 0
		mov	al, [bp+var_6]
		cbw
		mov	bx, ax
		shl	bx, 1
		cmp	word ptr [bx+69Ch], 0
		jnz	short loc_19164
		mov	bx, [bp+arg_0]
		mov	ax, [bx+4]
		jmp	short loc_1916C
; ---------------------------------------------------------------------------

loc_19164:				; CODE XREF: sub_19074+E6j
		mov	bx, [bp+arg_0]
		mov	ax, [bx+4]
		neg	ax

loc_1916C:				; CODE XREF: sub_19074+EEj
		mov	[bp+var_8], ax
		lea	ax, [bp+var_2A]
		push	ax
		push	[bp+var_4]
		lea	ax, [bp+var_C]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	bx, [bp+arg_2]
		mov	ax, [bx]
		add	[bp+var_2A], ax
		mov	ax, [bx+2]
		add	[bp+var_28], ax
		mov	ax, [bx+4]
		add	[bp+var_26], ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		push	si
		lea	di, [bp+di+var_24]
		lea	si, [bp+var_2A]
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		pop	si
		inc	[bp+var_6]

loc_191B2:				; CODE XREF: sub_19074+C8j
		cmp	[bp+var_6], 4
		jge	short loc_191D2
		mov	al, [bp+var_6]
		cbw
		mov	bx, ax
		shl	bx, 1
		cmp	word ptr [bx+694h], 0
		jz	short loc_191CA
		jmp	loc_1913E
; ---------------------------------------------------------------------------

loc_191CA:				; CODE XREF: sub_19074+151j
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		jmp	loc_19145
; ---------------------------------------------------------------------------

loc_191D2:				; CODE XREF: sub_19074+142j
		mov	ax, 1
		push	ax
		mov	bx, [bp+arg_6]
		push	word ptr [bx+0Ah]
		push	word ptr [bx+8]
		push	word ptr [bx+6]
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_6], 0
		jmp	short loc_191F7
; ---------------------------------------------------------------------------
		align 2

loc_191F4:				; CODE XREF: sub_19074+1CDj
					; sub_19074+1D8j ...
		inc	[bp+var_6]

loc_191F7:				; CODE XREF: sub_19074+17Dj
		cmp	[bp+var_6], 4
		jge	short loc_1927A
		mov	al, [bp+var_6]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		mov	bx, [bp+arg_6]
		mov	ax, [bx]
		sub	ax, [di-24h]
		mov	[bp+var_C], ax
		mov	ax, [bx+2]
		sub	ax, [di-22h]
		mov	[bp+var_A], ax
		mov	ax, [bx+4]
		sub	ax, [di-20h]
		mov	[bp+var_8], ax
		lea	ax, [bp+var_2A]
		push	ax
		push	[bp+var_4]
		lea	ax, [bp+var_C]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_28], 0
		jl	short loc_191F4
		mov	bx, [bp+arg_4]
		mov	ax, [bp+var_28]
		cmp	[bx+2],	ax
		jl	short loc_191F4
		mov	di, [bx]
		mov	ax, di
		neg	ax
		cmp	[bp+var_2A], ax
		jl	short loc_191F4
		cmp	[bp+var_2A], di
		jg	short loc_191F4
		mov	ax, [bx+4]
		neg	ax
		cmp	ax, [bp+var_26]
		jg	short loc_191F4
		mov	ax, [bp+var_26]
		cmp	[bx+4],	ax
		jl	short loc_191F4

loc_19270:				; CODE XREF: sub_19074+365j
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_1927A:				; CODE XREF: sub_19074+187j
		sub	ax, ax
		push	ax
		mov	bx, [bp+arg_6]
		mov	ax, [bx+0Ah]
		neg	ax
		push	ax
		mov	ax, [bx+8]
		neg	ax
		push	ax
		mov	ax, [bx+6]
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_6], 0
		jmp	short loc_19318
; ---------------------------------------------------------------------------
		align 2

loc_192A4:				; CODE XREF: sub_19074+2B9j
		mov	bx, [bp+arg_4]
		mov	ax, [bx]
		neg	ax

loc_192AB:				; CODE XREF: sub_19074+2C1j
		mov	[bp+var_C], ax
		mov	[bp+var_A], 0
		mov	al, [bp+var_6]
		cbw
		mov	bx, ax
		shl	bx, 1
		cmp	word ptr [bx+69Ch], 0
		jnz	short loc_192CA
		mov	bx, [bp+arg_4]
		mov	ax, [bx+4]
		jmp	short loc_192D2
; ---------------------------------------------------------------------------

loc_192CA:				; CODE XREF: sub_19074+24Cj
		mov	bx, [bp+arg_4]
		mov	ax, [bx+4]
		neg	ax

loc_192D2:				; CODE XREF: sub_19074+254j
		mov	[bp+var_8], ax
		lea	ax, [bp+var_2A]
		push	ax
		push	[bp+var_4]
		lea	ax, [bp+var_C]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	bx, [bp+arg_6]
		mov	ax, [bx]
		add	[bp+var_2A], ax
		mov	ax, [bx+2]
		add	[bp+var_28], ax
		mov	ax, [bx+4]
		add	[bp+var_26], ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, ax
		shl	di, 1
		push	si
		lea	di, [bp+di+var_24]
		lea	si, [bp+var_2A]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	si
		inc	[bp+var_6]

loc_19318:				; CODE XREF: sub_19074+22Dj
		cmp	[bp+var_6], 4
		jge	short loc_19338
		mov	al, [bp+var_6]
		cbw
		mov	bx, ax
		shl	bx, 1
		cmp	word ptr [bx+694h], 0
		jz	short loc_19330
		jmp	loc_192A4
; ---------------------------------------------------------------------------

loc_19330:				; CODE XREF: sub_19074+2B7j
		mov	bx, [bp+arg_4]
		mov	ax, [bx]
		jmp	loc_192AB
; ---------------------------------------------------------------------------

loc_19338:				; CODE XREF: sub_19074+2A8j
		mov	ax, 1
		push	ax
		mov	bx, [bp+arg_2]
		push	word ptr [bx+0Ah]
		push	word ptr [bx+8]
		push	word ptr [bx+6]
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_6], 0
		jmp	short loc_1935D
; ---------------------------------------------------------------------------
		align 2

loc_1935A:				; CODE XREF: sub_19074+336j
					; sub_19074+341j ...
		inc	[bp+var_6]

loc_1935D:				; CODE XREF: sub_19074+2E3j
		cmp	[bp+var_6], 4
		jl	short loc_19366
		jmp	loc_190D2
; ---------------------------------------------------------------------------

loc_19366:				; CODE XREF: sub_19074+2EDj
		mov	al, [bp+var_6]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		add	di, bp
		mov	bx, [bp+arg_2]
		mov	ax, [bx]
		sub	ax, [di-24h]
		mov	[bp+var_C], ax
		mov	ax, [bx+2]
		sub	ax, [di-22h]
		mov	[bp+var_A], ax
		mov	ax, [bx+4]
		sub	ax, [di-20h]
		mov	[bp+var_8], ax
		lea	ax, [bp+var_2A]
		push	ax
		push	[bp+var_4]
		lea	ax, [bp+var_C]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_28], 0
		jl	short loc_1935A
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_28]
		cmp	[bx+2],	ax
		jl	short loc_1935A
		mov	di, [bx]
		mov	ax, di
		neg	ax
		cmp	[bp+var_2A], ax
		jl	short loc_1935A
		cmp	[bp+var_2A], di
		jg	short loc_1935A
		mov	ax, [bx+4]
		neg	ax
		cmp	ax, [bp+var_26]
		jg	short loc_1935A
		mov	ax, [bp+var_26]
		cmp	[bx+4],	ax
		jl	short loc_193DC
		jmp	loc_19270
; ---------------------------------------------------------------------------

loc_193DC:				; CODE XREF: sub_19074+363j
		jmp	loc_1935A
sub_19074	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_193E0	proc far		; CODE XREF: sub_1D93C+14EP
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		mov	ax, 0FFFDh
		push	ax
		push	cs
		call	near ptr sub_16B02
		add	sp, 2
		sub	si, si
		mov	byte_44889, 2
		mov	word_454C2, offset unk_3B1C0
		mov	word_454C4, seg	seg038
		mov	byte_4499A, 1
		mov	byte_4499E, 1Ch
		les	bx, dword_449D4
		mov	byte ptr es:[bx], 7
		les	bx, dword_4563C
		mov	byte ptr es:[bx], 1
		les	bx, dword_459DA
		mov	al, byte_4499E
		mov	es:[bx], al
		les	bx, dword_454D6
		mov	byte ptr es:[bx], 0
		les	bx, dword_449D4
		mov	byte ptr es:[bx+1], 6
		les	bx, dword_4563C
		mov	byte ptr es:[bx+1], 0
		les	bx, dword_459DA
		mov	al, byte_4499E
		mov	es:[bx+1], al
		les	bx, dword_454D6
		mov	byte ptr es:[bx+1], 0
		les	bx, dword_449D4
		mov	byte ptr es:[bx+2], 8
		les	bx, dword_4563C
		mov	byte ptr es:[bx+2], 0
		les	bx, dword_459DA
		mov	al, byte_4499E
		inc	al
		mov	es:[bx+2], al
		les	bx, dword_454D6
		mov	byte ptr es:[bx+2], 0
		les	bx, dword_449D4
		mov	byte ptr es:[bx+3], 9
		les	bx, dword_4563C
		mov	byte ptr es:[bx+3], 1
		les	bx, dword_459DA
		mov	al, byte_4499E
		inc	al
		mov	es:[bx+3], al
		les	bx, dword_454D6
		mov	byte ptr es:[bx+3], 0
		les	bx, dword_449D4
		mov	byte ptr es:[bx+4], 7
		les	bx, dword_4563C
		mov	byte ptr es:[bx+4], 1
		les	bx, dword_459DA
		mov	al, byte_4499E
		mov	es:[bx+4], al
		les	bx, dword_454D6
		mov	byte ptr es:[bx+4], 0
		les	bx, dword_43942
		mov	es:[bx], si
		les	bx, dword_43942
		mov	word ptr es:[bx+2], 1
		les	bx, dword_43942
		mov	word ptr es:[bx+4], 2
		les	bx, dword_43942
		mov	word ptr es:[bx+6], 3
		les	bx, dword_43942
		mov	word ptr es:[bx+8], 4
		les	bx, dword_43942
		mov	word ptr es:[bx+0Ah], 1
		les	bx, dword_43942
		mov	word ptr es:[bx+0Ch], 2
		les	bx, dword_43942
		mov	word ptr es:[bx+0Eh], 3
		les	bx, dword_43942
		mov	word ptr es:[bx+10h], 4
		les	bx, dword_43942
		mov	word ptr es:[bx+12h], 1
		les	bx, dword_43942
		mov	word ptr es:[bx+14h], 2
		les	bx, dword_43942
		mov	word ptr es:[bx+16h], 3
		les	bx, dword_43942
		mov	word ptr es:[bx+18h], 4
		les	bx, dword_43942
		mov	es:[bx+1Ah], si
		les	bx, dword_43942
		mov	word ptr es:[bx+1Ch], 1
		les	bx, dword_43942
		mov	word ptr es:[bx+1Eh], 2
		les	bx, dword_43942
		mov	word ptr es:[bx+20h], 3
		les	bx, dword_43942
		mov	es:[bx+22h], si
		mov	byte_44D50, 0C8h ; '»'
		sub	ax, ax
		push	ax
		mov	ax, word_43924
		add	ax, 12Eh
		cwd
		mov	cl, 6

loc_1958C:				; CODE XREF: sub_193E0+1B2j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_1958C
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		mov	ax, 7700h
		mov	dx, 1
		push	dx
		push	ax
		mov	ax, dx
		push	ax
		mov	ax, 9ED0h
		push	ax
		mov	ax, 8F46h
		push	ax
		push	cs
		call	near ptr sub_16898
		add	sp, 14h
		mov	ax, 911Dh
		push	ax
		mov	al, byte_44784
		inc	byte_44784
		sub	ah, ah
		push	ax
		mov	ax, 8FEAh
		push	ax
		mov	bx, word_44700
		shl	bx, 1
		les	di, dword_43942
		push	word ptr es:[bx+di]
		push	cs
		call	near ptr sub_18D60
		add	sp, 8
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_193E0	endp


; =============== S U B	R O U T	I N E =======================================


sub_195E0	proc far		; CODE XREF: sub_1D93C+1B9P
		push	cs
		call	near ptr sub_14712
		retf
sub_195E0	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_195E6	proc far		; CODE XREF: sub_14712+64Ep
					; sub_14DA2+3BBp ...

var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, [bp+arg_2]
		or	ax, ax
		jz	short loc_195FC
		cmp	ax, 1
		jz	short loc_19612
		jmp	short loc_19601
; ---------------------------------------------------------------------------

loc_195FC:				; CODE XREF: sub_195E6+Dj
		mov	[bp+var_4], 8E76h

loc_19601:				; CODE XREF: sub_195E6+14j
					; sub_195E6+31j
		mov	bx, [bp+var_4]
		cmp	byte ptr [bx+0C9h], 0
		jz	short loc_1961A
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_19612:				; CODE XREF: sub_195E6+12j
		mov	[bp+var_4], 8F46h
		jmp	short loc_19601
; ---------------------------------------------------------------------------
		align 2

loc_1961A:				; CODE XREF: sub_195E6+23j
		mov	[bp+var_2], 0
		mov	ax, [bp+arg_0]
		cmp	ax, 1
		jz	short loc_1967F
		cmp	ax, 2
		jnz	short loc_1962E
		jmp	loc_196DE
; ---------------------------------------------------------------------------

loc_1962E:				; CODE XREF: sub_195E6+43j
		cmp	ax, 3
		jnz	short loc_19636
		jmp	loc_19730
; ---------------------------------------------------------------------------

loc_19636:				; CODE XREF: sub_195E6+4Bj
		cmp	ax, 4
		jz	short loc_19642
		cmp	ax, 5
		jz	short loc_19676
		jmp	short loc_1964E
; ---------------------------------------------------------------------------

loc_19642:				; CODE XREF: sub_195E6+53j
		mov	word_445CC, 1
		mov	word_445CE, 1

loc_1964E:				; CODE XREF: sub_195E6+5Aj
					; sub_195E6+D2j ...
		cmp	[bp+var_2], 0
		jz	short loc_19664
		mov	bx, [bp+var_4]
		mov	word ptr [bx+2Ch], 0
		mov	bx, [bp+var_4]
		mov	word ptr [bx+2Ah], 0

loc_19664:				; CODE XREF: sub_195E6+6Cj
		cmp	[bp+arg_2], 0
		jnz	short loc_1966D
		jmp	loc_19760
; ---------------------------------------------------------------------------

loc_1966D:				; CODE XREF: sub_195E6+82j
		mov	ax, word_445D4
		mov	word_445DC, ax
		jmp	loc_19766
; ---------------------------------------------------------------------------

loc_19676:				; CODE XREF: sub_195E6+58j
		mov	[bp+arg_0], 1
		mov	[bp+var_2], 1

loc_1967F:				; CODE XREF: sub_195E6+3Ej
		mov	bx, [bp+var_4]
		mov	byte ptr [bx+0C9h], 1
		sub	ax, ax
		push	ax
		mov	bx, [bp+var_4]
		push	word ptr [bx+18h]
		push	[bp+arg_2]
		push	cs
		call	near ptr sub_19A2C
		add	sp, 6
		cmp	[bp+arg_2], 0
		jnz	short loc_196B3
		mov	bx, [bp+var_4]
		mov	ax, [bx+2Ch]
		mov	word_445E0, ax
		mov	ax, word_449D0
		shl	ax, 1
		shl	ax, 1
		mov	word_445CE, ax

loc_196B3:				; CODE XREF: sub_195E6+B8j
		cmp	byte_454B8, 0
		jnz	short loc_1964E
		cmp	byte_459D8, 0
		jz	short loc_1964E
		cmp	[bp+arg_2], 0
		jnz	short loc_196CE
		push	word_43964
		jmp	short loc_196D2
; ---------------------------------------------------------------------------
		align 2

loc_196CE:				; CODE XREF: sub_195E6+DFj
		push	word_4408C

loc_196D2:				; CODE XREF: sub_195E6+E5j
		call	sub_272F4
		add	sp, 2
		jmp	loc_1964E
; ---------------------------------------------------------------------------
		align 2

loc_196DE:				; CODE XREF: sub_195E6+45j
		cmp	byte_454B8, 0
		jnz	short loc_19704
		cmp	byte_459D8, 0
		jz	short loc_19704
		cmp	[bp+arg_2], 0
		jnz	short loc_196F8
		push	word_43964
		jmp	short loc_196FC
; ---------------------------------------------------------------------------

loc_196F8:				; CODE XREF: sub_195E6+10Aj
		push	word_4408C

loc_196FC:				; CODE XREF: sub_195E6+110j
		call	sub_272F4
		add	sp, 2

loc_19704:				; CODE XREF: sub_195E6+FDj
					; sub_195E6+104j
		mov	bx, [bp+var_4]
		mov	byte ptr [bx+0C9h], 2
		mov	[bp+var_2], 1
		cmp	[bp+arg_2], 0
		jz	short loc_19719
		jmp	loc_1964E
; ---------------------------------------------------------------------------

loc_19719:				; CODE XREF: sub_195E6+12Ej
		mov	bx, [bp+var_4]
		mov	ax, [bx+2Ch]
		mov	word_445E0, ax
		mov	ax, word_449D0
		shl	ax, 1
		shl	ax, 1

loc_19729:				; CODE XREF: sub_195E6+169j
		mov	word_445CE, ax
		jmp	loc_1964E
; ---------------------------------------------------------------------------
		align 2

loc_19730:				; CODE XREF: sub_195E6+4Dj
		mov	bx, [bp+var_4]
		mov	byte ptr [bx+0C9h], 3
		cmp	[bp+arg_2], 0
		jnz	short loc_19752
		mov	ax, word_445D4
		add	ax, word_445DE
		add	ax, word_45A24
		mov	word_445D6, ax
		mov	ax, word_449D0
		jmp	short loc_19729
; ---------------------------------------------------------------------------
		align 2

loc_19752:				; CODE XREF: sub_195E6+156j
		mov	ax, word_445D4
		add	ax, word_45A24
		mov	word_445D8, ax
		jmp	loc_1964E
; ---------------------------------------------------------------------------
		align 2

loc_19760:				; CODE XREF: sub_195E6+84j
		mov	ax, word_445D4
		mov	word_445DA, ax

loc_19766:				; CODE XREF: sub_195E6+8Dj
		cmp	byte_4488A, 0
		jnz	short loc_19779
		cmp	[bp+arg_2], 0
		jnz	short loc_19779
		mov	al, byte ptr [bp+arg_0]
		mov	byte_4488A, al

loc_19779:				; CODE XREF: sub_195E6+185j
					; sub_195E6+18Bj
		test	byte_43966, 4
		jnz	short loc_1978D
		mov	di, 8BD8h
		mov	si, 8E60h
		push	ds
		pop	es
		assume es:dseg
		mov	cx, 0Bh
		repne movsw

loc_1978D:				; CODE XREF: sub_195E6+198j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_195E6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19794	proc far		; CODE XREF: sub_14DA2+21Ep
					; sub_14DA2+B09p ...

var_36		= dword	ptr -36h
var_32		= word ptr -32h
var_2E		= word ptr -2Eh
var_2C		= byte ptr -2Ch
var_1A		= byte ptr -1Ah
var_8		= byte ptr -8

		push	bp
		mov	bp, sp
		sub	sp, 36h
		push	di
		push	si
		cmp	word_44F4A, 0FFFFh
		jnz	short loc_197A6
		jmp	loc_198C2
; ---------------------------------------------------------------------------

loc_197A6:				; CODE XREF: sub_19794+Dj
		mov	ax, 22h	; '"'
		imul	word_44F4A
		add	ax, word_454C2
		mov	dx, word_454C4
		mov	word ptr [bp+var_36], ax
		mov	word ptr [bp+var_36+2],	dx
		les	bx, [bp+var_36]
		assume es:nothing
		mov	ax, word_44F44
		cmp	es:[bx+2], ax
		jnz	short loc_197D6
		mov	ax, word_44F42
		cmp	es:[bx], ax
		jnz	short loc_197D6
		mov	si, word_44F46
		jmp	short loc_19845
; ---------------------------------------------------------------------------
		align 2

loc_197D6:				; CODE XREF: sub_19794+31j
					; sub_19794+39j
		lea	ax, [bp+var_8]
		push	ax
		mov	ax, 8B62h
		push	ax
		mov	ax, 97C6h
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, 22h	; '"'
		imul	word_44F4A
		add	ax, word_454C2
		mov	dx, word_454C4
		add	ax, 10h
		push	si
		lea	di, [bp+var_1A]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 9
		repne movsw
		pop	ds
		pop	si
		lea	ax, [bp+var_2C]
		push	ax
		lea	ax, [bp+var_1A]
		push	ax
		call	sub_32A72
		add	sp, 4
		lea	ax, [bp+var_32]
		push	ax
		lea	ax, [bp+var_2C]
		push	ax
		lea	ax, [bp+var_8]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_2E]
		mov	ax, [bp+var_32]
		neg	ax
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	si, ax

loc_19845:				; CODE XREF: sub_19794+3Fj
		add	si, word_44F48
		jz	short loc_198A4
		cmp	word_3BE16, si
		jz	short loc_19866
		mov	ax, si
		neg	ax
		push	ax
		mov	ax, 55E8h
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	word_3BE16, si

loc_19866:				; CODE XREF: sub_19794+BBj
		lea	ax, [bp+var_32]
		push	ax
		mov	ax, 55E8h
		push	ax
		mov	ax, 97C6h
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, 97CCh
		push	ax
		mov	ax, 22h	; '"'
		imul	word_44F4A
		add	ax, word_454C2
		mov	dx, word_454C4
		add	ax, 10h
		push	dx
		push	ax
		lea	ax, [bp+var_32]

loc_19895:				; CODE XREF: sub_19794+12Bj
		push	ax
		push	cs
		call	near ptr sub_14D6C
		add	sp, 8
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_198A4:				; CODE XREF: sub_19794+B5j
		mov	ax, 97CCh
		push	ax
		mov	ax, 22h	; '"'
		imul	word_44F4A
		add	ax, word_454C2
		mov	dx, word_454C4
		add	ax, 10h
		push	dx
		push	ax
		mov	ax, 97C6h
		jmp	short loc_19895
; ---------------------------------------------------------------------------
		align 2

loc_198C2:				; CODE XREF: sub_19794+Fj
		cmp	word_44F48, 0
		jz	short loc_1990C
		mov	ax, word_3BE14
		cmp	word_44F48, ax
		jz	short loc_198EA
		mov	ax, word_44F48
		neg	ax
		push	ax
		mov	ax, 55D6h
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	ax, word_44F48
		mov	word_3BE14, ax

loc_198EA:				; CODE XREF: sub_19794+13Cj
		lea	ax, [bp+var_32]
		push	ax
		mov	ax, 55D6h
		push	ax
		mov	ax, 97C6h
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, 97CCh
		push	ax
		mov	ax, 8B62h
		push	ax
		lea	ax, [bp+var_32]
		jmp	short loc_19917
; ---------------------------------------------------------------------------
		align 2

loc_1990C:				; CODE XREF: sub_19794+133j
		mov	ax, 97CCh
		push	ax
		mov	ax, 8B62h
		push	ax
		mov	ax, 97C6h

loc_19917:				; CODE XREF: sub_19794+175j
		push	ax
		call	sub_328EE
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_19794	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19926	proc far		; CODE XREF: sub_14DA2+4AFp
					; sub_14DA2+92Ep ...

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10h
		mov	ax, word_44DC6
		cmp	[bp+arg_0], ax
		jnz	short loc_1993E
		mov	ax, word_44D64
		mov	dx, word_44D66
		jmp	short loc_1994C
; ---------------------------------------------------------------------------
		align 2

loc_1993E:				; CODE XREF: sub_19926+Cj
		mov	ax, 22h	; '"'
		imul	[bp+arg_0]
		add	ax, word_454C2
		mov	dx, word_454C4

loc_1994C:				; CODE XREF: sub_19926+15j
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		les	bx, [bp+var_4]
		mov	ax, es:[bx+6]
		add	ax, word_449EC
		mov	[bp+var_E], ax
		mov	ax, [bp+arg_4]
		sub	ax, [bp+var_E]
		mov	[bp+var_8], ax
		cmp	[bp+arg_0], 4
		jl	short loc_199AE
		mov	ax, es:[bx+4]
		add	ax, word_449E0
		mov	[bp+var_10], ax
		mov	ax, es:[bx+8]
		add	ax, word_449F6
		mov	[bp+var_C], ax
		mov	ax, [bp+arg_2]
		sub	ax, [bp+var_10]
		mov	[bp+var_A], ax
		mov	ax, [bp+arg_6]
		sub	ax, [bp+var_C]
		mov	[bp+var_6], ax
		mov	ax, bx
		add	ax, 0Ah
		push	dx
		push	ax
		push	[bp+var_6]
		push	[bp+var_8]
		push	[bp+var_A]
		push	cs
		call	near ptr sub_199B2
		add	sp, 0Ah

loc_199AE:				; CODE XREF: sub_19926+47j
		mov	sp, bp
		pop	bp
		retf
sub_19926	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_199B2	proc far		; CODE XREF: sub_19926+82p

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= dword	ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, 2000h
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_0]
		cwd
		push	dx
		push	ax
		les	bx, [bp+arg_6]
		mov	ax, es:[bx]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		mov	cx, ax
		mov	ax, [bp+arg_4]
		mov	bx, dx
		cwd
		push	dx
		push	ax
		les	si, [bp+arg_6]
		mov	ax, es:[si+4]
		cwd
		push	dx
		push	ax
		mov	si, cx
		mov	di, bx
		call	__aFlmul
		mov	cx, ax
		mov	ax, [bp+arg_2]
		mov	bx, dx
		cwd
		push	dx
		push	ax
		mov	ax, bx
		les	bx, [bp+arg_6]
		mov	dx, ax
		mov	ax, es:[bx+2]
		mov	[bp+var_4], cx
		mov	[bp+var_2], dx
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, [bp+var_4]
		adc	dx, [bp+var_2]
		add	ax, si
		adc	dx, di
		push	dx
		push	ax
		call	__aFldiv
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_199B2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19A2C	proc far		; CODE XREF: sub_14DA2+1968p
					; sub_195E6+AEp

var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_8		= word ptr -8
var_6		= word ptr -6
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	di
		push	si
		cmp	[bp+arg_0], 2
		jge	short loc_19A5E
		mov	ax, [bp+arg_2]
		mov	[bp+var_6], ax
		mov	[bp+var_2], 400h
		mov	[bp+var_E], 12h
		mov	ax, [bp+arg_0]
		shl	ax, 1
		shl	ax, 1
		add	ax, 4
		mov	[bp+var_10], ax
		mov	[bp+var_8], 6
		jmp	short loc_19A7B
; ---------------------------------------------------------------------------

loc_19A5E:				; CODE XREF: sub_19A2C+Cj
		mov	ax, [bp+arg_2]
		sub	ax, 60h	; '`'
		mov	[bp+var_6], ax
		mov	[bp+var_2], 0C0h ; '¿'
		mov	[bp+var_E], 8
		mov	[bp+var_10], 0
		mov	[bp+var_8], 1

loc_19A7B:				; CODE XREF: sub_19A2C+30j
		mov	byte_448BE, 1
		mov	[bp+var_12], 0
		sub	si, si

loc_19A87:				; CODE XREF: sub_19A2C+6Dj
		mov	bx, si
		shl	bx, 1
		cmp	word ptr [bx-6F4Eh], 0
		jnz	short loc_19A95
		inc	[bp+var_12]

loc_19A95:				; CODE XREF: sub_19A2C+64j
		inc	si
		cmp	si, 18h
		jl	short loc_19A87
		mov	ax, [bp+var_E]
		cmp	[bp+var_12], ax
		jle	short loc_19AA6
		mov	[bp+var_12], ax

loc_19AA6:				; CODE XREF: sub_19A2C+75j
		mov	[bp+var_C], 0
		sub	si, si
		jmp	short loc_19AB1
; ---------------------------------------------------------------------------
		align 2

loc_19AB0:				; CODE XREF: sub_19A2C+9Bj
					; sub_19A2C+16Aj
		inc	si

loc_19AB1:				; CODE XREF: sub_19A2C+81j
		cmp	si, 18h
		jl	short loc_19AB9
		jmp	loc_19B99
; ---------------------------------------------------------------------------

loc_19AB9:				; CODE XREF: sub_19A2C+88j
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, ax
		cmp	word ptr [bx-6F4Eh], 0
		jnz	short loc_19AB0
		mov	al, byte ptr [bp+arg_0]
		mov	[si-6E99h], al
		mov	al, byte ptr [bp+var_C]
		and	al, 3
		add	al, byte ptr [bp+var_10]
		mov	[si-6EB1h], al
		mov	ax, si
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_16], ax
		mov	bx, ax
		sub	ax, ax
		mov	[bx-72DAh], ax
		mov	[bx-72DCh], ax
		mov	bx, [bp+var_16]
		mov	[bx-727Ah], ax
		mov	[bx-727Ch], ax
		mov	bx, [bp+var_16]
		mov	[bx-721Ah], ax
		mov	[bx-721Ch], ax
		call	sub_19E7B
		shl	ax, 1
		shl	ax, 1
		mov	bx, [bp+var_14]
		mov	[bx-6FDEh], ax
		call	sub_19E7B
		shl	ax, 1
		shl	ax, 1
		mov	bx, si
		shl	bx, 1
		mov	[bx-6FAEh], ax
		mov	ax, [bp+var_12]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_C]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_2]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, [bp+var_6]
		and	ah, 3
		mov	bx, si
		shl	bx, 1
		mov	[bx-6F7Eh], ax
		call	sub_19E7B
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		mov	cl, 2
		sar	di, cl
		add	di, [bp+arg_4]
		add	di, 180h
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_18], ax
		mov	bx, ax
		mov	[bx-6F4Eh], di
		mov	ax, [bp+var_8]
		imul	di
		sar	ax, 1
		sar	ax, 1
		mov	bx, [bp+var_18]
		mov	[bx-6F1Eh], ax
		inc	[bp+var_C]
		mov	ax, [bp+var_12]
		cmp	[bp+var_C], ax
		jz	short loc_19B99
		jmp	loc_19AB0
; ---------------------------------------------------------------------------

loc_19B99:				; CODE XREF: sub_19A2C+8Aj
					; sub_19A2C+168j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_19A2C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19BA0	proc far		; CODE XREF: sub_17008+E1p

var_14		= word ptr -14h
var_12		= word ptr -12h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_4		= word ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	di
		push	si
		mov	[bp+var_2], 0
		sub	si, si
		jmp	short loc_19BC3
; ---------------------------------------------------------------------------

loc_19BB0:				; CODE XREF: sub_19BA0+E5j
		mov	[bp+var_2], 1
		mov	di, si
		shl	di, 1
		add	word ptr [di-6FDEh], 10h
		add	word ptr [di-6FAEh], 10h

loc_19BC2:				; CODE XREF: sub_19BA0+34j
					; sub_19BA0+F2j
		inc	si

loc_19BC3:				; CODE XREF: sub_19BA0+Ej
		cmp	si, 18h
		jl	short loc_19BCB
		jmp	loc_19C96
; ---------------------------------------------------------------------------

loc_19BCB:				; CODE XREF: sub_19BA0+26j
		mov	di, si
		shl	di, 1
		cmp	word ptr [di-6F4Eh], 0
		jz	short loc_19BC2
		mov	ax, 1
		push	ax
		push	word ptr [di-6F7Eh]
		sub	ax, ax
		push	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_4], ax
		mov	[bp+var_C], 0
		mov	[bp+var_A], 0
		mov	bx, si
		shl	bx, 1
		mov	ax, [bx-6F4Eh]
		mov	[bp+var_8], ax
		lea	ax, [bp+var_12]
		push	ax
		push	[bp+var_4]
		lea	ax, [bp+var_C]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	di, si
		mov	cl, 2
		shl	di, cl
		mov	ax, [bp+var_12]
		cwd
		add	[di-72DCh], ax
		adc	[di-72DAh], dx
		mov	ax, [bp+var_E]
		cwd
		add	[di-721Ch], ax
		adc	[di-721Ah], dx
		mov	ax, si
		shl	ax, 1
		add	ax, 90E2h
		mov	[bp+var_14], ax
		mov	bx, ax
		sub	word ptr [bx], 13h
		mov	bx, [bp+var_14]
		mov	ax, [bx]
		cwd
		add	[di-727Ch], ax
		adc	[di-727Ah], dx
		cmp	word_449D0, 0Ah
		jnz	short loc_19C6B
		mov	bx, [bp+var_14]
		sub	word ptr [bx], 13h
		mov	bx, [bp+var_14]
		mov	ax, [bx]
		cwd
		add	[di-727Ch], ax
		adc	[di-727Ah], dx

loc_19C6B:				; CODE XREF: sub_19BA0+B5j
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx-727Ch]
		mov	dx, [bx-727Ah]
		add	ax, word_445EA
		adc	dx, word_445EC
		or	dx, dx
		jl	short loc_19C88
		jmp	loc_19BB0
; ---------------------------------------------------------------------------

loc_19C88:				; CODE XREF: sub_19BA0+E3j
		mov	bx, si
		shl	bx, 1
		mov	word ptr [bx-6F4Eh], 0
		jmp	loc_19BC2
; ---------------------------------------------------------------------------
		align 2

loc_19C96:				; CODE XREF: sub_19BA0+28j
		mov	al, [bp+var_2]
		mov	byte_448BE, al
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_19BA0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19CA2	proc far		; CODE XREF: sub_11C42+3EBP
					; sub_1D93C+138P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	[bp+arg_4], 0
		jz	short loc_19CB3
		jmp	loc_19D36
; ---------------------------------------------------------------------------

loc_19CB3:				; CODE XREF: sub_19CA2+Cj
		mov	ax, 6A8h
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_28A8C
		add	sp, 6
		push	si
		mov	di, 0A6EAh
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		push	ds
		mov	ds, dx
		mov	cx, 184h
		repne movsw
		pop	ds
		pop	si
		mov	ax, word ptr dword_44D3E
		mov	dx, word ptr dword_44D3E+2
		mov	word_4615E, ax
		mov	word_46160, dx
		sub	si, si

loc_19CE7:				; CODE XREF: sub_19CA2+78j
		mov	ax, si
		cwd
		push	dx
		push	ax
		cwd
		push	dx
		push	ax
		mov	ax, word_45E92
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFlmul
		mov	cl, 9

loc_19D03:				; CODE XREF: sub_19CA2+67j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_19D03
		mov	bx, si
		shl	bx, 1
		les	di, dword_44D3E
		assume es:nothing
		mov	es:[bx+di], ax
		inc	si
		cmp	si, 40h	; '@'
		jl	short loc_19CE7
		mov	ax, 6ADh
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 8C14h
		jmp	loc_19DB6
; ---------------------------------------------------------------------------

loc_19D36:				; CODE XREF: sub_19CA2+Ej
		mov	ax, 6B2h
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_28A8C
		add	sp, 6
		push	si
		mov	di, 9ED0h
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		push	ds
		mov	ds, dx
		mov	cx, 184h
		repne movsw
		pop	ds
		pop	si
		mov	ax, word ptr dword_44D4A
		mov	dx, word ptr dword_44D4A+2
		mov	word_45944, ax
		mov	word_45946, dx
		sub	si, si

loc_19D6A:				; CODE XREF: sub_19CA2+FBj
		mov	ax, si
		cwd
		push	dx
		push	ax
		cwd
		push	dx
		push	ax
		mov	ax, word_45678
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFlmul
		mov	cl, 9

loc_19D86:				; CODE XREF: sub_19CA2+EAj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_19D86
		mov	bx, si
		shl	bx, 1
		les	di, dword_44D4A
		assume es:nothing
		mov	es:[bx+di], ax
		inc	si
		cmp	si, 40h	; '@'
		jl	short loc_19D6A
		mov	ax, 6B7h
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_28A8C
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 81F7h

loc_19DB6:				; CODE XREF: sub_19CA2+91j
		push	ax
		call	sub_28AD6
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_19CA2	endp

seg001		ends

; ===========================================================================

; Segment type:	Pure code
seg002		segment	byte public 'CODE' use16
		assume cs:seg002
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19DC6	proc far		; CODE XREF: sub_17A78+4E5P

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		push	bp
		mov	cx, [bp+arg_0]
		mov	ax, [bp+arg_2]
		cmp	[bp+arg_6], 0
		jnz	short loc_19DDB
		mul	[bp+arg_4]
		mov	cx, dx

loc_19DDB:				; CODE XREF: sub_19DC6+Ej
		cmp	cx, [bp+arg_8]
		jnb	short loc_19DE3
		mov	cx, [bp+arg_8]

loc_19DE3:				; CODE XREF: sub_19DC6+18j
		mov	ax, cx
		pop	bp
		pop	bp
		retf
sub_19DC6	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	bp
		xor	ax, ax
		mov	bx, [bp+6]
		or	bx, bx
		jz	short loc_19DFC
		jl	short loc_19DFB
		inc	ax
		pop	bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_19DFB:				; CODE XREF: seg002:0035j
		dec	ax

loc_19DFC:				; CODE XREF: seg002:0033j
		pop	bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		int	61h		; reserved for user interrupt
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		int	60h
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	bp
		push	si
		mov	si, [bp+6]
		int	62h		; reserved for user interrupt
		pop	si
		pop	bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19E21	proc far		; CODE XREF: _main+26CP sub_16F3A+ADP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	bp
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		mov	byte_4594A, al
		mov	al, [bx+1]
		mov	byte_4594B, al
		mov	al, [bx+2]
		mov	byte_4594C, al
		mov	al, [bx+3]
		mov	byte_4594D, al
		mov	al, [bx+4]
		mov	byte_4594E, al
		mov	al, [bx+5]
		mov	byte_4594F, al
		pop	bp
		pop	bp
		retf
sub_19E21	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19E4E	proc far		; CODE XREF: sub_17008+39P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	bp
		mov	bx, [bp+arg_0]
		mov	al, byte_4594A
		mov	[bx], al
		mov	al, byte_4594B
		mov	[bx+1],	al
		mov	al, byte_4594C
		mov	[bx+2],	al
		mov	al, byte_4594D
		mov	[bx+3],	al
		mov	al, byte_4594E
		mov	[bx+4],	al
		mov	al, byte_4594F
		mov	[bx+5],	al
		pop	bp
		pop	bp
		retf
sub_19E4E	endp


; =============== S U B	R O U T	I N E =======================================


sub_19E7B	proc far		; CODE XREF: sub_13178+716P
					; sub_13178:loc_138A0P	...
		mov	al, byte_4594F
		add	al, byte_4594E
		mov	byte_4594E, al
		add	al, byte_4594D
		mov	byte_4594D, al
		add	al, byte_4594C
		mov	byte_4594C, al
		add	al, byte_4594B
		mov	byte_4594B, al
		add	al, byte_4594A
		mov	byte_4594A, al
		inc	byte_4594F
		jnz	short loc_19EC3
		inc	byte_4594E
		jnz	short loc_19EC3
		inc	byte_4594D
		jnz	short loc_19EC3
		inc	byte_4594C
		jnz	short loc_19EC3
		inc	byte_4594B
		jnz	short loc_19EC3
		inc	byte_4594A

loc_19EC3:				; CODE XREF: sub_19E7B+2Aj
					; sub_19E7B+30j ...
		mov	al, byte_4594A
		xor	ah, ah
		retf
sub_19E7B	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, [bp+4]
		mov	word_3BE30, ax
		mov	ax, [bp+2]
		mov	word_3BE32, ax
		inc	ax
		inc	ax
		mov	[bp+2],	ax
		xor	ax, ax
		pop	ds
		pop	bp
		iret

; =============== S U B	R O U T	I N E =======================================


sub_19EE8	proc far		; CODE XREF: _main+16P
		push	ds
		mov	ah, 35h	; '5'
		mov	al, 0
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_3BE2C+2,	es
		mov	word ptr dword_3BE2C, bx
		mov	dx, seg	seg002
		mov	ds, dx
		assume ds:seg002
		mov	dx, 109h
		mov	ah, 25h	; '%'
		mov	al, 0
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		retf
sub_19EE8	endp

; ---------------------------------------------------------------------------
		db 1Eh,	0C5h, 16h, 0BCh, 6, 0B4h, 25h, 0B0h, 0,	0CDh, 21h
seg002		ends

; ---------------------------------------------------------------------------
; ===========================================================================

; Segment type:	Pure code
seg003		segment	byte public 'CODE' use16
		assume cs:seg003
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		pop	ds
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19F14	proc far		; CODE XREF: sub_21B7A+565P

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		cmp	byte_46436, 0
		jz	short loc_19F26
		jmp	loc_1A090
; ---------------------------------------------------------------------------

loc_19F26:				; CODE XREF: sub_19F14+Dj
		call	sub_28F3C
		cmp	byte_454A4, 0
		jz	short loc_19F35
		jmp	loc_1A046
; ---------------------------------------------------------------------------

loc_19F35:				; CODE XREF: sub_19F14+1Cj
		cmp	word_44984, 0
		jnz	short loc_19F3F
		jmp	loc_1A030
; ---------------------------------------------------------------------------

loc_19F3F:				; CODE XREF: sub_19F14+26j
		sub	si, si

loc_19F41:				; CODE XREF: sub_19F14+36j
		mov	byte ptr [si-6250h], 3
		inc	si
		cmp	si, 0Fh
		jl	short loc_19F41
		cmp	byte_3B8FA, 4
		jnz	short loc_19F59
		mov	ax, word_463D6
		mov	word_449FE, ax

loc_19F59:				; CODE XREF: sub_19F14+3Dj
		mov	ax, word_463D6
		cmp	word_449FE, ax
		jnz	short loc_19F8B
		mov	ax, word_45982
		cmp	word_45574, ax
		jnz	short loc_19F8B
		mov	ax, word_45984
		cmp	word_45576, ax
		jnz	short loc_19F8B
		mov	ax, word_45986
		cmp	word_45578, ax
		jnz	short loc_19F8B
		mov	ax, word_45988
		cmp	word_4557A, ax
		jnz	short loc_19F8B
		mov	byte_45525, 0

loc_19F8B:				; CODE XREF: sub_19F14+4Cj
					; sub_19F14+55j ...
		mov	byte_46166, 0
		mov	ax, 965Eh
		push	ax
		mov	ax, 0A9F6h
		push	ax
		push	[bp+arg_0]
		mov	ax, 0A1EAh
		push	ax
		mov	ax, 9DDCh
		push	ax
		mov	ax, 9DB0h
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_26A52
		add	sp, 0Eh
		cmp	byte_46166, 0
		jz	short loc_1A01E
		mov	ax, 9E64h
		push	ax
		mov	ax, 965Eh
		push	ax
		mov	al, byte_46166
		cbw
		push	ax
		call	sub_26B4A
		add	sp, 6
		call	sub_28DB6
		sub	si, si
		jmp	short loc_1A013
; ---------------------------------------------------------------------------

loc_19FD8:				; CODE XREF: sub_19F14+105j
		mov	bx, si
		shl	bx, 1
		mov	ax, [bx-619Ch]
		mov	cl, 3
		shl	ax, cl
		add	ax, 965Eh
		mov	[bp+var_2], ax
		mov	bx, ax
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		inc	si

loc_1A013:				; CODE XREF: sub_19F14+C2j
		mov	al, byte_46166
		cbw
		cmp	ax, si
		jg	short loc_19FD8
		jmp	short loc_1A05E
; ---------------------------------------------------------------------------
		align 2

loc_1A01E:				; CODE XREF: sub_19F14+A4j
		mov	bx, [bp+arg_0]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		jmp	short loc_1A03E
; ---------------------------------------------------------------------------

loc_1A030:				; CODE XREF: sub_19F14+28j
		mov	bx, [bp+arg_0]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]

loc_1A03E:				; CODE XREF: sub_19F14+11Aj
		call	sub_3327F
		add	sp, 8

loc_1A046:				; CODE XREF: sub_19F14+1Ej
		call	sub_28DB6
		les	bx, dword_44D26
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4

loc_1A05E:				; CODE XREF: sub_19F14+107j
		call	sub_28D9E
		cmp	word_44984, 0
		jz	short loc_1A090
		mov	ax, word_463D6
		mov	word_449FE, ax
		sub	si, si

loc_1A072:				; CODE XREF: sub_19F14+17Aj
		mov	di, si
		mov	cl, 3
		shl	di, cl
		push	si
		push	di
		lea	si, [di-6224h]
		lea	di, [di-5E16h]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	si
		cmp	si, 0Fh
		jl	short loc_1A072

loc_1A090:				; CODE XREF: sub_19F14+Fj
					; sub_19F14+154j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_19F14	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1A096	proc far		; CODE XREF: sub_21B7A+27DP
					; sub_23702+19CP
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	word_44984, 0
		jz	short loc_1A0EE
		push	si
		mov	di, 9DDCh
		mov	si, 924h
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	si
		push	si
		mov	di, 0A1EAh
		mov	si, 924h
		movsw
		movsw
		movsw
		movsw
		pop	si
		mov	si, 1

loc_1A0C2:				; CODE XREF: sub_1A096+56j
		mov	di, si
		mov	cl, 3
		shl	di, cl
		push	si
		push	di
		lea	di, [di-6224h]
		mov	si, 3394h
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		push	si
		push	di
		lea	di, [di-5E16h]
		mov	si, 3394h
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	si
		cmp	si, 0Fh
		jl	short loc_1A0C2

loc_1A0EE:				; CODE XREF: sub_1A096+Dj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1A096	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1A0F4	proc far		; CODE XREF: sub_21B7A+4F3P

var_154		= dword	ptr -154h
var_150		= word ptr -150h
var_14E		= word ptr -14Eh
var_14C		= byte ptr -14Ch
var_134		= byte ptr -134h
var_132		= word ptr -132h
var_130		= byte ptr -130h
var_12E		= word ptr -12Eh
var_12C		= byte ptr -12Ch
var_12A		= word ptr -12Ah
var_128		= word ptr -128h
var_126		= word ptr -126h
var_124		= word ptr -124h
var_122		= byte ptr -122h
var_120		= byte ptr -120h
var_10E		= word ptr -10Eh
var_10C		= byte ptr -10Ch
var_10A		= byte ptr -10Ah
var_108		= dword	ptr -108h
var_104		= word ptr -104h
var_102		= byte ptr -102h
var_100		= byte ptr -100h
var_FE		= word ptr -0FEh
var_FC		= byte ptr -0FCh
var_FA		= word ptr -0FAh
var_F6		= byte ptr -0F6h
var_F4		= word ptr -0F4h
var_F2		= word ptr -0F2h
var_F0		= word ptr -0F0h
var_EE		= word ptr -0EEh
var_EC		= word ptr -0ECh
var_EA		= word ptr -0EAh
var_E8		= word ptr -0E8h
var_E4		= byte ptr -0E4h
var_E2		= byte ptr -0E2h
var_E0		= word ptr -0E0h
var_DE		= word ptr -0DEh
var_DC		= byte ptr -0DCh
var_DB		= byte ptr -0DBh
var_DA		= word ptr -0DAh
var_D8		= byte ptr -0D8h
var_D6		= word ptr -0D6h
var_D4		= byte ptr -0D4h
var_BC		= byte ptr -0BCh
var_A4		= word ptr -0A4h
var_A2		= word ptr -0A2h
var_A0		= byte ptr -0A0h
var_8E		= byte ptr -8Eh
var_86		= byte ptr -86h
var_6E		= byte ptr -6Eh
var_6C		= word ptr -6Ch
var_6A		= byte ptr -6Ah
var_62		= byte ptr -62h
var_60		= byte ptr -60h
var_5E		= word ptr -5Eh
var_5C		= word ptr -5Ch
var_5A		= word ptr -5Ah
var_58		= word ptr -58h
var_56		= word ptr -56h
var_54		= word ptr -54h
var_52		= word ptr -52h
var_50		= word ptr -50h
var_4E		= byte ptr -4Eh
var_4C		= byte ptr -4Ch
var_4A		= byte ptr -4Ah
var_48		= word ptr -48h
var_46		= word ptr -46h
var_44		= word ptr -44h
var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= byte ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= word ptr -34h
var_32		= byte ptr -32h
var_1A		= byte ptr -1Ah
var_2		= word ptr -2
arg_0		= byte ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 154h
		push	di
		push	si
		mov	[bp+var_DC], 0
		mov	[bp+var_DB], 0
		cmp	byte_46436, 0
		jz	short loc_1A122
		cmp	[bp+arg_0], 0
		jz	short loc_1A122
		mov	word_3B808, 9DDCh
		mov	word_3B80A, 0A1EAh
		jmp	short loc_1A12E
; ---------------------------------------------------------------------------

loc_1A122:				; CODE XREF: sub_1A0F4+18j
					; sub_1A0F4+1Ej
		mov	word_3B80A, 9DDCh
		mov	word_3B808, 0A1EAh

loc_1A12E:				; CODE XREF: sub_1A0F4+2Cj
		cmp	word_44984, 0
		jz	short loc_1A162
		mov	[bp+var_122], 8
		mov	[bp+var_3E], 9294h
		sub	si, si
		jmp	short loc_1A145
; ---------------------------------------------------------------------------
		align 2

loc_1A144:				; CODE XREF: sub_1A0F4+6Cj
		inc	si

loc_1A145:				; CODE XREF: sub_1A0F4+4Dj
		cmp	si, 0Fh
		jge	short loc_1A167
		mov	ax, [bp+var_3E]
		add	[bp+var_3E], 8
		push	si
		push	di
		mov	di, ax
		mov	si, 3394h
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		jmp	short loc_1A144
; ---------------------------------------------------------------------------

loc_1A162:				; CODE XREF: sub_1A0F4+3Fj
		mov	[bp+var_122], 0

loc_1A167:				; CODE XREF: sub_1A0F4+54j
		cmp	byte_463E0, 0
		jnz	short loc_1A1BE
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_1A177:				; CODE XREF: sub_1A0F4+89j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A177
		mov	[bp+var_EC], ax
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_1A18C:				; CODE XREF: sub_1A0F4+9Ej
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A18C
		mov	[bp+var_EA], ax
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_1A1A1:				; CODE XREF: sub_1A0F4+B3j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A1A1
		mov	[bp+var_E8], ax
		mov	ax, word_44600
		mov	[bp+var_46], ax
		mov	ax, word_44602
		mov	[bp+var_5A], ax
		mov	ax, word_445FE
		jmp	short loc_1A20C
; ---------------------------------------------------------------------------

loc_1A1BE:				; CODE XREF: sub_1A0F4+78j
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_1A1C7:				; CODE XREF: sub_1A0F4+D9j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A1C7
		mov	[bp+var_EC], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_1A1DC:				; CODE XREF: sub_1A0F4+EEj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A1DC
		mov	[bp+var_EA], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_1A1F1:				; CODE XREF: sub_1A0F4+103j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1A1F1
		mov	[bp+var_E8], ax
		mov	ax, word_446D0
		mov	[bp+var_46], ax
		mov	ax, word_446D2
		mov	[bp+var_5A], ax
		mov	ax, word_446CE

loc_1A20C:				; CODE XREF: sub_1A0F4+C8j
		mov	[bp+var_F4], ax
		mov	[bp+var_5C], 0FFFFh
		mov	[bp+var_E0], 0
		mov	al, byte_3B8F5
		cbw
		or	ax, ax
		jnz	short loc_1A226
		jmp	loc_1A434
; ---------------------------------------------------------------------------

loc_1A226:				; CODE XREF: sub_1A0F4+12Dj
		cmp	ax, 1
		jnz	short loc_1A22E
		jmp	loc_1A40A
; ---------------------------------------------------------------------------

loc_1A22E:				; CODE XREF: sub_1A0F4+135j
		cmp	ax, 2
		jz	short loc_1A23E
		cmp	ax, 3
		jnz	short loc_1A23B
		jmp	loc_1A48E
; ---------------------------------------------------------------------------

loc_1A23B:				; CODE XREF: sub_1A0F4+142j
		jmp	loc_1A303
; ---------------------------------------------------------------------------

loc_1A23E:				; CODE XREF: sub_1A0F4+13Dj
		mov	[bp+var_F2], 0
		mov	[bp+var_F0], 0
		mov	[bp+var_EE], 4000h
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_F4]
		neg	ax
		push	ax
		mov	ax, [bp+var_46]
		neg	ax
		push	ax
		mov	ax, [bp+var_5A]
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_D6], ax
		lea	ax, [bp+var_128]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_124]
		push	[bp+var_128]
		call	sub_2EA4E
		add	sp, 4
		mov	si, ax
		mov	[bp+var_F2], 0
		mov	[bp+var_F0], 0
		mov	ax, word_3B8EC
		mov	[bp+var_EE], ax
		sub	ax, ax
		push	ax
		mov	ax, si
		sub	ax, word_3B8EE
		push	ax
		mov	ax, word_3B8F0
		neg	ax
		push	ax
		sub	ax, ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_D6], ax

loc_1A2CC:				; CODE XREF: sub_1A0F4+396j
		lea	ax, [bp+var_128]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_EC]
		add	ax, [bp+var_128]
		mov	[bp+var_58], ax
		mov	ax, [bp+var_EA]
		add	ax, [bp+var_126]
		mov	[bp+var_56], ax
		mov	ax, [bp+var_E8]
		add	ax, [bp+var_124]

loc_1A300:				; CODE XREF: sub_1A0F4+3D9j
		mov	[bp+var_54], ax

loc_1A303:				; CODE XREF: sub_1A0F4:loc_1A23Bj
					; sub_1A0F4+33Dj
		cmp	[bp+var_5C], 0FFFFh
		jz	short loc_1A30C
		jmp	loc_1A3E9
; ---------------------------------------------------------------------------

loc_1A30C:				; CODE XREF: sub_1A0F4+213j
		lea	ax, [bp+var_58]
		push	ax
		lea	ax, [bp+var_58]
		push	ax
		call	sub_1E1A0
		add	sp, 4
		mov	ax, word_449EC
		cmp	[bp+var_56], ax
		jge	short loc_1A327
		mov	[bp+var_56], ax

loc_1A327:				; CODE XREF: sub_1A0F4+22Ej
		cmp	byte_4392C, 0
		jz	short loc_1A393
		push	[bp+var_54]
		push	[bp+var_56]
		push	[bp+var_58]
		push	word_44DC6
		call	sub_19926
		add	sp, 8
		mov	si, ax
		cmp	si, 0Ch
		jge	short loc_1A393
		mov	word_44F36, 0
		mov	ax, 0Ch
		sub	ax, si
		mov	word_44F38, ax
		mov	word_44F3A, 0
		mov	ax, word_44DC6
		mov	word_44F4A, ax
		mov	word_44F48, 0
		mov	word_44F44, 0
		mov	word_44F42, 0
		mov	word_44F46, 0
		call	sub_19794
		mov	ax, word_44F3C
		add	[bp+var_58], ax
		mov	ax, word_44F3E
		add	[bp+var_56], ax
		mov	ax, word_44F40
		add	[bp+var_54], ax

loc_1A393:				; CODE XREF: sub_1A0F4+238j
					; sub_1A0F4+254j
		mov	ax, [bp+var_E8]
		sub	ax, [bp+var_54]
		push	ax
		mov	ax, [bp+var_EC]
		sub	ax, [bp+var_58]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		neg	ax
		and	ah, 3
		mov	[bp+var_5C], ax
		mov	ax, [bp+var_E8]
		sub	ax, [bp+var_54]
		push	ax
		mov	ax, [bp+var_EC]
		sub	ax, [bp+var_58]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_38], ax
		push	ax
		mov	ax, [bp+var_EA]
		sub	ax, [bp+var_56]
		add	ax, 32h	; '2'
		push	ax
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		mov	[bp+var_FA], ax

loc_1A3E9:				; CODE XREF: sub_1A0F4+215j
		cmp	[bp+var_E0], 1
		jg	short loc_1A3F3
		jmp	loc_1A4D0
; ---------------------------------------------------------------------------

loc_1A3F3:				; CODE XREF: sub_1A0F4+2FAj
		cmp	[bp+var_E0], 3FFh
		jl	short loc_1A3FE
		jmp	loc_1A4D0
; ---------------------------------------------------------------------------

loc_1A3FE:				; CODE XREF: sub_1A0F4+305j
		mov	ax, [bp+var_E0]
		mov	[bp+var_FE], ax
		jmp	loc_1A4D6
; ---------------------------------------------------------------------------
		align 2

loc_1A40A:				; CODE XREF: sub_1A0F4+137j
		mov	al, byte_463E0
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	ax, [bx-71BCh]
		mov	[bp+var_58], ax
		mov	ax, [bx-71B8h]
		mov	[bp+var_54], ax
		mov	ax, [bx-71BAh]
		mov	[bp+var_56], ax
		jmp	loc_1A303
; ---------------------------------------------------------------------------

loc_1A434:				; CODE XREF: sub_1A0F4+12Fj
		mov	ax, [bp+var_F4]
		and	ah, 3
		mov	[bp+var_5C], ax
		mov	ax, [bp+var_46]
		and	ah, 3
		mov	[bp+var_FA], ax
		mov	ax, [bp+var_5A]
		and	ah, 3
		mov	[bp+var_E0], ax
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_F4]
		neg	ax
		push	ax
		mov	ax, [bp+var_46]
		neg	ax
		push	ax
		mov	ax, [bp+var_5A]
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_D6], ax
		mov	[bp+var_F2], 0
		mov	[bp+var_EE], 0
		mov	ax, word_45F2A
		sub	ax, 6
		mov	[bp+var_F0], ax
		jmp	loc_1A2CC
; ---------------------------------------------------------------------------
		align 2

loc_1A48E:				; CODE XREF: sub_1A0F4+144j
		mov	al, byte_463E0
		cbw
		mov	bx, ax
		mov	al, [bx-6EE5h]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word_449DC
		mov	dx, word_449DE
		mov	word ptr [bp+var_154], ax
		mov	word ptr [bp+var_154+2], dx
		les	bx, [bp+var_154]
		assume es:nothing
		mov	ax, es:[bx]
		mov	[bp+var_58], ax
		mov	ax, es:[bx+2]
		add	ax, word_44D20
		add	ax, 5Ah	; 'Z'
		mov	[bp+var_56], ax
		mov	ax, es:[bx+4]
		jmp	loc_1A300
; ---------------------------------------------------------------------------

loc_1A4D0:				; CODE XREF: sub_1A0F4+2FCj
					; sub_1A0F4+307j
		mov	[bp+var_FE], 0

loc_1A4D6:				; CODE XREF: sub_1A0F4+312j
		cmp	word_445D4, 0
		jnz	short loc_1A4E4
		mov	bx, word_46468
		jmp	short loc_1A4E8
; ---------------------------------------------------------------------------
		align 2

loc_1A4E4:				; CODE XREF: sub_1A0F4+3E7j
		mov	bx, word_445D4

loc_1A4E8:				; CODE XREF: sub_1A0F4+3EDj
		and	bx, 0Fh
		mov	al, [bx+956h]
		mov	[bp+var_E4], al
		sub	ax, ax
		push	ax
		push	[bp+arg_2]
		push	[bp+var_5C]
		push	[bp+var_FA]
		push	[bp+var_FE]
		call	sub_24E06
		add	sp, 0Ah
		mov	[bp+var_52], ax
		and	ah, 3
		mov	cl, 7
		shr	ax, cl
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		mov	ax, [bx+914h]
		mov	[bp+var_50], ax
		mov	ax, 1
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_FA]
		push	[bp+var_FE]
		call	sub_261FA
		add	sp, 8
		push	si
		push	di
		lea	di, [bp+var_120]
		mov	si, ax
		push	ss
		pop	es
		mov	cx, 9
		repne movsw
		pop	di
		pop	si
		mov	[bp+var_F2], 0
		mov	[bp+var_F0], 0
		mov	[bp+var_EE], 3E8h
		lea	ax, [bp+var_44]
		push	ax
		lea	ax, [bp+var_120]
		push	ax
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_40], 0
		jle	short loc_1A580
		mov	[bp+var_2], 1
		jmp	short loc_1A585
; ---------------------------------------------------------------------------

loc_1A580:				; CODE XREF: sub_1A0F4+483j
		mov	[bp+var_2], 0FFFFh

loc_1A585:				; CODE XREF: sub_1A0F4+48Aj
		cmp	byte_3B8FA, 0
		jz	short loc_1A58F
		jmp	loc_1A66D
; ---------------------------------------------------------------------------

loc_1A58F:				; CODE XREF: sub_1A0F4+496j
		mov	word_42A42, 92CCh
		mov	al, [bp+var_122]
		or	al, 7
		mov	byte_42A4C, al
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	word_42A4A, 400h
		mov	byte_42A4D, 0
		mov	[bp+var_36], 0

loc_1A5BA:				; CODE XREF: sub_1A0F4+576j
		mov	bx, [bp+var_36]
		shl	bx, 1
		mov	si, [bx+6C4h]
		add	si, [bp+var_5C]
		add	si, word_42D28
		and	si, 3FFh
		cmp	si, 87h	; 'á'
		jl	short loc_1A5DD
		cmp	si, 379h
		jg	short loc_1A5DD
		jmp	loc_1A661
; ---------------------------------------------------------------------------

loc_1A5DD:				; CODE XREF: sub_1A0F4+4DEj
					; sub_1A0F4+4E4j
		push	si
		lea	ax, [bp+var_A0]
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	[bp+var_F2], 0
		mov	ax, 0AE6h
		sub	ax, [bp+var_56]
		mov	[bp+var_F0], ax
		mov	[bp+var_EE], 3A98h
		lea	ax, [bp+var_128]
		push	ax
		lea	ax, [bp+var_A0]
		push	ax
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	[bp+var_124], 3A98h
		mov	ax, 72CAh
		push	ax
		lea	ax, [bp+var_120]
		push	ax
		lea	ax, [bp+var_128]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	word_42A3E, 0C8h ; '»'
		jle	short loc_1A661
		mov	bx, [bp+var_36]
		shl	bx, 1
		mov	ax, [bx+6D4h]
		mov	word_42A40, ax
		mov	ax, [bp+var_5C]
		neg	ax
		mov	word_42A48, ax
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax

loc_1A661:				; CODE XREF: sub_1A0F4+4E6j
					; sub_1A0F4+546j
		inc	[bp+var_36]
		cmp	[bp+var_36], 8
		jge	short loc_1A66D
		jmp	loc_1A5BA
; ---------------------------------------------------------------------------

loc_1A66D:				; CODE XREF: sub_1A0F4+498j
					; sub_1A0F4+574j
		mov	ax, [bp+var_58]
		mov	cl, 0Ah
		sar	ax, cl
		mov	[bp+var_10A], al
		mov	ax, [bp+var_54]
		sar	ax, cl
		sub	al, 1Dh
		neg	al
		mov	[bp+var_134], al
		cmp	byte_3B8FA, 0
		jz	short loc_1A69D
		mov	al, byte ptr word_445E8
		mov	[bp+var_D8], al
		mov	al, 1Dh
		sub	al, byte ptr word_445F0
		mov	[bp+var_E2], al

loc_1A69D:				; CODE XREF: sub_1A0F4+596j
		sub	si, si

loc_1A69F:				; CODE XREF: sub_1A0F4+5B3j
		mov	[bp+si+var_32],	0
		inc	si
		cmp	si, 17h
		jl	short loc_1A69F
		mov	bl, byte_3B8FA
		sub	bh, bh
		mov	al, [bx+92Ch]
		mov	[bp+var_130], al
		mov	si, 16h
		jmp	short loc_1A6FF
; ---------------------------------------------------------------------------

loc_1A6BC:				; CODE XREF: sub_1A0F4+62Cj
		mov	ax, [bp+var_50]
		mov	cx, si
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		add	ax, cx
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		mov	al, [bx]
		add	al, [bp+var_10A]
		mov	[bp+var_F6], al
		mov	al, [bx+1]
		add	al, [bp+var_134]
		mov	[bp+var_102], al
		cmp	[bp+var_F6], 0
		jl	short loc_1A6FA
		cmp	[bp+var_F6], 1Dh
		jg	short loc_1A6FA
		or	al, al
		jl	short loc_1A6FA
		cmp	al, 1Dh
		jle	short loc_1A724

loc_1A6FA:				; CODE XREF: sub_1A0F4+5F5j
					; sub_1A0F4+5FCj ...
		mov	[bp+si+var_32],	2

loc_1A6FE:				; CODE XREF: sub_1A0F4+616j
					; sub_1A0F4+780j ...
		dec	si

loc_1A6FF:				; CODE XREF: sub_1A0F4+5C6j
		or	si, si
		jge	short loc_1A706
		jmp	loc_1A9C8
; ---------------------------------------------------------------------------

loc_1A706:				; CODE XREF: sub_1A0F4+60Dj
		cmp	[bp+si+var_32],	0
		jnz	short loc_1A6FE
		mov	bx, [bp+var_50]
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	bx, ax
		mov	al, [bp+var_130]
		cmp	[bx+2],	al
		jle	short loc_1A6BC
		jmp	short loc_1A6FA
; ---------------------------------------------------------------------------

loc_1A724:				; CODE XREF: sub_1A0F4+604j
		mov	al, [bp+var_F6]
		cbw
		mov	word ptr [bp+var_154], ax
		mov	al, [bp+var_102]
		cbw
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, word ptr [bp+var_154]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_62], al
		mov	bx, [bp+var_150]
		mov	bx, [bx-73C4h]
		add	bx, word ptr [bp+var_154]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_10C], al
		cmp	[bp+var_62], 0
		jnz	short loc_1A774
		jmp	loc_1A7FF
; ---------------------------------------------------------------------------

loc_1A774:				; CODE XREF: sub_1A0F4+67Bj
		cmp	al, 7
		jb	short loc_1A797
		cmp	al, 0Bh
		jnb	short loc_1A797
		mov	al, [bp+var_62]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_10C]
		push	ax
		call	sub_21A5A
		add	sp, 4
		mov	[bp+var_62], al
		mov	[bp+var_10C], 0

loc_1A797:				; CODE XREF: sub_1A0F4+682j
					; sub_1A0F4+686j
		mov	al, [bp+var_62]
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jz	short loc_1A7B0
		cmp	ax, 0FEh ; '˛'
		jz	short loc_1A7B4
		cmp	ax, 0FFh
		jnz	short loc_1A7AE
		jmp	loc_1A8CA
; ---------------------------------------------------------------------------

loc_1A7AE:				; CODE XREF: sub_1A0F4+6B5j
		jmp	short loc_1A7FF
; ---------------------------------------------------------------------------

loc_1A7B0:				; CODE XREF: sub_1A0F4+6ABj
		dec	[bp+var_F6]

loc_1A7B4:				; CODE XREF: sub_1A0F4+6B0j
		dec	[bp+var_102]

loc_1A7B8:				; CODE XREF: sub_1A0F4+7DAj
		mov	al, [bp+var_F6]
		cbw
		mov	word ptr [bp+var_154], ax
		mov	al, [bp+var_102]
		cbw
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, word ptr [bp+var_154]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_62], al
		mov	bx, [bp+var_150]
		mov	bx, [bx-73C4h]
		add	bx, word ptr [bp+var_154]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_10C], al

loc_1A7FF:				; CODE XREF: sub_1A0F4+67Dj
					; sub_1A0F4:loc_1A7AEj
		mov	al, [bp+var_10C]
		mov	[bp+si+var_1A],	al
		mov	bx, [bp+var_50]
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	bx, ax
		mov	al, [bx+2]
		mov	[bp+si+var_BC],	al
		cmp	[bp+var_62], 0
		jz	short loc_1A857
		cmp	byte_3B8FA, 0
		jz	short loc_1A857
		mov	al, [bp+var_62]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		cmp	byte ptr [bx+20A4h], 40h ; '@'
		jl	short loc_1A857
		mov	al, [bp+var_D8]
		cmp	[bp+var_F6], al
		jnz	short loc_1A853
		mov	al, [bp+var_E2]
		cmp	[bp+var_102], al
		jz	short loc_1A857

loc_1A853:				; CODE XREF: sub_1A0F4+753j
		mov	[bp+var_62], 0

loc_1A857:				; CODE XREF: sub_1A0F4+72Aj
					; sub_1A0F4+731j ...
		mov	al, [bp+var_F6]
		mov	[bp+si+var_86],	al
		mov	al, [bp+var_102]
		mov	[bp+si+var_D4],	al
		mov	al, [bp+var_62]
		mov	[bp+si+var_14C], al
		cmp	[bp+var_62], 0
		jnz	short loc_1A877
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------

loc_1A877:				; CODE XREF: sub_1A0F4+77Ej
		mov	al, [bp+var_62]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		mov	[bp+var_DE], ax
		or	ax, ax
		jnz	short loc_1A898
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------

loc_1A898:				; CODE XREF: sub_1A0F4+79Fj
		mov	al, [bp+var_F6]
		sub	al, [bp+var_10A]
		mov	[bp+var_100], al
		mov	al, [bp+var_102]
		sub	al, [bp+var_134]
		mov	[bp+var_12C], al
		mov	ax, [bp+var_DE]
		cmp	ax, 1
		jz	short loc_1A8D2
		cmp	ax, 2
		jz	short loc_1A914
		cmp	ax, 3
		jnz	short loc_1A8C6
		jmp	loc_1A960
; ---------------------------------------------------------------------------

loc_1A8C6:				; CODE XREF: sub_1A0F4+7CDj
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------
		align 2

loc_1A8CA:				; CODE XREF: sub_1A0F4+6B7j
		dec	[bp+var_F6]
		jmp	loc_1A7B8
; ---------------------------------------------------------------------------
		align 2

loc_1A8D2:				; CODE XREF: sub_1A0F4+7C3j
		sub	di, di
		jmp	short loc_1A8D7
; ---------------------------------------------------------------------------

loc_1A8D6:				; CODE XREF: sub_1A0F4+803j
					; sub_1A0F4+818j ...
		inc	di

loc_1A8D7:				; CODE XREF: sub_1A0F4+7E0j
		cmp	di, si
		jl	short loc_1A8DE
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------

loc_1A8DE:				; CODE XREF: sub_1A0F4+7E5j
		mov	ax, [bp+var_50]
		mov	cx, di
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		add	ax, cx
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		mov	al, [bp+var_100]
		cmp	[bx], al
		jnz	short loc_1A8D6
		mov	al, [bp+var_12C]
		cmp	[bx+1],	al
		jz	short loc_1A90E
		cbw
		inc	ax
		mov	cx, ax
		mov	al, [bx+1]
		cbw
		cmp	ax, cx
		jnz	short loc_1A8D6

loc_1A90E:				; CODE XREF: sub_1A0F4+80Cj
		mov	[bp+di+var_32],	1
		jmp	short loc_1A8D6
; ---------------------------------------------------------------------------

loc_1A914:				; CODE XREF: sub_1A0F4+7C8j
		sub	di, di
		jmp	short loc_1A919
; ---------------------------------------------------------------------------

loc_1A918:				; CODE XREF: sub_1A0F4+846j
					; sub_1A0F4+863j ...
		inc	di

loc_1A919:				; CODE XREF: sub_1A0F4+822j
		cmp	di, si
		jl	short loc_1A920
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------

loc_1A920:				; CODE XREF: sub_1A0F4+827j
		mov	ax, [bp+var_50]
		mov	cx, di
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		add	ax, cx
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		mov	al, [bp+var_12C]
		cmp	[bx+1],	al
		jnz	short loc_1A918
		mov	al, [bx]
		mov	byte ptr [bp+var_150], al
		mov	al, [bp+var_100]
		cmp	byte ptr [bp+var_150], al
		jz	short loc_1A959
		cbw
		inc	ax
		mov	cx, ax
		mov	al, byte ptr [bp+var_150]
		cbw
		cmp	cx, ax
		jnz	short loc_1A918

loc_1A959:				; CODE XREF: sub_1A0F4+856j
		mov	[bp+di+var_32],	1
		jmp	short loc_1A918
; ---------------------------------------------------------------------------
		align 2

loc_1A960:				; CODE XREF: sub_1A0F4+7CFj
		sub	di, di
		jmp	short loc_1A965
; ---------------------------------------------------------------------------

loc_1A964:				; CODE XREF: sub_1A0F4+8A0j
					; sub_1A0F4+8CBj ...
		inc	di

loc_1A965:				; CODE XREF: sub_1A0F4+86Ej
		cmp	di, si
		jl	short loc_1A96C
		jmp	loc_1A6FE
; ---------------------------------------------------------------------------

loc_1A96C:				; CODE XREF: sub_1A0F4+873j
		mov	bx, [bp+var_50]
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	bx, ax
		mov	al, [bx]
		mov	byte ptr [bp+var_154], al
		mov	al, [bp+var_100]
		cmp	byte ptr [bp+var_154], al
		jz	short loc_1A996
		cbw
		inc	ax
		mov	cx, ax
		mov	al, byte ptr [bp+var_154]
		cbw
		cmp	cx, ax
		jnz	short loc_1A964

loc_1A996:				; CODE XREF: sub_1A0F4+893j
		mov	bx, [bp+var_50]
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	bx, ax
		mov	al, [bx+1]
		mov	byte ptr [bp+var_154], al
		mov	al, [bp+var_12C]
		cmp	byte ptr [bp+var_154], al
		jz	short loc_1A9C1
		cbw
		inc	ax
		mov	cx, ax
		mov	al, byte ptr [bp+var_154]
		cbw
		cmp	cx, ax
		jnz	short loc_1A964

loc_1A9C1:				; CODE XREF: sub_1A0F4+8BEj
		mov	[bp+di+var_32],	1
		jmp	short loc_1A964
; ---------------------------------------------------------------------------
		align 2

loc_1A9C8:				; CODE XREF: sub_1A0F4+60Fj
		mov	[bp+var_3C], 0FFh
		mov	[bp+var_6C], 0
		cmp	byte_3B8F5, 0
		jnz	short loc_1A9E2
		cmp	byte_463E0, 0
		jnz	short loc_1A9E2
		jmp	loc_1AB65
; ---------------------------------------------------------------------------

loc_1A9E2:				; CODE XREF: sub_1A0F4+8E2j
					; sub_1A0F4+8E9j
		cmp	byte_446AF, 2
		jnz	short loc_1A9EC
		jmp	loc_1AB65
; ---------------------------------------------------------------------------

loc_1A9EC:				; CODE XREF: sub_1A0F4+8F3j
		sub	ax, ax
		push	ax
		mov	ax, word_445FE
		neg	ax
		push	ax
		mov	ax, word_44600
		neg	ax
		push	ax
		mov	ax, word_44602
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_D6], ax
		mov	[bp+var_DE], 0FFFFh
		mov	di, 0FFFFh
		mov	[bp+var_A2], 0
		jmp	short loc_1AA8C
; ---------------------------------------------------------------------------

loc_1AA1E:				; CODE XREF: sub_1A0F4+935j
					; sub_1A0F4+961j ...
		dec	si

loc_1AA1F:				; CODE XREF: sub_1A0F4+9FCj
		cmp	[bp+var_DE], si
		jge	short loc_1AA88
		cmp	[bp+si+var_32],	2
		jz	short loc_1AA1E
		mov	ax, [bp+var_50]
		mov	cx, si
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		add	ax, cx
		mov	word ptr [bp+var_154], ax
		mov	al, [bp+var_10A]
		cbw
		mov	bx, word ptr [bp+var_154]
		mov	cx, ax
		mov	al, [bx]
		cbw
		add	ax, cx
		mov	cx, ax
		mov	al, [bp+var_F6]
		cbw
		cmp	cx, ax
		jnz	short loc_1AA1E
		mov	al, [bp+var_134]
		cbw
		mov	cx, ax
		mov	al, [bx+1]
		cbw
		add	ax, cx
		mov	cx, ax
		mov	al, [bp+var_102]
		cbw
		cmp	cx, ax
		jnz	short loc_1AA1E
		mov	al, [bp+var_F6]
		mov	[bp+var_3C], al
		mov	al, [bp+var_102]
		mov	[bp+var_60], al
		mov	[bp+var_DE], si
		mov	di, [bp+var_A2]
		jmp	short loc_1AA1E
; ---------------------------------------------------------------------------
		align 2

loc_1AA88:				; CODE XREF: sub_1A0F4+92Fj
		inc	[bp+var_A2]

loc_1AA8C:				; CODE XREF: sub_1A0F4+928j
		cmp	[bp+var_A2], 4
		jge	short loc_1AAF4
		mov	bx, [bp+var_A2]
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		push	si
		push	di
		lea	di, [bp+var_F2]
		lea	si, [bx-5844h]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		lea	ax, [bp+var_44]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_44]
		cwd
		add	ax, word_445E6
		adc	dx, word_445E8
		mov	ax, dx
		mov	[bp+var_F6], al
		mov	ax, [bp+var_40]
		cwd
		add	ax, word_445EE
		adc	dx, word_445F0
		mov	ax, dx
		sub	al, 1Dh
		neg	al
		mov	[bp+var_102], al
		mov	si, 16h
		jmp	loc_1AA1F
; ---------------------------------------------------------------------------
		align 2

loc_1AAF4:				; CODE XREF: sub_1A0F4+99Dj
		cmp	di, 0FFFFh
		jz	short loc_1AB65
		cmp	byte_446A8, 4
		jnz	short loc_1AB15
		cmp	byte_446A9, 4
		jnz	short loc_1AB15
		cmp	byte_446AA, 4
		jnz	short loc_1AB15
		cmp	byte_446AB, 4
		jz	short loc_1AB65

loc_1AB15:				; CODE XREF: sub_1A0F4+A0Aj
					; sub_1A0F4+A11j ...
		mov	[bp+var_F2], 0
		mov	[bp+var_EE], 0
		mov	[bp+var_F0], 7530h
		lea	ax, [bp+var_44]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_F2]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		lea	ax, [bp+var_44]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_EE], 0
		jg	short loc_1AB60
		mov	[bp+var_6C], 0F800h
		jmp	short loc_1AB65
; ---------------------------------------------------------------------------
		align 2

loc_1AB60:				; CODE XREF: sub_1A0F4+A62j
		mov	[bp+var_6C], 800h

loc_1AB65:				; CODE XREF: sub_1A0F4+8EBj
					; sub_1A0F4+8F5j ...
		mov	[bp+var_4A], 0FFh
		mov	[bp+var_A4], 0
		cmp	byte_449AA, 0
		jnz	short loc_1AB79
		jmp	loc_1AD0E
; ---------------------------------------------------------------------------

loc_1AB79:				; CODE XREF: sub_1A0F4+A80j
		cmp	byte_3B8F5, 0
		jnz	short loc_1AB8A
		cmp	byte_463E0, 0
		jz	short loc_1AB8A
		jmp	loc_1AD0E
; ---------------------------------------------------------------------------

loc_1AB8A:				; CODE XREF: sub_1A0F4+A8Aj
					; sub_1A0F4+A91j
		cmp	byte_4477F, 2
		jnz	short loc_1AB94
		jmp	loc_1AD0E
; ---------------------------------------------------------------------------

loc_1AB94:				; CODE XREF: sub_1A0F4+A9Bj
		sub	ax, ax
		push	ax
		mov	ax, word_446CE
		neg	ax
		push	ax
		mov	ax, word_446D0
		neg	ax
		push	ax
		mov	ax, word_446D2
		neg	ax
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_D6], ax
		mov	[bp+var_DE], 0FFFFh
		mov	di, 0FFFFh
		mov	[bp+var_A2], 0
		jmp	short loc_1AC34
; ---------------------------------------------------------------------------

loc_1ABC6:				; CODE XREF: sub_1A0F4+ADDj
					; sub_1A0F4+B09j ...
		dec	si

loc_1ABC7:				; CODE XREF: sub_1A0F4+BA4j
		cmp	[bp+var_DE], si
		jge	short loc_1AC30
		cmp	[bp+si+var_32],	2
		jz	short loc_1ABC6
		mov	ax, [bp+var_50]
		mov	cx, si
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		add	ax, cx
		mov	word ptr [bp+var_154], ax
		mov	al, [bp+var_10A]
		cbw
		mov	bx, word ptr [bp+var_154]
		mov	cx, ax
		mov	al, [bx]
		cbw
		add	ax, cx
		mov	cx, ax
		mov	al, [bp+var_F6]
		cbw
		cmp	cx, ax
		jnz	short loc_1ABC6
		mov	al, [bp+var_134]
		cbw
		mov	cx, ax
		mov	al, [bx+1]
		cbw
		add	ax, cx
		mov	cx, ax
		mov	al, [bp+var_102]
		cbw
		cmp	cx, ax
		jnz	short loc_1ABC6
		mov	al, [bp+var_F6]
		mov	[bp+var_4A], al
		mov	al, [bp+var_102]
		mov	[bp+var_6E], al
		mov	[bp+var_DE], si
		mov	di, [bp+var_A2]
		jmp	short loc_1ABC6
; ---------------------------------------------------------------------------
		align 2

loc_1AC30:				; CODE XREF: sub_1A0F4+AD7j
		inc	[bp+var_A2]

loc_1AC34:				; CODE XREF: sub_1A0F4+AD0j
		cmp	[bp+var_A2], 4
		jge	short loc_1AC9C
		mov	bx, [bp+var_A2]
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		push	si
		push	di
		lea	di, [bp+var_F2]
		lea	si, [bx-605Eh]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		lea	ax, [bp+var_44]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_44]
		cwd
		add	ax, word_446B6
		adc	dx, word_446B8
		mov	ax, dx
		mov	[bp+var_F6], al
		mov	ax, [bp+var_40]
		cwd
		add	ax, word_446BE
		adc	dx, word_446C0
		mov	ax, dx
		sub	al, 1Dh
		neg	al
		mov	[bp+var_102], al
		mov	si, 16h
		jmp	loc_1ABC7
; ---------------------------------------------------------------------------
		align 2

loc_1AC9C:				; CODE XREF: sub_1A0F4+B45j
		cmp	di, 0FFFFh
		jz	short loc_1AD0E
		cmp	byte_44778, 4
		jnz	short loc_1ACBD
		cmp	byte_44779, 4
		jnz	short loc_1ACBD
		cmp	byte_4477A, 4
		jnz	short loc_1ACBD
		cmp	byte_4477B, 4
		jz	short loc_1AD0E

loc_1ACBD:				; CODE XREF: sub_1A0F4+BB2j
					; sub_1A0F4+BB9j ...
		mov	[bp+var_F2], 0
		mov	[bp+var_EE], 0
		mov	[bp+var_F0], 7530h
		lea	ax, [bp+var_44]
		push	ax
		push	[bp+var_D6]
		lea	ax, [bp+var_F2]
		push	ax
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_F2]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		lea	ax, [bp+var_44]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_EE], 0
		jg	short loc_1AD08
		mov	[bp+var_A4], 0F800h
		jmp	short loc_1AD0E
; ---------------------------------------------------------------------------

loc_1AD08:				; CODE XREF: sub_1A0F4+C0Aj
		mov	[bp+var_A4], 800h

loc_1AD0E:				; CODE XREF: sub_1A0F4+A82j
					; sub_1A0F4+A93j ...
		mov	[bp+var_4E], 0
		sub	si, si
		jmp	loc_1BF6D
; ---------------------------------------------------------------------------
		align 2

loc_1AD18:				; CODE XREF: sub_1A0F4+1EDEj
		mov	[bp+var_36], 1
		mov	[bp+var_10E], 97Eh
		jmp	short loc_1AD55
; ---------------------------------------------------------------------------
		align 2

loc_1AD26:				; CODE XREF: sub_1A0F4+1EE6j
		mov	[bp+var_36], 2
		mov	[bp+var_10E], 980h
		jmp	short loc_1AD55
; ---------------------------------------------------------------------------
		align 2

loc_1AD34:				; CODE XREF: sub_1A0F4+1EEEj
		mov	[bp+var_36], 3
		jmp	short loc_1AD4F
; ---------------------------------------------------------------------------
		align 2

loc_1AD3C:				; CODE XREF: sub_1A0F4+1EF6j
		mov	[bp+var_36], 4
		mov	[bp+var_10E], 988h
		jmp	short loc_1AD55
; ---------------------------------------------------------------------------
		align 2

loc_1AD4A:				; CODE XREF: sub_1A0F4+1EB9j
		mov	[bp+var_36], 1

loc_1AD4F:				; CODE XREF: sub_1A0F4+C45j
		mov	[bp+var_10E], 984h

loc_1AD55:				; CODE XREF: sub_1A0F4+C2Fj
					; sub_1A0F4+C3Dj ...
		mov	[bp+var_DE], 0
		jmp	loc_1AE7A
; ---------------------------------------------------------------------------

loc_1AD5E:				; CODE XREF: sub_1A0F4+DBBj
					; sub_1A0F4+DD2j
		mov	al, [bp+var_100]
		cbw
		or	ax, ax
		jz	short loc_1AD80
		cmp	ax, 1Dh
		jz	short loc_1ADCC
		mov	al, [bp+var_12C]
		cbw
		or	ax, ax
		jz	short loc_1ADEC
		cmp	ax, 1Dh
		jz	short loc_1ADF0
		mov	di, 0FFFFh
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1AD80:				; CODE XREF: sub_1A0F4+C71j
		mov	al, [bp+var_12C]
		cbw
		or	ax, ax
		jz	short loc_1AD94
		cmp	ax, 1Dh
		jz	short loc_1ADC6
		mov	di, 6
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1AD94:				; CODE XREF: sub_1A0F4+C93j
		mov	di, 7

loc_1AD97:				; CODE XREF: sub_1A0F4+C89j
					; sub_1A0F4+C9Dj ...
		cmp	di, 0FFFFh
		jnz	short loc_1AD9F
		jmp	loc_1AE76
; ---------------------------------------------------------------------------

loc_1AD9F:				; CODE XREF: sub_1A0F4+CA6j
		mov	al, [di+976h]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_34], ax
		cmp	[bp+var_FC], 0
		jnz	short loc_1ADF6
		mov	bx, ax
		mov	ax, [bx+4]
		jmp	short loc_1ADFC
; ---------------------------------------------------------------------------
		align 2

loc_1ADC6:				; CODE XREF: sub_1A0F4+C98j
		mov	di, 5
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1ADCC:				; CODE XREF: sub_1A0F4+C76j
		mov	al, [bp+var_12C]
		cbw
		or	ax, ax
		jz	short loc_1ADE0
		cmp	ax, 1Dh
		jz	short loc_1ADE6
		mov	di, 2
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1ADE0:				; CODE XREF: sub_1A0F4+CDFj
		mov	di, 1
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1ADE6:				; CODE XREF: sub_1A0F4+CE4j
		mov	di, 3
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1ADEC:				; CODE XREF: sub_1A0F4+C7Fj
		sub	di, di
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------

loc_1ADF0:				; CODE XREF: sub_1A0F4+C84j
		mov	di, 4
		jmp	short loc_1AD97
; ---------------------------------------------------------------------------
		align 2

loc_1ADF6:				; CODE XREF: sub_1A0F4+CC8j
		mov	bx, [bp+var_34]
		mov	ax, [bx+6]

loc_1ADFC:				; CODE XREF: sub_1A0F4+CCFj
		mov	word_42A40, ax
		mov	al, [bp+var_100]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		sub	ax, [bp+var_58]
		mov	word_42A3A, ax
		mov	ax, [bp+var_56]
		neg	ax
		mov	word_42A3C, ax
		mov	al, [bp+var_12C]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		sub	ax, [bp+var_54]
		mov	word_42A3E, ax
		mov	word_42A42, 929Ch
		mov	al, [bp+var_122]
		or	al, 5
		mov	byte_42A4C, al
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	bx, di
		shl	bx, 1
		mov	ax, [bx+966h]
		mov	word_42A48, ax
		mov	word_42A4A, 400h
		mov	byte_42A4D, 0
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1AE76
		jmp	loc_1B03C
; ---------------------------------------------------------------------------

loc_1AE76:				; CODE XREF: sub_1A0F4+CA8j
					; sub_1A0F4+D7Dj ...
		inc	[bp+var_DE]

loc_1AE7A:				; CODE XREF: sub_1A0F4+C67j
		mov	ax, [bp+var_36]
		cmp	[bp+var_DE], ax
		jge	short loc_1AECC
		mov	ax, [bp+var_DE]
		shl	ax, 1
		add	ax, [bp+var_10E]
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		mov	al, [bx]
		add	al, [bp+var_F6]
		mov	[bp+var_100], al
		mov	al, [bx+1]
		add	al, [bp+var_102]
		mov	[bp+var_12C], al
		cmp	byte_3B8FA, 0
		jnz	short loc_1AEB2
		jmp	loc_1AD5E
; ---------------------------------------------------------------------------

loc_1AEB2:				; CODE XREF: sub_1A0F4+DB9j
		mov	al, [bp+var_D8]
		cmp	[bp+var_100], al
		jnz	short loc_1AE76
		mov	al, [bp+var_E2]
		cmp	[bp+var_12C], al
		jnz	short loc_1AEC9
		jmp	loc_1AD5E
; ---------------------------------------------------------------------------

loc_1AEC9:				; CODE XREF: sub_1A0F4+DD0j
		jmp	short loc_1AE76
; ---------------------------------------------------------------------------
		align 2

loc_1AECC:				; CODE XREF: sub_1A0F4+D8Dj
		cmp	[bp+var_10C], 6
		jnz	short loc_1AF50
		mov	ax, word_3B8EA
		mov	[bp+var_48], ax
		cmp	[bp+var_62], 0
		jz	short loc_1AEE4

loc_1AEDF:				; CODE XREF: sub_1A0F4+FBFj
		mov	[bp+var_10C], 0

loc_1AEE4:				; CODE XREF: sub_1A0F4+DE9j
					; sub_1A0F4+E69j ...
		cmp	[bp+var_10C], 0
		jnz	short loc_1AEEE
		jmp	loc_1B11C
; ---------------------------------------------------------------------------

loc_1AEEE:				; CODE XREF: sub_1A0F4+DF5j
		mov	al, [bp+var_10C]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2C5Ah
		mov	[bp+var_12E], ax
		mov	bx, ax
		mov	ax, [bx+4]
		mov	word_42A40, ax
		mov	al, [bp+var_F6]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		sub	ax, [bp+var_58]
		mov	word_42A3A, ax
		mov	ax, [bp+var_48]
		sub	ax, [bp+var_56]
		mov	word_42A3C, ax
		mov	al, [bp+var_102]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		sub	ax, [bp+var_54]
		mov	word_42A3E, ax
		cmp	[bp+var_48], 0
		jz	short loc_1AF47
		jmp	loc_1B0D4
; ---------------------------------------------------------------------------

loc_1AF47:				; CODE XREF: sub_1A0F4+E4Ej
		mov	word_42A42, 929Ch
		jmp	loc_1B0DA
; ---------------------------------------------------------------------------

loc_1AF50:				; CODE XREF: sub_1A0F4+DDDj
		mov	[bp+var_48], 0
		mov	al, [bp+var_62]
		sub	ah, ah
		cmp	ax, 69h	; 'i'
		jb	short loc_1AEE4
		cmp	ax, 6Ch	; 'l'
		jbe	short loc_1AF67
		jmp	loc_1AEE4
; ---------------------------------------------------------------------------

loc_1AF67:				; CODE XREF: sub_1A0F4+E6Ej
		mov	[bp+var_DE], 0
		jmp	loc_1B0AC
; ---------------------------------------------------------------------------

loc_1AF70:				; CODE XREF: sub_1A0F4+FCAj
		mov	al, [bp+var_F6]

loc_1AF74:				; CODE XREF: sub_1A0F4+F96j
		mov	[bp+var_100], al
		mov	al, [bp+var_102]

loc_1AF7C:				; CODE XREF: sub_1A0F4+FA8j
		mov	[bp+var_12C], al

loc_1AF80:				; CODE XREF: sub_1A0F4+FDCj
		mov	al, [bp+var_100]
		cbw
		mov	word ptr [bp+var_154], ax
		mov	al, [bp+var_12C]
		cbw
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	bx, [bx-73C4h]
		add	bx, word ptr [bp+var_154]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_10C], al
		or	al, al
		jnz	short loc_1AFB4
		jmp	loc_1B0A8
; ---------------------------------------------------------------------------

loc_1AFB4:				; CODE XREF: sub_1A0F4+EBBj
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2C5Ah
		mov	[bp+var_12E], ax
		mov	bx, ax
		mov	ax, [bx+4]
		mov	word_42A40, ax
		mov	bx, word ptr [bp+var_154]
		shl	bx, 1
		mov	ax, [bx-599Eh]
		sub	ax, [bp+var_58]
		mov	word_42A3A, ax
		mov	ax, [bp+var_56]
		neg	ax
		mov	word_42A3C, ax
		mov	bx, [bp+var_150]
		mov	ax, [bx-55EAh]
		sub	ax, [bp+var_54]
		mov	word_42A3E, ax
		mov	word_42A42, 929Ch
		mov	al, [bp+var_122]
		or	al, 5
		mov	byte_42A4C, al
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	bx, [bp+var_12E]
		mov	ax, [bx+2]
		mov	word_42A48, ax
		mov	word_42A4A, 400h
		mov	byte_42A4D, 0
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1B0A8

loc_1B03C:				; CODE XREF: sub_1A0F4+D7Fj
					; sub_1A0F4+1025j ...
		push	[bp+var_56]
		push	[bp+var_5C]
		push	[bp+var_FE]
		lea	ax, [bp+var_120]
		push	ax
		push	[bp+var_2]
		push	[bp+arg_2]
		mov	al, [bp+arg_0]
		cbw
		push	ax
		push	cs
		call	near ptr sub_1C474
		add	sp, 0Eh
		mov	[bp+var_132], ax
		mov	bx, [bp+arg_2]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_25FF6
		sub	si, si
		jmp	loc_1C0C2
; ---------------------------------------------------------------------------
		align 2

loc_1B084:				; CODE XREF: sub_1A0F4+FD0j
		mov	al, [bp+var_F6]
		inc	al
		jmp	loc_1AF74
; ---------------------------------------------------------------------------
		align 2

loc_1B08E:				; CODE XREF: sub_1A0F4+FD5j
		mov	al, [bp+var_F6]

loc_1B092:				; CODE XREF: sub_1A0F4+FB2j
		mov	[bp+var_100], al
		mov	al, [bp+var_102]
		inc	al
		jmp	loc_1AF7C
; ---------------------------------------------------------------------------
		align 2

loc_1B0A0:				; CODE XREF: sub_1A0F4+FDAj
		mov	al, [bp+var_F6]
		inc	al
		jmp	short loc_1B092
; ---------------------------------------------------------------------------

loc_1B0A8:				; CODE XREF: sub_1A0F4+EBDj
					; sub_1A0F4+F46j
		inc	[bp+var_DE]

loc_1B0AC:				; CODE XREF: sub_1A0F4+E79j
		cmp	[bp+var_DE], 4
		jl	short loc_1B0B6
		jmp	loc_1AEDF
; ---------------------------------------------------------------------------

loc_1B0B6:				; CODE XREF: sub_1A0F4+FBDj
		mov	ax, [bp+var_DE]
		or	ax, ax
		jnz	short loc_1B0C1
		jmp	loc_1AF70
; ---------------------------------------------------------------------------

loc_1B0C1:				; CODE XREF: sub_1A0F4+FC8j
		cmp	ax, 1
		jz	short loc_1B084
		cmp	ax, 2
		jz	short loc_1B08E
		cmp	ax, 3
		jz	short loc_1B0A0
		jmp	loc_1AF80
; ---------------------------------------------------------------------------
		align 2

loc_1B0D4:				; CODE XREF: sub_1A0F4+E50j
		mov	word_42A42, 92A4h

loc_1B0DA:				; CODE XREF: sub_1A0F4+E59j
		mov	al, [bp+var_122]
		or	al, 5
		mov	byte_42A4C, al
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	bx, [bp+var_12E]
		mov	ax, [bx+2]
		mov	word_42A48, ax
		mov	word_42A4A, 400h
		mov	byte_42A4D, 0
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1B11C
		jmp	loc_1B03C
; ---------------------------------------------------------------------------

loc_1B11C:				; CODE XREF: sub_1A0F4+DF7j
					; sub_1A0F4+1023j
		mov	byte_45D7E, 0
		mov	word_46434, 72CAh
		cmp	[bp+var_62], 0
		jnz	short loc_1B130
		jmp	loc_1B71E
; ---------------------------------------------------------------------------

loc_1B130:				; CODE XREF: sub_1A0F4+1037j
		mov	al, [bp+var_62]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_12E], ax
		mov	bx, ax
		test	byte ptr [bx+0Bh], 1
		jz	short loc_1B168
		mov	al, [bp+var_102]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-7E84h]
		mov	[bp+var_5E], ax
		mov	al, [bp+var_102]
		inc	al
		jmp	short loc_1B17C
; ---------------------------------------------------------------------------

loc_1B168:				; CODE XREF: sub_1A0F4+105Aj
		mov	al, [bp+var_102]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		mov	[bp+var_5E], ax
		mov	al, [bp+var_102]

loc_1B17C:				; CODE XREF: sub_1A0F4+1072j
		mov	[bp+var_12C], al
		mov	bx, [bp+var_12E]
		test	byte ptr [bx+0Bh], 2
		jz	short loc_1B1A2
		mov	al, [bp+var_F6]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+7558h]
		mov	[bp+var_3A], ax
		mov	al, [bp+var_F6]
		inc	al
		jmp	short loc_1B1B6
; ---------------------------------------------------------------------------

loc_1B1A2:				; CODE XREF: sub_1A0F4+1094j
		mov	al, [bp+var_F6]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	[bp+var_3A], ax
		mov	al, [bp+var_F6]

loc_1B1B6:				; CODE XREF: sub_1A0F4+10ACj
		mov	[bp+var_100], al
		mov	ax, [bp+var_3A]
		sub	ax, [bp+var_58]
		mov	[bp+var_44], ax
		mov	ax, [bp+var_48]
		sub	ax, [bp+var_56]
		mov	[bp+var_42], ax
		mov	ax, [bp+var_5E]
		sub	ax, [bp+var_54]
		mov	[bp+var_40], ax
		cmp	[bp+var_48], 0
		jnz	short loc_1B1DE
		jmp	loc_1B2AE
; ---------------------------------------------------------------------------

loc_1B1DE:				; CODE XREF: sub_1A0F4+10E5j
		mov	bx, [bp+var_12E]
		mov	al, [bx+0Bh]
		cbw
		or	ax, ax
		jz	short loc_1B1FC
		cmp	ax, 1
		jz	short loc_1B20E
		cmp	ax, 2
		jz	short loc_1B21A
		cmp	ax, 3
		jz	short loc_1B226
		jmp	short loc_1B205
; ---------------------------------------------------------------------------
		align 2

loc_1B1FC:				; CODE XREF: sub_1A0F4+10F4j
		mov	di, 1
		mov	[bp+var_DA], 932h

loc_1B205:				; CODE XREF: sub_1A0F4+1105j
					; sub_1A0F4+1123j ...
		mov	[bp+var_DE], 0
		jmp	short loc_1B236
; ---------------------------------------------------------------------------
		align 2

loc_1B20E:				; CODE XREF: sub_1A0F4+10F9j
		mov	di, 2
		mov	[bp+var_DA], 936h
		jmp	short loc_1B205
; ---------------------------------------------------------------------------
		align 2

loc_1B21A:				; CODE XREF: sub_1A0F4+10FEj
		mov	di, 2
		mov	[bp+var_DA], 93Eh
		jmp	short loc_1B205
; ---------------------------------------------------------------------------
		align 2

loc_1B226:				; CODE XREF: sub_1A0F4+1103j
		mov	di, 4
		mov	[bp+var_DA], 946h
		jmp	short loc_1B205
; ---------------------------------------------------------------------------
		align 2

loc_1B232:				; CODE XREF: sub_1A0F4+11B5j
		inc	[bp+var_DE]

loc_1B236:				; CODE XREF: sub_1A0F4+1117j
		cmp	[bp+var_DE], di
		jge	short loc_1B2AE
		mov	bx, [bp+var_DA]
		add	[bp+var_DA], 2
		mov	ax, [bx]
		add	ax, [bp+var_44]
		mov	word_42A3A, ax
		mov	ax, [bp+var_42]
		mov	word_42A3C, ax
		mov	bx, [bp+var_DA]
		add	[bp+var_DA], 2
		mov	ax, [bx]
		add	ax, [bp+var_40]
		mov	word_42A3E, ax
		mov	word_42A40, 79FEh
		mov	word_42A42, 92A4h
		mov	al, [bp+var_122]
		or	al, 5
		mov	byte_42A4C, al
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	word_42A48, 0
		mov	word_42A4A, 800h
		mov	byte_42A4D, 0
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1B232
		jmp	loc_1B03C
; ---------------------------------------------------------------------------

loc_1B2AE:				; CODE XREF: sub_1A0F4+10E7j
					; sub_1A0F4+1146j
		mov	bx, [bp+var_12E]
		cmp	byte ptr [bx+8], 0
		jnz	short loc_1B2BB
		jmp	loc_1B374
; ---------------------------------------------------------------------------

loc_1B2BB:				; CODE XREF: sub_1A0F4+11C2j
		mov	al, [bx+8]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_34], ax
		cmp	[bp+var_FC], 0
		jz	short loc_1B2E0
		mov	bx, ax
		mov	ax, [bx+6]
		jmp	short loc_1B2E6
; ---------------------------------------------------------------------------

loc_1B2E0:				; CODE XREF: sub_1A0F4+11E3j
		mov	bx, [bp+var_34]
		mov	ax, [bx+4]

loc_1B2E6:				; CODE XREF: sub_1A0F4+11EAj
		mov	word_42A54, ax
		or	ax, ax
		jnz	short loc_1B2F0
		jmp	loc_1B374
; ---------------------------------------------------------------------------

loc_1B2F0:				; CODE XREF: sub_1A0F4+11F7j
		push	si
		push	di
		mov	di, 72DEh
		lea	si, [bp+var_44]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	word_42A58, 0
		mov	word_42A5A, 0
		mov	ax, [bx+2]
		mov	word_42A5C, ax
		cmp	byte ptr [bx+0Bh], 0
		jz	short loc_1B320
		mov	word_42A5E, 400h
		jmp	short loc_1B326
; ---------------------------------------------------------------------------
		align 2

loc_1B320:				; CODE XREF: sub_1A0F4+1221j
		mov	word_42A5E, 800h

loc_1B326:				; CODE XREF: sub_1A0F4+1229j
		cmp	byte ptr [bx+9], 0
		jl	short loc_1B332
		mov	al, [bx+9]
		jmp	short loc_1B336
; ---------------------------------------------------------------------------
		align 2

loc_1B332:				; CODE XREF: sub_1A0F4+1236j
		mov	al, [bp+var_E4]

loc_1B336:				; CODE XREF: sub_1A0F4+123Bj
		mov	byte_42A61, al
		mov	al, [bx+0Ah]
		or	al, [bp+var_122]
		or	al, 4
		mov	byte_42A60, al
		test	byte_42A60, 1
		jz	short loc_1B36A
		mov	word_42A56, 929Ch
		mov	ax, 72DEh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1B374
		jmp	loc_1B03C
; ---------------------------------------------------------------------------

loc_1B36A:				; CODE XREF: sub_1A0F4+1256j
		mov	word_42A56, 92A4h
		mov	[bp+var_4E], 1

loc_1B374:				; CODE XREF: sub_1A0F4+11C4j
					; sub_1A0F4+11F9j ...
		cmp	[bp+var_FC], 0
		jz	short loc_1B384
		mov	bx, [bp+var_12E]
		mov	ax, [bx+6]
		jmp	short loc_1B38B
; ---------------------------------------------------------------------------

loc_1B384:				; CODE XREF: sub_1A0F4+1285j
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]

loc_1B38B:				; CODE XREF: sub_1A0F4+128Ej
		mov	word_42A40, ax
		push	si
		push	di
		mov	di, 72CAh
		lea	si, [bp+var_44]
		push	ds
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	word_42A44, 0
		mov	word_42A46, 0
		mov	ax, [bx+2]
		mov	word_42A48, ax
		cmp	byte ptr [bx+0Bh], 0
		jz	short loc_1B3BE
		mov	word_42A4A, 400h
		jmp	short loc_1B3C4
; ---------------------------------------------------------------------------
		align 2

loc_1B3BE:				; CODE XREF: sub_1A0F4+12BFj
		mov	word_42A4A, 800h

loc_1B3C4:				; CODE XREF: sub_1A0F4+12C7j
		mov	al, [bx+0Ah]
		or	al, [bp+var_122]
		or	al, 4
		mov	byte_42A4C, al
		cmp	byte ptr [bx+9], 0
		jl	short loc_1B3DC
		mov	al, [bx+9]
		jmp	short loc_1B3E0
; ---------------------------------------------------------------------------
		align 2

loc_1B3DC:				; CODE XREF: sub_1A0F4+12E0j
		mov	al, [bp+var_E4]

loc_1B3E0:				; CODE XREF: sub_1A0F4+12E5j
		mov	byte_42A4D, al
		test	byte ptr [bx+0Ah], 1
		jz	short loc_1B408
		mov	word_42A42, 929Ch
		mov	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1B46A
		jmp	loc_1B03C
; ---------------------------------------------------------------------------
		align 2

loc_1B408:				; CODE XREF: sub_1A0F4+12F3j
		mov	word_42A42, 92A4h
		sub	ax, ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4
		cmp	[bp+var_4E], 0
		jz	short loc_1B449
		mov	[bp+var_4E], 0
		sub	ax, ax
		push	ax
		mov	ax, 0F800h
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4
		cmp	[bp+var_6C], 0
		jz	short loc_1B43C
		mov	[bp+var_6C], 0FC00h

loc_1B43C:				; CODE XREF: sub_1A0F4+1341j
		cmp	[bp+var_A4], 0
		jz	short loc_1B449
		sub	[bp+var_A4], 400h

loc_1B449:				; CODE XREF: sub_1A0F4+1329j
					; sub_1A0F4+134Dj
		mov	al, byte_4499A
		cmp	[bp+var_F6], al
		jnz	short loc_1B464
		mov	al, byte_4499E
		cmp	[bp+var_102], al
		jnz	short loc_1B464
		mov	[bp+var_12A], 0
		jmp	short loc_1B46A
; ---------------------------------------------------------------------------
		align 2

loc_1B464:				; CODE XREF: sub_1A0F4+135Cj
					; sub_1A0F4+1365j
		mov	[bp+var_12A], 0FFFFh

loc_1B46A:				; CODE XREF: sub_1A0F4+130Ej
					; sub_1A0F4+136Dj
		mov	al, [bp+var_102]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_F6]
		cbw
		add	bx, ax
		add	bx, word ptr dword_45E56
		mov	es, word ptr dword_45E56+2
		assume es:nothing
		mov	al, es:[bx]
		mov	[bp+var_4C], al
		cmp	al, 0FFh
		jnz	short loc_1B493
		jmp	loc_1B72E
; ---------------------------------------------------------------------------

loc_1B493:				; CODE XREF: sub_1A0F4+139Aj
		cbw
		mov	bx, ax
		cmp	byte ptr [bx-6EE2h], 0
		jnz	short loc_1B4A0
		jmp	loc_1B626
; ---------------------------------------------------------------------------

loc_1B4A0:				; CODE XREF: sub_1A0F4+13A7j
		cmp	byte_448BE, 0
		jnz	short loc_1B4AA
		jmp	loc_1B72E
; ---------------------------------------------------------------------------

loc_1B4AA:				; CODE XREF: sub_1A0F4+13B1j
		sub	di, di

loc_1B4AC:				; CODE XREF: sub_1A0F4+152Cj
		mov	ax, di
		shl	ax, 1
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		cmp	word ptr [bx-6F4Eh], 0
		jnz	short loc_1B4C0
		jmp	loc_1B61A
; ---------------------------------------------------------------------------

loc_1B4C0:				; CODE XREF: sub_1A0F4+13C7j
		mov	al, [bp+var_4C]
		cbw
		add	ax, 2
		mov	cl, [di-6E99h]
		sub	ch, ch
		cmp	ax, cx
		jz	short loc_1B4D4
		jmp	loc_1B61A
; ---------------------------------------------------------------------------

loc_1B4D4:				; CODE XREF: sub_1A0F4+13DBj
		mov	al, [di-6EB1h]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2D64h
		mov	[bp+var_12E], ax
		mov	ax, di
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	ax, [bx-72DCh]
		mov	dx, [bx-72DAh]
		mov	cl, 6

loc_1B503:				; CODE XREF: sub_1A0F4+1415j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B503
		mov	cx, ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		add	cx, es:[bx]
		sub	cx, [bp+var_58]
		mov	bx, word_46434
		mov	[bx], cx
		mov	bx, [bp+var_150]
		mov	ax, [bx-727Ch]
		mov	dx, [bx-727Ah]
		mov	cl, 6

loc_1B53B:				; CODE XREF: sub_1A0F4+144Dj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B53B
		mov	cx, ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		add	cx, es:[bx+2]
		sub	cx, [bp+var_56]
		mov	bx, word_46434
		mov	[bx+2],	cx
		mov	bx, [bp+var_150]
		mov	ax, [bx-721Ch]
		mov	dx, [bx-721Ah]
		mov	cl, 6

loc_1B575:				; CODE XREF: sub_1A0F4+1487j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B575
		mov	cx, ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		add	cx, es:[bx+4]
		sub	cx, [bp+var_54]
		mov	bx, word_46434
		mov	[bx+4],	cx
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	bx, word_46434
		mov	word ptr [bx+8], 92A4h
		mov	bx, word_46434
		mov	al, [bp+var_122]
		or	al, 5
		mov	[bx+12h], al
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6FDEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ah], ax
		mov	ax, di
		shl	ax, 1
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		mov	ax, [bx-6FAEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ch], ax
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6F7Eh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 400h
		mov	bx, word_46434
		mov	byte ptr [bx+13h], 0
		sub	ax, ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1B61A:				; CODE XREF: sub_1A0F4+13C9j
					; sub_1A0F4+13DDj
		inc	di
		cmp	di, 18h
		jge	short loc_1B623
		jmp	loc_1B4AC
; ---------------------------------------------------------------------------

loc_1B623:				; CODE XREF: sub_1A0F4+152Aj
		jmp	loc_1B72E
; ---------------------------------------------------------------------------

loc_1B626:				; CODE XREF: sub_1A0F4+13A9j
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		add	bx, word_463DC
		mov	es, word_463DE
		mov	al, es:[bx]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2C30h
		mov	[bp+var_12E], ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	ax, es:[bx]
		sub	ax, [bp+var_58]
		mov	bx, word_46434
		mov	[bx], ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	ax, es:[bx+2]
		sub	ax, [bp+var_56]
		mov	bx, word_46434
		mov	[bx+2],	ax
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	ax, es:[bx+4]
		sub	ax, [bp+var_54]
		mov	bx, word_46434
		mov	[bx+4],	ax
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	bx, word_46434
		mov	word ptr [bx+8], 92A4h
		mov	bx, word_46434
		mov	al, [bp+var_122]
		or	al, 4
		mov	[bx+12h], al
		mov	bx, word_46434
		mov	word ptr [bx+0Ah], 0
		mov	bx, word_46434
		mov	word ptr [bx+0Ch], 0
		mov	al, [bp+var_4C]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, word_45DB4
		mov	es, word_45DB6
		mov	ax, es:[bx]
		mov	bx, word_46434
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 64h ; 'd'
		mov	bx, word_46434
		mov	byte ptr [bx+13h], 0
		sub	ax, ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4
		jmp	short loc_1B72E
; ---------------------------------------------------------------------------

loc_1B71E:				; CODE XREF: sub_1A0F4+1039j
		mov	al, [bp+var_F6]
		mov	[bp+var_100], al
		mov	al, [bp+var_102]
		mov	[bp+var_12C], al

loc_1B72E:				; CODE XREF: sub_1A0F4+139Cj
					; sub_1A0F4+13B3j ...
		mov	al, [bp+var_F6]
		cmp	[bp+var_3C], al
		jz	short loc_1B743
		mov	al, [bp+var_100]
		cmp	[bp+var_3C], al
		jz	short loc_1B743
		jmp	loc_1B9DA
; ---------------------------------------------------------------------------

loc_1B743:				; CODE XREF: sub_1A0F4+1641j
					; sub_1A0F4+164Aj
		mov	al, [bp+var_102]
		cmp	[bp+var_60], al
		jz	short loc_1B758
		mov	al, [bp+var_12C]
		cmp	[bp+var_60], al
		jz	short loc_1B758
		jmp	loc_1B9DA
; ---------------------------------------------------------------------------

loc_1B758:				; CODE XREF: sub_1A0F4+1656j
					; sub_1A0F4+165Fj
		cmp	byte_448BE, 0
		jnz	short loc_1B762
		jmp	loc_1B89F
; ---------------------------------------------------------------------------

loc_1B762:				; CODE XREF: sub_1A0F4+1669j
		sub	di, di

loc_1B764:				; CODE XREF: sub_1A0F4+17A8j
		mov	ax, di
		shl	ax, 1
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		cmp	word ptr [bx-6F4Eh], 0
		jnz	short loc_1B778
		jmp	loc_1B896
; ---------------------------------------------------------------------------

loc_1B778:				; CODE XREF: sub_1A0F4+167Fj
		cmp	byte ptr [di-6E99h], 0
		jz	short loc_1B782
		jmp	loc_1B896
; ---------------------------------------------------------------------------

loc_1B782:				; CODE XREF: sub_1A0F4+1689j
		mov	al, [di-6EB1h]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2D64h
		mov	[bp+var_12E], ax
		mov	ax, di
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	ax, [bx-72DCh]
		mov	dx, [bx-72DAh]
		add	ax, word_445E6
		adc	dx, word_445E8
		mov	cl, 6

loc_1B7B9:				; CODE XREF: sub_1A0F4+16CBj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B7B9
		sub	ax, [bp+var_58]
		mov	bx, word_46434
		mov	[bx], ax
		mov	bx, [bp+var_150]
		mov	ax, [bx-727Ch]
		mov	dx, [bx-727Ah]
		add	ax, word_445EA
		adc	dx, word_445EC
		mov	cl, 6

loc_1B7E0:				; CODE XREF: sub_1A0F4+16F2j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B7E0
		sub	ax, [bp+var_56]
		mov	bx, word_46434
		mov	[bx+2],	ax
		mov	bx, [bp+var_150]
		mov	ax, [bx-721Ch]
		mov	dx, [bx-721Ah]
		add	ax, word_445EE
		adc	dx, word_445F0
		mov	cl, 6

loc_1B808:				; CODE XREF: sub_1A0F4+171Aj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B808
		sub	ax, [bp+var_54]
		mov	bx, word_46434
		mov	[bx+4],	ax
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	bx, word_46434
		mov	word ptr [bx+8], 92A4h
		mov	bx, word_46434
		mov	al, [bp+var_122]
		or	al, 5
		mov	[bx+12h], al
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6FDEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ah], ax
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6FAEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ch], ax
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6F7Eh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 400h
		mov	bx, word_46434
		mov	al, byte_449A8
		mov	[bx+13h], al
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_6C]
		and	ax, [bp+var_12A]
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1B896:				; CODE XREF: sub_1A0F4+1681j
					; sub_1A0F4+168Bj
		inc	di
		cmp	di, 18h
		jge	short loc_1B89F
		jmp	loc_1B764
; ---------------------------------------------------------------------------

loc_1B89F:				; CODE XREF: sub_1A0F4+166Bj
					; sub_1A0F4+17A6j
		mov	[bp+var_12E], 20B4h
		mov	bx, word_46434
		mov	ax, word_445E6
		mov	dx, word_445E8
		mov	cl, 6

loc_1B8B2:				; CODE XREF: sub_1A0F4+17C4j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B8B2
		sub	ax, [bp+var_58]
		mov	[bx], ax
		mov	bx, word_46434
		mov	ax, word_445EA
		mov	dx, word_445EC
		mov	cl, 6

loc_1B8CC:				; CODE XREF: sub_1A0F4+17DEj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B8CC
		sub	ax, [bp+var_56]
		mov	[bx+2],	ax
		mov	bx, word_46434
		mov	ax, word_445EE
		mov	dx, word_445F0
		mov	cl, 6

loc_1B8E7:				; CODE XREF: sub_1A0F4+17F9j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1B8E7
		sub	ax, [bp+var_54]
		mov	[bx+4],	ax
		cmp	[bp+var_FC], 0
		jnz	short loc_1B903
		cmp	byte_3B8FA, 2
		jbe	short loc_1B914

loc_1B903:				; CODE XREF: sub_1A0F4+1806j
		mov	bx, [bp+var_12E]
		mov	ax, [bx+6]
		mov	bx, word_46434
		mov	[bx+6],	ax
		jmp	short loc_1B94A
; ---------------------------------------------------------------------------
		align 2

loc_1B914:				; CODE XREF: sub_1A0F4+180Dj
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	ax, 754Ah
		push	ax
		mov	ax, 8C8Ah
		push	ax
		mov	ax, 8C78h
		push	ax
		mov	ax, 8ECAh
		push	ax
		push	word_44606
		mov	ax, word_43892
		mov	dx, word_43894
		add	ax, 30h	; '0'
		push	dx
		push	ax
		call	sub_204AE
		add	sp, 0Eh

loc_1B94A:				; CODE XREF: sub_1A0F4+181Dj
		cmp	word_44984, 0
		jz	short loc_1B964
		mov	bx, word_46434
		mov	word ptr [bx+8], 92ACh

loc_1B95A:				; CODE XREF: sub_1A0F4+1891j
		mov	bx, word_46434
		mov	byte ptr [bx+12h], 0Ch
		jmp	short loc_1B990
; ---------------------------------------------------------------------------

loc_1B964:				; CODE XREF: sub_1A0F4+185Bj
		cmp	byte_446AF, 1
		jnz	short loc_1B988
		push	si
		push	di
		lea	di, [bp+var_6A]
		mov	si, 3394h
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, word_46434
		lea	ax, [bp+var_6A]
		mov	[bx+8],	ax
		jmp	short loc_1B95A
; ---------------------------------------------------------------------------
		align 2

loc_1B988:				; CODE XREF: sub_1A0F4+1875j
		mov	bx, word_46434
		mov	byte ptr [bx+12h], 4

loc_1B990:				; CODE XREF: sub_1A0F4+186Ej
		mov	bx, word_46434
		mov	ax, word_44602
		neg	ax
		mov	[bx+0Ah], ax
		mov	bx, word_46434
		mov	ax, word_44600
		neg	ax
		mov	[bx+0Ch], ax
		mov	bx, word_46434
		mov	ax, word_445FE
		neg	ax
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 12Ch
		mov	bx, word_46434
		mov	al, byte_449A8
		mov	[bx+13h], al
		mov	ax, 2
		push	ax
		mov	ax, [bp+var_6C]
		and	ax, [bp+var_12A]
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1B9DA:				; CODE XREF: sub_1A0F4+164Cj
					; sub_1A0F4+1661j
		mov	al, [bp+var_F6]
		cmp	[bp+var_4A], al
		jz	short loc_1B9EF
		mov	al, [bp+var_100]
		cmp	[bp+var_4A], al
		jz	short loc_1B9EF
		jmp	loc_1BC89
; ---------------------------------------------------------------------------

loc_1B9EF:				; CODE XREF: sub_1A0F4+18EDj
					; sub_1A0F4+18F6j
		mov	al, [bp+var_102]
		cmp	[bp+var_6E], al
		jz	short loc_1BA04
		mov	al, [bp+var_12C]
		cmp	[bp+var_6E], al
		jz	short loc_1BA04
		jmp	loc_1BC89
; ---------------------------------------------------------------------------

loc_1BA04:				; CODE XREF: sub_1A0F4+1902j
					; sub_1A0F4+190Bj
		cmp	byte_448BE, 0
		jnz	short loc_1BA0E
		jmp	loc_1BB4C
; ---------------------------------------------------------------------------

loc_1BA0E:				; CODE XREF: sub_1A0F4+1915j
		sub	di, di

loc_1BA10:				; CODE XREF: sub_1A0F4+1A55j
		mov	ax, di
		shl	ax, 1
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		cmp	word ptr [bx-6F4Eh], 0
		jnz	short loc_1BA24
		jmp	loc_1BB43
; ---------------------------------------------------------------------------

loc_1BA24:				; CODE XREF: sub_1A0F4+192Bj
		cmp	byte ptr [di-6E99h], 1
		jz	short loc_1BA2E
		jmp	loc_1BB43
; ---------------------------------------------------------------------------

loc_1BA2E:				; CODE XREF: sub_1A0F4+1935j
		mov	al, [di-6EB1h]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2D64h
		mov	[bp+var_12E], ax
		mov	ax, di
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_150], ax
		mov	bx, ax
		mov	ax, [bx-72DCh]
		mov	dx, [bx-72DAh]
		add	ax, word_446B6
		adc	dx, word_446B8
		mov	cl, 6

loc_1BA65:				; CODE XREF: sub_1A0F4+1977j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BA65
		sub	ax, [bp+var_58]
		mov	bx, word_46434
		mov	[bx], ax
		mov	bx, [bp+var_150]
		mov	ax, [bx-727Ch]
		mov	dx, [bx-727Ah]
		add	ax, word_446BA
		adc	dx, word_446BC
		mov	cl, 6

loc_1BA8C:				; CODE XREF: sub_1A0F4+199Ej
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BA8C
		sub	ax, [bp+var_56]
		mov	bx, word_46434
		mov	[bx+2],	ax
		mov	bx, [bp+var_150]
		mov	ax, [bx-721Ch]
		mov	dx, [bx-721Ah]
		add	ax, word_446BE
		adc	dx, word_446C0
		mov	cl, 6

loc_1BAB4:				; CODE XREF: sub_1A0F4+19C6j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BAB4
		sub	ax, [bp+var_54]
		mov	bx, word_46434
		mov	[bx+4],	ax
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	bx, word_46434
		mov	word ptr [bx+8], 92A4h
		mov	bx, word_46434
		mov	al, [bp+var_122]
		or	al, 5
		mov	[bx+12h], al
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6FDEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ah], ax
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6FAEh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Ch], ax
		mov	bx, word ptr [bp+var_154]
		mov	ax, [bx-6F7Eh]
		neg	ax
		mov	bx, word_46434
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 400h
		mov	bx, word_46434
		mov	al, byte_449AF
		mov	[bx+13h], al
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_A4]
		and	ax, [bp+var_12A]
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1BB43:				; CODE XREF: sub_1A0F4+192Dj
					; sub_1A0F4+1937j
		inc	di
		cmp	di, 18h
		jge	short loc_1BB4C
		jmp	loc_1BA10
; ---------------------------------------------------------------------------

loc_1BB4C:				; CODE XREF: sub_1A0F4+1917j
					; sub_1A0F4+1A53j
		mov	[bp+var_12E], 20C2h
		mov	bx, word_46434
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_1BB5F:				; CODE XREF: sub_1A0F4+1A71j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BB5F
		sub	ax, [bp+var_58]
		mov	[bx], ax
		mov	bx, word_46434
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_1BB79:				; CODE XREF: sub_1A0F4+1A8Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BB79
		sub	ax, [bp+var_56]
		mov	[bx+2],	ax
		mov	bx, word_46434
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_1BB94:				; CODE XREF: sub_1A0F4+1AA6j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1BB94
		sub	ax, [bp+var_54]
		mov	[bx+4],	ax
		cmp	[bp+var_FC], 0
		jnz	short loc_1BBB0
		cmp	byte_3B8FA, 2
		jbe	short loc_1BBC0

loc_1BBB0:				; CODE XREF: sub_1A0F4+1AB3j
		mov	bx, [bp+var_12E]
		mov	ax, [bx+6]
		mov	bx, word_46434
		mov	[bx+6],	ax
		jmp	short loc_1BBF6
; ---------------------------------------------------------------------------

loc_1BBC0:				; CODE XREF: sub_1A0F4+1ABAj
		mov	bx, [bp+var_12E]
		mov	ax, [bx+4]
		mov	bx, word_46434
		mov	[bx+6],	ax
		mov	ax, 7594h
		push	ax
		mov	ax, 9184h
		push	ax
		mov	ax, 8D1Ah
		push	ax
		mov	ax, 8F9Ah
		push	ax
		push	word_446D6
		mov	ax, word_438A8
		mov	dx, word_438AA
		add	ax, 30h	; '0'
		push	dx
		push	ax
		call	sub_204AE
		add	sp, 0Eh

loc_1BBF6:				; CODE XREF: sub_1A0F4+1ACAj
		cmp	word_44984, 0
		jz	short loc_1BC10
		mov	bx, word_46434
		mov	word ptr [bx+8], 92B4h

loc_1BC06:				; CODE XREF: sub_1A0F4+1B3Fj
		mov	bx, word_46434
		mov	byte ptr [bx+12h], 0Ch
		jmp	short loc_1BC3E
; ---------------------------------------------------------------------------

loc_1BC10:				; CODE XREF: sub_1A0F4+1B07j
		cmp	byte_4477F, 1
		jnz	short loc_1BC36
		push	si
		push	di
		lea	di, [bp+var_8E]
		mov	si, 3394h
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, word_46434
		lea	ax, [bp+var_8E]
		mov	[bx+8],	ax
		jmp	short loc_1BC06
; ---------------------------------------------------------------------------
		align 2

loc_1BC36:				; CODE XREF: sub_1A0F4+1B21j
		mov	bx, word_46434
		mov	byte ptr [bx+12h], 4

loc_1BC3E:				; CODE XREF: sub_1A0F4+1B1Aj
		mov	bx, word_46434
		mov	ax, word_446D2
		neg	ax
		mov	[bx+0Ah], ax
		mov	bx, word_46434
		mov	ax, word_446D0
		neg	ax
		mov	[bx+0Ch], ax
		mov	bx, word_46434
		mov	ax, word_446CE
		neg	ax
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 12Ch
		mov	bx, word_46434
		mov	al, byte_449AF
		mov	[bx+13h], al
		mov	ax, 3
		push	ax
		mov	ax, [bp+var_A4]
		and	ax, [bp+var_12A]
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1BC89:				; CODE XREF: sub_1A0F4+18F8j
					; sub_1A0F4+190Dj
		cmp	byte_44889, 0
		jz	short loc_1BC93
		jmp	loc_1BEAA
; ---------------------------------------------------------------------------

loc_1BC93:				; CODE XREF: sub_1A0F4+1B9Aj
		mov	al, byte_4499A
		cmp	[bp+var_F6], al
		jz	short loc_1BCA5
		cmp	[bp+var_100], al
		jz	short loc_1BCA5
		jmp	loc_1BEAA
; ---------------------------------------------------------------------------

loc_1BCA5:				; CODE XREF: sub_1A0F4+1BA6j
					; sub_1A0F4+1BACj
		mov	al, byte_4499E
		cmp	[bp+var_102], al
		jz	short loc_1BCB7
		cmp	[bp+var_12C], al
		jz	short loc_1BCB7
		jmp	loc_1BEAA
; ---------------------------------------------------------------------------

loc_1BCB7:				; CODE XREF: sub_1A0F4+1BB8j
					; sub_1A0F4+1BBEj
		mov	ax, 24h	; '$'
		push	ax
		push	word_44DCA
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	[bp+var_DE], ax
		mov	ax, 24h	; '$'
		push	ax
		push	word_44DCA
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, 38h	; '8'
		mov	[bp+var_36], ax
		mov	ax, word_43748
		mov	dx, word_4374A
		add	ax, 30h	; '0'
		mov	word ptr [bp+var_108], ax
		mov	word ptr [bp+var_108+2], dx
		les	bx, [bp+var_108]
		mov	ax, [bp+var_DE]
		sub	ax, 24h	; '$'
		mov	es:[bx], ax
		les	bx, [bp+var_108]
		mov	ax, [bp+var_DE]
		sub	ax, 24h	; '$'
		mov	es:[bx+6], ax
		les	bx, [bp+var_108]
		mov	ax, 24h	; '$'
		sub	ax, [bp+var_DE]
		mov	es:[bx+0Ch], ax
		les	bx, [bp+var_108]
		mov	ax, 24h	; '$'
		sub	ax, [bp+var_DE]
		mov	es:[bx+12h], ax
		les	bx, [bp+var_108]
		mov	ax, [bp+var_36]
		mov	es:[bx+4], ax
		les	bx, [bp+var_108]
		mov	ax, [bp+var_36]
		mov	es:[bx+0Ah], ax
		les	bx, [bp+var_108]
		mov	ax, [bp+var_36]
		mov	es:[bx+10h], ax
		les	bx, [bp+var_108]
		mov	ax, [bp+var_36]
		mov	es:[bx+16h], ax
		mov	ax, 24h	; '$'
		push	ax
		mov	ax, word_45516
		add	ah, 1
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 1B6h
		push	cx
		mov	cx, word_45516
		add	ch, 2
		push	cx
		mov	word ptr [bp+var_154], ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499A
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-599Eh]
		add	cx, word ptr [bp+var_154]
		sub	cx, [bp+var_58]
		mov	bx, word_46434
		mov	[bx], cx
		mov	al, byte_4499B
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+178h]
		sub	ax, [bp+var_56]
		mov	bx, word_46434
		mov	[bx+2],	ax
		mov	ax, 24h	; '$'
		push	ax
		mov	ax, word_45516
		add	ah, 1
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, 1B6h
		push	cx
		mov	cx, word_45516
		add	ch, 2
		push	cx
		mov	word ptr [bp+var_154], ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, ax
		mov	al, byte_4499E
		cbw
		mov	bx, ax
		shl	bx, 1
		add	cx, [bx-55EAh]
		add	cx, word ptr [bp+var_154]
		sub	cx, [bp+var_54]
		mov	bx, word_46434
		mov	[bx+4],	cx
		mov	bx, word_46434
		mov	word ptr [bx+6], 7FD6h
		mov	bx, word_46434
		mov	word ptr [bx+8], 92A4h
		mov	bx, word_46434
		mov	al, [bp+var_122]
		or	al, 4
		mov	[bx+12h], al
		mov	bx, word_46434
		mov	word ptr [bx+0Ah], 0
		mov	bx, word_46434
		mov	word ptr [bx+0Ch], 0
		mov	bx, word_46434
		mov	ax, word_45516
		mov	[bx+0Eh], ax
		mov	bx, word_46434
		mov	word ptr [bx+10h], 400h
		mov	ax, word_44DCA
		mov	cl, 6
		sar	ax, cl
		mov	[bp+var_DE], ax
		cmp	ax, 3
		jle	short loc_1BE8D
		mov	[bp+var_DE], 3

loc_1BE8D:				; CODE XREF: sub_1A0F4+1D91j
		mov	bx, word_46434
		mov	al, byte ptr [bp+var_DE]
		mov	[bx+13h], al
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_12A]
		and	ax, 0F800h
		push	ax
		push	cs
		call	near ptr sub_1CB80
		add	sp, 4

loc_1BEAA:				; CODE XREF: sub_1A0F4+1B9Cj
					; sub_1A0F4+1BAEj ...
		cmp	byte_45D7E, 0
		jnz	short loc_1BEB4
		jmp	loc_1BF6C
; ---------------------------------------------------------------------------

loc_1BEB4:				; CODE XREF: sub_1A0F4+1DBBj
		cmp	byte_45D7E, 1
		jle	short loc_1BED0
		mov	ax, 0A6ACh
		push	ax
		mov	ax, 9D6Ah
		push	ax
		mov	al, byte_45D7E
		cbw
		push	ax
		call	sub_36BE8
		add	sp, 6

loc_1BED0:				; CODE XREF: sub_1A0F4+1DC5j
		mov	[bp+var_DE], 0
		jmp	short loc_1BF38
; ---------------------------------------------------------------------------

loc_1BED8:				; CODE XREF: sub_1A0F4+1E60j
		cmp	byte_446A2, 0
		jnz	short loc_1BF09

loc_1BEDF:				; CODE XREF: sub_1A0F4+1E13j
		mov	byte_45514, 2Eh	; '.'

loc_1BEE4:				; CODE XREF: sub_1A0F4+1E1Aj
					; sub_1A0F4+1E67j
		mov	ax, 14h
		imul	di
		add	ax, 72CAh
		push	ax
		call	sub_24E9E
		add	sp, 2
		cbw
		mov	[bp+var_14E], ax
		or	ax, ax
		jle	short loc_1BF10
		jmp	loc_1B03C
; ---------------------------------------------------------------------------
		align 2

loc_1BF02:				; CODE XREF: sub_1A0F4+1E65j
		cmp	byte_44772, 0
		jz	short loc_1BEDF

loc_1BF09:				; CODE XREF: sub_1A0F4+1DE9j
		mov	byte_45514, 2Fh	; '/'
		jmp	short loc_1BEE4
; ---------------------------------------------------------------------------

loc_1BF10:				; CODE XREF: sub_1A0F4+1E08j
		cmp	[bp+var_14E], 0
		jnz	short loc_1BF34
		mov	al, [di-5D6Eh]
		cbw
		cmp	ax, 2
		jz	short loc_1BF28
		cmp	ax, 3
		jz	short loc_1BF5E
		jmp	short loc_1BF34
; ---------------------------------------------------------------------------

loc_1BF28:				; CODE XREF: sub_1A0F4+1E2Bj
		cmp	byte_446AF, 1
		jnz	short loc_1BF34
		mov	[bp+var_DC], 1

loc_1BF34:				; CODE XREF: sub_1A0F4+1E21j
					; sub_1A0F4+1E32j ...
		inc	[bp+var_DE]

loc_1BF38:				; CODE XREF: sub_1A0F4+1DE2j
		mov	al, byte_45D7E
		cbw
		cmp	[bp+var_DE], ax
		jge	short loc_1BF6C
		mov	bx, [bp+var_DE]
		shl	bx, 1
		mov	di, [bx-5954h]
		mov	al, [di-5D6Eh]
		cbw
		cmp	ax, 2
		jz	short loc_1BED8
		cmp	ax, 3
		jz	short loc_1BF02
		jmp	short loc_1BEE4
; ---------------------------------------------------------------------------
		align 2

loc_1BF5E:				; CODE XREF: sub_1A0F4+1E30j
		cmp	byte_4477F, 1
		jnz	short loc_1BF34
		mov	[bp+var_DB], 1
		jmp	short loc_1BF34
; ---------------------------------------------------------------------------

loc_1BF6C:				; CODE XREF: sub_1A0F4+1DBDj
					; sub_1A0F4+1E4Cj ...
		inc	si

loc_1BF6D:				; CODE XREF: sub_1A0F4+C20j
		cmp	si, 17h
		jl	short loc_1BF75
		jmp	loc_1B03C
; ---------------------------------------------------------------------------

loc_1BF75:				; CODE XREF: sub_1A0F4+1E7Cj
		cmp	[bp+si+var_32],	0
		jnz	short loc_1BF6C
		mov	al, [bp+si+var_86]
		mov	[bp+var_F6], al
		mov	al, [bp+si+var_D4]
		mov	[bp+var_102], al
		mov	al, [bp+si+var_14C]
		mov	[bp+var_62], al
		mov	al, [bp+si+var_1A]
		mov	[bp+var_10C], al
		mov	al, [bp+si+var_BC]
		mov	[bp+var_FC], al
		mov	[bp+var_12A], 0
		cmp	[bp+var_62], 0
		jnz	short loc_1BFB0
		jmp	loc_1AD4A
; ---------------------------------------------------------------------------

loc_1BFB0:				; CODE XREF: sub_1A0F4+1EB7j
		mov	al, [bp+var_62]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_12E], ax
		mov	bx, ax
		mov	al, [bx+0Bh]
		cbw
		or	ax, ax
		jnz	short loc_1BFD5
		jmp	loc_1AD18
; ---------------------------------------------------------------------------

loc_1BFD5:				; CODE XREF: sub_1A0F4+1EDCj
		cmp	ax, 1
		jnz	short loc_1BFDD
		jmp	loc_1AD26
; ---------------------------------------------------------------------------

loc_1BFDD:				; CODE XREF: sub_1A0F4+1EE4j
		cmp	ax, 2
		jnz	short loc_1BFE5
		jmp	loc_1AD34
; ---------------------------------------------------------------------------

loc_1BFE5:				; CODE XREF: sub_1A0F4+1EECj
		cmp	ax, 3
		jnz	short loc_1BFED
		jmp	loc_1AD3C
; ---------------------------------------------------------------------------

loc_1BFED:				; CODE XREF: sub_1A0F4+1EF4j
		jmp	loc_1AD55
; ---------------------------------------------------------------------------

loc_1BFF0:				; CODE XREF: sub_1A0F4+1FE8j
		mov	[bp+var_3E], 92B4h
		jmp	short loc_1C009
; ---------------------------------------------------------------------------
		align 2

loc_1BFF8:				; CODE XREF: sub_1A0F4+1FE1j
		or	si, si
		jnz	short loc_1C002
		lea	ax, [bp+var_6A]
		jmp	short loc_1C006
; ---------------------------------------------------------------------------
		align 2

loc_1C002:				; CODE XREF: sub_1A0F4+1F06j
		lea	ax, [bp+var_8E]

loc_1C006:				; CODE XREF: sub_1A0F4+1F0Bj
		mov	[bp+var_3E], ax

loc_1C009:				; CODE XREF: sub_1A0F4+1F01j
					; sub_1A0F4+1FF0j
		push	[bp+arg_2]
		push	[bp+var_3E]
		call	sub_265EC
		add	sp, 4
		or	al, al
		jz	short loc_1C01E
		jmp	loc_1C0C1
; ---------------------------------------------------------------------------

loc_1C01E:				; CODE XREF: sub_1A0F4+1F25j
		mov	bx, [bp+var_3E]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		mov	bx, [bp+var_3E]
		mov	ax, [bx+2]
		add	ax, [bx]
		sar	ax, 1
		mov	[bp+var_F2], ax
		mov	ax, [bx+4]
		add	ax, [bx+6]
		sar	ax, 1
		mov	[bp+var_F0], ax
		mov	ax, [bx+2]
		sub	ax, [bx]
		mov	[bp+var_DE], ax
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		mov	[bp+var_36], ax
		mov	ax, [bp+var_DE]
		cmp	[bp+var_36], ax
		jle	short loc_1C070
		mov	ax, [bp+var_36]
		mov	[bp+var_DE], ax

loc_1C070:				; CODE XREF: sub_1A0F4+1F73j
		mov	ax, word_445D4
		shr	ax, 1
		shr	ax, 1
		sub	dx, dx
		mov	cx, 3
		div	cx
		mov	di, dx
		mov	bx, di
		shl	bx, 1
		mov	ax, [bx-613Ah]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_DE]
		cwd
		mov	dh, dl
		mov	dl, ah
		mov	ah, al
		sub	al, al
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_36], ax
		push	[bp+var_F0]
		push	[bp+var_F2]
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx-59B2h]
		push	word ptr [bx-59B4h]
		push	ax
		call	sub_347DC
		add	sp, 0Ah

loc_1C0C1:				; CODE XREF: sub_1A0F4+1F27j
					; sub_1A0F4+1FD8j
		inc	si

loc_1C0C2:				; CODE XREF: sub_1A0F4+F8Cj
		cmp	si, 2
		jge	short loc_1C0E8
		cmp	[bp+si+var_DC],	0
		jz	short loc_1C0C1
		cmp	word_44984, 0
		jnz	short loc_1C0D8
		jmp	loc_1BFF8
; ---------------------------------------------------------------------------

loc_1C0D8:				; CODE XREF: sub_1A0F4+1FDFj
		or	si, si
		jz	short loc_1C0DF
		jmp	loc_1BFF0
; ---------------------------------------------------------------------------

loc_1C0DF:				; CODE XREF: sub_1A0F4+1FE6j
		mov	[bp+var_3E], 92ACh
		jmp	loc_1C009
; ---------------------------------------------------------------------------
		align 2

loc_1C0E8:				; CODE XREF: sub_1A0F4+1FD1j
		mov	bx, [bp+arg_2]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		cmp	byte_3B8F5, 0
		jz	short loc_1C10A
		jmp	loc_1C1C6
; ---------------------------------------------------------------------------

loc_1C10A:				; CODE XREF: sub_1A0F4+2011j
		cmp	byte_463E0, 0
		jz	short loc_1C11E
		mov	[bp+var_104], 8F46h
		mov	si, word_445DC
		jmp	short loc_1C128
; ---------------------------------------------------------------------------
		align 2

loc_1C11E:				; CODE XREF: sub_1A0F4+201Bj
		mov	[bp+var_104], 8E76h
		mov	si, word_445DA

loc_1C128:				; CODE XREF: sub_1A0F4+2027j
		mov	bx, [bp+var_104]
		cmp	byte ptr [bx+0C9h], 1
		jnz	short loc_1C17C
		cmp	word_44984, 0
		jz	short loc_1C162
		mov	ax, 9294h
		push	ax
		push	ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		push	ax
		push	word ptr [bx+4]
		mov	ax, word_445D4
		sub	ax, si
		push	ax
		push	cs
		call	near ptr sub_1D5B4

loc_1C156:				; CODE XREF: sub_1A0F4+20B6j
		add	sp, 6
		push	ax
		call	sub_26572
		jmp	short loc_1C1C3
; ---------------------------------------------------------------------------
		align 2

loc_1C162:				; CODE XREF: sub_1A0F4+2044j
		mov	bx, [bp+arg_2]
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		push	ax
		push	word ptr [bx+4]
		mov	ax, word_445D4
		sub	ax, si
		push	ax
		push	cs
		call	near ptr sub_1D5B4
		jmp	short loc_1C1C3
; ---------------------------------------------------------------------------
		align 2

loc_1C17C:				; CODE XREF: sub_1A0F4+203Dj
		mov	bx, [bp+var_104]
		cmp	byte ptr [bx+0C9h], 2
		jnz	short loc_1C1C6
		cmp	word_44984, 0
		jz	short loc_1C1AC
		mov	ax, 9294h
		push	ax
		push	ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		push	ax
		push	word ptr [bx+4]
		mov	ax, word_445D4
		sub	ax, si
		push	ax
		push	cs
		call	near ptr sub_1D534
		jmp	short loc_1C156
; ---------------------------------------------------------------------------

loc_1C1AC:				; CODE XREF: sub_1A0F4+2098j
		mov	bx, [bp+arg_2]
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		push	ax
		push	word ptr [bx+4]
		mov	ax, word_445D4
		sub	ax, si
		push	ax
		push	cs
		call	near ptr sub_1D534

loc_1C1C3:				; CODE XREF: sub_1A0F4+206Bj
					; sub_1A0F4+2085j
		add	sp, 6

loc_1C1C6:				; CODE XREF: sub_1A0F4+2013j
					; sub_1A0F4+2091j
		cmp	byte_45DB2, 0
		jz	short loc_1C1D0
		jmp	loc_1C25B
; ---------------------------------------------------------------------------

loc_1C1D0:				; CODE XREF: sub_1A0F4+20D7j
		cmp	byte_44889, 0
		jnz	short loc_1C1DA
		jmp	loc_1C25B
; ---------------------------------------------------------------------------

loc_1C1DA:				; CODE XREF: sub_1A0F4+20E1j
		sub	ax, ax
		push	ax		; int
		mov	ax, word_45A24
		add	ax, word_42D02
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		push	word_459F6
		push	word_459F4
		call	sub_2988A
		add	sp, 4
		cmp	word_44984, 0
		jz	short loc_1C238
		mov	ax, 92C4h
		push	ax
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, word_461CC
		add	ax, 2
		push	ax
		mov	ax, 8Ch	; 'å'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		call	sub_26572
		add	sp, 6
		jmp	short loc_1C256
; ---------------------------------------------------------------------------
		align 4

loc_1C238:				; CODE XREF: sub_1A0F4+2112j
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, word_461CC
		add	ax, 2
		push	ax
		mov	ax, 8Ch	; 'å'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah

loc_1C256:				; CODE XREF: sub_1A0F4+2140j
		call	sub_298A8

loc_1C25B:				; CODE XREF: sub_1A0F4+20D9j
					; sub_1A0F4+20E3j
		cmp	word_44984, 0
		jnz	short loc_1C265
		jmp	loc_1C2F8
; ---------------------------------------------------------------------------

loc_1C265:				; CODE XREF: sub_1A0F4+216Cj
		mov	ax, 9294h
		push	ax
		push	ax
		push	cs
		call	near ptr sub_1D12E
		push	ax
		call	sub_26572
		add	sp, 6
		cmp	[bp+var_132], 0
		jz	short loc_1C2AE
		mov	ax, [bp+arg_2]
		push	si
		push	di
		mov	di, 9294h
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	si, 1

loc_1C293:				; CODE XREF: sub_1A0F4+21B8j
		mov	bx, si
		mov	cl, 3
		shl	bx, cl
		push	si
		push	di
		lea	di, [bx-6D6Ch]
		mov	si, 3394h
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	si
		cmp	si, 0Fh
		jl	short loc_1C293

loc_1C2AE:				; CODE XREF: sub_1A0F4+2188j
		sub	si, si

loc_1C2B0:				; CODE XREF: sub_1A0F4+21E6j
		mov	ax, si
		mov	cl, 3
		shl	ax, cl
		mov	word ptr [bp+var_154], ax
		mov	bx, ax
		lea	ax, [bx-6D6Ch]
		mov	bx, word ptr [bp+var_154]
		add	bx, word_3B80A
		push	si
		push	di
		mov	di, bx
		mov	si, ax
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	si
		cmp	si, 0Fh
		jl	short loc_1C2B0
		mov	al, [bp+arg_0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bp+var_5C]
		mov	[bx-6D74h], ax
		mov	ax, [bp+var_5C]
		mov	word_463D6, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_1C2F8:				; CODE XREF: sub_1A0F4+216Ej
		push	cs
		call	near ptr sub_1D12E
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1A0F4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1C302	proc far		; CODE XREF: sub_1C474+3CAp
					; sub_1C474+5D5p ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		cmp	byte_3B8FA, 4
		jz	short loc_1C320
		mov	si, [bp+arg_4]
		mov	bx, [bp+arg_0]
		sub	si, [bx+4]
		sub	si, word_43932
		jmp	short loc_1C329
; ---------------------------------------------------------------------------

loc_1C320:				; CODE XREF: sub_1C302+Dj
		mov	si, [bp+arg_4]
		mov	bx, [bp+arg_0]
		sub	si, [bx+4]

loc_1C329:				; CODE XREF: sub_1C302+1Cj
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		cmp	ax, si
		jge	short loc_1C339
		mov	si, [bx+6]
		sub	si, [bx+4]

loc_1C339:				; CODE XREF: sub_1C302+2Fj
		or	si, si
		jle	short loc_1C35F
		mov	ax, [bx+4]
		add	ax, si
		push	ax
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		push	word_455D0
		call	sub_332C0
		add	sp, 2

loc_1C35F:				; CODE XREF: sub_1C302+39j
		cmp	byte_3B8FA, 4
		jnz	short loc_1C369
		jmp	loc_1C432
; ---------------------------------------------------------------------------

loc_1C369:				; CODE XREF: sub_1C302+62j
		mov	si, [bp+arg_2]
		add	si, 200h
		and	si, 3FFh
		sub	si, 400h
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_4]
		cmp	[bx+4],	ax
		jl	short loc_1C386
		jmp	loc_1C432
; ---------------------------------------------------------------------------

loc_1C386:				; CODE XREF: sub_1C302+7Fj
		sub	ax, word_454CE
		cmp	ax, [bx+6]
		jle	short loc_1C392
		jmp	loc_1C432
; ---------------------------------------------------------------------------

loc_1C392:				; CODE XREF: sub_1C302+8Bj
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		mov	ax, [bp+arg_4]
		sub	ax, word_45518
		push	ax
		push	si
		push	word ptr dword_45D80+2
		push	word ptr dword_45D80
		call	sub_33BBC
		add	sp, 8
		mov	ax, [bp+arg_4]
		sub	ax, word_4551A
		push	ax
		lea	ax, [si+140h]
		push	ax
		push	word ptr dword_45D84+2
		push	word ptr dword_45D84
		call	sub_33BBC
		add	sp, 8
		mov	ax, [bp+arg_4]
		sub	ax, word_4551C
		push	ax
		lea	ax, [si+200h]
		push	ax
		push	word ptr dword_45D88+2
		push	word ptr dword_45D88
		call	sub_33BBC
		add	sp, 8
		mov	ax, [bp+arg_4]
		sub	ax, word_4551E
		push	ax
		lea	ax, [si+340h]
		push	ax
		push	word ptr dword_45D8C+2
		push	word ptr dword_45D8C
		call	sub_33BBC
		add	sp, 8
		mov	ax, [bp+arg_4]
		sub	ax, word_45518
		push	ax
		lea	ax, [si+400h]
		push	ax
		push	word ptr dword_45D80+2
		push	word ptr dword_45D80
		call	sub_33BBC
		add	sp, 8

loc_1C432:				; CODE XREF: sub_1C302+64j
					; sub_1C302+81j ...
		mov	bx, [bp+arg_0]
		mov	ax, [bp+arg_4]
		cmp	[bx+4],	ax
		jle	short loc_1C442
		mov	di, [bx+4]
		jmp	short loc_1C445
; ---------------------------------------------------------------------------

loc_1C442:				; CODE XREF: sub_1C302+139j
		mov	di, [bp+arg_4]

loc_1C445:				; CODE XREF: sub_1C302+13Ej
		mov	si, [bx+6]
		sub	si, di
		or	si, si
		jle	short loc_1C46D
		mov	ax, di
		add	ax, si
		push	ax
		push	di
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		push	word_44A88
		call	sub_332C0
		add	sp, 2

loc_1C46D:				; CODE XREF: sub_1C302+14Aj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1C302	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1C474	proc far		; CODE XREF: sub_1A0F4+F63p

var_78		= byte ptr -78h
var_76		= word ptr -76h
var_72		= word ptr -72h
var_6E		= word ptr -6Eh
var_5C		= word ptr -5Ch
var_5A		= word ptr -5Ah
var_58		= word ptr -58h
var_56		= word ptr -56h
var_54		= word ptr -54h
var_50		= word ptr -50h
var_4E		= word ptr -4Eh
var_4C		= word ptr -4Ch
var_4A		= word ptr -4Ah
var_48		= word ptr -48h
var_46		= word ptr -46h
var_44		= word ptr -44h
var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= byte ptr -24h
var_20		= word ptr -20h
var_1E		= byte ptr -1Eh
var_1A		= word ptr -1Ah
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 78h
		push	di
		push	si
		mov	byte_46166, 0
		mov	[bp+var_5C], 0
		mov	bx, [bp+arg_2]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		cmp	[bp+arg_8], 0
		jnz	short loc_1C4A7
		jmp	loc_1C958
; ---------------------------------------------------------------------------

loc_1C4A7:				; CODE XREF: sub_1C474+2Ej
		mov	ax, 4650h
		imul	[bp+arg_4]
		mov	[bp+var_58], ax
		mov	ax, [bp+arg_C]
		neg	ax
		mov	[bp+var_56], ax
		mov	ax, 3A98h
		imul	[bp+arg_4]
		mov	[bp+var_54], ax
		lea	ax, [bp+var_24]
		push	ax
		push	[bp+arg_6]
		lea	ax, [bp+var_58]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, 0B9B0h
		imul	[bp+arg_4]
		mov	[bp+var_58], ax
		lea	ax, [bp+var_1E]
		push	ax
		push	[bp+arg_6]
		lea	ax, [bp+var_58]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_20], 0
		jl	short loc_1C4FC
		cmp	[bp+var_1A], 0
		jge	short loc_1C51C

loc_1C4FC:				; CODE XREF: sub_1C474+80j
					; sub_1C474+DCj ...
		mov	di, word_455D0

loc_1C500:				; CODE XREF: sub_1C474+E2j
		mov	bx, [bp+arg_2]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	di
		jmp	loc_1CB6A
; ---------------------------------------------------------------------------

loc_1C51C:				; CODE XREF: sub_1C474+86j
		lea	ax, [bp+var_4E]
		push	ax
		lea	ax, [bp+var_24]
		push	ax
		call	sub_323D9
		add	sp, 4
		lea	ax, [bp+var_4A]
		push	ax
		lea	ax, [bp+var_1E]
		push	ax
		call	sub_323D9
		add	sp, 4
		cmp	[bp+var_4E], 140h
		jle	short loc_1C558
		cmp	[bp+var_4A], 140h
		jle	short loc_1C558
		mov	ax, [bp+var_48]
		cmp	[bp+var_4C], ax
		jl	short loc_1C4FC

loc_1C552:				; CODE XREF: sub_1C474:loc_1C56Aj
					; sub_1C474+12Cj
		mov	di, word_44A88
		jmp	short loc_1C500
; ---------------------------------------------------------------------------

loc_1C558:				; CODE XREF: sub_1C474+CDj
					; sub_1C474+D4j
		cmp	[bp+var_4E], 0
		jge	short loc_1C56E
		cmp	[bp+var_4A], 0
		jge	short loc_1C56E
		mov	ax, [bp+var_48]
		cmp	[bp+var_4C], ax

loc_1C56A:				; CODE XREF: sub_1C474+113j
		jle	short loc_1C552
		jmp	short loc_1C4FC
; ---------------------------------------------------------------------------

loc_1C56E:				; CODE XREF: sub_1C474+E8j
					; sub_1C474+EEj
		mov	bx, [bp+arg_2]
		mov	ax, [bp+var_4C]
		cmp	[bx+6],	ax
		jge	short loc_1C58A
		mov	ax, [bp+var_48]
		cmp	[bx+6],	ax
		jge	short loc_1C58A
		mov	ax, [bp+var_4A]
		cmp	[bp+var_4E], ax
		jmp	short loc_1C56A
; ---------------------------------------------------------------------------
		align 2

loc_1C58A:				; CODE XREF: sub_1C474+103j
					; sub_1C474+10Bj
		mov	ax, [bp+var_4C]
		cmp	[bx+4],	ax
		jle	short loc_1C5A6
		mov	ax, [bp+var_48]
		cmp	[bx+4],	ax
		jle	short loc_1C5A6
		mov	ax, [bp+var_4A]
		cmp	[bp+var_4E], ax
		jge	short loc_1C552
		jmp	loc_1C4FC
; ---------------------------------------------------------------------------
		align 2

loc_1C5A6:				; CODE XREF: sub_1C474+11Cj
					; sub_1C474+124j
		mov	[bp+var_5A], 0
		cmp	byte_3B8FA, 4
		jz	short loc_1C61D
		cmp	[bp+var_4A], 0
		jge	short loc_1C61D
		cmp	[bp+var_4E], 140h
		jle	short loc_1C61D
		lea	ax, [bp+var_78]
		push	ax
		push	[bp+var_4C]
		push	[bp+var_4E]
		push	[bp+var_48]
		push	[bp+var_4A]
		call	sub_2EB56
		add	sp, 0Ah
		or	ax, ax
		jnz	short loc_1C61D
		mov	di, [bp+var_72]
		sub	di, [bp+var_6E]
		jns	short loc_1C5EA
		mov	ax, di
		neg	ax
		jmp	short loc_1C5EC
; ---------------------------------------------------------------------------
		align 2

loc_1C5EA:				; CODE XREF: sub_1C474+16Dj
		mov	ax, di

loc_1C5EC:				; CODE XREF: sub_1C474+173j
		cmp	ax, 60h	; '`'
		jge	short loc_1C61D
		cmp	[bp+var_76], 0
		jnz	short loc_1C602
		mov	ax, [bp+var_72]
		mov	[bp+var_32], ax
		mov	ax, [bp+var_6E]
		jmp	short loc_1C612
; ---------------------------------------------------------------------------

loc_1C602:				; CODE XREF: sub_1C474+181j
		cmp	[bp+var_76], 13Fh
		jnz	short loc_1C61D
		mov	ax, [bp+var_6E]
		mov	[bp+var_32], ax
		mov	ax, [bp+var_72]

loc_1C612:				; CODE XREF: sub_1C474+18Cj
		sub	ax, [bp+var_32]
		mov	[bp+var_26], ax
		mov	[bp+var_5A], 1

loc_1C61D:				; CODE XREF: sub_1C474+13Cj
					; sub_1C474+142j ...
		cmp	[bp+var_5A], 0
		jnz	short loc_1C626
		jmp	loc_1C852
; ---------------------------------------------------------------------------

loc_1C626:				; CODE XREF: sub_1C474+1ADj
		cmp	word_44984, 0
		jnz	short loc_1C630
		jmp	loc_1C7B6
; ---------------------------------------------------------------------------

loc_1C630:				; CODE XREF: sub_1C474+1B7j
		mov	[bp+var_30], 0
		mov	word_44A2C, 0
		mov	[bp+var_2E], 140h
		mov	word_44A2E, 140h
		cmp	byte_454A4, 0
		jz	short loc_1C660
		mov	bx, [bp+arg_2]
		mov	ax, [bx+4]
		mov	word_44A30, ax
		mov	ax, [bx+6]
		mov	word_44A32, ax
		jmp	loc_1C7AA
; ---------------------------------------------------------------------------
		align 2

loc_1C660:				; CODE XREF: sub_1C474+1D7j
		mov	ax, [bp+var_32]
		add	ax, [bp+var_26]
		cmp	ax, [bp+var_32]
		jle	short loc_1C66E
		mov	ax, [bp+var_32]

loc_1C66E:				; CODE XREF: sub_1C474+1F5j
		sub	ax, word_454CE
		mov	word_44A30, ax
		mov	bx, [bp+arg_2]
		cmp	[bx+4],	ax
		jle	short loc_1C683
		mov	ax, [bx+4]
		mov	word_44A30, ax

loc_1C683:				; CODE XREF: sub_1C474+207j
		mov	ax, [bp+var_32]
		add	ax, [bp+var_26]
		cmp	ax, [bp+var_32]
		jge	short loc_1C691
		mov	ax, [bp+var_32]

loc_1C691:				; CODE XREF: sub_1C474+218j
		mov	word_44A32, ax
		sub	si, si

loc_1C696:				; CODE XREF: sub_1C474+22Bj
		mov	byte ptr [si-6250h], 1
		inc	si
		cmp	si, 0Fh
		jl	short loc_1C696
		mov	byte_45525, 3
		mov	[bp+var_2C], 0
		mov	ax, word_44A30
		mov	[bp+var_2A], ax
		push	[bp+arg_2]
		lea	ax, [bp+var_30]
		push	ax
		call	sub_265EC
		add	sp, 4
		or	al, al
		jnz	short loc_1C728
		mov	byte_46166, 0
		mov	ax, 965Eh
		push	ax
		mov	ax, 0A9F6h
		push	ax
		lea	ax, [bp+var_30]
		push	ax
		mov	ax, 9294h
		push	ax
		push	word_3B80A
		mov	ax, 9DB0h
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_26A52
		add	sp, 0Eh
		sub	di, di
		jmp	short loc_1C720
; ---------------------------------------------------------------------------
		align 2

loc_1C6F2:				; CODE XREF: sub_1C474+2B2j
		mov	ax, di
		mov	cl, 3
		shl	ax, cl
		add	ax, 965Eh
		mov	[bp+var_28], ax
		mov	bx, ax
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		push	word_455D0
		call	sub_332C0
		add	sp, 2
		inc	di

loc_1C720:				; CODE XREF: sub_1C474+27Bj
		mov	al, byte_46166
		cbw
		cmp	ax, di
		jg	short loc_1C6F2

loc_1C728:				; CODE XREF: sub_1C474+24Ej
		mov	ax, word_44A32
		mov	[bp+var_2C], ax
		mov	[bp+var_2A], 0C8h ; '»'
		push	[bp+arg_2]
		lea	ax, [bp+var_30]
		push	ax
		call	sub_265EC
		add	sp, 4
		or	al, al
		jnz	short loc_1C7AA
		mov	byte_46166, 0
		mov	ax, 965Eh
		push	ax
		mov	ax, 0A9F6h
		push	ax
		lea	ax, [bp+var_30]
		push	ax
		mov	ax, 9294h
		push	ax
		push	word_3B80A
		mov	ax, 9DB0h
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_26A52
		add	sp, 0Eh
		sub	di, di
		jmp	short loc_1C7A2
; ---------------------------------------------------------------------------
		align 2

loc_1C774:				; CODE XREF: sub_1C474+334j
		mov	ax, di
		mov	cl, 3
		shl	ax, cl
		add	ax, 965Eh
		mov	[bp+var_28], ax
		mov	bx, ax
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_3327F
		add	sp, 8
		push	word_44A88
		call	sub_332C0
		add	sp, 2
		inc	di

loc_1C7A2:				; CODE XREF: sub_1C474+2FDj
		mov	al, byte_46166
		cbw
		cmp	ax, di
		jg	short loc_1C774

loc_1C7AA:				; CODE XREF: sub_1C474+1E8j
					; sub_1C474+2D0j
		mov	ax, word_44A30
		mov	[bp+var_2C], ax
		mov	ax, word_44A32
		jmp	short loc_1C7C2
; ---------------------------------------------------------------------------
		align 2

loc_1C7B6:				; CODE XREF: sub_1C474+1B9j
		mov	bx, [bp+arg_2]
		mov	ax, [bx+4]
		mov	[bp+var_2C], ax
		mov	ax, [bx+6]

loc_1C7C2:				; CODE XREF: sub_1C474+33Fj
		mov	[bp+var_2A], ax
		mov	[bp+var_30], 0
		mov	[bp+var_2E], 140h
		push	[bp+arg_2]
		lea	ax, [bp+var_30]
		push	ax
		call	sub_265EC
		add	sp, 4
		or	al, al
		jz	short loc_1C7E5
		jmp	loc_1CB77
; ---------------------------------------------------------------------------

loc_1C7E5:				; CODE XREF: sub_1C474+36Cj
		mov	[bp+var_34], 0
		cmp	[bp+var_26], 0
		jge	short loc_1C7F8
		mov	ax, [bp+var_26]
		neg	ax
		jmp	short loc_1C7FB
; ---------------------------------------------------------------------------
		align 2

loc_1C7F8:				; CODE XREF: sub_1C474+37Aj
		mov	ax, [bp+var_26]

loc_1C7FB:				; CODE XREF: sub_1C474+381j
		mov	di, ax
		inc	di
		cmp	di, 20h	; ' '
		jle	short loc_1C806
		mov	di, 20h	; ' '

loc_1C806:				; CODE XREF: sub_1C474+38Dj
		sub	si, si
		jmp	short loc_1C84B
; ---------------------------------------------------------------------------

loc_1C80A:				; CODE XREF: sub_1C474+3D9j
		mov	ax, [bp+var_34]
		mov	[bp+var_30], ax
		mov	ax, 140h
		imul	si
		add	ax, 140h
		cwd
		idiv	di
		and	ax, word_454D4
		mov	[bp+var_2E], ax
		cmp	[bp+var_30], ax
		jz	short loc_1C84A
		mov	ax, [bp+var_26]
		imul	si
		cwd
		idiv	di
		add	ax, [bp+var_32]
		mov	[bp+var_50], ax
		push	ax
		push	[bp+arg_A]
		lea	ax, [bp+var_30]
		push	ax
		push	cs
		call	near ptr sub_1C302
		add	sp, 6
		mov	ax, [bp+var_2E]
		mov	[bp+var_34], ax

loc_1C84A:				; CODE XREF: sub_1C474+3B1j
		inc	si

loc_1C84B:				; CODE XREF: sub_1C474+394j
		cmp	si, di
		jl	short loc_1C80A
		jmp	loc_1CB77
; ---------------------------------------------------------------------------

loc_1C852:				; CODE XREF: sub_1C474+1AFj
		mov	ax, [bp+var_4C]
		sub	ax, [bp+var_48]
		push	ax
		mov	ax, [bp+var_4E]
		sub	ax, [bp+var_4A]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	si, ax
		and	si, 3FFh
		mov	[bp+var_26], 2
		jmp	short loc_1C8F0
; ---------------------------------------------------------------------------
		align 2

loc_1C876:				; CODE XREF: sub_1C474+488j
		mov	di, 1

loc_1C879:				; CODE XREF: sub_1C474+48Dj
		mov	bx, [bp+var_26]
		shl	bx, 1
		mov	ax, [bx+98Ch]
		add	ax, si
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		mov	ax, 3E80h
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	cx, [bx-4Eh]
		add	cx, ax
		mov	bx, [bp+var_26]
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	[bx-4Eh], cx
		mov	bx, [bp+var_26]
		shl	bx, 1
		mov	ax, [bx+98Ch]
		add	ax, si
		push	ax
		call	sub_3272C
		add	sp, 2
		push	ax
		mov	ax, 3E80h
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	cx, [bx-4Ch]
		add	cx, ax
		mov	bx, [bp+var_26]
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	[bx-4Ch], cx
		inc	[bp+var_26]

loc_1C8F0:				; CODE XREF: sub_1C474+3FFj
		cmp	[bp+var_26], 6
		jge	short loc_1C904
		cmp	[bp+var_26], 4
		jl	short loc_1C8FF
		jmp	loc_1C876
; ---------------------------------------------------------------------------

loc_1C8FF:				; CODE XREF: sub_1C474+486j
		sub	di, di
		jmp	loc_1C879
; ---------------------------------------------------------------------------

loc_1C904:				; CODE XREF: sub_1C474+480j
		push	[bp+var_44]
		push	[bp+var_46]
		push	[bp+var_40]
		push	[bp+var_42]
		push	[bp+var_48]
		push	[bp+var_4A]
		push	[bp+var_4C]
		push	[bp+var_4E]
		mov	ax, 4
		push	ax
		push	word_455D0
		call	sub_317DF
		add	sp, 14h
		push	[bp+var_38]
		push	[bp+var_3A]
		push	[bp+var_3C]
		push	[bp+var_3E]
		push	[bp+var_48]
		push	[bp+var_4A]
		push	[bp+var_4C]
		push	[bp+var_4E]
		mov	ax, 4
		push	ax
		push	word_44A88
		call	sub_317DF
		add	sp, 14h
		jmp	loc_1CB72
; ---------------------------------------------------------------------------
		align 2

loc_1C958:				; CODE XREF: sub_1C474+30j
		mov	[bp+var_58], 0
		mov	ax, [bp+arg_C]
		neg	ax
		mov	[bp+var_56], ax
		mov	ax, 3A98h
		imul	[bp+arg_4]
		mov	[bp+var_54], ax
		lea	ax, [bp+var_24]
		push	ax
		push	[bp+arg_6]
		lea	ax, [bp+var_58]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_20], 0
		jge	short loc_1C9C0
		push	word_455D0
		call	sub_332C0
		add	sp, 2
		cmp	word_44984, 0
		jnz	short loc_1C99D
		jmp	loc_1CB77
; ---------------------------------------------------------------------------

loc_1C99D:				; CODE XREF: sub_1C474+524j
		mov	[bp+var_5C], 1
		mov	word_44A2C, 0
		mov	word_44A2E, 140h
		mov	bx, [bp+arg_2]
		mov	ax, [bx+4]
		mov	word_44A30, ax
		mov	ax, [bx+6]
		mov	word_44A32, ax
		jmp	loc_1CB77
; ---------------------------------------------------------------------------

loc_1C9C0:				; CODE XREF: sub_1C474+511j
		lea	ax, [bp+var_4E]
		push	ax
		lea	ax, [bp+var_24]
		push	ax
		call	sub_323D9
		add	sp, 4
		mov	ax, [bp+var_4C]
		mov	[bp+var_50], ax
		mov	bx, [bp+arg_2]
		cmp	[bx+4],	ax
		jle	short loc_1C9E4
		mov	ax, [bx+4]
		mov	[bp+var_50], ax

loc_1C9E4:				; CODE XREF: sub_1C474+568j
		cmp	[bp+arg_4], 1
		jz	short loc_1C9ED
		jmp	loc_1CB00
; ---------------------------------------------------------------------------

loc_1C9ED:				; CODE XREF: sub_1C474+574j
		cmp	word_44984, 0
		jz	short loc_1CA25
		cmp	byte_3B8FA, 4
		jnz	short loc_1CA02
		mov	ax, [bp+var_50]
		dec	ax
		jmp	short loc_1CA09
; ---------------------------------------------------------------------------
		align 2

loc_1CA02:				; CODE XREF: sub_1C474+585j
		mov	ax, [bp+var_50]
		sub	ax, word_454CE

loc_1CA09:				; CODE XREF: sub_1C474+58Bj
		mov	word_44A30, ax
		mov	word_44A2C, 0
		mov	word_44A2E, 140h
		mov	ax, [bp+var_50]
		mov	word_44A32, ax
		cmp	byte_454A4, 0
		jz	short loc_1CA52

loc_1CA25:				; CODE XREF: sub_1C474+57Ej
		mov	[bp+var_30], 0
		mov	[bp+var_2E], 140h
		mov	bx, [bp+arg_2]
		mov	ax, [bx+4]
		mov	[bp+var_2C], ax
		mov	ax, [bx+6]
		mov	[bp+var_2A], ax
		push	[bp+var_50]
		push	[bp+arg_A]
		lea	ax, [bp+var_30]
		push	ax
		push	cs
		call	near ptr sub_1C302
		add	sp, 6
		jmp	loc_1CB77
; ---------------------------------------------------------------------------

loc_1CA52:				; CODE XREF: sub_1C474+5AFj
		sub	si, si

loc_1CA54:				; CODE XREF: sub_1C474+5E9j
		mov	byte ptr [si-6250h], 1
		inc	si
		cmp	si, 0Fh
		jl	short loc_1CA54
		cmp	byte_3B8FA, 4
		jnz	short loc_1CA72
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, word_463D6
		mov	[bx-6D74h], ax

loc_1CA72:				; CODE XREF: sub_1C474+5F0j
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, [bp+arg_A]
		cmp	[bx-6D74h], ax
		jnz	short loc_1CAAC
		mov	bx, word_3B80A
		mov	ax, word_44A2C
		cmp	[bx+28h], ax
		jnz	short loc_1CAAC
		mov	ax, word_44A2E
		cmp	[bx+2Ah], ax
		jnz	short loc_1CAAC
		mov	ax, word_44A30
		cmp	[bx+2Ch], ax
		jnz	short loc_1CAAC
		mov	ax, word_44A32
		cmp	[bx+2Eh], ax
		jnz	short loc_1CAAC
		mov	byte_45525, 0
		jmp	short loc_1CAB1
; ---------------------------------------------------------------------------
		align 2

loc_1CAAC:				; CODE XREF: sub_1C474+60Aj
					; sub_1C474+616j ...
		mov	byte_45525, 3

loc_1CAB1:				; CODE XREF: sub_1C474+635j
		mov	byte_46166, 0
		mov	ax, 965Eh
		push	ax
		mov	ax, 0A9F6h
		push	ax
		push	[bp+arg_2]
		mov	ax, 9294h
		push	ax
		push	word_3B80A
		mov	ax, 9DB0h
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_26A52
		add	sp, 0Eh
		sub	di, di
		jmp	short loc_1CAF6
; ---------------------------------------------------------------------------
		align 2

loc_1CADE:				; CODE XREF: sub_1C474+688j
		push	[bp+var_50]
		push	[bp+arg_A]
		mov	ax, di
		mov	cl, 3
		shl	ax, cl
		add	ax, 965Eh
		push	ax
		push	cs
		call	near ptr sub_1C302
		add	sp, 6
		inc	di

loc_1CAF6:				; CODE XREF: sub_1C474+667j
		mov	al, byte_46166
		cbw
		cmp	ax, di
		jg	short loc_1CADE
		jmp	short loc_1CB77
; ---------------------------------------------------------------------------

loc_1CB00:				; CODE XREF: sub_1C474+576j
		mov	si, [bp+var_50]
		mov	bx, [bp+arg_2]
		sub	si, [bx+4]
		mov	ax, [bx+6]
		sub	ax, [bx+4]
		cmp	ax, si
		jge	short loc_1CB19
		mov	si, [bx+6]
		sub	si, [bx+4]

loc_1CB19:				; CODE XREF: sub_1C474+69Dj
		or	si, si
		jle	short loc_1CB41
		mov	ax, [bx+4]
		add	ax, si
		push	ax
		push	word ptr [bx+4]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_44A88
		call	sub_332C0
		add	sp, 2

loc_1CB41:				; CODE XREF: sub_1C474+6A7j
		mov	bx, [bp+arg_2]
		mov	si, [bx+6]
		sub	si, [bp+var_50]
		or	si, si
		jle	short loc_1CB72
		mov	ax, [bp+var_50]
		add	ax, si
		push	ax
		push	[bp+var_50]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_455D0

loc_1CB6A:				; CODE XREF: sub_1C474+A5j
		call	sub_332C0
		add	sp, 2

loc_1CB72:				; CODE XREF: sub_1C474+4E0j
					; sub_1C474+6D8j
		mov	[bp+var_5C], 1

loc_1CB77:				; CODE XREF: sub_1C474+36Ej
					; sub_1C474+3DBj ...
		mov	ax, [bp+var_5C]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1C474	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1CB80	proc far		; CODE XREF: sub_1A0F4+131Fp
					; sub_1A0F4+1337p ...

var_C		= byte ptr -0Ch
var_8		= word ptr -8
var_6		= byte ptr -6
arg_0		= word ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	di
		push	si
		mov	ax, word_46434
		push	si
		push	di
		lea	di, [bp+var_6]
		mov	si, ax
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		pop	di
		pop	si
		lea	ax, [bp+var_C]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		lea	ax, [bp+var_6]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	al, byte_45D7E
		cbw
		mov	si, ax
		mov	di, si
		shl	di, 1
		mov	ax, [bp+var_8]
		add	ax, [bp+arg_0]
		mov	[di-6296h], ax
		mov	al, [bp+arg_2]
		mov	[si-5D6Eh], al
		mov	[di-5954h], si
		inc	byte_45D7E
		add	word_46434, 14h
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1CB80	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1CBDC	proc far		; CODE XREF: sub_110D0+B0P

var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= byte ptr -3Ch
var_3A		= byte ptr -3Ah
var_38		= byte ptr -38h
var_36		= byte ptr -36h
var_34		= word ptr -34h
var_32		= byte ptr -32h
var_30		= word ptr -30h
var_2E		= byte ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= byte ptr -14h
var_13		= byte ptr -13h
var_12		= word ptr -12h
var_10		= byte ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 42h
		push	di
		push	si
		mov	ax, word_3C112
		sub	ax, word_3C10C
		push	ax
		mov	ax, word_3C10E
		sub	ax, word_3C108
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_4], ax
		push	ax
		mov	ax, word_3C110
		sub	ax, word_3C10A
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	[bp+var_34], ax
		mov	ax, 1
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_34]
		push	ax
		call	sub_261FA
		add	sp, 8
		mov	[bp+var_28], ax
		lea	ax, [bp+var_C]
		push	ax
		push	[bp+var_28]
		mov	ax, 9A4h
		push	ax
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_2E]
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_323D9
		add	sp, 4
		mov	ax, [bp+var_2C]
		mov	[bp+var_30], ax
		or	ax, ax
		jge	short loc_1CC5B
		mov	[bp+var_30], 0

loc_1CC5B:				; CODE XREF: sub_1CBDC+78j
		mov	ax, [bp+var_30]
		sub	ax, word_43932
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_455D0
		call	sub_332C0
		add	sp, 2
		mov	ax, 64h	; 'd'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		mov	ax, [bp+var_30]
		sub	ax, word_4551C
		push	ax
		sub	ax, ax
		push	ax
		push	word ptr dword_45D88+2
		push	word ptr dword_45D88
		call	sub_33BBC
		add	sp, 8
		mov	ax, [bp+var_30]
		sub	ax, word_4551E
		push	ax
		mov	ax, 140h
		push	ax
		push	word ptr dword_45D8C+2
		push	word ptr dword_45D8C
		call	sub_33BBC
		add	sp, 8
		mov	ax, 0C8h ; '»'
		push	ax
		push	[bp+var_30]
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_44A88
		call	sub_332C0
		add	sp, 2
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		mov	ax, 1
		push	ax
		mov	ax, 9AAh
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_34]
		push	ax
		call	sub_24E06
		add	sp, 0Ah
		mov	[bp+var_1C], 0
		mov	[bp+var_1A], 0
		mov	[bp+var_16], 400h
		mov	[bp+var_38], 0
		jmp	loc_1D11B
; ---------------------------------------------------------------------------
		align 2

loc_1CD34:				; CODE XREF: sub_1CBDC+536j
		mov	[bp+var_3A], 0
		mov	[bp+var_10], 0

loc_1CD3C:				; CODE XREF: sub_1CBDC+500j
					; sub_1CBDC+52Ej ...
		cmp	[bp+var_3A], 6
		jz	short loc_1CD45
		jmp	loc_1CE04
; ---------------------------------------------------------------------------

loc_1CD45:				; CODE XREF: sub_1CBDC+164j
		mov	di, word_3B8EA
		cmp	[bp+var_10], 0
		jz	short loc_1CD53

loc_1CD4F:				; CODE XREF: sub_1CBDC+2FAj
		mov	[bp+var_3A], 0

loc_1CD53:				; CODE XREF: sub_1CBDC+171j
					; sub_1CBDC+234j ...
		cmp	[bp+var_3A], 0
		jz	short loc_1CDCA
		mov	al, [bp+var_3A]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2C5Ah
		mov	[bp+var_3E], ax
		mov	bx, ax
		mov	ax, [bx+6]
		mov	[bp+var_20], ax
		mov	al, [bp+var_32]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]
		sub	ax, word_3C108
		sar	ax, 1
		mov	[bp+var_26], ax
		mov	ax, di
		sub	ax, word_3C10A
		sar	ax, 1
		mov	[bp+var_24], ax
		mov	al, [bp+var_38]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		sub	ax, word_3C10C
		sar	ax, 1
		mov	[bp+var_22], ax
		mov	bx, [bp+var_3E]
		mov	ax, [bx+2]
		mov	[bp+var_18], ax
		mov	[bp+var_14], 5
		mov	[bp+var_13], 0
		lea	ax, [bp+var_26]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1CDCA:				; CODE XREF: sub_1CBDC+17Bj
		cmp	[bp+var_10], 0
		jnz	short loc_1CDD3
		jmp	loc_1D086
; ---------------------------------------------------------------------------

loc_1CDD3:				; CODE XREF: sub_1CBDC+1F2j
		mov	al, [bp+var_10]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_3E], ax
		mov	bx, ax
		test	byte ptr [bx+0Bh], 1
		jnz	short loc_1CDF5
		jmp	loc_1CF14
; ---------------------------------------------------------------------------

loc_1CDF5:				; CODE XREF: sub_1CBDC+214j
		mov	al, [bp+var_38]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-7E84h]
		jmp	loc_1CF20
; ---------------------------------------------------------------------------

loc_1CE04:				; CODE XREF: sub_1CBDC+166j
		sub	di, di
		mov	al, [bp+var_10]
		sub	ah, ah
		cmp	ax, 69h	; 'i'
		jnb	short loc_1CE13
		jmp	loc_1CD53
; ---------------------------------------------------------------------------

loc_1CE13:				; CODE XREF: sub_1CBDC+232j
		cmp	ax, 6Ch	; 'l'
		jbe	short loc_1CE1B
		jmp	loc_1CD53
; ---------------------------------------------------------------------------

loc_1CE1B:				; CODE XREF: sub_1CBDC+23Aj
		mov	[bp+var_2A], di
		jmp	loc_1CED0
; ---------------------------------------------------------------------------
		align 2

loc_1CE22:				; CODE XREF: sub_1CBDC+304j
		mov	al, [bp+var_32]

loc_1CE25:				; CODE XREF: sub_1CBDC+31Fj
		mov	[bp+var_36], al
		mov	al, [bp+var_38]

loc_1CE2B:				; CODE XREF: sub_1CBDC+32Dj
		mov	[bp+var_3C], al

loc_1CE2E:				; CODE XREF: sub_1CBDC+316j
		mov	al, [bp+var_36]
		cbw
		mov	[bp+var_42], ax
		mov	al, [bp+var_3C]
		cbw
		shl	ax, 1
		mov	[bp+var_40], ax
		mov	bx, ax
		mov	bx, [bx-73C4h]
		add	bx, [bp+var_42]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_3A], al
		or	al, al
		jz	short loc_1CECD
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2C5Ah
		mov	[bp+var_3E], ax
		mov	bx, ax
		mov	ax, [bx+4]
		mov	[bp+var_20], ax
		mov	bx, [bp+var_42]
		shl	bx, 1
		mov	ax, [bx-599Eh]
		sub	ax, word_3C108
		sar	ax, 1
		mov	[bp+var_26], ax
		mov	ax, word_3C10A
		neg	ax
		sar	ax, 1
		mov	[bp+var_24], ax
		mov	bx, [bp+var_40]
		mov	ax, [bx-55EAh]
		sub	ax, word_3C10C
		sar	ax, 1
		mov	[bp+var_22], ax
		mov	[bp+var_14], 5
		mov	[bp+var_1C], 0
		mov	[bp+var_1A], 0
		mov	bx, [bp+var_3E]
		mov	ax, [bx+2]
		mov	[bp+var_18], ax
		mov	[bp+var_16], 400h
		mov	[bp+var_13], 0
		lea	ax, [bp+var_26]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1CECD:				; CODE XREF: sub_1CBDC+27Bj
		inc	[bp+var_2A]

loc_1CED0:				; CODE XREF: sub_1CBDC+242j
		cmp	[bp+var_2A], 4
		jl	short loc_1CED9
		jmp	loc_1CD4F
; ---------------------------------------------------------------------------

loc_1CED9:				; CODE XREF: sub_1CBDC+2F8j
		mov	ax, [bp+var_2A]
		or	ax, ax
		jnz	short loc_1CEE3
		jmp	loc_1CE22
; ---------------------------------------------------------------------------

loc_1CEE3:				; CODE XREF: sub_1CBDC+302j
		cmp	ax, 1
		jz	short loc_1CEF6
		cmp	ax, 2
		jz	short loc_1CEFE
		cmp	ax, 3
		jz	short loc_1CF0C
		jmp	loc_1CE2E
; ---------------------------------------------------------------------------
		align 2

loc_1CEF6:				; CODE XREF: sub_1CBDC+30Aj
		mov	al, [bp+var_32]
		inc	al
		jmp	loc_1CE25
; ---------------------------------------------------------------------------

loc_1CEFE:				; CODE XREF: sub_1CBDC+30Fj
		mov	al, [bp+var_32]

loc_1CF01:				; CODE XREF: sub_1CBDC+335j
		mov	[bp+var_36], al
		mov	al, [bp+var_38]
		inc	al
		jmp	loc_1CE2B
; ---------------------------------------------------------------------------

loc_1CF0C:				; CODE XREF: sub_1CBDC+314j
		mov	al, [bp+var_32]
		inc	al
		jmp	short loc_1CF01
; ---------------------------------------------------------------------------
		align 2

loc_1CF14:				; CODE XREF: sub_1CBDC+216j
		mov	al, [bp+var_38]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]

loc_1CF20:				; CODE XREF: sub_1CBDC+225j
		mov	[bp+var_12], ax
		mov	bx, [bp+var_3E]
		test	byte ptr [bx+0Bh], 2
		jz	short loc_1CF3A
		mov	al, [bp+var_32]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bx+7558h]
		jmp	short loc_1CF46
; ---------------------------------------------------------------------------

loc_1CF3A:				; CODE XREF: sub_1CBDC+34Ej
		mov	al, [bp+var_32]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bx-599Eh]

loc_1CF46:				; CODE XREF: sub_1CBDC+35Cj
		mov	ax, si
		sub	ax, word_3C108
		sar	ax, 1
		mov	[bp+var_C], ax
		mov	ax, di
		sub	ax, word_3C10A
		sar	ax, 1
		mov	[bp+var_A], ax
		mov	ax, [bp+var_12]
		sub	ax, word_3C10C
		sar	ax, 1
		mov	[bp+var_8], ax
		or	di, di
		jz	short loc_1CFBF
		mov	bx, [bp+var_3E]
		mov	al, [bx+0Bh]
		cbw
		or	ax, ax
		jz	short loc_1CF92
		cmp	ax, 1
		jnz	short loc_1CF7F
		jmp	loc_1D01A
; ---------------------------------------------------------------------------

loc_1CF7F:				; CODE XREF: sub_1CBDC+39Ej
		cmp	ax, 2
		jnz	short loc_1CF87
		jmp	loc_1D022
; ---------------------------------------------------------------------------

loc_1CF87:				; CODE XREF: sub_1CBDC+3A6j
		cmp	ax, 3
		jnz	short loc_1CF8F
		jmp	loc_1D02A
; ---------------------------------------------------------------------------

loc_1CF8F:				; CODE XREF: sub_1CBDC+3AEj
		jmp	short loc_1CF97
; ---------------------------------------------------------------------------
		align 2

loc_1CF92:				; CODE XREF: sub_1CBDC+399j
		mov	[bp+var_20], 79FEh

loc_1CF97:				; CODE XREF: sub_1CBDC:loc_1CF8Fj
					; sub_1CBDC+443j ...
		push	si
		push	di
		lea	di, [bp+var_26]
		lea	si, [bp+var_C]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	[bp+var_18], 0
		mov	[bp+var_14], 5
		mov	[bp+var_13], 0
		lea	ax, [bp+var_26]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1CFBF:				; CODE XREF: sub_1CBDC+38Ej
		mov	bx, [bp+var_3E]
		cmp	byte ptr [bx+8], 0
		jz	short loc_1D042
		mov	al, [bx+8]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_2], ax
		mov	bx, ax
		cmp	word ptr [bx+6], 0
		jz	short loc_1D042
		mov	ax, [bx+6]
		mov	[bp+var_20], ax
		push	si
		push	di
		lea	di, [bp+var_26]
		lea	si, [bp+var_C]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, [bp+var_3E]
		mov	ax, [bx+2]
		mov	[bp+var_18], ax
		mov	[bp+var_14], 5
		mov	bx, [bp+var_2]
		cmp	byte ptr [bx+9], 0
		jl	short loc_1D032
		mov	al, [bx+9]
		mov	[bp+var_13], al
		jmp	short loc_1D036
; ---------------------------------------------------------------------------

loc_1D01A:				; CODE XREF: sub_1CBDC+3A0j
		mov	[bp+var_20], 7E1Eh
		jmp	loc_1CF97
; ---------------------------------------------------------------------------

loc_1D022:				; CODE XREF: sub_1CBDC+3A8j
		mov	[bp+var_20], 7E34h
		jmp	loc_1CF97
; ---------------------------------------------------------------------------

loc_1D02A:				; CODE XREF: sub_1CBDC+3B0j
		mov	[bp+var_20], 7E4Ah
		jmp	loc_1CF97
; ---------------------------------------------------------------------------

loc_1D032:				; CODE XREF: sub_1CBDC+434j
		mov	[bp+var_13], 0

loc_1D036:				; CODE XREF: sub_1CBDC+43Cj
		lea	ax, [bp+var_26]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1D042:				; CODE XREF: sub_1CBDC+3EAj
					; sub_1CBDC+409j
		mov	bx, [bp+var_3E]
		mov	ax, [bx+6]
		mov	[bp+var_20], ax
		push	si
		push	di
		lea	di, [bp+var_26]
		lea	si, [bp+var_C]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	ax, [bx+2]
		mov	[bp+var_18], ax
		mov	al, [bx+0Ah]
		or	al, 4
		mov	[bp+var_14], al
		cmp	byte ptr [bx+9], 0
		jl	short loc_1D076
		mov	al, [bx+9]
		mov	[bp+var_13], al
		jmp	short loc_1D07A
; ---------------------------------------------------------------------------

loc_1D076:				; CODE XREF: sub_1CBDC+490j
		mov	[bp+var_13], 0

loc_1D07A:				; CODE XREF: sub_1CBDC+498j
		lea	ax, [bp+var_26]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1D086:				; CODE XREF: sub_1CBDC+1F4j
		call	sub_25FF6
		inc	[bp+var_32]

loc_1D08E:				; CODE XREF: sub_1CBDC+549j
		cmp	[bp+var_32], 1Eh
		jl	short loc_1D097
		jmp	loc_1D118
; ---------------------------------------------------------------------------

loc_1D097:				; CODE XREF: sub_1CBDC+4B6j
		mov	al, [bp+var_32]
		cbw
		mov	[bp+var_40], ax
		mov	al, [bp+var_38]
		cbw
		shl	ax, 1
		mov	[bp+var_42], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, [bp+var_40]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_10], al
		mov	bx, [bp+var_42]
		mov	bx, [bx-73C4h]
		add	bx, [bp+var_40]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_3A], al
		cmp	[bp+var_10], 0
		jnz	short loc_1D0DF
		jmp	loc_1CD3C
; ---------------------------------------------------------------------------

loc_1D0DF:				; CODE XREF: sub_1CBDC+4FEj
		cmp	al, 7
		jb	short loc_1D100
		cmp	al, 0Bh
		jnb	short loc_1D100
		mov	al, [bp+var_10]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_3A]
		push	ax
		call	sub_21A5A
		add	sp, 4
		mov	[bp+var_10], al
		mov	[bp+var_3A], 0

loc_1D100:				; CODE XREF: sub_1CBDC+505j
					; sub_1CBDC+509j
		mov	al, [bp+var_10]
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jnb	short loc_1D10D
		jmp	loc_1CD3C
; ---------------------------------------------------------------------------

loc_1D10D:				; CODE XREF: sub_1CBDC+52Cj
		cmp	ax, 0FFh
		ja	short loc_1D115
		jmp	loc_1CD34
; ---------------------------------------------------------------------------

loc_1D115:				; CODE XREF: sub_1CBDC+534j
		jmp	loc_1CD3C
; ---------------------------------------------------------------------------

loc_1D118:				; CODE XREF: sub_1CBDC+4B8j
		inc	[bp+var_38]

loc_1D11B:				; CODE XREF: sub_1CBDC+154j
		cmp	[bp+var_38], 1Eh
		jge	short loc_1D128
		mov	[bp+var_32], 0
		jmp	loc_1D08E
; ---------------------------------------------------------------------------

loc_1D128:				; CODE XREF: sub_1CBDC+543j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1CBDC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D12E	proc far		; CODE XREF: sub_1A0F4+2177p
					; sub_1A0F4+2205p
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		push	si
		mov	di, 0AA0Eh
		mov	si, 3394h
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	si
		cmp	byte_44AE2, 0
		jnz	short loc_1D14E
		jmp	loc_1D1E6
; ---------------------------------------------------------------------------

loc_1D14E:				; CODE XREF: sub_1D12E+1Bj
		mov	ax, 9B2h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0AAh ; '™'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6
		mov	ax, 9B6h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0B6h ; '∂'

loc_1D1D5:				; CODE XREF: sub_1D12E+F9j
					; sub_1D12E+18Dj ...
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		jmp	loc_1D511
; ---------------------------------------------------------------------------
		align 2

loc_1D1E6:				; CODE XREF: sub_1D12E+1Dj
		cmp	byte_45DB2, 0
		jz	short loc_1D1F0
		jmp	loc_1D4B0
; ---------------------------------------------------------------------------

loc_1D1F0:				; CODE XREF: sub_1D12E+BDj
		cmp	byte_44889, 0
		jnz	short loc_1D22A
		mov	ax, 9BAh
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 5Ah	; 'Z'
		jmp	short loc_1D1D5
; ---------------------------------------------------------------------------
		align 2

loc_1D22A:				; CODE XREF: sub_1D12E+C7j
		cmp	byte_45E1A, 0
		jz	short loc_1D234
		jmp	loc_1D2BE
; ---------------------------------------------------------------------------

loc_1D234:				; CODE XREF: sub_1D12E+101j
		mov	ax, 9BEh
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 5Dh	; ']'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6
		mov	ax, 9C2h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 69h	; 'i'
		jmp	loc_1D1D5
; ---------------------------------------------------------------------------

loc_1D2BE:				; CODE XREF: sub_1D12E+103j
		cmp	byte_463E0, 0
		jz	short loc_1D2C8
		jmp	loc_1D52B
; ---------------------------------------------------------------------------

loc_1D2C8:				; CODE XREF: sub_1D12E+195j
		cmp	byte_3B8F5, 0
		jz	short loc_1D2D2
		jmp	loc_1D52B
; ---------------------------------------------------------------------------

loc_1D2D2:				; CODE XREF: sub_1D12E+19Fj
		cmp	byte_446AF, 0
		jz	short loc_1D2DC
		jmp	loc_1D52B
; ---------------------------------------------------------------------------

loc_1D2DC:				; CODE XREF: sub_1D12E+1A9j
		mov	al, byte_448F1
		cbw
		cmp	ax, 1
		jz	short loc_1D2F2
		cmp	ax, 2
		jz	short loc_1D338
		cmp	ax, 3
		jz	short loc_1D34A
		jmp	short loc_1D31E
; ---------------------------------------------------------------------------
		align 2

loc_1D2F2:				; CODE XREF: sub_1D12E+1B5j
		mov	ax, 5Dh	; ']'
		push	ax
		mov	ax, 94h	; 'î'
		push	ax
		push	word_45DCA
		push	word_45DC8

loc_1D302:				; CODE XREF: sub_1D12E+21Aj
		call	sub_343B0
		add	sp, 8
		mov	ax, 0AA0Eh
		push	ax
		mov	ax, 9DAh

loc_1D311:				; CODE XREF: sub_1D12E+266j
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6

loc_1D31E:				; CODE XREF: sub_1D12E+1C1j
		mov	byte_463E4, 0
		mov	al, byte_448F2
		cbw
		cmp	ax, 1
		jz	short loc_1D398
		cmp	ax, 2
		jnz	short loc_1D334
		jmp	loc_1D47E
; ---------------------------------------------------------------------------

loc_1D334:				; CODE XREF: sub_1D12E+201j
		jmp	loc_1D3E6
; ---------------------------------------------------------------------------
		align 2

loc_1D338:				; CODE XREF: sub_1D12E+1BAj
		mov	ax, 5Dh	; ']'
		push	ax
		mov	ax, 94h	; 'î'
		push	ax
		push	word_45DCE
		push	word_45DCC
		jmp	short loc_1D302
; ---------------------------------------------------------------------------

loc_1D34A:				; CODE XREF: sub_1D12E+1BFj
		mov	ax, 9C6h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 5Dh	; ']'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		jmp	loc_1D311
; ---------------------------------------------------------------------------
		align 2

loc_1D398:				; CODE XREF: sub_1D12E+1FCj
		mov	ax, 71h	; 'q'
		push	ax
		mov	ax, 44h	; 'D'
		push	ax
		push	word_45DCA
		push	word_45DC8
		call	sub_343B0
		add	sp, 8
		mov	ax, 0AA0Eh
		push	ax
		mov	ax, 9E2h
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6
		mov	ax, 9CAh

loc_1D3C7:				; CODE XREF: sub_1D12E+37Fj
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6

loc_1D3E6:				; CODE XREF: sub_1D12E:loc_1D334j
		cmp	byte_463E4, 0
		jz	short loc_1D422
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 74h	; 't'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6

loc_1D422:				; CODE XREF: sub_1D12E+2BDj
		cmp	byte_4499F, 0
		jnz	short loc_1D42C
		jmp	loc_1D52B
; ---------------------------------------------------------------------------

loc_1D42C:				; CODE XREF: sub_1D12E+2F9j
		mov	ax, 9D2h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		sub	ax, ax
		push	ax		; int
		push	word_461CA
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		add	ax, 0AC74h
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 66h	; 'f'
		jmp	loc_1D1D5
; ---------------------------------------------------------------------------

loc_1D47E:				; CODE XREF: sub_1D12E+203j
		mov	ax, 71h	; 'q'
		push	ax
		mov	ax, 0E4h ; '‰'
		push	ax
		push	word_45DCE
		push	word_45DCC
		call	sub_343B0
		add	sp, 8
		mov	ax, 0AA0Eh
		push	ax
		mov	ax, 9EAh
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6
		mov	ax, 9CEh
		jmp	loc_1D3C7
; ---------------------------------------------------------------------------

loc_1D4B0:				; CODE XREF: sub_1D12E+BFj
		cmp	byte_45DB2, 2
		jnz	short loc_1D52B
		mov	ax, word_445D4
		sub	dx, dx
		div	word_449D0
		mov	si, dx
		mov	ax, word_449D0
		sar	ax, 1
		cmp	ax, si
		jle	short loc_1D52B
		mov	ax, 9D6h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AA0Eh
		push	ax
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		mov	cl, 3
		shl	ax, cl
		sub	ax, 138h
		neg	ax

loc_1D511:				; CODE XREF: sub_1D12E+B4j
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		mov	ax, 0AA0Eh
		push	ax
		call	sub_26572
		add	sp, 6

loc_1D52B:				; CODE XREF: sub_1D12E+197j
					; sub_1D12E+1A1j ...
		mov	ax, 0AA0Eh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1D12E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D534	proc far		; CODE XREF: sub_1A0F4+20B3p
					; sub_1A0F4+20CCp

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		mov	di, word_449D0
		mov	cl, 2
		shl	di, cl
		cmp	[bp+arg_0], di
		jle	short loc_1D54C
		mov	[bp+arg_0], di

loc_1D54C:				; CODE XREF: sub_1D534+13j
		mov	ax, word_449D0
		shl	ax, 1
		shl	ax, 1
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_0]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_4]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	si, ax
		mov	word_4617E, 0
		mov	word_46180, 140h
		mov	di, [bp+arg_2]
		add	di, [bp+arg_4]
		mov	ax, di
		sub	ax, si
		mov	word_46182, ax
		mov	word_46184, di
		push	di
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_463E2
		call	sub_332C0
		add	sp, 2
		mov	ax, 0AA0Eh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1D534	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D5B4	proc far		; CODE XREF: sub_1A0F4+205Fp
					; sub_1A0F4+2082p

var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 1Ah
		push	di
		push	si
		mov	ax, 9F2h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28A8C
		add	sp, 6
		mov	word ptr [bp+var_8], ax
		mov	word ptr [bp+var_8+2], dx
		mov	ax, 9F7h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28A8C
		add	sp, 6
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		mov	ax, word_449D0
		cwd
		mov	cx, 7
		idiv	cx
		mov	cx, ax
		mov	ax, [bp+arg_0]
		cwd
		idiv	cx
		mov	[bp+var_1A], ax
		les	bx, [bp+var_4]
		assume es:nothing
		mov	di, es:[bx]
		cmp	ax, di
		jl	short loc_1D614
		lea	ax, [di-1]
		mov	[bp+var_1A], ax

loc_1D614:				; CODE XREF: sub_1D5B4+58j
		mov	di, [bp+var_1A]
		shl	di, 1
		les	bx, [bp+var_4]
		mov	ax, es:[bx+di+2]
		mov	[bp+var_18], ax
		push	si
		mov	di, 0AA0Eh
		mov	si, 3394h
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	si
		sub	si, si
		jmp	loc_1D790
; ---------------------------------------------------------------------------

loc_1D636:				; CODE XREF: sub_1D5B4+1E1j
		mov	di, si
		mov	cl, 3
		shl	di, cl
		les	bx, [bp+var_8]
		assume es:nothing
		mov	ax, es:[bx+di]
		mov	dx, es:[bx+di+2]
		mov	[bp+var_10], ax
		mov	[bp+var_E], dx
		mov	bx, si
		shl	bx, cl
		mov	di, word ptr [bp+var_8]
		mov	ax, es:[bx+di+4]
		mov	dx, es:[bx+di+6]
		mov	[bp+var_14], ax
		mov	[bp+var_12], dx
		mov	ax, 0C8h ; '»'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_E]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_E], ax
		mov	ax, 0C8h ; '»'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_12]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_12], ax
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_12]
		add	ax, [bp+arg_2]
		dec	ax
		push	ax
		push	[bp+var_14]
		mov	ax, [bp+var_E]
		add	ax, [bp+arg_2]
		dec	ax
		push	ax
		push	[bp+var_10]
		call	sub_2FDDE
		add	sp, 0Ah
		sub	ax, ax
		push	ax
		mov	ax, [bp+var_12]
		add	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+var_14]
		mov	ax, [bp+var_E]
		add	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+var_10]
		call	sub_2FDDE
		add	sp, 0Ah
		push	word_407CA
		mov	ax, [bp+var_12]
		add	ax, [bp+arg_2]
		push	ax
		push	[bp+var_14]
		mov	ax, [bp+var_E]
		add	ax, [bp+arg_2]
		push	ax
		push	[bp+var_10]
		call	sub_2FDDE
		add	sp, 0Ah
		cmp	word_44984, 0
		jnz	short loc_1D70F
		jmp	loc_1D78F
; ---------------------------------------------------------------------------

loc_1D70F:				; CODE XREF: sub_1D5B4+156j
		mov	ax, [bp+var_10]
		mov	[bp+var_C], ax
		mov	ax, [bp+var_E]
		add	ax, [bp+arg_2]
		dec	ax
		mov	[bp+var_A], ax
		mov	ax, 0AA0Eh
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_2637A
		add	sp, 4
		mov	ax, [bp+var_14]
		mov	[bp+var_C], ax
		mov	ax, [bp+var_12]
		add	ax, [bp+arg_2]
		inc	ax
		mov	[bp+var_A], ax
		mov	ax, 0AA0Eh
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_2637A
		add	sp, 4
		mov	ax, [bp+var_10]
		mov	[bp+var_C], ax
		mov	ax, [bp+var_E]
		add	ax, [bp+arg_2]
		inc	ax
		mov	[bp+var_A], ax
		mov	ax, 0AA0Eh
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_2637A
		add	sp, 4
		mov	ax, [bp+var_14]
		mov	[bp+var_C], ax
		mov	ax, [bp+var_12]
		add	ax, [bp+arg_2]
		dec	ax
		mov	[bp+var_A], ax
		mov	ax, 0AA0Eh
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_2637A
		add	sp, 4

loc_1D78F:				; CODE XREF: sub_1D5B4+158j
		inc	si

loc_1D790:				; CODE XREF: sub_1D5B4+7Fj
		cmp	[bp+var_18], si
		jle	short loc_1D798
		jmp	loc_1D636
; ---------------------------------------------------------------------------

loc_1D798:				; CODE XREF: sub_1D5B4+1DFj
		mov	ax, 0AA0Eh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1D5B4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D7A2	proc far		; CODE XREF: sub_110D0+5BP
					; sub_23702+233P

var_4		= word ptr -4
arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		test	[bp+arg_0], 8
		jz	short loc_1D7B6
		and	[bp+arg_0], 7
		jmp	loc_1D88E
; ---------------------------------------------------------------------------

loc_1D7B6:				; CODE XREF: sub_1D7A2+Bj
		cmp	byte_3B8F6, 0
		jz	short loc_1D7C8
		mov	al, byte_46167
		cmp	[bp+arg_0], al
		jnz	short loc_1D7C8
		jmp	loc_1D8AF
; ---------------------------------------------------------------------------

loc_1D7C8:				; CODE XREF: sub_1D7A2+19j
					; sub_1D7A2+21j
		push	cs
		call	near ptr sub_1D8B4
		mov	al, [bp+arg_0]
		mov	byte_46167, al
		mov	byte_3B8F6, 1
		cbw
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, 14Ah
		push	ax
		call	sub_3385C
		add	sp, 2
		mov	word_46168, ax
		mov	word_4616A, dx
		mov	ax, 0A610h
		push	ax
		mov	ax, 9FCh
		push	ax
		push	dx
		push	word_46168
		call	sub_367B2
		add	sp, 8
		les	bx, dword_45D80
		mov	ax, es:[bx+2]
		mov	word_45518, ax
		les	bx, dword_45D84
		mov	ax, es:[bx+2]
		mov	word_4551A, ax
		les	bx, dword_45D88
		mov	ax, es:[bx+2]
		mov	word_4551C, ax
		les	bx, dword_45D8C
		mov	ax, es:[bx+2]
		mov	word_4551E, ax
		mov	si, word_45518
		mov	ax, si
		cmp	ax, word_4551A
		jbe	short loc_1D846
		mov	si, word_4551A

loc_1D846:				; CODE XREF: sub_1D7A2+9Ej
		mov	ax, si
		cmp	ax, word_4551C
		jbe	short loc_1D852
		mov	si, word_4551C

loc_1D852:				; CODE XREF: sub_1D7A2+AAj
		mov	ax, si
		cmp	ax, word_4551E
		jbe	short loc_1D85E
		mov	si, word_4551E

loc_1D85E:				; CODE XREF: sub_1D7A2+B6j
		mov	word_43932, si
		mov	si, word_45518
		mov	ax, si
		cmp	ax, word_4551A
		jnb	short loc_1D872
		mov	si, word_4551A

loc_1D872:				; CODE XREF: sub_1D7A2+CAj
		mov	ax, si
		cmp	ax, word_4551C
		jnb	short loc_1D87E
		mov	si, word_4551C

loc_1D87E:				; CODE XREF: sub_1D7A2+D6j
		mov	ax, si
		cmp	ax, word_4551E
		jnb	short loc_1D88A
		mov	si, word_4551E

loc_1D88A:				; CODE XREF: sub_1D7A2+E2j
		mov	word_454CE, si

loc_1D88E:				; CODE XREF: sub_1D7A2+11j
		mov	ax, word_40B0A
		mov	[bp+var_4], ax
		mov	bx, ax
		mov	ax, [bx+22h]
		mov	word_455D0, ax
		mov	ax, [bx+20h]
		mov	word_44A88, ax
		mov	ax, [bx+0C8h]
		mov	word_463E2, ax
		mov	ax, word_407CA
		mov	word_44D60, ax

loc_1D8AF:				; CODE XREF: sub_1D7A2+23j
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_1D7A2	endp


; =============== S U B	R O U T	I N E =======================================


sub_1D8B4	proc far		; CODE XREF: sub_110D0+BAP
					; sub_1D7A2+27p ...
		cmp	byte_3B8F6, 0
		jz	short loc_1D8CB
		push	word_4616A
		push	word_46168
		call	sub_3147C
		add	sp, 4

loc_1D8CB:				; CODE XREF: sub_1D8B4+5j
		mov	byte_3B8F6, 0
		retf
sub_1D8B4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D8D2	proc far		; CODE XREF: sub_23702+222P
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		mov	ax, 0A0Dh
		push	ax		; char *
		mov	ax, 8
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_463D8, ax
		mov	word_463DA, dx
		mov	ax, 0A64Ch
		push	ax
		mov	ax, 0A15h
		push	ax
		push	dx
		push	word_463D8
		call	sub_367B2
		add	sp, 8
		sub	si, si

loc_1D908:				; CODE XREF: sub_1D8D2+4Fj
		mov	bx, si
		shl	bx, 1
		mov	di, si
		shl	di, 1
		shl	di, 1
		les	di, [di-59B4h]
		mov	ax, es:[di]
		mov	[bx-613Ah], ax
		inc	si
		cmp	si, 3
		jl	short loc_1D908
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1D8D2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_1D92A	proc far		; CODE XREF: sub_239B4+2AP
		push	word_463DA
		push	word_463D8
		call	sub_3147C
		add	sp, 4
		retf
sub_1D92A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1D93C	proc far		; CODE XREF: sub_1059A+77P

var_5D4		= word ptr -5D4h
var_5D2		= word ptr -5D2h
var_5D0		= byte ptr -5D0h
var_440		= word ptr -440h
var_43E		= byte ptr -43Eh
var_2AE		= word ptr -2AEh
var_2AC		= word ptr -2ACh
var_2AA		= word ptr -2AAh
var_2A8		= word ptr -2A8h
var_2A6		= word ptr -2A6h
var_2A4		= word ptr -2A4h
var_2A2		= byte ptr -2A2h
var_2A0		= word ptr -2A0h
var_29E		= word ptr -29Eh
var_29C		= word ptr -29Ch
var_29A		= word ptr -29Ah
var_298		= word ptr -298h
var_296		= word ptr -296h
var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= byte ptr -38h
var_36		= word ptr -36h
var_34		= byte ptr -34h
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= byte ptr -16h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 5D4h
		push	di
		push	si
		mov	[bp+var_38], 0
		mov	ax, 0A2Ah
		push	ax
		call	sub_2A236
		add	sp, 2
		mov	[bp+var_2AE], ax
		mov	[bp+var_2AC], dx
		lea	ax, [bp+var_22]
		push	ax
		mov	ax, 0A30h
		push	ax
		push	dx
		push	[bp+var_2AE]
		call	sub_367B2
		add	sp, 8
		mov	ax, 8BC0h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_2955A
		add	sp, 6
		mov	ax, 8BFCh
		push	ax
		push	[bp+var_1C]
		push	[bp+var_1E]
		call	sub_2955A
		add	sp, 6
		mov	ax, 9580h
		push	ax
		push	[bp+var_18]
		push	[bp+var_1A]
		call	sub_2955A
		add	sp, 6
		cmp	byte_46436, 0
		jnz	short loc_1D9CA
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx

loc_1D9CA:				; CODE XREF: sub_1D93C+71j
		mov	[bp+var_42], 0

loc_1D9CF:				; CODE XREF: sub_1D93C+EDj
		call	sub_19E7B
		mov	cl, 7
		shl	ax, cl
		sub	ax, 4000h
		mov	si, [bp+var_42]
		mov	cx, si
		shl	si, 1
		add	si, cx
		shl	si, 1
		mov	[bp+si+var_29A], ax
		call	sub_19E7B
		mov	cl, 7
		shl	ax, cl
		sub	ax, 1388h
		neg	ax
		mov	si, [bp+var_42]
		mov	cx, si
		shl	si, 1
		add	si, cx
		shl	si, 1
		mov	[bp+si+var_298], ax
		call	sub_19E7B
		mov	cl, 7
		shl	ax, cl
		sub	ax, 4000h
		mov	si, [bp+var_42]
		mov	cx, si
		shl	si, 1
		add	si, cx
		shl	si, 1
		mov	[bp+si+var_296], ax
		inc	[bp+var_42]
		cmp	[bp+var_42], 64h ; 'd'
		jl	short loc_1D9CF
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		mov	ax, 28h	; '('
		push	ax
		push	ax
		call	sub_322F3
		add	sp, 8
		mov	[bp+var_3E], 400h
		mov	[bp+var_3A], 400h
		mov	[bp+var_3C], 12Ch
		mov	[bp+var_E], 0
		mov	[bp+var_5D4], 0
		mov	ax, 0A3Eh
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_A], ax
		mov	[bp+var_8], dx
		mov	ax, 1
		push	ax
		push	dx
		push	[bp+var_A]
		call	sub_19CA2
		add	sp, 6
		push	[bp+var_8]
		push	[bp+var_A]
		call	sub_28A78
		add	sp, 4
		call	sub_193E0
		call	sub_3279A
		mov	[bp+var_2AA], 0
		mov	[bp+var_440], 0
		mov	ax, word_44CEA
		mov	word_44984, ax
		mov	word_44A04, 0
		mov	word_44A06, 140h
		mov	word_44A08, 0
		mov	word_44A0A, 0C8h ; '»'
		mov	di, 929Ch
		mov	si, 9294h
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		mov	di, 0A1E2h
		mov	si, 9294h
		movsw
		movsw
		movsw
		movsw
		mov	[bp+var_36], 0
		mov	[bp+var_2A2], 1

loc_1DADE:				; CODE XREF: sub_1D93C+4FFj
		call	sub_3279A
		mov	[bp+var_40], ax
		add	word_44DCC, ax
		jmp	loc_1DB8A
; ---------------------------------------------------------------------------
		align 2

loc_1DAEE:				; CODE XREF: sub_1D93C+257j
		mov	ax, word_4499C
		sub	word_44DCC, ax
		call	sub_195E0
		mov	[bp+var_2A2], 1
		mov	ax, word_449D0
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		inc	[bp+var_5D4]
		cmp	ax, [bp+var_5D4]
		jge	short loc_1DB8A
		mov	[bp+var_E], 1
		add	[bp+var_3C], 14h
		sub	[bp+var_3A], 5
		mov	ax, [bp+var_3E]
		sub	ax, 400h
		mov	[bp+var_42], ax
		or	ax, ax
		jge	short loc_1DB38
		neg	ax
		jmp	short loc_1DB3B
; ---------------------------------------------------------------------------
		align 4

loc_1DB38:				; CODE XREF: sub_1D93C+1F4j
		mov	ax, [bp+var_42]

loc_1DB3B:				; CODE XREF: sub_1D93C+1F8j
		cmp	ax, 0Ah
		jge	short loc_1DB48
		mov	[bp+var_3E], 400h
		jmp	short loc_1DB5E
; ---------------------------------------------------------------------------
		align 2

loc_1DB48:				; CODE XREF: sub_1D93C+202j
		cmp	[bp+var_42], 0
		jle	short loc_1DB54
		sub	[bp+var_3E], 0Ah
		jmp	short loc_1DB5E
; ---------------------------------------------------------------------------

loc_1DB54:				; CODE XREF: sub_1D93C+210j
		cmp	[bp+var_42], 0
		jge	short loc_1DB5E
		add	[bp+var_3E], 0Ah

loc_1DB5E:				; CODE XREF: sub_1D93C+209j
					; sub_1D93C+216j ...
		cmp	[bp+var_6], 400h
		jle	short loc_1DB6A
		dec	[bp+var_6]
		jmp	short loc_1DB74
; ---------------------------------------------------------------------------

loc_1DB6A:				; CODE XREF: sub_1D93C+227j
		cmp	[bp+var_6], 400h
		jge	short loc_1DB74
		inc	[bp+var_6]

loc_1DB74:				; CODE XREF: sub_1D93C+22Cj
					; sub_1D93C+233j
		cmp	[bp+var_2], 400h
		jle	short loc_1DB80
		dec	[bp+var_2]
		jmp	short loc_1DB8A
; ---------------------------------------------------------------------------

loc_1DB80:				; CODE XREF: sub_1D93C+23Dj
		cmp	[bp+var_2], 400h
		jge	short loc_1DB8A
		inc	[bp+var_2]

loc_1DB8A:				; CODE XREF: sub_1D93C+1AEj
					; sub_1D93C+1DAj ...
		mov	ax, word_4499C
		cmp	word_44DCC, ax
		jle	short loc_1DB96
		jmp	loc_1DAEE
; ---------------------------------------------------------------------------

loc_1DB96:				; CODE XREF: sub_1D93C+255j
		cmp	[bp+var_2A2], 0
		jnz	short loc_1DBA0
		jmp	loc_1DE19
; ---------------------------------------------------------------------------

loc_1DBA0:				; CODE XREF: sub_1D93C+25Fj
		mov	[bp+var_2A2], 0
		cmp	byte_46436, 0
		jz	short loc_1DBB4
		call	sub_3A9A0
		jmp	short loc_1DBB9
; ---------------------------------------------------------------------------
		align 2

loc_1DBB4:				; CODE XREF: sub_1D93C+26Ej
		call	sub_28F6A

loc_1DBB9:				; CODE XREF: sub_1D93C+275j
		mov	[bp+var_2C], 0FFFFh
		mov	[bp+var_2A6], 1
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_1DBCD:				; CODE XREF: sub_1D93C+297j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DBCD
		mov	[bp+var_2A0], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_1DBE2:				; CODE XREF: sub_1D93C+2ACj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DBE2
		mov	[bp+var_29E], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_1DBF7:				; CODE XREF: sub_1D93C+2C1j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DBF7
		mov	[bp+var_29C], ax
		mov	ax, word_449D0
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		cmp	ax, [bp+var_5D4]
		jle	short loc_1DC44
		mov	[bp+var_2A6], 0
		mov	ax, word_446CE
		and	ah, 3
		mov	[bp+var_2C], ax
		mov	[bp+var_2A4], 0
		mov	ax, [bp+var_2A0]
		mov	[bp+var_3E], ax
		mov	ax, [bp+var_29E]
		add	ax, 14h
		mov	[bp+var_3C], ax
		mov	ax, [bp+var_29C]
		mov	[bp+var_3A], ax
		jmp	short loc_1DC7D
; ---------------------------------------------------------------------------
		align 2

loc_1DC44:				; CODE XREF: sub_1D93C+2D6j
		mov	ax, word_449D0
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		cmp	ax, [bp+var_5D4]
		jle	short loc_1DC7D
		mov	[bp+var_3E], 400h
		mov	[bp+var_3A], 400h
		mov	[bp+var_3C], 5Ah ; 'Z'
		mov	ax, [bp+var_2A0]
		mov	[bp+var_6], ax
		mov	ax, [bp+var_29E]
		mov	[bp+var_4], ax
		mov	ax, [bp+var_29C]
		mov	[bp+var_2], ax

loc_1DC7D:				; CODE XREF: sub_1D93C+305j
					; sub_1D93C+31Bj
		cmp	[bp+var_2C], 0FFFFh
		jnz	short loc_1DCD1
		mov	ax, [bp+var_2]
		sub	ax, [bp+var_3A]
		push	ax
		mov	ax, [bp+var_6]
		sub	ax, [bp+var_3E]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		neg	ax
		and	ah, 3
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_2]
		sub	ax, [bp+var_3A]
		push	ax
		mov	ax, [bp+var_6]
		sub	ax, [bp+var_3E]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_C], ax
		push	ax
		mov	ax, [bp+var_4]
		sub	ax, [bp+var_3C]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		mov	[bp+var_2A4], ax

loc_1DCD1:				; CODE XREF: sub_1D93C+345j
		cmp	word_44984, 0
		jz	short loc_1DCFC
		cmp	[bp+var_36], 0
		jnz	short loc_1DCEC
		lea	ax, [bp+var_43E]
		mov	[bp+var_2A8], ax
		lea	ax, [bp+var_2AA]
		jmp	short loc_1DCF8
; ---------------------------------------------------------------------------

loc_1DCEC:				; CODE XREF: sub_1D93C+3A0j
		lea	ax, [bp+var_5D0]
		mov	[bp+var_2A8], ax
		lea	ax, [bp+var_440]

loc_1DCF8:				; CODE XREF: sub_1D93C+3AEj
		mov	[bp+var_5D2], ax

loc_1DCFC:				; CODE XREF: sub_1D93C+39Aj
		lea	ax, [bp+var_34]
		push	ax
		lea	ax, [bp+var_16]
		push	ax
		mov	bx, [bp+var_36]
		mov	cl, 3
		shl	bx, cl
		push	word ptr [bx-6D66h]
		push	word ptr [bx-6D68h]
		push	word ptr [bx-6D6Ah]
		push	word ptr [bx-6D6Ch]
		push	[bp+var_5D2]
		push	[bp+var_2A8]
		lea	ax, [bp+var_29A]
		push	ax
		push	[bp+var_E]
		push	[bp+var_2A6]
		push	[bp+var_2A4]
		push	[bp+var_2C]
		push	[bp+var_3A]
		push	[bp+var_3C]
		push	[bp+var_3E]
		push	cs
		call	near ptr sub_1DEA6
		add	sp, 20h
		cmp	byte_46436, 0
		jz	short loc_1DD7E
		call	sub_28DB6
		call	sub_3A958
		call	sub_28D9E
		cmp	word_44984, 0
		jz	short loc_1DD77
		mov	bx, [bp+var_36]
		mov	cl, 3
		shl	bx, cl
		lea	di, [bx-6D6Ch]
		lea	si, [bp+var_16]
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw

loc_1DD77:				; CODE XREF: sub_1D93C+425j
		xor	byte ptr [bp+var_36], 1
		jmp	loc_1DE19
; ---------------------------------------------------------------------------

loc_1DD7E:				; CODE XREF: sub_1D93C+40Fj
		call	sub_28F3C
		cmp	word_44984, 0
		jz	short loc_1DDFC
		lea	ax, [bp+var_2A]
		push	ax
		mov	ax, 92A4h
		push	ax
		lea	ax, [bp+var_34]
		push	ax
		call	sub_26572
		add	sp, 6
		mov	ax, 0A1E2h
		push	ax
		lea	ax, [bp+var_2A]
		push	ax
		call	sub_265EC
		add	sp, 4
		or	al, al
		jnz	short loc_1DE19
		push	[bp+var_24]
		push	[bp+var_26]
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_3327F
		add	sp, 8
		call	sub_28DB6
		les	bx, dword_44D26
		assume es:nothing
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		call	sub_28D9E
		mov	di, 9294h
		lea	si, [bp+var_16]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		mov	di, 92A4h
		lea	si, [bp+var_34]
		movsw
		movsw
		movsw
		movsw
		jmp	short loc_1DE19
; ---------------------------------------------------------------------------
		align 2

loc_1DDFC:				; CODE XREF: sub_1D93C+44Cj
		call	sub_28DB6
		les	bx, dword_44D26
		assume es:nothing
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		call	sub_28D9E

loc_1DE19:				; CODE XREF: sub_1D93C+261j
					; sub_1D93C+43Fj ...
		push	[bp+var_40]
		call	sub_289E2
		add	sp, 2
		or	ax, ax
		jz	short loc_1DE2E
		mov	[bp+var_38], 1
		jmp	short loc_1DE3E
; ---------------------------------------------------------------------------

loc_1DE2E:				; CODE XREF: sub_1D93C+4EAj
		mov	ax, 17h
		imul	word_449D0
		cmp	ax, [bp+var_5D4]
		jle	short loc_1DE3E
		jmp	loc_1DADE
; ---------------------------------------------------------------------------

loc_1DE3E:				; CODE XREF: sub_1D93C+4F0j
					; sub_1D93C+4FDj
		cmp	byte_46436, 0
		jz	short loc_1DE7C
		call	sub_3A45C
		or	ax, ax
		jz	short loc_1DE8C
		call	sub_3A9A0
		sub	ax, ax
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_35C4E
		add	sp, 0Ah
		call	sub_28DB6
		call	sub_3A958
		call	sub_28D9E
		jmp	short loc_1DE8C
; ---------------------------------------------------------------------------
		align 2

loc_1DE7C:				; CODE XREF: sub_1D93C+507j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4

loc_1DE8C:				; CODE XREF: sub_1D93C+510j
					; sub_1D93C+53Dj
		push	[bp+var_2AC]
		push	[bp+var_2AE]
		call	sub_3147C
		add	sp, 4
		mov	al, [bp+var_38]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1D93C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1DEA6	proc far		; CODE XREF: sub_1D93C+404p

var_42		= word ptr -42h
var_40		= byte ptr -40h
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= byte ptr -24h
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= byte ptr -8
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= word ptr  16h
arg_12		= word ptr  18h
arg_14		= byte ptr  1Ah
arg_1C		= word ptr  22h
arg_1E		= word ptr  24h

		push	bp
		mov	bp, sp
		sub	sp, 42h
		push	di
		push	si
		push	si
		push	di
		lea	di, [bp+var_8]
		mov	si, 3394h
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		sub	ax, ax
		push	ax
		mov	ax, 0A46h
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_8]
		sub	ax, ax
		push	ax
		call	sub_24E06
		add	sp, 0Ah
		cmp	[bp+arg_C], 0
		jz	short loc_1DEE4
		mov	[bp+var_16], 8BC0h
		jmp	short loc_1DEE9
; ---------------------------------------------------------------------------
		align 2

loc_1DEE4:				; CODE XREF: sub_1DEA6+34j
		mov	[bp+var_16], 8BFCh

loc_1DEE9:				; CODE XREF: sub_1DEA6+3Bj
		mov	ax, 400h
		sub	ax, [bp+arg_0]
		mov	[bp+var_1C], ax
		mov	ax, [bp+arg_2]
		neg	ax
		mov	[bp+var_1A], ax
		mov	ax, 400h
		sub	ax, [bp+arg_4]
		mov	[bp+var_18], ax
		cmp	word_44984, 0
		jz	short loc_1DF16
		lea	ax, [bp+var_8]
		mov	[bp+var_14], ax
		mov	[bp+var_A], 0Ch
		jmp	short loc_1DF1A
; ---------------------------------------------------------------------------

loc_1DF16:				; CODE XREF: sub_1DEA6+62j
		mov	[bp+var_A], 4

loc_1DF1A:				; CODE XREF: sub_1DEA6+6Ej
		mov	[bp+var_12], 0
		mov	[bp+var_10], 0
		mov	[bp+var_E], 0
		mov	[bp+var_C], 400h
		mov	[bp+var_9], 0
		lea	ax, [bp+var_1C]
		push	ax
		call	sub_24E9E
		add	sp, 2
		cmp	[bp+arg_A], 0
		jnz	short loc_1DF47
		jmp	loc_1DFCF
; ---------------------------------------------------------------------------

loc_1DF47:				; CODE XREF: sub_1DEA6+9Cj
		mov	ax, word_446B6
		mov	dx, word_446B8
		mov	cl, 6

loc_1DF50:				; CODE XREF: sub_1DEA6+B0j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DF50
		sub	ax, [bp+arg_0]
		mov	[bp+var_1C], ax
		mov	ax, word_446BA
		mov	dx, word_446BC
		mov	cl, 6

loc_1DF67:				; CODE XREF: sub_1DEA6+C7j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DF67
		sub	ax, [bp+arg_2]
		mov	[bp+var_1A], ax
		mov	ax, word_446BE
		mov	dx, word_446C0
		mov	cl, 6

loc_1DF7E:				; CODE XREF: sub_1DEA6+DEj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_1DF7E
		sub	ax, [bp+arg_4]
		mov	[bp+var_18], ax
		mov	[bp+var_16], 9580h
		cmp	word_44984, 0
		jz	short loc_1DFA4
		lea	ax, [bp+var_8]
		mov	[bp+var_14], ax
		mov	[bp+var_A], 0Ch
		jmp	short loc_1DFA8
; ---------------------------------------------------------------------------

loc_1DFA4:				; CODE XREF: sub_1DEA6+F0j
		mov	[bp+var_A], 4

loc_1DFA8:				; CODE XREF: sub_1DEA6+FCj
		mov	[bp+var_12], 0
		mov	[bp+var_10], 0
		mov	ax, word_446CE
		neg	ax
		mov	[bp+var_E], ax
		mov	[bp+var_C], 400h
		mov	[bp+var_9], 0
		lea	ax, [bp+var_1C]
		push	ax
		call	sub_24E9E
		add	sp, 2

loc_1DFCF:				; CODE XREF: sub_1DEA6+9Ej
		cmp	word_44984, 0
		jnz	short loc_1DFD9
		jmp	loc_1E06C
; ---------------------------------------------------------------------------

loc_1DFD9:				; CODE XREF: sub_1DEA6+12Ej
		mov	bx, [bp+arg_12]
		cmp	word ptr [bx], 0
		jz	short loc_1E013
		sub	si, si
		jmp	short loc_1E00C
; ---------------------------------------------------------------------------
		align 2

loc_1DFE6:				; CODE XREF: sub_1DEA6+16Bj
		mov	bx, [bp+arg_10]
		mov	ax, si
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	[bp+var_3A], ax
		mov	[bp+var_38], dx
		sub	ax, ax
		push	ax
		push	dx
		push	[bp+var_3A]
		call	sub_35B26
		add	sp, 6
		inc	si

loc_1E00C:				; CODE XREF: sub_1DEA6+13Dj
		mov	bx, [bp+arg_12]
		cmp	[bx], si
		jg	short loc_1DFE6

loc_1E013:				; CODE XREF: sub_1DEA6+139j
		lea	ax, [bp+var_2C]
		push	ax
		lea	ax, [bp+arg_14]
		push	ax
		push	[bp+arg_1C]
		call	sub_26572
		add	sp, 6
		mov	ax, 0A1E2h
		push	ax
		lea	ax, [bp+var_2C]
		push	ax
		call	sub_265EC
		add	sp, 4
		or	al, al
		jnz	short loc_1E059
		push	[bp+var_26]
		push	[bp+var_28]
		push	[bp+var_2A]
		push	[bp+var_2C]
		call	sub_3327F
		add	sp, 8
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2

loc_1E059:				; CODE XREF: sub_1DEA6+192j
		push	si
		push	di
		lea	di, [bp+var_24]
		lea	si, [bp+var_8]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		jmp	short loc_1E08F
; ---------------------------------------------------------------------------
		align 2

loc_1E06C:				; CODE XREF: sub_1DEA6+130j
		push	word_3C1BC
		push	word_3C1BA
		push	word_3C1B8
		push	word_3C1B6
		call	sub_3327F
		add	sp, 8
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2

loc_1E08F:				; CODE XREF: sub_1DEA6+1C3j
		push	word_3C1BC
		push	word_3C1BA
		push	word_3C1B8
		push	word_3C1B6
		call	sub_3327F
		add	sp, 8
		sub	di, di
		sub	si, si

loc_1E0AB:				; CODE XREF: sub_1DEA6+2B7j
		mov	ax, [bp+arg_E]
		mov	cx, si
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		shl	cx, 1
		add	ax, cx
		mov	[bp+var_42], ax
		mov	bx, ax
		mov	ax, [bx]
		sub	ax, [bp+arg_0]
		mov	[bp+var_36], ax
		mov	ax, [bx+2]
		sub	ax, [bp+arg_2]
		mov	[bp+var_34], ax
		mov	ax, [bx+4]
		sub	ax, [bp+arg_4]
		mov	[bp+var_32], ax
		lea	ax, [bp+var_40]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		lea	ax, [bp+var_36]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_3C], 0C8h ; '»'
		jle	short loc_1E157
		lea	ax, [bp+var_3A]
		push	ax
		lea	ax, [bp+var_40]
		push	ax
		call	sub_323D9
		add	sp, 4
		push	word_3C1BE
		push	[bp+var_38]
		push	[bp+var_3A]
		call	sub_35B26
		add	sp, 6
		cmp	word_44984, 0
		jz	short loc_1E144
		mov	bx, [bp+arg_10]
		mov	ax, di
		inc	di
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bp+var_3A]
		mov	dx, [bp+var_38]
		mov	[bx], ax
		mov	[bx+2],	dx
		lea	ax, [bp+var_24]
		push	ax
		lea	ax, [bp+var_3A]
		push	ax
		call	sub_2637A
		add	sp, 4

loc_1E144:				; CODE XREF: sub_1DEA6+275j
		inc	word_3C1BE
		mov	ax, word_407CC
		cmp	word_3C1BE, ax
		jnz	short loc_1E157
		mov	word_3C1BE, 1

loc_1E157:				; CODE XREF: sub_1DEA6+24Cj
					; sub_1DEA6+2A9j
		inc	si
		cmp	si, 64h	; 'd'
		jge	short loc_1E160
		jmp	loc_1E0AB
; ---------------------------------------------------------------------------

loc_1E160:				; CODE XREF: sub_1DEA6+2B5j
		cmp	word_44984, 0
		jz	short loc_1E16C
		mov	bx, [bp+arg_12]
		mov	[bx], di

loc_1E16C:				; CODE XREF: sub_1DEA6+2BFj
		call	sub_25FF6
		cmp	word_44984, 0
		jz	short loc_1E19A
		mov	bx, [bp+arg_1C]
		push	si
		push	di
		mov	di, bx
		lea	si, [bp+var_8]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, [bp+arg_1E]
		push	si
		push	di
		mov	di, bx
		lea	si, [bp+var_24]
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si

loc_1E19A:				; CODE XREF: sub_1DEA6+2D0j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1DEA6	endp

seg003		ends

; ===========================================================================

; Segment type:	Pure code
seg004		segment	byte public 'CODE' use16
		assume cs:seg004
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1E1A0	proc far		; CODE XREF: sub_14DA2+431P
					; sub_14DA2+1515P ...

var_40		= dword	ptr -40h
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= byte ptr -34h
var_32		= word ptr -32h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_28		= word ptr -28h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= byte ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= byte ptr -1Ah
var_18		= word ptr -18h
var_14		= word ptr -14h
var_12		= byte ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
var_6		= word ptr -6
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 40h
		push	di
		push	si
		mov	word_44DC6, 0
		mov	word_4428E, 0FFFFh
		mov	word_44A8C, 0FFF4h
		mov	word_44988, 0FC18h
		mov	byte_44D46, 0
		mov	byte_44D47, 4
		mov	byte_4392C, 1
		sub	si, si
		mov	[bp+var_38], si
		mov	[bp+var_10], si
		mov	word_449EC, si
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		mov	cl, 0Ah
		sar	ax, cl
		mov	[bp+var_1A], al
		mov	ax, [bx+4]
		sar	ax, cl
		mov	[bp+var_20], al
		mov	[bp+var_24], 0FFFFh
		cmp	[bp+var_1A], 0
		jge	short loc_1E1FD
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1E1FD:				; CODE XREF: sub_1E1A0+58j
		cmp	[bp+var_1A], 1Dh
		jle	short loc_1E206
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1E206:				; CODE XREF: sub_1E1A0+61j
		or	al, al
		jge	short loc_1E20D
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1E20D:				; CODE XREF: sub_1E1A0+68j
		cmp	al, 1Dh
		jle	short loc_1E214
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1E214:				; CODE XREF: sub_1E1A0+6Fj
		mov	al, [bp+var_1A]
		cbw
		mov	di, ax
		mov	bx, di
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	word_449E0, ax
		mov	al, [bp+var_20]
		cbw
		shl	ax, 1
		mov	[bp+var_3C], ax
		mov	bx, ax
		mov	ax, [bx+750Eh]
		mov	word_449F6, ax
		mov	bx, [bx-5A30h]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx+di]
		mov	[bp+var_34], al
		or	al, al
		jz	short loc_1E276
		sub	ah, ah
		cmp	ax, 1
		jnz	short loc_1E257
		jmp	loc_1E2FB
; ---------------------------------------------------------------------------

loc_1E257:				; CODE XREF: sub_1E1A0+B2j
		cmp	ax, 2
		jz	short loc_1E29A
		cmp	ax, 3
		jz	short loc_1E2A0
		cmp	ax, 4
		jz	short loc_1E2A6
		cmp	ax, 5
		jz	short loc_1E2AC
		cmp	ax, 6
		jnz	short loc_1E276
		mov	ax, word_3B8EA
		mov	word_449EC, ax

loc_1E276:				; CODE XREF: sub_1E1A0+ABj
					; sub_1E1A0+CEj ...
		mov	al, [bp+var_20]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_1A]
		cbw
		add	bx, ax
		les	di, dword_44D42
		mov	al, es:[bx+di]
		mov	[bp+var_8], al
		or	al, al
		jnz	short loc_1E304
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1E29A:				; CODE XREF: sub_1E1A0+BAj
		mov	si, 80h	; 'Ä'
		jmp	short loc_1E2AF
; ---------------------------------------------------------------------------
		align 2

loc_1E2A0:				; CODE XREF: sub_1E1A0+BFj
		mov	si, 0FD80h
		jmp	short loc_1E2AF
; ---------------------------------------------------------------------------
		align 2

loc_1E2A6:				; CODE XREF: sub_1E1A0+C4j
		mov	si, 0FE80h
		jmp	short loc_1E2AF
; ---------------------------------------------------------------------------
		align 2

loc_1E2AC:				; CODE XREF: sub_1E1A0+C9j
		mov	si, 0FF80h

loc_1E2AF:				; CODE XREF: sub_1E1A0+FDj
					; sub_1E1A0+103j ...
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		sub	ax, word_449E0
		mov	[bp+var_2C], ax
		mov	ax, [bx+4]
		sub	ax, word_449F6
		mov	[bp+var_28], ax
		push	ax
		push	si
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		push	[bp+var_2C]
		push	si
		mov	di, ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, di
		mov	[bp+var_22], ax
		or	ax, ax
		jl	short loc_1E2FB
		jmp	loc_1E276
; ---------------------------------------------------------------------------

loc_1E2FB:				; CODE XREF: sub_1E1A0+B4j
					; sub_1E1A0+156j
		mov	byte_44D47, 5
		jmp	loc_1E276
; ---------------------------------------------------------------------------
		align 2

loc_1E304:				; CODE XREF: sub_1E1A0+F4j
		cmp	[bp+var_8], 0FDh ; '˝'
		jnb	short loc_1E30D
		jmp	loc_1E40C
; ---------------------------------------------------------------------------

loc_1E30D:				; CODE XREF: sub_1E1A0+168j
		mov	al, [bp+var_8]
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jz	short loc_1E328
		cmp	ax, 0FEh ; '˛'
		jz	short loc_1E390
		cmp	ax, 0FFh
		jnz	short loc_1E324
		jmp	loc_1E3CC
; ---------------------------------------------------------------------------

loc_1E324:				; CODE XREF: sub_1E1A0+17Fj
		jmp	loc_1E464
; ---------------------------------------------------------------------------
		align 2

loc_1E328:				; CODE XREF: sub_1E1A0+175j
		mov	al, [bp+var_20]
		cbw
		mov	di, ax
		shl	di, 1
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		add	bx, [di-73C2h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx-1]
		mov	[bp+var_8], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_1E365
		mov	ax, [di-6CE0h]

loc_1E362:				; CODE XREF: sub_1E1A0+269j
		mov	word_449F6, ax

loc_1E365:				; CODE XREF: sub_1E1A0+1BCj
					; sub_1E1A0+262j
		mov	al, [bp+var_8]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jnz	short loc_1E380
		jmp	loc_1E464
; ---------------------------------------------------------------------------

loc_1E380:				; CODE XREF: sub_1E1A0+1DBj
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+7556h]
		jmp	loc_1E461
; ---------------------------------------------------------------------------
		align 2

loc_1E390:				; CODE XREF: sub_1E1A0+17Aj
		mov	al, [bp+var_20]
		cbw
		mov	di, ax
		shl	di, 1
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		add	bx, [di-73C2h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_8], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_1E43D
		mov	ax, [di-6CE0h]
		jmp	short loc_1E43A
; ---------------------------------------------------------------------------
		align 2

loc_1E3CC:				; CODE XREF: sub_1E1A0+181j
		mov	al, [bp+var_20]
		cbw
		mov	di, ax
		shl	di, 1
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		add	bx, [di-73C4h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx-1]
		mov	[bp+var_8], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jnz	short loc_1E405
		jmp	loc_1E365
; ---------------------------------------------------------------------------

loc_1E405:				; CODE XREF: sub_1E1A0+260j
		mov	ax, [di-6CE2h]
		jmp	loc_1E362
; ---------------------------------------------------------------------------

loc_1E40C:				; CODE XREF: sub_1E1A0+16Aj
		mov	al, [bp+var_8]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		mov	byte ptr [bp+var_3C], al
		cmp	al, ah
		jz	short loc_1E464
		test	byte ptr [bp+var_3C], 1
		jz	short loc_1E43D
		mov	al, [bp+var_20]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-6CE2h]

loc_1E43A:				; CODE XREF: sub_1E1A0+229j
		mov	word_449F6, ax

loc_1E43D:				; CODE XREF: sub_1E1A0+223j
					; sub_1E1A0+28Cj
		mov	al, [bp+var_8]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_1E464
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+7558h]

loc_1E461:				; CODE XREF: sub_1E1A0+1ECj
		mov	word_449E0, ax

loc_1E464:				; CODE XREF: sub_1E1A0:loc_1E324j
					; sub_1E1A0+1DDj ...
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		sub	ax, word_449E0
		mov	[bp+var_2C], ax
		mov	ax, [bx+4]
		sub	ax, word_449F6
		mov	[bp+var_28], ax
		mov	bx, [bp+arg_2]
		mov	ax, [bx]
		sub	ax, word_449E0
		mov	[bp+var_18], ax
		mov	ax, [bx+4]
		sub	ax, word_449F6
		mov	[bp+var_14], ax
		cmp	[bp+var_8], 0
		jz	short loc_1E4B6
		cmp	[bp+var_34], 7
		jb	short loc_1E4B6
		cmp	[bp+var_34], 0Bh
		jnb	short loc_1E4B6
		mov	al, [bp+var_8]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_34]
		push	ax
		push	cs
		call	near ptr sub_21A5A
		add	sp, 4
		mov	[bp+var_8], al

loc_1E4B6:				; CODE XREF: sub_1E1A0+2F4j
					; sub_1E1A0+2FAj ...
		mov	al, [bp+var_8]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 2098h
		mov	[bp+var_3A], ax
		mov	bx, ax
		mov	al, [bx+0Ch]
		cbw
		mov	[bp+var_24], ax
		mov	ax, [bx+2]
		mov	[bp+var_10], ax
		or	ax, ax
		jz	short loc_1E4EF
		cmp	ax, 100h
		jz	short loc_1E562
		cmp	ax, 200h
		jz	short loc_1E540
		cmp	ax, 300h
		jz	short loc_1E516

loc_1E4EF:				; CODE XREF: sub_1E1A0+33Ej
					; sub_1E1A0+39Ej ...
		mov	[bp+var_36], 0
		mov	bx, [bp+var_3A]
		mov	al, [bx+9]
		inc	al
		mov	[bp+var_12], al
		cmp	al, 1
		jge	short loc_1E507
		mov	[bp+var_12], 1

loc_1E507:				; CODE XREF: sub_1E1A0+361j
		cmp	[bp+var_2C], 0
		jge	short loc_1E58A
		mov	ax, [bp+var_2C]
		neg	ax
		jmp	short loc_1E58D
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_1E516:				; CODE XREF: sub_1E1A0+34Dj
		mov	ax, [bp+var_2C]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_28]
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_1E]
		neg	ax
		mov	[bp+var_28], ax
		mov	ax, [bp+var_18]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_14]
		mov	[bp+var_18], ax
		mov	ax, [bp+var_1E]
		neg	ax

loc_1E53B:				; CODE XREF: sub_1E1A0+3E7j
		mov	[bp+var_14], ax
		jmp	short loc_1E4EF
; ---------------------------------------------------------------------------

loc_1E540:				; CODE XREF: sub_1E1A0+348j
		mov	ax, [bp+var_28]
		neg	ax
		mov	[bp+var_28], ax
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_14]
		neg	ax
		mov	[bp+var_14], ax
		mov	ax, [bp+var_18]
		neg	ax
		mov	[bp+var_18], ax
		jmp	short loc_1E4EF
; ---------------------------------------------------------------------------

loc_1E562:				; CODE XREF: sub_1E1A0+343j
		mov	ax, [bp+var_2C]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_28]
		neg	ax
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_1E]
		mov	[bp+var_28], ax
		mov	ax, [bp+var_18]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_14]
		neg	ax
		mov	[bp+var_18], ax
		mov	ax, [bp+var_1E]
		jmp	short loc_1E53B
; ---------------------------------------------------------------------------
		align 2

loc_1E58A:				; CODE XREF: sub_1E1A0+36Bj
		mov	ax, [bp+var_2C]

loc_1E58D:				; CODE XREF: sub_1E1A0+372j
		mov	[bp+var_32], ax
		cmp	[bp+var_28], 0
		jge	short loc_1E59E
		mov	ax, [bp+var_28]
		neg	ax
		jmp	short loc_1E5A1
; ---------------------------------------------------------------------------
		align 2

loc_1E59E:				; CODE XREF: sub_1E1A0+3F4j
		mov	ax, [bp+var_28]

loc_1E5A1:				; CODE XREF: sub_1E1A0+3FBj
		mov	[bp+var_2E], ax
		mov	ax, [bp+var_24]
		cmp	ax, 4Ah	; 'J'
		jbe	short loc_1E5AF
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E5AF:				; CODE XREF: sub_1E1A0+40Aj
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_1F750[bx]
; ---------------------------------------------------------------------------
		align 2

loc_1E5B8:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0:off_1F750o
		cmp	byte_44889, 0
		jnz	short loc_1E5E1
		cmp	[bp+var_2C], 0
		jle	short loc_1E5E1
		cmp	[bp+var_28], 0FE84h
		jge	short loc_1E5D4
		mov	word_44DC6, 83h	; 'É'
		jmp	short loc_1E5E1
; ---------------------------------------------------------------------------

loc_1E5D4:				; CODE XREF: sub_1E1A0+42Aj
		cmp	[bp+var_28], 0FED4h
		jge	short loc_1E5E1
		mov	word_44DC6, 84h	; 'Ñ'

loc_1E5E1:				; CODE XREF: sub_1E1A0+412j
					; sub_1E1A0+41Dj ...
		cmp	[bp+var_32], 78h ; 'x'

loc_1E5E5:				; CODE XREF: sub_1E1A0+45Ej
					; sub_1E1A0+4A8j ...
		jl	short loc_1E5EA
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E5EA:				; CODE XREF: sub_1E1A0:loc_1E5E5j
					; sub_1E1A0+458j ...
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1E5F4:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15C8o
		cmp	[bp+var_32], 78h ; 'x'
		jl	short loc_1E5EA
		cmp	[bp+var_2E], 78h ; 'x'
		jmp	short loc_1E5E5
; ---------------------------------------------------------------------------

loc_1E600:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15BAo
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_2C], ax

loc_1E608:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15B8o
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	[bp+var_2C], 0
		jle	short loc_1E624
		mov	ax, [bp+var_28]
		neg	ax
		mov	[bp+var_28], ax
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_2C], ax

loc_1E624:				; CODE XREF: sub_1E1A0+412j
					; sub_1E1A0+472j ...
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 4

loc_1E631:				; CODE XREF: sub_1E1A0+522j
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_A], ax
		cmp	ax, 588h
		jg	short loc_1E645
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E645:				; CODE XREF: sub_1E1A0+4A0j
		cmp	ax, 678h
		jmp	short loc_1E5E5
; ---------------------------------------------------------------------------

loc_1E64A:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15BCo
		cmp	[bp+var_32], 78h ; 'x'
		jl	short loc_1E5EA

loc_1E650:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15B4o
		mov	ax, [bp+var_28]
		add	ah, 2
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 2

loc_1E65D:				; CODE XREF: sub_1E1A0+4EEj
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_A], ax
		cmp	ax, 188h
		jg	short loc_1E671
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E671:				; CODE XREF: sub_1E1A0+4CCj
		cmp	ax, 278h
		jmp	loc_1E5E5
; ---------------------------------------------------------------------------
		align 2

loc_1E678:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15BEo
		cmp	[bp+var_32], 78h ; 'x'
		jge	short loc_1E681
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E681:				; CODE XREF: sub_1E1A0+4DCj
		mov	ax, [bp+var_28]
		add	ah, 2
		push	ax
		mov	ax, 200h
		sub	ax, [bp+var_2C]
		jmp	short loc_1E65D
; ---------------------------------------------------------------------------

loc_1E690:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15C0o
		cmp	[bp+var_2C], 188h
		jl	short loc_1E624
		cmp	[bp+var_2C], 278h
		jg	short loc_1E6A1
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E6A1:				; CODE XREF: sub_1E1A0+4FCj
		jmp	short loc_1E624
; ---------------------------------------------------------------------------
		align 2

loc_1E6A4:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15C2o
		cmp	[bp+var_2C], 0FD88h
		jl	short loc_1E6B5
		cmp	[bp+var_2C], 0FE78h
		jg	short loc_1E6B5
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E6B5:				; CODE XREF: sub_1E1A0+509j
					; sub_1E1A0+510j
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, 400h
		sub	ax, [bp+var_2C]
		jmp	loc_1E631
; ---------------------------------------------------------------------------
		align 2

loc_1E6C6:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15C4o
		cmp	[bp+var_2C], 0
		jge	short loc_1E6D4
		mov	ax, [bp+var_2C]
		neg	ax
		jmp	short loc_1E6D7
; ---------------------------------------------------------------------------
		align 2

loc_1E6D4:				; CODE XREF: sub_1E1A0+52Aj
		mov	ax, [bp+var_2C]

loc_1E6D7:				; CODE XREF: sub_1E1A0+531j
		mov	[bp+var_1C], ax
		sub	si, si
		jmp	short loc_1E6DF
; ---------------------------------------------------------------------------

loc_1E6DE:				; CODE XREF: sub_1E1A0+54Aj
		inc	si

loc_1E6DF:				; CODE XREF: sub_1E1A0+53Cj
		mov	bx, si
		shl	bx, 1
		mov	ax, [bp+var_28]
		cmp	[bx+2EA8h], ax
		jl	short loc_1E6DE
		mov	di, si
		shl	di, 1
		mov	ax, [di+2EB4h]
		cmp	[di+2EB6h], ax
		jz	short loc_1E72E
		mov	di, si
		shl	di, 1
		mov	ax, [di+2EA8h]
		sub	ax, [di+2EA6h]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_28]
		sub	ax, [di+2EA6h]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2EB6h]
		sub	ax, [di+2EB4h]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, [di+2EB4h]

loc_1E72E:				; CODE XREF: sub_1E1A0+558j
		mov	[bp+var_1E], ax
		mov	di, si
		shl	di, 1
		mov	ax, [di+2EC2h]
		cmp	[di+2EC4h], ax
		jz	short loc_1E773
		mov	di, si
		shl	di, 1
		mov	ax, [di+2EA8h]
		sub	ax, [di+2EA6h]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_28]
		sub	ax, [di+2EA6h]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2EC4h]
		sub	ax, [di+2EC2h]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, [di+2EC2h]

loc_1E773:				; CODE XREF: sub_1E1A0+59Dj
		mov	[bp+var_22], ax
		mov	ax, [bp+var_1E]
		cmp	[bp+var_1C], ax
		jle	short loc_1E789
		mov	ax, [bp+var_22]
		cmp	[bp+var_1C], ax
		jge	short loc_1E789
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E789:				; CODE XREF: sub_1E1A0+5DCj
					; sub_1E1A0+5E4j
		cmp	[bp+var_28], 0
		jge	short loc_1E792
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E792:				; CODE XREF: sub_1E1A0+5EDj
		cmp	[bp+var_1C], 78h ; 'x'
		jle	short loc_1E79B
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E79B:				; CODE XREF: sub_1E1A0+5F6j
		mov	word_44DC6, 1
		cmp	[bp+var_28], 14Eh
		jl	short loc_1E7C0
		cmp	[bp+var_18], 0FF88h
		jle	short loc_1E7F9

loc_1E7AE:				; CODE XREF: sub_1E1A0+657j
		cmp	[bp+var_18], 78h ; 'x'
		jge	short loc_1E7B7
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E7B7:				; CODE XREF: sub_1E1A0+612j
		mov	word_4428E, 0BAh ; '∫'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E7C0:				; CODE XREF: sub_1E1A0+606j
		cmp	[bp+var_18], 0
		jl	short loc_1E7D0
		mov	word_4428E, 0BBh ; 'ª'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1E7D0:				; CODE XREF: sub_1E1A0+624j
		mov	word_4428E, 0BDh ; 'Ω'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1E7DA:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15C6o
		cmp	[bp+var_32], 168h
		jle	short loc_1E7E4
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E7E4:				; CODE XREF: sub_1E1A0+63Fj
		cmp	[bp+var_32], 78h ; 'x'
		jle	short loc_1E7ED
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E7ED:				; CODE XREF: sub_1E1A0+648j
		mov	word_44DC6, 1
		cmp	[bp+var_18], 0FF88h
		jg	short loc_1E7AE

loc_1E7F9:				; CODE XREF: sub_1E1A0+60Cj
		mov	word_4428E, 0BCh ; 'º'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E802:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15D0o
		cmp	[bp+var_28], 0
		jle	short loc_1E810
		mov	byte_4392C, 0
		jmp	short loc_1E82B
; ---------------------------------------------------------------------------
		align 2

loc_1E810:				; CODE XREF: sub_1E1A0+666j
		cmp	[bp+var_14], 0
		jl	short loc_1E82B
		mov	word_4428E, 66h	; 'f'
		jmp	short loc_1E82B
; ---------------------------------------------------------------------------

loc_1E81E:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15D2o
		cmp	[bp+var_14], 1DCh
		jl	short loc_1E82B
		mov	word_4428E, 67h	; 'g'

loc_1E82B:				; CODE XREF: sub_1E1A0+66Dj
					; sub_1E1A0+674j ...
		cmp	[bp+var_18], 0
		jge	short loc_1E838
		mov	ax, [bp+var_18]
		neg	ax
		jmp	short loc_1E83B
; ---------------------------------------------------------------------------

loc_1E838:				; CODE XREF: sub_1E1A0+68Fj
		mov	ax, [bp+var_18]

loc_1E83B:				; CODE XREF: sub_1E1A0+696j
		cmp	ax, 78h	; 'x'
		jge	short loc_1E886
		mov	word_44DC6, 3
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	word_4428E, 0FFFFh
		jz	short loc_1E856
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E856:				; CODE XREF: sub_1E1A0+6B1j
		cmp	[bp+var_28], 0
		jge	short loc_1E85F
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E85F:				; CODE XREF: sub_1E1A0+6BAj
		cmp	[bp+var_32], 78h ; 'x'
		jge	short loc_1E868
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E868:				; CODE XREF: sub_1E1A0+6C3j
		mov	word_44A8C, 2Ah	; '*'
		mov	word_44988, 0FFF4h
		cmp	[bp+var_2C], 0
		jge	short loc_1E87D
		jmp	loc_1E96F
; ---------------------------------------------------------------------------

loc_1E87D:				; CODE XREF: sub_1E1A0+6D8j
					; sub_1E1A0+7CCj ...
		mov	word_4428E, 65h	; 'e'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E886:				; CODE XREF: sub_1E1A0+69Ej
		cmp	byte_4392C, 0
		jnz	short loc_1E890
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E890:				; CODE XREF: sub_1E1A0+6EBj
		cmp	[bp+var_32], 78h ; 'x'
		jle	short loc_1E899
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E899:				; CODE XREF: sub_1E1A0+6F4j
		mov	word_44DC6, 3
		cmp	word_4428E, 0FFFFh
		jz	short loc_1E8A9
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E8A9:				; CODE XREF: sub_1E1A0+704j
		mov	[bp+var_38], 200h

loc_1E8AE:				; CODE XREF: sub_1E1A0+79Ej
		cmp	[bp+var_2C], 0
		jmp	loc_1E96A
; ---------------------------------------------------------------------------
		align 2

loc_1E8B6:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15DCo
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 186h
		jle	short loc_1E8D8

loc_1E8C5:				; CODE XREF: sub_1E1A0:loc_1E8F6j
		mov	byte_4392C, 0

loc_1E8CA:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15D8o
		cmp	[bp+var_18], 0
		jge	short loc_1E8F8
		mov	ax, [bp+var_18]
		neg	ax
		jmp	short loc_1E8FB
; ---------------------------------------------------------------------------
		align 2

loc_1E8D8:				; CODE XREF: sub_1E1A0+723j
		cmp	[bp+var_2E], 78h ; 'x'

loc_1E8DC:				; CODE XREF: sub_1E1A0+C9Bj
		jle	short loc_1E8E1
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E8E1:				; CODE XREF: sub_1E1A0:loc_1E8DCj
		jmp	loc_1E5EA
; ---------------------------------------------------------------------------

loc_1E8E4:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15D4o ...
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 186h
		jg	short loc_1E8F6
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E8F6:				; CODE XREF: sub_1E1A0+751j
		jmp	short loc_1E8C5
; ---------------------------------------------------------------------------

loc_1E8F8:				; CODE XREF: sub_1E1A0+72Ej
		mov	ax, [bp+var_18]

loc_1E8FB:				; CODE XREF: sub_1E1A0+735j
		cmp	ax, 78h	; 'x'
		jg	short loc_1E942
		mov	word_44DC6, 2
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	byte_4392C, 0
		jz	short loc_1E92F
		cmp	[bp+var_14], 1DCh
		jl	short loc_1E922
		mov	word_4428E, 67h	; 'g'
		jmp	short loc_1E92F
; ---------------------------------------------------------------------------

loc_1E922:				; CODE XREF: sub_1E1A0+778j
		cmp	[bp+var_14], 0FE24h
		jg	short loc_1E92F
		mov	word_4428E, 68h	; 'h'

loc_1E92F:				; CODE XREF: sub_1E1A0+771j
					; sub_1E1A0+780j ...
		cmp	[bp+var_32], 78h ; 'x'
		jge	short loc_1E938
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E938:				; CODE XREF: sub_1E1A0+793j
		mov	word_44A8C, 2Ah	; '*'
		jmp	loc_1E8AE
; ---------------------------------------------------------------------------
		align 2

loc_1E942:				; CODE XREF: sub_1E1A0+75Ej
		cmp	byte_4392C, 0
		jnz	short loc_1E94C
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E94C:				; CODE XREF: sub_1E1A0+7A7j
		cmp	[bp+var_32], 78h ; 'x'
		jle	short loc_1E955
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E955:				; CODE XREF: sub_1E1A0+7B0j
		mov	word_44DC6, 2
		mov	word_44A8C, 2Ah	; '*'
		mov	[bp+var_38], 200h
		cmp	[bp+var_18], 0

loc_1E96A:				; CODE XREF: sub_1E1A0+712j
		jl	short loc_1E96F
		jmp	loc_1E87D
; ---------------------------------------------------------------------------

loc_1E96F:				; CODE XREF: sub_1E1A0+6DAj
					; sub_1E1A0:loc_1E96Aj
		mov	word_4428E, 64h	; 'd'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E978:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15DAo
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 186h
		jg	short loc_1E98A
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E98A:				; CODE XREF: sub_1E1A0+7E5j
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 4
		push	ax
		call	sub_300B6
		add	sp, 4
		sub	ax, 600h
		mov	[bp+var_A], ax
		cmp	ax, 0FF6Ah
		jg	short loc_1E9AE
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E9AE:				; CODE XREF: sub_1E1A0+809j
		cmp	ax, 96h	; 'ñ'
		jl	short loc_1E9B6
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E9B6:				; CODE XREF: sub_1E1A0+811j
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	word_44DC6, 2
		mov	byte_4392C, 0
		cmp	[bp+var_A], 0FF94h
		jl	short loc_1E9D6
		cmp	[bp+var_A], 6Ch	; 'l'
		jg	short loc_1E9D6
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1E9D6:				; CODE XREF: sub_1E1A0+82Bj
					; sub_1E1A0+831j
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 4
		push	ax
		call	sub_2EA4E
		add	sp, 4
		sub	ah, ah
		mov	cx, 12h
		imul	cx
		mov	[bp+var_22], ax
		mov	cl, 8
		sar	ax, cl
		sub	ax, 11h
		neg	ax
		mov	[bp+var_1E], ax
		mov	word_44A8C, 2Ah	; '*'
		mov	word_44988, 0FFF4h
		cmp	[bp+var_A], 0
		jge	short loc_1EA1A
		add	ax, 69h	; 'i'
		jmp	short loc_1EA20
; ---------------------------------------------------------------------------
		align 2

loc_1EA1A:				; CODE XREF: sub_1E1A0+872j
		mov	ax, [bp+var_1E]
		add	ax, 7Bh	; '{'

loc_1EA20:				; CODE XREF: sub_1E1A0+877j
					; sub_1E1A0+127Aj
		mov	word_4428E, ax
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EA26:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15E0o
		mov	[bp+var_1C], 23h ; '#'
		mov	[bp+var_1E], 0
		mov	si, 0FD60h
		jmp	short loc_1EA43
; ---------------------------------------------------------------------------
		align 2

loc_1EA36:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15DEo
		mov	[bp+var_1C], 19h
		mov	[bp+var_1E], 1
		mov	si, 0A0h ; '†'

loc_1EA43:				; CODE XREF: sub_1E1A0+893j
		cmp	[bp+var_32], 78h ; 'x'
		jle	short loc_1EA4C
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EA4C:				; CODE XREF: sub_1E1A0+8A7j
		cmp	[bp+var_1E], 0
		jnz	short loc_1EA66
		cmp	[bp+var_18], 0FF88h
		jg	short loc_1EA66
		mov	[bp+var_38], 200h
		mov	word_4428E, 64h	; 'd'
		jmp	short loc_1EA7D
; ---------------------------------------------------------------------------
		align 2

loc_1EA66:				; CODE XREF: sub_1E1A0+8B0j
					; sub_1E1A0+8B6j
		cmp	[bp+var_1E], 0
		jz	short loc_1EA7D
		cmp	[bp+var_18], 78h ; 'x'
		jl	short loc_1EA7D
		mov	[bp+var_38], 200h
		mov	word_4428E, 65h	; 'e'

loc_1EA7D:				; CODE XREF: sub_1E1A0+8C3j
					; sub_1E1A0+8CAj ...
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	[bp+var_28], 0FEB2h
		jge	short loc_1EA90
		mov	ax, [bp+var_1C]
		jmp	short loc_1EA9D
; ---------------------------------------------------------------------------
		align 2

loc_1EA90:				; CODE XREF: sub_1E1A0+8E8j
		cmp	[bp+var_28], 14Eh
		jl	short loc_1EAA4
		mov	ax, [bp+var_1C]
		add	ax, 9

loc_1EA9D:				; CODE XREF: sub_1E1A0+8EDj
					; sub_1E1A0+11ACj
		mov	word_44DC6, ax
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EAA4:				; CODE XREF: sub_1E1A0+8F5j
		cmp	[bp+var_28], 0FF58h
		jge	short loc_1EABA
		mov	ax, [bp+var_1C]
		inc	ax
		mov	word_44DC6, ax
		mov	[bp+var_1E], 0
		jmp	short loc_1EAFD
; ---------------------------------------------------------------------------
		align 2

loc_1EABA:				; CODE XREF: sub_1E1A0+909j
		cmp	[bp+var_28], 0
		jge	short loc_1EAD0
		mov	ax, [bp+var_1C]
		add	ax, 3
		mov	word_44DC6, ax
		mov	[bp+var_1E], 1
		jmp	short loc_1EAFD
; ---------------------------------------------------------------------------

loc_1EAD0:				; CODE XREF: sub_1E1A0+91Ej
		cmp	[bp+var_28], 0A8h ; '®'
		jge	short loc_1EAE8
		mov	ax, [bp+var_1C]
		add	ax, 5
		mov	word_44DC6, ax
		mov	[bp+var_1E], 2
		jmp	short loc_1EAFD
; ---------------------------------------------------------------------------
		align 2

loc_1EAE8:				; CODE XREF: sub_1E1A0+935j
		cmp	[bp+var_28], 14Eh
		jge	short loc_1EAFD
		mov	ax, [bp+var_1C]
		add	ax, 7
		mov	word_44DC6, ax
		mov	[bp+var_1E], 3

loc_1EAFD:				; CODE XREF: sub_1E1A0+917j
					; sub_1E1A0+92Ej ...
		mov	ax, [bp+var_28]
		mov	bx, [bp+var_1E]
		shl	bx, 1
		sub	ax, [bx+2E6Eh]
		push	ax
		push	si
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		push	[bp+var_2C]
		push	si
		mov	di, ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, di
		mov	[bp+var_22], ax
		or	ax, ax
		jg	short loc_1EB3F
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB3F:				; CODE XREF: sub_1E1A0+99Aj
					; sub_1E1A0:loc_1F01Cj
		inc	word_44DC6
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB46:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15E2o
		cmp	[bp+var_32], 78h ; 'x'
		jle	short loc_1EB4F
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB4F:				; CODE XREF: sub_1E1A0+9AAj
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	word_44DC6, 6
		cmp	[bp+var_18], 78h ; 'x'
		jge	short loc_1EB64
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB64:				; CODE XREF: sub_1E1A0+9BFj
		mov	[bp+var_38], 200h
		jmp	loc_1E87D
; ---------------------------------------------------------------------------

loc_1EB6C:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15E4o
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 4
		push	ax
		call	sub_300B6
		add	sp, 4
		sub	ax, 600h
		mov	[bp+var_A], ax
		cmp	ax, 0FF88h
		jg	short loc_1EB90
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB90:				; CODE XREF: sub_1E1A0+9EBj
		cmp	ax, 7Eh	; '~'
		jl	short loc_1EB98
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EB98:				; CODE XREF: sub_1E1A0+9F3j
		mov	ax, [bp+var_28]
		add	ah, 4
		push	ax
		mov	ax, [bp+var_2C]
		add	ah, 4
		push	ax
		call	sub_2EA4E
		add	sp, 4
		sub	ah, ah
		mov	cx, 12h
		imul	cx
		mov	[bp+var_22], ax
		mov	cl, 8
		sar	ax, cl
		sub	ax, 11h
		neg	ax
		mov	[bp+var_1E], ax
		add	ax, 7
		mov	word_44DC6, ax
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	[bp+var_A], 66h	; 'f'
		jg	short loc_1EBD9
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EBD9:				; CODE XREF: sub_1E1A0+A34j
		mov	[bp+var_38], 200h
		mov	ax, [bp+var_1E]
		add	ax, 7Bh	; '{'
		mov	word_4428E, ax

loc_1EBE7:				; CODE XREF: sub_1E1A0+B61j
					; sub_1E1A0+1204j
		mov	byte_4392C, 0
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EBF0:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15E6o
		cmp	[bp+var_28], 0
		jge	short loc_1EC0A
		mov	[bp+var_1C], 33h ; '3'
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_6], ax
		mov	ax, [bp+var_28]
		neg	ax
		jmp	short loc_1EC18
; ---------------------------------------------------------------------------

loc_1EC0A:				; CODE XREF: sub_1E1A0+A54j
		mov	[bp+var_1C], 2Dh ; '-'
		mov	ax, [bp+var_2C]
		mov	[bp+var_6], ax
		mov	ax, [bp+var_28]

loc_1EC18:				; CODE XREF: sub_1E1A0+A68j
		mov	[bp+var_2], ax
		mov	ax, word_3E590
		dec	ax
		cmp	[bp+var_2], ax
		jle	short loc_1EC38
		mov	ax, word_3E590
		add	ax, 64h	; 'd'
		cmp	[bp+var_2], ax
		jle	short loc_1EC32
		jmp	loc_1EDAD
; ---------------------------------------------------------------------------

loc_1EC32:				; CODE XREF: sub_1E1A0+A8Dj
		mov	ax, word_3E590
		dec	ax
		jmp	short loc_1EC3B
; ---------------------------------------------------------------------------

loc_1EC38:				; CODE XREF: sub_1E1A0+A82j
		mov	ax, [bp+var_2]

loc_1EC3B:				; CODE XREF: sub_1E1A0+A96j
		mov	[bp+var_1E], ax
		sub	si, si
		jmp	short loc_1EC43
; ---------------------------------------------------------------------------

loc_1EC42:				; CODE XREF: sub_1E1A0+AAEj
		inc	si

loc_1EC43:				; CODE XREF: sub_1E1A0+AA0j
		mov	bx, si
		shl	bx, 1
		mov	ax, [bp+var_1E]
		cmp	[bx+2E1Ch], ax
		jl	short loc_1EC42
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 20Ch
		jg	short loc_1EC62
		jmp	loc_1ED04
; ---------------------------------------------------------------------------

loc_1EC62:				; CODE XREF: sub_1E1A0+ABDj
		mov	ax, 5
		sub	ax, si
		mov	si, ax
		mov	di, si
		shl	di, 1
		mov	ax, [bp+var_6]
		cmp	[di+2E28h], ax
		jle	short loc_1EC79
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EC79:				; CODE XREF: sub_1E1A0+AD4j
		mov	ax, [di+2E2Ah]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jge	short loc_1EC88
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EC88:				; CODE XREF: sub_1E1A0+AE3j
		mov	ax, [bp+var_6]
		cmp	[di+2E2Ah], ax
		jge	short loc_1EC9D
		mov	ax, [di+2E28h]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jg	short loc_1ECF3

loc_1EC9D:				; CODE XREF: sub_1E1A0+AEFj
		mov	di, si
		shl	di, 1
		mov	ax, [di+2E1Ch]
		sub	ax, [di+2E1Ah]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E1Ah]
		sub	ax, [bp+var_1E]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E28h]
		sub	ax, [di+2E2Ah]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_22], ax
		mov	ax, [di+2E28h]
		add	ax, [bp+var_22]
		mov	[bp+var_3C], ax
		mov	ax, [bp+var_6]
		cmp	[bp+var_3C], ax
		jl	short loc_1ECE5
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1ECE5:				; CODE XREF: sub_1E1A0+B40j
		mov	ax, [bp+var_3C]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jg	short loc_1ECF3
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1ECF3:				; CODE XREF: sub_1E1A0+AFBj
					; sub_1E1A0+B4Ej ...
		mov	ax, [bp+var_1C]
		add	ax, si
		mov	word_44DC6, ax
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		jmp	loc_1EBE7
; ---------------------------------------------------------------------------

loc_1ED04:				; CODE XREF: sub_1E1A0+ABFj
		cmp	si, 1
		jle	short loc_1ED1B
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 64h	; 'd'
		jge	short loc_1ED1B
		jmp	loc_1EDAD
; ---------------------------------------------------------------------------

loc_1ED1B:				; CODE XREF: sub_1E1A0+B67j
					; sub_1E1A0+B76j
		mov	di, si
		shl	di, 1
		mov	ax, [bp+var_6]
		cmp	[di+2E28h], ax
		jle	short loc_1ED2B
		jmp	loc_1EDAD
; ---------------------------------------------------------------------------

loc_1ED2B:				; CODE XREF: sub_1E1A0+B86j
		mov	ax, [di+2E2Ah]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jl	short loc_1EDAD
		mov	ax, [bp+var_6]
		cmp	[di+2E2Ah], ax
		jge	short loc_1ED4C
		mov	ax, [di+2E28h]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jg	short loc_1ECF3

loc_1ED4C:				; CODE XREF: sub_1E1A0+B9Ej
		mov	di, si
		shl	di, 1
		mov	ax, [di+2E28h]
		cmp	[di+2E2Ah], ax
		jz	short loc_1EDAD
		mov	di, si
		shl	di, 1
		mov	ax, [di+2E1Ch]
		sub	ax, [di+2E1Ah]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E1Ah]
		sub	ax, [bp+var_1E]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E28h]
		sub	ax, [di+2E2Ah]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	[bp+var_22], ax
		mov	ax, [di+2E28h]
		add	ax, [bp+var_22]
		mov	[bp+var_3C], ax
		mov	ax, [bp+var_6]
		cmp	[bp+var_3C], ax
		jge	short loc_1EDAD
		mov	ax, [bp+var_3C]
		add	ax, 190h
		cmp	ax, [bp+var_6]
		jle	short loc_1EDAD
		jmp	loc_1ECF3
; ---------------------------------------------------------------------------

loc_1EDAD:				; CODE XREF: sub_1E1A0+A8Fj
					; sub_1E1A0+B78j ...
		sub	si, si
		jmp	short loc_1EDB3
; ---------------------------------------------------------------------------
		align 2

loc_1EDB2:				; CODE XREF: sub_1E1A0+C1Ej
		inc	si

loc_1EDB3:				; CODE XREF: sub_1E1A0+C0Fj
		mov	bx, si
		shl	bx, 1
		mov	ax, [bp+var_2]
		cmp	[bx+2E46h], ax
		jl	short loc_1EDB2
		mov	di, si
		shl	di, 1
		mov	ax, [di+2E46h]
		sub	ax, [di+2E44h]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_2]
		sub	ax, [di+2E44h]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E54h]
		sub	ax, [di+2E52h]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, [di+2E52h]
		mov	[bp+var_1E], ax
		mov	ax, [di+2E46h]
		sub	ax, [di+2E44h]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+var_2]
		sub	ax, [di+2E44h]
		cwd
		push	dx
		push	ax
		mov	ax, [di+2E62h]
		sub	ax, [di+2E60h]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, [di+2E60h]
		mov	[bp+var_22], ax
		mov	ax, [bp+var_1E]
		cmp	[bp+var_6], ax
		jge	short loc_1EE35
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EE35:				; CODE XREF: sub_1E1A0+C90j
		mov	ax, [bp+var_22]
		cmp	[bp+var_6], ax
		jmp	loc_1E8DC
; ---------------------------------------------------------------------------

loc_1EE3E:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15E8o
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 90h	; 'ê'
		jge	short loc_1EE5C
		mov	bx, [bp+arg_2]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 90h	; 'ê'
		jl	short loc_1EE76

loc_1EE5C:				; CODE XREF: sub_1E1A0+CABj
		cmp	[bp+var_32], 10Eh
		jl	short loc_1EE66
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EE66:				; CODE XREF: sub_1E1A0+CC1j
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	word_44DC6, 85h	; 'Ö'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EE76:				; CODE XREF: sub_1E1A0+CBAj
		cmp	[bp+var_32], 78h ; 'x'
		jge	short loc_1EE82
		mov	al, [bp+var_12]
		mov	byte_44D47, al

loc_1EE82:				; CODE XREF: sub_1E1A0+CDAj
		cmp	[bp+var_2C], 78h ; 'x'
		jl	short loc_1EEC6
		cmp	[bp+var_2C], 10Eh
		jg	short loc_1EEC6
		mov	word_44A8C, 90h	; 'ê'
		cmp	[bp+var_14], 0FE00h
		jle	short loc_1EEE6
		cmp	[bp+var_14], 200h
		jge	short loc_1EEF7
		cmp	[bp+var_18], 78h ; 'x'
		jg	short loc_1EEB2
		mov	word_4428E, 98h	; 'ò'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EEB2:				; CODE XREF: sub_1E1A0+D07j
		cmp	[bp+var_18], 10Eh
		jge	short loc_1EEBC
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EEBC:				; CODE XREF: sub_1E1A0+D17j
		mov	word_4428E, 96h	; 'ñ'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EEC6:				; CODE XREF: sub_1E1A0+CE6j
					; sub_1E1A0+CEDj
		cmp	[bp+var_2C], 0FF88h
		jle	short loc_1EECF
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EECF:				; CODE XREF: sub_1E1A0+D2Aj
		cmp	[bp+var_2C], 0FEF2h
		jge	short loc_1EED9
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EED9:				; CODE XREF: sub_1E1A0+D34j
		mov	word_44A8C, 90h	; 'ê'
		cmp	[bp+var_14], 0FE00h
		jg	short loc_1EEF0

loc_1EEE6:				; CODE XREF: sub_1E1A0+CFAj
		mov	word_4428E, 9Ah	; 'ö'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EEF0:				; CODE XREF: sub_1E1A0+D44j
		cmp	[bp+var_14], 200h
		jl	short loc_1EF00

loc_1EEF7:				; CODE XREF: sub_1E1A0+D01j
		mov	word_4428E, 99h	; 'ô'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF00:				; CODE XREF: sub_1E1A0+D55j
		cmp	[bp+var_18], 0FF88h
		jl	short loc_1EF10
		mov	word_4428E, 97h	; 'ó'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EF10:				; CODE XREF: sub_1E1A0+D64j
		cmp	[bp+var_18], 0FEF2h
		jle	short loc_1EF1A
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF1A:				; CODE XREF: sub_1E1A0+D75j
		mov	word_4428E, 95h	; 'ï'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EF24:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15EAo
		cmp	[bp+var_18], 0
		jge	short loc_1EF32
		mov	ax, [bp+var_18]
		neg	ax
		jmp	short loc_1EF35
; ---------------------------------------------------------------------------
		align 2

loc_1EF32:				; CODE XREF: sub_1E1A0+D88j
		mov	ax, [bp+var_18]

loc_1EF35:				; CODE XREF: sub_1E1A0+D8Fj
		cmp	ax, 73h	; 's'
		jl	short loc_1EF60
		cmp	[bp+var_32], 0A4h ; '§'
		jg	short loc_1EF60
		mov	word_44A8C, 97h	; 'ó'
		cmp	[bp+var_18], 0
		jle	short loc_1EF56
		mov	word_4428E, 9Fh	; 'ü'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF56:				; CODE XREF: sub_1E1A0+DABj
		mov	word_4428E, 0A0h ; '†'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1EF60:				; CODE XREF: sub_1E1A0+D98j
					; sub_1E1A0+D9Fj
		cmp	[bp+var_32], 73h ; 's'
		jl	short loc_1EF69
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF69:				; CODE XREF: sub_1E1A0+DC4j
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 0ABh ; '´'
		jl	short loc_1EF7B
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF7B:				; CODE XREF: sub_1E1A0+DD6j
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		cmp	[bp+var_32], 1Fh
		jge	short loc_1EF90
		mov	word_44DC6, 46h	; 'F'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1EF90:				; CODE XREF: sub_1E1A0+DE5j
		cmp	[bp+var_2C], 0FFACh
		jge	short loc_1EFA6
		mov	word_44DC6, 49h	; 'I'
		mov	[bp+var_1E], 0FF9Ch
		mov	si, 0FFFBh
		jmp	short loc_1EFE0
; ---------------------------------------------------------------------------

loc_1EFA6:				; CODE XREF: sub_1E1A0+DF4j
		cmp	[bp+var_2C], 0
		jge	short loc_1EFBC
		mov	word_44DC6, 47h	; 'G'
		mov	[bp+var_1E], 0FFC7h
		mov	si, 0FFF8h
		jmp	short loc_1EFE0
; ---------------------------------------------------------------------------

loc_1EFBC:				; CODE XREF: sub_1E1A0+E0Aj
		cmp	[bp+var_2C], 54h ; 'T'
		jle	short loc_1EFD2
		mov	word_44DC6, 4Dh	; 'M'
		mov	[bp+var_1E], 64h ; 'd'
		mov	si, 5
		jmp	short loc_1EFE0
; ---------------------------------------------------------------------------

loc_1EFD2:				; CODE XREF: sub_1E1A0+E20j
		mov	word_44DC6, 4Bh	; 'K'
		mov	[bp+var_1E], 39h ; '9'
		mov	si, 8

loc_1EFE0:				; CODE XREF: sub_1E1A0+E04j
					; sub_1E1A0+E1Aj ...
		push	[bp+var_28]
		push	si
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		mov	cx, [bp+var_2C]
		sub	cx, [bp+var_1E]
		push	cx
		push	si
		mov	di, ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, di
		mov	[bp+var_22], ax
		or	ax, ax
		jl	short loc_1F01C
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F01C:				; CODE XREF: sub_1E1A0+E77j
		jmp	loc_1EB3F
; ---------------------------------------------------------------------------
		align 2

loc_1F020:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15EEo
		mov	[bp+var_22], 1
		jmp	short loc_1F02D
; ---------------------------------------------------------------------------
		align 2

loc_1F028:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15ECo
		mov	[bp+var_22], 0

loc_1F02D:				; CODE XREF: sub_1E1A0+E85j
		cmp	[bp+var_18], 0
		jge	short loc_1F03A
		mov	ax, [bp+var_18]
		neg	ax
		jmp	short loc_1F03D
; ---------------------------------------------------------------------------

loc_1F03A:				; CODE XREF: sub_1E1A0+E91j
		mov	ax, [bp+var_18]

loc_1F03D:				; CODE XREF: sub_1E1A0+E98j
		cmp	ax, 0A4h ; '§'
		jl	short loc_1F068
		cmp	[bp+var_32], 0A4h ; '§'
		jg	short loc_1F068
		mov	word_44A8C, 97h	; 'ó'
		cmp	[bp+var_18], 0
		jle	short loc_1F05E
		mov	word_4428E, 9Bh	; 'õ'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F05E:				; CODE XREF: sub_1E1A0+EB3j
		mov	word_4428E, 9Ch	; 'ú'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F068:				; CODE XREF: sub_1E1A0+EA0j
					; sub_1E1A0+EA7j
		cmp	[bp+var_32], 0A4h ; '§'
		jl	short loc_1F072
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F072:				; CODE XREF: sub_1E1A0+ECDj
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 109h
		jl	short loc_1F084
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F084:				; CODE XREF: sub_1E1A0+EDFj
		cmp	[bp+var_32], 82h ; 'Ç'
		jge	short loc_1F091
		mov	al, [bp+var_12]
		mov	byte_44D47, al

loc_1F091:				; CODE XREF: sub_1E1A0+EE9j
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 97h	; 'ó'
		jle	short loc_1F0A4
		mov	[bp+var_1E], 1
		jmp	short loc_1F0A9
; ---------------------------------------------------------------------------

loc_1F0A4:				; CODE XREF: sub_1E1A0+EFBj
		mov	[bp+var_1E], 0

loc_1F0A9:				; CODE XREF: sub_1E1A0+F02j
		cmp	[bp+var_22], 0
		jz	short loc_1F0E8
		cmp	[bp+var_1E], 0
		jnz	short loc_1F0E8
		cmp	[bp+var_32], 54h ; 'T'
		jg	short loc_1F0E8
		cmp	[bp+var_2E], 4Bh ; 'K'
		jg	short loc_1F0E8
		mov	word_44DC6, 45h	; 'E'
		cmp	[bp+var_14], 0FFB5h
		jg	short loc_1F0D6
		mov	word_4428E, 9Dh	; 'ù'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F0D6:				; CODE XREF: sub_1E1A0+F2Bj
		cmp	[bp+var_14], 4Bh ; 'K'
		jge	short loc_1F0DF
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F0DF:				; CODE XREF: sub_1E1A0+F3Aj
		mov	word_4428E, 9Eh	; 'û'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F0E8:				; CODE XREF: sub_1E1A0+F0Dj
					; sub_1E1A0+F13j ...
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 58h	; 'X'
		jle	short loc_1F116
		cmp	[bp+var_1E], 0
		jnz	short loc_1F116
		cmp	[bp+var_2C], 0
		jge	short loc_1F10C
		mov	word_44DC6, 3Ch	; '<'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F10C:				; CODE XREF: sub_1E1A0+F61j
		mov	word_44DC6, 42h	; 'B'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F116:				; CODE XREF: sub_1E1A0+F55j
					; sub_1E1A0+F5Bj
		cmp	[bp+var_32], 1Fh
		jge	short loc_1F136
		cmp	[bp+var_1E], 0
		jz	short loc_1F12C
		mov	word_44DC6, 3Fh	; '?'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F12C:				; CODE XREF: sub_1E1A0+F80j
		mov	word_44DC6, 39h	; '9'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F136:				; CODE XREF: sub_1E1A0+F7Aj
		cmp	[bp+var_2C], 0FFACh
		jge	short loc_1F156
		cmp	[bp+var_1E], 0
		jz	short loc_1F14C
		mov	word_44DC6, 3Dh	; '='
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F14C:				; CODE XREF: sub_1E1A0+FA0j
		mov	word_44DC6, 3Bh	; ';'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F156:				; CODE XREF: sub_1E1A0+F9Aj
		cmp	[bp+var_2C], 0
		jge	short loc_1F176
		cmp	[bp+var_1E], 0
		jz	short loc_1F16C
		mov	word_44DC6, 3Eh	; '>'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F16C:				; CODE XREF: sub_1E1A0+FC0j
		mov	word_44DC6, 3Ah	; ':'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F176:				; CODE XREF: sub_1E1A0+FBAj
		cmp	[bp+var_2C], 54h ; 'T'
		jle	short loc_1F196
		cmp	[bp+var_1E], 0
		jz	short loc_1F18C
		mov	word_44DC6, 41h	; 'A'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F18C:				; CODE XREF: sub_1E1A0+FE0j
		mov	word_44DC6, 43h	; 'C'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F196:				; CODE XREF: sub_1E1A0+FDAj
		cmp	[bp+var_1E], 0
		jz	short loc_1F1A6
		mov	word_44DC6, 40h	; '@'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F1A6:				; CODE XREF: sub_1E1A0+FFAj
		mov	word_44DC6, 44h	; 'D'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F1B0:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15F6o
		cmp	[bp+var_32], 96h ; 'ñ'
		jl	short loc_1F1BA
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F1BA:				; CODE XREF: sub_1E1A0+1015j
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 109h
		jl	short loc_1F1CC
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F1CC:				; CODE XREF: sub_1E1A0+1027j
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 97h	; 'ó'
		jle	short loc_1F1E6
		mov	[bp+var_1E], 1
		jmp	short loc_1F1EB
; ---------------------------------------------------------------------------
		align 2

loc_1F1E6:				; CODE XREF: sub_1E1A0+103Cj
		mov	[bp+var_1E], 0

loc_1F1EB:				; CODE XREF: sub_1E1A0+1043j
		mov	[bp+var_22], 0
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 58h	; 'X'
		jle	short loc_1F21A
		cmp	[bp+var_1E], 0
		jnz	short loc_1F21A
		cmp	[bp+var_2C], 0
		jge	short loc_1F212
		mov	[bp+var_22], 3
		jmp	loc_1F295
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_1F212:				; CODE XREF: sub_1E1A0+1066j
		mov	[bp+var_22], 9
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F21A:				; CODE XREF: sub_1E1A0+105Aj
					; sub_1E1A0+1060j
		cmp	[bp+var_32], 1Fh
		jge	short loc_1F22E
		cmp	[bp+var_1E], 0
		jz	short loc_1F295
		mov	[bp+var_22], 6
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F22E:				; CODE XREF: sub_1E1A0+107Ej
		cmp	[bp+var_2C], 0FFACh
		jge	short loc_1F24A
		cmp	[bp+var_1E], 0
		jz	short loc_1F242
		mov	[bp+var_22], 4
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F242:				; CODE XREF: sub_1E1A0+1098j
		mov	[bp+var_22], 2
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F24A:				; CODE XREF: sub_1E1A0+1092j
		cmp	[bp+var_2C], 0
		jge	short loc_1F266
		cmp	[bp+var_1E], 0
		jz	short loc_1F25E
		mov	[bp+var_22], 5
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F25E:				; CODE XREF: sub_1E1A0+10B4j
		mov	[bp+var_22], 1
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F266:				; CODE XREF: sub_1E1A0+10AEj
		cmp	[bp+var_2C], 54h ; 'T'
		jle	short loc_1F282
		cmp	[bp+var_1E], 0
		jz	short loc_1F27A
		mov	[bp+var_22], 8
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F27A:				; CODE XREF: sub_1E1A0+10D0j
		mov	[bp+var_22], 0Ah
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F282:				; CODE XREF: sub_1E1A0+10CAj
		cmp	[bp+var_1E], 0
		jz	short loc_1F290
		mov	[bp+var_22], 7
		jmp	short loc_1F295
; ---------------------------------------------------------------------------
		align 2

loc_1F290:				; CODE XREF: sub_1E1A0+10E6j
		mov	[bp+var_22], 0Bh

loc_1F295:				; CODE XREF: sub_1E1A0+106Dj
					; sub_1E1A0+1077j ...
		cmp	[bp+var_22], 0
		jz	short loc_1F2B8
		mov	di, [bp+var_22]
		shl	di, 1
		mov	ax, [bp+var_28]
		cmp	[di+2E76h], ax
		jge	short loc_1F2B8
		cmp	[di+2E8Eh], ax
		jle	short loc_1F2B8
		mov	ax, [bp+var_22]
		add	ax, 39h	; '9'
		mov	word_44DC6, ax

loc_1F2B8:				; CODE XREF: sub_1E1A0+10F9j
					; sub_1E1A0+1107j ...
		cmp	word_44DC6, 0
		jz	short loc_1F2C2
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F2C2:				; CODE XREF: sub_1E1A0+111Dj
		cmp	[bp+var_2E], 200h
		jl	short loc_1F2CC
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F2CC:				; CODE XREF: sub_1E1A0+1127j
		mov	word_4428E, 0B9h ; 'π'
		mov	byte_44D46, 1
		mov	word_44A8C, 75h	; 'u'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F2E0:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15F0o
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_1E], ax
		mov	[bp+var_22], 4Fh ; 'O'
		mov	[bp+var_C], 32h	; '2'
		mov	[bp+var_E], 4Bh	; 'K'
		jmp	short loc_1F30F
; ---------------------------------------------------------------------------
		align 2

loc_1F2FA:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15F2o
		mov	ax, [bp+var_2C]
		mov	[bp+var_1E], ax
		mov	[bp+var_22], 69h ; 'i'
		mov	[bp+var_C], 0
		mov	[bp+var_E], 19h

loc_1F30F:				; CODE XREF: sub_1E1A0+1157j
		mov	byte_44D46, 1
		cmp	[bp+var_28], 0
		jge	short loc_1F350
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 64h	; 'd'
		jge	short loc_1F350
		cmp	[bp+var_1E], 0
		jle	short loc_1F350
		cmp	[bp+var_1E], 278h
		jl	short loc_1F339
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F339:				; CODE XREF: sub_1E1A0+1194j
		cmp	[bp+var_1E], 188h
		jg	short loc_1F343
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F343:				; CODE XREF: sub_1E1A0+119Ej
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	ax, [bp+var_22]
		jmp	loc_1EA9D
; ---------------------------------------------------------------------------
		align 2

loc_1F350:				; CODE XREF: sub_1E1A0+1178j
					; sub_1E1A0+1187j ...
		cmp	[bp+var_28], 0
		jle	short loc_1F3A8
		mov	bx, [bp+arg_0]
		mov	ax, [bx+2]
		sub	ax, word_449EC
		cmp	ax, 15Eh
		jle	short loc_1F3A8
		cmp	[bp+var_1E], 2B4h
		jge	short loc_1F3A8
		cmp	[bp+var_1E], 14Ch
		jle	short loc_1F3A8
		mov	word_44A8C, 2Ah	; '*'
		mov	word_44988, 0FFF4h
		cmp	[bp+var_1E], 200h
		jle	short loc_1F38C
		mov	ax, [bp+var_C]
		jmp	short loc_1F38F
; ---------------------------------------------------------------------------
		align 2

loc_1F38C:				; CODE XREF: sub_1E1A0+11E4j
		mov	ax, [bp+var_E]

loc_1F38F:				; CODE XREF: sub_1E1A0+11E9j
		add	ax, 18h
		mov	word_4428E, ax
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	ax, [bp+var_22]
		add	ax, 19h
		mov	word_44DC6, ax
		jmp	loc_1EBE7
; ---------------------------------------------------------------------------
		align 2

loc_1F3A8:				; CODE XREF: sub_1E1A0+11B4j
					; sub_1E1A0+11C3j ...
		push	[bp+var_28]
		push	[bp+var_1E]
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_A], ax
		cmp	ax, 14Ch
		jg	short loc_1F3C1
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F3C1:				; CODE XREF: sub_1E1A0+121Cj
		cmp	ax, 2B4h
		jl	short loc_1F3C9
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F3C9:				; CODE XREF: sub_1E1A0+1224j
		push	[bp+var_28]
		push	[bp+var_1E]
		call	sub_2EA4E
		add	sp, 4
		sub	ax, 100h
		neg	ax
		and	ah, 3
		mov	cx, 18h
		imul	cx
		mov	si, ax
		mov	cl, 0Ah
		sar	si, cl
		mov	ax, [bp+var_22]
		add	ax, si
		inc	ax
		mov	word_44DC6, ax
		mov	al, [bp+var_12]
		mov	byte_44D47, al
		mov	byte_4392C, 0
		mov	word_44A8C, 2Ah	; '*'
		mov	word_44988, 0FFF4h
		mov	ax, [bp+var_A]
		sub	ax, 200h
		cmp	ax, 5Ah	; 'Z'
		jle	short loc_1F41E
		mov	ax, [bp+var_C]

loc_1F418:				; CODE XREF: sub_1E1A0+128Fj
		add	ax, si
		jmp	loc_1EA20
; ---------------------------------------------------------------------------
		align 2

loc_1F41E:				; CODE XREF: sub_1E1A0+1273j
		mov	ax, [bp+var_A]
		sub	ax, 200h
		cmp	ax, 0FFA6h
		jl	short loc_1F42C
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F42C:				; CODE XREF: sub_1E1A0+1287j
		mov	ax, [bp+var_E]
		jmp	short loc_1F418
; ---------------------------------------------------------------------------
		align 2

loc_1F432:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+15F4o
		cmp	[bp+var_32], 78h ; 'x'
		jge	short loc_1F43E
		mov	al, [bp+var_12]
		mov	byte_44D47, al

loc_1F43E:				; CODE XREF: sub_1E1A0+1296j
		cmp	[bp+var_2C], 17h
		jl	short loc_1F4A0
		cmp	[bp+var_2C], 61h ; 'a'
		jg	short loc_1F4A0
		cmp	[bp+var_28], 0FEF1h
		jle	short loc_1F4A0
		cmp	[bp+var_28], 0FF0Fh
		jge	short loc_1F4A0
		mov	word_44A8C, 2Ah	; '*'
		cmp	[bp+var_14], 0FEF1h
		jge	short loc_1F46E
		mov	word_4428E, 91h	; 'ë'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F46E:				; CODE XREF: sub_1E1A0+12C3j
		cmp	[bp+var_14], 0FF0Fh
		jle	short loc_1F47E
		mov	word_4428E, 92h	; 'í'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F47E:				; CODE XREF: sub_1E1A0+12D3j
		cmp	[bp+var_18], 17h
		jge	short loc_1F48E
		mov	word_4428E, 94h	; 'î'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F48E:				; CODE XREF: sub_1E1A0+12E2j
		cmp	[bp+var_18], 61h ; 'a'
		jg	short loc_1F497
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F497:				; CODE XREF: sub_1E1A0+12F2j
		mov	word_4428E, 93h	; 'ì'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4A0:				; CODE XREF: sub_1E1A0+12A2j
					; sub_1E1A0+12A8j ...
		cmp	[bp+var_2C], 0FFE9h
		jle	short loc_1F4A9
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4A9:				; CODE XREF: sub_1E1A0+1304j
		cmp	[bp+var_2C], 0FF9Fh
		jge	short loc_1F4B2
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4B2:				; CODE XREF: sub_1E1A0+130Dj
		cmp	[bp+var_28], 10Fh
		jl	short loc_1F4BC
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4BC:				; CODE XREF: sub_1E1A0+1317j
		cmp	[bp+var_28], 0F1h ; 'Ò'
		jg	short loc_1F4C6
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4C6:				; CODE XREF: sub_1E1A0+1321j
		mov	word_44A8C, 2Ah	; '*'
		cmp	[bp+var_14], 10Fh
		jle	short loc_1F4DC
		mov	word_4428E, 8Dh	; 'ç'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4DC:				; CODE XREF: sub_1E1A0+1331j
		cmp	[bp+var_14], 0F1h ; 'Ò'
		jge	short loc_1F4EC
		mov	word_4428E, 8Eh	; 'é'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F4EC:				; CODE XREF: sub_1E1A0+1341j
		cmp	[bp+var_18], 0FFE9h
		jle	short loc_1F4FC
		mov	word_4428E, 8Fh	; 'è'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F4FC:				; CODE XREF: sub_1E1A0+1350j
		cmp	[bp+var_18], 0FF9Fh
		jl	short loc_1F505
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F505:				; CODE XREF: sub_1E1A0+1360j
		mov	word_4428E, 90h	; 'ê'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F50E:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+1632o
		cmp	[bp+var_32], 96h ; 'ñ'
		jle	short loc_1F518
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F518:				; CODE XREF: sub_1E1A0+1373j
		cmp	[bp+var_2E], 96h ; 'ñ'
		jle	short loc_1F522
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F522:				; CODE XREF: sub_1E1A0+137Dj
		mov	word_44A8C, 1A9h
		cmp	[bp+var_14], 0FF6Ah
		jg	short loc_1F538
		mov	word_4428E, 0A1h ; '°'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F538:				; CODE XREF: sub_1E1A0+138Dj
		cmp	[bp+var_14], 96h ; 'ñ'
		jl	short loc_1F548
		mov	word_4428E, 0A2h ; '¢'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F548:				; CODE XREF: sub_1E1A0+139Dj
		cmp	[bp+var_18], 96h ; 'ñ'
		jl	short loc_1F558
		mov	word_4428E, 0A3h ; '£'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F558:				; CODE XREF: sub_1E1A0+13ADj
		cmp	[bp+var_18], 0FF6Ah
		jle	short loc_1F562
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F562:				; CODE XREF: sub_1E1A0+13BDj
		mov	word_4428E, 0A4h ; '§'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F56C:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+1634o
		cmp	[bp+var_2C], 0FF38h
		jge	short loc_1F576
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F576:				; CODE XREF: sub_1E1A0+13D1j
		cmp	[bp+var_2C], 104h
		jle	short loc_1F580
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F580:				; CODE XREF: sub_1E1A0+13DBj
		cmp	[bp+var_2E], 50h ; 'P'
		jle	short loc_1F589
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F589:				; CODE XREF: sub_1E1A0+13E4j
		mov	word_44A8C, 0E6h ; 'Ê'
		cmp	[bp+var_14], 0FFB0h
		jg	short loc_1F59E
		mov	word_4428E, 0A5h ; '•'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F59E:				; CODE XREF: sub_1E1A0+13F3j
		cmp	[bp+var_14], 50h ; 'P'
		jl	short loc_1F5AE
		mov	word_4428E, 0A8h ; '®'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F5AE:				; CODE XREF: sub_1E1A0+1402j
		cmp	[bp+var_18], 0FF38h
		jg	short loc_1F5BE
		mov	word_4428E, 0A6h ; '¶'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F5BE:				; CODE XREF: sub_1E1A0+1413j
		cmp	[bp+var_18], 104h
		jge	short loc_1F5C8
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F5C8:				; CODE XREF: sub_1E1A0+1423j
		mov	word_4428E, 0A7h ; 'ß'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F5D2:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+1636o
		cmp	[bp+var_32], 0B4h ; '¥'
		jle	short loc_1F5DC
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F5DC:				; CODE XREF: sub_1E1A0+1437j
		cmp	[bp+var_2E], 64h ; 'd'
		jle	short loc_1F5E5
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F5E5:				; CODE XREF: sub_1E1A0+1440j
		mov	word_44A8C, 0F8h ; '¯'
		cmp	[bp+var_14], 0FF9Ch
		jg	short loc_1F5FA
		mov	word_4428E, 0A9h ; '©'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F5FA:				; CODE XREF: sub_1E1A0+144Fj
		cmp	[bp+var_14], 64h ; 'd'
		jl	short loc_1F60A
		mov	word_4428E, 0ACh ; '¨'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F60A:				; CODE XREF: sub_1E1A0+145Ej
		cmp	[bp+var_18], 0FF4Ch
		jg	short loc_1F61A
		mov	word_4428E, 0ABh ; '´'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F61A:				; CODE XREF: sub_1E1A0+146Fj
		cmp	[bp+var_18], 0B4h ; '¥'
		jge	short loc_1F624
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F624:				; CODE XREF: sub_1E1A0+147Fj
		mov	word_4428E, 0AAh ; '™'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F62E:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+1638o
		cmp	[bp+var_32], 0C8h ; '»'
		jle	short loc_1F638
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F638:				; CODE XREF: sub_1E1A0+1493j
		cmp	[bp+var_2E], 0C8h ; '»'
		jle	short loc_1F642
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F642:				; CODE XREF: sub_1E1A0+149Dj
		mov	word_44A8C, 226h
		cmp	[bp+var_14], 0FF38h
		jg	short loc_1F658
		mov	word_4428E, 0ADh ; '≠'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F658:				; CODE XREF: sub_1E1A0+14ADj
		cmp	[bp+var_14], 0C8h ; '»'
		jl	short loc_1F668
		mov	word_4428E, 0AEh ; 'Æ'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F668:				; CODE XREF: sub_1E1A0+14BDj
		cmp	[bp+var_18], 0FF38h
		jg	short loc_1F678
		mov	word_4428E, 0AFh ; 'Ø'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F678:				; CODE XREF: sub_1E1A0+14CDj
		cmp	[bp+var_18], 0C8h ; '»'
		jge	short loc_1F682
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F682:				; CODE XREF: sub_1E1A0+14DDj
		mov	word_4428E, 0B0h ; '∞'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F68C:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+163Ao
		cmp	[bp+var_32], 72h ; 'r'
		jle	short loc_1F695
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F695:				; CODE XREF: sub_1E1A0+14F0j
		cmp	[bp+var_2E], 72h ; 'r'
		jle	short loc_1F69E
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F69E:				; CODE XREF: sub_1E1A0+14F9j
		mov	word_44A8C, 1EFh
		cmp	[bp+var_14], 0FF8Eh
		jg	short loc_1F6B4
		mov	word_4428E, 0B4h ; '¥'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F6B4:				; CODE XREF: sub_1E1A0+1508j
		cmp	[bp+var_14], 72h ; 'r'
		jl	short loc_1F6C4
		mov	word_4428E, 0B2h ; '≤'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F6C4:				; CODE XREF: sub_1E1A0+1518j
		cmp	[bp+var_18], 0FF8Eh
		jg	short loc_1F6D4
		mov	word_4428E, 0B1h ; '±'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F6D4:				; CODE XREF: sub_1E1A0+1528j
		cmp	[bp+var_18], 72h ; 'r'
		jge	short loc_1F6DD
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F6DD:				; CODE XREF: sub_1E1A0+1538j
		mov	word_4428E, 0B3h ; '≥'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F6E6:				; CODE XREF: sub_1E1A0+412j
					; DATA XREF: sub_1E1A0+163Co
		cmp	[bp+var_2C], 0FF56h
		jge	short loc_1F6F0
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F6F0:				; CODE XREF: sub_1E1A0+154Bj
		cmp	[bp+var_2C], 104h
		jle	short loc_1F6FA
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F6FA:				; CODE XREF: sub_1E1A0+1555j
		cmp	[bp+var_2E], 6Eh ; 'n'
		jle	short loc_1F703
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F703:				; CODE XREF: sub_1E1A0+155Ej
		mov	word_44A8C, 0E6h ; 'Ê'
		cmp	[bp+var_14], 0FF92h
		jg	short loc_1F71A
		mov	word_4428E, 0B5h ; 'µ'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_1F71A:				; CODE XREF: sub_1E1A0+156Dj
		cmp	[bp+var_14], 6Eh ; 'n'
		jl	short loc_1F72A
		mov	word_4428E, 0B8h ; '∏'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2

loc_1F72A:				; CODE XREF: sub_1E1A0+157Ej
		cmp	[bp+var_18], 0FF56h
		jg	short loc_1F73C
		mov	word_4428E, 0B7h ; '∑'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 4

loc_1F73C:				; CODE XREF: sub_1E1A0+158Fj
		cmp	[bp+var_18], 104h
		jge	short loc_1F746
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F746:				; CODE XREF: sub_1E1A0+15A1j
		mov	word_4428E, 0B6h ; '∂'
		jmp	loc_1F7E6
; ---------------------------------------------------------------------------
		align 2
off_1F750	dw offset loc_1E5B8	; DATA XREF: sub_1E1A0+412r
		dw offset loc_1E5E1
		dw offset loc_1E650
		dw offset loc_1E624
		dw offset loc_1E608
		dw offset loc_1E600
		dw offset loc_1E64A
		dw offset loc_1E678
		dw offset loc_1E690
		dw offset loc_1E6A4
		dw offset loc_1E6C6
		dw offset loc_1E7DA
		dw offset loc_1E5F4
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1E802
		dw offset loc_1E81E
		dw offset loc_1E8E4
		dw offset loc_1E8E4
		dw offset loc_1E8CA
		dw offset loc_1E978
		dw offset loc_1E8B6
		dw offset loc_1EA36
		dw offset loc_1EA26
		dw offset loc_1EB46
		dw offset loc_1EB6C
		dw offset loc_1EBF0
		dw offset loc_1EE3E
		dw offset loc_1EF24
		dw offset loc_1F028
		dw offset loc_1F020
		dw offset loc_1F2E0
		dw offset loc_1F2FA
		dw offset loc_1F432
		dw offset loc_1F1B0
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F50E
		dw offset loc_1F56C
		dw offset loc_1F5D2
		dw offset loc_1F62E
		dw offset loc_1F68C
		dw offset loc_1F6E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
		dw offset loc_1F7E6
; ---------------------------------------------------------------------------

loc_1F7E6:				; CODE XREF: sub_1E1A0+F6j
					; sub_1E1A0+40Cj ...
		cmp	[bp+var_34], 7
		jnb	short loc_1F7EF
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1F7EF:				; CODE XREF: sub_1E1A0+164Aj
		mov	al, [bp+var_1A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	di, [bp+arg_0]
		mov	ax, [di]
		sub	ax, [bx-599Eh]
		mov	[bp+var_2C], ax
		mov	al, [bp+var_20]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [di+4]
		sub	ax, [bx+750Eh]
		mov	[bp+var_28], ax
		mov	al, [bp+var_34]
		sub	ah, ah
		sub	ax, 7
		cmp	ax, 0Bh
		ja	short loc_1F896
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_1F87E[bx]

loc_1F82A:				; DATA XREF: sub_1E1A0:off_1F87Eo
					; sub_1E1A0+16E6o ...
		mov	[bp+var_10], 0
		jmp	short loc_1F896
; ---------------------------------------------------------------------------
		align 2

loc_1F832:				; CODE XREF: sub_1E1A0+1685j
					; DATA XREF: sub_1E1A0+16E0o ...
		mov	[bp+var_10], 300h
		mov	ax, [bp+var_2C]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_28]
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_1E]
		neg	ax

loc_1F848:				; CODE XREF: sub_1E1A0+16DCj
		mov	[bp+var_28], ax
		jmp	short loc_1F896
; ---------------------------------------------------------------------------
		align 2

loc_1F84E:				; CODE XREF: sub_1E1A0+1685j
					; DATA XREF: sub_1E1A0+16E2o ...
		mov	[bp+var_10], 200h
		mov	ax, [bp+var_28]
		neg	ax
		mov	[bp+var_28], ax
		mov	ax, [bp+var_2C]
		neg	ax
		mov	[bp+var_2C], ax
		jmp	short loc_1F896
; ---------------------------------------------------------------------------
		align 2

loc_1F866:				; CODE XREF: sub_1E1A0+1685j
					; DATA XREF: sub_1E1A0+16E4o ...
		mov	[bp+var_10], 100h
		mov	ax, [bp+var_2C]
		mov	[bp+var_1E], ax
		mov	ax, [bp+var_28]
		neg	ax
		mov	[bp+var_2C], ax
		mov	ax, [bp+var_1E]
		jmp	short loc_1F848
; ---------------------------------------------------------------------------
off_1F87E	dw offset loc_1F82A	; DATA XREF: sub_1E1A0+1685r
		dw offset loc_1F832
		dw offset loc_1F84E
		dw offset loc_1F866
		dw offset loc_1F82A
		dw offset loc_1F832
		dw offset loc_1F84E
		dw offset loc_1F866
		dw offset loc_1F82A
		dw offset loc_1F832
		dw offset loc_1F84E
		dw offset loc_1F866
; ---------------------------------------------------------------------------

loc_1F896:				; CODE XREF: sub_1E1A0+1680j
					; sub_1E1A0+168Fj ...
		mov	al, [bp+var_34]
		sub	ah, ah
		cmp	ax, 7
		jb	short loc_1F8CD
		cmp	ax, 0Ah
		jbe	short loc_1F8C0
		cmp	ax, 0Bh
		jb	short loc_1F8CD
		cmp	ax, 0Eh
		jbe	short loc_1F8FC
		cmp	ax, 0Fh
		jb	short loc_1F8CD
		cmp	ax, 12h
		ja	short loc_1F8BC
		jmp	loc_1F940
; ---------------------------------------------------------------------------

loc_1F8BC:				; CODE XREF: sub_1E1A0+1717j
		jmp	short loc_1F8CD
; ---------------------------------------------------------------------------
		align 4

loc_1F8C0:				; CODE XREF: sub_1E1A0+1703j
		cmp	word_44DC6, 0
		jnz	short loc_1F8CD
		mov	word_44DC6, 3

loc_1F8CD:				; CODE XREF: sub_1E1A0+5Aj
					; sub_1E1A0+63j ...
		cmp	word_44DC6, 0
		jg	short loc_1F8D7
		jmp	loc_1F992
; ---------------------------------------------------------------------------

loc_1F8D7:				; CODE XREF: sub_1E1A0+1732j
		mov	cl, 2
		shl	word_44DC6, cl
		mov	ax, [bp+var_10]
		cmp	ax, 100h
		jnz	short loc_1F8E8
		jmp	loc_1F9CC
; ---------------------------------------------------------------------------

loc_1F8E8:				; CODE XREF: sub_1E1A0+1743j
		cmp	ax, 200h
		jnz	short loc_1F8F0
		jmp	loc_1F9C4
; ---------------------------------------------------------------------------

loc_1F8F0:				; CODE XREF: sub_1E1A0+174Bj
		cmp	ax, 300h
		jnz	short loc_1F8F8
		jmp	loc_1F98E
; ---------------------------------------------------------------------------

loc_1F8F8:				; CODE XREF: sub_1E1A0+1753j
		jmp	loc_1F992
; ---------------------------------------------------------------------------
		align 2

loc_1F8FC:				; CODE XREF: sub_1E1A0+170Dj
		push	[bp+var_28]
		mov	ax, 0FF80h
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		push	[bp+var_2C]
		mov	cx, 0FF80h
		push	cx
		mov	di, ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, di
		mov	[bp+var_22], ax
		or	ax, ax
		jge	short loc_1F8CD
		mov	word_44DC6, 4
		jmp	short loc_1F8CD
; ---------------------------------------------------------------------------
		align 2

loc_1F940:				; CODE XREF: sub_1E1A0+1719j
		push	[bp+var_28]
		mov	ax, 0FF80h
		push	ax
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		push	[bp+var_2C]
		mov	cx, 0FF80h
		push	cx
		mov	di, ax
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, di
		mov	[bp+var_22], ax
		or	ax, ax
		jle	short loc_1F984
		mov	word_44DC6, 5
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------

loc_1F984:				; CODE XREF: sub_1E1A0+17D9j
		mov	word_449EC, 1C2h
		jmp	loc_1F8CD
; ---------------------------------------------------------------------------
		align 2

loc_1F98E:				; CODE XREF: sub_1E1A0+1755j
		inc	word_44DC6

loc_1F992:				; CODE XREF: sub_1E1A0+1734j
					; sub_1E1A0:loc_1F8F8j	...
		mov	ax, 22h	; '"'
		imul	word_44DC6
		add	ax, word_454C2
		mov	dx, word_454C4
		mov	word_44D64, ax
		mov	word_44D66, dx
		cmp	byte_44D47, 4
		jnz	short loc_1F9D4
		mov	bx, [bp+arg_0]
		mov	ax, [bx+4]
		xor	ax, [bx]
		mov	cl, 8
		sar	ax, cl
		and	ax, 1
		add	word_449EC, ax
		jmp	short loc_1F9D9
; ---------------------------------------------------------------------------

loc_1F9C4:				; CODE XREF: sub_1E1A0+174Dj
		add	word_44DC6, 2
		jmp	short loc_1F992
; ---------------------------------------------------------------------------
		align 2

loc_1F9CC:				; CODE XREF: sub_1E1A0+1745j
		add	word_44DC6, 3
		jmp	short loc_1F992
; ---------------------------------------------------------------------------
		align 2

loc_1F9D4:				; CODE XREF: sub_1E1A0+180Dj
		add	word_449EC, 2

loc_1F9D9:				; CODE XREF: sub_1E1A0+1822j
		cmp	word_4428E, 0
		jge	short loc_1F9E3
		jmp	loc_1FADE
; ---------------------------------------------------------------------------

loc_1F9E3:				; CODE XREF: sub_1E1A0+183Ej
		mov	bx, word_4428E
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		les	di, dword_46460
		mov	ax, es:[bx+di]
		neg	ax
		add	ax, [bp+var_10]
		add	ax, [bp+var_38]
		and	ah, 3
		mov	word_45D96, ax
		mov	ax, [bp+var_10]
		or	ax, ax
		jz	short loc_1FA20
		cmp	ax, 100h
		jnz	short loc_1FA13
		jmp	loc_1FAA6
; ---------------------------------------------------------------------------

loc_1FA13:				; CODE XREF: sub_1E1A0+186Ej
		cmp	ax, 200h
		jz	short loc_1FA78
		cmp	ax, 300h
		jz	short loc_1FA4C
		jmp	loc_1FAD0
; ---------------------------------------------------------------------------

loc_1FA20:				; CODE XREF: sub_1E1A0+1869j
		mov	ax, word_4428E
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_46460
		mov	dx, es
		mov	word ptr [bp+var_40], ax
		mov	word ptr [bp+var_40+2],	dx
		les	bx, [bp+var_40]
		mov	ax, es:[bx+2]
		mov	word_42D20, ax
		mov	ax, es:[bx+4]

loc_1FA45:				; CODE XREF: sub_1E1A0+18D5j
					; sub_1E1A0+1903j
		mov	word_42D2C, ax
		jmp	loc_1FAD0
; ---------------------------------------------------------------------------
		align 2

loc_1FA4C:				; CODE XREF: sub_1E1A0+187Bj
		mov	ax, word_4428E
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_46460
		mov	dx, word ptr dword_46460+2
		mov	word ptr [bp+var_40], ax
		mov	word ptr [bp+var_40+2],	dx
		les	bx, [bp+var_40]
		mov	ax, es:[bx+4]
		neg	ax
		mov	word_42D20, ax
		mov	ax, es:[bx+2]
		jmp	short loc_1FA45
; ---------------------------------------------------------------------------
		align 2

loc_1FA78:				; CODE XREF: sub_1E1A0+1876j
		mov	ax, word_4428E
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_46460
		mov	dx, word ptr dword_46460+2
		mov	word ptr [bp+var_40], ax
		mov	word ptr [bp+var_40+2],	dx
		les	bx, [bp+var_40]
		mov	ax, es:[bx+2]
		neg	ax
		mov	word_42D20, ax
		mov	ax, es:[bx+4]

loc_1FAA1:				; CODE XREF: sub_1E1A0+192Dj
		neg	ax
		jmp	short loc_1FA45
; ---------------------------------------------------------------------------
		align 2

loc_1FAA6:				; CODE XREF: sub_1E1A0+1870j
		mov	ax, word_4428E
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_46460
		mov	dx, word ptr dword_46460+2
		mov	word ptr [bp+var_40], ax
		mov	word ptr [bp+var_40+2],	dx
		les	bx, [bp+var_40]
		mov	ax, es:[bx+4]
		mov	word_42D20, ax
		mov	ax, es:[bx+2]
		jmp	short loc_1FAA1
; ---------------------------------------------------------------------------
		align 2

loc_1FAD0:				; CODE XREF: sub_1E1A0+187Dj
					; sub_1E1A0+18A8j
		mov	ax, word_449E0
		add	word_42D20, ax
		mov	ax, word_449F6
		add	word_42D2C, ax

loc_1FADE:				; CODE XREF: sub_1E1A0+1840j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1E1A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1FAE4	proc far		; CODE XREF: sub_14DA2+1833P

var_14		= word ptr -14h
var_10		= byte ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	di
		push	si
		mov	bx, [bp+arg_2]
		shl	bx, 1
		mov	bx, [bx-5A30h]
		add	bx, [bp+arg_0]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_2], al
		or	al, al
		jnz	short loc_1FB12

loc_1FB0A:				; CODE XREF: sub_1FAE4+1DAj
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_1FB12:				; CODE XREF: sub_1FAE4+24j
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, [bx-599Eh]
		mov	[bp+var_6], ax
		mov	bx, [bp+arg_2]
		shl	bx, 1
		mov	ax, [bx-55EAh]
		mov	[bp+var_C], ax
		cmp	[bp+var_2], 0FDh ; '˝'
		jnb	short loc_1FB33
		jmp	loc_1FC34
; ---------------------------------------------------------------------------

loc_1FB33:				; CODE XREF: sub_1FAE4+4Aj
		mov	al, [bp+var_2]
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jz	short loc_1FB4E
		cmp	ax, 0FEh ; '˛'
		jz	short loc_1FBB4
		cmp	ax, 0FFh
		jnz	short loc_1FB4A
		jmp	loc_1FBF2
; ---------------------------------------------------------------------------

loc_1FB4A:				; CODE XREF: sub_1FAE4+61j
		jmp	loc_1FC86
; ---------------------------------------------------------------------------
		align 2

loc_1FB4E:				; CODE XREF: sub_1FAE4+57j
		mov	ax, [bp+arg_2]
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, ax
		mov	bx, [bx-5A32h]
		add	bx, [bp+arg_0]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx-1]
		mov	[bp+var_2], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_1FB8D
		mov	bx, [bp+var_14]
		mov	ax, [bx-7E82h]

loc_1FB8A:				; CODE XREF: sub_1FAE4+14Dj
		mov	[bp+var_C], ax

loc_1FB8D:				; CODE XREF: sub_1FAE4+9Dj
					; sub_1FAE4+143j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jnz	short loc_1FBA8
		jmp	loc_1FC86
; ---------------------------------------------------------------------------

loc_1FBA8:				; CODE XREF: sub_1FAE4+BFj
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, [bx+7556h]
		jmp	loc_1FC83
; ---------------------------------------------------------------------------

loc_1FBB4:				; CODE XREF: sub_1FAE4+5Cj
		mov	ax, [bp+arg_2]
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, ax
		mov	bx, [bx-5A32h]
		add	bx, [bp+arg_0]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_2], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_1FC62
		mov	bx, [bp+var_14]
		mov	ax, [bx-7E82h]
		jmp	short loc_1FC5F
; ---------------------------------------------------------------------------
		align 2

loc_1FBF2:				; CODE XREF: sub_1FAE4+63j
		mov	ax, [bp+arg_2]
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, [bp+arg_0]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx-1]
		mov	[bp+var_2], al
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jnz	short loc_1FC2A
		jmp	loc_1FB8D
; ---------------------------------------------------------------------------

loc_1FC2A:				; CODE XREF: sub_1FAE4+141j
		mov	bx, [bp+var_14]
		mov	ax, [bx-7E84h]
		jmp	loc_1FB8A
; ---------------------------------------------------------------------------

loc_1FC34:				; CODE XREF: sub_1FAE4+4Cj
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		mov	byte ptr [bp+var_14], al
		cmp	al, ah
		jz	short loc_1FC86
		test	byte ptr [bp+var_14], 1
		jz	short loc_1FC62
		mov	bx, [bp+arg_2]
		shl	bx, 1
		mov	ax, [bx-7E84h]

loc_1FC5F:				; CODE XREF: sub_1FAE4+10Bj
		mov	[bp+var_C], ax

loc_1FC62:				; CODE XREF: sub_1FAE4+102j
					; sub_1FAE4+170j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_1FC86
		mov	bx, [bp+arg_0]
		shl	bx, 1
		mov	ax, [bx+7558h]

loc_1FC83:				; CODE XREF: sub_1FAE4+CDj
		mov	[bp+var_6], ax

loc_1FC86:				; CODE XREF: sub_1FAE4:loc_1FB4Aj
					; sub_1FAE4+C1j ...
		sub	di, di
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A4h]
		cbw
		cmp	ax, 20h	; ' '
		jz	short loc_1FCC2
		jg	short loc_1FCF4
		cmp	ax, 0Bh
		jz	short loc_1FCE0
		cmp	ax, 12h
		jz	short loc_1FCEA
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------
		align 2

loc_1FCB2:				; CODE XREF: sub_1FAE4+221j
		mov	di, 2
		mov	[bp+var_4], 2F06h

loc_1FCBA:				; CODE XREF: sub_1FAE4+1CBj
					; sub_1FAE4+1E6j ...
		or	di, di
		jnz	short loc_1FD14
		jmp	loc_1FB0A
; ---------------------------------------------------------------------------
		align 2

loc_1FCC2:				; CODE XREF: sub_1FAE4+1BDj
		mov	di, 2
		mov	[bp+var_4], 2F12h
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FCCC:				; CODE XREF: sub_1FAE4+21Aj
		mov	di, 2
		mov	[bp+var_4], 2F1Eh
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FCD6:				; CODE XREF: sub_1FAE4+213j
		mov	di, 4
		mov	[bp+var_4], 2F2Ah
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FCE0:				; CODE XREF: sub_1FAE4+1C4j
					; sub_1FAE4+22Bj
		mov	di, 1
		mov	[bp+var_4], 2ED0h
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FCEA:				; CODE XREF: sub_1FAE4+1C9j
		mov	di, 8
		mov	[bp+var_4], 2ED6h
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FCF4:				; CODE XREF: sub_1FAE4+1BFj
		cmp	ax, 22h	; '"'
		jz	short loc_1FCD6
		jg	short loc_1FD02
		cmp	ax, 21h	; '!'
		jz	short loc_1FCCC
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------

loc_1FD02:				; CODE XREF: sub_1FAE4+215j
		cmp	ax, 23h	; '#'
		jz	short loc_1FCB2
		cmp	ax, 47h	; 'G'
		jl	short loc_1FCBA
		cmp	ax, 4Ah	; 'J'
		jle	short loc_1FCE0
		jmp	short loc_1FCBA
; ---------------------------------------------------------------------------
		align 2

loc_1FD14:				; CODE XREF: sub_1FAE4+1D8j
		mov	bx, [bp+arg_2]
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, [bp+arg_0]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_10], al
		cmp	al, 6
		jnz	short loc_1FD3A
		mov	ax, word_3B8EA
		mov	[bp+var_A], ax
		jmp	short loc_1FD3F
; ---------------------------------------------------------------------------

loc_1FD3A:				; CODE XREF: sub_1FAE4+24Cj
		mov	[bp+var_A], 0

loc_1FD3F:				; CODE XREF: sub_1FAE4+254j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+209Ah]
		mov	[bp+var_8], ax
		sub	si, si
		jmp	short loc_1FDA6
; ---------------------------------------------------------------------------
		align 2

loc_1FD5C:				; CODE XREF: sub_1FAE4+2CEj
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+var_4]
		add	bx, ax
		mov	ax, [bx]
		add	ax, [bp+var_6]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx], ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+2]
		add	ax, [bp+var_A]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx+2],	ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+4]

loc_1FD99:				; CODE XREF: sub_1FAE4+321j
					; sub_1FAE4+3A5j
		add	ax, [bp+var_C]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx+4],	ax

loc_1FDA5:				; CODE XREF: sub_1FAE4+2E0j
		inc	si

loc_1FDA6:				; CODE XREF: sub_1FAE4+275j
		cmp	si, di
		jl	short loc_1FDAD
		jmp	loc_1FE8C
; ---------------------------------------------------------------------------

loc_1FDAD:				; CODE XREF: sub_1FAE4+2C4j
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_1FD5C
		cmp	ax, 100h
		jnz	short loc_1FDBC
		jmp	loc_1FE4A
; ---------------------------------------------------------------------------

loc_1FDBC:				; CODE XREF: sub_1FAE4+2D3j
		cmp	ax, 200h
		jz	short loc_1FE08
		cmp	ax, 300h
		jnz	short loc_1FDA5
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+var_4]
		add	bx, ax
		mov	ax, [bx+4]
		neg	ax
		add	ax, [bp+var_6]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx], ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+2]
		add	ax, [bp+var_A]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx+2],	ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx]
		jmp	short loc_1FD99
; ---------------------------------------------------------------------------
		align 2

loc_1FE08:				; CODE XREF: sub_1FAE4+2DBj
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+var_4]
		add	bx, ax
		mov	ax, [bx]
		neg	ax
		add	ax, [bp+var_6]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx], ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+2]
		add	ax, [bp+var_A]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx+2],	ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+4]
		jmp	short loc_1FE87
; ---------------------------------------------------------------------------
		align 2

loc_1FE4A:				; CODE XREF: sub_1FAE4+2D5j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+var_4]
		add	bx, ax
		mov	ax, [bx+4]
		add	ax, [bp+var_6]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx], ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx+2]
		add	ax, [bp+var_A]
		mov	bx, [bp+arg_4]
		add	bx, [bp+var_14]
		mov	[bx+2],	ax
		mov	bx, [bp+var_4]
		add	bx, [bp+var_14]
		mov	ax, [bx]

loc_1FE87:				; CODE XREF: sub_1FAE4+363j
		neg	ax
		jmp	loc_1FD99
; ---------------------------------------------------------------------------

loc_1FE8C:				; CODE XREF: sub_1FAE4+2C6j
		mov	ax, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1FAE4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1FE94	proc far		; CODE XREF: sub_110D0+63P
					; sub_23702+23BP
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		sub	ax, ax
		mov	word_461C6, ax
		mov	word_461C4, ax
		mov	word_463D4, ax
		mov	word_463D2, ax
		call	sub_3A484
		or	dx, dx
		jg	short loc_1FEC2
		jl	short loc_1FEB9
		cmp	ax, 0FDE8h
		jnb	short loc_1FEC2

loc_1FEB9:				; CODE XREF: sub_1FE94+1Ej
		mov	ax, 1
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_1FEC2:				; CODE XREF: sub_1FE94+1Cj
					; sub_1FE94+23j
		mov	ax, 2F42h
		push	ax
		call	sub_2A236
		add	sp, 2
		mov	word_461C4, ax
		mov	word_461C6, dx
		mov	ax, 2F48h
		push	ax
		call	sub_2A236
		add	sp, 2
		mov	word_463D2, ax
		mov	word_463D4, dx
		sub	si, si

loc_1FEEA:				; CODE XREF: sub_1FE94+C1j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, 0A50h
		push	ax
		push	word_461C6
		push	word_461C4
		call	sub_30F92
		add	sp, 6
		mov	word_449F8, ax
		mov	word_449FA, dx
		or	ax, dx
		jnz	short loc_1FF38
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, 0A50h
		push	ax
		push	word_463D4
		push	word_463D2
		call	sub_30F9D
		add	sp, 6
		mov	word_449F8, ax
		mov	word_449FA, dx

loc_1FF38:				; CODE XREF: sub_1FE94+7Dj
		mov	ax, 16h
		imul	si
		add	ax, 764Ch
		push	ax
		push	word_449FA
		push	word_449F8
		call	sub_2955A
		add	sp, 6
		inc	si
		cmp	si, 74h	; 't'
		jl	short loc_1FEEA
		sub	ax, ax
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_1FE94	endp


; =============== S U B	R O U T	I N E =======================================


sub_1FF5E	proc far		; CODE XREF: sub_110D0+B5P
					; sub_239B4:loc_239D4P
		mov	ax, word_461C4
		or	ax, word_461C6
		jz	short loc_1FF77
		push	word_461C6
		push	word_461C4
		call	sub_3147C
		add	sp, 4

loc_1FF77:				; CODE XREF: sub_1FF5E+7j
		mov	ax, word_463D2
		or	ax, word_463D4
		jz	short locret_1FF90
		push	word_463D4
		push	word_463D2
		call	sub_3147C
		add	sp, 4

locret_1FF90:				; CODE XREF: sub_1FF5E+20j
		retf
sub_1FF5E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1FF92	proc far		; CODE XREF: sub_11C42+39DP
					; sub_23702+22P

var_10		= byte ptr -10h
var_E		= dword	ptr -0Eh
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		mov	byte_3E70C, al
		mov	al, [bx+1]
		mov	byte_3E70D, al
		mov	al, [bx+2]
		mov	byte_3E70E, al
		mov	al, [bx+3]
		mov	byte_3E70F, al
		mov	ax, 2F9Ah
		push	ax
		call	sub_2A236
		add	sp, 2
		mov	word ptr dword_454AA, ax
		mov	word ptr dword_454AA+2,	dx
		mov	ax, 80F4h
		push	ax
		mov	ax, 2F4Eh
		push	ax
		push	dx
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 8120h
		push	ax
		mov	ax, 2F53h
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, word_43892
		mov	dx, word_43894
		add	ax, 30h	; '0'
		mov	word ptr [bp+var_E], ax
		mov	word ptr [bp+var_E+2], dx
		les	bx, [bp+var_E]
		mov	ax, es:[bx+4]
		mov	word_42CBE, ax
		mov	ax, es:[bx+12h]
		add	ax, es:[bx]
		sar	ax, 1
		mov	word_42CBA, ax
		mov	ax, es:[bx+28h]
		mov	word_42CC4, ax
		mov	ax, es:[bx+24h]
		add	ax, es:[bx+36h]
		sar	ax, 1
		mov	word_42CC0, ax
		sub	si, si

loc_20044:				; CODE XREF: sub_1FF92+13Fj
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		mov	ax, word_42CBA
		les	bx, [bp+var_E]
		sub	ax, es:[bx+di]
		mov	[di-7376h], ax
		les	bx, [bp+var_E]
		mov	ax, word_42CBE
		sub	ax, es:[bx+di+4]
		mov	[di-7372h], ax
		les	bx, [bp+var_E]
		mov	ax, es:[bx+di+2]
		mov	[di-7374h], ax
		les	bx, [bp+var_E]
		mov	ax, word_42CC0
		sub	ax, es:[bx+di+24h]
		mov	[di-7352h], ax
		les	bx, [bp+var_E]
		mov	ax, word_42CC4
		sub	ax, es:[bx+di+28h]
		mov	[di-734Eh], ax
		les	bx, [bp+var_E]
		mov	ax, es:[bx+di+26h]
		mov	[di-7350h], ax
		les	bx, [bp+var_E]
		push	si
		push	di
		lea	si, [bx+di+48h]
		lea	di, [di-732Eh]
		push	ds
		push	ds
		push	es
		pop	ds
		pop	es
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		les	bx, [bp+var_E]
		push	si
		push	di
		lea	si, [bx+di+6Ch]
		lea	di, [di-730Ah]
		push	ds
		push	ds
		push	es
		pop	ds
		pop	es
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		inc	si
		cmp	si, 6
		jge	short loc_200D4
		jmp	loc_20044
; ---------------------------------------------------------------------------

loc_200D4:				; CODE XREF: sub_1FF92+13Dj
		sub	si, si

loc_200D6:				; CODE XREF: sub_1FF92+152j
		mov	bx, si
		shl	bx, 1
		mov	word ptr [bx-7388h], 0
		inc	si
		cmp	si, 5
		jl	short loc_200D6
		mov	ax, 814Ch
		push	ax
		mov	ax, 2F58h
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 8044h
		push	ax
		mov	ax, 2F5Dh
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 805Ah
		push	ax
		mov	ax, 2F62h
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 8070h
		push	ax
		mov	ax, 2F67h
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 8086h
		push	ax
		mov	ax, 2F6Ch
		push	ax
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	bx, [bp+arg_2]
		mov	al, [bx]
		mov	[bp+var_10], al
		cmp	al, 0FFh
		jnz	short loc_2019F
		jmp	loc_2042A
; ---------------------------------------------------------------------------

loc_2019F:				; CODE XREF: sub_1FF92+208j
		mov	bx, [bp+arg_0]
		cmp	[bx], al
		jz	short loc_201A9
		jmp	loc_2022A
; ---------------------------------------------------------------------------

loc_201A9:				; CODE XREF: sub_1FF92+212j
		mov	di, [bp+arg_2]
		mov	al, [di+1]
		cmp	[bx+1],	al
		jnz	short loc_2022A
		mov	al, [di+2]
		cmp	[bx+2],	al
		jnz	short loc_2022A
		mov	al, [di+3]
		cmp	[bx+3],	al
		jnz	short loc_2022A
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_3A496
		add	sp, 4
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		push	dx
		push	ax
		mov	ax, 2F71h
		push	ax
		call	sub_3A460
		add	sp, 6
		mov	word ptr dword_454B0, ax
		mov	word ptr dword_454B0+2,	dx
		sub	ax, ax
		mov	[bp+var_8], ax
		mov	[bp+var_A], ax
		jmp	short loc_20204
; ---------------------------------------------------------------------------
		align 4

loc_201FC:				; CODE XREF: sub_1FF92+295j
		add	[bp+var_A], 1
		adc	[bp+var_8], 0

loc_20204:				; CODE XREF: sub_1FF92+265j
		mov	ax, [bp+var_6]
		mov	dx, [bp+var_4]
		cmp	[bp+var_8], dx
		jg	short loc_20257
		jl	short loc_20216
		cmp	[bp+var_A], ax
		jnb	short loc_20257

loc_20216:				; CODE XREF: sub_1FF92+27Dj
		mov	bx, [bp+var_A]
		les	di, dword_454AA
		mov	al, es:[bx+di]
		les	di, dword_454B0
		mov	es:[bx+di], al
		jmp	short loc_201FC
; ---------------------------------------------------------------------------
		align 2

loc_2022A:				; CODE XREF: sub_1FF92+214j
					; sub_1FF92+220j ...
		mov	bx, [bp+arg_2]
		mov	al, [bx]
		mov	byte_3E70C, al
		mov	al, [bx+1]
		mov	byte_3E70D, al
		mov	al, [bx+2]
		mov	byte_3E70E, al
		mov	al, [bx+3]
		mov	byte_3E70F, al
		mov	ax, 2F9Ah
		push	ax
		call	sub_2A236
		add	sp, 2
		mov	word ptr dword_454B0, ax
		mov	word ptr dword_454B0+2,	dx

loc_20257:				; CODE XREF: sub_1FF92+27Bj
					; sub_1FF92+282j
		mov	ax, 810Ah
		push	ax
		mov	ax, 2F76h
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 8136h
		push	ax
		mov	ax, 2F7Bh
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, word_438A8
		mov	dx, word_438AA
		add	ax, 30h	; '0'
		mov	word ptr [bp+var_E], ax
		mov	word ptr [bp+var_E+2], dx
		les	bx, [bp+var_E]
		mov	ax, es:[bx+4]
		mov	word_42D08, ax
		mov	ax, es:[bx+12h]
		add	ax, es:[bx]
		sar	ax, 1
		mov	word_42D04, ax
		mov	ax, es:[bx+28h]
		mov	word_42D0E, ax
		mov	ax, es:[bx+24h]
		add	ax, es:[bx+36h]
		sar	ax, 1
		mov	word_42D0A, ax
		sub	si, si

loc_202D7:				; CODE XREF: sub_1FF92+3D2j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	di, ax
		mov	ax, word_42D04
		les	bx, [bp+var_E]
		sub	ax, es:[bx+di]
		mov	[di-6E7Ch], ax
		les	bx, [bp+var_E]
		mov	ax, word_42D08
		sub	ax, es:[bx+di+4]
		mov	[di-6E78h], ax
		les	bx, [bp+var_E]
		mov	ax, es:[bx+di+2]
		mov	[di-6E7Ah], ax
		les	bx, [bp+var_E]
		mov	ax, word_42D0A
		sub	ax, es:[bx+di+24h]
		mov	[di-6E58h], ax
		les	bx, [bp+var_E]
		mov	ax, word_42D0E
		sub	ax, es:[bx+di+28h]
		mov	[di-6E54h], ax
		les	bx, [bp+var_E]
		mov	ax, es:[bx+di+26h]
		mov	[di-6E56h], ax
		les	bx, [bp+var_E]
		push	si
		push	di
		lea	si, [bx+di+48h]
		lea	di, [di-6E34h]
		push	ds
		push	ds
		push	es
		pop	ds
		pop	es
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		les	bx, [bp+var_E]
		push	si
		push	di
		lea	si, [bx+di+6Ch]
		lea	di, [di-6E10h]
		push	ds
		push	ds
		push	es
		pop	ds
		pop	es
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		inc	si
		cmp	si, 6
		jge	short loc_20367
		jmp	loc_202D7
; ---------------------------------------------------------------------------

loc_20367:				; CODE XREF: sub_1FF92+3D0j
		sub	si, si

loc_20369:				; CODE XREF: sub_1FF92+3E5j
		mov	bx, si
		shl	bx, 1
		mov	word ptr [bx-72E6h], 0
		inc	si
		cmp	si, 5
		jl	short loc_20369
		mov	ax, 8162h
		push	ax
		mov	ax, 2F80h
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 809Ch
		push	ax
		mov	ax, 2F85h
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 80B2h
		push	ax
		mov	ax, 2F8Ah
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 80C8h
		push	ax
		mov	ax, 2F8Fh
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		mov	ax, 80DEh
		push	ax
		mov	ax, 2F94h
		push	ax
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_2955A
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_2042A:				; CODE XREF: sub_1FF92+20Aj
		sub	ax, ax
		mov	word ptr dword_454B0+2,	ax
		mov	word ptr dword_454B0, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_1FF92	endp


; =============== S U B	R O U T	I N E =======================================


sub_20438	proc far		; CODE XREF: sub_11C42+381P
					; sub_11C42+B44P ...
		mov	ax, word ptr dword_454B0
		or	ax, word ptr dword_454B0+2
		jz	short loc_20477
		mov	ax, 7594h
		push	ax
		mov	ax, 9184h
		push	ax
		mov	ax, 8D1Ah
		push	ax
		mov	ax, 2FA0h
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, word_438A8
		mov	dx, word_438AA
		add	ax, 30h	; '0'
		push	dx
		push	ax
		push	cs
		call	near ptr sub_204AE
		add	sp, 0Eh
		push	word ptr dword_454B0+2
		push	word ptr dword_454B0
		call	sub_31641
		add	sp, 4

loc_20477:				; CODE XREF: sub_20438+7j
		mov	ax, 754Ah
		push	ax
		mov	ax, 8C8Ah
		push	ax
		mov	ax, 8C78h
		push	ax
		mov	ax, 2FA0h
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, word_43892
		mov	dx, word_43894
		add	ax, 30h	; '0'
		push	dx
		push	ax
		push	cs
		call	near ptr sub_204AE
		add	sp, 0Eh
		push	word ptr dword_454AA+2
		push	word ptr dword_454AA
		call	sub_3147C
		add	sp, 4
		retf
sub_20438	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_204AE	proc far		; CODE XREF: sub_1A0F4+184EP
					; sub_1A0F4+1AFAP ...

var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_8		= word ptr -8
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	di
		push	si
		mov	bx, [bp+arg_8]
		mov	ax, [bp+arg_4]
		cmp	[bx+8],	ax
		jnz	short loc_204C4
		jmp	loc_2064C
; ---------------------------------------------------------------------------

loc_204C4:				; CODE XREF: sub_204AE+11j
		sar	ax, 1
		push	ax
		call	sub_326DE
		add	sp, 2
		mov	[bp+var_C], ax
		mov	ax, [bp+arg_4]
		sar	ax, 1
		push	ax
		call	sub_3272C
		add	sp, 2
		mov	[bp+var_2], ax
		sub	si, si

loc_204E5:				; CODE XREF: sub_204AE+E1j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_10], ax
		push	[bp+var_2]
		mov	bx, [bp+arg_A]
		mov	ax, si
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	bx, ax
		push	word ptr [bx]
		call	sub_30044
		add	sp, 4
		push	[bp+var_C]
		mov	bx, [bp+arg_A]
		add	bx, [bp+var_10]
		push	word ptr [bx+4]
		mov	[bp+var_14], ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_C]
		mov	cx, [bx]
		add	cx, ax
		add	cx, [bp+var_14]
		les	bx, [bp+arg_0]
		add	bx, [bp+var_10]
		mov	es:[bx], cx
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_12], ax
		push	[bp+var_2]
		mov	bx, [bp+arg_A]
		mov	ax, si
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	bx, ax
		push	word ptr [bx+4]
		call	sub_30044
		add	sp, 4
		push	[bp+var_C]
		mov	bx, [bp+arg_A]
		add	bx, [bp+var_12]
		push	word ptr [bx]
		mov	[bp+var_14], ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_C]
		mov	cx, [bx+4]
		add	cx, ax
		add	cx, [bp+var_14]
		les	bx, [bp+arg_0]
		add	bx, [bp+var_12]
		mov	es:[bx+4], cx
		inc	si
		cmp	si, 6
		jge	short loc_20592
		jmp	loc_204E5
; ---------------------------------------------------------------------------

loc_20592:				; CODE XREF: sub_204AE+DFj
		mov	si, 6

loc_20595:				; CODE XREF: sub_204AE+192j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		push	[bp+var_2]
		mov	bx, [bp+arg_A]
		mov	ax, si
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	bx, ax
		push	word ptr [bx]
		call	sub_30044
		add	sp, 4
		push	[bp+var_C]
		mov	bx, [bp+arg_A]
		add	bx, [bp+var_14]
		push	word ptr [bx+4]
		mov	[bp+var_10], ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_C]
		mov	cx, [bx+6]
		add	cx, ax
		add	cx, [bp+var_10]
		les	bx, [bp+arg_0]
		add	bx, [bp+var_14]
		mov	es:[bx], cx
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_12], ax
		push	[bp+var_2]
		mov	bx, [bp+arg_A]
		mov	ax, si
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	bx, ax
		push	word ptr [bx+4]
		call	sub_30044
		add	sp, 4
		push	[bp+var_C]
		mov	bx, [bp+arg_A]
		add	bx, [bp+var_12]
		push	word ptr [bx]
		mov	[bp+var_10], ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_C]
		mov	cx, [bx+0Ah]
		add	cx, ax
		add	cx, [bp+var_10]
		les	bx, [bp+arg_0]
		add	bx, [bp+var_12]
		mov	es:[bx+4], cx
		inc	si
		cmp	si, 0Ch
		jge	short loc_20643
		jmp	loc_20595
; ---------------------------------------------------------------------------

loc_20643:				; CODE XREF: sub_204AE+190j
		mov	bx, [bp+arg_8]
		mov	ax, [bp+arg_4]
		mov	[bx+8],	ax

loc_2064C:				; CODE XREF: sub_204AE+13j
		sub	di, di
		jmp	short loc_20687
; ---------------------------------------------------------------------------

loc_20650:				; CODE XREF: sub_204AE+1C8j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+arg_A]
		add	bx, ax
		mov	ax, [bx+2]
		sub	ax, [bp+var_8]
		les	bx, [bp+arg_0]
		add	bx, [bp+var_14]
		mov	es:[bx+2], ax
		inc	si

loc_20673:				; CODE XREF: sub_204AE+21Dj
		cmp	[bp+var_4], si
		jg	short loc_20650
		mov	bx, [bp+arg_8]
		mov	ax, di
		shl	ax, 1
		add	bx, ax
		mov	ax, [bp+var_8]
		mov	[bx], ax

loc_20686:				; CODE XREF: sub_204AE+205j
		inc	di

loc_20687:				; CODE XREF: sub_204AE+1A0j
		cmp	di, 4
		jge	short loc_206CE
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	bx, [bp+arg_6]
		add	bx, ax
		mov	ax, [bx]
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	cx, 6
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_8], ax
		mov	bx, [bp+arg_8]
		add	bx, [bp+var_14]
		cmp	[bx], ax
		jz	short loc_20686
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_E], ax
		add	ax, 6
		mov	[bp+var_4], ax
		mov	si, [bp+var_E]
		jmp	short loc_20673
; ---------------------------------------------------------------------------
		align 2

loc_206CE:				; CODE XREF: sub_204AE+1DCj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_204AE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_206D4	proc far		; CODE XREF: _main+36DP sub_110D0+4AAP ...

var_AF0		= dword	ptr -0AF0h
var_AEC		= word ptr -0AECh
var_AEA		= word ptr -0AEAh
var_AE8		= byte ptr -0AE8h
var_AE6		= byte ptr -0AE6h
var_AE4		= byte ptr -0AE4h
var_AE2		= word ptr -0AE2h
var_AE0		= word ptr -0AE0h
var_ADE		= word ptr -0ADEh
var_ADC		= word ptr -0ADCh
var_ADA		= word ptr -0ADAh
var_AD8		= word ptr -0AD8h
var_AD6		= word ptr -0AD6h
var_AD4		= byte ptr -0AD4h
var_74E		= byte ptr -74Eh
var_74C		= byte ptr -74Ch
var_74A		= word ptr -74Ah
var_748		= word ptr -748h
var_746		= byte ptr -746h
var_744		= byte ptr -744h
var_742		= byte ptr -742h
var_740		= byte ptr -740h
var_73E		= byte ptr -73Eh
var_73A		= byte ptr -73Ah
var_738		= byte ptr -738h
var_3B0		= byte ptr -3B0h
var_3AE		= word ptr -3AEh
var_3AC		= word ptr -3ACh
var_3AA		= byte ptr -3AAh
var_3A8		= byte ptr -3A8h
var_3A6		= byte ptr -3A6h
var_3A4		= byte ptr -3A4h
var_3A2		= word ptr -3A2h
var_3A0		= dword	ptr -3A0h
var_39C		= word ptr -39Ch
var_39A		= byte ptr -39Ah
var_398		= byte ptr -398h
var_12		= byte ptr -12h
var_10		= byte ptr -10h
var_E		= byte ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= byte ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0AF0h
		push	di
		push	si
		mov	ax, 380h
		cwd
		push	dx
		push	ax
		mov	ax, 2FA8h
		push	ax
		call	sub_3A460
		add	sp, 6
		mov	[bp+var_AE2], ax
		mov	[bp+var_AE0], dx
		or	ax, dx
		jnz	short loc_20704
		mov	ax, 2
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_20704:				; CODE XREF: sub_206D4+25j
		mov	ax, [bp+var_AE2]
		mov	dx, [bp+var_AE0]
		mov	[bp+var_74A], ax
		mov	[bp+var_748], dx
		mov	[bp+var_3A6], 0
		mov	[bp+var_4], 0
		mov	word_45DD0, 0
		sub	si, si

loc_20725:				; CODE XREF: sub_206D4+5Ej
		les	bx, dword_45E56
		mov	byte ptr es:[bx+si], 0FFh
		inc	si
		cmp	si, 385h
		jl	short loc_20725
		mov	[bp+var_73A], 0
		jmp	short loc_207A4
; ---------------------------------------------------------------------------
		align 2

loc_2073C:				; CODE XREF: sub_206D4+AEj
					; sub_206D4+B2j
		mov	bl, [bp+var_74E]
		sub	bh, bh
		mov	al, [bx+2FCEh]
		mov	[bp+var_12], al
		inc	[bp+var_3A4]

loc_2074D:				; CODE XREF: sub_206D4+E0j
		cmp	[bp+var_3A4], 1Eh
		jge	short loc_207A0
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_74E], al
		mov	bl, al
		sub	bh, bh
		mov	al, [bp+var_12]
		cmp	[bx+2FBAh], al
		jz	short loc_2073C
		cmp	al, 63h	; 'c'
		jz	short loc_2073C

loc_20788:				; CODE XREF: sub_206D4+136j
		mov	[bp+var_3B0], 0Bh

loc_2078D:				; CODE XREF: sub_206D4+16Aj
					; sub_206D4+29Ej ...
		cmp	[bp+var_3A4], 0FFh
		jz	short loc_20797
		jmp	loc_2177A
; ---------------------------------------------------------------------------

loc_20797:				; CODE XREF: sub_206D4+BEj
		mov	[bp+var_3A4], 0
		jmp	loc_21786
; ---------------------------------------------------------------------------
		align 2

loc_207A0:				; CODE XREF: sub_206D4+7Ej
		inc	[bp+var_73A]

loc_207A4:				; CODE XREF: sub_206D4+65j
		cmp	[bp+var_73A], 1Eh
		jge	short loc_207B6
		mov	[bp+var_12], 63h ; 'c'
		mov	[bp+var_3A4], 0
		jmp	short loc_2074D
; ---------------------------------------------------------------------------

loc_207B6:				; CODE XREF: sub_206D4+D5j
		mov	[bp+var_3A4], 0
		jmp	short loc_20812
; ---------------------------------------------------------------------------
		align 2

loc_207BE:				; CODE XREF: sub_206D4+130j
					; sub_206D4+134j
		mov	bl, [bp+var_74E]
		sub	bh, bh
		mov	al, [bx+2FF6h]
		mov	[bp+var_12], al
		inc	[bp+var_73A]

loc_207CF:				; CODE XREF: sub_206D4+14Ej
		cmp	[bp+var_73A], 1Eh
		jge	short loc_2080E
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_74E], al
		mov	bl, al
		sub	bh, bh
		mov	al, [bp+var_12]
		cmp	[bx+2FE2h], al
		jz	short loc_207BE
		cmp	al, 63h	; 'c'
		jz	short loc_207BE
		jmp	loc_20788
; ---------------------------------------------------------------------------
		align 2

loc_2080E:				; CODE XREF: sub_206D4+100j
		inc	[bp+var_3A4]

loc_20812:				; CODE XREF: sub_206D4+E7j
		cmp	[bp+var_3A4], 1Eh
		jge	short loc_20824
		mov	[bp+var_12], 63h ; 'c'
		mov	[bp+var_73A], 0
		jmp	short loc_207CF
; ---------------------------------------------------------------------------

loc_20824:				; CODE XREF: sub_206D4+143j
		mov	[bp+var_73A], 0
		jmp	loc_20956
; ---------------------------------------------------------------------------

loc_2082C:				; CODE XREF: sub_206D4+24Fj
					; sub_206D4+25Cj ...
		mov	word_45516, 0

loc_20832:				; CODE XREF: sub_206D4+174j
					; sub_206D4+17Cj ...
		cmp	[bp+var_3A6], 0
		jz	short loc_2087A
		mov	[bp+var_3B0], 3
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_20842:				; CODE XREF: sub_206D4+189j
					; sub_206D4+198j ...
		mov	word_45516, 200h
		jmp	short loc_20832
; ---------------------------------------------------------------------------

loc_2084A:				; CODE XREF: sub_206D4+18Ej
					; sub_206D4+19Dj ...
		mov	word_45516, 100h
		jmp	short loc_20832
; ---------------------------------------------------------------------------

loc_20852:				; CODE XREF: sub_206D4+193j
					; sub_206D4:loc_20876j
		mov	word_45516, 300h
		jmp	short loc_20832
; ---------------------------------------------------------------------------

loc_2085A:				; CODE XREF: sub_206D4+254j
		cmp	ax, 94h	; 'î'
		jz	short loc_20842
		cmp	ax, 95h	; 'ï'
		jz	short loc_2084A
		cmp	ax, 96h	; 'ñ'
		jz	short loc_20852
		cmp	ax, 0B3h ; '≥'
		jz	short loc_20842
		cmp	ax, 0B4h ; '¥'
		jz	short loc_2084A
		cmp	ax, 0B5h ; 'µ'

loc_20876:				; CODE XREF: sub_206D4+27Aj
		jz	short loc_20852
		jmp	short loc_208BB
; ---------------------------------------------------------------------------

loc_2087A:				; CODE XREF: sub_206D4+163j
		mov	al, [bp+var_3A4]
		mov	byte_4499A, al
		mov	al, [bp+var_73A]
		mov	byte_4499E, al
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_74E], al
		cmp	al, 6
		jnz	short loc_208B2
		mov	byte_4499B, 1
		jmp	short loc_208B7
; ---------------------------------------------------------------------------

loc_208B2:				; CODE XREF: sub_206D4+1D5j
		mov	byte_4499B, 0

loc_208B7:				; CODE XREF: sub_206D4+1DCj
		inc	[bp+var_3A6]

loc_208BB:				; CODE XREF: sub_206D4+1A4j
		inc	[bp+var_3A4]

loc_208BF:				; CODE XREF: sub_206D4+28Ej
		cmp	[bp+var_3A4], 1Eh
		jl	short loc_208C9
		jmp	loc_20952
; ---------------------------------------------------------------------------

loc_208C9:				; CODE XREF: sub_206D4+1F0j
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_E], al
		cmp	al, 0FDh ; '˝'
		jb	short loc_208F3
		mov	[bp+var_E], 0

loc_208F3:				; CODE XREF: sub_206D4+219j
		cmp	[bp+var_E], 0B6h ; '∂'
		jb	short loc_20919
		mov	[bp+var_E], 4
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	byte ptr es:[bx], 4

loc_20919:				; CODE XREF: sub_206D4+223j
		mov	al, [bp+var_E]
		sub	ah, ah
		cmp	ax, 93h	; 'ì'
		jnz	short loc_20926
		jmp	loc_2082C
; ---------------------------------------------------------------------------

loc_20926:				; CODE XREF: sub_206D4+24Dj
		jbe	short loc_2092B
		jmp	loc_2085A
; ---------------------------------------------------------------------------

loc_2092B:				; CODE XREF: sub_206D4:loc_20926j
		cmp	ax, 1
		jnz	short loc_20933
		jmp	loc_2082C
; ---------------------------------------------------------------------------

loc_20933:				; CODE XREF: sub_206D4+25Aj
		cmp	ax, 86h	; 'Ü'
		jnz	short loc_2093B
		jmp	loc_2082C
; ---------------------------------------------------------------------------

loc_2093B:				; CODE XREF: sub_206D4+262j
		cmp	ax, 87h	; 'á'
		jnz	short loc_20943
		jmp	loc_20842
; ---------------------------------------------------------------------------

loc_20943:				; CODE XREF: sub_206D4+26Aj
		cmp	ax, 88h	; 'à'
		jnz	short loc_2094B
		jmp	loc_2084A
; ---------------------------------------------------------------------------

loc_2094B:				; CODE XREF: sub_206D4+272j
		cmp	ax, 89h	; 'â'
		jmp	loc_20876
; ---------------------------------------------------------------------------
		align 2

loc_20952:				; CODE XREF: sub_206D4+1F2j
		inc	[bp+var_73A]

loc_20956:				; CODE XREF: sub_206D4+155j
		cmp	[bp+var_73A], 1Eh
		jge	short loc_20966
		mov	[bp+var_3A4], 0
		jmp	loc_208BF
; ---------------------------------------------------------------------------
		align 2

loc_20966:				; CODE XREF: sub_206D4+287j
		cmp	[bp+var_3A6], 0
		jnz	short loc_20976
		mov	[bp+var_3B0], 1
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_20976:				; CODE XREF: sub_206D4+297j
		mov	word_45DD0, 0
		mov	[bp+var_746], 0
		mov	byte_45635, 0
		mov	byte_4616E, 0
		mov	[bp+var_3A8], 0
		mov	[bp+var_AE8], 0
		sub	si, si

loc_20997:				; CODE XREF: sub_206D4+2F5j
		mov	[bp+si+var_738], 0
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_AEA], ax
		mov	bx, ax
		add	bx, word ptr dword_42D22
		mov	es, word ptr dword_42D22+2
		mov	word ptr es:[bx], 0FFFFh
		mov	bx, [bp+var_AEA]
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2
		mov	word ptr es:[bx], 0FFFFh
		inc	si
		cmp	si, 385h
		jl	short loc_20997
		mov	al, byte_4499A
		mov	[bp+var_3A4], al
		mov	al, byte_4499E
		mov	[bp+var_73A], al
		mov	ax, word_45516
		mov	[bp+var_8], ax
		mov	[bp+var_12], 0
		mov	[bp+var_3AC], 0FFFFh

loc_209E9:				; CODE XREF: sub_206D4+3DAj
					; sub_206D4+7F5j ...
		mov	[bp+var_2], 0
		cmp	[bp+var_3A4], 0
		jl	short loc_20A0C
		cmp	[bp+var_73A], 0
		jl	short loc_20A0C
		cmp	[bp+var_3A4], 1Dh
		jg	short loc_20A0C
		cmp	[bp+var_73A], 1Dh
		jg	short loc_20A0C
		jmp	loc_20AC2
; ---------------------------------------------------------------------------

loc_20A0C:				; CODE XREF: sub_206D4+31Ej
					; sub_206D4+325j ...
		cmp	[bp+var_746], 0
		jnz	short loc_20A16
		jmp	loc_20F20
; ---------------------------------------------------------------------------

loc_20A16:				; CODE XREF: sub_206D4+33Dj
		dec	[bp+var_746]
		mov	al, [bp+var_746]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_74A]
		mov	dx, [bp+var_748]
		mov	word ptr [bp+var_3A0], ax
		mov	word ptr [bp+var_3A0+2], dx
		les	bx, [bp+var_3A0]
		mov	al, es:[bx]
		mov	[bp+var_3A4], al
		mov	al, es:[bx+1]
		mov	[bp+var_73A], al
		mov	al, es:[bx+2]
		mov	[bp+var_E], al
		mov	al, es:[bx+3]
		mov	[bp+var_742], al
		mov	al, es:[bx+4]
		mov	[bp+var_73E], al
		mov	al, es:[bx+0Bh]
		mov	[bp+var_12], al
		mov	ax, es:[bx+0Ch]
		mov	[bp+var_3AC], ax
		mov	al, es:[bx+5]
		mov	[bp+var_3A8], al
		mov	al, es:[bx+6]
		mov	[bp+var_10], al
		mov	al, es:[bx+7]
		mov	[bp+var_39A], al
		mov	al, es:[bx+8]
		mov	[bp+var_AE6], al
		mov	al, es:[bx+9]
		mov	[bp+var_3AA], al
		mov	al, es:[bx+0Ah]
		mov	[bp+var_740], al
		mov	[bp+var_2], 1

loc_20AA8:				; CODE XREF: sub_206D4+7B4j
		cmp	[bp+var_2], 0
		jnz	short loc_20AB1
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_20AB1:				; CODE XREF: sub_206D4+3D8j
		cmp	[bp+var_4], 1
		ja	short loc_20ABA
		jmp	loc_20F6A
; ---------------------------------------------------------------------------

loc_20ABA:				; CODE XREF: sub_206D4+3E1j
		mov	[bp+var_3B0], 0Ah
		jmp	loc_2078D
; ---------------------------------------------------------------------------

loc_20AC2:				; CODE XREF: sub_206D4+335j
		mov	al, [bp+var_3A4]
		cbw
		mov	[bp+var_AEA], ax
		mov	al, [bp+var_73A]
		cbw
		shl	ax, 1
		mov	[bp+var_AEC], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, [bp+var_AEA]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_E], al
		mov	bx, [bp+var_AEC]
		mov	bx, [bx-73C4h]
		add	bx, [bp+var_AEA]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_74E], al
		cmp	[bp+var_E], 0
		jz	short loc_20B30
		or	al, al
		jz	short loc_20B30
		cmp	al, 7
		jb	short loc_20B30
		cmp	al, 0Bh
		jnb	short loc_20B30
		mov	al, [bp+var_E]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_74E]
		push	ax
		push	cs
		call	near ptr sub_21A5A
		add	sp, 4
		mov	[bp+var_E], al

loc_20B30:				; CODE XREF: sub_206D4+439j
					; sub_206D4+43Dj ...
		cmp	[bp+var_E], 0FDh ; '˝'
		jnb	short loc_20B39
		jmp	loc_20C12
; ---------------------------------------------------------------------------

loc_20B39:				; CODE XREF: sub_206D4+460j
		mov	al, [bp+var_E]
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jz	short loc_20B76
		cmp	ax, 0FEh ; '˛'
		jz	short loc_20BA2
		cmp	ax, 0FFh
		jnz	short loc_20B50
		jmp	loc_20BD4
; ---------------------------------------------------------------------------

loc_20B50:				; CODE XREF: sub_206D4+477j
					; sub_206D4+4C0j ...
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_E], al
		jmp	loc_20C2E
; ---------------------------------------------------------------------------
		align 2

loc_20B76:				; CODE XREF: sub_206D4+46Dj
		dec	[bp+var_3A4]
		dec	[bp+var_73A]
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_20B96
		cmp	ax, 100h
		jz	short loc_20C02
		cmp	ax, 200h
		jz	short loc_20C02
		cmp	ax, 300h
		jz	short loc_20B9C
		jmp	short loc_20B50
; ---------------------------------------------------------------------------

loc_20B96:				; CODE XREF: sub_206D4+4AFj
		mov	[bp+var_6], 0Ch
		jmp	short loc_20B50
; ---------------------------------------------------------------------------

loc_20B9C:				; CODE XREF: sub_206D4+4BEj
		mov	[bp+var_6], 9
		jmp	short loc_20B50
; ---------------------------------------------------------------------------

loc_20BA2:				; CODE XREF: sub_206D4+472j
		dec	[bp+var_73A]
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_20BBE
		cmp	ax, 100h
		jz	short loc_20BC4
		cmp	ax, 200h
		jz	short loc_20C02
		cmp	ax, 300h
		jz	short loc_20BCC
		jmp	short loc_20B50
; ---------------------------------------------------------------------------

loc_20BBE:				; CODE XREF: sub_206D4+4D7j
		mov	[bp+var_6], 0Bh
		jmp	short loc_20B50
; ---------------------------------------------------------------------------

loc_20BC4:				; CODE XREF: sub_206D4+4DCj
		mov	[bp+var_6], 6
		jmp	short loc_20B50
; ---------------------------------------------------------------------------
		align 4

loc_20BCC:				; CODE XREF: sub_206D4+4E6j
		mov	[bp+var_6], 7
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20BD4:				; CODE XREF: sub_206D4+479j
		dec	[bp+var_3A4]
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_20BF2
		cmp	ax, 100h
		jz	short loc_20C02
		cmp	ax, 200h
		jz	short loc_20BFA
		cmp	ax, 300h
		jz	short loc_20C0A
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20BF2:				; CODE XREF: sub_206D4+509j
		mov	[bp+var_6], 0Ah
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20BFA:				; CODE XREF: sub_206D4+513j
		mov	[bp+var_6], 5
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20C02:				; CODE XREF: sub_206D4+4B4j
					; sub_206D4+4B9j ...
		mov	[bp+var_6], 0
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20C0A:				; CODE XREF: sub_206D4+518j
		mov	[bp+var_6], 8
		jmp	loc_20B50
; ---------------------------------------------------------------------------
		align 2

loc_20C12:				; CODE XREF: sub_206D4+462j
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_20C2A
		cmp	ax, 100h
		jz	short loc_20C48
		cmp	ax, 200h
		jz	short loc_20C42
		cmp	ax, 300h
		jz	short loc_20C4E
		jmp	short loc_20C2E
; ---------------------------------------------------------------------------

loc_20C2A:				; CODE XREF: sub_206D4+543j
		mov	[bp+var_6], 2

loc_20C2E:				; CODE XREF: sub_206D4+49Ej
					; sub_206D4+554j ...
		cmp	[bp+var_4], 0
		jnz	short loc_20C54
		cmp	[bp+var_6], 0
		jnz	short loc_20C54
		mov	[bp+var_3B0], 2
		jmp	loc_2078D
; ---------------------------------------------------------------------------

loc_20C42:				; CODE XREF: sub_206D4+54Dj
		mov	[bp+var_6], 1
		jmp	short loc_20C2E
; ---------------------------------------------------------------------------

loc_20C48:				; CODE XREF: sub_206D4+548j
		mov	[bp+var_6], 4
		jmp	short loc_20C2E
; ---------------------------------------------------------------------------

loc_20C4E:				; CODE XREF: sub_206D4+552j
		mov	[bp+var_6], 3
		jmp	short loc_20C2E
; ---------------------------------------------------------------------------

loc_20C54:				; CODE XREF: sub_206D4+55Ej
					; sub_206D4+564j
		mov	[bp+var_2], 0
		mov	al, [bp+var_E]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_39C], ax
		or	ax, ax
		jnz	short loc_20C78
		jmp	loc_20E82
; ---------------------------------------------------------------------------

loc_20C78:				; CODE XREF: sub_206D4+59Fj
		sub	si, si
		jmp	loc_20E3A
; ---------------------------------------------------------------------------
		align 2

loc_20C7E:				; CODE XREF: sub_206D4+7A2j
		mov	[bp+var_AE4], 0
		jmp	short loc_20CA2
; ---------------------------------------------------------------------------
		align 2

loc_20C86:				; CODE XREF: sub_206D4+797j
		mov	bx, [bp+var_3AE]
		mov	al, [bp+var_6]
		cmp	[bx+2],	al
		jnz	short loc_20CA2
		mov	al, [bp+var_12]
		cmp	[bx+4],	al
		jz	short loc_20C9D
		jmp	loc_20E79
; ---------------------------------------------------------------------------

loc_20C9D:				; CODE XREF: sub_206D4+5C4j
		mov	[bp+var_AE4], 1

loc_20CA2:				; CODE XREF: sub_206D4+5AFj
					; sub_206D4+5BCj
		cmp	[bp+var_AE4], 0
		jge	short loc_20CAC
		jmp	loc_20D48
; ---------------------------------------------------------------------------

loc_20CAC:				; CODE XREF: sub_206D4+5D3j
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, bp
		cmp	byte ptr [bx-738h], 0
		jz	short loc_20D48
		sub	di, di
		jmp	short loc_20D0E
; ---------------------------------------------------------------------------
		align 2

loc_20CCE:				; CODE XREF: sub_206D4+66Aj
		mov	[bp+var_AE4], 0FFh
		mov	ax, [bp+var_3AC]
		shl	ax, 1
		add	ax, word ptr dword_42D22
		mov	dx, word ptr dword_42D22+2
		mov	word ptr [bp+var_AF0], ax
		mov	word ptr [bp+var_AF0+2], dx
		les	bx, [bp+var_AF0]
		cmp	word ptr es:[bx], 0FFFFh
		jz	short loc_20D01
		mov	bx, [bp+var_3AC]
		shl	bx, 1
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2

loc_20D01:				; CODE XREF: sub_206D4+61Dj
		mov	es:[bx], di
		or	di, di
		jnz	short loc_20D0D
		mov	[bp+var_AE8], 1

loc_20D0D:				; CODE XREF: sub_206D4+632j
					; sub_206D4+64Bj ...
		inc	di

loc_20D0E:				; CODE XREF: sub_206D4+5F7j
		cmp	word_45DD0, di
		jle	short loc_20D48
		les	bx, dword_4563C
		mov	al, [bp+var_3A4]
		cmp	es:[bx+di], al
		jnz	short loc_20D0D
		les	bx, dword_459DA
		mov	al, [bp+var_73A]
		cmp	es:[bx+di], al
		jnz	short loc_20D0D
		mov	ax, si
		cmp	[bp+di+var_AD4], al
		jnz	short loc_20D0D
		mov	al, [bp+var_AE4]
		cmp	[bp+di+var_398], al
		jz	short loc_20CCE
		mov	[bp+var_3B0], 5
		jmp	loc_2078D
; ---------------------------------------------------------------------------

loc_20D48:				; CODE XREF: sub_206D4+5D5j
					; sub_206D4+5F3j ...
		cmp	[bp+var_AE4], 0
		jge	short loc_20D52
		jmp	loc_20E39
; ---------------------------------------------------------------------------

loc_20D52:				; CODE XREF: sub_206D4+679j
		cmp	[bp+var_2], 0
		jnz	short loc_20D6A
		mov	ax, si
		mov	[bp+var_742], al
		mov	al, [bp+var_AE4]
		mov	[bp+var_73E], al
		jmp	loc_20E36
; ---------------------------------------------------------------------------
		align 2

loc_20D6A:				; CODE XREF: sub_206D4+682j
		cmp	[bp+var_746], 40h ; '@'
		jnz	short loc_20D7A
		mov	[bp+var_3B0], 8
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_20D7A:				; CODE XREF: sub_206D4+69Bj
		mov	al, [bp+var_746]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_74A]
		mov	dx, [bp+var_748]
		mov	word ptr [bp+var_3A0], ax
		mov	word ptr [bp+var_3A0+2], dx
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_3A4]
		mov	es:[bx], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_73A]
		mov	es:[bx+1], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_E]
		mov	es:[bx+2], al
		les	bx, [bp+var_3A0]
		mov	ax, si
		mov	es:[bx+3], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_AE4]
		mov	es:[bx+4], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_12]
		mov	es:[bx+0Bh], al
		les	bx, [bp+var_3A0]
		mov	ax, [bp+var_3AC]
		mov	es:[bx+0Ch], ax
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_3A8]
		mov	es:[bx+5], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_10]
		mov	es:[bx+6], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_39A]
		mov	es:[bx+7], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_AE6]
		mov	es:[bx+8], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_3AA]
		mov	es:[bx+9], al
		les	bx, [bp+var_3A0]
		mov	al, [bp+var_740]
		mov	es:[bx+0Ah], al
		inc	[bp+var_746]

loc_20E36:				; CODE XREF: sub_206D4+692j
		inc	[bp+var_2]

loc_20E39:				; CODE XREF: sub_206D4+67Bj
		inc	si

loc_20E3A:				; CODE XREF: sub_206D4+5A6j
		mov	bx, [bp+var_39C]
		mov	al, [bx]
		sub	ah, ah
		cmp	ax, si
		jbe	short loc_20E82
		mov	[bp+var_AE4], 0FFh
		mov	ax, bx
		mov	cx, si
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		shl	cx, 1
		add	cx, dx
		shl	cx, 1
		add	ax, cx
		mov	[bp+var_3AE], ax
		mov	bx, ax
		mov	al, [bp+var_6]
		cmp	[bx+1],	al
		jz	short loc_20E6E
		jmp	loc_20C86
; ---------------------------------------------------------------------------

loc_20E6E:				; CODE XREF: sub_206D4+795j
		mov	al, [bp+var_12]
		cmp	[bx+3],	al
		jnz	short loc_20E79
		jmp	loc_20C7E
; ---------------------------------------------------------------------------

loc_20E79:				; CODE XREF: sub_206D4+5C6j
					; sub_206D4+7A0j
		mov	[bp+var_3B0], 4
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_20E82:				; CODE XREF: sub_206D4+5A1j
					; sub_206D4+770j
		cmp	[bp+var_2], 0
		jz	short loc_20E8B
		jmp	loc_20AA8
; ---------------------------------------------------------------------------

loc_20E8B:				; CODE XREF: sub_206D4+7B2j
		cmp	[bp+var_12], 1
		jz	short loc_20E94
		jmp	loc_20A0C
; ---------------------------------------------------------------------------

loc_20E94:				; CODE XREF: sub_206D4+7BBj
		cmp	[bp+var_4], 2
		jb	short loc_20E9D
		jmp	loc_20A0C
; ---------------------------------------------------------------------------

loc_20E9D:				; CODE XREF: sub_206D4+7C4j
		cmp	[bp+var_3A8], 2
		jnb	short loc_20EAC
		mov	[bp+var_3B0], 9
		jmp	loc_2078D
; ---------------------------------------------------------------------------

loc_20EAC:				; CODE XREF: sub_206D4+7CEj
		inc	[bp+var_3A8]
		inc	[bp+var_4]
		mov	ax, [bp+var_8]
		or	ax, ax
		jz	short loc_20ECC
		cmp	ax, 100h
		jz	short loc_20EF6
		cmp	ax, 200h
		jz	short loc_20EE4
		cmp	ax, 300h
		jz	short loc_20F08
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_20ECC:				; CODE XREF: sub_206D4+7E4j
		mov	al, [bp+var_10]
		mov	[bp+var_3A4], al
		mov	al, [bp+var_39A]
		sub	al, [bp+var_4]
		dec	al

loc_20EDC:				; CODE XREF: sub_206D4+820j
		mov	[bp+var_73A], al
		jmp	loc_209E9
; ---------------------------------------------------------------------------
		align 2

loc_20EE4:				; CODE XREF: sub_206D4+7EEj
		mov	al, [bp+var_10]
		mov	[bp+var_3A4], al
		mov	al, [bp+var_39A]
		add	al, [bp+var_4]
		inc	al
		jmp	short loc_20EDC
; ---------------------------------------------------------------------------

loc_20EF6:				; CODE XREF: sub_206D4+7E9j
		mov	al, [bp+var_39A]
		mov	[bp+var_73A], al
		mov	al, [bp+var_10]
		add	al, [bp+var_4]
		inc	al
		jmp	short loc_20F18
; ---------------------------------------------------------------------------

loc_20F08:				; CODE XREF: sub_206D4+7F3j
		mov	al, [bp+var_39A]
		mov	[bp+var_73A], al
		mov	al, [bp+var_10]
		sub	al, [bp+var_4]
		dec	al

loc_20F18:				; CODE XREF: sub_206D4+832j
		mov	[bp+var_3A4], al
		jmp	loc_209E9
; ---------------------------------------------------------------------------
		align 2

loc_20F20:				; CODE XREF: sub_206D4+33Fj
		cmp	[bp+var_AE8], 0
		jnz	short loc_20F30
		mov	[bp+var_3B0], 7
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_20F30:				; CODE XREF: sub_206D4+851j
		mov	al, byte_4499A
		mov	byte_45D90, al
		mov	al, byte_4499E
		mov	byte_45E16, al
		mov	ax, word_45DD0
		cwd
		mov	cx, 3
		idiv	cx
		mov	si, ax
		cmp	si, 40h	; '@'
		jle	short loc_20F4F
		mov	si, 40h	; '@'

loc_20F4F:				; CODE XREF: sub_206D4+876j
		mov	ax, si
		mov	byte_4616E, al
		sub	si, si

loc_20F56:				; CODE XREF: sub_206D4+88Cj
		mov	[bp+si+var_AD4], 0
		inc	si
		cmp	si, 385h
		jl	short loc_20F56
		sub	di, di
		sub	si, si
		jmp	loc_21688
; ---------------------------------------------------------------------------
		align 2

loc_20F6A:				; CODE XREF: sub_206D4+3E3j
		mov	[bp+var_4], 0
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, bp
		mov	byte ptr [bx-738h], 1
		mov	bx, word_45DD0
		add	bx, bp
		mov	al, [bp+var_742]
		mov	[bx-0AD4h], al
		mov	bx, word_45DD0
		add	bx, bp
		mov	al, [bp+var_73E]
		mov	[bx-398h], al
		cmp	[bp+var_3AC], 0FFFFh
		jz	short loc_20FE0
		mov	ax, [bp+var_3AC]
		shl	ax, 1
		add	ax, word ptr dword_42D22
		mov	dx, word ptr dword_42D22+2
		mov	word ptr [bp+var_AF0], ax
		mov	word ptr [bp+var_AF0+2], dx
		les	bx, [bp+var_AF0]
		cmp	word ptr es:[bx], 0FFFFh
		jz	short loc_20FDA
		mov	bx, [bp+var_3AC]
		shl	bx, 1
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2

loc_20FDA:				; CODE XREF: sub_206D4+8F6j
		mov	ax, word_45DD0
		mov	es:[bx], ax

loc_20FE0:				; CODE XREF: sub_206D4+8D6j
		mov	ax, word_45DD0
		mov	[bp+var_3AC], ax
		mov	bx, ax
		add	bx, word ptr dword_4563C
		mov	es, word ptr dword_4563C+2
		mov	al, [bp+var_3A4]
		mov	es:[bx], al
		mov	bx, word_45DD0
		add	bx, word ptr dword_459DA
		mov	es, word ptr dword_459DA+2
		mov	al, [bp+var_73A]
		mov	es:[bx], al
		mov	bx, word_45DD0
		add	bx, word ptr dword_454D6
		mov	es, word ptr dword_454D6+2
		mov	al, [bp+var_73E]
		mov	cl, 4
		shl	al, cl
		add	al, [bp+var_742]
		mov	es:[bx], al
		mov	bx, word_45DD0
		add	bx, word ptr dword_449D4
		mov	es, word ptr dword_449D4+2
		mov	al, [bp+var_E]
		mov	es:[bx], al
		mov	al, [bp+var_E]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_39C], ax
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_39C]
		mov	[bp+var_3AE], ax
		mov	bx, ax
		mov	al, [bx+0Ch]
		mov	[bp+var_74C], al
		or	al, al
		jnz	short loc_21080
		inc	[bp+var_3A8]
		jmp	loc_21367
; ---------------------------------------------------------------------------
		align 2

loc_21080:				; CODE XREF: sub_206D4+9A2j
		cmp	[bp+var_74C], 0FFh
		jnz	short loc_2108A
		jmp	loc_21362
; ---------------------------------------------------------------------------

loc_2108A:				; CODE XREF: sub_206D4+9B1j
		cmp	[bp+var_3A8], 3
		ja	short loc_21094
		jmp	loc_21362
; ---------------------------------------------------------------------------

loc_21094:				; CODE XREF: sub_206D4+9BBj
		cmp	byte_45635, 30h	; '0'
		jnz	short loc_2109E
		jmp	loc_21362
; ---------------------------------------------------------------------------

loc_2109E:				; CODE XREF: sub_206D4+9C5j
		mov	al, [bp+var_E]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_39C], ax
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_39C]
		mov	[bp+var_3AE], ax
		mov	bx, ax
		mov	al, [bx+0Ch]
		mov	[bp+var_74C], al
		mov	al, [bp+var_AE6]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_39C], ax
		mov	al, [bp+var_3AA]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_39C]
		mov	[bp+var_3AE], ax
		cmp	[bp+var_740], 0
		jz	short loc_21122
		mov	bx, ax
		cmp	word ptr [bx+0Ah], 0
		jz	short loc_21126
		mov	ax, [bx+0Ah]
		jmp	short loc_21129
; ---------------------------------------------------------------------------

loc_21122:				; CODE XREF: sub_206D4+A3Fj
		mov	bx, [bp+var_3AE]

loc_21126:				; CODE XREF: sub_206D4+A47j
		mov	ax, [bx+8]

loc_21129:				; CODE XREF: sub_206D4+A4Cj
		mov	[bp+var_ADE], ax
		mov	[bp+var_ADC], ds
		cmp	[bp+var_740], 0
		jz	short loc_21156
		mov	bx, [bp+var_3AE]
		mov	al, [bx+5]
		sub	ah, ah
		shl	ax, 1
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_ADE]
		mov	dx, ds
		add	ax, 0Ch
		jmp	short loc_21174
; ---------------------------------------------------------------------------

loc_21156:				; CODE XREF: sub_206D4+A62j
		mov	bx, [bp+var_3AE]
		mov	al, [bx+5]
		sub	ah, ah
		shl	ax, 1
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_ADE]
		mov	dx, [bp+var_ADC]
		add	ax, 6

loc_21174:				; CODE XREF: sub_206D4+A80j
		push	si
		push	di
		lea	di, [bp+var_ADA]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		cmp	[bp+var_73E], 0
		jz	short loc_2119C
		mov	al, [bp+var_74C]
		cbw
		mov	bx, ax
		mov	al, [bx+2FB4h]
		jmp	short loc_211A7
; ---------------------------------------------------------------------------
		align 2

loc_2119C:				; CODE XREF: sub_206D4+AB8j
		mov	al, [bp+var_74C]
		cbw
		mov	bx, ax
		mov	al, [bx+2FAEh]

loc_211A7:				; CODE XREF: sub_206D4+AC5j
		mov	[bp+var_74C], al
		mov	bx, [bp+var_3AE]
		mov	ax, [bx+6]
		mov	[bp+var_8], ax
		cmp	ax, 100h
		jz	short loc_21214
		cmp	ax, 200h
		jz	short loc_211FE
		cmp	ax, 300h
		jnz	short loc_211DE
		mov	ax, [bp+var_ADA]
		mov	[bp+var_3A2], ax
		mov	ax, [bp+var_AD6]
		neg	ax
		mov	[bp+var_ADA], ax
		mov	ax, [bp+var_3A2]

loc_211DA:				; CODE XREF: sub_206D4+B56j
		mov	[bp+var_AD6], ax

loc_211DE:				; CODE XREF: sub_206D4+AEEj
					; sub_206D4+B3Ej
		cmp	[bp+var_740], 0
		jz	short loc_2122C
		mov	al, byte_45635
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, word_45DB4
		mov	es, word_45DB6
		mov	ax, [bp+var_8]
		xor	ah, 2
		jmp	short loc_2123F
; ---------------------------------------------------------------------------
		align 2

loc_211FE:				; CODE XREF: sub_206D4+AE9j
		mov	ax, [bp+var_AD6]
		neg	ax
		mov	[bp+var_AD6], ax
		mov	ax, [bp+var_ADA]
		neg	ax
		mov	[bp+var_ADA], ax
		jmp	short loc_211DE
; ---------------------------------------------------------------------------

loc_21214:				; CODE XREF: sub_206D4+AE4j
		mov	ax, [bp+var_ADA]
		mov	[bp+var_3A2], ax
		mov	ax, [bp+var_AD6]
		mov	[bp+var_ADA], ax
		mov	ax, [bp+var_3A2]
		neg	ax
		jmp	short loc_211DA
; ---------------------------------------------------------------------------

loc_2122C:				; CODE XREF: sub_206D4+B0Fj
		mov	al, byte_45635
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, word_45DB4
		mov	es, word_45DB6
		mov	ax, [bp+var_8]

loc_2123F:				; CODE XREF: sub_206D4+B27j
		mov	es:[bx], ax
		mov	al, byte_45635
		cbw
		mov	bx, ax
		add	bx, word_463DC
		mov	es, word_463DE
		mov	al, [bp+var_74C]
		mov	es:[bx], al
		mov	al, [bp+var_39A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_10]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		cmp	byte ptr es:[bx], 6
		jnz	short loc_2127E
		add	[bp+var_AD8], 1C2h

loc_2127E:				; CODE XREF: sub_206D4+BA2j
		mov	al, byte_45635
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	ax, [bp+var_AD8]
		mov	es:[bx+2], ax
		mov	al, [bp+var_AE6]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_212C2
		mov	al, [bp+var_39A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-7E84h]
		jmp	short loc_212CF
; ---------------------------------------------------------------------------

loc_212C2:				; CODE XREF: sub_206D4+BDDj
		mov	al, [bp+var_39A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]

loc_212CF:				; CODE XREF: sub_206D4+BECj
		add	ax, [bp+var_AD6]
		mov	cx, ax
		mov	al, byte_45635
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	es:[bx+4], cx
		mov	al, [bp+var_AE6]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_21314
		mov	al, [bp+var_10]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+7558h]
		jmp	short loc_21320
; ---------------------------------------------------------------------------

loc_21314:				; CODE XREF: sub_206D4+C30j
		mov	al, [bp+var_10]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]

loc_21320:				; CODE XREF: sub_206D4+C3Ej
		add	ax, [bp+var_ADA]
		mov	cx, ax
		mov	al, byte_45635
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, word ptr dword_42A30
		mov	es, word ptr dword_42A30+2
		mov	es:[bx], cx
		mov	al, [bp+var_39A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_10]
		cbw
		add	bx, ax
		add	bx, word ptr dword_45E56
		mov	es, word ptr dword_45E56+2
		mov	al, byte_45635
		mov	es:[bx], al
		inc	byte_45635

loc_21362:				; CODE XREF: sub_206D4+9B3j
					; sub_206D4+9BDj ...
		mov	[bp+var_3A8], 0

loc_21367:				; CODE XREF: sub_206D4+9A8j
		inc	word_45DD0
		cmp	word_45DD0, 385h
		jnz	short loc_2137C
		mov	[bp+var_3B0], 6
		jmp	loc_2078D
; ---------------------------------------------------------------------------
		align 2

loc_2137C:				; CODE XREF: sub_206D4+C9Dj
		mov	al, [bp+var_E]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_39C], ax
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_39C]
		mov	[bp+var_3AE], ax
		cmp	[bp+var_73E], 0
		jz	short loc_213C4
		mov	bx, ax
		mov	al, [bx+1]
		mov	[bp+var_744], al
		mov	al, [bx+3]
		jmp	short loc_213D2
; ---------------------------------------------------------------------------

loc_213C4:				; CODE XREF: sub_206D4+CE0j
		mov	bx, [bp+var_3AE]
		mov	al, [bx+2]
		mov	[bp+var_744], al
		mov	al, [bx+4]

loc_213D2:				; CODE XREF: sub_206D4+CEEj
		mov	[bp+var_12], al
		mov	al, [bp+var_3A4]
		mov	[bp+var_10], al
		mov	al, [bp+var_73A]
		mov	[bp+var_39A], al
		mov	al, [bp+var_73E]
		mov	[bp+var_740], al
		mov	al, [bp+var_742]
		mov	[bp+var_3AA], al
		mov	al, [bp+var_E]
		mov	[bp+var_AE6], al
		mov	al, [bp+var_744]
		sub	ah, ah
		sub	ax, 1
		cmp	ax, 0Bh
		jbe	short loc_2140C
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_2140C:				; CODE XREF: sub_206D4+D33j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_2147C[bx]

loc_21414:				; DATA XREF: sub_206D4:off_2147Co
		dec	[bp+var_73A]

loc_21418:				; CODE XREF: sub_206D4+D54j
		mov	[bp+var_8], 0
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_21420:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DB0o
		dec	[bp+var_73A]
		inc	[bp+var_3A4]
		jmp	short loc_21418
; ---------------------------------------------------------------------------

loc_2142A:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DB2o
		inc	[bp+var_73A]

loc_2142E:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DAEo
		dec	[bp+var_3A4]
		mov	[bp+var_8], 300h
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_2143A:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DBAo
		inc	[bp+var_3A4]

loc_2143E:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DAAo
		inc	[bp+var_73A]

loc_21442:				; CODE XREF: sub_206D4+D7Fj
		mov	[bp+var_8], 200h
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_2144A:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DBEo
		inc	[bp+var_3A4]

loc_2144E:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DBCo
		add	[bp+var_73A], 2
		jmp	short loc_21442
; ---------------------------------------------------------------------------
		align 2

loc_21456:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DACo
		inc	[bp+var_3A4]

loc_2145A:				; CODE XREF: sub_206D4+D96j
					; sub_206D4+D9Dj
		mov	[bp+var_8], 100h
		jmp	loc_209E9
; ---------------------------------------------------------------------------

loc_21462:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DB4o
		inc	[bp+var_3A4]

loc_21466:				; CODE XREF: sub_206D4+DA5j
		inc	[bp+var_73A]
		jmp	short loc_2145A
; ---------------------------------------------------------------------------

loc_2146C:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DB6o
		add	[bp+var_3A4], 2
		jmp	short loc_2145A
; ---------------------------------------------------------------------------
		align 2

loc_21474:				; CODE XREF: sub_206D4+D3Bj
					; DATA XREF: sub_206D4+DB8o
		add	[bp+var_3A4], 2
		jmp	short loc_21466
; ---------------------------------------------------------------------------
		align 2
off_2147C	dw offset loc_21414	; DATA XREF: sub_206D4+D3Br
		dw offset loc_2143E
		dw offset loc_21456
		dw offset loc_2142E
		dw offset loc_21420
		dw offset loc_2142A
		dw offset loc_21462
		dw offset loc_2146C
		dw offset loc_21474
		dw offset loc_2143A
		dw offset loc_2144E
		dw offset loc_2144A
; ---------------------------------------------------------------------------
		jmp	loc_209E9
; ---------------------------------------------------------------------------
		align 2

loc_21498:				; CODE XREF: sub_206D4+1070j
					; sub_206D4+1094j
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, [bp+var_3AE]
		mov	ax, [bx+8]

loc_214B1:				; CODE XREF: sub_206D4:loc_2176Bj
		mov	[bp+var_ADE], ax
		mov	[bp+var_ADC], ds
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, [bp+var_3AE]
		mov	word ptr [bp+var_AF0], ax
		mov	bx, ax
		mov	al, [bx+5]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, [bp+var_ADE]
		mov	dx, ds
		push	si
		push	di
		lea	di, [bp+var_ADA]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		mov	ax, [bx+6]
		mov	[bp+var_8], ax
		cmp	ax, 100h
		jz	short loc_21576
		cmp	ax, 200h
		jz	short loc_21560
		cmp	ax, 300h
		jnz	short loc_2152A
		mov	ax, [bp+var_ADA]
		mov	[bp+var_3A2], ax
		mov	ax, [bp+var_AD6]
		neg	ax
		mov	[bp+var_ADA], ax
		mov	ax, [bp+var_3A2]

loc_21526:				; CODE XREF: sub_206D4+EB8j
		mov	[bp+var_AD6], ax

loc_2152A:				; CODE XREF: sub_206D4+E3Aj
					; sub_206D4+EA0j
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_3A4]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		cmp	byte ptr es:[bx], 6
		jnz	short loc_2158E
		mov	bx, di
		shl	bx, 1
		add	bx, word_454B4
		mov	es, word_454B6
		mov	word ptr es:[bx], 1C2h
		jmp	short loc_2159F
; ---------------------------------------------------------------------------
		align 2

loc_21560:				; CODE XREF: sub_206D4+E35j
		mov	ax, [bp+var_AD6]
		neg	ax
		mov	[bp+var_AD6], ax
		mov	ax, [bp+var_ADA]
		neg	ax
		mov	[bp+var_ADA], ax
		jmp	short loc_2152A
; ---------------------------------------------------------------------------

loc_21576:				; CODE XREF: sub_206D4+E30j
		mov	ax, [bp+var_ADA]
		mov	[bp+var_3A2], ax
		mov	ax, [bp+var_AD6]
		mov	[bp+var_ADA], ax
		mov	ax, [bp+var_3A2]
		neg	ax
		jmp	short loc_21526
; ---------------------------------------------------------------------------

loc_2158E:				; CODE XREF: sub_206D4+E76j
		mov	bx, di
		shl	bx, 1
		add	bx, word_454B4
		mov	es, word_454B6
		mov	word ptr es:[bx], 0

loc_2159F:				; CODE XREF: sub_206D4+E89j
		mov	ax, di
		shl	ax, 1
		mov	word ptr [bp+var_AF0], ax
		mov	bx, ax
		add	bx, word_454D0
		mov	es, word_454D2
		mov	word ptr es:[bx], 0
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_AEC], ax
		mov	bx, word ptr [bp+var_AF0]
		add	bx, word_454B4
		mov	es, word_454B6
		mov	ax, es:[bx]
		add	ax, [bp+var_AD8]
		mov	bx, [bp+var_AEC]
		add	bx, word_449DC
		mov	es, word_449DE
		mov	es:[bx+2], ax
		mov	bx, [bp+var_C]
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_21614
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-7E84h]
		add	ax, [bp+var_AD6]
		mov	bx, [bp+var_AEC]
		jmp	short loc_2162F
; ---------------------------------------------------------------------------

loc_21614:				; CODE XREF: sub_206D4+F27j
		mov	al, [bp+var_73A]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-55EAh]
		add	ax, [bp+var_AD6]
		mov	bx, di
		mov	cx, bx
		shl	bx, 1
		add	bx, cx
		shl	bx, 1

loc_2162F:				; CODE XREF: sub_206D4+F3Ej
		add	bx, word_449DC
		mov	es, word_449DE
		mov	es:[bx+4], ax
		mov	bx, [bp+var_C]
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_21660
		mov	al, [bp+var_3A4]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+7558h]
		jmp	short loc_2166D
; ---------------------------------------------------------------------------

loc_21660:				; CODE XREF: sub_206D4+F7Bj
		mov	al, [bp+var_3A4]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-599Eh]

loc_2166D:				; CODE XREF: sub_206D4+F8Aj
		add	ax, [bp+var_ADA]
		mov	bx, di
		mov	cx, bx
		shl	bx, 1
		add	bx, cx
		shl	bx, 1
		add	bx, word_449DC
		mov	es, word_449DE
		mov	es:[bx], ax
		inc	di

loc_21687:				; CODE XREF: sub_206D4+1016j
		inc	si

loc_21688:				; CODE XREF: sub_206D4+892j
		mov	al, byte_4616E
		cbw
		mov	word ptr [bp+var_AF0], ax
		cmp	ax, si
		jg	short loc_21697
		jmp	loc_2176E
; ---------------------------------------------------------------------------

loc_21697:				; CODE XREF: sub_206D4+FBEj
		mov	ax, word_45DD0
		imul	si
		cwd
		mov	cx, word ptr [bp+var_AF0]
		idiv	cx
		mov	[bp+var_A], ax
		mov	bx, ax
		add	bx, word ptr dword_4563C
		mov	es, word ptr dword_4563C+2
		mov	al, es:[bx]
		mov	[bp+var_3A4], al
		mov	bx, [bp+var_A]
		add	bx, word ptr dword_459DA
		mov	es, word ptr dword_459DA+2
		mov	al, es:[bx]
		mov	[bp+var_73A], al
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx-73C4h]
		mov	cx, ax
		mov	al, [bp+var_3A4]
		cbw
		add	cx, ax
		add	cx, bp
		sub	cx, 0AD4h
		mov	[bp+var_AEC], cx
		mov	bx, cx
		cmp	byte ptr [bx], 0
		jnz	short loc_21687
		mov	byte ptr [bx], 1
		mov	bx, [bp+var_A]
		add	bx, word ptr dword_449D4
		mov	es, word ptr dword_449D4+2
		mov	al, es:[bx]
		sub	ah, ah
		mov	[bp+var_C], ax
		mov	bx, [bp+var_A]
		add	bx, word ptr dword_454D6
		mov	es, word ptr dword_454D6+2
		mov	al, es:[bx]
		and	al, 0Fh
		mov	[bp+var_742], al
		mov	bx, [bp+var_A]
		add	bx, word ptr dword_454D6
		mov	al, es:[bx]
		and	al, 10h
		mov	[bp+var_AE4], al
		mov	bx, [bp+var_C]
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx+2098h]
		mov	[bp+var_3AE], ax
		cmp	[bp+var_AE4], 0
		jnz	short loc_21747
		jmp	loc_21498
; ---------------------------------------------------------------------------

loc_21747:				; CODE XREF: sub_206D4+106Ej
		mov	al, [bp+var_742]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, [bp+var_3AE]
		mov	ax, [bx+0Ah]
		mov	[bp+var_AEA], ax
		or	ax, ax
		jnz	short loc_2176B
		jmp	loc_21498
; ---------------------------------------------------------------------------

loc_2176B:				; CODE XREF: sub_206D4+1092j
		jmp	loc_214B1
; ---------------------------------------------------------------------------

loc_2176E:				; CODE XREF: sub_206D4+FC0j
		mov	ax, di
		mov	byte_4616E, al
		mov	[bp+var_3B0], 0
		jmp	short loc_217AE
; ---------------------------------------------------------------------------

loc_2177A:				; CODE XREF: sub_206D4+C0j
		cmp	[bp+var_3A4], 1Eh
		jnz	short loc_21786
		mov	[bp+var_3A4], 1Dh

loc_21786:				; CODE XREF: sub_206D4+C8j
					; sub_206D4+10ABj
		cmp	[bp+var_73A], 0FFh
		jnz	short loc_21794
		mov	[bp+var_73A], 0
		jmp	short loc_217A0
; ---------------------------------------------------------------------------

loc_21794:				; CODE XREF: sub_206D4+10B7j
		cmp	[bp+var_73A], 1Eh
		jnz	short loc_217A0
		mov	[bp+var_73A], 1Dh

loc_217A0:				; CODE XREF: sub_206D4+10BEj
					; sub_206D4+10C5j
		mov	al, [bp+var_3A4]
		mov	byte_45D90, al
		mov	al, [bp+var_73A]
		mov	byte_45E16, al

loc_217AE:				; CODE XREF: sub_206D4+10A4j
		push	[bp+var_AE0]
		push	[bp+var_AE2]
		call	sub_31641
		add	sp, 4
		mov	al, [bp+var_3B0]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_206D4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_217CA	proc far		; CODE XREF: sub_23702+CCP
					; sub_23B4C+ABCP

var_F30		= word ptr -0F30h
var_B2E		= word ptr -0B2Eh
var_B2C		= word ptr -0B2Ch
var_B2A		= word ptr -0B2Ah
var_B28		= word ptr -0B28h
var_B26		= word ptr -0B26h
var_B24		= word ptr -0B24h
var_414		= word ptr -414h
var_412		= word ptr -412h
var_410		= word ptr -410h
var_20E		= word ptr -20Eh
var_20C		= word ptr -20Ch
var_A		= dword	ptr -0Ah
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0F30h
		push	di
		push	si
		mov	al, byte_449AA
		add	al, 30h	; '0'
		mov	byte_3B907, al
		mov	ax, 194h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_B2E], ax
		mov	[bp+var_B2C], dx
		mov	ax, 3009h
		push	ax
		push	dx
		push	[bp+var_B2E]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0ACF4h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 300Dh
		push	ax
		push	[bp+var_B2C]
		push	[bp+var_B2E]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_414], ax
		mov	[bp+var_412], dx
		mov	ax, 3012h
		push	ax
		push	[bp+var_B2C]
		push	[bp+var_B2E]
		call	sub_28A8C
		add	sp, 6
		mov	word ptr [bp+var_A], ax
		mov	word ptr [bp+var_A+2], dx
		sub	si, si

loc_21846:				; CODE XREF: sub_217CA+8Aj
		les	bx, [bp+var_A]
		mov	al, es:[bx+si]
		mov	[si-6A20h], al
		inc	si
		cmp	si, 10h
		jl	short loc_21846
		mov	[bp+var_B26], 423Fh
		mov	[bp+var_B24], 0Fh
		mov	[bp+var_B28], 0
		sub	ax, ax
		mov	[bp+var_20C], ax
		mov	[bp+var_20E], ax
		mov	[bp+var_B2A], ax
		sub	si, si

loc_21878:				; CODE XREF: sub_217CA+230j
					; sub_217CA+28Dj
		mov	[bp+var_410], 0
		mov	bx, si
		shl	bx, 1
		add	bx, word ptr dword_42D22
		mov	es, word ptr dword_42D22+2
		mov	ax, es:[bx]
		mov	[bp+var_4], ax
		or	ax, ax
		jnz	short loc_218A2
		mov	[bp+var_2], 1

loc_21899:				; CODE XREF: sub_217CA+E3j
		mov	[bp+var_410], 1
		jmp	short loc_218DA
; ---------------------------------------------------------------------------
		align 2

loc_218A2:				; CODE XREF: sub_217CA+C8j
		cmp	[bp+var_4], 0FFFFh
		jnz	short loc_218B0
		mov	[bp+var_2], 0
		jmp	short loc_21899
; ---------------------------------------------------------------------------
		align 2

loc_218B0:				; CODE XREF: sub_217CA+DCj
		cmp	[bp+var_B28], 0
		jz	short loc_218DA
		sub	di, di
		jmp	short loc_218D4
; ---------------------------------------------------------------------------
		align 2

loc_218BC:				; CODE XREF: sub_217CA+10Ej
		mov	bx, di
		shl	bx, 1
		add	bx, bp
		cmp	[bx-0B20h], si
		jnz	short loc_218D3
		mov	[bp+var_2], 0
		mov	[bp+var_410], 1

loc_218D3:				; CODE XREF: sub_217CA+FCj
		inc	di

loc_218D4:				; CODE XREF: sub_217CA+EFj
		cmp	[bp+var_B28], di
		jg	short loc_218BC

loc_218DA:				; CODE XREF: sub_217CA+D5j
					; sub_217CA+EBj
		mov	bx, [bp+var_B28]
		inc	[bp+var_B28]
		shl	bx, 1
		add	bx, bp
		mov	[bx-0B20h], si
		les	bx, dword_449D4
		mov	bl, es:[bx+si]
		sub	bh, bh
		add	bx, word ptr [bp+var_A]
		mov	es, word ptr [bp+var_A+2]
		mov	al, es:[bx]
		sub	ah, ah
		inc	ax
		sub	dx, dx
		add	[bp+var_20E], ax
		adc	[bp+var_20C], dx
		cmp	[bp+var_410], dx
		jnz	short loc_21912
		jmp	loc_219FE
; ---------------------------------------------------------------------------

loc_21912:				; CODE XREF: sub_217CA+143j
		cmp	[bp+var_2], dx
		jnz	short loc_2191A
		jmp	loc_219A5
; ---------------------------------------------------------------------------

loc_2191A:				; CODE XREF: sub_217CA+14Bj
		mov	ax, [bp+var_B26]
		mov	dx, [bp+var_B24]
		cmp	[bp+var_20C], dx
		ja	short loc_219A5
		jb	short loc_21930
		cmp	[bp+var_20E], ax
		jnb	short loc_219A5

loc_21930:				; CODE XREF: sub_217CA+15Ej
		mov	bx, [bp+var_B28]
		inc	[bp+var_B28]
		shl	bx, 1
		add	bx, bp
		mov	word ptr [bx-0B20h], 0
		mov	ax, [bp+var_20E]
		mov	dx, [bp+var_20C]
		mov	[bp+var_B26], ax
		mov	[bp+var_B24], dx
		sub	di, di
		jmp	short loc_21978
; ---------------------------------------------------------------------------
		align 4

loc_21958:				; CODE XREF: sub_217CA+1B2j
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_F30], ax
		mov	bx, ax
		add	bx, bp
		mov	ax, [bx-0B20h]
		mov	bx, [bp+var_F30]
		add	bx, word ptr dword_43942
		mov	es, word ptr dword_43942+2
		mov	es:[bx], ax
		inc	di

loc_21978:				; CODE XREF: sub_217CA+18Aj
		cmp	[bp+var_B28], di
		jg	short loc_21958
		mov	bx, [bp+var_B28]
		shl	bx, 1
		add	bx, word ptr dword_43942
		mov	es, word ptr dword_43942+2
		mov	word ptr es:[bx], 0
		mov	bx, [bp+var_B28]
		shl	bx, 1
		add	bx, word ptr dword_43942
		mov	es, word ptr dword_43942+2
		mov	word ptr es:[bx+2], 1

loc_219A5:				; CODE XREF: sub_217CA+14Dj
					; sub_217CA+15Cj ...
		cmp	[bp+var_B2A], 0
		jnz	short loc_219C2
		push	[bp+var_B2C]
		push	[bp+var_B2E]
		call	sub_28A78
		add	sp, 4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_219C2:				; CODE XREF: sub_217CA+1E0j
		dec	[bp+var_B2A]
		mov	ax, [bp+var_B2A]
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_F30], ax
		mov	bx, ax
		mov	si, [bx-20Ah]
		mov	ax, [bx-40Eh]
		mov	[bp+var_B28], ax
		mov	bx, [bp+var_B2A]
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0F2Eh]
		mov	dx, [bx-0F2Ch]
		mov	[bp+var_20E], ax
		mov	[bp+var_20C], dx
		jmp	loc_21878
; ---------------------------------------------------------------------------
		align 2

loc_219FE:				; CODE XREF: sub_217CA+145j
		mov	bx, si
		shl	bx, 1
		add	bx, word ptr dword_438E8
		mov	es, word ptr dword_438E8+2
		mov	ax, es:[bx]
		mov	[bp+var_6], ax
		cmp	ax, 0FFFFh
		jz	short loc_21A54
		mov	ax, [bp+var_B2A]
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_F30], ax
		mov	bx, ax
		mov	ax, [bp+var_6]
		mov	[bx-20Ah], ax
		mov	bx, [bp+var_F30]
		mov	ax, [bp+var_B28]
		mov	[bx-40Eh], ax
		mov	bx, [bp+var_B2A]
		inc	[bp+var_B2A]
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	ax, [bp+var_20E]
		mov	dx, [bp+var_20C]
		mov	[bx-0F2Eh], ax
		mov	[bx-0F2Ch], dx

loc_21A54:				; CODE XREF: sub_217CA+249j
		mov	si, [bp+var_4]
		jmp	loc_21878
sub_217CA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_21A5A	proc far		; CODE XREF: sub_1A0F4+693P
					; sub_1CBDC+515P ...

arg_0		= byte ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		mov	al, [bp+arg_0]
		sub	ah, ah
		cmp	ax, 7
		jz	short loc_21A80
		cmp	ax, 8
		jz	short loc_21ABE
		cmp	ax, 9
		jnz	short loc_21A74
		jmp	loc_21AFE
; ---------------------------------------------------------------------------

loc_21A74:				; CODE XREF: sub_21A5A+15j
		cmp	ax, 0Ah
		jnz	short loc_21A7C
		jmp	loc_21B3C
; ---------------------------------------------------------------------------

loc_21A7C:				; CODE XREF: sub_21A5A+1Dj
					; sub_21A5A+49j ...
		sub	ax, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_21A80:				; CODE XREF: sub_21A5A+Bj
		mov	al, [bp+arg_2]
		sub	ah, ah
		cmp	ax, 4
		jz	short loc_21AA6
		cmp	ax, 0Eh
		jz	short loc_21AAC
		cmp	ax, 18h
		jz	short loc_21AB2
		cmp	ax, 27h	; '''
		jz	short loc_21AB8
		cmp	ax, 3Bh	; ';'
		jz	short loc_21AB8
		cmp	ax, 62h	; 'b'
		jz	short loc_21AB8
		jmp	short loc_21A7C
; ---------------------------------------------------------------------------
		align 2

loc_21AA6:				; CODE XREF: sub_21A5A+2Ej
		mov	ax, 0B6h ; '∂'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21AAC:				; CODE XREF: sub_21A5A+33j
		mov	ax, 0BAh ; '∫'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21AB2:				; CODE XREF: sub_21A5A+38j
		mov	ax, 0BEh ; 'æ'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21AB8:				; CODE XREF: sub_21A5A+3Dj
					; sub_21A5A+42j ...
		mov	ax, 0C2h ; '¬'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21ABE:				; CODE XREF: sub_21A5A+10j
		mov	al, [bp+arg_2]
		sub	ah, ah
		cmp	ax, 5
		jz	short loc_21AE4
		cmp	ax, 0Fh
		jz	short loc_21AEA
		cmp	ax, 19h
		jz	short loc_21AF0
		cmp	ax, 24h	; '$'
		jz	short loc_21AF8
		cmp	ax, 38h	; '8'
		jz	short loc_21AF8
		cmp	ax, 5Fh	; '_'
		jz	short loc_21AF8
		jmp	short loc_21A7C
; ---------------------------------------------------------------------------
		align 2

loc_21AE4:				; CODE XREF: sub_21A5A+6Cj
		mov	ax, 0B7h ; '∑'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21AEA:				; CODE XREF: sub_21A5A+71j
		mov	ax, 0BBh ; 'ª'
		jmp	loc_21B77
; ---------------------------------------------------------------------------

loc_21AF0:				; CODE XREF: sub_21A5A+76j
		mov	ax, 0BFh ; 'ø'
		jmp	loc_21B77
; ---------------------------------------------------------------------------
		align 4

loc_21AF8:				; CODE XREF: sub_21A5A+7Bj
					; sub_21A5A+80j ...
		mov	ax, 0C3h ; '√'
		jmp	short loc_21B77
; ---------------------------------------------------------------------------
		align 2

loc_21AFE:				; CODE XREF: sub_21A5A+17j
		mov	al, [bp+arg_2]
		sub	ah, ah
		cmp	ax, 4
		jz	short loc_21B24
		cmp	ax, 0Eh
		jz	short loc_21B2A
		cmp	ax, 18h
		jz	short loc_21B30
		cmp	ax, 26h	; '&'
		jz	short loc_21B36
		cmp	ax, 3Ah	; ':'
		jz	short loc_21B36
		cmp	ax, 61h	; 'a'
		jz	short loc_21B36
		jmp	loc_21A7C
; ---------------------------------------------------------------------------

loc_21B24:				; CODE XREF: sub_21A5A+ACj
		mov	ax, 0B8h ; '∏'
		jmp	short loc_21B77
; ---------------------------------------------------------------------------
		align 2

loc_21B2A:				; CODE XREF: sub_21A5A+B1j
		mov	ax, 0BCh ; 'º'
		jmp	short loc_21B77
; ---------------------------------------------------------------------------
		align 2

loc_21B30:				; CODE XREF: sub_21A5A+B6j
		mov	ax, 0C0h ; '¿'
		jmp	short loc_21B77
; ---------------------------------------------------------------------------
		align 2

loc_21B36:				; CODE XREF: sub_21A5A+BBj
					; sub_21A5A+C0j ...
		mov	ax, 0C4h ; 'ƒ'
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_21B3C:				; CODE XREF: sub_21A5A+1Fj
		mov	al, [bp+arg_2]
		sub	ah, ah
		cmp	ax, 5
		jz	short loc_21B62
		cmp	ax, 0Fh
		jz	short loc_21B68
		cmp	ax, 19h
		jz	short loc_21B6E
		cmp	ax, 25h	; '%'
		jz	short loc_21B74
		cmp	ax, 39h	; '9'
		jz	short loc_21B74
		cmp	ax, 60h	; '`'
		jz	short loc_21B74
		jmp	loc_21A7C
; ---------------------------------------------------------------------------

loc_21B62:				; CODE XREF: sub_21A5A+EAj
		mov	ax, 0B9h ; 'π'
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_21B68:				; CODE XREF: sub_21A5A+EFj
		mov	ax, 0BDh ; 'Ω'
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_21B6E:				; CODE XREF: sub_21A5A+F4j
		mov	ax, 0C1h ; '¡'
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_21B74:				; CODE XREF: sub_21A5A+F9j
					; sub_21A5A+FEj ...
		mov	ax, 0C5h ; '≈'

loc_21B77:				; CODE XREF: sub_21A5A+4Fj
					; sub_21A5A+55j ...
		pop	bp
		retf
sub_21A5A	endp

seg004		ends

; ===========================================================================

; Segment type:	Pure code
seg005		segment	byte public 'CODE' use16
		assume cs:seg005
		;org 9
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_21B7A	proc far		; CODE XREF: _main+4B1P

var_16		= byte ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	si
		mov	[bp+var_C], 0FFFFh
		mov	word_43934, 0
		mov	word_43936, 140h
		mov	[bp+var_2], 0FFFFh
		mov	word_449EA, 0FFFFh
		call	sub_19E7B
		mov	cl, 3
		shl	ax, cl
		mov	word_42D28, ax
		mov	byte_4616F, 1
		mov	byte_454B8, 0
		cmp	byte_44AE2, 0
		jz	short loc_21BEC
		inc	byte_3B8F5
		cmp	byte_3B8F5, 4
		jnz	short loc_21BCA
		mov	byte_3B8F5, 0

loc_21BCA:				; CODE XREF: sub_21B7A+49j
		mov	byte_45DB2, 2
		mov	ax, 307Ch
		push	ax
		sub	ax, ax
		push	ax		; char *
		push	cs
		call	near ptr sub_22C92
		add	sp, 4
		or	al, al
		jz	short loc_21BE4
		jmp	loc_223F4
; ---------------------------------------------------------------------------

loc_21BE4:				; CODE XREF: sub_21B7A+65j
		call	sub_206D4
		jmp	short loc_21C0F
; ---------------------------------------------------------------------------
		align 2

loc_21BEC:				; CODE XREF: sub_21B7A+3Ej
		cmp	word_449BC, 0
		jnz	short loc_21C00
		mov	byte_3B8F5, 0
		mov	byte_45DB2, 1
		jmp	short loc_21C0F
; ---------------------------------------------------------------------------
		align 2

loc_21C00:				; CODE XREF: sub_21B7A+77j
		mov	byte_3B8F5, 0
		mov	byte_45DB2, 2
		mov	byte_454B8, 1

loc_21C0F:				; CODE XREF: sub_21B7A+6Fj
					; sub_21B7A+83j
		push	cs
		call	near ptr sub_23702
		or	ax, ax
		jz	short loc_21C24
		push	cs
		call	near ptr sub_239B4
		call	sub_2A200
		jmp	loc_223E4
; ---------------------------------------------------------------------------
		align 2

loc_21C24:				; CODE XREF: sub_21B7A+9Bj
		mov	byte_3B8F8, 0
		mov	byte_449E6, 0
		mov	byte_449DA, 1
		push	cs
		call	near ptr sub_2255A
		mov	byte_461C8, 0FFh
		mov	byte_44346, 0
		mov	byte_4432A, 0
		mov	byte_46467, 0
		mov	byte_43950, 0
		cmp	byte_44AE2, 0
		jz	short loc_21C6E
		mov	al, byte_449BA
		cbw
		mov	word_449D0, ax

loc_21C5E:				; CODE XREF: sub_21B7A+71Aj
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2
		jmp	loc_21DA2
; ---------------------------------------------------------------------------
		align 2

loc_21C6E:				; CODE XREF: sub_21B7A+DBj
		cmp	byte_454B8, 0
		jz	short loc_21C78
		jmp	loc_21D2C
; ---------------------------------------------------------------------------

loc_21C78:				; CODE XREF: sub_21B7A+F9j
		mov	byte_3B8F5, 0
		mov	byte_43950, 1
		mov	byte_4499F, 0
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	al, byte ptr word_44D4E
		mov	byte_449BA, al
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2
		mov	word_45D94, 0
		mov	byte_45D3E, 0
		mov	byte_4393C, 1
		mov	al, byte_3B8F2
		cbw
		push	ax
		push	cs
		call	near ptr sub_23A50
		add	sp, 2
		mov	byte_45DB2, 1
		mov	ax, 0FF10h
		push	ax
		push	word_45516
		call	sub_326DE
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		cwd
		mov	cl, 6

loc_21CDC:				; CODE XREF: sub_21B7A+168j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_21CDC
		add	word_445E6, ax
		adc	word_445E8, dx
		mov	ax, 0FF10h
		push	ax
		push	word_45516
		call	sub_3272C
		add	sp, 2
		push	ax
		call	sub_30044
		add	sp, 4
		cwd
		mov	cl, 6

loc_21D08:				; CODE XREF: sub_21B7A+194j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_21D08
		add	word_445EE, ax
		adc	word_445F0, dx
		add	word_445EA, 580h
		adc	word_445EC, 0
		mov	byte_43966, 1
		jmp	short loc_21DA2
; ---------------------------------------------------------------------------
		align 4

loc_21D2C:				; CODE XREF: sub_21B7A+FBj
		mov	byte_3B8F5, 0
		mov	byte_45DB2, 2
		mov	word_44DCA, 1F4h
		mov	al, byte_449BA
		cbw
		mov	word_449D0, ax
		sub	ax, ax
		push	ax
		call	sub_16F3A
		add	sp, 2
		push	word_449BC
		call	sub_16F3A
		add	sp, 2
		jmp	short loc_21D72
; ---------------------------------------------------------------------------

loc_21D5C:				; CODE XREF: sub_21B7A+1FFj
		mov	ax, 1
		push	ax
		call	sub_289E2
		add	sp, 2
		cmp	ax, 1Bh
		jz	short loc_21D7B
		call	sub_17008

loc_21D72:				; CODE XREF: sub_21B7A+1E0j
		mov	ax, word_445D4
		cmp	word_449BC, ax
		jnz	short loc_21D5C

loc_21D7B:				; CODE XREF: sub_21B7A+1F1j
		mov	ax, word_449BC
		mov	word_42D02, ax
		jmp	short loc_21DA2
; ---------------------------------------------------------------------------
		align 2

loc_21D84:				; CODE XREF: sub_21B7A+22Fj
		cmp	byte_3B8F2, 0
		jnz	short loc_21D92
		cmp	byte_3FE00, 0
		jz	short loc_21D9D

loc_21D92:				; CODE XREF: sub_21B7A+20Fj
		cmp	byte_45DB2, 0
		jnz	short loc_21D9D
		push	cs
		call	near ptr sub_23A98

loc_21D9D:				; CODE XREF: sub_21B7A+216j
					; sub_21B7A+21Dj
		call	sub_17008

loc_21DA2:				; CODE XREF: sub_21B7A+F0j
					; sub_21B7A+1AEj ...
		mov	ax, word_42D02
		cmp	word_445D4, ax
		jnz	short loc_21D84
		cmp	byte_45DB2, 0
		jnz	short loc_21DCB
		cmp	byte_449DA, 0
		jnz	short loc_21DCB
		cmp	byte_44889, 0
		jz	short loc_21DCB
		mov	ax, word_445D4
		cmp	[bp+var_C], ax
		jz	short loc_21DA2
		mov	[bp+var_C], ax

loc_21DCB:				; CODE XREF: sub_21B7A+236j
					; sub_21B7A+23Dj ...
		cmp	byte_44889, 0
		jnz	short loc_21DEB
		cmp	byte_45DB2, 0
		jnz	short loc_21DEB
		mov	word_42D02, 0
		mov	word_449BC, 0
		mov	word_445D4, 0

loc_21DEB:				; CODE XREF: sub_21B7A+256j
					; sub_21B7A+25Dj
		mov	ax, word_44CEA
		cmp	word_44984, ax
		jz	short loc_21DFC
		mov	word_44984, ax
		call	sub_1A096

loc_21DFC:				; CODE XREF: sub_21B7A+278j
		cmp	byte_46467, 0
		jz	short loc_21E76
		call	sub_29AEC
		call	sub_37216
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3084h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		cmp	si, 0FFFFh
		jnz	short loc_21E49
		sub	si, si

loc_21E49:				; CODE XREF: sub_21B7A+2CBj
		call	sub_372F4
		mov	word_3F88E, 0
		call	sub_29B08
		or	si, si
		jz	short loc_21E71
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	sub_195E6
		add	sp, 4
		mov	byte_449DA, 1

loc_21E71:				; CODE XREF: sub_21B7A+2E1j
		mov	byte_46467, 0

loc_21E76:				; CODE XREF: sub_21B7A+287j
		cmp	byte_46436, 0
		jz	short loc_21E8A
		call	sub_3A9A0
		mov	al, byte_44346
		mov	byte_4432A, al
		jmp	short loc_21E8F
; ---------------------------------------------------------------------------

loc_21E8A:				; CODE XREF: sub_21B7A+301j
		call	sub_28F6A

loc_21E8F:				; CODE XREF: sub_21B7A+30Ej
		mov	al, byte_461C8
		cmp	byte_45DB2, al
		jnz	short loc_21EBF
		mov	al, byte_4644A
		cmp	byte_43950, al
		jnz	short loc_21EBF
		mov	al, byte_455D2
		cmp	byte_4616F, al
		jnz	short loc_21EBF
		mov	al, byte_45634
		cmp	byte_454B8, al
		jnz	short loc_21EBF
		mov	al, byte_42A38
		cmp	byte_463E0, al
		jnz	short loc_21EBF
		jmp	loc_21F7A
; ---------------------------------------------------------------------------

loc_21EBF:				; CODE XREF: sub_21B7A+31Cj
					; sub_21B7A+325j ...
		mov	al, byte_45DB2
		mov	byte_461C8, al
		mov	al, byte_43950
		mov	byte_4644A, al
		mov	al, byte_4616F
		mov	byte_455D2, al
		mov	al, byte_454B8
		mov	byte_45634, al
		mov	al, byte_463E0
		mov	byte_42A38, al
		mov	word_45DB8, 0
		mov	byte_449E2, 0
		cmp	byte_45DB2, 2
		jnz	short loc_21F0A
		cmp	byte_44AE2, 0
		jnz	short loc_21F0A
		cmp	byte_4616F, 0
		jz	short loc_21F00
		jmp	loc_21FEE
; ---------------------------------------------------------------------------

loc_21F00:				; CODE XREF: sub_21B7A+381j
		cmp	byte_454B8, 0
		jz	short loc_21F0A
		jmp	loc_21FEE
; ---------------------------------------------------------------------------

loc_21F0A:				; CODE XREF: sub_21B7A+373j
					; sub_21B7A+37Aj ...
		mov	byte_46484, 0

loc_21F0F:				; CODE XREF: sub_21B7A+479j
		cmp	byte_44AE2, 0
		jnz	short loc_21F19
		jmp	loc_21FF6
; ---------------------------------------------------------------------------

loc_21F19:				; CODE XREF: sub_21B7A+39Aj
					; sub_21B7A+4C1j ...
		mov	word_454AE, 0C8h ; '»'

loc_21F1F:				; CODE XREF: sub_21B7A+4B7j
					; sub_21B7A+4D4j
		mov	ax, word_45DB8
		cmp	[bp+var_2], ax
		jnz	short loc_21F38
		mov	ax, word_449EA
		cmp	word_454AE, ax
		jnz	short loc_21F38
		mov	ax, word_459D4
		cmp	[bp+var_E], ax
		jz	short loc_21F7A

loc_21F38:				; CODE XREF: sub_21B7A+3ABj
					; sub_21B7A+3B4j
		mov	al, byte_459F1
		mov	byte_454A4, al
		push	word_454AE
		mov	ax, 140h
		push	ax
		mov	ax, word_454AE
		cwd
		mov	cx, 6
		idiv	cx
		push	ax
		mov	ax, 23h	; '#'
		push	ax
		call	sub_322F3
		add	sp, 8
		mov	ax, word_45DB8
		mov	word_43938, ax
		mov	ax, word_454AE
		mov	word_4393A, ax
		mov	ax, word_45DB8
		mov	[bp+var_2], ax
		mov	ax, word_454AE
		mov	word_449EA, ax
		mov	ax, word_459D4
		mov	[bp+var_E], ax

loc_21F7A:				; CODE XREF: sub_21B7A+342j
					; sub_21B7A+3BCj
		cmp	byte_454A4, 0
		jnz	short loc_21F84
		jmp	loc_22052
; ---------------------------------------------------------------------------

loc_21F84:				; CODE XREF: sub_21B7A+405j
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	byte ptr [bx-6D98h], 0
		cmp	byte_449E2, 0
		jz	short loc_21FB8
		push	word_459D4
		push	word_454AE
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_22D2E
		add	sp, 2

loc_21FB8:				; CODE XREF: sub_21B7A+41Aj
		cmp	byte_46484, 0
		jnz	short loc_21FC2
		jmp	loc_22064
; ---------------------------------------------------------------------------

loc_21FC2:				; CODE XREF: sub_21B7A+443j
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	short loc_22064
; ---------------------------------------------------------------------------
		align 2

loc_21FEE:				; CODE XREF: sub_21B7A+383j
					; sub_21B7A+38Dj
		mov	byte_46484, 1
		jmp	loc_21F0F
; ---------------------------------------------------------------------------

loc_21FF6:				; CODE XREF: sub_21B7A+39Cj
		cmp	byte_43950, 0
		jz	short loc_22034
		cmp	byte_463E0, 0
		jnz	short loc_22034
		cmp	byte_45DB2, 2
		jnz	short loc_2201A
		cmp	byte_46484, 0
		jz	short loc_2201A
		mov	word_459D4, 97h	; 'ó'
		jmp	short loc_22020
; ---------------------------------------------------------------------------

loc_2201A:				; CODE XREF: sub_21B7A+48Fj
					; sub_21B7A+496j
		mov	word_459D4, 0C8h ; '»'

loc_22020:				; CODE XREF: sub_21B7A+49Ej
		mov	byte_449E2, 1
		mov	ax, word_461CC
		mov	word_45DB8, ax
		mov	ax, word_45DBA
		mov	word_454AE, ax
		jmp	loc_21F1F
; ---------------------------------------------------------------------------

loc_22034:				; CODE XREF: sub_21B7A+481j
					; sub_21B7A+488j
		cmp	byte_45DB2, 2
		jz	short loc_2203E
		jmp	loc_21F19
; ---------------------------------------------------------------------------

loc_2203E:				; CODE XREF: sub_21B7A+4BFj
		cmp	byte_46484, 0
		jnz	short loc_22048
		jmp	loc_21F19
; ---------------------------------------------------------------------------

loc_22048:				; CODE XREF: sub_21B7A+4C9j
		mov	word_454AE, 97h	; 'ó'
		jmp	loc_21F1F
; ---------------------------------------------------------------------------
		align 2

loc_22052:				; CODE XREF: sub_21B7A+407j
		cmp	byte_46484, 0
		jnz	short loc_22064
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	byte ptr [bx-6D98h], 0

loc_22064:				; CODE XREF: sub_21B7A+445j
					; sub_21B7A+471j ...
		mov	ax, 81C4h
		push	ax
		mov	al, byte_44346
		cbw
		push	ax
		call	sub_1A0F4
		add	sp, 4
		cmp	word_461C2, 0
		jz	short loc_220DB
		cmp	byte_449E2, 0
		jz	short loc_220DB
		cmp	word_44984, 0
		jz	short loc_220BB
		mov	[bp+var_A], 0
		mov	[bp+var_8], 140h
		mov	ax, word_461C2
		mov	[bp+var_6], ax
		mov	ax, word_454AE
		mov	[bp+var_4], ax
		cmp	word_3B80A, 0
		jz	short loc_220BB
		push	word_3B80A
		lea	ax, [bp+var_A]
		push	ax
		push	word_3B80A
		call	sub_26572
		add	sp, 6

loc_220BB:				; CODE XREF: sub_21B7A+50Ej
					; sub_21B7A+52Bj
		push	word_454A2
		push	word_454A0
		call	sub_33B02
		add	sp, 4
		push	word_4549E
		push	word_4549C
		call	sub_342F6
		add	sp, 4

loc_220DB:				; CODE XREF: sub_21B7A+500j
					; sub_21B7A+507j
		mov	ax, 81C4h
		push	ax
		call	sub_19F14
		add	sp, 2
		cmp	byte_449E2, 0
		jz	short loc_22126
		push	word_459D4
		push	word_454AE
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_22D2E
		add	sp, 2
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8

loc_22126:				; CODE XREF: sub_21B7A+572j
		cmp	byte_454A4, 0
		jz	short loc_22131
		dec	byte_454A4

loc_22131:				; CODE XREF: sub_21B7A+5B1j
		cmp	byte_46436, 0
		jz	short loc_22152
		call	sub_28DB6
		call	sub_3A958
		xor	byte_44346, 1
		mov	al, byte_44346
		mov	byte_4432A, al
		call	sub_28D9E

loc_22152:				; CODE XREF: sub_21B7A+5BCj
		cmp	byte_45DB2, 1
		jnz	short loc_2217D
		cmp	byte_4393C, 0
		jnz	short loc_2217D
		mov	byte_45DB2, 0
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	al, byte ptr word_44D4E
		mov	byte_449BA, al
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2

loc_2217D:				; CODE XREF: sub_21B7A+5DDj
					; sub_21B7A+5E4j
		cmp	byte_44AE2, 0
		jz	short loc_221AA
		call	sub_30519
		or	ax, ax
		jz	short loc_22190
		jmp	loc_22298
; ---------------------------------------------------------------------------

loc_22190:				; CODE XREF: sub_21B7A+611j
		cmp	byte_449DA, 0
		jz	short loc_2219A
		jmp	loc_22298
; ---------------------------------------------------------------------------

loc_2219A:				; CODE XREF: sub_21B7A+61Bj
		call	sub_30538
		or	ax, ax
		jnz	short loc_221A6
		jmp	loc_21DA2
; ---------------------------------------------------------------------------

loc_221A6:				; CODE XREF: sub_21B7A+627j
		jmp	loc_22298
; ---------------------------------------------------------------------------
		align 2

loc_221AA:				; CODE XREF: sub_21B7A+608j
		cmp	byte_449DA, 0
		jz	short loc_22208
		cmp	byte_45DB2, 0
		jnz	short loc_221C2
		cmp	byte_4488A, 4
		jz	short loc_221C2
		jmp	loc_22298
; ---------------------------------------------------------------------------

loc_221C2:				; CODE XREF: sub_21B7A+63Cj
					; sub_21B7A+643j
		cmp	byte_449DA, 2
		jnz	short loc_221CC
		jmp	loc_22298
; ---------------------------------------------------------------------------

loc_221CC:				; CODE XREF: sub_21B7A+64Dj
		mov	byte_449DA, 0
		mov	byte_45DB2, 2
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_23A50
		add	sp, 2
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	byte_454B8, 1
		call	sub_188A4

loc_22208:				; CODE XREF: sub_21B7A+635j
		cmp	byte_45DB2, 2
		jnz	short loc_22222
		sub	ax, ax
		push	ax
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_21DA2
; ---------------------------------------------------------------------------
		align 2

loc_22222:				; CODE XREF: sub_21B7A+693j
					; sub_21B7A+6C2j ...
		call	sub_30519
		mov	[bp+var_12], ax
		or	ax, ax
		jz	short loc_22236
		push	ax
		push	cs
		call	near ptr sub_223FA
		add	sp, 2

loc_22236:				; CODE XREF: sub_21B7A+6B2j
		mov	ax, [bp+var_12]
		cmp	ax, 4800h
		jz	short loc_22222
		cmp	ax, 4B00h
		jz	short loc_22222
		cmp	ax, 4D00h
		jz	short loc_22222
		cmp	ax, 5000h
		jz	short loc_22222
		cmp	byte_45DB2, 1
		jz	short loc_22257
		jmp	loc_21DA2
; ---------------------------------------------------------------------------

loc_22257:				; CODE XREF: sub_21B7A+6D8j
		mov	ax, 0AA5Eh
		push	ax
		mov	ax, 0A9FCh
		push	ax
		mov	ax, 8B78h
		push	ax
		call	sub_36A60
		add	sp, 6
		test	byte ptr word_442E8, 3
		jnz	short loc_2227E
		call	sub_30538
		test	al, 30h
		jnz	short loc_2227E
		jmp	loc_21DA2
; ---------------------------------------------------------------------------

loc_2227E:				; CODE XREF: sub_21B7A+6F6j
					; sub_21B7A+6FFj
		mov	byte_45DB2, 0
		mov	byte_4393C, 0
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	al, byte ptr word_44D4E
		mov	byte_449BA, al
		jmp	loc_21C5E
; ---------------------------------------------------------------------------
		align 2

loc_22298:				; CODE XREF: sub_21B7A+613j
					; sub_21B7A+61Dj ...
		cmp	byte_46436, 0
		jz	short loc_222D3
		call	sub_3A45C
		or	ax, ax
		jz	short loc_222D3
		call	sub_28DB6
		call	sub_3A9A0
		sub	ax, ax
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_35C4E
		add	sp, 0Ah
		call	sub_3A958
		call	sub_28D9E

loc_222D3:				; CODE XREF: sub_21B7A+723j
					; sub_21B7A+72Cj
		call	sub_28F3C
		mov	byte_454B8, 1
		call	sub_188A4
		call	sub_26BD5
		cmp	byte_45DB2, 0
		jz	short loc_222F1
		jmp	loc_223CD
; ---------------------------------------------------------------------------

loc_222F1:				; CODE XREF: sub_21B7A+772j
		cmp	byte_449AA, 0
		jnz	short loc_222FB
		jmp	loc_223CD
; ---------------------------------------------------------------------------

loc_222FB:				; CODE XREF: sub_21B7A+77Cj
		cmp	byte_4477F, 0
		jz	short loc_22305
		jmp	loc_223CD
; ---------------------------------------------------------------------------

loc_22305:				; CODE XREF: sub_21B7A+786j
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_16]
		push	ax
		push	word_40800
		mov	ax, 50h	; 'P'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 3088h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 3
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	byte_45D3E, 1
		mov	si, word_449D0
		dec	si

loc_22347:				; CODE XREF: sub_21B7A+850j
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_22698
		add	sp, 2
		call	sub_17008
		inc	si
		mov	ax, word_449D0
		cmp	si, ax
		jnz	short loc_2239F
		sub	si, si
		mov	ax, 1
		push	ax		; int
		mov	ax, word_445D4
		add	ax, word_45A24
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		call	sub_28DB6
		push	[bp+var_14]
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		call	sub_28D9E

loc_2239F:				; CODE XREF: sub_21B7A+7E3j
		mov	ax, 1
		push	ax
		call	sub_289E2
		add	sp, 2
		cmp	ax, 1Bh
		jz	short loc_223CD
		cmp	byte_4477F, 0
		jnz	short loc_223CD
		mov	ax, 5DCh
		imul	word_449D0
		mov	cx, word_445D4
		add	cx, word_45A24
		cmp	ax, cx
		jz	short loc_223CD
		jmp	loc_22347
; ---------------------------------------------------------------------------

loc_223CD:				; CODE XREF: sub_21B7A+774j
					; sub_21B7A+77Ej ...
		mov	byte_45D3E, 0
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_23A50
		add	sp, 2
		push	cs
		call	near ptr sub_22576
		push	cs
		call	near ptr sub_239B4

loc_223E4:				; CODE XREF: sub_21B7A+A6j
		mov	word_44382, 64h	; 'd'
		call	sub_28EE4
		call	sub_296AA

loc_223F4:				; CODE XREF: sub_21B7A+67j
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_21B7A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_223FA	proc far		; CODE XREF: sub_21B7A+6B6p
					; sub_23B4C+5D0p

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		cmp	ax, 64h	; 'd'
		jz	short loc_22470
		jbe	short loc_2240A
		jmp	loc_224EE
; ---------------------------------------------------------------------------

loc_2240A:				; CODE XREF: sub_223FA+Bj
		cmp	ax, 44h	; 'D'
		jz	short loc_22470
		jbe	short loc_22414
		jmp	loc_224AC
; ---------------------------------------------------------------------------

loc_22414:				; CODE XREF: sub_223FA+15j
		cmp	ax, 1Bh
		jz	short loc_22420
		cmp	ax, 43h	; 'C'
		jmp	loc_224BE
; ---------------------------------------------------------------------------
		align 2

loc_22420:				; CODE XREF: sub_223FA+1Dj
		cmp	byte_45DB2, 0
		jnz	short loc_22436
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	sub_195E6
		add	sp, 4

loc_22436:				; CODE XREF: sub_223FA+2Bj
		mov	byte_449DA, 1
		jmp	loc_224E9
; ---------------------------------------------------------------------------

loc_2243E:				; CODE XREF: sub_223FA+123j
		mov	byte_3B8F5, 1
		jmp	loc_224E9
; ---------------------------------------------------------------------------

loc_22446:				; CODE XREF: sub_223FA+12Bj
		mov	byte_3B8F5, 2
		jmp	loc_224E9
; ---------------------------------------------------------------------------

loc_2244E:				; CODE XREF: sub_223FA+133j
		mov	byte_3B8F5, 3
		jmp	loc_224E9
; ---------------------------------------------------------------------------

loc_22456:				; CODE XREF: sub_223FA+B5j
					; sub_223FA+100j
		xor	byte_3B8F4, 1
		jmp	loc_224E9
; ---------------------------------------------------------------------------

loc_2245E:				; CODE XREF: sub_223FA+BAj
					; sub_223FA+108j
		call	sub_29DF4
		mov	al, byte_3B8F2
		cbw
		push	ax
		push	cs
		call	near ptr sub_23A50
		jmp	short loc_224E6
; ---------------------------------------------------------------------------
		align 4

loc_22470:				; CODE XREF: sub_223FA+9j
					; sub_223FA+13j
		xor	byte_43950, 1
		jmp	short loc_224E9
; ---------------------------------------------------------------------------
		align 2

loc_22478:				; CODE XREF: sub_223FA+BFj
					; sub_223FA+110j
		xor	byte_4616F, 1
		jmp	short loc_224E9
; ---------------------------------------------------------------------------
		align 2

loc_22480:				; CODE XREF: sub_223FA:loc_224BEj
		cmp	byte_45DB2, 1
		jz	short loc_224E9
		inc	byte_3B8F5
		cmp	byte_3B8F5, 4
		jnz	short loc_224E9

loc_22492:				; CODE XREF: sub_223FA+11Bj
		mov	byte_3B8F5, 0
		jmp	short loc_224E9
; ---------------------------------------------------------------------------
		align 2

loc_2249A:				; CODE XREF: sub_223FA+F7j
		cmp	byte_449AA, 0
		jz	short loc_224E9
		xor	byte_463E0, 1
		jmp	short loc_224E9
; ---------------------------------------------------------------------------

loc_224A8:				; CODE XREF: sub_223FA+CBj
		sub	ax, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_224AC:				; CODE XREF: sub_223FA+17j
		cmp	ax, 48h	; 'H'
		jz	short loc_22456
		cmp	ax, 4Dh	; 'M'
		jz	short loc_2245E
		cmp	ax, 52h	; 'R'
		jz	short loc_22478
		cmp	ax, 63h	; 'c'

loc_224BE:				; CODE XREF: sub_223FA+22j
		jz	short loc_22480

loc_224C0:				; CODE XREF: sub_223FA:loc_2250Dj
					; sub_223FA:loc_22530j
		cmp	byte_45DB2, 1
		jnz	short loc_224A8
		mov	byte_45DB2, 0
		mov	byte_4393C, 0
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	al, byte ptr word_44D4E
		mov	byte_449BA, al
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02

loc_224E6:				; CODE XREF: sub_223FA+72j
		add	sp, 2

loc_224E9:				; CODE XREF: sub_223FA+41j
					; sub_223FA+49j ...
		mov	ax, 1
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_224EE:				; CODE XREF: sub_223FA+Dj
		cmp	ax, 74h	; 't'
		jz	short loc_2249A
		ja	short loc_22510
		cmp	ax, 68h	; 'h'
		jnz	short loc_224FD
		jmp	loc_22456
; ---------------------------------------------------------------------------

loc_224FD:				; CODE XREF: sub_223FA+FEj
		cmp	ax, 6Dh	; 'm'
		jnz	short loc_22505
		jmp	loc_2245E
; ---------------------------------------------------------------------------

loc_22505:				; CODE XREF: sub_223FA+106j
		cmp	ax, 72h	; 'r'
		jnz	short loc_2250D
		jmp	loc_22478
; ---------------------------------------------------------------------------

loc_2250D:				; CODE XREF: sub_223FA+10Ej
		jmp	short loc_224C0
; ---------------------------------------------------------------------------
		align 2

loc_22510:				; CODE XREF: sub_223FA+F9j
		cmp	ax, 3B00h
		jnz	short loc_22518
		jmp	loc_22492
; ---------------------------------------------------------------------------

loc_22518:				; CODE XREF: sub_223FA+119j
		cmp	ax, 3C00h
		jnz	short loc_22520
		jmp	loc_2243E
; ---------------------------------------------------------------------------

loc_22520:				; CODE XREF: sub_223FA+121j
		cmp	ax, 3D00h
		jnz	short loc_22528
		jmp	loc_22446
; ---------------------------------------------------------------------------

loc_22528:				; CODE XREF: sub_223FA+129j
		cmp	ax, 3E00h
		jnz	short loc_22530
		jmp	loc_2244E
; ---------------------------------------------------------------------------

loc_22530:				; CODE XREF: sub_223FA+131j
		jmp	short loc_224C0
sub_223FA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_22532	proc far		; CODE XREF: _main+263P
					; sub_16B02:loc_16B82P
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	byte_44A8A, 1
		mov	byte_4552F, 2
		sub	si, si
		mov	word_42D02, si
		sub	al, al
		mov	byte_449DA, al
		mov	byte_4393C, al
		mov	word_44DCA, si
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_22532	endp


; =============== S U B	R O U T	I N E =======================================


sub_2255A	proc far		; CODE XREF: sub_21B7A+BAp
		mov	word_46468, 0
		mov	ax, 0A26h
		mov	dx, seg	seg005
		push	dx
		push	ax
		call	sub_302AA
		add	sp, 4
		mov	byte_442E4, 0
		retf
sub_2255A	endp


; =============== S U B	R O U T	I N E =======================================


sub_22576	proc far		; CODE XREF: sub_21B7A+863p
		mov	ax, 0Ah
		cwd
		push	dx
		push	ax
		call	sub_32805
		add	sp, 4
		mov	ax, 0A26h
		mov	dx, seg	seg005
		push	dx
		push	ax
		call	sub_302DE
		add	sp, 4
		retf
sub_22576	endp

; ---------------------------------------------------------------------------
		align 2
		call	sub_3031D
		or	ax, ax
		jnz	short loc_225A2
		jmp	locret_22696
; ---------------------------------------------------------------------------

loc_225A2:				; CODE XREF: seg005:0A2Dj
		cmp	byte_442E4, 0
		jz	short loc_225AC
		jmp	locret_22696
; ---------------------------------------------------------------------------

loc_225AC:				; CODE XREF: seg005:0A37j
		inc	byte_442E4
		cmp	byte_442E4, 1
		jz	short loc_225BA
		jmp	loc_22692
; ---------------------------------------------------------------------------

loc_225BA:				; CODE XREF: seg005:0A45j
		inc	word_443F4
		mov	ax, word_4499C
		cmp	word_443F4, ax
		jl	short loc_225FE
		mov	ax, word_449E4
		cmp	word_44D1E, ax
		jz	short loc_225FE
		push	word_443F4
		mov	ax, 22h	; '"'
		imul	word_44D1E
		add	ax, 97DCh
		push	ax
		call	sub_18D06
		add	sp, 4
		mov	word_443F4, 0
		inc	word_44D1E
		cmp	word_44D1E, 28h	; '('
		jnz	short loc_225FE
		mov	word_44D1E, 0

loc_225FE:				; CODE XREF: seg005:0A55j seg005:0A5Ej ...
		cmp	byte_449DA, 0
		jz	short loc_22608
		jmp	loc_22692
; ---------------------------------------------------------------------------

loc_22608:				; CODE XREF: seg005:0A93j
		cmp	byte_46467, 0
		jz	short loc_22612
		jmp	loc_22692
; ---------------------------------------------------------------------------

loc_22612:				; CODE XREF: seg005:0A9Dj
		cmp	byte_454B8, 0
		jz	short loc_22620
		cmp	byte_45DB2, 2
		jz	short loc_22692

loc_22620:				; CODE XREF: seg005:0AA7j
		cmp	byte_45DB2, 0
		jnz	short loc_2263E
		mov	ax, word_445CE
		cmp	word_445CC, ax
		jl	short loc_2263E
		mov	byte_454B8, 1
		call	sub_188A4
		jmp	short loc_22692
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_2263E:				; CODE XREF: seg005:0AB5j seg005:0ABEj
		dec	byte_44A8A
		jnz	short loc_22692
		mov	al, byte ptr word_4499C
		mov	byte_44A8A, al
		inc	word_46468
		cmp	byte_45DB2, 2
		jnz	short loc_22688
		mov	al, byte_449E6
		cbw
		cmp	ax, 2
		jz	short loc_22666
		cmp	ax, 3
		jz	short loc_2267E
		jmp	short loc_22688
; ---------------------------------------------------------------------------
		align 2

loc_22666:				; CODE XREF: seg005:0AECj
		dec	byte_4552F
		jnz	short loc_22692
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_22698
		add	sp, 2
		mov	byte_4552F, 2
		jmp	short loc_22692
; ---------------------------------------------------------------------------
		align 2

loc_2267E:				; CODE XREF: seg005:0AF1j
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_22698
		add	sp, 2

loc_22688:				; CODE XREF: seg005:0AE3j seg005:0AF3j
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_22698
		add	sp, 2

loc_22692:				; CODE XREF: seg005:0A47j seg005:0A95j ...
		dec	byte_442E4

locret_22696:				; CODE XREF: seg005:0A2Fj seg005:0A39j
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_22698	proc far		; CODE XREF: sub_21B7A+7D2p
					; seg005:0B00p	...

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		cmp	[bp+arg_0], 0
		jz	short loc_226AC

loc_226A6:				; CODE XREF: sub_22698+53j
					; sub_22698+5Aj ...
		sub	si, si
		jmp	loc_22817
; ---------------------------------------------------------------------------
		align 2

loc_226AC:				; CODE XREF: sub_22698+Cj
		cmp	byte_45DB2, 2
		jnz	short loc_226E6
		mov	ax, word_42D02
		cmp	word_449BC, ax
		jbe	short loc_226C6
		inc	word_42D02
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_226C6:				; CODE XREF: sub_22698+22j
		cmp	byte_449DA, 0
		jz	short loc_226D0
		jmp	loc_22985
; ---------------------------------------------------------------------------

loc_226D0:				; CODE XREF: sub_22698+33j
		mov	byte_454B8, 1
		call	sub_188A4

loc_226DA:				; CODE XREF: sub_22698+1A1j
		mov	byte_449DA, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_226E6:				; CODE XREF: sub_22698+19j
		cmp	byte_449DA, 0
		jnz	short loc_226A6
		cmp	byte_4488A, 0
		jnz	short loc_226A6
		cmp	byte_45DB2, 1
		jz	short loc_226A6
		cmp	byte_45E1A, 0
		jnz	short loc_22725
		cmp	byte_4393C, 0
		jnz	short loc_22725
		mov	ax, word_449D0
		shl	ax, 1
		shl	ax, 1
		cmp	ax, word_445D4
		jnb	short loc_22725
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_195E6
		add	sp, 4

loc_22725:				; CODE XREF: sub_22698+68j
					; sub_22698+6Fj ...
		cmp	byte_3B8F2, 0
		jnz	short loc_22736
		cmp	byte_3FE00, 0
		jnz	short loc_22736
		jmp	loc_227E8
; ---------------------------------------------------------------------------

loc_22736:				; CODE XREF: sub_22698+92j
					; sub_22698+99j
		cmp	byte_3B8F2, 0
		jz	short loc_2279A
		mov	ax, 0AA5Eh
		push	ax
		mov	ax, 0A9FCh
		push	ax
		mov	ax, 8B78h
		push	ax
		call	sub_36A60
		add	sp, 6
		mov	di, word_4616C
		sub	di, 0A0h ; '†'
		push	di		; int
		call	_abs
		add	sp, 2
		cmp	ax, 12h
		jge	short loc_2276C
		sub	di, di
		jmp	short loc_22779
; ---------------------------------------------------------------------------
		align 2

loc_2276C:				; CODE XREF: sub_22698+CDj
		or	di, di
		jle	short loc_22776
		sub	di, 12h
		jmp	short loc_22779
; ---------------------------------------------------------------------------
		align 2

loc_22776:				; CODE XREF: sub_22698+D6j
		add	di, 12h

loc_22779:				; CODE XREF: sub_22698+D1j
					; sub_22698+DBj
		mov	ax, di
		mov	byte_40D6A, al
		test	byte ptr word_442E8, 1
		jz	short loc_2278A
		mov	si, 2
		jmp	short loc_227D2
; ---------------------------------------------------------------------------

loc_2278A:				; CODE XREF: sub_22698+EBj
		test	byte ptr word_442E8, 2
		jz	short loc_22796
		mov	si, 1
		jmp	short loc_227D2
; ---------------------------------------------------------------------------

loc_22796:				; CODE XREF: sub_22698+F7j
		sub	si, si
		jmp	short loc_227D2
; ---------------------------------------------------------------------------

loc_2279A:				; CODE XREF: sub_22698+A3j
		call	sub_307E3
		mov	byte_40D6A, al
		or	al, al
		jle	short loc_227B0
		cbw
		mov	bx, ax
		mov	al, [bx+30ECh]
		jmp	short loc_227C5
; ---------------------------------------------------------------------------
		align 2

loc_227B0:				; CODE XREF: sub_22698+10Cj
		cmp	byte_40D6A, 0
		jge	short loc_227C8
		mov	al, byte_40D6A
		cbw
		mov	bx, ax
		neg	bx
		mov	al, [bx+30ECh]
		neg	al

loc_227C5:				; CODE XREF: sub_22698+115j
		mov	byte_40D6A, al

loc_227C8:				; CODE XREF: sub_22698+11Dj
		call	sub_30538
		mov	si, ax
		and	si, 33h

loc_227D2:				; CODE XREF: sub_22698+F0j
					; sub_22698+FCj ...
		mov	di, word_42D02
		and	di, 3Fh
		mov	al, byte_40D6A
		mov	[di-74DEh], al
		mov	byte ptr [di-7486h], 1
		jmp	short loc_227EF
; ---------------------------------------------------------------------------
		align 2

loc_227E8:				; CODE XREF: sub_22698+9Bj
		call	sub_30538
		mov	si, ax

loc_227EF:				; CODE XREF: sub_22698+14Dj
		mov	ax, 1Eh
		push	ax
		call	sub_30A0D
		add	sp, 2
		or	ax, ax
		jz	short loc_22803
		or	si, 10h

loc_22803:				; CODE XREF: sub_22698+165j
		mov	ax, 2Ch	; ','
		push	ax
		call	sub_30A0D
		add	sp, 2
		or	ax, ax
		jz	short loc_22817
		or	si, 20h

loc_22817:				; CODE XREF: sub_22698+10j
					; sub_22698+179j
		mov	ax, 5DCh
		imul	word_449D0
		mov	cx, word_42D02
		add	cx, word_45A24
		cmp	ax, cx
		ja	short loc_2283C
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	sub_195E6
		add	sp, 4
		jmp	loc_226DA
; ---------------------------------------------------------------------------

loc_2283C:				; CODE XREF: sub_22698+190j
		cmp	word_42D02, 2EE0h
		jz	short loc_22847
		jmp	loc_2296C
; ---------------------------------------------------------------------------

loc_22847:				; CODE XREF: sub_22698+1AAj
		cmp	word_45A24, 0
		jnz	short loc_22866
		cmp	byte_45D3E, 0
		jnz	short loc_22866
		mov	byte_45D3E, 1
		mov	byte_46467, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_22866:				; CODE XREF: sub_22698+1B4j
					; sub_22698+1BBj
		sub	di, di
		jmp	loc_22909
; ---------------------------------------------------------------------------
		align 2

loc_2286C:				; CODE XREF: sub_22698+289j
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, di
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, 5A0h
		adc	dx, 0
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	es, dx
		mov	bx, ax
		mov	ax, [bp+var_6]
		sub	es:[bx], ax
		mov	ax, 460h
		cwd
		push	dx
		push	ax
		mov	ax, di
		cwd
		push	dx
		push	ax
		call	__aFlmul
		add	ax, 460h
		adc	dx, 0
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	cx, 460h
		sub	bx, bx
		push	bx
		push	cx
		mov	cx, ax
		mov	ax, di
		mov	bx, dx
		cwd
		push	dx
		push	ax
		mov	[bp+var_A], cx
		mov	[bp+var_8], bx
		call	__aFlmul
		add	ax, word_45A20
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, word_45A22
		mov	bx, ax
		mov	es, dx
		mov	ax, [bp+var_A]
		mov	dx, [bp+var_8]
		push	si
		push	di
		mov	di, bx
		mov	si, ax
		push	ds
		mov	ds, dx
		mov	cx, 230h
		repne movsw
		pop	ds
		pop	di
		pop	si
		inc	di

loc_22909:				; CODE XREF: sub_22698+1D0j
		mov	ax, 1Eh
		imul	word_449D0
		mov	[bp+var_6], ax
		mov	ax, 2EE0h
		cwd
		mov	cx, [bp+var_6]
		idiv	cx
		dec	ax
		cmp	ax, di
		jle	short loc_22924
		jmp	loc_2286C
; ---------------------------------------------------------------------------

loc_22924:				; CODE XREF: sub_22698+287j
		sub	di, di
		jmp	short loc_2293E
; ---------------------------------------------------------------------------

loc_22928:				; CODE XREF: sub_22698+2B8j
		mov	bx, [bp+var_A]
		add	bx, word ptr dword_4562E
		mov	es, word ptr dword_4562E+2
		mov	al, es:[bx+di]
		mov	bx, word ptr dword_4562E
		mov	es:[bx+di], al
		inc	di

loc_2293E:				; CODE XREF: sub_22698+28Ej
		mov	ax, 1Eh
		imul	word_449D0
		mov	[bp+var_A], ax
		mov	ax, 2EE0h
		sub	ax, [bp+var_A]
		cmp	ax, di
		jg	short loc_22928
		mov	ax, 1Eh
		imul	word_449D0
		mov	[bp+var_A], ax
		sub	word_42D02, ax
		sub	word_449BC, ax
		add	word_45A24, ax
		sub	word_445D4, ax

loc_2296C:				; CODE XREF: sub_22698+1ACj
		mov	bx, word_42D02
		inc	word_42D02
		add	bx, word ptr dword_4562E
		mov	es, word ptr dword_4562E+2
		mov	ax, si
		mov	es:[bx], al
		inc	word_449BC

loc_22985:				; CODE XREF: sub_22698+35j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_22698	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2298C	proc far		; CODE XREF: sub_17008:loc_170DCP

var_34		= dword	ptr -34h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_14		= word ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 34h
		push	di
		push	si
		mov	[bp+var_2A], 1
		cmp	byte_449AA, 0
		jz	short loc_229A5
		mov	[bp+var_2A], 2

loc_229A5:				; CODE XREF: sub_2298C+12j
		sub	si, si
		jmp	loc_22C53
; ---------------------------------------------------------------------------

loc_229AA:				; CODE XREF: sub_2298C+2F5j
		mov	[bp+var_24], 8F46h

loc_229AF:				; CODE XREF: sub_2298C+2FDj
		mov	bx, [bp+var_24]
		mov	ax, [bx+4]
		mov	dx, [bx+6]
		mov	cl, 6

loc_229BA:				; CODE XREF: sub_2298C+34j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_229BA
		mov	[bp+var_1A], ax
		mov	bx, [bp+var_24]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cl, 6

loc_229CF:				; CODE XREF: sub_2298C+49j
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_229CF
		mov	[bp+var_1C], ax
		mov	bx, [bp+var_24]
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	cl, 6

loc_229E5:				; CODE XREF: sub_2298C+5Fj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_229E5
		mov	[bp+var_18], ax
		mov	bx, [bp+var_24]
		push	si
		push	di
		lea	di, [bp+var_6]
		lea	si, [bx+0A4h]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, [bp+var_24]
		mov	ax, [bx+48h]
		mov	[bp+var_E], ax
		or	si, si
		jnz	short loc_22A1E
		cmp	byte_448EF, 0
		jnz	short loc_22A40
		cmp	byte_448F0, 0
		jnz	short loc_22A40

loc_22A1E:				; CODE XREF: sub_2298C+82j
		cmp	word ptr [bx+0B6h], 0
		jnz	short loc_22A40
		cmp	byte ptr [bx+0C9h], 0
		jnz	short loc_22A40
		cmp	word ptr [bx+4Ah], 0FFFFh
		jz	short loc_22A40
		cmp	[bp+var_E], 80h	; 'Ä'
		jle	short loc_22A4D
		cmp	[bp+var_E], 380h
		jge	short loc_22A4D

loc_22A40:				; CODE XREF: sub_2298C+89j
					; sub_2298C+90j ...
		push	si
		push	di
		lea	di, [bp+var_6]
		lea	si, [bp+var_1C]
		movsw
		movsw
		movsw
		pop	di
		pop	si

loc_22A4D:				; CODE XREF: sub_2298C+ABj
					; sub_2298C+B2j
		mov	[bp+var_22], 1C2h
		mov	ax, [bp+var_1A]
		add	ax, 10Eh
		mov	[bp+var_14], ax
		mov	bx, si
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	ax, [bx-71BAh]
		sub	ax, [bp+var_14]
		mov	[bp+var_C], ax
		or	ax, ax
		jz	short loc_22A96
		mov	di, ax
		cmp	di, 1Eh
		jle	short loc_22A80
		mov	di, 1Eh
		jmp	short loc_22A88
; ---------------------------------------------------------------------------
		align 2

loc_22A80:				; CODE XREF: sub_2298C+ECj
		cmp	di, 0FFE2h
		jge	short loc_22A88
		mov	di, 0FFE2h

loc_22A88:				; CODE XREF: sub_2298C+F1j
					; sub_2298C+F7j
		mov	bx, si
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		sub	[bx-71BAh], di

loc_22A96:				; CODE XREF: sub_2298C+E5j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_2E], ax
		mov	ax, [bp+var_2]
		mov	bx, [bp+var_2E]
		sub	ax, [bx-71B8h]
		push	ax
		mov	ax, [bp+var_6]
		sub	ax, [bx-71BCh]
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	[bp+var_10], ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_30], ax
		mov	ax, [bp+var_18]
		mov	bx, [bp+var_30]
		sub	ax, [bx-71B8h]
		push	ax
		mov	ax, [bp+var_1C]
		sub	ax, [bx-71BCh]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	di, ax
		cmp	[bp+var_22], di
		jge	short loc_22B53
		sub	di, [bp+var_22]
		cmp	word_449D0, 14h
		jnz	short loc_22B04
		cmp	di, 78h	; 'x'
		jle	short loc_22B0D
		mov	di, 78h	; 'x'
		jmp	short loc_22B0D
; ---------------------------------------------------------------------------

loc_22B04:				; CODE XREF: sub_2298C+16Cj
		cmp	di, 0F0h ; ''
		jle	short loc_22B0D
		mov	di, 0F0h ; ''

loc_22B0D:				; CODE XREF: sub_2298C+171j
					; sub_2298C+176j ...
		push	[bp+var_10]
		call	sub_326DE
		add	sp, 2
		push	ax
		push	di
		call	sub_30044
		add	sp, 4
		mov	bx, si
		mov	cx, bx
		shl	bx, 1
		add	bx, cx
		shl	bx, 1
		add	[bx-71BCh], ax
		push	[bp+var_10]
		call	sub_3272C
		add	sp, 2
		push	ax
		push	di
		call	sub_30044
		add	sp, 4
		mov	bx, si
		mov	cx, bx
		shl	bx, 1
		add	bx, cx
		shl	bx, 1
		add	[bx-71B8h], ax

loc_22B53:				; CODE XREF: sub_2298C+162j
		mov	ax, word_445D4
		sub	dx, dx
		mov	cx, word_449D0
		sar	cx, 1
		div	cx
		or	dx, dx
		jz	short loc_22B67
		jmp	loc_22C52
; ---------------------------------------------------------------------------

loc_22B67:				; CODE XREF: sub_2298C+1D6j
		mov	[bp+var_2C], 2710h
		mov	[bp+var_A], 0
		jmp	short loc_22BE3
; ---------------------------------------------------------------------------
		align 4

loc_22B74:				; CODE XREF: sub_2298C+2B2j
		mov	ax, [bp+var_20]
		mov	dx, [bp+var_1E]

loc_22B7A:				; CODE XREF: sub_2298C+2C2j
		mov	cx, ax
		mov	ax, [bp+var_2C]
		mov	bx, dx
		cwd
		cmp	bx, dx
		jg	short loc_22BE0
		jl	short loc_22B8C
		cmp	cx, ax
		jnb	short loc_22BE0

loc_22B8C:				; CODE XREF: sub_2298C+1FAj
		cmp	[bp+var_26], 0
		jge	short loc_22BA2
		mov	ax, [bp+var_28]
		mov	dx, [bp+var_26]
		neg	ax
		adc	dx, 0
		neg	dx
		jmp	short loc_22BA8
; ---------------------------------------------------------------------------
		align 2

loc_22BA2:				; CODE XREF: sub_2298C+204j
		mov	ax, [bp+var_28]
		mov	dx, [bp+var_26]

loc_22BA8:				; CODE XREF: sub_2298C+213j
		mov	cx, ax
		mov	ax, [bp+var_2C]
		mov	bx, dx
		cwd
		cmp	bx, dx
		jg	short loc_22BE0
		jl	short loc_22BBA
		cmp	cx, ax
		jnb	short loc_22BE0

loc_22BBA:				; CODE XREF: sub_2298C+228j
		push	[bp+var_28]
		push	[bp+var_20]
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_8], ax
		mov	ax, [bp+var_2C]
		cmp	[bp+var_8], ax
		jge	short loc_22BE0
		mov	al, [bp+var_A]
		mov	[si-6EE5h], al
		mov	ax, [bp+var_8]
		mov	[bp+var_2C], ax

loc_22BE0:				; CODE XREF: sub_2298C+1F8j
					; sub_2298C+1FEj ...
		inc	[bp+var_A]

loc_22BE3:				; CODE XREF: sub_2298C+1E4j
		mov	al, byte_4616E
		cmp	[bp+var_A], al
		jge	short loc_22C52
		mov	al, [bp+var_A]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word_449DC
		mov	dx, word_449DE
		mov	word ptr [bp+var_34], ax
		mov	word ptr [bp+var_34+2],	dx
		mov	ax, [bp+var_1C]
		cwd
		les	bx, [bp+var_34]
		mov	cx, ax
		mov	ax, es:[bx]
		mov	bx, dx
		cwd
		sub	ax, cx
		sbb	dx, bx
		mov	[bp+var_20], ax
		mov	[bp+var_1E], dx
		mov	ax, [bp+var_18]
		cwd
		mov	bx, word ptr [bp+var_34]
		mov	cx, ax
		mov	ax, es:[bx+4]
		mov	bx, dx
		cwd
		sub	ax, cx
		sbb	dx, bx
		mov	[bp+var_28], ax
		mov	[bp+var_26], dx
		cmp	[bp+var_1E], 0
		jl	short loc_22C41
		jmp	loc_22B74
; ---------------------------------------------------------------------------

loc_22C41:				; CODE XREF: sub_2298C+2B0j
		mov	ax, [bp+var_20]
		mov	dx, [bp+var_1E]
		neg	ax
		adc	dx, 0
		neg	dx
		jmp	loc_22B7A
; ---------------------------------------------------------------------------
		align 2

loc_22C52:				; CODE XREF: sub_2298C+1D8j
					; sub_2298C+25Dj
		inc	si

loc_22C53:				; CODE XREF: sub_2298C+1Bj
		cmp	[bp+var_2A], si
		jle	short loc_22C8C
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_2E], ax
		mov	bx, ax
		lea	ax, [bx-71BCh]
		mov	bx, [bp+var_2E]
		push	si
		push	di
		lea	di, [bx-71B0h]
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		pop	di
		pop	si
		or	si, si
		jz	short loc_22C84
		jmp	loc_229AA
; ---------------------------------------------------------------------------

loc_22C84:				; CODE XREF: sub_2298C+2F3j
		mov	[bp+var_24], 8E76h
		jmp	loc_229AF
; ---------------------------------------------------------------------------

loc_22C8C:				; CODE XREF: sub_2298C+2CAj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2298C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_22C92(char *)
sub_22C92	proc far		; CODE XREF: sub_12F4A+1DCP
					; sub_21B7A+5Dp ...

arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		push	di
		push	si
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 310Eh
		push	ax		; int
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0] ; char *
		call	sub_285C2
		add	sp, 8
		mov	byte_3B8FB, 1
		push	word ptr dword_46162+2
		push	word ptr dword_46162
		mov	ax, 95F8h
		push	ax
		call	sub_30AEF
		add	sp, 6
		mov	ax, word ptr dword_46162
		mov	dx, word ptr dword_46162+2
		mov	di, 9234h
		mov	si, ax
		push	ds
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 0Dh
		repne movsw
		pop	ds
		mov	byte_3B8FB, 0
		sub	ax, ax
		pop	si
		pop	di
		pop	bp
		retf
sub_22C92	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_22CE8	proc far		; CODE XREF: sub_23B4C+BB6p

var_6		= word ptr -6
var_4		= word ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		les	bx, dword_46162
		assume es:nothing
		push	si
		mov	di, bx
		mov	si, 9234h
		mov	cx, 0Dh
		repne movsw
		pop	si
		mov	ax, word_449BC
		add	ax, 724h
		cwd
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		mov	byte_3B8FB, 1
		push	dx
		push	ax
		push	es
		push	bx
		push	[bp+arg_0]
		call	sub_3250B
		add	sp, 0Ah
		mov	byte_3B8FB, 0
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_22CE8	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_22D2E	proc far		; CODE XREF: sub_21B7A+438p
					; sub_21B7A+590p ...

var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= byte ptr -1Ah
var_18		= byte ptr -18h
var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_E		= word ptr -0Eh
var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 20h
		push	di
		push	si
		mov	ax, [bp+arg_0]
		or	ax, ax
		jz	short loc_22D5C
		cmp	ax, 1
		jnz	short loc_22D45
		jmp	loc_22F76
; ---------------------------------------------------------------------------

loc_22D45:				; CODE XREF: sub_22D2E+12j
		cmp	ax, 2
		jnz	short loc_22D4D
		jmp	loc_23030
; ---------------------------------------------------------------------------

loc_22D4D:				; CODE XREF: sub_22D2E+1Aj
		cmp	ax, 3
		jnz	short loc_22D55
		jmp	loc_236AC
; ---------------------------------------------------------------------------

loc_22D55:				; CODE XREF: sub_22D2E+22j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_22D5C:				; CODE XREF: sub_22D2E+Dj
		mov	al, byte_449A4
		mov	byte_3E916, al
		mov	al, byte_449A5
		mov	byte_3E917, al
		mov	al, byte_449A6
		mov	byte_3E918, al
		mov	al, byte_449A7
		mov	byte_3E919, al
		mov	al, byte_449A4
		mov	byte_3E920, al
		mov	al, byte_449A5
		mov	byte_3E921, al
		mov	al, byte_449A6
		mov	byte_3E922, al
		mov	al, byte_449A7
		mov	byte_3E923, al
		mov	ax, 31A2h
		push	ax		; char *
		mov	ax, 3
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_40D7C, ax
		mov	word_40D7E, dx
		mov	ax, 31ACh
		push	ax		; char *
		mov	ax, 2
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_40D84, ax
		mov	word_40D86, dx
		mov	ax, 5640h
		push	ax
		mov	ax, 3113h
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_367B2
		add	sp, 8
		mov	ax, 5664h
		push	ax
		mov	ax, 3138h
		push	ax
		push	word_40D86
		push	word_40D84
		call	sub_367B2
		add	sp, 8
		cmp	word_45F84, 0
		jnz	short loc_22E09
		mov	ax, 5618h
		push	ax
		mov	ax, 3151h
		push	ax
		push	word_40D86
		push	word_40D84
		call	sub_367B2
		add	sp, 8

loc_22E09:				; CODE XREF: sub_22D2E+C1j
		mov	ax, 0Fh
		push	ax
		les	bx, dword_40DBC
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_40D80, ax
		mov	word ptr dword_40D80+2,	dx
		mov	ax, 0Fh
		push	ax
		les	bx, dword_40DC0
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_40DEC, ax
		mov	word ptr dword_40DEC+2,	dx
		mov	ax, 0Fh
		push	ax
		les	bx, dword_40DC0
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_40DFC, ax
		mov	word ptr dword_40DFC+2,	dx
		mov	ax, 317Ah
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_C], ax
		mov	word ptr [bp+var_C+2], dx
		push	word ptr dword_40DFC+2
		push	word ptr dword_40DFC
		call	sub_35AF6
		add	sp, 4
		les	bx, [bp+var_C]
		mov	ax, es:[bx+0Ah]
		les	bx, dword_40DC0
		sub	ax, es:[bx+0Ah]
		push	ax
		les	bx, [bp+var_C]
		mov	ax, es:[bx+8]
		les	bx, dword_40DC0
		sub	ax, es:[bx+8]
		push	ax
		push	word ptr [bp+var_C+2]
		push	word ptr [bp+var_C]
		call	sub_33EB4
		add	sp, 8
		call	sub_35B14
		les	bx, [bp+var_C]
		mov	ax, es:[bx+0Ah]
		mov	word_45DBA, ax
		mov	ax, 317Fh
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F92
		add	sp, 6
		or	dx, ax
		jz	short loc_22F12
		mov	ax, 3184h
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F9D
		add	sp, 6
		mov	bx, ax
		mov	es, dx
		mov	ax, es:[bx+2]
		mov	word_461CC, ax
		jmp	short loc_22F18
; ---------------------------------------------------------------------------

loc_22F12:				; CODE XREF: sub_22D2E+1C1j
		mov	word_461CC, 0

loc_22F18:				; CODE XREF: sub_22D2E+1E2j
		mov	ax, 3189h
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F92
		add	sp, 6
		mov	word ptr [bp+var_C], ax
		mov	word ptr [bp+var_C+2], dx
		or	ax, dx
		jz	short loc_22F6A
		les	bx, [bp+var_C]
		mov	ax, es:[bx+0Ah]
		mov	word_461C2, ax
		mov	ax, bx
		mov	word_4549C, ax
		mov	word_4549E, dx
		mov	ax, 318Eh
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F9D
		add	sp, 6
		mov	word_454A0, ax
		mov	word_454A2, dx
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_22F6A:				; CODE XREF: sub_22D2E+206j
		mov	word_461C2, 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_22F76:				; CODE XREF: sub_22D2E+14j
		call	sub_28DB6
		mov	ax, 3193h
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F92
		add	sp, 6
		or	dx, ax
		jz	short loc_22FB1
		mov	ax, 3198h
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33E00
		add	sp, 4

loc_22FB1:				; CODE XREF: sub_22D2E+263j
		mov	ax, 319Dh
		push	ax
		push	word_40D7E
		push	word_40D7C
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33ED2
		add	sp, 4
		push	word_40DB6
		push	word_40DB4
		call	sub_33ED2
		add	sp, 4
		call	sub_28D9E
		sub	si, si
		mov	al, byte_4432A
		cbw
		mov	[bp+var_1E], ax
		mov	bx, ax
		sub	al, al
		mov	[bx-6D98h], al
		mov	bx, [bp+var_1E]
		mov	[bx+568Ah], al
		mov	ax, [bp+var_1E]
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		mov	[bx+5686h], si
		mov	bx, [bp+var_1E]
		sub	al, al
		mov	[bx+5680h], al
		dec	si
		mov	bx, [bp+var_20]
		mov	[bx+5690h], si
		mov	bx, [bp+var_20]
		mov	[bx+5608h], si
		mov	bx, [bp+var_20]
		mov	[bx+55FCh], si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_23030:				; CODE XREF: sub_22D2E+1Cj
		mov	al, byte_446B1
		cbw
		mov	cx, ax
		mov	al, byte_446B0
		cbw
		or	ax, cx
		jnz	short loc_2309A
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		cmp	byte ptr [bx+568Ah], 0
		jz	short loc_2309A
		cmp	byte_46436, 0
		jnz	short loc_23057
		call	sub_28DB6

loc_23057:				; CODE XREF: sub_22D2E+322j
		push	word_459D4
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		les	bx, dword_40DC0
		push	word ptr es:[bx+0Ah]
		push	word ptr es:[bx+8]
		les	bx, dword_40DFC
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC
		add	sp, 8
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	byte ptr [bx+568Ah], 0
		jmp	loc_2319D
; ---------------------------------------------------------------------------

loc_2309A:				; CODE XREF: sub_22D2E+30Ej
					; sub_22D2E+31Bj
		mov	al, byte_4432A
		cbw
		mov	[bp+var_20], ax
		mov	bx, ax
		mov	al, byte_446B0
		cmp	[bx+568Ah], al
		jnz	short loc_230DE
		mov	ax, bx
		shl	ax, 1
		mov	[bp+var_1E], ax
		mov	bx, ax
		mov	ax, word_4461A
		cmp	[bx+5600h], ax
		jnz	short loc_230DE
		mov	ax, word_4461E
		cmp	[bx+5604h], ax
		jnz	short loc_230DE
		cmp	byte_446B1, 0
		jnz	short loc_230D1
		jmp	loc_2319D
; ---------------------------------------------------------------------------

loc_230D1:				; CODE XREF: sub_22D2E+39Ej
		mov	bx, [bp+var_20]
		cmp	byte ptr [bx+568Ah], 0
		jz	short loc_230DE
		jmp	loc_2319D
; ---------------------------------------------------------------------------

loc_230DE:				; CODE XREF: sub_22D2E+37Cj
					; sub_22D2E+38Ej ...
		push	word ptr dword_40DEC+2
		push	word ptr dword_40DEC
		call	sub_35AF6
		add	sp, 4
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	byte ptr [bx+568Ah], 1
		sub	ax, ax
		push	ax
		push	ax
		push	word ptr dword_40DC0+2
		push	word ptr dword_40DC0
		call	sub_33EB4
		add	sp, 8
		mov	si, word_4461A
		mov	di, word_4461E
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		mov	[bx+5600h], si
		mov	bx, [bp+var_20]
		mov	[bx+5604h], di
		push	di
		push	si
		push	word_40DDA
		push	word_40DD8
		call	sub_3386C
		add	sp, 8
		push	di
		push	si
		push	word_40DD6
		push	word_40DD4
		call	sub_34060
		add	sp, 8
		cmp	byte_46436, 0
		jz	short loc_2315E
		call	sub_3A9A0
		jmp	short loc_23168
; ---------------------------------------------------------------------------
		align 2

loc_2315E:				; CODE XREF: sub_22D2E+426j
		call	sub_28F3C
		call	sub_28DB6

loc_23168:				; CODE XREF: sub_22D2E+42Dj
		push	word_459D4
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		les	bx, dword_40DC0
		push	word ptr es:[bx+0Ah]
		push	word ptr es:[bx+8]
		les	bx, dword_40DEC
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC
		add	sp, 8

loc_2319D:				; CODE XREF: sub_22D2E+369j
					; sub_22D2E+3A0j ...
		mov	[bp+var_1A], 0
		mov	ax, word_44606
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	cx, 3
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_4], ax
		mov	[bp+var_2], 1
		cmp	ax, 0FFF6h
		jge	short loc_231C4
		mov	[bp+var_2], 0
		jmp	short loc_231CE
; ---------------------------------------------------------------------------

loc_231C4:				; CODE XREF: sub_22D2E+48Ej
		cmp	[bp+var_4], 0Ah
		jle	short loc_231CE
		mov	[bp+var_2], 2

loc_231CE:				; CODE XREF: sub_22D2E+494j
					; sub_22D2E+49Aj
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	al, [bp+var_2]
		cmp	[bx+5680h], al
		jnz	short loc_231E7
		cmp	byte_454A4, 0
		jnz	short loc_231E7
		jmp	loc_23286
; ---------------------------------------------------------------------------

loc_231E7:				; CODE XREF: sub_22D2E+4ADj
					; sub_22D2E+4B4j
		cmp	byte_46436, 0
		jnz	short loc_231F3
		call	sub_28DB6

loc_231F3:				; CODE XREF: sub_22D2E+4BEj
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		cmp	word ptr [bx+5686h], 0
		jz	short loc_23239
		push	word ptr [bx+5686h]
		push	word ptr [bx+5682h]
		mov	al, byte_44346
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+5676h]
		push	word ptr [bx+5674h]
		call	sub_33BBC
		add	sp, 8
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	word ptr [bx+5686h], 0
		mov	[bp+var_1A], 1

loc_23239:				; CODE XREF: sub_22D2E+4D5j
		mov	al, [bp+var_2]
		cbw
		or	ax, ax
		jz	short loc_2324E
		cmp	ax, 1
		jz	short loc_23272
		cmp	ax, 2
		jz	short loc_2327C
		jmp	short loc_2325E
; ---------------------------------------------------------------------------
		align 2

loc_2324E:				; CODE XREF: sub_22D2E+511j
		push	word_40DB2
		push	word_40DB0

loc_23256:				; CODE XREF: sub_22D2E+54Cj
					; sub_22D2E+556j
		call	sub_33ED2
		add	sp, 4

loc_2325E:				; CODE XREF: sub_22D2E+51Dj
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	al, [bp+var_2]
		mov	[bx+5680h], al
		mov	[bp+var_18], 1
		jmp	short loc_2328A
; ---------------------------------------------------------------------------
		align 2

loc_23272:				; CODE XREF: sub_22D2E+516j
		push	word_40DB6
		push	word_40DB4
		jmp	short loc_23256
; ---------------------------------------------------------------------------

loc_2327C:				; CODE XREF: sub_22D2E+51Bj
		push	word_40DBA
		push	word_40DB8
		jmp	short loc_23256
; ---------------------------------------------------------------------------

loc_23286:				; CODE XREF: sub_22D2E+4B6j
		mov	[bp+var_18], 0

loc_2328A:				; CODE XREF: sub_22D2E+541j
		mov	ax, word_45F84
		cmp	ax, 0FFFFh
		jz	short loc_232B6
		or	ax, ax
		jnz	short loc_23299
		jmp	loc_233A2
; ---------------------------------------------------------------------------

loc_23299:				; CODE XREF: sub_22D2E+566j
		mov	[bp+var_6], 0
		mov	ax, word_44610
		sub	dx, dx
		mov	cx, 280h
		div	cx
		mov	si, ax
		cmp	word_45F86, si
		jg	short loc_232BC
		mov	si, word_45F86
		dec	si
		jmp	short loc_232BC
; ---------------------------------------------------------------------------

loc_232B6:				; CODE XREF: sub_22D2E+562j
		sub	si, si
		mov	[bp+var_6], 2

loc_232BC:				; CODE XREF: sub_22D2E+57Fj
					; sub_22D2E+586j ...
		mov	ax, word_44608
		mov	cl, 7
		shr	ax, cl
		mov	di, ax
		cmp	word_4605C, di
		jg	short loc_232D0
		mov	di, word_4605C
		dec	di

loc_232D0:				; CODE XREF: sub_22D2E+59Bj
		cmp	[bp+var_18], 0
		jnz	short loc_232F7
		cmp	byte_454A4, 0
		jnz	short loc_232F7
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		cmp	[bx+5608h], si
		jnz	short loc_232F7
		cmp	[bx+55FCh], di
		jnz	short loc_232F7
		jmp	loc_23540
; ---------------------------------------------------------------------------

loc_232F7:				; CODE XREF: sub_22D2E+5A6j
					; sub_22D2E+5ADj ...
		cmp	byte_46436, 0
		jnz	short loc_23303
		call	sub_28DB6

loc_23303:				; CODE XREF: sub_22D2E+5CEj
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		cmp	word ptr [bx+5686h], 0
		jz	short loc_23349
		push	word ptr [bx+5686h]
		push	word ptr [bx+5682h]
		mov	al, byte_44346
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+5676h]
		push	word ptr [bx+5674h]
		call	sub_33BBC
		add	sp, 8
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	word ptr [bx+5686h], 0
		mov	[bp+var_1A], 1

loc_23349:				; CODE XREF: sub_22D2E+5E5j
		push	word ptr dword_40D80+2
		push	word ptr dword_40D80
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		push	word ptr dword_40DBC+2
		push	word ptr dword_40DBC
		call	sub_33DE2
		add	sp, 8
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		mov	[bx+5608h], si
		mov	bx, [bp+var_20]
		mov	[bx+55FCh], di
		cmp	[bp+var_6], 1
		jz	short loc_2338C
		jmp	loc_23456
; ---------------------------------------------------------------------------

loc_2338C:				; CODE XREF: sub_22D2E+659j
		mov	[bp+var_8], 0
		cmp	si, 0C8h ; '»'
		jl	short loc_233B2
		mov	[bp+var_8], 2
		sub	si, 0C8h ; '»'
		jmp	short loc_233BF
; ---------------------------------------------------------------------------

loc_233A2:				; CODE XREF: sub_22D2E+568j
		mov	[bp+var_6], 1
		mov	ax, word_44610
		mov	cl, 8
		shr	ax, cl
		mov	si, ax
		jmp	loc_232BC
; ---------------------------------------------------------------------------

loc_233B2:				; CODE XREF: sub_22D2E+667j
		cmp	si, 64h	; 'd'
		jl	short loc_233BF
		mov	[bp+var_8], 1
		sub	si, 64h	; 'd'

loc_233BF:				; CODE XREF: sub_22D2E+672j
					; sub_22D2E+687j
		cmp	[bp+var_8], 0
		jz	short loc_233EA
		mov	al, byte_45F89
		sub	ah, ah
		push	ax
		mov	al, byte_45F88
		push	ax
		mov	bx, [bp+var_8]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+561Ah]
		push	word ptr [bx+5618h]
		call	sub_34084
		add	sp, 8
		mov	[bp+var_1C], 1

loc_233EA:				; CODE XREF: sub_22D2E+695j
		mov	ax, si
		cwd
		mov	cx, 0Ah
		idiv	cx
		mov	[bp+var_8], ax
		or	ax, ax
		jnz	short loc_233FF
		cmp	[bp+var_1C], 0
		jz	short loc_23433

loc_233FF:				; CODE XREF: sub_22D2E+6C9j
		mov	al, byte_45F8B
		sub	ah, ah
		push	ax
		mov	al, byte_45F8A
		push	ax
		mov	bx, [bp+var_8]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+561Ah]
		push	word ptr [bx+5618h]
		call	sub_34084
		add	sp, 8
		mov	ax, [bp+var_8]
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		sub	si, ax
		mov	[bp+var_1C], 1

loc_23433:				; CODE XREF: sub_22D2E+6CFj
		mov	al, byte_45F8D
		sub	ah, ah
		push	ax
		mov	al, byte_45F8C
		push	ax
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+561Ah]
		push	word ptr [bx+5618h]
		call	sub_34084
		add	sp, 8
		jmp	short loc_23485
; ---------------------------------------------------------------------------
		align 2

loc_23456:				; CODE XREF: sub_22D2E+65Bj
		cmp	[bp+var_6], 0
		jnz	short loc_23485
		mov	ax, si
		shl	ax, 1
		mov	[bp+var_20], ax
		push	word_44D60
		mov	bx, ax
		mov	al, [bx-57E7h]
		sub	ah, ah
		push	ax
		mov	al, [bx-57E8h]
		push	ax
		push	word_45F84
		push	word_45F82
		call	sub_2FDDE
		add	sp, 0Ah

loc_23485:				; CODE XREF: sub_22D2E+725j
					; sub_22D2E+72Cj
		mov	ax, di
		shl	ax, 1
		mov	[bp+var_20], ax
		push	word_44D60
		mov	bx, ax
		mov	al, [bx-5711h]
		sub	ah, ah
		push	ax
		mov	al, [bx-5712h]
		push	ax
		push	word_4605A
		push	word_46058
		call	sub_2FDDE
		add	sp, 0Ah
		mov	al, [bp+var_2]
		cbw
		or	ax, ax
		jz	short loc_234BE
		cmp	ax, 2
		jz	short loc_234EC
		jmp	short loc_234DE
; ---------------------------------------------------------------------------
		align 2

loc_234BE:				; CODE XREF: sub_22D2E+786j
		push	word_40DCE
		push	word_40DCC
		call	sub_33B02
		add	sp, 4
		push	word_40DC6
		push	word_40DC4

loc_234D6:				; CODE XREF: sub_22D2E+7D6j
		call	sub_342F6
		add	sp, 4

loc_234DE:				; CODE XREF: sub_22D2E+78Dj
		cmp	byte_46436, 0
		jz	short loc_23506
		call	sub_3A9A0
		jmp	short loc_2350B
; ---------------------------------------------------------------------------

loc_234EC:				; CODE XREF: sub_22D2E+78Bj
		push	word_40DD2
		push	word_40DD0
		call	sub_33B02
		add	sp, 4
		push	word_40DCA
		push	word_40DC8
		jmp	short loc_234D6
; ---------------------------------------------------------------------------

loc_23506:				; CODE XREF: sub_22D2E+7B5j
		call	sub_28F3C

loc_2350B:				; CODE XREF: sub_22D2E+7BCj
		push	word_459D4
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		les	bx, dword_40DBC
		push	word ptr es:[bx+0Ah]
		push	word ptr es:[bx+8]
		les	bx, dword_40D80
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BBC
		add	sp, 8

loc_23540:				; CODE XREF: sub_22D2E+5C6j
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bp+var_4]
		cmp	[bx+5690h], ax
		jnz	short loc_23561
		cmp	byte_454A4, 0
		jnz	short loc_23561
		cmp	[bp+var_1A], 0
		jnz	short loc_23561
		jmp	loc_236A0
; ---------------------------------------------------------------------------

loc_23561:				; CODE XREF: sub_22D2E+821j
					; sub_22D2E+828j ...
		cmp	byte_46436, 0
		jnz	short loc_2356D
		call	sub_28DB6

loc_2356D:				; CODE XREF: sub_22D2E+838j
		push	word_459D4
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	bx, ax
		cmp	word ptr [bx+5686h], 0
		jz	short loc_235C5
		push	word ptr [bx+5686h]
		push	word ptr [bx+5682h]
		mov	al, byte_44346
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+5676h]
		push	word ptr [bx+5674h]
		call	sub_33BBC
		add	sp, 8
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	word ptr [bx+5686h], 0

loc_235C5:				; CODE XREF: sub_22D2E+865j
		cmp	[bp+var_4], 0
		jge	short loc_235D2
		mov	ax, [bp+var_4]
		neg	ax
		jmp	short loc_235D5
; ---------------------------------------------------------------------------

loc_235D2:				; CODE XREF: sub_22D2E+89Bj
		mov	ax, [bp+var_4]

loc_235D5:				; CODE XREF: sub_22D2E+8A2j
		shl	ax, 1
		add	ax, 0A7D4h
		mov	[bp+var_E], ax
		mov	bx, ax
		mov	al, [bx+1]
		mov	[bp+var_16], al
		mov	al, [bx]
		mov	[bp+var_14], al
		cmp	[bp+var_4], 0
		jge	short loc_235F9
		sub	al, byte_45F44
		shl	al, 1
		sub	[bp+var_14], al

loc_235F9:				; CODE XREF: sub_22D2E+8C0j
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_20], ax
		mov	al, [bp+var_14]
		sub	ah, ah
		les	bx, dword_40DDC
		sub	ax, es:[bx+4]
		and	ax, word_454D4
		mov	bx, [bp+var_20]
		mov	[bx+5682h], ax
		mov	al, [bp+var_16]
		sub	ah, ah
		les	bx, dword_40DDC
		sub	ax, es:[bx+6]
		mov	bx, [bp+var_20]
		mov	[bx+5686h], ax
		mov	al, [bp+var_16]
		sub	ah, ah
		les	bx, dword_40DDC
		sub	ax, es:[bx+6]
		push	ax
		mov	bx, [bp+var_20]
		push	word ptr [bx+5682h]
		mov	al, byte_44346
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+5676h]
		push	word ptr [bx+5674h]
		call	sub_3475A
		add	sp, 8
		mov	al, [bp+var_16]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_14]
		push	ax
		push	word_40DE2
		push	word_40DE0
		call	sub_3386C
		add	sp, 8
		mov	al, [bp+var_16]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_14]
		push	ax
		push	word ptr dword_40DDC+2
		push	word ptr dword_40DDC
		call	sub_34060
		add	sp, 8
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bp+var_4]
		mov	[bx+5690h], ax

loc_236A0:				; CODE XREF: sub_22D2E+830j
		call	sub_28D9E
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_236AC:				; CODE XREF: sub_22D2E+24j
		push	word ptr dword_40DFC+2
		push	word ptr dword_40DFC
		call	sub_324AA
		add	sp, 4
		push	word ptr dword_40DEC+2
		push	word ptr dword_40DEC
		call	sub_324AA
		add	sp, 4
		push	word ptr dword_40D80+2
		push	word ptr dword_40D80
		call	sub_324AA
		add	sp, 4
		push	word_40D86
		push	word_40D84
		call	sub_3147C
		add	sp, 4
		push	word_40D7E
		push	word_40D7C
		call	sub_3147C
		add	sp, 4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_22D2E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_23702	proc far		; CODE XREF: sub_21B7A+96p
					; sub_23B4C+ACAp

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 8
		sub	ax, ax
		mov	word ptr dword_44D26+2,	ax
		mov	word ptr dword_44D26, ax
		mov	ax, 2
		push	ax
		call	sub_2A1A6
		add	sp, 2
		mov	ax, 923Bh
		push	ax
		mov	ax, 9234h
		push	ax
		call	sub_1FF92
		add	sp, 4
		mov	al, byte_449A4
		mov	byte_3B90D, al
		mov	al, byte_449A5
		mov	byte_3B90E, al
		mov	al, byte_449A6
		mov	byte_3B90F, al
		mov	al, byte_449A7
		mov	byte_3B910, al
		mov	ax, 19Ah
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		sub	ax, ax
		push	ax
		push	dx
		push	[bp+var_4]
		call	sub_19CA2
		add	sp, 6
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28A78
		add	sp, 4
		cmp	byte_449AA, 0
		jz	short loc_237D3
		mov	al, byte_449AB
		mov	byte_3B90D, al
		mov	al, byte_449AC
		mov	byte_3B90E, al
		mov	al, byte_449AD
		mov	byte_3B90F, al
		mov	al, byte_449AE
		mov	byte_3B910, al
		mov	ax, 19Ah
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	ax, 1
		push	ax
		push	dx
		push	[bp+var_4]
		call	sub_19CA2
		add	sp, 6
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_28A78
		add	sp, 4
		mov	ax, 4
		push	ax
		call	sub_2A1A6
		add	sp, 2
		call	sub_217CA

loc_237D3:				; CODE XREF: sub_23702+76j
		mov	ax, 3
		push	ax
		call	sub_2A1A6
		add	sp, 2
		mov	ax, 31B5h
		push	ax		; char *
		mov	ax, 5
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_454A6, ax
		mov	word_454A8, dx
		mov	ax, 31BAh
		push	ax		; char *
		mov	ax, 6
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_45E0E, ax
		mov	word_45E10, dx
		call	sub_26BAE
		push	word_45E10
		push	word_45E0E
		push	word_454A8
		push	word_454A6
		mov	ax, 308Ch
		push	ds
		push	ax
		mov	ax, 21h	; '!'
		push	ax
		call	sub_26C3C
		add	sp, 0Eh
		mov	word_43964, ax
		mov	byte_459D8, 0
		mov	byte_42D26, 0
		mov	byte_42D2A, 0
		cmp	byte_449AA, 0
		jz	short loc_23870
		push	word_45E10
		push	word_45E0E
		push	word_454A8
		push	word_454A6
		mov	ax, 30BCh
		push	ds
		push	ax
		mov	ax, 20h	; ' '
		push	ax
		call	sub_26C3C
		add	sp, 0Eh
		mov	word_4408C, ax

loc_23870:				; CODE XREF: sub_23702+148j
		mov	word_44D1E, 0
		mov	word_449E4, 0
		mov	word_443F4, 0
		mov	ax, 31BEh
		push	ax		; char *
		sub	ax, ax
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_459F4, ax
		mov	word_459F6, dx
		mov	ax, word_44CEA
		mov	word_44984, ax
		call	sub_1A096
		cmp	byte_44AE2, 0
		jnz	short loc_238B4
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_22D2E
		add	sp, 2

loc_238B4:				; CODE XREF: sub_23702+1A6j
		cmp	byte_44AE2, 0
		jnz	short loc_238DE
		mov	ax, 31CAh
		push	ax		; char *
		mov	ax, 3
		push	ax		; int
		call	sub_299CA
		add	sp, 4
		mov	word_45D08, ax
		mov	word_45D0A, dx
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6

loc_238DE:				; CODE XREF: sub_23702+1B7j
		mov	ax, 31D1h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	word_449A0, ax
		mov	word_449A2, dx
		mov	ax, 31D6h
		push	ax
		push	dx
		push	word_449A0
		call	sub_28A8C
		add	sp, 6
		mov	word_454C2, ax
		mov	word_454C4, dx
		mov	ax, 31DBh
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28A8C
		add	sp, 6
		mov	word ptr dword_46460, ax
		mov	word ptr dword_46460+2,	dx
		call	sub_1D8D2
		les	bx, dword_44D42
		mov	al, es:[bx+384h]
		sub	ah, ah
		push	ax
		call	sub_1D7A2
		add	sp, 2
		call	sub_1FE94
		or	ax, ax
		jz	short loc_2394E

loc_23946:				; CODE XREF: sub_23702+27Fj
					; sub_23702+284j
		mov	ax, 1
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_2394E:				; CODE XREF: sub_23702+242j
		cmp	byte_46436, 0
		jnz	short loc_239A3
		mov	ax, word_44AE4
		imul	word_461D0
		cwd
		push	dx
		push	ax
		mov	ax, 0FA00h
		sub	dx, dx
		push	dx
		push	ax
		call	__aFldiv
		add	ax, 12h
		adc	dx, 0
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		call	sub_3A484
		cmp	dx, [bp+var_6]
		jg	short loc_23988
		jl	short loc_23946
		cmp	ax, [bp+var_8]
		jbe	short loc_23946

loc_23988:				; CODE XREF: sub_23702+27Dj
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx

loc_239A3:				; CODE XREF: sub_23702+251j
		mov	byte_463E0, 0
		mov	byte_45634, 0FFh
		sub	ax, ax
		mov	sp, bp
		pop	bp
		retf
sub_23702	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_239B4	proc far		; CODE XREF: sub_21B7A+9Ep
					; sub_21B7A+867p ...
		cmp	byte_46436, 0
		jnz	short loc_239D4
		mov	ax, word ptr dword_44D26
		or	ax, word ptr dword_44D26+2
		jz	short loc_239D4
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4

loc_239D4:				; CODE XREF: sub_239B4+5j sub_239B4+Ej
		call	sub_1FF5E
		call	sub_1D8B4
		call	sub_1D92A
		push	word_449A2
		push	word_449A0
		call	sub_28A78
		add	sp, 4
		cmp	byte_44AE2, 0
		jnz	short loc_23A15
		push	word_45D0A
		push	word_45D08
		call	sub_3147C
		add	sp, 4
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_22D2E
		add	sp, 2

loc_23A15:				; CODE XREF: sub_239B4+44j
		push	word_459F6
		push	word_459F4
		call	sub_3147C
		add	sp, 4
		call	sub_26BD5
		push	word_45E10
		push	word_45E0E
		call	sub_3147C
		add	sp, 4
		push	word_454A8
		push	word_454A6
		call	sub_3147C
		add	sp, 4
		call	sub_20438
		retf
sub_239B4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_23A50	proc far		; CODE XREF: sub_21B7A+13Bp
					; sub_21B7A+660p ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 0
		jz	short loc_23A82
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 131h
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_3695C
		add	sp, 8
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0A0h ; '†'
		push	ax
		call	sub_36A2C
		add	sp, 4
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_23A82:				; CODE XREF: sub_23A50+7j
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		call	sub_3695C
		add	sp, 8
		pop	bp
		retf
sub_23A50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_23A98	proc far		; CODE XREF: sub_21B7A+220p

var_A		= byte ptr -0Ah
var_8		= byte ptr -8
var_6		= byte ptr -6

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		mov	si, word_445D4
		and	si, 3Fh
		cmp	byte ptr [si-7486h], 0
		jnz	short loc_23AB1
		jmp	loc_23B45
; ---------------------------------------------------------------------------

loc_23AB1:				; CODE XREF: sub_23A98+14j
		mov	al, [si-74DEh]
		cbw
		mov	di, ax
		mov	ax, word_44612
		mov	cl, 0Ah
		shr	ax, cl
		and	al, 0FCh
		mov	[bp+var_8], al
		cbw
		mov	bx, ax
		add	bx, word_449E8
		mov	al, [bx+1]
		mov	[bp+var_A], al
		cmp	word_44606, di
		jge	short loc_23AE0
		cmp	word_44606, 0FFFFh
		jge	short loc_23AF2
		jmp	short loc_23AED
; ---------------------------------------------------------------------------

loc_23AE0:				; CODE XREF: sub_23A98+3Dj
		cmp	word_44606, di
		jle	short loc_23AF2
		cmp	word_44606, 1
		jle	short loc_23AF2

loc_23AED:				; CODE XREF: sub_23A98+46j
		mov	cl, 2
		shl	[bp+var_A], cl

loc_23AF2:				; CODE XREF: sub_23A98+44j
					; sub_23A98+4Cj ...
		cmp	word_44606, di
		jle	short loc_23B0C
		mov	al, [bp+var_A]
		cbw
		mov	cx, word_44606
		sub	cx, ax
		cmp	cx, di
		jl	short loc_23B0C
		mov	[bp+var_6], 8
		jmp	short loc_23B28
; ---------------------------------------------------------------------------

loc_23B0C:				; CODE XREF: sub_23A98+5Ej
					; sub_23A98+6Cj
		cmp	word_44606, di
		jge	short loc_23B24
		mov	al, [bp+var_A]
		cbw
		add	ax, word_44606
		cmp	ax, di
		jg	short loc_23B24
		mov	[bp+var_6], 4
		jmp	short loc_23B28
; ---------------------------------------------------------------------------

loc_23B24:				; CODE XREF: sub_23A98+78j
					; sub_23A98+84j
		mov	[bp+var_6], 0

loc_23B28:				; CODE XREF: sub_23A98+72j
					; sub_23A98+8Aj
		cmp	[bp+var_6], 0
		jz	short loc_23B40
		mov	bx, word_445D4
		add	bx, word ptr dword_4562E
		mov	es, word ptr dword_4562E+2
		mov	al, [bp+var_6]
		or	es:[bx], al

loc_23B40:				; CODE XREF: sub_23A98+94j
		mov	byte ptr [si-7486h], 0

loc_23B45:				; CODE XREF: sub_23A98+16j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_23A98	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_23B4C	proc far		; CODE XREF: sub_21B7A+46Bp
					; sub_21B7A+66Cp ...

var_44		= word ptr -44h
var_42		= word ptr -42h
var_40		= byte ptr -40h
var_3E		= byte ptr -3Eh
var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_3B		= byte ptr -3Bh
var_38		= byte ptr -38h
var_37		= byte ptr -37h
var_36		= byte ptr -36h
var_35		= byte ptr -35h
var_34		= byte ptr -34h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= byte ptr -20h
var_1E		= byte ptr -1Eh
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= byte ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 44h
		push	di
		push	si
		mov	ax, [bp+arg_0]
		or	ax, ax
		jz	short loc_23B70
		cmp	ax, 1
		jz	short loc_23BA6
		cmp	ax, 2
		jz	short loc_23B8D
		cmp	ax, 3
		jnz	short loc_23B6D
		jmp	loc_23FB8
; ---------------------------------------------------------------------------

loc_23B6D:				; CODE XREF: sub_23B4C+1Cj
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_23B70:				; CODE XREF: sub_23B4C+Dj
		mov	ax, 569Eh
		push	ax
		mov	ax, 31E0h
		push	ax
		push	word_45D0A
		push	word_45D08
		call	sub_367B2
		add	sp, 8
		mov	[bp+arg_2], 4

loc_23B8D:				; CODE XREF: sub_23B4C+17j
		sub	si, si

loc_23B8F:				; CODE XREF: sub_23B4C+4Cj
		mov	byte ptr [si+56FAh], 0
		inc	si
		cmp	si, 9
		jl	short loc_23B8F
		mov	bx, [bp+arg_2]
		mov	byte ptr [bx+56FAh], 1
		jmp	loc_24D5E
; ---------------------------------------------------------------------------
		align 2

loc_23BA6:				; CODE XREF: sub_23B4C+12j
		mov	al, byte_4432A
		cbw
		mov	[bp+var_42], ax
		mov	bx, ax
		cmp	byte ptr [bx-6D98h], 0
		jz	short loc_23BB9
		jmp	loc_23C66
; ---------------------------------------------------------------------------

loc_23BB9:				; CODE XREF: sub_23B4C+68j
		mov	byte ptr [bx-6D98h], 1
		mov	bx, [bp+var_42]
		mov	byte ptr [bx+5704h], 0FFh
		mov	bx, [bp+var_42]
		mov	byte ptr [bx+5698h], 0FFh
		sub	si, si

loc_23BD0:				; CODE XREF: sub_23B4C+99j
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	byte ptr [bx+570Ah], 0
		inc	si
		cmp	si, 9
		jl	short loc_23BD0
		call	sub_28DB6
		push	word_40E10
		push	word_40E0E
		call	sub_33E00
		add	sp, 4
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_42], ax
		mov	bx, ax
		mov	word ptr [bx+569Ah], 0FFFFh
		mov	bx, [bp+var_42]
		mov	word ptr [bx+5706h], 0FFFFh
		mov	ax, 1
		push	ax		; int
		mov	ax, word_449BC
		add	ax, word_45A24
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		push	word_459F6
		push	word_459F4
		call	sub_2988A
		add	sp, 4
		mov	ax, 0BBh ; 'ª'
		push	ax
		mov	ax, 0D8h ; 'ÿ'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		call	sub_298A8

loc_23C66:				; CODE XREF: sub_23B4C+6Aj
		mov	ax, [bp+arg_4]
		add	ax, word_45A24
		mov	[bp+var_42], ax
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		add	ax, 569Ah
		mov	[bp+var_44], ax
		mov	bx, ax
		mov	ax, [bp+var_42]
		cmp	[bx], ax
		jz	short loc_23CD7
		mov	[bx], ax
		mov	ax, 1
		push	ax		; int
		push	[bp+var_42]
		mov	ax, 0AC74h
		push	ax		; char *
		call	sub_298B8
		add	sp, 6
		sub	ax, ax
		push	ax
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		call	sub_28DB6
		push	word_459F6
		push	word_459F4
		call	sub_2988A
		add	sp, 4
		mov	ax, 0BBh ; 'ª'
		push	ax
		mov	ax, 98h	; 'ò'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		call	sub_298A8

loc_23CD7:				; CODE XREF: sub_23B4C+137j
		mov	al, byte_4432A
		cbw
		mov	[bp+var_44], ax
		mov	bx, ax
		mov	al, byte_3B8F5
		cmp	[bx+5704h], al
		jz	short loc_23D46
		mov	[bx+5704h], al
		mov	bx, [bp+var_44]
		shl	bx, 1
		mov	word ptr [bx+5706h], 0FFFFh
		call	sub_28DB6
		mov	al, byte_3B8F5
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+56A4h]
		push	word ptr [bx+56A2h]
		call	sub_33E00
		add	sp, 4
		mov	al, byte_3B8F5
		cbw
		mov	bx, ax
		mov	al, [bx+3294h]
		mov	byte ptr [bp+var_42], al
		mov	al, byte_3E9DB
		cmp	byte ptr [bp+var_42], al
		jge	short loc_23D32
		mov	al, byte ptr [bp+var_42]
		mov	byte_3E9DB, al

loc_23D32:				; CODE XREF: sub_23B4C+1DEj
		mov	al, byte_4432A
		cbw
		add	ax, 5698h
		mov	[bp+var_44], ax
		mov	bx, ax
		cmp	byte ptr [bx], 6
		jle	short loc_23D46
		mov	byte ptr [bx], 0FFh

loc_23D46:				; CODE XREF: sub_23B4C+19Bj
					; sub_23B4C+1F5j
		cmp	word_449BC, 0
		jnz	short loc_23D54
		sub	si, si
		sub	di, di
		jmp	short loc_23D94
; ---------------------------------------------------------------------------
		align 2

loc_23D54:				; CODE XREF: sub_23B4C+1FFj
		mov	ax, word_449BC
		cwd
		push	dx
		push	ax
		mov	ax, 6Eh	; 'n'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_2]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	si, ax
		mov	ax, word_449BC
		cwd
		push	dx
		push	ax
		mov	ax, 6Eh	; 'n'
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_4]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		mov	di, ax

loc_23D94:				; CODE XREF: sub_23B4C+205j
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_44], ax
		mov	bx, ax
		cmp	[bx+5706h], si
		jnz	short loc_23DAB
		cmp	[bx+5694h], di
		jz	short loc_23E1A

loc_23DAB:				; CODE XREF: sub_23B4C+257j
		call	sub_28DB6
		mov	al, byte_4432A
		cbw
		shl	ax, 1
		mov	[bp+var_44], ax
		mov	bx, ax
		mov	[bx+5706h], si
		mov	bx, [bp+var_44]
		mov	[bx+5694h], di
		push	word_407FC
		mov	ax, 6
		push	ax
		mov	ax, 74h	; 't'
		push	ax
		mov	ax, 0B1h ; '±'
		push	ax
		mov	ax, 9Ah	; 'ö'
		push	ax
		call	sub_335D2
		add	sp, 0Ah
		push	word_407CA
		mov	ax, 6
		push	ax
		push	ax
		mov	ax, 0B1h ; '±'
		push	ax
		lea	ax, [si+9Ah]
		push	ax
		call	sub_335D2
		add	sp, 0Ah
		push	word_407FE
		mov	ax, 0B6h ; '∂'
		push	ax
		lea	ax, [di+9Fh]
		push	ax
		mov	ax, 0B1h ; '±'
		push	ax
		lea	ax, [di+9Ah]
		push	ax
		call	sub_361BC
		add	sp, 0Ah

loc_23E1A:				; CODE XREF: sub_23B4C+25Dj
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	al, byte_3E9DB
		cmp	[bx+5698h], al
		jz	short loc_23E68

loc_23E29:				; CODE XREF: sub_23B4C+34Bj
		call	sub_28DB6
		mov	al, byte_4432A
		cbw
		mov	[bp+var_44], ax
		mov	bx, ax
		cmp	byte ptr [bx+5698h], 0FFh
		jnz	short loc_23E41
		jmp	loc_23EC6
; ---------------------------------------------------------------------------

loc_23E41:				; CODE XREF: sub_23B4C+2F0j
		mov	al, [bx+5698h]
		cbw
		mov	[bp+var_42], ax
		mov	bx, ax
		shl	bx, 1
		add	bx, [bp+var_44]
		cmp	byte ptr [bx+570Ah], 0
		jz	short loc_23E9A
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+56D8h]
		push	word ptr [bx+56D6h]
		jmp	short loc_23EB3
; ---------------------------------------------------------------------------
		align 2

loc_23E68:				; CODE XREF: sub_23B4C+2DBj
		mov	[bp+var_20], 0
		jmp	short loc_23E71
; ---------------------------------------------------------------------------

loc_23E6E:				; CODE XREF: sub_23B4C+349j
		inc	[bp+var_20]

loc_23E71:				; CODE XREF: sub_23B4C+320j
		cmp	[bp+var_20], 7
		jl	short loc_23E7A
		jmp	loc_23FB0
; ---------------------------------------------------------------------------

loc_23E7A:				; CODE XREF: sub_23B4C+329j
		mov	al, [bp+var_20]
		cbw
		mov	[bp+var_44], ax
		mov	bx, ax
		mov	al, [bx+56FAh]
		mov	cx, ax
		mov	al, byte_4432A
		cbw
		shl	bx, 1
		add	bx, ax
		cmp	[bx+570Ah], cl
		jz	short loc_23E6E
		jmp	short loc_23E29
; ---------------------------------------------------------------------------
		align 2

loc_23E9A:				; CODE XREF: sub_23B4C+309j
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	al, [bx+5698h]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+56B4h]
		push	word ptr [bx+56B2h]

loc_23EB3:				; CODE XREF: sub_23B4C+319j
		call	sub_33E00
		add	sp, 4
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	byte ptr [bx+5698h], 0FFh

loc_23EC6:				; CODE XREF: sub_23B4C+2F2j
		mov	[bp+var_20], 0

loc_23ECA:				; CODE XREF: sub_23B4C+3D3j
		mov	al, [bp+var_20]
		cbw
		mov	[bp+var_44], ax
		mov	bx, ax
		cmp	byte ptr [bx+56FAh], 0
		jnz	short loc_23F18
		mov	al, [bx+56FAh]
		mov	cx, ax
		mov	al, byte_4432A
		cbw
		shl	bx, 1
		add	bx, ax
		cmp	[bx+570Ah], cl
		jz	short loc_23F18
		mov	bx, [bp+var_44]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+56B4h]
		push	word ptr [bx+56B2h]
		call	sub_33E00
		add	sp, 4
		mov	al, [bp+var_20]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	al, byte_4432A
		cbw
		add	bx, ax
		mov	byte ptr [bx+570Ah], 0

loc_23F18:				; CODE XREF: sub_23B4C+38Cj
					; sub_23B4C+3A0j
		inc	[bp+var_20]
		cmp	[bp+var_20], 7
		jl	short loc_23ECA
		mov	[bp+var_20], 0

loc_23F25:				; CODE XREF: sub_23B4C+427j
		mov	al, [bp+var_20]
		cbw
		mov	[bp+var_44], ax
		mov	bx, ax
		cmp	byte ptr [bx+56FAh], 0
		jz	short loc_23F6C
		mov	al, byte_4432A
		cbw
		shl	bx, 1
		add	bx, ax
		mov	byte ptr [bx+570Ah], 1
		mov	bx, [bp+var_44]
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+56D8h]
		push	word ptr [bx+56D6h]
		call	sub_33E00
		add	sp, 4
		mov	al, [bp+var_20]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	al, byte_4432A
		cbw
		add	bx, ax
		mov	byte ptr [bx+570Ah], 1

loc_23F6C:				; CODE XREF: sub_23B4C+3E7j
		inc	[bp+var_20]
		cmp	[bp+var_20], 7
		jl	short loc_23F25
		mov	al, byte_4432A
		cbw
		mov	bx, ax
		mov	al, byte_3E9DB
		mov	[bx+5698h], al
		cmp	byte_3E9DB, 0FFh
		jz	short loc_23FB0
		mov	al, byte_3E9DB
		cbw
		shl	ax, 1
		mov	[bp+var_44], ax
		push	word_407FE
		mov	bx, ax
		push	word ptr [bx+32CEh]
		push	word ptr [bx+32AAh]
		push	word ptr [bx+32BCh]
		push	word ptr [bx+3298h]
		call	sub_361BC
		add	sp, 0Ah

loc_23FB0:				; CODE XREF: sub_23B4C+32Bj
					; sub_23B4C+43Bj
		call	sub_28D9E
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_23FB8:				; CODE XREF: sub_23B4C+1Ej
		mov	al, byte_3B8F5
		cbw
		mov	bx, ax
		mov	al, [bx+3294h]
		mov	byte ptr [bp+var_44], al
		mov	al, byte_3E9DB
		cmp	byte ptr [bp+var_44], al
		jge	short loc_23FDA
		cmp	byte_3B8F5, 2
		jz	short loc_23FDA
		mov	al, byte ptr [bp+var_44]
		mov	byte_3E9DB, al

loc_23FDA:				; CODE XREF: sub_23B4C+47Fj
					; sub_23B4C+486j
		call	sub_35B14
		cmp	byte_46436, 0
		jz	short loc_23FEE
		mov	al, byte_44346
		xor	al, 1
		mov	byte_4432A, al

loc_23FEE:				; CODE XREF: sub_23B4C+498j
					; sub_23B4C+7AEj
		call	sub_2A230
		push	ax
		call	sub_287C4
		add	sp, 2
		mov	[bp+var_16], ax
		mov	ax, 32CEh
		push	ax
		mov	ax, 32BCh
		push	ax
		mov	ax, 32AAh
		push	ax
		mov	ax, 3298h
		push	ax
		mov	al, byte_3B8F5
		cbw
		mov	bx, ax
		mov	al, [bx+3294h]
		cbw
		inc	ax
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_20], al
		cmp	al, 0FFh
		jnz	short loc_2402E
		jmp	loc_240D8
; ---------------------------------------------------------------------------

loc_2402E:				; CODE XREF: sub_23B4C+4DDj
		mov	al, byte_3E9DB
		cmp	[bp+var_20], al
		jz	short loc_24041
		cmp	[bp+var_16], 0
		jnz	short loc_24041
		mov	[bp+var_16], 1

loc_24041:				; CODE XREF: sub_23B4C+4E8j
					; sub_23B4C+4EEj
		mov	al, [bp+var_20]
		mov	byte_3E9DB, al
		cmp	[bp+var_16], 20h ; ' '
		jz	short loc_24056
		cmp	[bp+var_16], 0Dh
		jz	short loc_24056
		jmp	loc_2410C
; ---------------------------------------------------------------------------

loc_24056:				; CODE XREF: sub_23B4C+4FFj
					; sub_23B4C+505j
		cmp	byte_3E9DB, 7
		jge	short loc_24060
		jmp	loc_2410C
; ---------------------------------------------------------------------------

loc_24060:				; CODE XREF: sub_23B4C+50Fj
		jnz	short loc_24082
		mov	ax, word_3EA3A
		add	ax, word_3EA4C
		sar	ax, 1
		cmp	ax, word_461CE
		jge	short loc_2407A

loc_24071:				; CODE XREF: sub_23B4C+572j
		mov	[bp+var_16], 5000h
		jmp	loc_2410C
; ---------------------------------------------------------------------------
		align 2

loc_2407A:				; CODE XREF: sub_23B4C+523j
					; sub_23B4C+568j
		mov	[bp+var_16], 4800h
		jmp	loc_2410C
; ---------------------------------------------------------------------------

loc_24082:				; CODE XREF: sub_23B4C:loc_24060j
		mov	ax, word_3EA3C
		add	ax, word_3EA4E
		sar	ax, 1
		sub	ax, word_461CE
		push	ax
		mov	ax, word_4616C
		mov	cx, word_3EA18
		add	cx, word_3EA2A
		sar	cx, 1
		sub	ax, cx
		push	ax
		call	sub_2EA4E
		add	sp, 4
		add	ax, 80h	; 'Ä'
		and	ah, 3
		mov	cl, 8
		shr	ax, cl
		or	ax, ax
		jz	short loc_2407A
		cmp	ax, 1
		jz	short loc_240C8
		cmp	ax, 2
		jz	short loc_24071
		cmp	ax, 3
		jz	short loc_240D0
		jmp	short loc_2410C
; ---------------------------------------------------------------------------
		align 2

loc_240C8:				; CODE XREF: sub_23B4C+56Dj
		mov	[bp+var_16], 4D00h
		jmp	short loc_2410C
; ---------------------------------------------------------------------------
		align 2

loc_240D0:				; CODE XREF: sub_23B4C+577j
		mov	[bp+var_16], 4B00h
		jmp	short loc_2410C
; ---------------------------------------------------------------------------
		align 2

loc_240D8:				; CODE XREF: sub_23B4C+4DFj
		mov	ax, 32E6h
		push	ax
		mov	ax, 32E4h
		push	ax
		mov	ax, 32E2h
		push	ax
		mov	ax, 32E0h
		push	ax
		mov	ax, 1
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_20], al
		or	al, al
		jnz	short loc_2410C
		cmp	[bp+var_16], 20h ; ' '
		jz	short loc_24107
		cmp	[bp+var_16], 0Dh
		jnz	short loc_2410C

loc_24107:				; CODE XREF: sub_23B4C+5B3j
		mov	[bp+var_16], 63h ; 'c'

loc_2410C:				; CODE XREF: sub_23B4C+507j
					; sub_23B4C+511j ...
		cmp	[bp+var_16], 0
		jz	short loc_24129
		cmp	[bp+var_16], 1Bh
		jz	short loc_24129
		push	[bp+var_16]
		push	cs
		call	near ptr sub_223FA
		add	sp, 2
		or	al, al
		jz	short loc_24129
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_24129:				; CODE XREF: sub_23B4C+5C4j
					; sub_23B4C+5CAj ...
		cmp	byte_454B8, 0
		jnz	short loc_2415A
		cmp	[bp+var_16], 0
		jnz	short loc_2415A
		cmp	byte_46484, 0
		jnz	short loc_24140
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_24140:				; CODE XREF: sub_23B4C+5EFj
					; sub_23B4C+11B4j
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_2415A:				; CODE XREF: sub_23B4C+5E2j
					; sub_23B4C+5E8j
		cmp	byte_46484, 0
		jnz	short loc_2416C
		mov	byte_45634, 0FFh
		mov	word_449EA, 0FFFFh

loc_2416C:				; CODE XREF: sub_23B4C+613j
		cmp	byte_454B8, 0
		jz	short loc_24193
		cmp	byte_40E6D, 0
		jnz	short loc_24181
		cmp	byte_40E6C, 0
		jz	short loc_24193

loc_24181:				; CODE XREF: sub_23B4C+62Cj
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6

loc_24193:				; CODE XREF: sub_23B4C+625j
					; sub_23B4C+633j
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	[bp+var_40], 0
		mov	ax, 1Dh
		push	ax
		call	sub_30A0D
		add	sp, 2
		or	ax, ax
		jnz	short loc_241C8
		cmp	byte_3E9DB, 8
		jnz	short loc_241CC
		test	byte ptr word_454C0, 30h
		jz	short loc_241CC

loc_241C8:				; CODE XREF: sub_23B4C+66Cj
		mov	[bp+var_40], 1

loc_241CC:				; CODE XREF: sub_23B4C+673j
					; sub_23B4C+67Aj
		cmp	[bp+var_40], 0
		jz	short loc_241FE
		mov	ax, [bp+var_16]
		cmp	ax, 2Bh	; '+'
		jnz	short loc_241DD
		jmp	loc_2429C
; ---------------------------------------------------------------------------

loc_241DD:				; CODE XREF: sub_23B4C+68Cj
		cmp	ax, 2Dh	; '-'
		jnz	short loc_241E5
		jmp	loc_2426E
; ---------------------------------------------------------------------------

loc_241E5:				; CODE XREF: sub_23B4C+694j
		cmp	ax, 4800h
		jz	short loc_24242
		cmp	ax, 4B00h
		jz	short loc_24236
		cmp	ax, 4D00h
		jz	short loc_2422A
		cmp	ax, 5000h
		jz	short loc_24258

loc_241F9:				; CODE XREF: sub_23B4C+6FFj
					; sub_23B4C+715j ...
		mov	[bp+var_16], 0

loc_241FE:				; CODE XREF: sub_23B4C+684j
		mov	ax, [bp+var_16]
		cmp	ax, 2Bh	; '+'
		jnz	short loc_24209
		jmp	loc_2429C
; ---------------------------------------------------------------------------

loc_24209:				; CODE XREF: sub_23B4C+6B8j
		jbe	short loc_2420E
		jmp	loc_24D32
; ---------------------------------------------------------------------------

loc_2420E:				; CODE XREF: sub_23B4C:loc_24209j
		cmp	ax, 0Dh
		jnz	short loc_24216
		jmp	loc_24334
; ---------------------------------------------------------------------------

loc_24216:				; CODE XREF: sub_23B4C+6C5j
		cmp	ax, 1Bh
		jnz	short loc_2421E
		jmp	loc_24346
; ---------------------------------------------------------------------------

loc_2421E:				; CODE XREF: sub_23B4C+6CDj
		cmp	ax, 20h	; ' '
		jnz	short loc_24226
		jmp	loc_24334
; ---------------------------------------------------------------------------

loc_24226:				; CODE XREF: sub_23B4C+6D5j
		jmp	loc_242E7
; ---------------------------------------------------------------------------
		align 2

loc_2422A:				; CODE XREF: sub_23B4C+6A6j
		add	word_3B8EE, 10h
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_24236:				; CODE XREF: sub_23B4C+6A1j
		sub	word_3B8EE, 10h
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_24242:				; CODE XREF: sub_23B4C+69Cj
		mov	ax, word_3B8F0
		add	ax, 10h
		cmp	ax, 100h
		jge	short loc_241F9
		add	word_3B8F0, 10h
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_24258:				; CODE XREF: sub_23B4C+6ABj
		mov	ax, word_3B8F0
		sub	ax, 10h
		cmp	ax, 0FF00h
		jle	short loc_241F9
		sub	word_3B8F0, 10h
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2426E:				; CODE XREF: sub_23B4C+696j
					; sub_23B4C+7D9j ...
		cmp	byte_3B8F5, 3
		jnz	short loc_24288
		cmp	word_44D20, 0
		jg	short loc_2427F
		jmp	loc_241F9
; ---------------------------------------------------------------------------

loc_2427F:				; CODE XREF: sub_23B4C+72Ej
		sub	word_44D20, 1Eh
		jmp	loc_24D5E
; ---------------------------------------------------------------------------
		align 2

loc_24288:				; CODE XREF: sub_23B4C+727j
		cmp	word_3B8EC, 5DCh
		jl	short loc_24293
		jmp	loc_241F9
; ---------------------------------------------------------------------------

loc_24293:				; CODE XREF: sub_23B4C+742j
		add	word_3B8EC, 1Eh
		jmp	loc_24D5E
; ---------------------------------------------------------------------------
		align 2

loc_2429C:				; CODE XREF: sub_23B4C+68Ej
					; sub_23B4C+6BAj ...
		cmp	byte_3B8F5, 3
		jnz	short loc_242B6
		cmp	word_44D20, 384h
		jl	short loc_242AE
		jmp	loc_241F9
; ---------------------------------------------------------------------------

loc_242AE:				; CODE XREF: sub_23B4C+75Dj
		add	word_44D20, 1Eh
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_242B6:				; CODE XREF: sub_23B4C+755j
		cmp	word_3B8EC, 78h	; 'x'
		jg	short loc_242C0
		jmp	loc_241F9
; ---------------------------------------------------------------------------

loc_242C0:				; CODE XREF: sub_23B4C+76Fj
		sub	word_3B8EC, 1Eh
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_242C8:				; CODE XREF: sub_23B4C+11FBj
		mov	al, byte_3E9DB
		cbw
		mov	bx, ax
		mov	al, [bx+326Ch]
		mov	byte ptr [bp+var_44], al
		mov	al, byte_3B8F5
		cbw
		mov	bx, ax
		mov	al, byte ptr [bp+var_44]
		cmp	[bx+3294h], al
		jl	short loc_242E7

loc_242E4:				; CODE XREF: sub_23B4C+7BCj
					; sub_23B4C+7CFj ...
		mov	byte_3E9DB, al

loc_242E7:				; CODE XREF: sub_23B4C:loc_24226j
					; sub_23B4C+796j ...
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_23FEE
; ---------------------------------------------------------------------------
		align 2

loc_242FE:				; CODE XREF: sub_23B4C+1203j
		mov	al, byte_3E9DB
		cbw
		mov	bx, ax
		mov	al, [bx+3276h]
		jmp	short loc_242E4
; ---------------------------------------------------------------------------

loc_2430A:				; CODE XREF: sub_23B4C+11F3j
		cmp	byte_3E9DB, 7
		jz	short loc_2429C
		mov	al, byte_3E9DB
		cbw
		mov	bx, ax
		mov	al, [bx+3280h]
		jmp	short loc_242E4
; ---------------------------------------------------------------------------
		align 2

loc_2431E:				; CODE XREF: sub_23B4C+120Bj
		cmp	byte_3E9DB, 7
		jnz	short loc_24328
		jmp	loc_2426E
; ---------------------------------------------------------------------------

loc_24328:				; CODE XREF: sub_23B4C+7D7j
		mov	al, byte_3E9DB
		cbw
		mov	bx, ax
		mov	al, [bx+328Ah]
		jmp	short loc_242E4
; ---------------------------------------------------------------------------

loc_24334:				; CODE XREF: sub_23B4C+6C7j
					; sub_23B4C+6D7j
		mov	al, byte_3E9DB
		cbw
		cmp	ax, 6
		ja	short loc_242E7
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_24D20[bx]
; ---------------------------------------------------------------------------
		align 2

loc_24346:				; CODE XREF: sub_23B4C+6CFj
					; sub_23B4C+7F4j
					; DATA XREF: ...
		mov	byte_454B8, 1
		call	sub_188A4
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		sub	si, si

loc_24377:				; CODE XREF: sub_23B4C+83Aj
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		mov	word ptr [bx-14h], 0
		inc	si
		cmp	si, 8
		jl	short loc_24377
		cmp	byte_446AF, 0
		jz	short loc_24394
		mov	[bp+var_E], 1

loc_24394:				; CODE XREF: sub_23B4C+841j
		cmp	word_449BC, 0
		jz	short loc_243A2
		cmp	word_45A24, 0
		jz	short loc_243A7

loc_243A2:				; CODE XREF: sub_23B4C+84Dj
		mov	[bp+var_A], 1

loc_243A7:				; CODE XREF: sub_23B4C+854j
		cmp	byte_45E1A, 0
		jnz	short loc_243B8
		mov	[bp+var_10], 1
		mov	[bp+var_E], 1

loc_243B8:				; CODE XREF: sub_23B4C+860j
		test	byte_43966, 4
		jnz	short loc_243C4
		mov	[bp+var_12], 1

loc_243C4:				; CODE XREF: sub_23B4C+871j
		mov	al, byte_459F1
		mov	byte_454A4, al
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_14]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 323Dh
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_2], al
		cbw
		sub	ax, 1
		cmp	ax, 6
		jbe	short loc_2440E
		jmp	loc_24828
; ---------------------------------------------------------------------------

loc_2440E:				; CODE XREF: sub_23B4C+8BDj
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_2481A[bx]

loc_24416:				; DATA XREF: sub_23B4C+CD0o
		call	sub_28EE4
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	al, byte ptr word_44D4E
		mov	byte_449BA, al
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2
		mov	word_42D02, 0
		mov	word_449BC, 0
		mov	byte_45D3E, 0
		mov	byte_43966, 1
		jmp	short loc_244B0
; ---------------------------------------------------------------------------
		align 2

loc_2444C:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C+CD2o
		test	byte_43966, 2
		jz	short loc_2445A

loc_24453:				; CODE XREF: sub_23B4C:loc_2449Fj
		mov	byte_43966, 3
		jmp	short loc_244A7
; ---------------------------------------------------------------------------

loc_2445A:				; CODE XREF: sub_23B4C+905j
		mov	ax, word_42D02
		cmp	word_449BC, ax
		jz	short loc_244A2
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3241h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		cmp	si, 1
		jge	short loc_2449F
		jmp	loc_24828
; ---------------------------------------------------------------------------

loc_2449F:				; CODE XREF: sub_23B4C+94Ej
		jmp	short loc_24453
; ---------------------------------------------------------------------------
		align 2

loc_244A2:				; CODE XREF: sub_23B4C+915j
		mov	byte_43966, 1

loc_244A7:				; CODE XREF: sub_23B4C+90Cj
		mov	ax, word_445D4
		mov	word_42D02, ax
		mov	word_449BC, ax

loc_244B0:				; CODE XREF: sub_23B4C+8FDj
		mov	byte_43950, 1
		mov	byte_4499F, 0
		mov	byte_463E0, 0
		mov	byte_45DB2, 0
		mov	byte_3B8F5, 0
		mov	byte_4488A, 0
		mov	word_445CC, 0
		mov	byte_449E6, 0
		sub	ax, ax
		push	ax
		mov	ax, 3
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	byte_454B8, 0
		mov	al, byte_3B8F2
		cbw
		push	ax
		push	cs
		call	near ptr sub_23A50
		add	sp, 2
		call	sub_28EE4
		mov	byte_3B8F8, 0
		jmp	loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_2450A:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C+CD4o
		mov	byte_43966, 0
		call	sub_188A4
		mov	ax, 3245h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 3249h
		push	ax		; int
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		call	sub_27ED4
		add	sp, 0Ah
		cbw
		mov	si, ax
		or	si, si
		jnz	short loc_24548
		jmp	loc_24828
; ---------------------------------------------------------------------------

loc_24548:				; CODE XREF: sub_23B4C+9F7j
		mov	word_44382, 96h	; 'ñ'
		call	sub_296AA
		push	si
		push	di
		lea	di, [bp+var_3E]
		mov	si, 9234h
		push	ss
		pop	es
		mov	cx, 0Dh
		repne movsw
		pop	di
		pop	si
		les	bx, dword_44D42
		mov	al, es:[bx+384h]
		sub	ah, ah
		mov	[bp+var_4], ax
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		push	cs
		call	near ptr sub_22C92
		add	sp, 4
		or	al, al
		jz	short loc_2458B
		mov	word_449BC, 0

loc_2458B:				; CODE XREF: sub_23B4C+A37j
		mov	byte_43950, 0
		call	sub_206D4
		sub	si, si
		les	bx, dword_44D42
		mov	al, es:[bx+384h]
		sub	ah, ah
		cmp	ax, [bp+var_4]
		jz	short loc_245AA
		mov	si, 1

loc_245AA:				; CODE XREF: sub_23B4C+A59j
		mov	al, byte_449A4
		cmp	[bp+var_3E], al
		jnz	short loc_245CA
		mov	al, byte_449A5
		cmp	[bp+var_3D], al
		jnz	short loc_245CA
		mov	al, byte_449A6
		cmp	[bp+var_3C], al
		jnz	short loc_245CA
		mov	al, byte_449A7
		cmp	[bp+var_3B], al
		jz	short loc_245D0

loc_245CA:				; CODE XREF: sub_23B4C+A64j
					; sub_23B4C+A6Cj ...
		mov	si, 1
		jmp	short loc_2460D
; ---------------------------------------------------------------------------
		align 2

loc_245D0:				; CODE XREF: sub_23B4C+A7Cj
		mov	al, byte_449AA
		cmp	[bp+var_38], al
		jnz	short loc_245CA
		or	al, al
		jz	short loc_2460D
		mov	al, byte_449AB
		cmp	[bp+var_37], al
		jnz	short loc_245CA
		mov	al, byte_449AC
		cmp	[bp+var_36], al
		jnz	short loc_245CA
		mov	al, byte_449AD
		cmp	[bp+var_35], al
		jnz	short loc_245CA
		mov	al, byte_449AE
		cmp	[bp+var_34], al
		jnz	short loc_245CA
		mov	ax, 2
		push	ax
		call	sub_2A1A6
		add	sp, 2
		call	sub_217CA

loc_2460D:				; CODE XREF: sub_23B4C+A81j
					; sub_23B4C+A8Ej
		or	si, si
		jz	short loc_24619
		push	cs
		call	near ptr sub_239B4
		push	cs
		call	near ptr sub_23702

loc_24619:				; CODE XREF: sub_23B4C+AC3j
		mov	al, byte_449BA
		cbw
		mov	word_449D0, ax
		mov	ax, 0FFFFh
		push	ax
		call	sub_16B02
		add	sp, 2
		jmp	loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_24630:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C+CD6o
		call	sub_188A4

loc_24635:				; CODE XREF: sub_23B4C+BF8j
		mov	[bp+var_1E], 0

loc_24639:				; CODE XREF: sub_23B4C+BAEj
					; sub_23B4C+BC3j
		cmp	[bp+var_1E], 0
		jz	short loc_24642
		jmp	loc_24828
; ---------------------------------------------------------------------------

loc_24642:				; CODE XREF: sub_23B4C+AF1j
		mov	ax, 324Eh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		call	sub_2863A
		add	sp, 8
		or	al, al
		jnz	short loc_2466F
		jmp	loc_246F0
; ---------------------------------------------------------------------------

loc_2466F:				; CODE XREF: sub_23B4C+B1Ej
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 3252h
		push	ax		; int
		mov	ax, 140h
		push	ax
		mov	ax, 0EEh ; 'Ó'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		mov	[bp+var_1E], 1
		mov	byte_3B8FB, 1
		mov	ax, 95F8h
		push	ax
		call	sub_2FFD4
		add	sp, 2
		or	ax, ax
		jz	short loc_246E8
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3257h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		cmp	si, 0FFFFh
		jnz	short loc_246E0
		mov	[bp+var_1E], 0FFh
		jmp	short loc_246E8
; ---------------------------------------------------------------------------
		align 2

loc_246E0:				; CODE XREF: sub_23B4C+B8Bj
		or	si, si
		jnz	short loc_246E8
		mov	[bp+var_1E], 0

loc_246E8:				; CODE XREF: sub_23B4C+B52j
					; sub_23B4C+B91j ...
		mov	byte_3B8FB, 0
		jmp	short loc_246F4
; ---------------------------------------------------------------------------
		align 2

loc_246F0:				; CODE XREF: sub_23B4C+B20j
		mov	[bp+var_1E], 0FFh

loc_246F4:				; CODE XREF: sub_23B4C+BA1j
		cmp	[bp+var_1E], 1
		jz	short loc_246FD
		jmp	loc_24639
; ---------------------------------------------------------------------------

loc_246FD:				; CODE XREF: sub_23B4C+BACj
		mov	ax, 95F8h
		push	ax
		push	cs
		call	near ptr sub_22CE8
		add	sp, 2
		mov	[bp+var_20], al
		or	al, al
		jnz	short loc_24712
		jmp	loc_24639
; ---------------------------------------------------------------------------

loc_24712:				; CODE XREF: sub_23B4C+BC1j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 325Bh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_27686
		add	sp, 12h
		jmp	loc_24635
; ---------------------------------------------------------------------------
		align 2

loc_24748:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C:off_2481Ao
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	sub_195E6
		add	sp, 4

loc_24757:				; CODE XREF: sub_23B4C+C28j
		mov	byte_449DA, 2
		jmp	loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_24760:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C+CDAo
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	sub_195E6
		add	sp, 4
		mov	byte_43966, 0
		jmp	short loc_24757
; ---------------------------------------------------------------------------

loc_24776:				; CODE XREF: sub_23B4C+8C5j
					; DATA XREF: sub_23B4C+CD8o
		sub	si, si

loc_24778:				; CODE XREF: sub_23B4C+C3Bj
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		mov	word ptr [bx-14h], 0
		inc	si
		cmp	si, 5
		jl	short loc_24778
		cmp	byte_449AA, 0
		jnz	short loc_24795
		mov	[bp+var_C], 1

loc_24795:				; CODE XREF: sub_23B4C+C42j
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_14]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 325Fh
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_2], al
		cbw
		or	ax, ax
		jz	short loc_247E8
		cmp	ax, 1
		jz	short loc_247F0
		cmp	ax, 2
		jz	short loc_247F8
		cmp	ax, 3
		jz	short loc_2480A
		cmp	ax, 4
		jz	short loc_24812
		jmp	short loc_24828
; ---------------------------------------------------------------------------

loc_247E8:				; CODE XREF: sub_23B4C+C84j
		xor	byte_43950, 1
		jmp	short loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_247F0:				; CODE XREF: sub_23B4C+C89j
		xor	byte_4616F, 1
		jmp	short loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_247F8:				; CODE XREF: sub_23B4C+C8Ej
		inc	byte_3B8F5
		cmp	byte_3B8F5, 4
		jnz	short loc_24828
		mov	byte_3B8F5, 0
		jmp	short loc_24828
; ---------------------------------------------------------------------------

loc_2480A:				; CODE XREF: sub_23B4C+C93j
		call	sub_29FB6
		jmp	short loc_24828
; ---------------------------------------------------------------------------
		align 2

loc_24812:				; CODE XREF: sub_23B4C+C98j
		xor	byte_463E0, 1
		jmp	short loc_24828
; ---------------------------------------------------------------------------
		align 2
off_2481A	dw offset loc_24748	; DATA XREF: sub_23B4C+8C5r
		dw offset loc_24416
		dw offset loc_2444C
		dw offset loc_2450A
		dw offset loc_24630
		dw offset loc_24776
		dw offset loc_24760
; ---------------------------------------------------------------------------

loc_24828:				; CODE XREF: sub_23B4C+8BFj
					; sub_23B4C+950j ...
		call	sub_28EE4
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_24830:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C:off_24D20o
		mov	byte_454B8, 1
		call	sub_188A4
		sub	ax, ax
		push	ax
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		call	sub_2A230
		mov	[bp+var_24], 14h
		mov	[bp+var_22], 0
		jmp	loc_248F4
; ---------------------------------------------------------------------------
		align 2

loc_2485C:				; CODE XREF: sub_23B4C+DAFj
		mov	ax, 32h	; '2'
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		mov	di, ax
		add	di, 3
		cmp	di, 64h	; 'd'
		jle	short loc_2487A
		mov	di, 64h	; 'd'

loc_2487A:				; CODE XREF: sub_23B4C+D29j
		call	sub_2A230
		mov	[bp+var_18], ax
		imul	di
		mov	si, ax
		cwd
		add	[bp+var_24], ax
		adc	[bp+var_22], dx
		mov	ax, word_449BC
		sub	ax, word_42D02
		mov	[bp+var_44], ax
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		cmp	ax, [bp+var_44]
		jbe	short loc_248C4
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_44]
		call	__aFlmul
		mov	[bp+var_24], ax
		mov	[bp+var_22], dx

loc_248C4:				; CODE XREF: sub_23B4C+D5Fj
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		add	ax, word_42D02
		push	ax
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		push	[bp+var_18]
		call	sub_289E2
		add	sp, 2

loc_248F4:				; CODE XREF: sub_23B4C+D0Cj
		test	byte ptr word_454C0, 30h
		jz	short loc_248FE
		jmp	loc_2485C
; ---------------------------------------------------------------------------

loc_248FE:				; CODE XREF: sub_23B4C+DADj
		mov	ax, word_449BC
		sub	ax, word_42D02
		mov	[bp+var_44], ax
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		cmp	ax, [bp+var_44]
		jbe	short loc_24935
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	[bp+var_44]
		call	__aFlmul
		mov	[bp+var_24], ax
		mov	[bp+var_22], dx

loc_24935:				; CODE XREF: sub_23B4C+DD0j
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		mov	si, ax
		add	si, word_42D02
		cmp	word_449BC, si
		jge	short loc_24956
		mov	si, word_449BC

loc_24956:				; CODE XREF: sub_23B4C+E04j
		push	si
		call	sub_16F3A
		add	sp, 2
		mov	word_42D02, si
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	ax, 3263h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		cmp	word_44984, 0
		jz	short loc_249D2
		push	word_3B808
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		push	word_3B808
		call	sub_26572
		jmp	short loc_24A0D
; ---------------------------------------------------------------------------

loc_249D2:				; CODE XREF: sub_23B4C+E50j
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		jmp	short loc_24A10
; ---------------------------------------------------------------------------

loc_249F8:				; CODE XREF: sub_23B4C+ECBj
		call	sub_17008
		push	word_42D02
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C

loc_24A0D:				; CODE XREF: sub_23B4C+E84j
		add	sp, 6

loc_24A10:				; CODE XREF: sub_23B4C+EAAj
		mov	ax, word_42D02
		cmp	word_445D4, ax
		jnz	short loc_249F8

loc_24A19:				; CODE XREF: sub_23B4C+110Aj
		mov	ax, 3E8h
		push	ax
		call	sub_289E2
		add	sp, 2
		jmp	loc_24D5E
; ---------------------------------------------------------------------------

loc_24A28:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C+11D6o
		mov	byte_454B8, 1
		call	sub_188A4
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		call	sub_2A230
		mov	[bp+var_24], 14h
		mov	[bp+var_22], 0
		jmp	loc_24AEA
; ---------------------------------------------------------------------------
		align 4

loc_24A58:				; CODE XREF: sub_23B4C+FA5j
		mov	ax, 32h	; '2'
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		mov	di, ax
		add	di, 3
		cmp	di, 64h	; 'd'
		jle	short loc_24A76
		mov	di, 64h	; 'd'

loc_24A76:				; CODE XREF: sub_23B4C+F25j
		call	sub_2A230
		mov	[bp+var_18], ax
		imul	di
		mov	si, ax
		cwd
		add	[bp+var_24], ax
		adc	[bp+var_22], dx
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		cmp	ax, word_42D02
		jbe	short loc_24AB8
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	word_42D02
		call	__aFlmul
		mov	[bp+var_24], ax
		mov	[bp+var_22], dx

loc_24AB8:				; CODE XREF: sub_23B4C+F52j
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		mov	cx, word_42D02
		sub	cx, ax
		push	cx
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		push	[bp+var_18]
		call	sub_289E2
		add	sp, 2

loc_24AEA:				; CODE XREF: sub_23B4C+F07j
		test	byte ptr word_454C0, 30h
		jz	short loc_24AF4
		jmp	loc_24A58
; ---------------------------------------------------------------------------

loc_24AF4:				; CODE XREF: sub_23B4C+FA3j
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		cmp	ax, word_42D02
		jbe	short loc_24B23
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	word_42D02
		call	__aFlmul
		mov	[bp+var_24], ax
		mov	[bp+var_22], dx

loc_24B23:				; CODE XREF: sub_23B4C+FBDj
		mov	ax, 14h
		cwd
		push	dx
		push	ax
		push	[bp+var_22]
		push	[bp+var_24]
		call	__aFldiv
		mov	di, ax
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		or	di, di
		jnz	short loc_24B4F
		jmp	loc_24C43
; ---------------------------------------------------------------------------

loc_24B4F:				; CODE XREF: sub_23B4C+FFEj
		mov	ax, 3267h
		push	ax
		push	word_449A2
		push	word_449A0
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		cmp	word_44984, 0
		jz	short loc_24BB0
		push	word_3B808
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah
		push	ax
		push	word_3B808
		call	sub_26572
		add	sp, 6
		jmp	short loc_24BD4
; ---------------------------------------------------------------------------
		align 2

loc_24BB0:				; CODE XREF: sub_23B4C+102Aj
		sub	ax, ax
		push	ax
		push	word_407CA
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28F98
		add	sp, 0Ah

loc_24BD4:				; CODE XREF: sub_23B4C+1061j
		mov	si, word_42D02
		sub	si, di
		push	si
		call	sub_16F3A
		add	sp, 2
		mov	word_42D02, si
		mov	ax, si
		sub	ax, word_445D4
		mov	[bp+var_4], ax
		or	ax, ax
		jz	short loc_24C43
		mov	si, ax
		jmp	short loc_24C3A
; ---------------------------------------------------------------------------

loc_24BF8:				; CODE XREF: sub_23B4C+10F5j
		call	sub_17008
		dec	si
		push	word_42D02
		mov	ax, [bp+var_4]
		cwd
		push	dx
		push	ax
		mov	ax, di
		cwd
		push	dx
		push	ax
		mov	ax, si
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, word_42D02
		push	ax
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	ax, 1
		push	ax
		call	sub_289E2
		add	sp, 2

loc_24C3A:				; CODE XREF: sub_23B4C+10AAj
		mov	ax, word_42D02
		cmp	word_445D4, ax
		jnz	short loc_24BF8

loc_24C43:				; CODE XREF: sub_23B4C+1000j
					; sub_23B4C+10A6j
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_24A19
; ---------------------------------------------------------------------------
		align 2

loc_24C5A:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C+11DAo
		mov	byte_449E6, 0
		sub	ax, ax
		push	ax
		mov	ax, 3
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_24D18
; ---------------------------------------------------------------------------

loc_24C74:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C+11DCo
		mov	byte_454B8, 1
		call	sub_188A4
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_242E7
; ---------------------------------------------------------------------------

loc_24CA6:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C+11DEo
		mov	byte_454B8, 1
		call	sub_188A4
		sub	ax, ax
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		push	word_445D4
		push	word_445D4
		mov	ax, 1
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		sub	ax, ax
		push	ax
		call	sub_16F3A
		add	sp, 2
		mov	ax, 32h	; '2'
		cwd
		push	dx
		push	ax
		call	sub_32805
		add	sp, 4
		sub	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		jmp	loc_24140
; ---------------------------------------------------------------------------
		align 2

loc_24D04:				; CODE XREF: sub_23B4C+7F4j
					; DATA XREF: sub_23B4C+11D8o
		sub	ax, ax
		push	ax
		mov	ax, 2
		push	ax
		push	ax
		push	cs
		call	near ptr sub_23B4C
		add	sp, 6
		mov	byte_449E6, 3

loc_24D18:				; CODE XREF: sub_23B4C+1125j
		mov	byte_454B8, 0
		jmp	loc_242E7
; ---------------------------------------------------------------------------
off_24D20	dw offset loc_24830	; DATA XREF: sub_23B4C+7F4r
		dw offset loc_24A28
		dw offset loc_24D04
		dw offset loc_24C5A
		dw offset loc_24C74
		dw offset loc_24CA6
		dw offset loc_24346
; ---------------------------------------------------------------------------
		jmp	loc_242E7
; ---------------------------------------------------------------------------
		align 2

loc_24D32:				; CODE XREF: sub_23B4C+6BFj
		cmp	ax, 2Dh	; '-'
		jnz	short loc_24D3A
		jmp	loc_2426E
; ---------------------------------------------------------------------------

loc_24D3A:				; CODE XREF: sub_23B4C+11E9j
		cmp	ax, 4800h
		jnz	short loc_24D42
		jmp	loc_2430A
; ---------------------------------------------------------------------------

loc_24D42:				; CODE XREF: sub_23B4C+11F1j
		cmp	ax, 4B00h
		jnz	short loc_24D4A
		jmp	loc_242C8
; ---------------------------------------------------------------------------

loc_24D4A:				; CODE XREF: sub_23B4C+11F9j
		cmp	ax, 4D00h
		jnz	short loc_24D52
		jmp	loc_242FE
; ---------------------------------------------------------------------------

loc_24D52:				; CODE XREF: sub_23B4C+1201j
		cmp	ax, 5000h
		jnz	short loc_24D5A
		jmp	loc_2431E
; ---------------------------------------------------------------------------

loc_24D5A:				; CODE XREF: sub_23B4C+1209j
		jmp	loc_242E7
; ---------------------------------------------------------------------------
		align 2

loc_24D5E:				; CODE XREF: sub_23B4C:loc_23B6Dj
					; sub_23B4C+56j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_23B4C	endp

seg005		ends

; ===========================================================================

; Segment type:	Pure code
seg006		segment	byte public 'CODE' use16
		assume cs:seg006
		;org 4
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_24D64	proc far		; CODE XREF: _main+F1P
		mov	ax, 28A0h
		cwd
		push	dx
		push	ax
		mov	ax, 32E8h
		push	ax
		call	sub_3A460
		add	sp, 6
		mov	word_40ED2, ax
		mov	word_40ED4, dx
		sub	ax, ax
		push	ax
		mov	ax, 60CEh
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	ax, 100h
		push	ax
		mov	ax, 572Eh
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	ax, 200h
		push	ax
		mov	ax, 571Ch
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	ax, 300h
		push	ax
		mov	ax, 5748h
		push	ax
		call	sub_36F80
		add	sp, 4
		push	cs
		call	near ptr sub_26500
		retf
sub_24D64	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_24DC2	proc far		; CODE XREF: sub_39E56+3F8P

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	word_45632, ax
		mov	ax, [bp+arg_2]
		mov	word_459D6, ax
		mov	ax, [bp+arg_4]
		mov	word_45D1E, ax
		mov	ax, [bp+arg_6]
		mov	word_45D92, ax
		mov	ax, [bp+arg_8]
		mov	word_459FC, ax
		pop	bp
		retf
sub_24DC2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_24DE6	proc far		; CODE XREF: sub_24E06+29p
					; sub_25FF6+1FBp
		mov	word_442E6, 0
		mov	word_41850, 0
		mov	word_40ECE, 0
		mov	word_411F6, 0FFFFh
		mov	word_443F2, 190h
		retf
sub_24DE6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_24E06	proc far		; CODE XREF: sub_11C42+823P
					; sub_1A0F4+410P ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		mov	ax, 1
		push	ax
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_261FA
		add	sp, 8
		mov	di, 0ACDCh
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		mov	cx, 9
		repne movsw
		push	cs
		call	near ptr sub_24DE6
		mov	ax, [bp+arg_6]
		mov	di, 5740h
		mov	si, ax
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		mov	ax, [bp+arg_8]
		mov	word_40ED0, ax
		sub	ax, ax
		push	ax
		mov	ax, [bp+arg_4]
		neg	ax
		push	ax
		mov	ax, [bp+arg_2]
		neg	ax
		push	ax
		mov	ax, [bp+arg_0]
		neg	ax
		push	ax
		push	cs
		call	near ptr sub_261FA
		add	sp, 8
		mov	[bp+var_8], ax
		mov	[bp+var_A], 2710h
		mov	[bp+var_C], 0
		mov	[bp+var_E], 0
		lea	ax, [bp+var_6]
		push	ax
		push	[bp+var_8]
		lea	ax, [bp+var_E]
		push	ax
		call	sub_328EE
		add	sp, 6
		push	[bp+var_2]
		push	[bp+var_6]
		call	sub_2EA4E
		add	sp, 4
		and	ah, 3
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_24E06	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_24E9E	proc far		; CODE XREF: sub_11C42+84AP
					; sub_1A0F4+560P ...

var_B7C		= word ptr -0B7Ch
var_B7A		= word ptr -0B7Ah
var_B78		= dword	ptr -0B78h
var_B74		= word ptr -0B74h
var_B72		= word ptr -0B72h
var_B70		= word ptr -0B70h
var_574		= word ptr -574h
var_572		= word ptr -572h
var_570		= word ptr -570h
var_56E		= dword	ptr -56Eh
var_56A		= word ptr -56Ah
var_568		= word ptr -568h
var_566		= word ptr -566h
var_564		= word ptr -564h
var_562		= byte ptr -562h
var_462		= word ptr -462h
var_460		= word ptr -460h
var_45E		= word ptr -45Eh
var_45C		= word ptr -45Ch
var_45A		= word ptr -45Ah
var_458		= word ptr -458h
var_456		= word ptr -456h
var_454		= word ptr -454h
var_450		= word ptr -450h
var_44E		= word ptr -44Eh
var_44A		= byte ptr -44Ah
var_448		= word ptr -448h
var_446		= byte ptr -446h
var_434		= dword	ptr -434h
var_430		= dword	ptr -430h
var_42C		= word ptr -42Ch
var_42A		= byte ptr -42Ah
var_418		= word ptr -418h
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0B7Ch
		push	di
		push	si
		cmp	word_40ECE, 0
		jz	short loc_24EB8

loc_24EAE:				; CODE XREF: sub_24E9E+F63j
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_24EB8:				; CODE XREF: sub_24E9E+Ej
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx]
		mov	word_4187C, ax
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx+0Ah]
		mov	dx, [bx+0Ch]
		mov	word ptr dword_41870, ax
		mov	word ptr dword_41870+2,	dx
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx+2]
		mov	dx, [bx+4]
		mov	word ptr dword_4187E, ax
		mov	word ptr dword_4187E+2,	dx
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	al, [bx+8]
		cbw
		mov	word_41852, ax
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx+0Eh]
		mov	dx, [bx+10h]
		mov	word ptr [bp+var_B78], ax
		mov	word ptr [bp+var_B78+2], dx
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx+12h]
		mov	dx, [bx+14h]
		mov	word ptr [bp+var_434], ax
		mov	word ptr [bp+var_434+2], dx
		mov	bx, [bp+arg_0]
		mov	al, [bx+13h]
		mov	byte_4187A, al
		cmp	byte ptr word_41852, al
		ja	short loc_24F32
		mov	byte_4187A, 0

loc_24F32:				; CODE XREF: sub_24E9E+8Dj
		mov	al, [bx+12h]
		mov	byte_4186E, al
		test	byte_4186E, 8
		jz	short loc_24F45
		mov	ax, [bx+8]
		mov	word_41878, ax

loc_24F45:				; CODE XREF: sub_24E9E+9Fj
		sub	si, si
		jmp	short loc_24F50
; ---------------------------------------------------------------------------
		align 2

loc_24F4A:				; CODE XREF: sub_24E9E+B8j
		mov	[bp+si+var_562], 0FFh
		inc	si

loc_24F50:				; CODE XREF: sub_24E9E+A9j
		mov	ax, si
		cmp	ax, word_4187C
		jb	short loc_24F4A
		test	byte_4186E, 2
		jz	short loc_24FB6
		sub	ax, ax
		push	ax
		mov	bx, [bp+arg_0]
		push	word ptr [bx+0Eh]
		push	word ptr [bx+0Ch]
		push	word ptr [bx+0Ah]
		push	cs
		call	near ptr sub_261FA
		add	sp, 8
		mov	[bp+var_42C], ax
		lea	ax, [bp+var_42A]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		push	[bp+var_42C]
		call	sub_329F2
		add	sp, 6
		mov	ax, [bp+arg_0]
		push	si
		push	di
		lea	di, [bp+var_14]
		mov	si, ax
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		pop	di
		pop	si

loc_24F9F:				; CODE XREF: sub_24E9E+1A5j
					; sub_24E9E+1D6j
		mov	[bp+var_45C], 0FFFFh
		mov	[bp+var_45A], 0FFFFh
		sub	ax, ax
		mov	[bp+var_8], ax
		mov	[bp+var_A], ax
		jmp	loc_250A3
; ---------------------------------------------------------------------------

loc_24FB6:				; CODE XREF: sub_24E9E+BFj
		sub	ax, ax
		push	ax
		mov	bx, [bp+arg_0]
		push	word ptr [bx+0Eh]
		push	word ptr [bx+0Ch]
		push	word ptr [bx+0Ah]
		push	cs
		call	near ptr sub_261FA
		add	sp, 8
		mov	[bp+var_42C], ax
		lea	ax, [bp+var_14]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		push	[bp+arg_0]
		call	sub_328EE
		add	sp, 6
		lea	ax, [bp+var_42A]
		push	ax
		mov	ax, 0ACDCh
		push	ax
		push	[bp+var_42C]
		call	sub_329F2
		add	sp, 6
		lea	ax, [bp+var_446]
		push	ax
		lea	ax, [bp+var_42A]
		push	ax
		call	sub_32A72
		add	sp, 4
		mov	[bp+var_458], 0
		mov	[bp+var_456], 0
		mov	[bp+var_454], 1000h
		lea	ax, [bp+var_56A]
		push	ax
		lea	ax, [bp+var_446]
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_328EE
		add	sp, 6
		cmp	[bp+var_568], 0
		jle	short loc_25046
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+2], 0
		jge	short loc_25046
		jmp	loc_24F9F
; ---------------------------------------------------------------------------

loc_25046:				; CODE XREF: sub_24E9E+19Aj
					; sub_24E9E+1A3j
		push	[bp+var_14]	; int
		call	_abs
		add	sp, 2
		mov	bx, [bp+arg_0]
		mov	cx, [bx+10h]
		shl	cx, 1
		cmp	cx, ax
		jle	short loc_25077
		push	[bp+var_10]	; int
		call	_abs
		add	sp, 2
		mov	bx, [bp+arg_0]
		mov	cx, [bx+10h]
		shl	cx, 1
		cmp	cx, ax
		jle	short loc_25077
		jmp	loc_24F9F
; ---------------------------------------------------------------------------

loc_25077:				; CODE XREF: sub_24E9E+1BDj
					; sub_24E9E+1D4j
		lea	ax, [bp+var_56A]
		push	ax
		push	cs
		call	near ptr sub_263C6
		add	sp, 2
		mov	byte_4393D, al
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx+3312h]
		mov	dx, [bx+3314h]
		mov	[bp+var_45C], ax
		mov	[bp+var_45A], dx
		mov	[bp+var_A], ax
		mov	[bp+var_8], dx

loc_250A3:				; CODE XREF: sub_24E9E+115j
		mov	ax, word_443F2
		mov	word_4394E, ax
		mov	word_45D98, ax
		mov	word_4554A, 0
		mov	[bp+var_45E], 0
		cmp	word_4187C, 8
		jbe	short loc_250C6
		mov	byte_449F4, 8
		jmp	short loc_250CC
; ---------------------------------------------------------------------------

loc_250C6:				; CODE XREF: sub_24E9E+21Fj
		mov	al, byte ptr word_4187C
		mov	byte_449F4, al

loc_250CC:				; CODE XREF: sub_24E9E+226j
		cmp	byte_449F4, 4
		jbe	short loc_250E6
		les	bx, dword_4187E
		mov	ax, es:[bx+1Ah]
		cmp	es:[bx+2], ax
		jnz	short loc_250E6
		mov	byte_449F4, 4

loc_250E6:				; CODE XREF: sub_24E9E+233j
					; sub_24E9E+241j
		mov	[bp+var_44A], 0Fh
		mov	[bp+var_460], 1
		mov	[bp+var_1A], 0
		sub	si, si
		jmp	short loc_2513F
; ---------------------------------------------------------------------------

loc_250FA:				; CODE XREF: sub_24E9E+348j
		mov	[bp+var_460], 0
		mov	[bp+si+var_562], 0
		mov	bx, si
		shl	bx, 1
		push	word ptr [bx+60E4h]
		lea	ax, [bp+var_56A]
		push	ax
		call	sub_323D9
		add	sp, 4
		cmp	[bp+var_44A], 0
		jz	short loc_25134
		mov	bx, si
		shl	bx, 1
		push	word ptr [bx+60E4h]
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al

loc_25134:				; CODE XREF: sub_24E9E+281j
		cmp	[bp+var_44A], 0
		jnz	short loc_2513E
		jmp	loc_25220
; ---------------------------------------------------------------------------

loc_2513E:				; CODE XREF: sub_24E9E+29Bj
					; sub_24E9E+355j
		inc	si

loc_2513F:				; CODE XREF: sub_24E9E+25Aj
		mov	al, byte_449F4
		sub	ah, ah
		cmp	ax, si
		ja	short loc_2514B
		jmp	loc_251F6
; ---------------------------------------------------------------------------

loc_2514B:				; CODE XREF: sub_24E9E+2A8j
		mov	bx, si
		shl	bx, 1
		mov	ax, si
		shl	ax, 1
		shl	ax, 1
		add	ax, bp
		sub	ax, 416h
		mov	[bx+60E4h], ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_4187E
		mov	dx, word ptr dword_4187E+2
		push	si
		push	di
		lea	di, [bp+var_458]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		cmp	word_40ED0, 0
		jz	short loc_25196
		sar	[bp+var_458], 1
		sar	[bp+var_456], 1
		sar	[bp+var_454], 1

loc_25196:				; CODE XREF: sub_24E9E+2EAj
		lea	ax, [bp+var_56A]
		push	ax
		lea	ax, [bp+var_42A]
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_14]
		add	[bp+var_56A], ax
		mov	ax, [bp+var_12]
		add	[bp+var_568], ax
		mov	ax, [bp+var_10]
		add	[bp+var_566], ax
		mov	bx, si
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		push	si
		push	di
		lea	di, [bx-0B6Eh]
		lea	si, [bp+var_56A]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		cmp	[bp+var_566], 0Ch
		jl	short loc_251E9
		jmp	loc_250FA
; ---------------------------------------------------------------------------

loc_251E9:				; CODE XREF: sub_24E9E+346j
		mov	[bp+si+var_562], 1
		mov	[bp+var_1A], 1
		jmp	loc_2513E
; ---------------------------------------------------------------------------

loc_251F6:				; CODE XREF: sub_24E9E+2AAj
		cmp	[bp+var_460], 0
		jnz	short loc_25216
		cmp	[bp+var_1A], 0
		jz	short loc_25216
		push	[bp+var_14]	; int
		call	_abs
		add	sp, 2
		mov	bx, [bp+arg_0]
		cmp	[bx+10h], ax
		jge	short loc_25220

loc_25216:				; CODE XREF: sub_24E9E+35Dj
					; sub_24E9E+363j ...
		mov	ax, 0FFFFh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_25220:				; CODE XREF: sub_24E9E+29Dj
					; sub_24E9E+376j
		mov	bx, [bp+arg_0]
		mov	bx, [bx+6]
		mov	ax, [bx+0Ah]
		mov	dx, [bx+0Ch]
		mov	word ptr dword_41870, ax
		mov	word ptr dword_41870+2,	dx

loc_25233:				; CODE XREF: sub_24E9E+F70j
		les	bx, dword_41870
		mov	bl, es:[bx]
		sub	bh, bh
		mov	al, [bx+32F2h]
		sub	ah, ah
		add	ax, word_41852
		add	ax, word ptr dword_41870
		mov	dx, es
		add	ax, 2
		mov	word_4186A, ax
		mov	word_4186C, dx
		mov	bx, word ptr dword_41870
		mov	al, es:[bx+1]
		sub	ah, ah
		mov	[bp+var_2], ax
		mov	[bp+var_4], 0
		les	bx, [bp+var_B78]
		mov	ax, es:[bx]
		mov	dx, es:[bx+2]
		and	ax, [bp+var_45C]
		and	dx, [bp+var_45A]
		or	dx, ax
		jnz	short loc_25282
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25282:				; CODE XREF: sub_24E9E+3DFj
		les	bx, dword_41870
		mov	al, es:[bx]
		sub	ah, ah
		mov	[bp+var_418], ax
		mov	bx, ax
		mov	al, [bx+32F2h]
		mov	byte_449F4, al
		mov	al, [bx+3302h]
		mov	[bp+var_6], al
		mov	ax, word_41850
		add	ax, word_40ED2
		mov	dx, word_40ED4
		mov	word ptr dword_40ECA, ax
		mov	word ptr dword_40ECA+2,	dx
		mov	bx, word_442E6
		shl	bx, 1
		shl	bx, 1
		mov	[bx+5A88h], ax
		mov	[bx+5A8Ah], dx
		mov	bl, byte_4187A
		sub	bh, bh
		add	bx, word ptr dword_41870
		mov	es, word ptr dword_41870+2
		mov	al, es:[bx+2]
		mov	byte_41882, al
		mov	ax, word_41852
		add	ax, 2
		add	word ptr dword_41870, ax
		mov	[bp+var_44A], 0Fh
		mov	[bp+var_460], 1
		mov	[bp+var_1A], 0
		mov	ax, word ptr dword_41870
		mov	dx, es
		mov	word_41874, ax
		mov	word_41876, dx
		mov	[bp+var_E], 0
		jmp	short loc_25328
; ---------------------------------------------------------------------------
		align 2

loc_25304:				; CODE XREF: sub_24E9E+4C6j
		mov	[bp+var_460], 0

loc_2530A:				; CODE XREF: sub_24E9E+589j
		cmp	[bp+var_44A], 0
		jz	short loc_25325
		mov	bx, [bp+var_E]
		shl	bx, 1
		push	word ptr [bx+60E4h]
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al

loc_25325:				; CODE XREF: sub_24E9E+471j
					; sub_24E9E:loc_2536Ej	...
		inc	[bp+var_E]

loc_25328:				; CODE XREF: sub_24E9E+463j
		mov	al, byte_449F4
		sub	ah, ah
		cmp	[bp+var_E], ax
		jb	short loc_25335
		jmp	loc_2542A
; ---------------------------------------------------------------------------

loc_25335:				; CODE XREF: sub_24E9E+492j
		mov	bx, word_41874
		inc	word_41874
		mov	es, word_41876
		mov	al, es:[bx]
		mov	si, ax
		mov	bx, [bp+var_E]
		shl	bx, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, bp
		sub	ax, 416h
		mov	[bx+60E4h], ax
		mov	al, [bp+si+var_562]
		cbw
		cmp	ax, 0FFFFh
		jz	short loc_25370
		or	ax, ax
		jz	short loc_25304
		cmp	ax, 1
		jnz	short loc_2536E
		jmp	loc_253FD
; ---------------------------------------------------------------------------

loc_2536E:				; CODE XREF: sub_24E9E+4CBj
		jmp	short loc_25325
; ---------------------------------------------------------------------------

loc_25370:				; CODE XREF: sub_24E9E+4C2j
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr dword_4187E
		mov	dx, word ptr dword_4187E+2
		push	si
		push	di
		lea	di, [bp+var_458]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		movsw
		movsw
		movsw
		pop	ds
		pop	di
		pop	si
		cmp	word_40ED0, 0
		jz	short loc_253A8
		sar	[bp+var_458], 1
		sar	[bp+var_456], 1
		sar	[bp+var_454], 1

loc_253A8:				; CODE XREF: sub_24E9E+4FCj
		lea	ax, [bp+var_56A]
		push	ax
		lea	ax, [bp+var_42A]
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_328EE
		add	sp, 6
		mov	ax, [bp+var_14]
		add	[bp+var_56A], ax
		mov	ax, [bp+var_12]
		add	[bp+var_568], ax
		mov	ax, [bp+var_10]
		add	[bp+var_566], ax
		mov	bx, si
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		push	si
		push	di
		lea	di, [bx-0B6Eh]
		lea	si, [bp+var_56A]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		cmp	[bp+var_566], 0Ch
		jge	short loc_25406
		mov	[bp+si+var_562], 1

loc_253FD:				; CODE XREF: sub_24E9E+4CDj
		mov	[bp+var_1A], 1
		jmp	loc_25325
; ---------------------------------------------------------------------------
		align 2

loc_25406:				; CODE XREF: sub_24E9E+558j
		mov	[bp+var_460], 0
		mov	[bp+si+var_562], 0
		mov	bx, [bp+var_E]
		shl	bx, 1
		push	word ptr [bx+60E4h]
		lea	ax, [bp+var_56A]
		push	ax
		call	sub_323D9
		add	sp, 4
		jmp	loc_2530A
; ---------------------------------------------------------------------------

loc_2542A:				; CODE XREF: sub_24E9E+494j
		cmp	[bp+var_460], 0
		jz	short loc_25434
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25434:				; CODE XREF: sub_24E9E+591j
		cmp	[bp+var_44A], 0
		jz	short loc_25444
		cmp	[bp+var_1A], 0
		jnz	short loc_25444
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25444:				; CODE XREF: sub_24E9E+59Bj
					; sub_24E9E+5A1j
		mov	al, [bp+var_6]
		sub	ah, ah
		or	ax, ax
		jz	short loc_25470
		cmp	ax, 1
		jnz	short loc_25455
		jmp	loc_2585C
; ---------------------------------------------------------------------------

loc_25455:				; CODE XREF: sub_24E9E+5B2j
		cmp	ax, 2
		jnz	short loc_2545D
		jmp	loc_25BAA
; ---------------------------------------------------------------------------

loc_2545D:				; CODE XREF: sub_24E9E+5BAj
		cmp	ax, 3
		jnz	short loc_25465
		jmp	loc_2598E
; ---------------------------------------------------------------------------

loc_25465:				; CODE XREF: sub_24E9E+5C2j
		cmp	ax, 5
		jnz	short loc_2546D
		jmp	loc_25CE0
; ---------------------------------------------------------------------------

loc_2546D:				; CODE XREF: sub_24E9E+5CAj
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25470:				; CODE XREF: sub_24E9E+5ADj
		mov	ax, word ptr dword_40ECA
		mov	dx, word ptr dword_40ECA+2
		add	ax, 6
		mov	word ptr [bp+var_430], ax
		mov	word ptr [bp+var_430+2], dx
		mov	ax, word ptr dword_41870
		mov	dx, word ptr dword_41870+2
		mov	word_41874, ax
		mov	word_41876, dx
		sub	ax, ax
		mov	[bp+var_16], ax
		mov	[bp+var_18], ax
		mov	[bp+var_44A], 0Fh
		cmp	[bp+var_1A], ax
		jnz	short loc_25518
		sub	si, si
		jmp	short loc_254A7
; ---------------------------------------------------------------------------

loc_254A6:				; CODE XREF: sub_24E9E+678j
		inc	si

loc_254A7:				; CODE XREF: sub_24E9E+606j
		mov	al, byte_449F4
		sub	ah, ah
		cmp	ax, si
		ja	short loc_254B3
		jmp	loc_2571A
; ---------------------------------------------------------------------------

loc_254B3:				; CODE XREF: sub_24E9E+610j
		mov	bx, word_41874
		inc	word_41874
		mov	es, word_41876
		mov	al, es:[bx]
		mov	[bp+var_C], ax
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0B6Ah]
		cwd
		add	[bp+var_18], ax
		adc	[bp+var_16], dx
		mov	ax, si
		shl	ax, 1
		add	ax, 60E4h
		mov	[bp+var_B7A], ax
		mov	bx, ax
		mov	bx, [bx]
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, [bp+var_430]
		mov	es:[bx], ax
		mov	es:[bx+2], dx
		cmp	[bp+var_44A], 0
		jz	short loc_25511
		mov	bx, [bp+var_B7A]
		push	word ptr [bx]
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al

loc_25511:				; CODE XREF: sub_24E9E+660j
		add	word ptr [bp+var_430], 4
		jmp	short loc_254A6
; ---------------------------------------------------------------------------

loc_25518:				; CODE XREF: sub_24E9E+602j
		mov	[bp+var_E], 0
		mov	bl, byte_449F4
		sub	bh, bh
		add	bx, word ptr dword_41870
		mov	es, word ptr dword_41870+2
		mov	al, es:[bx-1]
		sub	ah, ah
		mov	[bp+var_448], ax
		sub	si, si
		jmp	loc_255EE
; ---------------------------------------------------------------------------

loc_2553A:				; CODE XREF: sub_24E9E+794j
		mov	bx, [bp+var_448]
		add	bx, bp
		cmp	byte ptr [bx-562h], 0
		jz	short loc_2554A
		jmp	loc_255E6
; ---------------------------------------------------------------------------

loc_2554A:				; CODE XREF: sub_24E9E+6A7j
		mov	ax, 0Ch
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		mov	ax, [bp+var_C]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		mov	ax, [bp+var_448]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		call	sub_33014
		add	sp, 8
		lea	ax, [bp+var_574]
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_323D9
		add	sp, 4
		mov	ax, [bp+var_448]
		shl	ax, 1
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_B7C], ax
		mov	bx, ax
		mov	ax, [bp+var_574]
		cmp	[bx-416h], ax
		jnz	short loc_255B4
		mov	ax, [bp+var_572]
		cmp	[bx-414h], ax
		jz	short loc_255E6

loc_255B4:				; CODE XREF: sub_24E9E+70Aj
		cmp	[bp+var_44A], 0
		jz	short loc_255CB
		lea	ax, [bp+var_574]
		push	ax
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al

loc_255CB:				; CODE XREF: sub_24E9E+71Bj
		les	bx, [bp+var_430]
		mov	ax, [bp+var_574]
		mov	dx, [bp+var_572]
		mov	es:[bx], ax
		mov	es:[bx+2], dx

loc_255DE:				; CODE XREF: sub_24E9E+85Fj
					; sub_24E9E+873j
		add	word ptr [bp+var_430], 4
		inc	[bp+var_E]

loc_255E6:				; CODE XREF: sub_24E9E+6A9j
					; sub_24E9E+714j
		mov	ax, [bp+var_C]
		mov	[bp+var_448], ax
		inc	si

loc_255EE:				; CODE XREF: sub_24E9E+699j
		mov	al, byte_449F4
		sub	ah, ah
		cmp	ax, si
		ja	short loc_255FA
		jmp	loc_25714
; ---------------------------------------------------------------------------

loc_255FA:				; CODE XREF: sub_24E9E+757j
		mov	bx, word_41874
		inc	word_41874
		mov	es, word_41876
		mov	al, es:[bx]
		mov	[bp+var_C], ax
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_B7A], ax
		mov	bx, ax
		mov	ax, [bx-0B6Ah]
		cwd
		add	[bp+var_18], ax
		adc	[bp+var_16], dx
		mov	bx, cx
		add	bx, bp
		cmp	byte ptr [bx-562h], 0
		jz	short loc_25635
		jmp	loc_2553A
; ---------------------------------------------------------------------------

loc_25635:				; CODE XREF: sub_24E9E+792j
		mov	bx, [bp+var_448]
		add	bx, bp
		cmp	byte ptr [bx-562h], 0
		jnz	short loc_25645
		jmp	loc_256D7
; ---------------------------------------------------------------------------

loc_25645:				; CODE XREF: sub_24E9E+7A2j
		mov	ax, 0Ch
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		mov	ax, [bp+var_448]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		mov	ax, [bp+var_B7A]
		sub	ax, 0B6Eh
		push	ax
		call	sub_33014
		add	sp, 8
		lea	ax, [bp+var_574]
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_323D9
		add	sp, 4
		mov	ax, [bp+var_C]
		shl	ax, 1
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_B7C], ax
		mov	bx, ax
		mov	ax, [bp+var_574]
		cmp	[bx-416h], ax
		jnz	short loc_256A5
		mov	ax, [bp+var_572]
		cmp	[bx-414h], ax
		jz	short loc_256D7

loc_256A5:				; CODE XREF: sub_24E9E+7FBj
		cmp	[bp+var_44A], 0
		jz	short loc_256BC
		lea	ax, [bp+var_574]
		push	ax
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al

loc_256BC:				; CODE XREF: sub_24E9E+80Cj
		les	bx, [bp+var_430]
		mov	ax, [bp+var_574]
		mov	dx, [bp+var_572]
		mov	es:[bx], ax
		mov	es:[bx+2], dx
		add	word ptr [bp+var_430], 4
		inc	[bp+var_E]

loc_256D7:				; CODE XREF: sub_24E9E+7A4j
					; sub_24E9E+805j
		mov	ax, si
		shl	ax, 1
		add	ax, 60E4h
		mov	[bp+var_B7C], ax
		mov	bx, ax
		mov	bx, [bx]
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, [bp+var_430]
		mov	es:[bx], ax
		mov	es:[bx+2], dx
		cmp	[bp+var_44A], 0
		jnz	short loc_25700
		jmp	loc_255DE
; ---------------------------------------------------------------------------

loc_25700:				; CODE XREF: sub_24E9E+85Dj
		mov	bx, [bp+var_B7C]
		push	word ptr [bx]
		push	cs
		call	near ptr sub_25EE2
		add	sp, 2
		and	[bp+var_44A], al
		jmp	loc_255DE
; ---------------------------------------------------------------------------

loc_25714:				; CODE XREF: sub_24E9E+759j
		mov	al, byte ptr [bp+var_E]
		mov	byte_449F4, al

loc_2571A:				; CODE XREF: sub_24E9E+612j
		cmp	byte_449F4, 0
		jnz	short loc_25724
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25724:				; CODE XREF: sub_24E9E+881j
		cmp	[bp+var_44A], 0
		jz	short loc_2572E
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_2572E:				; CODE XREF: sub_24E9E+88Bj
		test	byte ptr [bp+var_2], 1
		jnz	short loc_25760
		les	bx, [bp+var_434]
		mov	ax, es:[bx]
		mov	dx, es:[bx+2]
		and	ax, [bp+var_A]
		and	dx, [bp+var_8]
		or	dx, ax
		jnz	short loc_25760
		mov	ax, word ptr dword_40ECA
		mov	dx, word ptr dword_40ECA+2
		add	ax, 6
		push	dx
		push	ax
		push	cs
		call	near ptr sub_25F2E
		add	sp, 4
		or	al, al
		jz	short loc_25763

loc_25760:				; CODE XREF: sub_24E9E+894j
					; sub_24E9E+8A9j
		inc	[bp+var_4]

loc_25763:				; CODE XREF: sub_24E9E+8C0j
		cmp	[bp+var_4], 0
		jnz	short loc_2576C
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_2576C:				; CODE XREF: sub_24E9E+8C9j
		test	byte_4186E, 8
		jnz	short loc_25776
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25776:				; CODE XREF: sub_24E9E+8D3j
		mov	ax, word ptr dword_40ECA
		mov	dx, word ptr dword_40ECA+2
		add	ax, 6
		mov	word ptr [bp+var_56E], ax
		mov	word ptr [bp+var_56E+2], dx
		mov	[bp+var_E], 0
		jmp	short loc_257F7
; ---------------------------------------------------------------------------
		align 2

loc_25790:				; CODE XREF: sub_24E9E+961j
		les	bx, [bp+var_56E]
		mov	ax, es:[bx]
		mov	[bp+var_564], ax
		mov	ax, es:[bx+2]
		mov	[bp+var_570], ax
		add	word ptr [bp+var_56E], 4
		mov	bx, word_41878
		mov	ax, [bx]
		cmp	[bp+var_564], ax
		jge	short loc_257BA
		mov	ax, [bp+var_564]
		mov	[bx], ax

loc_257BA:				; CODE XREF: sub_24E9E+914j
		mov	ax, [bp+var_564]
		inc	ax
		mov	[bp+var_B7C], ax
		mov	bx, word_41878
		cmp	[bx+2],	ax
		jge	short loc_257CF
		mov	[bx+2],	ax

loc_257CF:				; CODE XREF: sub_24E9E+92Cj
		mov	bx, word_41878
		mov	ax, [bp+var_570]
		cmp	[bx+4],	ax
		jle	short loc_257DF
		mov	[bx+4],	ax

loc_257DF:				; CODE XREF: sub_24E9E+93Cj
		mov	ax, [bp+var_570]
		inc	ax
		mov	[bp+var_B7C], ax
		mov	bx, word_41878
		cmp	[bx+6],	ax
		jge	short loc_257F4
		mov	[bx+6],	ax

loc_257F4:				; CODE XREF: sub_24E9E+951j
		inc	[bp+var_E]

loc_257F7:				; CODE XREF: sub_24E9E+8EFj
		mov	al, byte_449F4
		sub	ah, ah
		cmp	[bp+var_E], ax
		jb	short loc_25790

loc_25801:				; CODE XREF: sub_24E9E+3E1j
					; sub_24E9E+593j ...
		mov	ax, word_4186A
		mov	dx, word_4186C
		mov	word ptr dword_41870, ax
		mov	word ptr dword_41870+2,	dx
		add	word ptr [bp+var_434], 4
		add	word ptr [bp+var_B78], 4
		cmp	[bp+var_4], 0
		jz	short loc_25822
		jmp	loc_25D3C
; ---------------------------------------------------------------------------

loc_25822:				; CODE XREF: sub_24E9E+97Fj
		test	byte ptr [bp+var_2], 2
		jz	short loc_2582B
		jmp	loc_25E04
; ---------------------------------------------------------------------------

loc_2582B:				; CODE XREF: sub_24E9E+988j
					; sub_24E9E+9BBj
		les	bx, dword_41870
		test	byte ptr es:[bx+1], 2
		jnz	short loc_25839
		jmp	loc_25E04
; ---------------------------------------------------------------------------

loc_25839:				; CODE XREF: sub_24E9E+996j
		mov	bl, es:[bx]
		sub	bh, bh
		mov	al, [bx+32F2h]
		sub	ah, ah
		add	ax, word_41852
		add	ax, 2
		add	word ptr dword_41870, ax
		add	word ptr [bp+var_B78], 4
		add	word ptr [bp+var_434], 4
		jmp	short loc_2582B
; ---------------------------------------------------------------------------
		align 2

loc_2585C:				; CODE XREF: sub_24E9E+5B4j
		les	bx, dword_41870
		mov	al, es:[bx]
		sub	ah, ah
		mov	si, ax
		mov	al, es:[bx+1]
		mov	di, ax
		mov	al, [bp+di+var_562]
		cbw
		mov	cx, ax
		mov	al, [bp+si+var_562]
		cbw
		add	ax, cx
		cmp	ax, 2
		jz	short loc_25801
		cmp	[bp+si+var_562], 0
		jz	short loc_258BC
		mov	ax, 0Ch
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		call	sub_33014
		add	sp, 8
		mov	ax, si
		jmp	short loc_258F6
; ---------------------------------------------------------------------------

loc_258BC:				; CODE XREF: sub_24E9E+9E7j
		cmp	[bp+di+var_562], 0
		jz	short loc_2590D
		mov	ax, 0Ch
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		mov	ax, di
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		sub	ax, 0B6Eh
		push	ax
		call	sub_33014
		add	sp, 8
		mov	ax, di

loc_258F6:				; CODE XREF: sub_24E9E+A1Cj
		shl	ax, 1
		shl	ax, 1
		add	ax, bp
		sub	ax, 416h
		push	ax
		lea	ax, [bp+var_458]
		push	ax
		call	sub_323D9
		add	sp, 4

loc_2590D:				; CODE XREF: sub_24E9E+A23j
		mov	bx, si
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0B6Ah]
		mov	bx, di
		mov	cx, bx
		shl	bx, 1
		add	bx, cx
		shl	bx, 1
		add	bx, bp
		add	ax, [bx-0B6Ah]
		cwd
		mov	[bp+var_18], ax
		mov	[bp+var_16], dx
		mov	bx, word_41854
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+6], ax
		mov	es:[bx+8], dx
		mov	bx, word_41856
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+0Ah], ax
		mov	es:[bx+0Ch], dx
		test	byte_4186E, 8
		jz	short loc_25983
		push	word_41878
		push	word_41854
		push	cs
		call	near ptr sub_2637A
		add	sp, 4
		push	word_41878
		push	word_41856

loc_2597C:				; CODE XREF: sub_24E9E+E3Fj
		push	cs
		call	near ptr sub_2637A
		add	sp, 4

loc_25983:				; CODE XREF: sub_24E9E+AC5j
					; sub_24E9E+DF1j
		mov	byte_449F4, 2

loc_25988:				; CODE XREF: sub_24E9E+E9Bj
		inc	[bp+var_4]
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_2598E:				; CODE XREF: sub_24E9E+5C4j
		cmp	[bp+var_1A], 0
		jz	short loc_25997
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25997:				; CODE XREF: sub_24E9E+AF4j
		mov	bx, word_41854
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+6], ax
		mov	es:[bx+8], dx
		mov	bx, word_41856
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+0Ah], ax
		mov	es:[bx+0Ch], dx
		mov	bx, word_41858
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+0Eh], ax
		mov	es:[bx+10h], dx
		mov	bx, word_4185A
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+12h], ax
		mov	es:[bx+14h], dx
		mov	ax, word ptr dword_40ECA
		mov	dx, word ptr dword_40ECA+2
		add	ax, 6
		push	dx
		push	ax
		push	cs
		call	near ptr sub_25F2E
		add	sp, 4
		or	al, al
		jnz	short loc_25A7C
		mov	bx, word_4185A
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+6], ax
		mov	es:[bx+8], dx
		mov	bx, word_4185C
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+0Ah], ax
		mov	es:[bx+0Ch], dx
		mov	bx, word_4185E
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+0Eh], ax
		mov	es:[bx+10h], dx
		mov	bx, word_41854
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+12h], ax
		mov	es:[bx+14h], dx
		les	bx, dword_41870
		mov	al, es:[bx+3]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0B6Ah]
		cwd
		mov	cl, 2

loc_25A71:				; CODE XREF: sub_24E9E+BD9j
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_25A71
		jmp	short loc_25A9E
; ---------------------------------------------------------------------------
		align 2

loc_25A7C:				; CODE XREF: sub_24E9E+B62j
		les	bx, dword_41870
		mov	al, es:[bx]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0B6Ah]
		cwd
		mov	cl, 2

loc_25A96:				; CODE XREF: sub_24E9E+BFEj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_25A96

loc_25A9E:				; CODE XREF: sub_24E9E+BDBj
		mov	[bp+var_18], ax
		mov	[bp+var_16], dx
		les	bx, dword_40ECA
		mov	ax, es:[bx+8]
		sub	ax, es:[bx+0Ch]
		push	ax
		mov	ax, es:[bx+6]
		sub	ax, es:[bx+0Ah]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	si, ax
		les	bx, dword_40ECA
		mov	ax, es:[bx+8]
		sub	ax, es:[bx+10h]
		push	ax
		mov	ax, es:[bx+6]
		sub	ax, es:[bx+0Eh]
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	di, ax
		cmp	di, si
		jle	short loc_25AEA
		mov	si, di

loc_25AEA:				; CODE XREF: sub_24E9E+C48j
		test	byte_4186E, 8
		jnz	short loc_25AF4
		jmp	loc_25B9C
; ---------------------------------------------------------------------------

loc_25AF4:				; CODE XREF: sub_24E9E+C51j
		les	bx, dword_40ECA
		mov	ax, es:[bx+6]
		sub	ax, si
		dec	ax
		mov	[bp+var_450], ax
		mov	ax, es:[bx+8]
		sub	ax, si
		dec	ax
		mov	[bp+var_44E], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		push	cs
		call	near ptr sub_2637A
		add	sp, 4
		les	bx, dword_40ECA
		mov	ax, es:[bx+8]
		add	ax, si
		inc	ax
		mov	[bp+var_44E], ax
		mov	ax, es:[bx+6]
		add	ax, si
		inc	ax
		mov	[bp+var_450], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		push	cs
		call	near ptr sub_2637A
		add	sp, 4
		les	bx, dword_40ECA
		mov	ax, es:[bx+12h]
		sub	ax, si
		dec	ax
		mov	[bp+var_450], ax
		mov	ax, es:[bx+14h]
		sub	ax, si
		dec	ax
		mov	[bp+var_44E], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		push	cs
		call	near ptr sub_2637A
		add	sp, 4
		les	bx, dword_40ECA
		mov	ax, es:[bx+14h]
		add	ax, si
		inc	ax
		mov	[bp+var_44E], ax
		mov	ax, es:[bx+12h]
		add	ax, si
		inc	ax
		mov	[bp+var_450], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		push	cs
		call	near ptr sub_2637A
		add	sp, 4

loc_25B9C:				; CODE XREF: sub_24E9E+C53j
		mov	byte_449F4, 4
		mov	[bp+var_4], 1
		jmp	loc_25801
; ---------------------------------------------------------------------------
		align 2

loc_25BAA:				; CODE XREF: sub_24E9E+5BCj
		les	bx, dword_41870
		mov	al, es:[bx]
		sub	ah, ah
		mov	si, ax
		mov	al, es:[bx+1]
		mov	di, ax
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_B7C], ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_B7A], ax
		mov	bx, ax
		mov	ax, [bx-0B6Ah]
		mov	bx, [bp+var_B7C]
		add	ax, [bx-0B6Ah]
		cwd
		mov	[bp+var_18], ax
		mov	[bp+var_16], dx
		mov	al, [bp+di+var_562]
		cbw
		mov	cx, ax
		mov	al, [bp+si+var_562]
		cbw
		add	ax, cx
		jz	short loc_25C01
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25C01:				; CODE XREF: sub_24E9E+D5Ej
		mov	bx, word_41854
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+6], ax
		mov	es:[bx+8], dx
		mov	bx, [bp+var_B7A]
		push	si
		push	di
		lea	di, [bp+var_56A]
		lea	si, [bx-0B6Eh]
		push	ss
		pop	es
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	bx, [bp+var_B7C]
		push	si
		push	di
		lea	di, [bp+var_B74]
		lea	si, [bx-0B6Eh]
		movsw
		movsw
		movsw
		pop	di
		pop	si
		mov	ax, [bp+var_56A]
		sub	ax, [bp+var_B74]
		mov	[bp+var_458], ax
		mov	ax, [bp+var_568]
		sub	ax, [bp+var_B72]
		mov	[bp+var_456], ax
		mov	ax, [bp+var_566]
		sub	ax, [bp+var_B70]
		mov	[bp+var_454], ax
		push	[bp+var_566]
		lea	ax, [bp+var_458]
		push	ax
		call	sub_2EA08
		add	sp, 2
		push	ax
		call	sub_3275C
		add	sp, 4
		mov	[bp+var_462], ax
		les	bx, dword_40ECA
		mov	es:[bx+0Ah], ax
		test	byte_4186E, 8
		jnz	short loc_25C92
		jmp	loc_25983
; ---------------------------------------------------------------------------

loc_25C92:				; CODE XREF: sub_24E9E+DEFj
		mov	bx, word_41854
		mov	ax, [bx+2]
		sub	ax, [bp+var_462]
		mov	[bp+var_44E], ax
		mov	ax, [bx]
		sub	ax, [bp+var_462]
		mov	[bp+var_450], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		push	cs
		call	near ptr sub_2637A
		add	sp, 4
		mov	ax, [bp+var_462]
		mov	bx, word_41854
		add	ax, [bx]
		mov	[bp+var_450], ax
		mov	ax, [bx+2]
		add	ax, [bp+var_462]
		mov	[bp+var_450], ax
		push	word_41878
		lea	ax, [bp+var_450]
		push	ax
		jmp	loc_2597C
; ---------------------------------------------------------------------------

loc_25CE0:				; CODE XREF: sub_24E9E+5CCj
		les	bx, dword_41870
		mov	al, es:[bx]
		sub	ah, ah
		mov	si, ax
		cmp	[bp+si+var_562], ah
		jz	short loc_25CF4
		jmp	loc_25801
; ---------------------------------------------------------------------------

loc_25CF4:				; CODE XREF: sub_24E9E+E51j
		mov	bx, si
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-0B6Ah]
		cwd
		mov	[bp+var_18], ax
		mov	[bp+var_16], dx
		mov	bx, word_41854
		mov	ax, [bx]
		mov	dx, [bx+2]
		les	bx, dword_40ECA
		mov	es:[bx+6], ax
		mov	es:[bx+8], dx
		test	byte_4186E, 8
		jz	short loc_25D34
		push	word_41878
		push	word_41854
		push	cs
		call	near ptr sub_2637A
		add	sp, 4

loc_25D34:				; CODE XREF: sub_24E9E+E85j
		mov	byte_449F4, 1
		jmp	loc_25988
; ---------------------------------------------------------------------------

loc_25D3C:				; CODE XREF: sub_24E9E+981j
		inc	[bp+var_45E]
		les	bx, dword_40ECA
		mov	al, byte_449F4
		mov	es:[bx+3], al
		les	bx, dword_40ECA
		mov	al, [bp+var_6]
		mov	es:[bx+4], al
		cmp	byte_41882, 2Dh	; '-'
		jnz	short loc_25D66
		les	bx, dword_40ECA
		mov	al, byte_45514
		jmp	short loc_25D6D
; ---------------------------------------------------------------------------

loc_25D66:				; CODE XREF: sub_24E9E+EBDj
		les	bx, dword_40ECA
		mov	al, byte_41882

loc_25D6D:				; CODE XREF: sub_24E9E+EC6j
		mov	es:[bx+2], al
		mov	al, byte_449F4
		sub	ah, ah
		cmp	ax, 1
		jz	short loc_25D9C
		cmp	ax, 2
		jz	short loc_25DB8
		cmp	ax, 4
		jz	short loc_25DC6
		cmp	ax, 8
		jz	short loc_25DDA
		sub	cx, cx
		push	cx
		push	ax
		push	[bp+var_16]
		push	[bp+var_18]
		call	__aFuldiv
		jmp	short loc_25DC2
; ---------------------------------------------------------------------------
		align 2

loc_25D9C:				; CODE XREF: sub_24E9E+EDBj
		mov	si, [bp+var_18]

loc_25D9F:				; CODE XREF: sub_24E9E+F26j
		les	bx, dword_40ECA
		mov	es:[bx], si
		test	byte_4186E, 1
		jnz	short loc_25DB3
		test	byte ptr [bp+var_2], 2
		jz	short loc_25DEE

loc_25DB3:				; CODE XREF: sub_24E9E+F0Dj
		sub	ax, ax
		jmp	short loc_25DF1
; ---------------------------------------------------------------------------
		align 2

loc_25DB8:				; CODE XREF: sub_24E9E+EE0j
		mov	ax, [bp+var_18]
		mov	dx, [bp+var_16]
		sar	dx, 1
		rcr	ax, 1

loc_25DC2:				; CODE XREF: sub_24E9E+EFBj
					; sub_24E9E+F32j ...
		mov	si, ax
		jmp	short loc_25D9F
; ---------------------------------------------------------------------------

loc_25DC6:				; CODE XREF: sub_24E9E+EE5j
		mov	ax, [bp+var_18]
		mov	dx, [bp+var_16]
		mov	cl, 2

loc_25DCE:				; CODE XREF: sub_24E9E+F3Aj
		or	cl, cl
		jz	short loc_25DC2
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jmp	short loc_25DCE
; ---------------------------------------------------------------------------

loc_25DDA:				; CODE XREF: sub_24E9E+EEAj
		mov	ax, [bp+var_18]
		mov	dx, [bp+var_16]
		mov	cl, 3

loc_25DE2:				; CODE XREF: sub_24E9E+F4Ej
		or	cl, cl
		jz	short loc_25DC2
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jmp	short loc_25DE2
; ---------------------------------------------------------------------------

loc_25DEE:				; CODE XREF: sub_24E9E+F13j
		mov	ax, 1

loc_25DF1:				; CODE XREF: sub_24E9E+F17j
		push	ax
		push	si
		push	cs
		call	near ptr sub_25E24
		add	sp, 4
		mov	word_40ECE, ax
		or	ax, ax
		jz	short loc_25E04
		jmp	loc_24EAE
; ---------------------------------------------------------------------------

loc_25E04:				; CODE XREF: sub_24E9E+98Aj
					; sub_24E9E+998j ...
		les	bx, dword_41870
		cmp	byte ptr es:[bx], 0
		jz	short loc_25E11
		jmp	loc_25233
; ---------------------------------------------------------------------------

loc_25E11:				; CODE XREF: sub_24E9E+F6Ej
		cmp	[bp+var_45E], 0
		jnz	short loc_25E1B
		jmp	loc_25216
; ---------------------------------------------------------------------------

loc_25E1B:				; CODE XREF: sub_24E9E+F78j
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_24E9E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_25E24	proc far		; CODE XREF: sub_24E9E+F56p

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		cmp	[bp+arg_2], 0
		jnz	short loc_25E3E
		mov	bx, word_45D98
		shl	bx, 1
		mov	di, [bx+5766h]
		jmp	short loc_25E7B
; ---------------------------------------------------------------------------

loc_25E3E:				; CODE XREF: sub_25E24+Cj
		mov	ax, word_4394E
		mov	word_45D98, ax
		mov	bx, ax
		shl	bx, 1
		mov	di, [bx+5766h]
		mov	si, word_4554A
		jmp	short loc_25E77
; ---------------------------------------------------------------------------

loc_25E52:				; CODE XREF: sub_25E24+55j
		mov	ax, si
		dec	si
		or	ax, ax
		jz	short loc_25E7B
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		les	bx, [bx+5A88h]
		mov	ax, [bp+arg_0]
		cmp	es:[bx], ax
		jl	short loc_25E7B
		mov	word_45D98, di
		mov	bx, di
		shl	bx, 1
		mov	di, [bx+5766h]

loc_25E77:				; CODE XREF: sub_25E24+2Cj
		or	di, di
		jge	short loc_25E52

loc_25E7B:				; CODE XREF: sub_25E24+18j
					; sub_25E24+33j ...
		mov	bx, word_442E6
		shl	bx, 1
		mov	[bx+5766h], di
		mov	bx, word_45D98
		shl	bx, 1
		mov	ax, word_442E6
		mov	[bx+5766h], ax
		inc	word_4554A
		or	di, di
		jge	short loc_25EA0
		mov	ax, word_442E6
		mov	word_443F2, ax

loc_25EA0:				; CODE XREF: sub_25E24+74j
		mov	bx, word_45D98
		shl	bx, 1
		mov	ax, [bx+5766h]
		mov	word_45D98, ax
		inc	word_442E6
		mov	al, byte_449F4
		sub	ah, ah
		shl	ax, 1
		shl	ax, 1
		add	ax, 6
		add	word_41850, ax
		cmp	word_442E6, 190h
		jz	short loc_25ED1
		cmp	word_41850, 2872h
		jle	short loc_25EDA

loc_25ED1:				; CODE XREF: sub_25E24+A3j
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_25EDA:				; CODE XREF: sub_25E24+ABj
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_25E24	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_25EE2	proc far		; CODE XREF: sub_24E9E+28Cp
					; sub_24E9E+47Dp ...

var_4		= byte ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		mov	si, [bp+arg_0]
		mov	ax, word_40EB4
		cmp	[si+2],	ax
		jge	short loc_25EFA
		mov	[bp+var_4], 1
		jmp	short loc_25F0C
; ---------------------------------------------------------------------------

loc_25EFA:				; CODE XREF: sub_25EE2+10j
		mov	ax, word_40EB6
		cmp	[si+2],	ax
		jle	short loc_25F08
		mov	[bp+var_4], 2
		jmp	short loc_25F0C
; ---------------------------------------------------------------------------

loc_25F08:				; CODE XREF: sub_25EE2+1Ej
		mov	[bp+var_4], 0

loc_25F0C:				; CODE XREF: sub_25EE2+16j
					; sub_25EE2+24j
		mov	ax, word_40EB0
		cmp	[si], ax
		jge	short loc_25F1A
		or	[bp+var_4], 4
		jmp	short loc_25F25
; ---------------------------------------------------------------------------
		align 2

loc_25F1A:				; CODE XREF: sub_25EE2+2Fj
		mov	ax, word_40EB2
		cmp	[si], ax
		jle	short loc_25F25
		or	[bp+var_4], 8

loc_25F25:				; CODE XREF: sub_25EE2+35j
					; sub_25EE2+3Dj
		mov	al, [bp+var_4]
		cbw
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_25EE2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_25F2E	proc far		; CODE XREF: sub_24E9E+8B8p
					; sub_24E9E+B5Ap

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		les	bx, [bp+arg_0]
		mov	ax, es:[bx+4]
		cwd
		mov	cx, ax
		mov	ax, es:[bx]
		mov	bx, dx
		cwd
		sub	ax, cx
		sbb	dx, bx
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	bx, word ptr [bp+arg_0]
		mov	ax, es:[bx+4]
		cwd
		mov	cx, ax
		mov	ax, es:[bx+8]
		mov	bx, dx
		cwd
		sub	ax, cx
		sbb	dx, bx
		mov	[bp+var_C], ax
		mov	[bp+var_A], dx
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jnz	short loc_25F7A
		mov	ax, [bp+var_C]
		or	ax, dx
		jz	short loc_25FEE

loc_25F7A:				; CODE XREF: sub_25F2E+43j
		mov	bx, word ptr [bp+arg_0]
		mov	ax, es:[bx+2]
		sub	ax, es:[bx+6]
		cwd
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		mov	ax, es:[bx+0Ah]
		sub	ax, es:[bx+6]
		cwd
		mov	[bp+var_10], ax
		mov	[bp+var_E], dx
		mov	ax, [bp+var_8]
		or	ax, [bp+var_6]
		jnz	short loc_25FAA
		mov	ax, [bp+var_10]
		or	ax, dx
		jz	short loc_25FEE

loc_25FAA:				; CODE XREF: sub_25F2E+73j
		push	[bp+var_E]
		push	[bp+var_10]
		push	[bp+var_2]
		push	[bp+var_4]
		call	__aFlmul
		push	[bp+var_6]
		push	[bp+var_8]
		push	[bp+var_A]
		push	[bp+var_C]
		mov	si, ax
		mov	di, dx
		call	__aFlmul
		sub	ax, si
		sbb	dx, di
		or	dx, dx
		jl	short loc_25FE4
		jg	short loc_25FDE
		or	ax, ax
		jz	short loc_25FE4

loc_25FDE:				; CODE XREF: sub_25F2E+AAj
		mov	al, 1
		jmp	short loc_25FE6
; ---------------------------------------------------------------------------
		align 4

loc_25FE4:				; CODE XREF: sub_25F2E+A8j
					; sub_25F2E+AEj
		sub	al, al

loc_25FE6:				; CODE XREF: sub_25F2E+B2j
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_25FEE:				; CODE XREF: sub_25F2E+4Aj
					; sub_25F2E+7Aj
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_25F2E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_25FF6	proc far		; CODE XREF: sub_11C42+9FAP
					; sub_1A0F4+F85P ...

var_40		= word ptr -40h
var_3E		= dword	ptr -3Eh
var_38		= dword	ptr -38h
var_32		= byte ptr -32h
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 40h
		push	di
		push	si
		mov	di, 190h
		sub	si, si
		jmp	loc_260AC
; ---------------------------------------------------------------------------

loc_26006:				; CODE XREF: sub_25FF6+102j
		les	bx, [bp+var_38]
		mov	al, es:[bx+3]
		cbw
		mov	[bp+var_2], ax
		mov	ax, bx
		mov	dx, es
		add	ax, 6
		mov	word ptr [bp+var_3E], ax
		mov	word ptr [bp+var_3E+2],	dx
		lea	ax, [bp+var_32]
		mov	[bp+var_A], ax
		mov	[bp+var_4], 0
		jmp	short loc_26049
; ---------------------------------------------------------------------------
		align 2

loc_2602C:				; CODE XREF: sub_25FF6+59j
		les	bx, [bp+var_3E]
		mov	ax, es:[bx]
		mov	dx, es:[bx+2]
		mov	bx, [bp+var_A]
		mov	[bx], ax
		mov	[bx+2],	dx
		add	[bp+var_A], 4
		add	word ptr [bp+var_3E], 4
		inc	[bp+var_4]

loc_26049:				; CODE XREF: sub_25FF6+33j
		mov	ax, [bp+var_2]
		cmp	[bp+var_4], ax
		jb	short loc_2602C
		mov	bx, [bp+var_6]
		shl	bx, 1
		add	bx, word_45D1E
		mov	ax, [bx]
		or	ax, ax
		jz	short loc_26070
		cmp	ax, 1
		jz	short loc_26084
		cmp	ax, 2
		jnz	short loc_2606D
		jmp	loc_26118
; ---------------------------------------------------------------------------

loc_2606D:				; CODE XREF: sub_25FF6+72j
		jmp	short loc_260AB
; ---------------------------------------------------------------------------
		align 2

loc_26070:				; CODE XREF: sub_25FF6+68j
		lea	ax, [bp+var_32]
		push	ax
		push	[bp+var_2]
		push	[bp+var_8]
		call	sub_317B2

loc_2607F:				; CODE XREF: sub_25FF6+1F7j
		add	sp, 6
		jmp	short loc_260AB
; ---------------------------------------------------------------------------

loc_26084:				; CODE XREF: sub_25FF6+6Dj
		mov	bx, [bp+var_6]
		shl	bx, 1
		add	bx, word_45D92
		mov	ax, [bx]
		mov	[bp+var_40], ax
		or	ax, ax
		jz	short loc_260AB
		lea	ax, [bp+var_32]
		push	ax
		push	[bp+var_2]
		push	[bp+var_8]
		push	[bp+var_40]
		call	sub_32886

loc_260A8:				; CODE XREF: sub_25FF6+1E1j
		add	sp, 8

loc_260AB:				; CODE XREF: sub_25FF6:loc_2606Dj
					; sub_25FF6+8Cj ...
		inc	si

loc_260AC:				; CODE XREF: sub_25FF6+Dj
		mov	ax, si
		cmp	ax, word_442E6
		jb	short loc_260B7
		jmp	loc_261F0
; ---------------------------------------------------------------------------

loc_260B7:				; CODE XREF: sub_25FF6+BCj
		mov	bx, di
		shl	bx, 1
		mov	di, [bx+5766h]
		mov	bx, di
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx+5A88h]
		mov	dx, [bx+5A8Ah]
		mov	word ptr [bp+var_38], ax
		mov	word ptr [bp+var_38+2],	dx
		les	bx, [bp+var_38]
		mov	al, es:[bx+2]
		sub	ah, ah
		mov	[bp+var_6], ax
		mov	bx, ax
		shl	bx, 1
		add	bx, word_45632
		mov	ax, [bx]
		mov	[bp+var_8], ax
		mov	bx, word ptr [bp+var_38]
		mov	al, es:[bx+4]
		cbw
		or	ax, ax
		jnz	short loc_260FB
		jmp	loc_26006
; ---------------------------------------------------------------------------

loc_260FB:				; CODE XREF: sub_25FF6+100j
		cmp	ax, 1
		jz	short loc_26144
		cmp	ax, 2
		jnz	short loc_26108
		jmp	loc_261C0
; ---------------------------------------------------------------------------

loc_26108:				; CODE XREF: sub_25FF6+10Dj
		cmp	ax, 3
		jz	short loc_26166
		cmp	ax, 5
		jnz	short loc_26115
		jmp	loc_261DA
; ---------------------------------------------------------------------------

loc_26115:				; CODE XREF: sub_25FF6+11Aj
		jmp	short loc_260AB
; ---------------------------------------------------------------------------
		align 2

loc_26118:				; CODE XREF: sub_25FF6+74j
		mov	ax, [bp+var_6]
		shl	ax, 1
		mov	[bp+var_40], ax
		lea	ax, [bp+var_32]
		push	ax
		push	[bp+var_2]
		push	[bp+var_8]
		mov	bx, [bp+var_40]
		add	bx, word_459D6
		push	word ptr [bx]
		mov	bx, [bp+var_40]
		add	bx, word_45D92
		push	word ptr [bx]
		call	sub_2F3DA
		jmp	short loc_2615F
; ---------------------------------------------------------------------------
		align 2

loc_26144:				; CODE XREF: sub_25FF6+108j
		push	[bp+var_8]
		les	bx, [bp+var_38]
		push	word ptr es:[bx+0Ch]
		push	word ptr es:[bx+0Ah]
		push	word ptr es:[bx+8]
		push	word ptr es:[bx+6]
		call	sub_2FDDE

loc_2615F:				; CODE XREF: sub_25FF6+14Bj
					; sub_25FF6+1C7j
		add	sp, 0Ah
		jmp	loc_260AB
; ---------------------------------------------------------------------------
		align 2

loc_26166:				; CODE XREF: sub_25FF6+115j
		mov	[bp+var_4], 0

loc_2616B:				; CODE XREF: sub_25FF6+1A1j
		mov	ax, [bp+var_4]
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_40], ax
		mov	bx, ax
		add	bx, word ptr [bp+var_38]
		mov	es, word ptr [bp+var_38+2]
		mov	ax, es:[bx+6]
		mov	dx, es:[bx+8]
		mov	bx, [bp+var_40]
		add	bx, bp
		mov	[bx-32h], ax
		mov	[bx-30h], dx
		inc	[bp+var_4]
		cmp	[bp+var_4], 4
		jb	short loc_2616B
		mov	ax, [bp+var_6]
		shl	ax, 1
		add	ax, word_45632
		mov	[bp+var_40], ax
		mov	bx, ax
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	[bp+var_8]
		mov	ax, 2500h
		push	ax
		lea	ax, [bp+var_32]
		push	ax
		call	sub_36C7E
		jmp	short loc_2615F
; ---------------------------------------------------------------------------
		align 2

loc_261C0:				; CODE XREF: sub_25FF6+10Fj
		push	[bp+var_8]
		les	bx, [bp+var_38]
		push	word ptr es:[bx+0Ah]
		push	word ptr es:[bx+8]
		push	word ptr es:[bx+6]
		call	sub_33072
		jmp	loc_260A8
; ---------------------------------------------------------------------------

loc_261DA:				; CODE XREF: sub_25FF6+11Cj
		push	[bp+var_8]
		les	bx, [bp+var_38]
		push	word ptr es:[bx+8]
		push	word ptr es:[bx+6]
		call	sub_35B26
		jmp	loc_2607F
; ---------------------------------------------------------------------------

loc_261F0:				; CODE XREF: sub_25FF6+BEj
		push	cs
		call	near ptr sub_24DE6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_25FF6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_261FA	proc far		; CODE XREF: sub_14712+D0P
					; sub_14712+590P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= byte ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		sub	si, si
		test	[bp+arg_0], 3FFh
		jz	short loc_2621C
		mov	si, 4
		push	[bp+arg_0]
		mov	ax, 81E2h
		push	ax
		call	sub_36FD8
		add	sp, si

loc_2621C:				; CODE XREF: sub_261FA+Fj
		test	[bp+arg_2], 3FFh
		jz	short loc_26236
		or	si, 2
		push	[bp+arg_2]
		mov	ax, 0AD02h
		push	ax
		call	sub_36F2A
		add	sp, 4

loc_26236:				; CODE XREF: sub_261FA+27j
		test	[bp+arg_4], 3FFh
		jz	short loc_26285
		or	si, 1
		mov	ax, [bp+arg_4]
		and	ah, 3
		cmp	ax, word_3EB02
		jnz	short loc_26252

loc_2624D:				; CODE XREF: sub_261FA+85j
		mov	di, 95BAh
		jmp	short loc_26285
; ---------------------------------------------------------------------------

loc_26252:				; CODE XREF: sub_261FA+51j
		mov	ax, [bp+arg_4]
		and	ah, 3
		cmp	ax, 100h
		jz	short loc_26282
		cmp	ax, 200h
		jz	short loc_26298
		cmp	ax, 300h
		jz	short loc_2629E
		push	[bp+arg_4]
		mov	ax, 95BAh
		push	ax
		call	sub_36F80
		add	sp, 4
		mov	ax, [bp+arg_4]
		and	ah, 3
		mov	word_3EB02, ax
		jmp	short loc_2624D
; ---------------------------------------------------------------------------
		align 2

loc_26282:				; CODE XREF: sub_261FA+61j
		mov	di, 572Eh

loc_26285:				; CODE XREF: sub_261FA+41j
					; sub_261FA+56j ...
		mov	ax, si
		cmp	ax, 7
		jbe	short loc_2628F
		jmp	loc_26372
; ---------------------------------------------------------------------------

loc_2628F:				; CODE XREF: sub_261FA+90j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_26362[bx]
; ---------------------------------------------------------------------------
		align 2

loc_26298:				; CODE XREF: sub_261FA+66j
		mov	di, 571Ch
		jmp	short loc_26285
; ---------------------------------------------------------------------------
		align 2

loc_2629E:				; CODE XREF: sub_261FA+6Bj
		mov	di, 5748h
		jmp	short loc_26285
; ---------------------------------------------------------------------------
		align 2

loc_262A4:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA:off_26362o
		mov	di, 60CEh
		jmp	loc_26372
; ---------------------------------------------------------------------------

loc_262AA:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+16Eo
		test	[bp+arg_6], 1
		jz	short loc_262BC
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 0AD02h

loc_262B7:				; CODE XREF: sub_261FA+E7j
		push	ax
		push	di
		jmp	short loc_262C5
; ---------------------------------------------------------------------------
		align 2

loc_262BC:				; CODE XREF: sub_261FA+B4j
		mov	ax, 0ACC8h
		push	ax
		push	di

loc_262C1:				; CODE XREF: sub_261FA+102j
		mov	ax, 0AD02h

loc_262C4:				; CODE XREF: sub_261FA+F2j
		push	ax

loc_262C5:				; CODE XREF: sub_261FA+BFj
		call	sub_329F2
		add	sp, 6
		mov	di, 0ACC8h
		jmp	loc_26372
; ---------------------------------------------------------------------------
		align 2

loc_262D4:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+172o
		test	[bp+arg_6], 1
		jz	short loc_262E4
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 81E2h
		jmp	short loc_262B7
; ---------------------------------------------------------------------------
		align 2

loc_262E4:				; CODE XREF: sub_261FA+DEj
		mov	ax, 0ACC8h
		push	ax
		push	di

loc_262E9:				; CODE XREF: sub_261FA+10Cj
		mov	ax, 81E2h
		jmp	short loc_262C4
; ---------------------------------------------------------------------------

loc_262EE:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+174o
		test	[bp+arg_6], 1
		jz	short loc_262FE
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 81E2h
		push	ax
		jmp	short loc_262C1
; ---------------------------------------------------------------------------

loc_262FE:				; CODE XREF: sub_261FA+F8j
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 0AD02h
		push	ax
		jmp	short loc_262E9
; ---------------------------------------------------------------------------

loc_26308:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+176o
		test	[bp+arg_6], 1
		jz	short loc_26338
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 0AD02h
		push	ax
		push	di
		call	sub_329F2
		add	sp, 6
		mov	ax, 0AD02h
		push	ax
		mov	ax, 81E2h
		push	ax
		mov	ax, 0ACC8h
		push	ax
		call	sub_329F2
		add	sp, 6

loc_26333:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+16Co
		mov	di, 0AD02h
		jmp	short loc_26372
; ---------------------------------------------------------------------------

loc_26338:				; CODE XREF: sub_261FA+112j
		mov	ax, 0ACC8h
		push	ax
		mov	ax, 0AD02h
		push	ax
		mov	ax, 81E2h
		push	ax
		call	sub_329F2
		add	sp, 6
		mov	ax, 81E2h
		push	ax
		push	di
		mov	ax, 0ACC8h
		push	ax
		call	sub_329F2
		add	sp, 6

loc_2635D:				; CODE XREF: sub_261FA+98j
					; DATA XREF: sub_261FA+170o
		mov	di, 81E2h
		jmp	short loc_26372
; ---------------------------------------------------------------------------
off_26362	dw offset loc_262A4	; DATA XREF: sub_261FA+98r
		dw offset loc_26372
		dw offset loc_26333
		dw offset loc_262AA
		dw offset loc_2635D
		dw offset loc_262D4
		dw offset loc_262EE
		dw offset loc_26308
; ---------------------------------------------------------------------------

loc_26372:				; CODE XREF: sub_261FA+92j
					; sub_261FA+98j ...
		mov	ax, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_261FA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2637A	proc far		; CODE XREF: sub_1D5B4+173P
					; sub_1D5B4+193P ...

var_6		= word ptr -6
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bx]
		mov	di, [bx+2]
		mov	bx, [bp+arg_2]
		cmp	[bx], si
		jle	short loc_26393
		mov	[bx], si

loc_26393:				; CODE XREF: sub_2637A+15j
		lea	ax, [si+1]
		mov	[bp+var_6], ax
		mov	bx, [bp+arg_2]
		cmp	[bx+2],	ax
		jge	short loc_263A4
		mov	[bx+2],	ax

loc_263A4:				; CODE XREF: sub_2637A+25j
		mov	bx, [bp+arg_2]
		cmp	[bx+4],	di
		jle	short loc_263AF
		mov	[bx+4],	di

loc_263AF:				; CODE XREF: sub_2637A+30j
		lea	ax, [di+1]
		mov	[bp+var_6], ax
		mov	bx, [bp+arg_2]
		cmp	[bx+6],	ax
		jge	short loc_263C0
		mov	[bx+6],	ax

loc_263C0:				; CODE XREF: sub_2637A+41j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2637A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_263C6	proc far		; CODE XREF: sub_24E9E+1DFp

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		mov	bx, [bp+arg_0]
		push	word ptr [bx+2]	; int
		call	_abs
		add	sp, 2
		cwd
		mov	[bp+var_E], ax
		mov	[bp+var_C], dx
		mov	bx, [bp+arg_0]
		push	word ptr [bx+4]	; int
		call	_abs
		add	sp, 2
		push	ax
		mov	bx, [bp+arg_0]
		push	word ptr [bx]	; int
		call	_abs
		add	sp, 2
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], 0
		mov	ax, word_41888
		mov	dx, word_4188A
		cmp	word_41884, ax
		jnz	short loc_2643A
		cmp	word_41886, dx
		jnz	short loc_2643A
		mov	ax, [bp+var_E]
		mov	dx, [bp+var_C]
		cmp	[bp+var_2], dx
		jg	short loc_2646E
		jl	short loc_26435
		cmp	[bp+var_4], ax
		jnb	short loc_2646E

loc_26435:				; CODE XREF: sub_263C6+68j
					; sub_263C6+A2j ...
		mov	ax, 1
		jmp	short loc_26470
; ---------------------------------------------------------------------------

loc_2643A:				; CODE XREF: sub_263C6+55j
					; sub_263C6+5Bj
		push	word_4188A
		push	word_41888
		push	[bp+var_C]
		push	[bp+var_E]
		call	__aFlmul
		push	word_41886
		push	word_41884
		push	[bp+var_2]
		push	[bp+var_4]
		mov	si, ax
		mov	di, dx
		call	__aFlmul
		cmp	dx, di
		jg	short loc_2646E
		jl	short loc_26435
		cmp	ax, si
		jb	short loc_26435

loc_2646E:				; CODE XREF: sub_263C6+66j
					; sub_263C6+6Dj ...
		sub	ax, ax

loc_26470:				; CODE XREF: sub_263C6+72j
		mov	[bp+var_8], ax
		mov	bx, [bp+arg_0]
		cmp	word ptr [bx+2], 0
		jge	short loc_2648A
		or	ax, ax
		jz	short loc_264A0
		mov	ax, 1Eh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_2648A:				; CODE XREF: sub_263C6+B4j
		cmp	word ptr [bx+2], 0
		jle	short loc_264A0
		cmp	[bp+var_8], 0
		jz	short loc_264A0
		mov	ax, 1Fh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_264A0:				; CODE XREF: sub_263C6+B8j
					; sub_263C6+C8j ...
		cmp	word ptr [bx+2], 0
		jle	short loc_264AC
		mov	[bp+var_A], 0Fh
		jmp	short loc_264B0
; ---------------------------------------------------------------------------

loc_264AC:				; CODE XREF: sub_263C6+DEj
		mov	[bp+var_A], 0

loc_264B0:				; CODE XREF: sub_263C6+E4j
		mov	ax, [bx]
		neg	ax
		push	ax
		push	word ptr [bx+4]
		call	sub_2EA4E
		add	sp, 4
		neg	ax
		mov	[bp+var_6], ax
		or	ax, ax
		jge	short loc_264CD
		add	byte ptr [bp+var_6+1], 4

loc_264CD:				; CODE XREF: sub_263C6+101j
		mov	ax, [bp+var_6]
		cwd
		mov	cx, ax
		mov	bx, dx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		sub	ax, cx
		sbb	dx, bx
		mov	cl, 0Ah

loc_264EB:				; CODE XREF: sub_263C6+12Bj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_264EB
		add	[bp+var_A], al
		mov	al, [bp+var_A]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_263C6	endp


; =============== S U B	R O U T	I N E =======================================


sub_26500	proc far		; CODE XREF: sub_24D64+59p
		mov	ax, 80h	; 'Ä'
		push	ax
		call	sub_326DE
		add	sp, 2
		cwd
		mov	word_41888, ax
		mov	word_4188A, dx
		mov	ax, 80h	; 'Ä'
		push	ax
		call	sub_3272C
		add	sp, 2
		cwd
		mov	word_41884, ax
		mov	word_41886, dx
		mov	ax, 80h	; 'Ä'
		push	ax
		call	sub_326DE
		add	sp, 2
		cwd
		mov	word_41890, ax
		mov	word_41892, dx
		mov	ax, 80h	; 'Ä'
		push	ax
		call	sub_3272C
		add	sp, 2
		cwd
		mov	word_4188C, ax
		mov	word_4188E, dx
		retf
sub_26500	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		cmp	word ptr [bp+8], 0
		jge	short loc_2656A
		mov	ax, [bp+6]
		mov	dx, [bp+8]
		neg	ax
		adc	dx, 0
		neg	dx
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2656A:				; CODE XREF: seg006:17F9j
		mov	ax, [bp+6]
		mov	dx, [bp+8]
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26572	proc far		; CODE XREF: sub_11C42+887P
					; sub_1A0F4+2066P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_0]
		mov	ax, [si]
		mov	si, [bp+arg_2]
		cmp	ax, [si]
		jle	short loc_26587
		mov	ax, [si]

loc_26587:				; CODE XREF: sub_26572+11j
		mov	[bx], ax
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_0]
		mov	ax, [si+2]
		mov	si, [bp+arg_2]
		cmp	ax, [si+2]
		jge	short loc_2659D
		mov	ax, [si+2]

loc_2659D:				; CODE XREF: sub_26572+26j
		mov	[bx+2],	ax
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_0]
		mov	ax, [si+4]
		mov	si, [bp+arg_2]
		cmp	ax, [si+4]
		jle	short loc_265B4
		mov	ax, [si+4]

loc_265B4:				; CODE XREF: sub_26572+3Dj
		mov	[bx+4],	ax
		mov	bx, [bp+arg_4]
		mov	si, [bp+arg_0]
		mov	ax, [si+6]
		mov	si, [bp+arg_2]
		cmp	ax, [si+6]
		jge	short loc_265CB
		mov	ax, [si+6]

loc_265CB:				; CODE XREF: sub_26572+54j
		mov	[bx+6],	ax
		cmp	word_44DC8, 1
		jz	short loc_265E9
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+2]
		add	ax, word_44DC8
		dec	ax
		and	ax, word_454D4
		mov	[bx+2],	ax

loc_265E9:				; CODE XREF: sub_26572+61j
		pop	si
		pop	bp
		retf
sub_26572	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_265EC	proc far		; CODE XREF: sub_11C42+872P
					; sub_1A0F4+1F1BP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_0]
		mov	si, bx
		mov	ax, [si]
		cmp	[bx+2],	ax
		jge	short loc_26602

loc_265FC:				; CODE XREF: sub_265EC+21j
					; sub_265EC+2Dj ...
		mov	ax, 1
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_26602:				; CODE XREF: sub_265EC+Ej
		mov	bx, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jle	short loc_265FC
		mov	bx, si
		mov	si, [bp+arg_2]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jle	short loc_265FC
		mov	ax, [si+6]
		cmp	[bx+4],	ax
		jge	short loc_265FC
		mov	ax, [si+4]
		cmp	[bx+6],	ax
		jle	short loc_265FC
		mov	bx, si
		mov	si, [bx]
		mov	bx, [bp+arg_0]
		cmp	[bx], si
		jge	short loc_26638
		mov	[bx], si

loc_26638:				; CODE XREF: sub_265EC+48j
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+2]
		cmp	[bx+2],	ax
		jle	short loc_26649
		mov	[bx+2],	ax

loc_26649:				; CODE XREF: sub_265EC+58j
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+4]
		cmp	[bx+4],	ax
		jge	short loc_2665A
		mov	[bx+4],	ax

loc_2665A:				; CODE XREF: sub_265EC+69j
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+6]
		cmp	[bx+6],	ax
		jle	short loc_2666B
		mov	[bx+6],	ax

loc_2666B:				; CODE XREF: sub_265EC+7Aj
		sub	ax, ax
		pop	si
		pop	bp
		retf
sub_265EC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26670	proc far		; CODE XREF: sub_26670+1D9p
					; sub_26670+1EAp ...

var_22		= byte ptr -22h
var_20		= byte ptr -20h
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h
var_16		= word ptr -16h
var_14		= byte ptr -14h
var_12		= byte ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
var_4		= word ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 22h
		push	di
		push	si
		cmp	word_44DC8, 1
		jz	short loc_26693
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+2]
		add	ax, word_44DC8
		dec	ax
		and	ax, word_454D4
		mov	[bx+2],	ax

loc_26693:				; CODE XREF: sub_26670+Dj
		mov	[bp+var_14], 0
		jmp	short loc_266C9
; ---------------------------------------------------------------------------
		align 2

loc_2669A:				; CODE XREF: sub_26670+52j
		mov	di, si
		mov	cl, 3
		shl	di, cl
		add	di, [bp+arg_2]
		push	si
		push	di
		lea	si, [di+8]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	[bp+var_12]

loc_266B3:				; CODE XREF: sub_26670+ABj
		mov	al, [bp+var_12]
		cbw
		mov	si, ax
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		cbw
		dec	ax
		cmp	ax, si
		jg	short loc_2669A
		dec	byte ptr [bx]

loc_266C6:				; CODE XREF: sub_26670+7Ej
		inc	[bp+var_14]

loc_266C9:				; CODE XREF: sub_26670+27j
		mov	bx, [bp+arg_0]
		mov	al, [bp+var_14]
		cmp	[bx], al
		jg	short loc_266D6
		jmp	loc_26880
; ---------------------------------------------------------------------------

loc_266D6:				; CODE XREF: sub_26670+61j
		cbw
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_2]
		mov	[bp+var_16], ax
		push	ax
		push	[bp+arg_4]
		push	cs
		call	near ptr sub_2695E
		add	sp, 4
		or	al, al
		jz	short loc_266C6
		push	[bp+var_16]
		push	[bp+arg_4]
		push	cs
		call	near ptr sub_2699C
		add	sp, 4
		or	al, al
		jz	short loc_26704
		jmp	loc_26957
; ---------------------------------------------------------------------------

loc_26704:				; CODE XREF: sub_26670+8Fj
		push	[bp+arg_4]
		push	[bp+var_16]
		push	cs
		call	near ptr sub_2699C
		add	sp, 4
		or	al, al
		jz	short loc_2671E
		mov	al, [bp+var_14]
		mov	[bp+var_12], al
		jmp	short loc_266B3
; ---------------------------------------------------------------------------
		align 2

loc_2671E:				; CODE XREF: sub_26670+A3j
		mov	ax, [bp+var_16]
		lea	di, [bp+var_10]
		mov	si, ax
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		movsw
		mov	bx, ax
		mov	si, [bp+arg_4]
		mov	ax, [si+4]
		cmp	[bx+4],	ax
		jge	short loc_2675A
		mov	ax, bx
		lea	di, [bp+var_20]
		mov	si, ax
		movsw
		movsw
		movsw
		movsw
		mov	bx, [bp+arg_4]
		mov	ax, [bx+4]
		mov	[bp+var_1A], ax
		mov	ax, [bx+4]
		mov	[bp+var_C], ax

loc_26753:				; CODE XREF: sub_26670+10Ej
		mov	[bp+var_18], 1
		jmp	short loc_26784
; ---------------------------------------------------------------------------
		align 2

loc_2675A:				; CODE XREF: sub_26670+C7j
		mov	bx, [bp+arg_4]
		mov	si, [bp+var_16]
		mov	ax, [si+4]
		cmp	[bx+4],	ax
		jge	short loc_26780
		mov	ax, bx
		lea	di, [bp+var_20]
		mov	si, ax
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		mov	bx, [bp+var_16]
		mov	ax, [bx+4]
		mov	[bp+var_1A], ax
		jmp	short loc_26753
; ---------------------------------------------------------------------------

loc_26780:				; CODE XREF: sub_26670+F6j
		mov	[bp+var_18], 0

loc_26784:				; CODE XREF: sub_26670+E7j
		mov	bx, [bp+var_16]
		mov	si, [bp+arg_4]
		mov	ax, [si+6]
		cmp	[bx+6],	ax
		jle	short loc_267B4
		mov	ax, bx
		lea	di, [bp+var_8]
		mov	si, ax
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		mov	bx, [bp+arg_4]
		mov	ax, [bx+6]
		mov	[bp+var_4], ax
		mov	ax, [bx+6]
		mov	[bp+var_A], ax

loc_267AE:				; CODE XREF: sub_26670+168j
		mov	[bp+var_22], 1
		jmp	short loc_267DE
; ---------------------------------------------------------------------------

loc_267B4:				; CODE XREF: sub_26670+120j
		mov	bx, [bp+arg_4]
		mov	si, [bp+var_16]
		mov	ax, [si+6]
		cmp	[bx+6],	ax
		jle	short loc_267DA
		mov	ax, bx
		lea	di, [bp+var_8]
		mov	si, ax
		push	ss
		pop	es
		movsw
		movsw
		movsw
		movsw
		mov	bx, [bp+var_16]
		mov	ax, [bx+6]
		mov	[bp+var_4], ax
		jmp	short loc_267AE
; ---------------------------------------------------------------------------

loc_267DA:				; CODE XREF: sub_26670+150j
		mov	[bp+var_22], 0

loc_267DE:				; CODE XREF: sub_26670+142j
		mov	bx, [bp+arg_4]
		mov	ax, [bx]
		mov	bx, [bp+var_16]
		cmp	ax, [bx]
		jle	short loc_267EC
		mov	ax, [bx]

loc_267EC:				; CODE XREF: sub_26670+178j
		mov	[bp+var_10], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+2]
		mov	bx, [bp+var_16]
		cmp	ax, [bx+2]
		jge	short loc_26800
		mov	ax, [bx+2]

loc_26800:				; CODE XREF: sub_26670+18Bj
		mov	[bp+var_E], ax
		mov	al, [bp+var_14]
		mov	[bp+var_12], al
		jmp	short loc_26825
; ---------------------------------------------------------------------------
		align 2

loc_2680C:				; CODE XREF: sub_26670+1C4j
		mov	di, si
		mov	cl, 3
		shl	di, cl
		add	di, [bp+arg_2]
		push	si
		push	di
		lea	si, [di+8]
		push	ds
		pop	es
		assume es:dseg
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	[bp+var_12]

loc_26825:				; CODE XREF: sub_26670+199j
		mov	al, [bp+var_12]
		cbw
		mov	si, ax
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		cbw
		dec	ax
		cmp	ax, si
		jg	short loc_2680C
		dec	byte ptr [bx]
		cmp	[bp+var_18], 0
		jz	short loc_2684F
		lea	ax, [bp+var_20]
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_26670
		add	sp, 6

loc_2684F:				; CODE XREF: sub_26670+1CCj
		lea	ax, [bp+var_10]
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_26670
		add	sp, 6
		cmp	[bp+var_22], 0
		jnz	short loc_26869
		jmp	loc_26957
; ---------------------------------------------------------------------------

loc_26869:				; CODE XREF: sub_26670+1F4j
		lea	ax, [bp+var_8]

loc_2686C:				; CODE XREF: sub_26670+245j
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_26670
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_26880:				; CODE XREF: sub_26670+63j
		mov	[bp+var_14], 0
		jmp	short loc_268BB
; ---------------------------------------------------------------------------

loc_26886:				; CODE XREF: sub_26670+23Ej
		mov	di, si
		mov	cl, 3
		shl	di, cl
		add	di, [bp+arg_2]
		push	si
		push	di
		lea	si, [di+8]
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		pop	di
		pop	si
		inc	[bp+var_12]

loc_2689F:				; CODE XREF: sub_26670+2C2j
		mov	al, [bp+var_12]
		cbw
		mov	si, ax
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		cbw
		dec	ax
		cmp	ax, si
		jg	short loc_26886
		dec	byte ptr [bx]
		lea	ax, [bp+var_10]
		jmp	short loc_2686C
; ---------------------------------------------------------------------------
		align 2

loc_268B8:				; CODE XREF: sub_26670+26Dj
		inc	[bp+var_14]

loc_268BB:				; CODE XREF: sub_26670+214j
		mov	bx, [bp+arg_0]
		mov	al, [bp+var_14]
		cmp	[bx], al
		jle	short loc_26936
		cbw
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_2]
		mov	[bp+var_16], ax
		push	[bp+arg_4]
		push	ax
		push	cs
		call	near ptr sub_269D0
		add	sp, 4
		or	al, al
		jz	short loc_268B8
		mov	bx, [bp+var_16]
		mov	ax, [bx]
		mov	bx, [bp+arg_4]
		cmp	ax, [bx]
		jle	short loc_268ED
		mov	ax, [bx]

loc_268ED:				; CODE XREF: sub_26670+279j
		mov	[bp+var_10], ax
		mov	bx, [bp+var_16]
		mov	ax, [bx+2]
		mov	bx, [bp+arg_4]
		cmp	ax, [bx+2]
		jge	short loc_26901
		mov	ax, [bx+2]

loc_26901:				; CODE XREF: sub_26670+28Cj
		mov	[bp+var_E], ax
		mov	bx, [bp+var_16]
		mov	ax, [bx+4]
		mov	bx, [bp+arg_4]
		cmp	ax, [bx+4]
		jle	short loc_26915
		mov	ax, [bx+4]

loc_26915:				; CODE XREF: sub_26670+2A0j
		mov	[bp+var_C], ax
		mov	bx, [bp+var_16]
		mov	ax, [bx+6]
		mov	bx, [bp+arg_4]
		cmp	ax, [bx+6]
		jge	short loc_26929
		mov	ax, [bx+6]

loc_26929:				; CODE XREF: sub_26670+2B4j
		mov	[bp+var_A], ax
		mov	al, [bp+var_14]
		mov	[bp+var_12], al
		jmp	loc_2689F
; ---------------------------------------------------------------------------
		align 2

loc_26936:				; CODE XREF: sub_26670+253j
		mov	bx, [bp+arg_0]
		mov	al, [bx]
		cbw
		mov	bx, ax
		mov	cl, 3
		shl	bx, cl
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_4]
		lea	di, [bx+si]
		mov	si, ax
		push	ds
		pop	es
		movsw
		movsw
		movsw
		movsw
		mov	bx, [bp+arg_0]
		inc	byte ptr [bx]

loc_26957:				; CODE XREF: sub_26670+91j
					; sub_26670+1F6j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_26670	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2695E	proc far		; CODE XREF: sub_26670+76p

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jg	short loc_26974

loc_2696F:				; CODE XREF: sub_2695E+21j
					; sub_2695E+2Ej ...
		sub	ax, ax
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_26974:				; CODE XREF: sub_2695E+Fj
		mov	bx, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jle	short loc_2696F
		mov	bx, si
		mov	si, [bp+arg_2]
		mov	ax, [si+6]
		cmp	[bx+4],	ax
		jge	short loc_2696F
		mov	ax, [si+4]
		cmp	[bx+6],	ax
		jle	short loc_2696F
		mov	ax, 1
		pop	si
		pop	bp
		retf
sub_2695E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2699C	proc far		; CODE XREF: sub_26670+87p
					; sub_26670+9Bp

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+2]
		cmp	[bx+2],	ax
		jg	short loc_269CA
		mov	ax, [si]
		cmp	[bx], ax
		jl	short loc_269CA
		mov	ax, [si+4]
		cmp	[bx+4],	ax
		jl	short loc_269CA
		mov	ax, [si+6]
		cmp	[bx+6],	ax
		jg	short loc_269CA
		mov	ax, 1
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_269CA:				; CODE XREF: sub_2699C+10j
					; sub_2699C+16j ...
		sub	ax, ax
		pop	si
		pop	bp
		retf
sub_2699C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_269D0	proc far		; CODE XREF: sub_26670+265p

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+4]
		cmp	[bx+6],	ax
		jnz	short loc_26A02
		mov	ax, [si]
		cmp	[bx], ax
		jz	short loc_269EE

loc_269E8:				; CODE XREF: sub_269D0+2Aj
					; sub_269D0+44j ...
		sub	ax, ax
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_269EE:				; CODE XREF: sub_269D0+16j
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+2]
		cmp	[bx+2],	ax
		jnz	short loc_269E8

loc_269FC:				; CODE XREF: sub_269D0:loc_26A1Cj
		mov	ax, 1
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_26A02:				; CODE XREF: sub_269D0+10j
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si+6]
		cmp	[bx+4],	ax
		jnz	short loc_26A20
		mov	ax, [si]
		cmp	[bx], ax
		jnz	short loc_269E8
		mov	ax, [si+2]
		cmp	[bx+2],	ax

loc_26A1C:				; CODE XREF: sub_269D0+6Bj
		jz	short loc_269FC
		jmp	short loc_269E8
; ---------------------------------------------------------------------------

loc_26A20:				; CODE XREF: sub_269D0+3Ej
		mov	bx, [bp+arg_0]
		mov	si, [bp+arg_2]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jnz	short loc_26A3E

loc_26A2D:				; CODE XREF: sub_269D0+80j
		mov	ax, [si+4]
		cmp	[bx+4],	ax
		jnz	short loc_269E8
		mov	ax, [si+6]
		cmp	[bx+6],	ax
		jmp	short loc_26A1C
; ---------------------------------------------------------------------------
		align 2

loc_26A3E:				; CODE XREF: sub_269D0+5Bj
		mov	bx, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si]
		cmp	[bx+2],	ax
		jnz	short loc_269E8
		mov	bx, si
		mov	si, [bp+arg_2]
		jmp	short loc_26A2D
sub_269D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26A52	proc far		; CODE XREF: sub_19F14+97P
					; sub_1C474+271P ...

var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= byte ptr -18h
var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_C		= byte ptr -0Ch
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= byte ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 1Ch
		push	di
		push	si
		mov	[bp+var_18], 0
		jmp	short loc_26AC0
; ---------------------------------------------------------------------------

loc_26A60:				; CODE XREF: sub_26A52+CAj
					; sub_26A52+D9j
		mov	ax, [bp+var_1A]

loc_26A63:				; CODE XREF: sub_26A52+2Ej
					; sub_26A52+EEj
		mov	[bp+var_4], ax
		mov	[bp+var_2], 1
		jmp	short loc_26A86
; ---------------------------------------------------------------------------

loc_26A6C:				; CODE XREF: sub_26A52+B2j
					; sub_26A52+C1j
		test	[bp+var_16], 2
		jz	short loc_26A82
		mov	bx, [bp+var_1C]
		mov	si, bx
		mov	ax, [si]
		cmp	[bx+2],	ax
		jle	short loc_26A82
		mov	ax, bx
		jmp	short loc_26A63
; ---------------------------------------------------------------------------

loc_26A82:				; CODE XREF: sub_26A52+1Ej
					; sub_26A52+2Aj
		mov	[bp+var_2], 0

loc_26A86:				; CODE XREF: sub_26A52+18j
		cmp	[bp+var_2], 0
		jz	short loc_26ABD
		mov	ax, [bp+var_4]
		lea	di, [bp+var_14]
		mov	si, ax
		push	ss
		pop	es
		assume es:nothing
		movsw
		movsw
		movsw
		movsw
		push	[bp+arg_8]
		lea	ax, [bp+var_14]
		push	ax
		push	cs
		call	near ptr sub_265EC
		add	sp, 4
		or	al, al
		jnz	short loc_26ABD
		lea	ax, [bp+var_14]
		push	ax
		push	[bp+arg_C]
		push	[bp+arg_A]
		push	cs
		call	near ptr sub_26670
		add	sp, 6

loc_26ABD:				; CODE XREF: sub_26A52+38j
					; sub_26A52+58j
		inc	[bp+var_18]

loc_26AC0:				; CODE XREF: sub_26A52+Cj
		mov	al, [bp+arg_0]
		cmp	[bp+var_18], al
		jnb	short loc_26B44
		mov	al, [bp+var_18]
		cbw
		mov	si, ax
		mov	bx, [bp+arg_2]
		mov	al, [bx+si]
		mov	[bp+var_16], al
		test	[bp+var_16], 1
		jz	short loc_26AEA
		mov	ax, [bp+arg_4]
		mov	dx, si
		mov	cl, 3
		shl	dx, cl
		add	ax, dx
		mov	[bp+var_1A], ax

loc_26AEA:				; CODE XREF: sub_26A52+88j
		test	[bp+var_16], 2
		jz	short loc_26AFE
		mov	al, [bp+var_18]
		cbw
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_6]
		mov	[bp+var_1C], ax

loc_26AFE:				; CODE XREF: sub_26A52+9Cj
		test	[bp+var_16], 1
		jnz	short loc_26B07
		jmp	loc_26A6C
; ---------------------------------------------------------------------------

loc_26B07:				; CODE XREF: sub_26A52+B0j
		mov	bx, [bp+var_1A]
		mov	si, bx
		mov	ax, [si]
		cmp	[bx+2],	ax
		jg	short loc_26B16
		jmp	loc_26A6C
; ---------------------------------------------------------------------------

loc_26B16:				; CODE XREF: sub_26A52+BFj
		test	[bp+var_16], 2
		jnz	short loc_26B1F
		jmp	loc_26A60
; ---------------------------------------------------------------------------

loc_26B1F:				; CODE XREF: sub_26A52+C8j
		mov	bx, [bp+var_1C]
		mov	si, bx
		mov	ax, [si]
		cmp	[bx+2],	ax
		jg	short loc_26B2E
		jmp	loc_26A60
; ---------------------------------------------------------------------------

loc_26B2E:				; CODE XREF: sub_26A52+D7j
		lea	ax, [bp+var_C]
		push	ax
		push	bx
		push	[bp+var_1A]
		push	cs
		call	near ptr sub_26572
		add	sp, 6
		lea	ax, [bp+var_C]
		jmp	loc_26A63
; ---------------------------------------------------------------------------
		align 2

loc_26B44:				; CODE XREF: sub_26A52+74j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_26A52	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26B4A	proc far		; CODE XREF: sub_19F14+B3P

var_202		= word ptr -202h
arg_0		= byte ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 202h
		push	di
		push	si
		cmp	[bp+arg_0], 1
		jle	short loc_26BA0
		sub	si, si
		jmp	short loc_26B7C
; ---------------------------------------------------------------------------
		align 2

loc_26B5E:				; CODE XREF: sub_26B4A+38j
		mov	di, si
		shl	di, 1
		mov	bx, [bp+arg_2]
		mov	ax, si
		mov	cl, 3
		shl	ax, cl
		add	bx, ax
		mov	ax, [bx+4]
		neg	ax
		mov	[bp+di+var_202], ax
		mov	bx, [bp+arg_4]
		mov	[bx+di], si
		inc	si

loc_26B7C:				; CODE XREF: sub_26B4A+11j
		mov	al, [bp+arg_0]
		cbw
		cmp	ax, si
		jg	short loc_26B5E
		push	[bp+arg_4]
		lea	ax, [bp+var_202]
		push	ax
		mov	al, [bp+arg_0]
		cbw
		push	ax
		call	sub_36BE8
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_26BA0:				; CODE XREF: sub_26B4A+Dj
		mov	bx, [bp+arg_4]
		mov	word ptr [bx], 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_26B4A	endp

seg006		ends

; ===========================================================================

; Segment type:	Pure code
seg007		segment	byte public 'CODE' use16
		assume cs:seg007
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_26BAE	proc far		; CODE XREF: sub_23702+10BP
		mov	bx, 6364h
		jmp	short loc_26BB9
; ---------------------------------------------------------------------------

loc_26BB3:				; CODE XREF: sub_26BAE+Fj
		mov	byte ptr [bx], 0
		add	bx, 4Ch	; 'L'

loc_26BB9:				; CODE XREF: sub_26BAE+3j
		cmp	bx, 6AD0h
		jb	short loc_26BB3
		mov	word_42240, 16h
		mov	ax, 403h
		mov	dx, seg	seg007
		push	dx
		push	ax
		call	sub_302AA
		pop	bx
		pop	bx
		retf
sub_26BAE	endp


; =============== S U B	R O U T	I N E =======================================


sub_26BD5	proc far		; CODE XREF: sub_21B7A+768P
					; sub_239B4+71P
		push	si
		mov	si, 6364h
		jmp	short loc_26BEF
; ---------------------------------------------------------------------------

loc_26BDB:				; CODE XREF: sub_26BD5+1Ej
		cmp	byte ptr [si], 1
		jnz	short loc_26BE9
		push	word ptr [si+2]
		call	sub_374DE
		pop	bx

loc_26BE9:				; CODE XREF: sub_26BD5+9j
		mov	byte ptr [si], 0
		add	si, 4Ch	; 'L'

loc_26BEF:				; CODE XREF: sub_26BD5+4j
		cmp	si, 6AD0h
		jb	short loc_26BDB
		mov	ax, 403h
		mov	dx, seg	seg007
		push	dx
		push	ax
		call	sub_302DE
		pop	bx
		pop	bx
		pop	si
		retf
sub_26BD5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26C06	proc far		; CODE XREF: sub_26C3C+9Ap
					; sub_26C3C+C1p ...

arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		push	si
		les	bx, [bp+arg_0]
		mov	ax, es:[bx]
		mov	dx, es:[bx+2]
		mov	word_42242, ax
		mov	word_42244, dx
		mov	byte_42246, 0
		sub	si, si

loc_26C22:				; CODE XREF: sub_26C06+2Cj
		cmp	byte ptr [si+6AD2h], 0
		jnz	short loc_26C2E
		mov	byte ptr [si+6AD2h], 20h ; ' '

loc_26C2E:				; CODE XREF: sub_26C06+21j
		inc	si
		cmp	si, 4
		jl	short loc_26C22
		mov	ax, 6AD2h
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_26C06	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26C3C	proc far		; CODE XREF: sub_23702+129P
					; sub_23702+163P

var_18		= dword	ptr -18h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_8		= dword	ptr -8
var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	di
		push	si
		mov	di, 0FFFFh
		sub	dx, dx
		mov	bx, 6364h
		jmp	short loc_26C5D
; ---------------------------------------------------------------------------

loc_26C4E:				; CODE XREF: sub_26C3C+25j
		or	di, di
		jge	short loc_26C63
		cmp	byte ptr [bx], 0
		jnz	short loc_26C59
		mov	di, dx

loc_26C59:				; CODE XREF: sub_26C3C+19j
		add	bx, 4Ch	; 'L'
		inc	dx

loc_26C5D:				; CODE XREF: sub_26C3C+10j
		cmp	bx, 6AD0h
		jb	short loc_26C4E

loc_26C63:				; CODE XREF: sub_26C3C+14j
		or	di, di
		jge	short loc_26C6A
		jmp	loc_26EE4
; ---------------------------------------------------------------------------

loc_26C6A:				; CODE XREF: sub_26C3C+29j
		mov	ax, di
		mov	cx, 4Ch	; 'L'
		imul	cx
		add	ax, 6364h
		mov	[bp+var_14], ax
		add	ax, 1Ch
		mov	[bp+var_12], ax
		mov	[bp+var_10], ds
		mov	cx, [bp+arg_2]
		mov	dx, [bp+arg_4]
		mov	word ptr [bp+var_8], cx
		mov	word ptr [bp+var_8+2], dx
		mov	[bp+var_4], ax
		mov	[bp+var_2], 0
		mov	[bp+var_E], di
		jmp	short loc_26CB5
; ---------------------------------------------------------------------------

loc_26C99:				; CODE XREF: sub_26C3C+7Dj
		les	bx, [bp+var_8]
		add	word ptr [bp+var_8], 1
		jnb	short loc_26CA7
		add	word ptr [bp+var_8+2], 1000h

loc_26CA7:				; CODE XREF: sub_26C3C+64j
		mov	al, es:[bx]
		mov	bx, [bp+var_4]
		inc	[bp+var_4]
		mov	[bx], al
		inc	[bp+var_2]

loc_26CB5:				; CODE XREF: sub_26C3C+5Bj
		cmp	[bp+var_2], 30h	; '0'
		jl	short loc_26C99
		mov	di, [bp+var_12]
		mov	es, [bp+var_10]
		cmp	byte ptr es:[di+6], 0
		jz	short loc_26CCB
		jmp	loc_26E61
; ---------------------------------------------------------------------------

loc_26CCB:				; CODE XREF: sub_26C3C+8Aj
		push	word ptr es:[di+0Ah]
		push	word ptr es:[di+8]
		mov	si, es
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		call	sub_30F9D
		add	sp, 6
		mov	es, si
		mov	es:[di+8], ax
		mov	es:[di+0Ah], dx
		push	word ptr es:[di+12h]
		push	word ptr es:[di+10h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+10h], ax
		mov	es:[di+12h], dx
		push	word ptr es:[di+16h]
		push	word ptr es:[di+14h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+14h], ax
		mov	es:[di+16h], dx
		push	word ptr es:[di+1Ah]
		push	word ptr es:[di+18h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+18h], ax
		mov	es:[di+1Ah], dx
		push	word ptr es:[di+1Eh]
		push	word ptr es:[di+1Ch]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+1Ch], ax
		mov	es:[di+1Eh], dx
		push	word ptr es:[di+22h]
		push	word ptr es:[di+20h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+20h], ax
		mov	es:[di+22h], dx
		push	word ptr es:[di+26h]
		push	word ptr es:[di+24h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+24h], ax
		mov	es:[di+26h], dx
		push	word ptr es:[di+2Ah]
		push	word ptr es:[di+28h]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+28h], ax
		mov	es:[di+2Ah], dx
		push	word ptr es:[di+2Eh]
		push	word ptr es:[di+2Ch]
		push	cs
		call	near ptr sub_26C06
		pop	bx
		pop	bx
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_C]
		push	[bp+arg_A]
		call	sub_370D2
		add	sp, 0Ah
		mov	es, si
		mov	es:[di+2Ch], ax
		mov	es:[di+2Eh], dx
		mov	byte ptr es:[di+6], 1

loc_26E61:				; CODE XREF: sub_26C3C+8Cj
		mov	si, [bp+var_14]
		mov	ax, 7Fh	; ''
		push	ax
		mov	ax, 0FFFFh
		push	ax
		call	sub_37470
		pop	bx
		pop	bx
		mov	[si+2],	ax
		mov	byte ptr [si+1], 0
		mov	word ptr [si+4], 0
		sub	ax, ax
		mov	[si+8],	ax
		mov	[si+6],	ax
		mov	byte ptr [si+0Ah], 0
		mov	es, [bp+var_10]
		mov	ax, es:[di]
		mov	cx, es
		les	bx, es:[di+8]
		mov	dl, es:[bx+0Fh]
		mov	word ptr [bp+var_18], di
		mov	word ptr [bp+var_18+2],	cx
		mov	cl, es:[bx+0Eh]
		sub	ch, ch
		mov	bx, dx
		sub	dx, dx
		div	cx
		mov	cl, 4
		sub	bh, bh
		shl	bx, cl
		add	ax, bx
		mov	[si+0Ch], ax
		mov	byte ptr [si+0Eh], 0FFh
		mov	ax, 0FFFFh
		mov	[si+10h], ax
		mov	[si+12h], ax
		mov	[si+14h], ax
		mov	[si+16h], ax
		les	bx, [bp+var_18]
		mov	ax, es:[bx]
		mov	[si+18h], ax
		sub	al, al
		mov	[si+1Ah], al
		mov	[si+1Bh], al
		mov	byte ptr [si], 1
		mov	ax, [bp+var_E]
		jmp	short loc_26EEE
; ---------------------------------------------------------------------------

loc_26EE4:				; CODE XREF: sub_26C3C+2Bj
		mov	ax, 339Ch
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		pop	bx

loc_26EEE:				; CODE XREF: sub_26C3C+2A6j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_26C3C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26EF4	proc far		; CODE XREF: sub_188A4+348P
					; seg007:0561p

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	di
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		add	si, 6364h
		cmp	byte ptr [si], 1
		jnz	short loc_26F67
		cmp	byte ptr [si+1], 0
		jnz	short loc_26F67
		lea	bx, [si+1Ch]
		push	word ptr [bx+0Ah]
		push	word ptr [bx+8]
		push	word ptr [si+2]
		mov	di, bx
		call	sub_38CF8
		add	sp, 6
		mov	ax, [di]
		les	bx, [di+8]
		mov	cl, es:[bx+0Eh]
		sub	ch, ch
		sub	dx, dx
		div	cx
		mov	cl, 4
		mov	dl, es:[bx+0Fh]
		sub	dh, dh
		shl	dx, cl
		add	ax, dx
		mov	[si+0Ch], ax
		push	word ptr [si+2]
		push	ax
		call	sub_39050
		pop	bx
		pop	bx
		mov	[si+12h], ax
		mov	al, 1
		mov	[si+1],	al
		mov	[si+1Ah], al
		sub	ax, ax
		push	ax
		push	word ptr [si+2]
		call	sub_38C4C
		pop	bx
		pop	bx

loc_26F67:				; CODE XREF: sub_26EF4+14j
					; sub_26EF4+1Aj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_26EF4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_26F6D	proc far		; CODE XREF: sub_188A4+3DP
					; sub_188A4+6AP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		add	si, 6364h
		cmp	byte ptr [si], 1
		jnz	short loc_26F9E
		cmp	byte ptr [si+1], 1
		jnz	short loc_26F9E
		push	word ptr [si+12h]
		call	sub_38156
		pop	bx
		mov	word ptr [si+12h], 0FFFFh
		mov	byte ptr [si+1], 0
		mov	byte ptr [si+1Ah], 1

loc_26F9E:				; CODE XREF: sub_26F6D+13j
					; sub_26F6D+19j
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_26F6D	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		call	sub_3031D
		or	ax, ax
		jnz	short loc_26FB7
		jmp	loc_27127
; ---------------------------------------------------------------------------

loc_26FB7:				; CODE XREF: seg007:0412j
		inc	word_3EB2A
		cmp	word_3EB2A, 2
		jge	short loc_26FCC
		cmp	byte_40634, 0
		jz	short loc_26FCC
		jmp	loc_27127
; ---------------------------------------------------------------------------

loc_26FCC:				; CODE XREF: seg007:0420j seg007:0427j
		mov	word ptr [bp-4], 0
		mov	si, 6364h

loc_26FD4:				; CODE XREF: seg007:0577j
		cmp	byte ptr [si], 0
		jnz	short loc_26FDC
		jmp	loc_2710B
; ---------------------------------------------------------------------------

loc_26FDC:				; CODE XREF: seg007:0437j
		cmp	byte_40633, 0
		jnz	short loc_26FE6
		jmp	loc_2710B
; ---------------------------------------------------------------------------

loc_26FE6:				; CODE XREF: seg007:0441j
		mov	cl, 4
		mov	al, [si+0Ah]
		sub	ah, ah
		shl	ax, cl
		mov	dx, [si+4]
		mov	bx, dx
		shl	dx, 1
		add	dx, bx
		shl	dx, 1
		add	dx, bx
		add	ax, dx
		mov	cl, 3
		shr	ax, cl
		mov	[si+4],	ax
		mov	cl, 4
		shr	ax, cl
		mov	[bp-1],	al
		cmp	al, [si+0Eh]
		jnz	short loc_27017
		cmp	byte ptr [si+1Ah], 0
		jz	short loc_2705D

loc_27017:				; CODE XREF: seg007:046Fj
		mov	al, [bp-1]
		sub	ah, ah
		push	ax
		push	word ptr [si+2]
		mov	di, ax
		call	sub_38C4C
		add	sp, 4
		mov	ax, di
		sub	di, 0Ah
		jns	short loc_27033
		sub	di, di

loc_27033:				; CODE XREF: seg007:048Fj
		cmp	word ptr [si+14h], 0FFFFh
		jz	short loc_27045
		push	di
		push	word ptr [si+14h]
		call	sub_38C4C
		add	sp, 4

loc_27045:				; CODE XREF: seg007:0497j
		cmp	word ptr [si+16h], 0FFFFh
		jz	short loc_27057
		push	di
		push	word ptr [si+16h]
		call	sub_38C4C
		add	sp, 4

loc_27057:				; CODE XREF: seg007:04A9j
		mov	al, [bp-1]
		mov	[si+0Eh], al

loc_2705D:				; CODE XREF: seg007:0475j
		mov	ax, [si+6]
		mov	dx, [si+8]
		mov	cx, ax
		mov	bx, dx
		shl	ax, 1
		rcl	dx, 1
		add	ax, cx
		adc	dx, bx
		shl	ax, 1
		rcl	dx, 1
		add	ax, cx
		adc	dx, bx
		mov	cx, [si+0Ch]
		sub	bx, bx
		shl	cx, 1
		rcl	bx, 1
		shl	cx, 1
		rcl	bx, 1
		shl	cx, 1
		rcl	bx, 1
		shl	cx, 1
		rcl	bx, 1
		add	cx, ax
		adc	bx, dx
		shr	bx, 1
		rcr	cx, 1
		shr	bx, 1
		rcr	cx, 1
		shr	bx, 1
		rcr	cx, 1
		mov	[si+6],	cx
		mov	[si+8],	bx
		shr	bx, 1
		rcr	cx, 1
		shr	bx, 1
		rcr	cx, 1
		shr	bx, 1
		rcr	cx, 1
		shr	bx, 1
		rcr	cx, 1
		mov	di, cx
		cmp	cx, [si+10h]
		jnz	short loc_270BF
		cmp	byte ptr [si+1Ah], 0
		jz	short loc_270D4

loc_270BF:				; CODE XREF: seg007:0517j
		cmp	word ptr [si+12h], 0FFFFh
		jz	short loc_270D4
		push	di
		push	word ptr [si+12h]
		call	sub_39088
		add	sp, 4
		mov	[si+10h], di

loc_270D4:				; CODE XREF: seg007:051Dj seg007:0523j
		mov	byte ptr [si+1Ah], 0
		cmp	byte ptr [si+1Bh], 0
		jz	short loc_2710B
		cmp	byte ptr [si+1], 0
		jz	short loc_270EE
		push	word ptr [si+14h]
		call	sub_3764A
		jmp	short loc_27104
; ---------------------------------------------------------------------------

loc_270EE:				; CODE XREF: seg007:0542j
		push	word ptr [si+14h]
		call	sub_3771E
		add	sp, 2
		or	ax, ax
		jz	short loc_2710B
		push	word ptr [bp-4]
		push	cs
		call	near ptr sub_26EF4

loc_27104:				; CODE XREF: seg007:054Cj
		add	sp, 2
		mov	byte ptr [si+1Bh], 0

loc_2710B:				; CODE XREF: seg007:0439j seg007:0443j ...
		add	si, 4Ch	; 'L'
		inc	word ptr [bp-4]
		cmp	word ptr [bp-4], 19h
		jge	short loc_2711A
		jmp	loc_26FD4
; ---------------------------------------------------------------------------

loc_2711A:				; CODE XREF: seg007:0575j
		cmp	word_3EB2A, 2
		jl	short loc_27127
		mov	word_3EB2A, 0

loc_27127:				; CODE XREF: seg007:0414j seg007:0429j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2712E	proc far		; CODE XREF: sub_18D06+22P
					; sub_18D06+50P

var_16		= word ptr -16h
var_14		= word ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= word ptr  16h

		push	bp
		mov	bp, sp
		sub	sp, 16h
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 6364h
		mov	[bp+var_2], ax
		push	[bp+arg_C]
		push	[bp+arg_E]
		push	[bp+arg_A]
		call	sub_300B6
		add	sp, 4
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_C], ax
		cmp	ax, 1770h
		jle	short loc_27172
		mov	[bp+var_8], 0
		mov	bx, [bp+var_2]
		mov	byte ptr [bx+0Ah], 0
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_27172:				; CODE XREF: sub_2712E+32j
		push	[bp+arg_6]
		push	[bp+arg_8]
		push	[bp+arg_4]
		call	sub_300B6
		add	sp, 4
		push	ax
		call	sub_300B6
		add	sp, 4
		mov	[bp+var_A], ax
		sub	ax, [bp+var_C]
		mov	[bp+var_16], ax
		mov	ax, 64h	; 'd'
		xor	dx, dx
		div	[bp+arg_10]
		imul	[bp+var_16]
		mov	[bp+var_16], ax
		mov	ax, 7Fh	; ''
		mul	[bp+var_C]
		mov	cx, 1770h
		div	cx
		neg	ax
		add	ax, 7Fh	; ''
		mov	[bp+var_8], ax
		cmp	[bp+var_16], 0
		jle	short loc_271C6
		mov	cl, 4
		mov	ax, [bp+var_8]
		shr	ax, cl
		sub	[bp+var_8], ax

loc_271C6:				; CODE XREF: sub_2712E+8Cj
		mov	ax, [bp+arg_2]
		mov	bx, [bp+var_2]
		add	bx, 1Ch
		mov	[bp+var_10], bx
		mov	[bp+var_E], ds
		les	bx, [bx+8]
		mov	cl, es:[bx+0Eh]
		sub	ch, ch
		sub	dx, dx
		div	cx
		mov	cl, 4
		mov	dl, es:[bx+0Fh]
		sub	dh, dh
		shl	dx, cl
		add	ax, dx
		mov	[bp+var_14], ax
		mov	ax, 1770h
		sub	ax, [bp+var_16]
		mov	[bp+var_6], ax
		or	ax, ax
		jz	short loc_27213
		mov	ax, 1770h
		mul	[bp+var_14]
		div	[bp+var_6]
		mov	[bp+var_6], ax
		mov	ax, [bp+var_6]
		mov	bx, [bp+var_2]
		mov	[bx+0Ch], ax

loc_27213:				; CODE XREF: sub_2712E+CEj
		mov	al, byte ptr [bp+var_8]
		mov	bx, [bp+var_2]
		mov	[bx+0Ah], al
		mov	sp, bp
		pop	bp
		retf
sub_2712E	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	word ptr [bp+6]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+2Eh]
		push	word ptr [bx+2Ch]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		push	ax
		mov	ax, 33BCh
		push	ax
		call	sub_3219D
		pop	bx
		pop	bx
		mov	al, 1
		mov	[si+1Ah], al
		mov	[si+1Bh], al
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	word ptr [bp+6]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+32h]
		push	word ptr [bx+30h]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		mov	byte ptr [si+1Ah], 1
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_26F6D
		pop	bx
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	word ptr [bp+6]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+36h]
		push	word ptr [bx+34h]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		mov	byte ptr [si+1Ah], 1
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_26F6D
		pop	bx
		pop	si
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_272F4	proc far		; CODE XREF: sub_195E6:loc_196D2P
					; sub_195E6:loc_196FCP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+3Ah]
		push	word ptr [bx+38h]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		mov	byte ptr [si+1Ah], 1
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_26F6D
		pop	bx
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_272F4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_27338	proc far		; CODE XREF: sub_18CD8+24P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+46h]
		push	word ptr [bx+44h]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		mov	byte ptr [si+1Ah], 1
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_27338	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_27374	proc far		; CODE XREF: sub_18CD8+13P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		add	bx, 6364h
		mov	ax, [bx+4]
		mov	cl, 4
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bx+4Ah]
		push	word ptr [bx+48h]
		mov	si, bx
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+14h], ax
		mov	byte ptr [si+1Ah], 1
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_27374	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_273B0	proc far		; CODE XREF: sub_188A4+391P

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		add	si, 6364h
		lea	ax, [si+1Ch]
		mov	di, ax
		mov	[bp+var_2], ds
		cmp	word ptr [si+16h], 0FFFFh
		jz	short loc_273DB
		push	word ptr [si+16h]
		call	sub_3764A
		pop	bx

loc_273DB:				; CODE XREF: sub_273B0+20j
		mov	cl, 4
		mov	ax, [si+4]
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	es, [bp+var_2]
		push	word ptr es:[di+22h]
		push	word ptr es:[di+20h]
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+16h], ax
		mov	byte ptr [si+1Ah], 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_273B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2740B	proc far		; CODE XREF: sub_188A4+3A3P

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		add	si, 6364h
		lea	ax, [si+1Ch]
		mov	di, ax
		mov	[bp+var_2], ds
		cmp	word ptr [si+16h], 0FFFFh
		jz	short loc_27436
		push	word ptr [si+16h]
		call	sub_3764A
		pop	bx

loc_27436:				; CODE XREF: sub_2740B+20j
		mov	cl, 4
		mov	ax, [si+4]
		shr	ax, cl
		push	ax
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	es, [bp+var_2]
		push	word ptr es:[di+26h]
		push	word ptr es:[di+24h]
		call	sub_3751A
		add	sp, 0Ah
		mov	[si+16h], ax
		mov	byte ptr [si+1Ah], 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2740B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_27466	proc far		; CODE XREF: sub_188A4+2AP
					; sub_188A4+57P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		push	word ptr [bx+637Ah]
		mov	si, ax
		call	sub_3764A
		pop	bx
		mov	word ptr [si+637Ah], 0FFFFh
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_27466	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		mov	ax, 4Ch	; 'L'
		imul	word ptr [bp+6]
		mov	bx, ax
		mov	si, [bx+6378h]
		cmp	si, 0FFFFh
		jle	short loc_274A7
		push	si
		call	sub_3771E
		pop	bx
		jmp	short loc_274AA
; ---------------------------------------------------------------------------

loc_274A7:				; CODE XREF: seg007:08FCj
		mov	ax, 1

loc_274AA:				; CODE XREF: seg007:0905j
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2
seg007		ends

; ===========================================================================

; Segment type:	Pure code
seg008		segment	byte public 'CODE' use16
		assume cs:seg008
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_274B0	proc far		; CODE XREF: sub_27686+15Cp

var_40		= byte ptr -40h
var_22		= byte ptr -22h
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 40h
		push	di
		push	si
		mov	ax, word_44AE4
		imul	word_461D0
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_6]
		sub	ax, [bp+arg_4]
		cwd
		push	dx
		push	ax
		mov	ax, [bp+arg_2]
		sub	ax, [bp+arg_0]
		cwd
		push	dx
		push	ax
		call	__aFlmul
		push	dx
		push	ax
		call	__aFldiv
		add	ax, 12h
		adc	dx, 0
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		call	sub_3A484
		cmp	dx, [bp+var_2]
		jg	short loc_27506
		jl	short loc_274FD
		cmp	ax, [bp+var_4]
		ja	short loc_27506

loc_274FD:				; CODE XREF: sub_274B0+46j
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_27506:				; CODE XREF: sub_274B0+44j
					; sub_274B0+4Bj
		push	cs
		call	near ptr sub_28DB6
		mov	ax, 0Fh
		push	ax
		mov	ax, [bp+arg_6]
		sub	ax, [bp+arg_4]
		push	ax
		mov	ax, [bp+arg_2]
		sub	ax, [bp+arg_0]
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	bl, byte_3B8FC
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		mov	[bx+75A0h], ax
		mov	[bx+75A2h], dx
		mov	al, byte_3B8FC
		sub	ah, ah
		mov	si, ax
		shl	si, 1
		mov	ax, [bp+arg_0]
		mov	[si-5306h], ax
		mov	ax, [bp+arg_4]
		mov	[si-52EAh], ax
		lea	ax, [bp+var_40]
		push	ax
		call	sub_3260E
		add	sp, 2
		mov	al, 3Ch	; '<'
		mul	byte_3B8FC
		mov	bx, ax
		les	di, dword_449EE
		push	si
		lea	di, [bx+di]
		lea	si, [bp+var_40]
		mov	cx, 0Fh
		repne movsw
		pop	si
		mov	al, byte_3B8FC
		sub	ah, ah
		shl	ax, 1
		mov	cx, 1Eh
		mul	cx
		mov	di, ax
		les	bx, dword_449EE
		push	si
		lea	di, [bx+di+1Eh]
		lea	si, [bp+var_22]
		mov	cx, 0Fh
		repne movsw
		pop	si
		call	sub_35B14
		push	[bp+arg_4]
		push	[bp+arg_0]
		mov	bl, byte_3B8FC
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		les	bx, [bx+75A0h]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3475A
		add	sp, 8
		inc	byte_3B8FC
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_274B0	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_275C6	proc far		; CODE XREF: sub_144CF:loc_146C5P
					; sub_27686+509p ...

var_3C		= byte ptr -3Ch
var_1E		= byte ptr -1Eh

		push	bp
		mov	bp, sp
		sub	sp, 3Ch
		push	di
		push	si
		cmp	byte_3B8FC, 0
		jnz	short loc_275D8
		jmp	loc_27680
; ---------------------------------------------------------------------------

loc_275D8:				; CODE XREF: sub_275C6+Dj
		dec	byte_3B8FC
		push	cs
		call	near ptr sub_28DB6
		mov	al, byte_3B8FC
		sub	ah, ah
		mov	si, ax
		mov	di, si
		shl	di, 1
		push	word ptr [di-52EAh]
		push	word ptr [di-5306h]
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		les	bx, [bx+75A0h]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33D30
		add	sp, 8
		mov	al, 3Ch	; '<'
		mul	byte_3B8FC
		add	ax, word ptr dword_449EE
		mov	dx, word ptr dword_449EE+2
		push	si
		push	di
		lea	di, [bp+var_3C]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		mov	cx, 0Fh
		repne movsw
		pop	ds
		pop	di
		pop	si
		mov	al, byte_3B8FC
		sub	ah, ah
		shl	ax, 1
		mov	cx, 1Eh
		mul	cx
		add	ax, word ptr dword_449EE
		mov	dx, word ptr dword_449EE+2
		add	ax, cx
		push	si
		push	di
		lea	di, [bp+var_1E]
		mov	si, ax
		push	ds
		mov	ds, dx
		mov	cx, 0Fh
		repne movsw
		pop	ds
		pop	di
		pop	si
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_3262E
		add	sp, 2
		mov	bl, byte_3B8FC
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+75A2h]
		push	word ptr [bx+75A0h]
		call	sub_324AA
		add	sp, 4
		push	cs
		call	near ptr sub_28D9E

loc_27680:				; CODE XREF: sub_275C6+Fj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_275C6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_27686	proc far		; CODE XREF: _main+565P sub_11A1C+124P ...

var_1D8		= byte ptr -1D8h
var_1D6		= word ptr -1D6h
var_1D4		= byte ptr -1D4h
var_1D2		= word ptr -1D2h
var_1D0		= dword	ptr -1D0h
var_1CC		= word ptr -1CCh
var_1CA		= byte ptr -1CAh
var_1C8		= word ptr -1C8h
var_1C6		= word ptr -1C6h
var_1C4		= byte ptr -1C4h
var_1C2		= word ptr -1C2h
var_1C0		= byte ptr -1C0h
var_1BE		= byte ptr -1BEh
var_196		= word ptr -196h
var_194		= word ptr -194h
var_192		= byte ptr -192h
var_142		= word ptr -142h
var_140		= byte ptr -140h
var_13E		= dword	ptr -13Eh
var_13A		= dword	ptr -13Ah
var_EE		= byte ptr -0EEh
var_C6		= byte ptr -0C6h
var_9E		= byte ptr -9Eh
var_9C		= word ptr -9Ch
var_9A		= word ptr -9Ah
var_98		= byte ptr -98h
var_84		= byte ptr -84h
var_82		= word ptr -82h
var_80		= byte ptr -80h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= byte ptr  16h

		push	bp
		mov	bp, sp
		sub	sp, 1D8h
		push	di
		push	si
		mov	ax, word_459F2
		add	ax, 2
		mov	[bp+var_1D6], ax
		mov	[bp+var_1C6], 0
		mov	[bp+var_194], 20h ; ' '
		push	cs
		call	near ptr sub_28DB6
		mov	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		mov	word ptr [bp+var_1D0], ax
		mov	word ptr [bp+var_1D0+2], dx
		mov	[bp+var_82], 0
		jmp	loc_2775A
; ---------------------------------------------------------------------------

loc_276C0:				; CODE XREF: sub_27686+E3j
		cmp	[bp+var_1D8], 5Dh ; ']'
		jnz	short loc_27702
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_1C2], ax
		mov	ax, [bp+var_194]
		cmp	[bp+var_1C2], ax
		jle	short loc_276F1
		mov	ax, [bp+var_1C2]
		mov	[bp+var_194], ax

loc_276F1:				; CODE XREF: sub_27686+61j
		mov	[bp+var_82], 0
		mov	ax, [bp+var_1D6]
		add	[bp+var_1C6], ax
		jmp	short loc_27756
; ---------------------------------------------------------------------------
		align 2

loc_27702:				; CODE XREF: sub_27686+3Fj
		les	bx, [bp+var_1D0]
		cmp	byte ptr es:[bx], 7Dh ;	'}'
		jnz	short loc_27744
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_1C2], ax
		mov	ax, [bp+var_194]
		cmp	[bp+var_1C2], ax
		jle	short loc_27736
		mov	ax, [bp+var_1C2]
		mov	[bp+var_194], ax

loc_27736:				; CODE XREF: sub_27686+A6j
		mov	[bp+var_82], 0
		add	[bp+var_1C6], 4
		jmp	short loc_27756
; ---------------------------------------------------------------------------
		align 2

loc_27744:				; CODE XREF: sub_27686+84j
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	si, [bp+var_82]
		inc	[bp+var_82]
		mov	[bp+si+var_80],	al

loc_27756:				; CODE XREF: sub_27686+79j
					; sub_27686+BBj
		inc	word ptr [bp+var_1D0]

loc_2775A:				; CODE XREF: sub_27686+37j
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	[bp+var_1D8], al
		or	al, al
		jz	short loc_2776C
		jmp	loc_276C0
; ---------------------------------------------------------------------------

loc_2776C:				; CODE XREF: sub_27686+E1j
		mov	ax, [bp+var_194]
		add	ax, 18h
		and	al, 0F8h
		mov	[bp+var_194], ax
		cmp	[bp+arg_8], 0FFFFh
		jnz	short loc_27790
		mov	ax, 140h
		sub	ax, [bp+var_194]
		cwd
		sub	ax, dx
		sar	ax, 1
		and	al, 0F8h
		mov	[bp+arg_8], ax

loc_27790:				; CODE XREF: sub_27686+F7j
		cmp	[bp+arg_A], 0FFFFh
		jnz	short loc_277A5
		mov	ax, 0C8h ; '»'
		sub	ax, [bp+var_1C6]
		cwd
		sub	ax, dx
		sar	ax, 1
		mov	[bp+arg_A], ax

loc_277A5:				; CODE XREF: sub_27686+10Ej
		mov	ax, [bp+arg_8]
		mov	[bp+var_30], ax
		add	ax, [bp+var_194]
		mov	[bp+var_2E], ax
		mov	ax, [bp+arg_A]
		sub	ax, 8
		mov	[bp+var_2C], ax
		mov	ax, [bp+arg_A]
		add	ax, [bp+var_1C6]
		add	ax, 8
		mov	[bp+var_2A], ax
		add	[bp+arg_8], 8
		sub	[bp+var_194], 10h
		cmp	[bp+arg_2], 0
		jz	short loc_277F6
		push	ax
		push	[bp+var_2C]
		push	[bp+var_2E]
		push	[bp+var_30]
		push	cs
		call	near ptr sub_274B0
		add	sp, 8
		or	al, al
		jnz	short loc_277F6
		mov	ax, 0FFFFh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_277F6:				; CODE XREF: sub_27686+14Fj
					; sub_27686+164j
		call	sub_35B14
		push	[bp+var_2A]
		push	[bp+var_2C]
		push	[bp+var_2E]
		push	[bp+var_30]
		call	sub_3327F
		add	sp, 8
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		push	[bp+arg_C]
		mov	ax, [bp+arg_A]
		add	ax, [bp+var_1C6]
		add	ax, 4
		push	ax
		mov	ax, [bp+arg_8]
		add	ax, [bp+var_194]
		add	ax, 4
		push	ax
		mov	ax, [bp+arg_A]
		sub	ax, 4
		push	ax
		mov	ax, [bp+arg_8]
		sub	ax, 4
		push	ax
		call	sub_361BC
		add	sp, 0Ah
		sub	ax, ax
		push	ax
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		mov	word_3EB90, 0
		sub	ax, ax
		push	ax
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		mov	[bp+var_82], 0
		mov	[bp+var_9E], 0
		mov	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		mov	word ptr [bp+var_1D0], ax
		mov	word ptr [bp+var_1D0+2], dx
		mov	[bp+var_1C6], 1
		jmp	loc_2798E
; ---------------------------------------------------------------------------
		align 2

loc_27890:				; CODE XREF: sub_27686+317j
		cmp	[bp+var_1D8], 5Bh ; '['
		jnz	short loc_2789A
		jmp	loc_279A0
; ---------------------------------------------------------------------------

loc_2789A:				; CODE XREF: sub_27686+20Fj
		cmp	[bp+var_1D8], 5Dh ; ']'
		jnz	short loc_278E2
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		mov	ax, [bp+arg_A]
		add	ax, [bp+var_1C6]
		push	ax
		push	[bp+arg_8]
		lea	ax, [bp+var_80]
		push	ax
		call	sub_345BC
		add	sp, 6
		mov	[bp+var_82], 0
		mov	ax, [bp+var_1D6]
		add	[bp+var_1C6], ax

loc_278CE:				; CODE XREF: sub_27686+290j
		mov	ax, word ptr [bp+var_1D0]
		mov	dx, word ptr [bp+var_1D0+2]
		mov	[bp+var_9C], ax
		mov	[bp+var_9A], dx
		jmp	loc_2798A
; ---------------------------------------------------------------------------
		align 2

loc_278E2:				; CODE XREF: sub_27686+219j
		les	bx, [bp+var_1D0]
		cmp	byte ptr es:[bx], 7Dh ;	'}'
		jnz	short loc_27918
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		mov	ax, [bp+arg_A]
		add	ax, [bp+var_1C6]
		push	ax
		push	[bp+arg_8]
		lea	ax, [bp+var_80]
		push	ax
		call	sub_345BC
		add	sp, 6
		mov	[bp+var_82], 0
		add	[bp+var_1C6], 4
		jmp	short loc_278CE
; ---------------------------------------------------------------------------

loc_27918:				; CODE XREF: sub_27686+264j
		les	bx, [bp+var_1D0]
		cmp	byte ptr es:[bx], 40h ;	'@'
		jnz	short loc_27978
		cmp	[bp+arg_0], 3
		jnz	short loc_2796A
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		add	ax, [bp+arg_8]
		mov	cx, ax
		mov	al, [bp+var_9E]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bp+arg_E]
		mov	[bx+si], cx
		mov	al, [bp+var_9E]
		cbw
		mov	si, ax
		shl	si, 1
		mov	bx, [bp+arg_E]
		mov	ax, [bp+arg_A]
		add	ax, [bp+var_1C6]
		mov	[bx+si+2], ax
		add	[bp+var_9E], 2

loc_2796A:				; CODE XREF: sub_27686+2A0j
		mov	si, [bp+var_82]
		inc	[bp+var_82]
		mov	[bp+si+var_80],	20h ; ' '
		jmp	short loc_2798A
; ---------------------------------------------------------------------------

loc_27978:				; CODE XREF: sub_27686+29Aj
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	si, [bp+var_82]
		inc	[bp+var_82]
		mov	[bp+si+var_80],	al

loc_2798A:				; CODE XREF: sub_27686+258j
					; sub_27686+2F0j
		inc	word ptr [bp+var_1D0]

loc_2798E:				; CODE XREF: sub_27686+206j
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	[bp+var_1D8], al
		or	al, al
		jz	short loc_279A0
		jmp	loc_27890
; ---------------------------------------------------------------------------

loc_279A0:				; CODE XREF: sub_27686+211j
					; sub_27686+315j
		mov	[bp+var_140], 0
		jmp	loc_27B08
; ---------------------------------------------------------------------------

loc_279A8:				; CODE XREF: sub_27686+48Cj
		inc	word ptr [bp+var_1D0]
		mov	al, [bp+var_140]
		cbw
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	ax, word ptr [bp+var_1D0]
		mov	dx, word ptr [bp+var_1D0+2]
		mov	[bx-13Eh], ax
		mov	[bx-13Ch], dx
		mov	bx, [bp+var_82]
		add	bx, bp
		mov	byte ptr [bx-80h], 0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		add	ax, [bp+arg_8]
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		mov	[bx-28h], ax
		mov	si, [bp+arg_A]
		add	si, [bp+var_1C6]
		mov	al, [bp+var_140]
		cbw
		mov	di, ax
		shl	di, 1
		add	di, bp
		mov	[di-1BEh], si
		mov	ax, [bp+var_1D6]
		add	ax, si
		mov	[di-0EEh], ax
		mov	[bp+var_1CA], 0
		mov	bx, [bp+var_82]
		inc	[bp+var_82]
		add	bx, bp
		mov	byte ptr [bx-80h], 20h ; ' '
		mov	[bp+var_1C2], 0
		jmp	loc_27AAE
; ---------------------------------------------------------------------------
		align 2

loc_27A2A:				; CODE XREF: sub_27686+437j
		cmp	[bp+var_1D8], 5Bh ; '['
		jnz	short loc_27A34
		jmp	loc_27AC0
; ---------------------------------------------------------------------------

loc_27A34:				; CODE XREF: sub_27686+3A9j
		cmp	[bp+var_1D8], 5Dh ; ']'
		jnz	short loc_27A64
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_1C2], ax
		mov	[bp+var_82], 0
		mov	ax, [bp+var_1D6]
		add	[bp+var_1C6], ax
		jmp	short loc_27AAA
; ---------------------------------------------------------------------------
		align 2

loc_27A64:				; CODE XREF: sub_27686+3B3j
		les	bx, [bp+var_1D0]
		cmp	byte ptr es:[bx], 7Dh ;	'}'
		jnz	short loc_27A94
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_1C2], ax
		mov	[bp+var_82], 0
		add	[bp+var_1C6], 3
		jmp	short loc_27AAA
; ---------------------------------------------------------------------------
		align 2

loc_27A94:				; CODE XREF: sub_27686+3E6j
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	si, [bp+var_82]
		inc	[bp+var_82]
		mov	[bp+si+var_80],	al
		inc	[bp+var_1CA]

loc_27AAA:				; CODE XREF: sub_27686+3DBj
					; sub_27686+40Bj
		inc	word ptr [bp+var_1D0]

loc_27AAE:				; CODE XREF: sub_27686+3A0j
		les	bx, [bp+var_1D0]
		mov	al, es:[bx]
		mov	[bp+var_1D8], al
		or	al, al
		jz	short loc_27AC0
		jmp	loc_27A2A
; ---------------------------------------------------------------------------

loc_27AC0:				; CODE XREF: sub_27686+3ABj
					; sub_27686+435j
		mov	al, [bp+var_140]
		cbw
		mov	si, ax
		mov	al, [bp+var_1CA]
		mov	[bp+si+var_98],	al
		mov	si, [bp+var_82]
		mov	[bp+si+var_80],	0
		cmp	[bp+var_1C2], 0
		jnz	short loc_27AEE
		lea	ax, [bp+var_80]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_1C2], ax

loc_27AEE:				; CODE XREF: sub_27686+456j
		mov	al, [bp+var_140]
		cbw
		mov	si, ax
		shl	si, 1
		add	si, bp
		mov	ax, [si-28h]
		add	ax, [bp+var_1C2]
		mov	[si-0C6h], ax
		inc	[bp+var_140]

loc_27B08:				; CODE XREF: sub_27686+31Fj
		les	bx, [bp+var_1D0]
		cmp	byte ptr es:[bx], 5Bh ;	'['
		jnz	short loc_27B15
		jmp	loc_279A8
; ---------------------------------------------------------------------------

loc_27B15:				; CODE XREF: sub_27686+48Aj
		cmp	[bp+var_140], 2
		jle	short loc_27B56
		mov	ax, [bp+var_26]
		cmp	[bp+var_28], ax
		jnz	short loc_27B56
		mov	ax, [bp+var_24]
		cmp	[bp+var_26], ax
		jnz	short loc_27B56
		mov	[bp+var_196], 0
		jmp	short loc_27B4B
; ---------------------------------------------------------------------------

loc_27B34:				; CODE XREF: sub_27686+4CEj
		mov	si, [bp+var_196]
		shl	si, 1
		add	si, bp
		mov	ax, [si-28h]
		add	ax, [bp+var_194]
		mov	[si-0C6h], ax
		inc	[bp+var_196]

loc_27B4B:				; CODE XREF: sub_27686+4ACj
		mov	al, [bp+var_140]
		cbw
		cmp	ax, [bp+var_196]
		jg	short loc_27B34

loc_27B56:				; CODE XREF: sub_27686+494j
					; sub_27686+49Cj ...
		push	cs
		call	near ptr sub_28D9E
		mov	[bp+var_1D4], 1
		mov	ax, [bp+arg_0]
		or	ax, ax
		jz	short loc_27BBC
		cmp	ax, 1
		jz	short loc_27B98
		cmp	ax, 2
		jz	short loc_27BD4
		cmp	ax, 3
		jz	short loc_27BC4
		cmp	ax, 4
		jnz	short loc_27B88
		mov	ax, 8
		cwd
		push	dx
		push	ax
		call	sub_2EB1E
		add	sp, 4

loc_27B88:				; CODE XREF: sub_27686+4F2j
					; sub_27686+534j ...
		cmp	[bp+arg_2], 0
		jz	short loc_27B92
		push	cs
		call	near ptr sub_275C6

loc_27B92:				; CODE XREF: sub_27686+506j
		mov	al, [bp+var_1D4]
		jmp	short loc_27BCD
; ---------------------------------------------------------------------------

loc_27B98:				; CODE XREF: sub_27686+4E3j
					; sub_27686+524j
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		mov	[bp+var_142], ax
		or	ax, ax
		jz	short loc_27B98
		cmp	ax, 1Bh
		jnz	short loc_27BB6
		mov	[bp+var_1D4], 0

loc_27BB6:				; CODE XREF: sub_27686+529j
		push	cs
		call	near ptr sub_28EE4
		jmp	short loc_27B88
; ---------------------------------------------------------------------------

loc_27BBC:				; CODE XREF: sub_27686+4DEj
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_27BC4:				; CODE XREF: sub_27686+4EDj
		mov	al, [bp+var_9E]
		cbw
		mov	cl, 2
		idiv	cl

loc_27BCD:				; CODE XREF: sub_27686+510j
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_27BD4:				; CODE XREF: sub_27686+4E8j
		mov	al, [bp+arg_10]
		mov	[bp+var_1D4], al
		mov	[bp+var_1C0], 0FFh
		push	cs
		call	near ptr sub_2A230
		push	cs
		call	near ptr sub_28DB6
		cmp	[bp+var_140], 2
		jnz	short loc_27C68
		mov	[bp+var_196], 0

loc_27BF5:				; CODE XREF: sub_27686+587j
		mov	bx, [bp+var_196]
		les	si, [bp+var_13E]
		mov	al, es:[bx+si]
		sub	ah, ah
		mov	[bp+var_1C8], ax
		inc	[bp+var_196]
		cmp	ax, 20h	; ' '
		jz	short loc_27BF5
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27C2C
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27C26
		add	ax, 20h	; ' '
		jmp	short loc_27C28
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_27C26:				; CODE XREF: sub_27686+597j
		mov	ax, bx

loc_27C28:				; CODE XREF: sub_27686+59Cj
		mov	[bp+var_1C8], ax

loc_27C2C:				; CODE XREF: sub_27686+590j
		mov	[bp+var_196], 0

loc_27C32:				; CODE XREF: sub_27686+5C4j
		mov	bx, [bp+var_196]
		les	si, [bp+var_13A]
		mov	al, es:[bx+si]
		sub	ah, ah
		mov	[bp+var_1CC], ax
		inc	[bp+var_196]
		cmp	ax, 20h	; ' '
		jz	short loc_27C32
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27C68
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27C62
		add	ax, 20h	; ' '
		jmp	short loc_27C64
; ---------------------------------------------------------------------------
		align 2

loc_27C62:				; CODE XREF: sub_27686+5D4j
		mov	ax, bx

loc_27C64:				; CODE XREF: sub_27686+5D9j
		mov	[bp+var_1CC], ax

loc_27C68:				; CODE XREF: sub_27686+567j
					; sub_27686+5CDj
		mov	[bp+var_84], 1

loc_27C6D:				; CODE XREF: sub_27686+7AAj
					; sub_27686+7CCj ...
		cmp	[bp+var_84], 0
		jnz	short loc_27C77
		jmp	loc_27B88
; ---------------------------------------------------------------------------

loc_27C77:				; CODE XREF: sub_27686+5ECj
		mov	al, [bp+var_1C0]
		cmp	[bp+var_1D4], al
		jnz	short loc_27C84
		jmp	loc_27D6D
; ---------------------------------------------------------------------------

loc_27C84:				; CODE XREF: sub_27686+5F9j
		push	cs
		call	near ptr sub_28DB6
		mov	[bp+var_196], 0
		jmp	loc_27D25
; ---------------------------------------------------------------------------
		align 2

loc_27C92:				; CODE XREF: sub_27686+6B0j
					; sub_27686+6C1j
		mov	al, [bp+var_1D4]
		cbw
		cmp	ax, [bp+var_196]
		jnz	short loc_27CA8
		push	word_407CA
		push	word_3EB90
		jmp	short loc_27CB0
; ---------------------------------------------------------------------------
		align 2

loc_27CA8:				; CODE XREF: sub_27686+615j
		push	word_3EB90
		push	word_407CA

loc_27CB0:				; CODE XREF: sub_27686+61Fj
					; sub_27686+6CCj
		call	sub_34B0C
		add	sp, 4
		mov	si, [bp+var_196]
		shl	si, 1
		shl	si, 1
		mov	ax, word ptr [bp+si+var_13E]
		mov	dx, word ptr [bp+si+var_13E+2]
		mov	word ptr [bp+var_1D0], ax
		mov	word ptr [bp+var_1D0+2], dx
		mov	[bp+var_82], 0
		jmp	short loc_27CED
; ---------------------------------------------------------------------------

loc_27CD8:				; CODE XREF: sub_27686+674j
		mov	bx, [bp+var_82]
		les	si, [bp+var_1D0]
		mov	al, es:[bx+si]
		mov	si, bx
		mov	[bp+si+var_192], al
		inc	[bp+var_82]

loc_27CED:				; CODE XREF: sub_27686+650j
		mov	si, [bp+var_196]
		mov	al, [bp+si+var_98]
		cbw
		cmp	ax, [bp+var_82]
		jg	short loc_27CD8
		mov	di, [bp+var_82]
		mov	[bp+di+var_192], 0
		mov	si, [bp+var_196]
		shl	si, 1
		add	si, bp
		push	word ptr [si-1BEh]
		push	word ptr [si-28h]
		lea	ax, [bp+var_192]
		push	ax
		call	sub_345BC
		add	sp, 6
		inc	[bp+var_196]

loc_27D25:				; CODE XREF: sub_27686+608j
		mov	al, [bp+var_140]
		cbw
		cmp	ax, [bp+var_196]
		jle	short loc_27D56
		cmp	[bp+arg_E], 0
		jnz	short loc_27D39
		jmp	loc_27C92
; ---------------------------------------------------------------------------

loc_27D39:				; CODE XREF: sub_27686+6AEj
		mov	bx, [bp+var_196]
		shl	bx, 1
		mov	si, [bp+arg_E]
		cmp	word ptr [bx+si], 0
		jnz	short loc_27D4A
		jmp	loc_27C92
; ---------------------------------------------------------------------------

loc_27D4A:				; CODE XREF: sub_27686+6BFj
		push	word_3EB90
		push	word_40800
		jmp	loc_27CB0
; ---------------------------------------------------------------------------
		align 2

loc_27D56:				; CODE XREF: sub_27686+6A8j
		push	cs
		call	near ptr sub_28D9E
		cmp	[bp+var_1C0], 0FFh
		jnz	short loc_27D65
		push	cs
		call	near ptr sub_28EE4

loc_27D65:				; CODE XREF: sub_27686+6D9j
		mov	al, [bp+var_1D4]
		mov	[bp+var_1C0], al

loc_27D6D:				; CODE XREF: sub_27686+5FBj
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		mov	[bp+var_142], ax
		lea	ax, [bp+var_EE]
		push	ax
		lea	ax, [bp+var_1BE]
		push	ax
		lea	ax, [bp+var_C6]
		push	ax
		lea	ax, [bp+var_28]
		push	ax
		mov	al, [bp+var_140]
		cbw
		push	ax
		push	cs
		call	near ptr sub_28E90
		add	sp, 0Ah
		mov	[bp+var_1C4], al
		cmp	al, 0FFh
		jz	short loc_27DBC
		cmp	[bp+arg_E], 0
		jz	short loc_27DB8
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bp+arg_E]
		cmp	word ptr [bx+si], 0
		jnz	short loc_27DBC

loc_27DB8:				; CODE XREF: sub_27686+723j
		mov	[bp+var_1D4], al

loc_27DBC:				; CODE XREF: sub_27686+71Dj
					; sub_27686+730j
		cmp	[bp+var_140], 2
		jnz	short loc_27E15
		cmp	[bp+var_142], 0
		jz	short loc_27E15
		mov	ax, [bp+var_142]
		mov	[bp+var_1D2], ax
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27DEE
		test	byte ptr [bx+382Fh], 1
		jz	short loc_27DE8
		add	ax, 20h	; ' '
		jmp	short loc_27DEA
; ---------------------------------------------------------------------------
		align 2

loc_27DE8:				; CODE XREF: sub_27686+75Aj
		mov	ax, bx

loc_27DEA:				; CODE XREF: sub_27686+75Fj
		mov	[bp+var_1D2], ax

loc_27DEE:				; CODE XREF: sub_27686+753j
		mov	ax, [bp+var_1D2]
		cmp	[bp+var_1C8], ax
		jnz	short loc_27E00
		mov	[bp+var_1D4], 0
		jmp	short loc_27E0F
; ---------------------------------------------------------------------------
		align 2

loc_27E00:				; CODE XREF: sub_27686+770j
		mov	ax, [bp+var_1D2]
		cmp	[bp+var_1CC], ax
		jnz	short loc_27E15
		mov	[bp+var_1D4], 1

loc_27E0F:				; CODE XREF: sub_27686+777j
		mov	[bp+var_142], 0Dh

loc_27E15:				; CODE XREF: sub_27686+73Bj
					; sub_27686+742j ...
		mov	ax, [bp+var_142]
		cmp	ax, 20h	; ' '
		jnz	short loc_27E21
		jmp	loc_27EA9
; ---------------------------------------------------------------------------

loc_27E21:				; CODE XREF: sub_27686+796j
		jbe	short loc_27E26
		jmp	loc_27EB6
; ---------------------------------------------------------------------------

loc_27E26:				; CODE XREF: sub_27686:loc_27E21j
		cmp	ax, 0Dh
		jz	short loc_27EA9
		cmp	ax, 1Bh
		jz	short loc_27EA4
		jmp	loc_27C6D
; ---------------------------------------------------------------------------
		align 2

loc_27E34:				; CODE XREF: sub_27686+7DEj
					; sub_27686+835j ...
		cmp	[bp+var_1D4], 0
		jz	short loc_27E42
		dec	[bp+var_1D4]
		jmp	short loc_27E4C
; ---------------------------------------------------------------------------
		align 2

loc_27E42:				; CODE XREF: sub_27686+7B3j
		mov	al, [bp+var_140]
		dec	al
		mov	[bp+var_1D4], al

loc_27E4C:				; CODE XREF: sub_27686+7B9j
		cmp	[bp+arg_E], 0
		jnz	short loc_27E55
		jmp	loc_27C6D
; ---------------------------------------------------------------------------

loc_27E55:				; CODE XREF: sub_27686+7CAj
		mov	al, [bp+var_1D4]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bp+arg_E]
		cmp	word ptr [bx+si], 0
		jnz	short loc_27E34
		jmp	loc_27C6D
; ---------------------------------------------------------------------------
		align 2

loc_27E6A:				; CODE XREF: sub_27686+819j
					; sub_27686+843j ...
		mov	al, [bp+var_1D4]
		cbw
		inc	ax
		mov	cx, ax
		mov	al, [bp+var_140]
		cbw
		cmp	cx, ax
		jge	short loc_27E82
		inc	[bp+var_1D4]
		jmp	short loc_27E87
; ---------------------------------------------------------------------------
		align 2

loc_27E82:				; CODE XREF: sub_27686+7F3j
		mov	[bp+var_1D4], 0

loc_27E87:				; CODE XREF: sub_27686+7F9j
		cmp	[bp+arg_E], 0
		jnz	short loc_27E90
		jmp	loc_27C6D
; ---------------------------------------------------------------------------

loc_27E90:				; CODE XREF: sub_27686+805j
		mov	al, [bp+var_1D4]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	si, [bp+arg_E]
		cmp	word ptr [bx+si], 0
		jnz	short loc_27E6A
		jmp	loc_27C6D
; ---------------------------------------------------------------------------

loc_27EA4:				; CODE XREF: sub_27686+7A8j
		mov	[bp+var_1D4], 0FFh

loc_27EA9:				; CODE XREF: sub_27686+798j
					; sub_27686+7A3j
		mov	[bp+var_84], 0
		push	cs
		call	near ptr sub_28EE4
		jmp	loc_27C6D
; ---------------------------------------------------------------------------
		align 2

loc_27EB6:				; CODE XREF: sub_27686+79Dj
		cmp	ax, 4800h
		jnz	short loc_27EBE
		jmp	loc_27E34
; ---------------------------------------------------------------------------

loc_27EBE:				; CODE XREF: sub_27686+833j
		cmp	ax, 4B00h
		jnz	short loc_27EC6
		jmp	loc_27E34
; ---------------------------------------------------------------------------

loc_27EC6:				; CODE XREF: sub_27686+83Bj
		cmp	ax, 4D00h
		jz	short loc_27E6A
		cmp	ax, 5000h
		jz	short loc_27E6A
		jmp	loc_27C6D
sub_27686	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_27ED4(char *, int, int,	int)
sub_27ED4	proc far		; CODE XREF: sub_110D0+434P
					; sub_12F4A+1BAP ...

var_71C		= word ptr -71Ch
var_71A		= word ptr -71Ah
var_718		= byte ptr -718h
var_716		= byte ptr -716h
var_714		= byte ptr -714h
var_712		= word ptr -712h
var_710		= word ptr -710h
var_70E		= word ptr -70Eh
var_70C		= word ptr -70Ch
var_70A		= word ptr -70Ah
var_708		= word ptr -708h
var_6EA		= byte ptr -6EAh
var_6E8		= dword	ptr -6E8h
var_6E4		= byte ptr -6E4h
var_6E2		= byte ptr -6E2h
var_6E0		= word ptr -6E0h
var_6D0		= word ptr -6D0h
var_6CC		= word ptr -6CCh
var_6CA		= word ptr -6CAh
var_6C8		= byte ptr -6C8h
var_6B4		= byte ptr -6B4h
var_6A0		= byte ptr -6A0h
var_69C		= byte ptr -69Ch
var_69A		= byte ptr -69Ah
var_698		= word ptr -698h
var_18		= byte ptr -18h
var_16		= byte ptr -16h
var_2		= byte ptr -2
arg_0		= dword	ptr  6
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 71Ch
		push	di
		push	si
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_712]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3422h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		or	ax, ax
		jge	short loc_27F1E
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_27F1E:				; CODE XREF: sub_27ED4+40j
		mov	al, byte_3B8FB
		mov	[bp+var_18], al
		mov	byte_3B8FB, 1
		mov	ax, [bp+var_708]
		add	ax, 4
		mov	[bp+var_71C], ax
		push	word_40802
		push	ax
		mov	ax, [bp+var_70A]
		add	ax, 0ABh ; '´'
		push	ax
		push	[bp+var_71C]
		mov	ax, [bp+var_70A]
		sub	ax, 4
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	word_3EB90
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		push	[bp+arg_8]
		push	[bp+arg_6]
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		push	[bp+var_710]
		push	[bp+var_712]
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		mov	di, [bp+var_70E]
		lea	ax, [di+0A2h]
		mov	word ptr [bp+var_6E8+2], ax
		mov	[bp+var_6EA], 0
		jmp	short loc_27FDD
; ---------------------------------------------------------------------------
		align 2

loc_27F9E:				; CODE XREF: sub_27ED4+133j
		mov	al, [bp+var_6EA]
		cbw
		mov	[bp+var_71C], ax
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		mov	ax, [bx-70Ch]
		mov	bx, [bp+var_71C]
		shl	bx, 1
		add	bx, bp

loc_27FBB:				; CODE XREF: sub_27ED4+140j
		mov	[bx-6E2h], ax
		mov	al, [bp+var_6EA]
		cbw
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_71C], ax
		mov	bx, ax
		mov	ax, [bx-6E2h]
		add	ax, 0Ah
		mov	[bx-6C8h], ax
		inc	[bp+var_6EA]

loc_27FDD:				; CODE XREF: sub_27ED4+C7j
		cmp	[bp+var_6EA], 0Ah
		jge	short loc_28016
		mov	al, [bp+var_6EA]
		cbw
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_71C], ax
		mov	bx, ax
		mov	[bx-16h], di
		mov	bx, [bp+var_71C]
		mov	ax, word ptr [bp+var_6E8+2]
		mov	[bx-6B4h], ax
		cmp	[bp+var_6EA], 9
		jnz	short loc_27F9E
		mov	bx, [bp+var_71C]
		mov	ax, [bx-6E4h]
		add	ax, 0Ah
		jmp	short loc_27FBB
; ---------------------------------------------------------------------------

loc_28016:				; CODE XREF: sub_27ED4+10Ej
		push	word_3EB90
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		push	[bp+var_70C]
		push	di
		push	word ptr [bp+arg_0]
		call	sub_345BC
		add	sp, 6

loc_28036:				; CODE XREF: sub_27ED4+1B6j
		push	cs
		call	near ptr sub_28D9E
		mov	[bp+var_714], 0
		push	word ptr [bp+0Ah] ; int
		mov	ax, 3426h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	sub_39E24
		add	sp, 6
		mov	word ptr [bp+var_6E8], ax
		or	ax, ax
		jnz	short loc_28094
		call	nullsub_1

loc_2805E:				; CODE XREF: sub_27ED4:loc_284B2j
		push	word_3EB90
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		mov	ax, 7530h
		cwd
		push	dx		; int
		push	ax		; int
		push	[bp+var_70C]	; int
		push	di		; int
		mov	ax, 12h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_290BC
		add	sp, 0Ch
		cmp	ax, 1Bh
		jnz	short loc_28036

loc_2808C:				; CODE XREF: sub_27ED4+6B2j
		mov	[bp+var_6A0], 0
		jmp	loc_285AC
; ---------------------------------------------------------------------------

loc_28094:				; CODE XREF: sub_27ED4+183j
		push	word ptr [bp+var_6E8] ;	char *
		lea	ax, [bp+var_698]
		push	ax		; int
		push	cs
		call	near ptr sub_28762
		add	sp, 4
		inc	[bp+var_714]

loc_280A8:				; CODE XREF: sub_27ED4+20Cj
		call	sub_39E4C
		mov	word ptr [bp+var_6E8], ax
		or	ax, ax
		jz	short loc_280E2
		push	ax		; char *
		mov	al, [bp+var_714]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax		; int
		push	cs
		call	near ptr sub_28762
		add	sp, 4
		inc	[bp+var_714]
		mov	al, [bp+var_714]
		cbw
		cmp	ax, 80h	; 'Ä'
		jnz	short loc_280A8

loc_280E2:				; CODE XREF: sub_27ED4+1DFj
		call	nullsub_1
		cmp	[bp+var_714], 1
		jg	short loc_280F1
		jmp	loc_281CC
; ---------------------------------------------------------------------------

loc_280F1:				; CODE XREF: sub_27ED4+218j
		sub	si, si
		jmp	loc_281B7
; ---------------------------------------------------------------------------

loc_280F6:				; CODE XREF: sub_27ED4+268j
					; sub_27ED4+2DEj
		inc	[bp+var_6CA]

loc_280FA:				; CODE XREF: sub_27ED4+2F4j
		mov	al, [bp+var_714]
		cbw
		cmp	ax, [bp+var_6CA]
		ja	short loc_28108
		jmp	loc_281B6
; ---------------------------------------------------------------------------

loc_28108:				; CODE XREF: sub_27ED4+22Fj
		mov	ax, [bp+var_6CA]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax		; char *
		call	_strcmp
		add	sp, 4
		or	ax, ax
		jle	short loc_280F6
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, [bp+var_6CA]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 0AC74h
		push	ax
		mov	ax, [bp+var_6CA]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		jmp	loc_280F6
; ---------------------------------------------------------------------------
		align 2

loc_281B6:				; CODE XREF: sub_27ED4+231j
		inc	si

loc_281B7:				; CODE XREF: sub_27ED4+21Fj
		mov	al, [bp+var_714]
		cbw
		dec	ax
		cmp	ax, si
		jbe	short loc_281CC
		lea	ax, [si+1]
		mov	[bp+var_6CA], ax
		jmp	loc_280FA
; ---------------------------------------------------------------------------
		align 2

loc_281CC:				; CODE XREF: sub_27ED4+21Aj
					; sub_27ED4+2EBj
		cmp	[bp+var_714], 7
		jle	short loc_2824D
		mov	ax, 3428h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		push	[bp+var_6E0]
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		mov	ax, 342Ch
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		mov	ax, [bp+var_6D0]
		dec	ax
		push	ax
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_29606
		add	sp, 2
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6

loc_2824D:				; CODE XREF: sub_27ED4+2FDj
		mov	[bp+var_716], 0
		mov	[bp+var_69A], 0
		mov	[bp+var_6E4], 0FFh
		mov	[bp+var_718], 0FFh
		push	cs
		call	near ptr sub_2A230
		mov	[bp+var_2], 0

loc_28269:				; CODE XREF: sub_27ED4+6A9j
		mov	al, [bp+var_6E4]
		cmp	[bp+var_716], al
		jnz	short loc_28280
		mov	al, [bp+var_718]
		cmp	[bp+var_69A], al
		jnz	short loc_28280
		jmp	loc_28370
; ---------------------------------------------------------------------------

loc_28280:				; CODE XREF: sub_27ED4+39Dj
					; sub_27ED4+3A7j
		mov	al, [bp+var_716]
		mov	[bp+var_6E4], al
		mov	al, [bp+var_69A]
		mov	[bp+var_718], al
		push	cs
		call	near ptr sub_28DB6
		sub	si, si
		jmp	loc_28346
; ---------------------------------------------------------------------------
		align 2

loc_2829A:				; CODE XREF: sub_27ED4+489j
		push	word_3EB90
		push	word_407CA

loc_282A2:				; CODE XREF: sub_27ED4+494j
		call	sub_34B0C
		add	sp, 4
		mov	al, [bp+var_69A]
		cbw
		add	ax, si
		mov	[bp+var_71C], ax
		mov	al, [bp+var_714]
		cbw
		cmp	ax, [bp+var_71C]
		jbe	short loc_282F2
		mov	ax, [bp+var_71C]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-6DEh]
		push	di
		mov	ax, 0AC74h
		jmp	short loc_28300
; ---------------------------------------------------------------------------

loc_282F2:				; CODE XREF: sub_27ED4+3EAj
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-6DEh]
		push	di
		mov	ax, 3430h

loc_28300:				; CODE XREF: sub_27ED4+41Cj
		push	ax
		call	sub_345BC
		add	sp, 6
		mov	ax, 0AC74h
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_71A], ax
		push	word_3EB90
		mov	ax, 8
		push	ax
		mov	ax, word ptr [bp+var_6E8+2]
		sub	ax, [bp+var_71A]
		sub	ax, di
		push	ax
		mov	bx, si
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-6DEh]
		mov	ax, [bp+var_71A]
		add	ax, di
		push	ax
		call	sub_335D2
		add	sp, 0Ah
		inc	si

loc_28346:				; CODE XREF: sub_27ED4+3C2j
		cmp	si, 7
		jnb	short loc_2836C
		mov	al, [bp+var_69A]
		cbw
		add	ax, si
		mov	cx, ax
		mov	al, [bp+var_716]
		cbw
		cmp	cx, ax
		jz	short loc_28360
		jmp	loc_2829A
; ---------------------------------------------------------------------------

loc_28360:				; CODE XREF: sub_27ED4+487j
		push	word_407CA
		push	word_3EB90
		jmp	loc_282A2
; ---------------------------------------------------------------------------
		align 2

loc_2836C:				; CODE XREF: sub_27ED4+475j
		push	cs
		call	near ptr sub_28D9E

loc_28370:				; CODE XREF: sub_27ED4+3A9j
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		mov	[bp+var_6CC], ax
		lea	ax, [bp+var_6C8]
		push	ax
		lea	ax, [bp+var_6E2]
		push	ax
		lea	ax, [bp+var_6B4]
		push	ax
		lea	ax, [bp+var_16]
		push	ax
		mov	ax, 0Ah
		push	ax
		push	cs
		call	near ptr sub_28E90
		add	sp, 0Ah
		mov	[bp+var_6EA], al
		cmp	al, 0FFh
		jnz	short loc_283A9
		jmp	loc_28452
; ---------------------------------------------------------------------------

loc_283A9:				; CODE XREF: sub_27ED4+4D0j
		or	al, al
		jnz	short loc_283CA
		test	byte ptr word_442E8, 3
		jnz	short loc_283B7
		jmp	loc_28452
; ---------------------------------------------------------------------------

loc_283B7:				; CODE XREF: sub_27ED4+4DEj
		mov	[bp+var_716], 0
		mov	[bp+var_69A], 0FFh

loc_283C1:				; CODE XREF: sub_27ED4+520j
					; sub_27ED4+52Aj ...
		mov	[bp+var_6CC], 0
		jmp	loc_28452
; ---------------------------------------------------------------------------

loc_283CA:				; CODE XREF: sub_27ED4+4D7j
		cmp	[bp+var_6EA], 1
		jnz	short loc_28402
		test	byte ptr word_442E8, 3
		jz	short loc_28452
		mov	al, [bp+var_69A]
		cbw
		mov	cx, ax
		mov	al, [bp+var_716]
		cbw
		add	ax, cx
		jz	short loc_283EC
		dec	[bp+var_716]

loc_283EC:				; CODE XREF: sub_27ED4+512j
		mov	al, [bp+var_69A]
		cmp	[bp+var_716], al
		jge	short loc_283C1
		mov	al, [bp+var_716]
		mov	[bp+var_69A], al
		jmp	short loc_283C1
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_28402:				; CODE XREF: sub_27ED4+4FBj
		cmp	[bp+var_6EA], 9
		jnz	short loc_28428
		test	byte ptr word_442E8, 3
		jz	short loc_28452
		mov	al, [bp+var_714]
		cbw
		dec	ax
		mov	cx, ax
		mov	al, [bp+var_716]
		cbw
		cmp	cx, ax
		jz	short loc_283C1
		inc	[bp+var_716]
		jmp	short loc_283C1
; ---------------------------------------------------------------------------
		align 2

loc_28428:				; CODE XREF: sub_27ED4+533j
		mov	al, [bp+var_6EA]
		cbw
		mov	cx, ax
		mov	al, [bp+var_69A]
		cbw
		add	ax, cx
		sub	ax, 2
		mov	cx, ax
		mov	al, [bp+var_714]
		cbw
		cmp	cx, ax
		jge	short loc_28452
		mov	al, [bp+var_69A]
		add	al, [bp+var_6EA]
		sub	al, 2
		mov	[bp+var_716], al

loc_28452:				; CODE XREF: sub_27ED4+4D2j
					; sub_27ED4+4E0j ...
		mov	ax, [bp+var_6CC]
		cmp	ax, 0Dh
		jz	short loc_284CE
		cmp	ax, 1Bh
		jz	short loc_284D4
		cmp	ax, 20h	; ' '
		jz	short loc_284CE
		cmp	ax, 4800h
		jz	short loc_28492
		cmp	ax, 5000h
		jz	short loc_284B6
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jnz	short loc_2847F
		test	byte ptr [bx+382Fh], 2
		jz	short loc_28496

loc_2847F:				; CODE XREF: sub_27ED4+5A2j
		mov	bx, [bp+var_6CC]
		test	byte ptr [bx+382Fh], 1
		jz	short loc_284DA
		mov	al, byte ptr [bp+var_6CC]
		add	al, 20h	; ' '
		jmp	short loc_284DE
; ---------------------------------------------------------------------------

loc_28492:				; CODE XREF: sub_27ED4+594j
		dec	[bp+var_716]

loc_28496:				; CODE XREF: sub_27ED4+5A9j
					; sub_27ED4+5F1j ...
		mov	al, [bp+var_69A]
		cmp	[bp+var_716], al
		jge	short loc_284A8
		mov	al, [bp+var_716]
		mov	[bp+var_69A], al

loc_284A8:				; CODE XREF: sub_27ED4+5CAj
		cmp	[bp+var_69A], 0
		jl	short loc_284B2
		jmp	loc_28564
; ---------------------------------------------------------------------------

loc_284B2:				; CODE XREF: sub_27ED4+5D9j
		jmp	loc_2805E
; ---------------------------------------------------------------------------
		align 2

loc_284B6:				; CODE XREF: sub_27ED4+599j
		mov	al, [bp+var_714]
		cbw
		dec	ax
		mov	cx, ax
		mov	al, [bp+var_716]
		cbw
		cmp	cx, ax
		jz	short loc_28496
		inc	[bp+var_716]
		jmp	short loc_28496
; ---------------------------------------------------------------------------
		align 2

loc_284CE:				; CODE XREF: sub_27ED4+585j
					; sub_27ED4+58Fj
		mov	[bp+var_2], 1
		jmp	short loc_28496
; ---------------------------------------------------------------------------

loc_284D4:				; CODE XREF: sub_27ED4+58Aj
		mov	[bp+var_2], 0FFh
		jmp	short loc_28496
; ---------------------------------------------------------------------------

loc_284DA:				; CODE XREF: sub_27ED4+5B4j
		mov	al, byte ptr [bp+var_6CC]

loc_284DE:				; CODE XREF: sub_27ED4+5BCj
		mov	[bp+var_69C], al
		mov	[bp+var_6EA], 0
		jmp	short loc_28516
; ---------------------------------------------------------------------------
		align 2

loc_284EA:				; CODE XREF: sub_27ED4+66Ej
		mov	al, [bp+var_6EA]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, ax
		add	bx, bp
		mov	al, [bx-698h]

loc_28501:				; CODE XREF: sub_27ED4+689j
		cmp	al, [bp+var_69C]
		jnz	short loc_28512
		mov	al, [bp+var_6EA]
		mov	[bp+var_716], al
		jmp	short loc_28496
; ---------------------------------------------------------------------------
		align 2

loc_28512:				; CODE XREF: sub_27ED4+631j
		inc	[bp+var_6EA]

loc_28516:				; CODE XREF: sub_27ED4+613j
		mov	al, [bp+var_714]
		cmp	[bp+var_6EA], al
		jl	short loc_28523
		jmp	loc_28496
; ---------------------------------------------------------------------------

loc_28523:				; CODE XREF: sub_27ED4+64Aj
		mov	al, [bp+var_6EA]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, ax
		add	bx, bp
		mov	al, [bx-698h]
		cbw
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_284EA
		mov	al, [bp+var_6EA]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, ax
		add	bx, bp
		mov	al, [bx-698h]
		add	al, 20h	; ' '
		jmp	short loc_28501
; ---------------------------------------------------------------------------
		align 2

loc_28560:				; CODE XREF: sub_27ED4+6A1j
		inc	[bp+var_69A]

loc_28564:				; CODE XREF: sub_27ED4+5DBj
		mov	al, [bp+var_69A]
		cbw
		add	ax, 6
		mov	cx, ax
		mov	al, [bp+var_716]
		cbw
		cmp	cx, ax
		jl	short loc_28560
		cmp	[bp+var_2], 0
		jnz	short loc_28580
		jmp	loc_28269
; ---------------------------------------------------------------------------

loc_28580:				; CODE XREF: sub_27ED4+6A7j
		cmp	[bp+var_2], 0FFh
		jnz	short loc_28589
		jmp	loc_2808C
; ---------------------------------------------------------------------------

loc_28589:				; CODE XREF: sub_27ED4+6B0j
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, bp
		sub	ax, 698h
		push	ax
		push	word ptr [bp+arg_0+2] ;	char *
		call	_strcpy
		add	sp, 4
		mov	[bp+var_6A0], 1

loc_285AC:				; CODE XREF: sub_27ED4+1BDj
		push	cs
		call	near ptr sub_275C6
		mov	al, [bp+var_18]
		mov	byte_3B8FB, al
		mov	al, [bp+var_6A0]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_27ED4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_285C2(char *, int, char	*)
sub_285C2	proc far		; CODE XREF: _main+411P sub_110D0+44FP ...

var_2		= byte ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= dword	ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		cmp	word ptr [bp+arg_0], 0
		jz	short loc_285EC
		push	word ptr [bp+arg_0]
		push	word ptr [bp+arg_6] ; char *
		call	_strcpy
		add	sp, 4
		push	word ptr [bp+arg_0] ; char *
		call	_strlen
		add	sp, 2
		mov	si, ax
		jmp	short loc_285F4
; ---------------------------------------------------------------------------

loc_285EC:				; CODE XREF: sub_285C2+Bj
		mov	bx, word ptr [bp+arg_6]
		mov	byte ptr [bx], 0
		sub	si, si

loc_285F4:				; CODE XREF: sub_285C2+28j
		or	si, si
		jz	short loc_28618
		mov	bx, word ptr [bp+arg_0]
		mov	al, [bx+si-1]
		mov	[bp+var_2], al
		cmp	al, 3Ah	; ':'
		jz	short loc_28618
		cmp	al, 5Ch	; '\'
		jz	short loc_28618
		mov	ax, 3439h
		push	ax
		push	word ptr [bp+arg_6] ; char *
		call	_strcat
		add	sp, 4

loc_28618:				; CODE XREF: sub_285C2+34j
					; sub_285C2+41j ...
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_6] ; char *
		call	_strcat
		add	sp, 4
		push	[bp+arg_4]
		push	word ptr [bp+arg_6] ; char *
		call	_strcat
		add	sp, 4
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_285C2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_2863A(char *, int, int)
sub_2863A	proc far		; CODE XREF: sub_23B4C+B14P
					; sub_2A2BC+14DEP

var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_4		= byte ptr -4
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 12h
		push	di
		push	si
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_12]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 343Bh
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		or	ax, ax
		jge	short loc_28682
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_28682:				; CODE XREF: sub_2863A+3Ej
		mov	[bp+var_4], 0
		push	word_3EB90
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		push	[bp+arg_6]
		push	[bp+arg_4]
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		push	[bp+var_10]
		push	[bp+var_12]
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		push	word_3EB90
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		push	[bp+var_C]
		push	[bp+var_E]
		push	word ptr [bp+arg_0]
		call	sub_345BC
		add	sp, 6
		push	[bp+var_8]
		push	[bp+var_A]
		push	word ptr [bp+arg_0+2]
		call	sub_345BC
		add	sp, 6
		push	cs
		call	near ptr sub_28D9E
		jmp	short loc_2872F
; ---------------------------------------------------------------------------
		align 2

loc_286F2:				; CODE XREF: sub_2863A+CAj
		mov	bx, word ptr [bp+arg_0+2]
		cmp	byte ptr [bx+di], 20h ;	' '
		jnz	short loc_286FD
		mov	byte ptr [bx+di], 5Fh ;	'_'

loc_286FD:				; CODE XREF: sub_2863A+BEj
		inc	di

loc_286FE:				; CODE XREF: sub_2863A+113j
		mov	bx, word ptr [bp+arg_0+2]
		cmp	byte ptr [bx+di], 0
		jnz	short loc_286F2
		cmp	si, 1Bh
		jz	short loc_28754
		cmp	si, 0Dh
		jz	short loc_28750
		mov	ax, 7530h
		cwd
		push	dx		; int
		push	ax		; int
		push	[bp+var_C]	; int
		push	[bp+var_E]	; int
		mov	ax, 12h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_290BC
		add	sp, 0Ch
		cmp	ax, 1Bh
		jz	short loc_28754

loc_2872F:				; CODE XREF: sub_2863A+B5j
		mov	ax, 7530h
		cwd
		push	dx		; int
		push	ax		; int
		push	[bp+var_8]	; int
		push	[bp+var_A]	; int
		mov	ax, 8
		push	ax
		push	word ptr [bp+arg_0+2] ;	char *
		push	cs
		call	near ptr sub_290BC
		add	sp, 0Ch
		mov	si, ax
		sub	di, di
		jmp	short loc_286FE
; ---------------------------------------------------------------------------
		align 2

loc_28750:				; CODE XREF: sub_2863A+D4j
		mov	[bp+var_4], 1

loc_28754:				; CODE XREF: sub_2863A+CFj
					; sub_2863A+F3j
		push	cs
		call	near ptr sub_275C6
		mov	al, [bp+var_4]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2863A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_28762(int, char	*)
sub_28762	proc far		; CODE XREF: sub_27ED4+1CAp
					; sub_27ED4+1FAp

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	word ptr [bp+arg_2] ; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_4], ax

loc_28777:				; CODE XREF: sub_28762+2Cj
		mov	si, [bp+var_4]
		mov	bx, word ptr [bp+arg_2]
		mov	al, [bx+si-1]
		mov	[bp+var_2], al
		cmp	al, 5Ch	; '\'
		jz	short loc_28790
		cmp	al, 3Ah	; ':'
		jz	short loc_28790
		dec	[bp+var_4]
		jnz	short loc_28777

loc_28790:				; CODE XREF: sub_28762+23j
					; sub_28762+27j
		mov	[bp+var_6], 0

loc_28795:				; CODE XREF: sub_28762+52j
		mov	bx, [bp+var_4]
		inc	[bp+var_4]
		mov	si, word ptr [bp+arg_2]
		mov	al, [bx+si]
		mov	bx, [bp+var_6]
		mov	si, [bp+arg_0]
		mov	[bx+si], al
		mov	bx, [bp+var_6]
		inc	[bp+var_6]
		mov	si, [bp+arg_0]
		cmp	byte ptr [bx+si], 2Eh ;	'.'
		jnz	short loc_28795
		dec	[bp+var_6]
		mov	bx, [bp+var_6]
		mov	byte ptr [bx+si], 0
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_28762	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_287C4	proc far		; CODE XREF: sub_10F3C+DCP
					; sub_110D0+356P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, [bp+arg_0]
		add	word_3EBC4, ax
		cmp	word_3EBC4, 4E20h
		jle	short loc_287ED
		sub	word_3EBC4, 2710h
		sub	word_3EBB0, 2710h
		sub	word_3EBB2, 2710h

loc_287ED:				; CODE XREF: sub_287C4+15j
		call	sub_30519
		mov	si, ax
		or	si, si
		jz	short loc_287FD
		mov	byte_3B8F8, 0

loc_287FD:				; CODE XREF: sub_287C4+32j
		call	sub_305FC
		mov	di, ax
		call	sub_30538
		mov	word_454C0, ax
		cmp	word_3EBB4, di
		jnz	short loc_28815
		jmp	loc_28896
; ---------------------------------------------------------------------------

loc_28815:				; CODE XREF: sub_287C4+4Cj
		mov	ax, word_3EBB4
		xor	ax, di
		and	ax, di
		mov	word_3EBB6, ax
		mov	word_3EBB4, di

loc_28823:				; CODE XREF: sub_287C4+E2j
		test	byte ptr word_3EBB6, 20h
		jz	short loc_28834
		mov	word_3EBC0, 0Dh
		jmp	short loc_28881
; ---------------------------------------------------------------------------
		align 4

loc_28834:				; CODE XREF: sub_287C4+64j
		test	byte ptr word_3EBB6, 10h
		jz	short loc_28844
		mov	word_3EBC0, 20h	; ' '
		jmp	short loc_28881
; ---------------------------------------------------------------------------
		align 2

loc_28844:				; CODE XREF: sub_287C4+75j
		test	byte ptr word_3EBB6, 1
		jz	short loc_28854
		mov	word_3EBC0, 4800h
		jmp	short loc_28881
; ---------------------------------------------------------------------------
		align 2

loc_28854:				; CODE XREF: sub_287C4+85j
		test	byte ptr word_3EBB6, 2
		jz	short loc_28864
		mov	word_3EBC0, 5000h
		jmp	short loc_28881
; ---------------------------------------------------------------------------
		align 2

loc_28864:				; CODE XREF: sub_287C4+95j
		test	byte ptr word_3EBB6, 8
		jz	short loc_28874
		mov	word_3EBC0, 4B00h
		jmp	short loc_28881
; ---------------------------------------------------------------------------
		align 2

loc_28874:				; CODE XREF: sub_287C4+A5j
		test	byte ptr word_3EBB6, 4
		jz	short loc_28881
		mov	word_3EBC0, 4D00h

loc_28881:				; CODE XREF: sub_287C4+6Cj
					; sub_287C4+7Dj ...
		cmp	word_3EBC0, 0
		jz	short loc_288A9
		mov	ax, word_3EBC4
		mov	word_3EBB2, ax
		mov	byte_3B8F8, 0
		jmp	short loc_288A9
; ---------------------------------------------------------------------------
		align 2

loc_28896:				; CODE XREF: sub_287C4+4Ej
		or	di, di
		jz	short loc_288A9
		mov	ax, word_3EBB2
		add	ax, 14h
		cmp	ax, word_3EBC4
		jge	short loc_288A9
		jmp	loc_28823
; ---------------------------------------------------------------------------

loc_288A9:				; CODE XREF: sub_287C4+C2j
					; sub_287C4+CFj ...
		mov	ax, 0AA5Eh
		push	ax
		mov	ax, 0A9FCh
		push	ax
		mov	ax, 8B78h
		push	ax
		call	sub_36A60
		add	sp, 6
		mov	ax, word_4616C
		cmp	word_3EBB8, ax
		jnz	short loc_288D8
		mov	ax, word_461CE
		cmp	word_3EBBA, ax
		jnz	short loc_288D8
		mov	ax, word_442E8
		cmp	word_3EBBC, ax
		jz	short loc_28908

loc_288D8:				; CODE XREF: sub_287C4+100j
					; sub_287C4+109j
		mov	ax, word_4616C
		mov	word_3EBB8, ax
		mov	ax, word_461CE
		mov	word_3EBBA, ax
		mov	byte_3B8F8, 1
		mov	word_3EBBE, 0
		cmp	byte_3B8F7, 0
		jz	short loc_28934
		cmp	byte_3B8F9, 0
		jz	short loc_28901
		push	cs
		call	near ptr sub_28DC8

loc_28901:				; CODE XREF: sub_287C4+137j
		push	cs
		call	near ptr sub_28E04
		jmp	short loc_28934
; ---------------------------------------------------------------------------
		align 2

loc_28908:				; CODE XREF: sub_287C4+112j
		cmp	byte_3B8F8, 0
		jz	short loc_28934
		mov	ax, [bp+arg_0]
		add	word_3EBBE, ax
		cmp	word_3EBBE, 1F4h
		jle	short loc_28934
		mov	word_3EBBE, 0
		mov	byte_3B8F8, 0
		cmp	byte_3B8F9, 0
		jz	short loc_28934
		push	cs
		call	near ptr sub_28DC8

loc_28934:				; CODE XREF: sub_287C4+130j
					; sub_287C4+141j ...
		cmp	byte_3B8F8, 0
		jz	short loc_289B0
		mov	ax, word_3EBBC
		cmp	word_442E8, ax
		jz	short loc_2897C
		mov	ax, word_442E8
		mov	word_3EBBC, ax

loc_2894A:				; CODE XREF: sub_287C4+1C9j
		test	byte ptr word_442E8, 1
		jz	short loc_2895A
		mov	word_3EBC2, 20h	; ' '
		jmp	short loc_28967
; ---------------------------------------------------------------------------
		align 2

loc_2895A:				; CODE XREF: sub_287C4+18Bj
		test	byte ptr word_442E8, 2
		jz	short loc_28967
		mov	word_3EBC2, 0Dh

loc_28967:				; CODE XREF: sub_287C4+193j
					; sub_287C4+19Bj
		cmp	word_3EBC2, 0
		jz	short loc_28974
		mov	ax, word_3EBC4
		mov	word_3EBB0, ax

loc_28974:				; CODE XREF: sub_287C4+1A8j
		mov	word_3EBBE, 0
		jmp	short loc_2898F
; ---------------------------------------------------------------------------

loc_2897C:				; CODE XREF: sub_287C4+17Ej
		cmp	word_442E8, 0
		jz	short loc_2898F
		mov	ax, word_3EBB0
		add	ax, 14h
		cmp	ax, word_3EBC4
		jl	short loc_2894A

loc_2898F:				; CODE XREF: sub_287C4+1B6j
					; sub_287C4+1BDj
		cmp	word_442E8, 0
		jz	short loc_289B0
		test	byte ptr word_442E8, 1
		jz	short loc_289A4
		or	byte ptr word_454C0, 20h
		jmp	short loc_289B0
; ---------------------------------------------------------------------------

loc_289A4:				; CODE XREF: sub_287C4+1D7j
		test	byte ptr word_442E8, 2
		jz	short loc_289B0
		or	byte ptr word_454C0, 10h

loc_289B0:				; CODE XREF: sub_287C4+175j
					; sub_287C4+1D0j ...
		or	si, si
		jnz	short loc_289D9
		cmp	word_3EBC0, 0
		jz	short loc_289C8
		mov	si, word_3EBC0
		mov	word_3EBC0, 0
		jmp	short loc_289D9
; ---------------------------------------------------------------------------
		align 2

loc_289C8:				; CODE XREF: sub_287C4+1F5j
		cmp	word_3EBC2, 0
		jz	short loc_289D9
		mov	si, word_3EBC2
		mov	word_3EBC2, 0

loc_289D9:				; CODE XREF: sub_287C4+1EEj
					; sub_287C4+201j ...
		mov	ax, si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_287C4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_289E2	proc far		; CODE XREF: _main+28AP _main+296P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		pop	bp
		retf
sub_289E2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_289F2	proc far		; CODE XREF: _main+B1P	sub_10786+CP ...

var_54		= byte ptr -54h
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 54h

loc_289F8:				; CODE XREF: sub_289F2+7Aj
		push	[bp+arg_0]
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 3456h
		push	ax
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcat
		add	sp, 4
		lea	ax, [bp+var_54]
		push	ax		; char *
		mov	ax, 1
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_28A6E
		push	[bp+arg_0]
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 345Bh
		push	ax
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcat
		add	sp, 4
		lea	ax, [bp+var_54]
		push	ax		; char *
		mov	ax, 7
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_28A6E
		push	cs
		call	near ptr sub_2A118
		jmp	short loc_289F8
; ---------------------------------------------------------------------------

loc_28A6E:				; CODE XREF: sub_289F2+3Cj
					; sub_289F2+74j
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_289F2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28A78	proc far		; CODE XREF: sub_10786+5C8P
					; sub_110D0+2DCP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3147C
		add	sp, 4
		pop	bp
		retf
sub_28A78	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28A8C	proc far		; CODE XREF: sub_10786+A4P
					; sub_10786+E0P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_30F9D
		add	sp, 6
		pop	bp
		retf
sub_28A8C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28AA2	proc far		; CODE XREF: _main+553P sub_10786+69P	...

var_4		= byte ptr -4
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	al, byte_4645E
		mov	[bp+var_4], al
		mov	bx, [bp+arg_4]
		mov	al, [bx]
		mov	[bp+var_3], al
		mov	al, [bx+1]
		mov	[bp+var_2], al
		mov	al, [bx+2]
		mov	[bp+var_1], al
		lea	ax, [bp+var_4]
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_30F9D
		mov	sp, bp
		pop	bp
		retf
sub_28AA2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28AD6	proc far		; CODE XREF: sub_10786+77P
					; sub_10786+B2P ...

var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_4]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx

loc_28AE9:				; CODE XREF: sub_28AD6+2Bj
		mov	bx, [bp+arg_0]
		les	si, [bp+var_4]
		mov	al, es:[si]
		mov	[bx], al
		inc	[bp+arg_0]
		inc	word ptr [bp+var_4]
		les	bx, [bp+var_4]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_28AE9
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx], 0
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_28AD6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28B0E	proc far		; CODE XREF: sub_2A2BC+630P
					; sub_2A2BC+696P ...

var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	di
		push	si
		mov	ax, [bp+arg_8]
		cmp	[bp+arg_4], ax
		jle	short loc_28B28
		mov	[bp+var_A], 0
		mov	ax, [bp+arg_4]
		jmp	short loc_28B30
; ---------------------------------------------------------------------------

loc_28B28:				; CODE XREF: sub_28B0E+Ej
		mov	[bp+var_A], 1
		mov	ax, [bp+arg_8]

loc_28B30:				; CODE XREF: sub_28B0E+18j
		mov	[bp+var_6], ax
		mov	ax, [bp+arg_E]
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_14], ax
		mov	ax, [bp+var_6]
		dec	ax
		mov	[bp+var_16], ax
		imul	[bp+arg_A]
		shl	ax, 1
		shl	ax, 1
		cwd
		mov	cx, [bp+var_14]
		idiv	cx
		mov	si, ax
		mov	ax, [bp+arg_A]
		add	ax, [bp+arg_C]
		imul	[bp+var_16]
		shl	ax, 1
		shl	ax, 1
		cwd
		idiv	cx
		mov	di, ax
		sub	ax, si
		mov	[bp+var_12], ax
		mov	ax, [bp+arg_0]
		or	ax, ax
		jz	short loc_28B78
		cmp	ax, 1
		jz	short loc_28BCE
		jmp	short loc_28BC5
; ---------------------------------------------------------------------------

loc_28B78:				; CODE XREF: sub_28B0E+61j
		sub	ax, ax
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_4]
		push	[bp+arg_6]
		push	[bp+arg_2]
		call	sub_335D2
		add	sp, 0Ah
		cmp	[bp+var_A], 0
		jnz	short loc_28BAA
		push	word_407CA
		push	[bp+arg_8]
		push	[bp+var_12]
		push	[bp+arg_6]
		mov	ax, [bp+arg_2]
		add	ax, si
		push	ax
		jmp	short loc_28BBD
; ---------------------------------------------------------------------------

loc_28BAA:				; CODE XREF: sub_28B0E+85j
		push	word_407CA
		push	[bp+var_12]
		push	[bp+arg_4]
		mov	ax, [bp+arg_6]
		add	ax, si
		push	ax
		push	[bp+arg_2]

loc_28BBD:				; CODE XREF: sub_28B0E+9Aj
		call	sub_335D2
		add	sp, 0Ah

loc_28BC5:				; CODE XREF: sub_28B0E+68j
					; sub_28B0E+28Dj
		mov	ax, [bp+arg_A]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_28BCE:				; CODE XREF: sub_28B0E+66j
		cmp	[bp+var_A], 0
		jnz	short loc_28BDC
		mov	ax, word_4616C
		sub	ax, [bp+arg_2]
		jmp	short loc_28BE2
; ---------------------------------------------------------------------------

loc_28BDC:				; CODE XREF: sub_28B0E+C4j
		mov	ax, word_461CE
		sub	ax, [bp+arg_6]

loc_28BE2:				; CODE XREF: sub_28B0E+CCj
		mov	[bp+var_4], ax
		cmp	ax, si
		jl	short loc_28BED
		cmp	ax, di
		jle	short loc_28C26

loc_28BED:				; CODE XREF: sub_28B0E+D9j
					; sub_28B0E+F0j
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		test	byte ptr word_442E8, 3
		jnz	short loc_28BED
		cmp	[bp+var_4], si
		jge	short loc_28C14
		cmp	[bp+arg_A], 0
		jnz	short loc_28C0E
		jmp	loc_28CEC
; ---------------------------------------------------------------------------

loc_28C0E:				; CODE XREF: sub_28B0E+FBj
		dec	[bp+arg_A]
		jmp	loc_28CEC
; ---------------------------------------------------------------------------

loc_28C14:				; CODE XREF: sub_28B0E+F5j
		mov	ax, [bp+arg_E]
		dec	ax
		cmp	ax, [bp+arg_A]
		jg	short loc_28C20
		jmp	loc_28CEC
; ---------------------------------------------------------------------------

loc_28C20:				; CODE XREF: sub_28B0E+10Dj
		inc	[bp+arg_A]
		jmp	loc_28CEC
; ---------------------------------------------------------------------------

loc_28C26:				; CODE XREF: sub_28B0E+DDj
		mov	[bp+arg_A], 0FFFFh
		mov	[bp+var_C], si

loc_28C2E:				; CODE XREF: sub_28B0E+1DBj
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		cmp	[bp+var_A], 0
		jnz	short loc_28C48
		mov	ax, word_4616C
		sub	ax, [bp+arg_2]
		jmp	short loc_28C4E
; ---------------------------------------------------------------------------

loc_28C48:				; CODE XREF: sub_28B0E+130j
		mov	ax, word_461CE
		sub	ax, [bp+arg_6]

loc_28C4E:				; CODE XREF: sub_28B0E+138j
		mov	[bp+var_E], ax
		sub	ax, [bp+var_4]
		add	ax, si
		mov	[bp+var_2], ax
		or	ax, ax
		jge	short loc_28C64
		mov	[bp+var_2], 0
		jmp	short loc_28C7C
; ---------------------------------------------------------------------------

loc_28C64:				; CODE XREF: sub_28B0E+14Dj
		mov	ax, [bp+var_2]
		add	ax, [bp+var_12]
		mov	cx, [bp+var_6]
		dec	cx
		cmp	ax, cx
		jle	short loc_28C7C
		mov	ax, [bp+var_6]
		sub	ax, [bp+var_12]
		dec	ax
		mov	[bp+var_2], ax

loc_28C7C:				; CODE XREF: sub_28B0E+154j
					; sub_28B0E+162j
		mov	ax, [bp+var_C]
		cmp	[bp+var_2], ax
		jz	short loc_28CE2
		mov	ax, [bp+var_2]
		mov	[bp+var_C], ax
		push	cs
		call	near ptr sub_28DB6
		sub	ax, ax
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_4]
		push	[bp+arg_6]
		push	[bp+arg_2]
		call	sub_335D2
		add	sp, 0Ah
		cmp	[bp+var_A], 0
		jnz	short loc_28CC2
		push	word_407CA
		push	[bp+arg_8]
		push	[bp+var_12]
		push	[bp+arg_6]
		mov	ax, [bp+arg_2]
		add	ax, [bp+var_2]
		push	ax
		jmp	short loc_28CD6
; ---------------------------------------------------------------------------
		align 2

loc_28CC2:				; CODE XREF: sub_28B0E+19Bj
		push	word_407CA
		push	[bp+var_12]
		push	[bp+arg_4]
		mov	ax, [bp+arg_6]
		add	ax, [bp+var_2]
		push	ax
		push	[bp+arg_2]

loc_28CD6:				; CODE XREF: sub_28B0E+1B1j
		call	sub_335D2
		add	sp, 0Ah
		push	cs
		call	near ptr sub_28D9E

loc_28CE2:				; CODE XREF: sub_28B0E+174j
		test	byte ptr word_442E8, 3
		jz	short loc_28CEC
		jmp	loc_28C2E
; ---------------------------------------------------------------------------

loc_28CEC:				; CODE XREF: sub_28B0E+FDj
					; sub_28B0E+103j ...
		cmp	[bp+arg_A], 0FFFFh
		jnz	short loc_28D0E
		mov	ax, [bp+var_6]
		cwd
		mov	cx, [bp+arg_E]
		idiv	cx
		cwd
		sub	ax, dx
		sar	ax, 1
		add	ax, [bp+var_2]
		imul	cx
		cwd
		mov	cx, [bp+var_6]
		idiv	cx
		mov	[bp+arg_A], ax

loc_28D0E:				; CODE XREF: sub_28B0E+1E2j
		mov	ax, [bp+arg_E]
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_16], ax
		mov	ax, [bp+var_6]
		dec	ax
		mov	[bp+var_14], ax
		imul	[bp+arg_A]
		shl	ax, 1
		shl	ax, 1
		cwd
		mov	cx, [bp+var_16]
		idiv	cx
		mov	si, ax
		mov	ax, [bp+arg_A]
		add	ax, [bp+arg_C]
		imul	[bp+var_14]
		shl	ax, 1
		shl	ax, 1
		cwd
		idiv	cx
		mov	di, ax
		sub	ax, si
		mov	[bp+var_12], ax
		push	cs
		call	near ptr sub_28DB6
		sub	ax, ax
		push	ax
		push	[bp+arg_8]
		push	[bp+arg_4]
		push	[bp+arg_6]
		push	[bp+arg_2]
		call	sub_335D2
		add	sp, 0Ah
		cmp	[bp+var_A], 0
		jnz	short loc_28D7C
		push	word_407CA
		push	[bp+arg_8]
		push	[bp+var_12]
		push	[bp+arg_6]
		mov	ax, [bp+arg_2]
		add	ax, si
		push	ax
		jmp	short loc_28D8F
; ---------------------------------------------------------------------------
		align 2

loc_28D7C:				; CODE XREF: sub_28B0E+256j
		push	word_407CA
		push	[bp+var_12]
		push	[bp+arg_4]
		mov	ax, [bp+arg_6]
		add	ax, si
		push	ax
		push	[bp+arg_2]

loc_28D8F:				; CODE XREF: sub_28B0E+26Bj
		call	sub_335D2
		add	sp, 0Ah
		push	cs
		call	near ptr sub_28D9E
		jmp	loc_28BC5
sub_28B0E	endp


; =============== S U B	R O U T	I N E =======================================


sub_28D9E	proc far		; CODE XREF: sub_1069C+11P
					; sub_10786+64CP ...
		mov	byte_3B8F7, 1
		cmp	byte_3B8F8, 0
		jz	short locret_28DB5
		cmp	byte_3B8F9, 0
		jnz	short locret_28DB5
		push	cs
		call	near ptr sub_28E04

locret_28DB5:				; CODE XREF: sub_28D9E+Aj
					; sub_28D9E+11j
		retf
sub_28D9E	endp


; =============== S U B	R O U T	I N E =======================================


sub_28DB6	proc far		; CODE XREF: _main+29EP
					; _main:loc_10575P ...
		mov	byte_3B8F7, 0
		cmp	byte_3B8F9, 0
		jz	short locret_28DC6
		push	cs
		call	near ptr sub_28DC8

locret_28DC6:				; CODE XREF: sub_28DB6+Aj
		retf
sub_28DB6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28DC8	proc far		; CODE XREF: sub_287C4+13Ap
					; sub_287C4+16Dp ...

var_3C		= byte ptr -3Ch

		push	bp
		mov	bp, sp
		sub	sp, 3Ch
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_3260E
		add	sp, 2
		call	sub_35B14
		les	bx, dword_455C8
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_3262E
		mov	byte_3B8F9, 0
		mov	sp, bp
		pop	bp
		retf
sub_28DC8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28E04	proc far		; CODE XREF: sub_287C4+13Ep
					; sub_28D9E+14p

var_3C		= byte ptr -3Ch

		push	bp
		mov	bp, sp
		sub	sp, 3Eh
		push	si
		mov	si, word_4616C
		mov	ax, si
		cwd
		mov	cx, word_44DC8
		idiv	cx
		sub	si, dx
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_3260E
		add	sp, 2
		call	sub_35B14
		push	word_461CE
		push	si
		les	bx, dword_455C8
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3475A
		add	sp, 8
		push	word_461CE
		push	word_4616C
		les	bx, dword_44364
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33890
		add	sp, 8
		push	word_461CE
		push	word_4616C
		les	bx, dword_449C2
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_34084
		add	sp, 8
		lea	ax, [bp+var_3C]
		push	ax
		call	sub_3262E
		add	sp, 2
		mov	byte_3B8F9, 1
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_28E04	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28E90	proc far		; CODE XREF: sub_10F3C+FBP
					; sub_110D0+375P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	byte_3B8F8, 0
		jz	short loc_28EDA
		sub	si, si
		jmp	short loc_28EA5
; ---------------------------------------------------------------------------
		align 2

loc_28EA4:				; CODE XREF: sub_28E90+26j
					; sub_28E90+2Dj ...
		inc	si

loc_28EA5:				; CODE XREF: sub_28E90+11j
		cmp	[bp+arg_0], si
		jle	short loc_28EDA
		mov	di, si
		shl	di, 1
		mov	bx, [bp+arg_2]
		mov	ax, word_4616C
		cmp	[bx+di], ax
		jg	short loc_28EA4
		mov	bx, [bp+arg_4]
		cmp	[bx+di], ax
		jl	short loc_28EA4
		mov	bx, [bp+arg_6]
		mov	ax, word_461CE
		cmp	[bx+di], ax
		jg	short loc_28EA4
		mov	bx, [bp+arg_8]
		cmp	[bx+di], ax
		jl	short loc_28EA4
		mov	ax, si
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_28EDA:				; CODE XREF: sub_28E90+Dj
					; sub_28E90+18j
		mov	ax, 0FFFFh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_28E90	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28EE4	proc far		; CODE XREF: _main:loc_102C6P
					; _main:loc_102D8P ...

var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 2

loc_28EEA:				; CODE XREF: sub_28EE4+3Cj
		call	sub_30538
		test	al, 30h
		jz	short loc_28EFA

loc_28EF3:				; CODE XREF: sub_28EE4+24j
					; sub_28EE4+32j
		mov	[bp+var_2], 1
		jmp	short loc_28F1C
; ---------------------------------------------------------------------------
		align 2

loc_28EFA:				; CODE XREF: sub_28EE4+Dj
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		or	ax, ax
		jnz	short loc_28EF3
		cmp	byte_3B8F8, 0
		jz	short loc_28F18
		test	byte ptr word_442E8, 3
		jnz	short loc_28EF3

loc_28F18:				; CODE XREF: sub_28EE4+2Bj
		mov	[bp+var_2], 0

loc_28F1C:				; CODE XREF: sub_28EE4+13j
		cmp	[bp+var_2], 0
		jnz	short loc_28EEA
		mov	sp, bp
		pop	bp
		retf
sub_28EE4	endp

; ---------------------------------------------------------------------------

loc_28F26:				; CODE XREF: seg008:1A84j
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_287C4
		add	sp, 2
		or	ax, ax
		jz	short loc_28F26
		push	cs
		call	near ptr sub_28EE4
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_28F3C	proc far		; CODE XREF: sub_10786+5E4P
					; sub_10786+6A2P ...
		mov	ax, 5F3Eh
		mov	dx, seg	seg012
		push	dx
		push	ax
		call	sub_35AF6
		add	sp, 4
		retf
sub_28F3C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_28F4E	proc far		; CODE XREF: sub_1069C+CP
					; sub_39E56+239P
		mov	ax, 5F3Eh
		mov	dx, seg	seg012
		push	dx
		push	ax
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		retf
sub_28F4E	endp


; =============== S U B	R O U T	I N E =======================================


sub_28F6A	proc far		; CODE XREF: sub_10786:loc_10DECP
					; sub_10786+739P ...
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_35AF6
		add	sp, 4
		retf
sub_28F6A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_28F7C	proc far		; CODE XREF: sub_1059A+B5P
					; sub_1069C+16P ...
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		retf
sub_28F7C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_28F98	proc far		; CODE XREF: sub_10786+92P
					; sub_10786+CEP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_4]
		mov	word_4224C, ax
		add	ax, word_459F2
		inc	ax
		mov	word_4224E, ax
		mov	ax, [bp+arg_2]
		mov	word_42248, ax
		push	[bp+arg_0]
		call	sub_32843
		add	sp, 2
		add	ax, [bp+arg_2]
		inc	ax
		mov	word_4224A, ax
		sub	ax, ax
		push	ax
		push	[bp+arg_8]
		call	sub_34B0C
		add	sp, 4
		mov	ax, [bp+arg_4]
		inc	ax
		push	ax
		mov	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		sub	ax, ax
		push	ax
		push	[bp+arg_6]
		call	sub_34B0C
		add	sp, 4
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		mov	ax, 6AD8h
		pop	bp
		retf
sub_28F98	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29008	proc far		; CODE XREF: sub_1168E+79P
					; sub_1168E+B6P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_4]
		dec	ax
		mov	word_42254, ax
		mov	ax, [bp+arg_4]
		add	ax, word_459F2
		inc	ax
		mov	word_42256, ax
		mov	ax, [bp+arg_2]
		dec	ax
		mov	word_42250, ax
		push	[bp+arg_0]
		call	sub_32843
		add	sp, 2
		add	ax, [bp+arg_2]
		inc	ax
		mov	word_42252, ax
		sub	ax, ax
		push	ax
		push	[bp+arg_8]
		call	sub_34B0C
		add	sp, 4
		mov	ax, [bp+arg_4]
		inc	ax
		push	ax
		mov	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		mov	ax, [bp+arg_4]
		inc	ax
		push	ax
		mov	ax, [bp+arg_2]
		dec	ax
		push	ax
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		mov	ax, [bp+arg_4]
		dec	ax
		push	ax
		mov	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		mov	ax, [bp+arg_4]
		dec	ax
		push	ax
		mov	ax, [bp+arg_2]
		dec	ax
		push	ax
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		sub	ax, ax
		push	ax
		push	[bp+arg_6]
		call	sub_34B0C
		add	sp, 4
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_33742
		add	sp, 6
		mov	ax, 6AE0h
		pop	bp
		retf
sub_29008	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_290BC(char *, int, int,	int, int)
sub_290BC	proc far		; CODE XREF: sub_11A1C+145P
					; sub_144CF+189P ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	cs
		call	near ptr sub_28DB6
		push	[bp+arg_A]	; int
		push	[bp+arg_8]	; int
		mov	ax, 2
		mov	dx, seg	seg018
		push	dx
		push	ax		; __int32
		push	[bp+arg_6]	; int
		push	[bp+arg_4]	; int
		mov	ax, word ptr [bp+arg_0+2]
		mov	cx, ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, cx
		add	ax, 9
		push	ax		; int
		push	cx		; int
		sub	ax, ax
		push	ax
		push	word ptr [bp+arg_0] ; char *
		mov	ax, 2
		push	ax		; char
		call	sub_3A4B6
		add	sp, 16h
		mov	[bp+var_4], ax
		push	cs
		call	near ptr sub_28D9E
		push	word ptr [bp+arg_0] ; char *
		call	_strlen
		add	sp, 2
		mov	word ptr [bp+arg_0+2], ax
		dec	ax
		mov	[bp+var_2], ax
		jmp	short loc_2911D
; ---------------------------------------------------------------------------

loc_2911A:				; CODE XREF: sub_290BC+6Aj
		dec	[bp+var_2]

loc_2911D:				; CODE XREF: sub_290BC+5Cj
		mov	bx, [bp+var_2]
		mov	si, word ptr [bp+arg_0]
		cmp	byte ptr [bx+si], 20h ;	' '
		jz	short loc_2911A
		mov	si, bx
		mov	bx, word ptr [bp+arg_0]
		mov	byte ptr [bx+si+1], 0
		mov	ax, [bp+var_4]
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_290BC	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2913A	proc far		; CODE XREF: sub_1069C+84P
					; sub_1069C+D9P ...

var_4		= word ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		sub	di, di
		push	cs
		call	near ptr sub_2A230
		jmp	short loc_29161
; ---------------------------------------------------------------------------

loc_2914A:				; CODE XREF: sub_2913A+2Aj
		push	cs
		call	near ptr sub_2A230
		mov	[bp+var_4], ax
		add	di, ax
		push	ax
		push	cs
		call	near ptr sub_289E2
		add	sp, 2
		mov	si, ax
		or	si, si
		jnz	short loc_29168

loc_29161:				; CODE XREF: sub_2913A+Ej
		cmp	[bp+arg_0], di
		jg	short loc_2914A
		sub	ax, ax

loc_29168:				; CODE XREF: sub_2913A+25j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2913A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2916E	proc far		; CODE XREF: sub_13178+93EP
					; sub_2A2BC+311P ...

var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	di
		push	si
		mov	si, [bp+arg_0]
		add	si, [bp+arg_4]
		mov	di, [bp+arg_2]
		add	di, [bp+arg_6]
		push	[bp+arg_8]
		push	[bp+arg_2]
		push	si
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_2]
		inc	ax
		mov	[bp+var_6], ax
		push	[bp+arg_8]
		push	ax
		lea	ax, [si-1]
		push	ax
		push	[bp+var_6]
		mov	ax, [bp+arg_0]
		inc	ax
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_2]
		add	ax, 2
		mov	[bp+var_8], ax
		push	[bp+arg_A]
		push	ax
		lea	ax, [si-2]
		push	ax
		push	[bp+var_8]
		mov	ax, [bp+arg_0]
		add	ax, 2
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_8]
		push	di
		push	[bp+arg_0]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_0]
		inc	ax
		mov	[bp+var_A], ax
		push	[bp+arg_8]
		lea	ax, [di-1]
		push	ax
		push	[bp+var_A]
		mov	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+var_A]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_0]
		add	ax, 2
		mov	[bp+var_C], ax
		push	[bp+arg_A]
		lea	ax, [di-2]
		push	ax
		push	[bp+var_C]
		mov	ax, [bp+arg_2]
		add	ax, 2
		push	ax
		push	[bp+var_C]
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_C]
		push	di
		push	si
		push	di
		push	[bp+arg_0]
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [di-1]
		mov	[bp+var_E], ax
		push	[bp+arg_C]
		push	ax
		lea	ax, [si-1]
		push	ax
		push	[bp+var_E]
		mov	ax, [bp+arg_0]
		inc	ax
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [di-2]
		mov	[bp+var_10], ax
		push	[bp+arg_A]
		push	ax
		lea	ax, [si-2]
		push	ax
		push	[bp+var_10]
		mov	ax, [bp+arg_0]
		add	ax, 2
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_C]
		push	di
		push	si
		push	[bp+arg_2]
		push	si
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [si-1]
		mov	[bp+var_12], ax
		push	[bp+arg_C]
		lea	ax, [di-1]
		push	ax
		push	[bp+var_12]
		mov	ax, [bp+arg_2]
		inc	ax
		push	ax
		push	[bp+var_12]
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [si-2]
		mov	[bp+var_14], ax
		push	[bp+arg_A]
		lea	ax, [di-2]
		push	ax
		push	[bp+var_14]
		mov	ax, [bp+arg_2]
		add	ax, 2
		push	ax
		push	[bp+var_14]
		call	sub_2FDDE
		add	sp, 0Ah
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2916E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_292DC	proc far		; CODE XREF: sub_110D0+258P
					; sub_110D0+293P ...

var_72		= word ptr -72h
var_70		= word ptr -70h
var_6E		= word ptr -6Eh
var_6C		= word ptr -6Ch
var_6A		= word ptr -6Ah
var_68		= word ptr -68h
var_66		= word ptr -66h
var_64		= word ptr -64h
var_62		= word ptr -62h
var_60		= word ptr -60h
var_5C		= word ptr -5Ch
var_5A		= byte ptr -5Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= byte ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= word ptr  16h
arg_12		= word ptr  18h

		push	bp
		mov	bp, sp
		sub	sp, 72h
		push	di
		push	si
		mov	si, [bp+arg_4]
		add	si, [bp+arg_8]
		mov	di, [bp+arg_6]
		add	di, [bp+arg_A]
		push	[bp+arg_10]
		push	[bp+arg_A]
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_335D2
		add	sp, 0Ah
		push	[bp+arg_C]
		push	[bp+arg_6]
		push	si
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_6]
		inc	ax
		mov	[bp+var_64], ax
		push	[bp+arg_C]
		push	ax
		lea	ax, [si-1]
		push	ax
		push	[bp+var_64]
		mov	ax, [bp+arg_4]
		inc	ax
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_6]
		add	ax, 2
		mov	[bp+var_66], ax
		push	[bp+arg_C]
		push	ax
		lea	ax, [si-2]
		push	ax
		push	[bp+var_66]
		mov	ax, [bp+arg_4]
		add	ax, 2
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_C]
		push	di
		push	[bp+arg_4]
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_4]
		inc	ax
		mov	[bp+var_68], ax
		push	[bp+arg_C]
		lea	ax, [di-1]
		push	ax
		push	[bp+var_68]
		mov	ax, [bp+arg_6]
		inc	ax
		push	ax
		push	[bp+var_68]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_4]
		add	ax, 2
		mov	[bp+var_6A], ax
		push	[bp+arg_C]
		lea	ax, [di-2]
		push	ax
		push	[bp+var_6A]
		mov	ax, [bp+arg_6]
		add	ax, 2
		push	ax
		push	[bp+var_6A]
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_E]
		push	di
		push	si
		push	di
		push	[bp+arg_4]
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [di-1]
		mov	[bp+var_6C], ax
		push	[bp+arg_E]
		push	ax
		lea	ax, [si-1]
		push	ax
		push	[bp+var_6C]
		mov	ax, [bp+arg_4]
		inc	ax
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [di-2]
		mov	[bp+var_6E], ax
		push	[bp+arg_E]
		push	ax
		lea	ax, [si-2]
		push	ax
		push	[bp+var_6E]
		mov	ax, [bp+arg_4]
		add	ax, 2
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	[bp+arg_E]
		push	di
		push	si
		push	[bp+arg_6]
		push	si
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [si-1]
		mov	[bp+var_70], ax
		push	[bp+arg_E]
		lea	ax, [di-1]
		push	ax
		push	[bp+var_70]
		mov	ax, [bp+arg_6]
		inc	ax
		push	ax
		push	[bp+var_70]
		call	sub_2FDDE
		add	sp, 0Ah
		lea	ax, [si-2]
		mov	[bp+var_72], ax
		push	[bp+arg_E]
		lea	ax, [di-2]
		push	ax
		push	[bp+var_72]
		mov	ax, [bp+arg_6]
		add	ax, 2
		push	ax
		push	[bp+var_72]
		call	sub_2FDDE
		add	sp, 0Ah
		mov	ax, [bp+arg_0]
		or	ax, [bp+arg_2]
		jnz	short loc_29466
		jmp	loc_29554
; ---------------------------------------------------------------------------

loc_29466:				; CODE XREF: sub_292DC+185j
		sub	ax, ax
		push	ax
		push	[bp+arg_12]
		call	sub_34B0C
		add	sp, 4
		push	[bp+arg_2]
		push	[bp+arg_0]
		mov	ax, 0AC74h
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		mov	[bp+var_5C], 1
		mov	ax, 0AC74h
		push	ax		; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_62], ax
		mov	[bp+var_8], 0
		jmp	short loc_294B0
; ---------------------------------------------------------------------------

loc_294A0:				; CODE XREF: sub_292DC+1DAj
		mov	bx, [bp+var_8]
		cmp	byte ptr [bx-538Ch], 5Dh ; ']'
		jnz	short loc_294AD
		inc	[bp+var_5C]

loc_294AD:				; CODE XREF: sub_292DC+1CCj
		inc	[bp+var_8]

loc_294B0:				; CODE XREF: sub_292DC+1C2j
		mov	ax, [bp+var_62]
		cmp	[bp+var_8], ax
		jl	short loc_294A0
		mov	[bp+var_2], 0
		mov	[bp+var_6], 0
		mov	ax, [bp+arg_A]
		mov	dx, [bp+var_5C]
		mov	cl, 3
		shl	dx, cl
		sub	ax, dx
		cwd
		sub	ax, dx
		sar	ax, 1
		inc	ax
		mov	[bp+var_60], ax
		mov	[bp+var_8], 0
		jmp	short loc_294EF
; ---------------------------------------------------------------------------

loc_294DE:				; CODE XREF: sub_292DC+22Cj
		mov	bx, [bp+var_2]
		add	bx, bp
		mov	al, [bp+var_4]
		mov	[bx-5Ah], al
		inc	[bp+var_2]

loc_294EC:				; CODE XREF: sub_292DC+275j
		inc	[bp+var_8]

loc_294EF:				; CODE XREF: sub_292DC+200j
		mov	ax, [bp+var_62]
		inc	ax
		cmp	ax, [bp+var_8]
		jle	short loc_29554
		mov	bx, [bp+var_8]
		mov	al, [bx-538Ch]
		mov	[bp+var_4], al
		cmp	al, 5Dh	; ']'
		jz	short loc_2950A
		or	al, al
		jnz	short loc_294DE

loc_2950A:				; CODE XREF: sub_292DC+228j
		mov	bx, [bp+var_2]
		add	bx, bp
		mov	byte ptr [bx-5Ah], 0
		mov	ax, [bp+var_6]
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_6]
		add	ax, [bp+var_60]
		push	ax
		lea	ax, [bp+var_5A]
		push	ax
		call	sub_32843
		add	sp, 2
		mov	cx, ax
		mov	ax, [bp+arg_8]
		sub	ax, cx
		cwd
		sub	ax, dx
		sar	ax, 1
		add	ax, [bp+arg_4]
		push	ax
		lea	ax, [bp+var_5A]
		push	ax
		call	sub_33742
		add	sp, 6
		inc	[bp+var_6]
		mov	[bp+var_2], 0
		jmp	short loc_294EC
; ---------------------------------------------------------------------------
		align 2

loc_29554:				; CODE XREF: sub_292DC+187j
					; sub_292DC+21Aj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_292DC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2955A	proc far		; CODE XREF: sub_1D93C+40P
					; sub_1D93C+52P ...

arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		mov	bx, [bp+arg_4]
		les	si, [bp+arg_0]
		mov	al, es:[si]
		sub	ah, ah
		mov	[bx], ax
		mov	bx, [bp+arg_4]
		les	si, [bp+arg_0]
		mov	al, es:[si+1]
		mov	[bx+6],	ax
		mov	bx, [bp+arg_4]
		les	si, [bp+arg_0]
		mov	al, es:[si+2]
		mov	[bx+8],	al
		mov	bx, [bp+arg_4]
		mov	ax, word ptr [bp+arg_0]
		mov	dx, word ptr [bp+arg_0+2]
		add	ax, 4
		mov	[bx+2],	ax
		mov	[bx+4],	dx
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, word ptr [bp+arg_0]
		mov	dx, word ptr [bp+arg_0+2]
		add	ax, 4
		mov	[bx+0Eh], ax
		mov	[bx+10h], dx
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+6]
		shl	ax, 1
		shl	ax, 1
		mov	cx, [si]
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		shl	cx, 1
		add	ax, cx
		add	ax, word ptr [bp+arg_0]
		mov	dx, word ptr [bp+arg_0+2]
		add	ax, 4
		mov	[bx+12h], ax
		mov	[bx+14h], dx
		mov	bx, [bp+arg_4]
		mov	si, bx
		mov	ax, [si+6]
		mov	cl, 3
		shl	ax, cl
		mov	cx, [si]
		mov	dx, cx
		shl	cx, 1
		add	cx, dx
		shl	cx, 1
		add	ax, cx
		add	ax, word ptr [bp+arg_0]
		mov	dx, word ptr [bp+arg_0+2]
		add	ax, 4
		mov	[bx+0Ah], ax
		mov	[bx+0Ch], dx
		pop	si
		pop	bp
		retf
sub_2955A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29606	proc far		; CODE XREF: sub_110D0+103P
					; sub_110D0+171P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	[bp+arg_0]
		call	sub_32843
		add	sp, 2
		sub	ax, 140h
		neg	ax
		cwd
		sub	ax, dx
		sar	ax, 1
		pop	bp
		retf
sub_29606	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29620	proc far		; CODE XREF: sub_1059A+C5P
					; sub_1069C+72P ...

arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		push	cs
		call	near ptr sub_28F3C
		push	cs
		call	near ptr sub_28DB6
		cmp	[bp+arg_4], 0FFFEh
		jnz	short loc_29654
		les	bx, [bp+arg_0]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4

loc_29648:				; CODE XREF: sub_29620+53j
		push	cs
		call	near ptr sub_28D9E
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_29654:				; CODE XREF: sub_29620+14j
		mov	ax, [bp+arg_4]
		sub	si, si
		jmp	short loc_29670
; ---------------------------------------------------------------------------
		align 2

loc_2965C:				; CODE XREF: sub_29620+65j
		push	si
		les	bx, [bp+arg_0]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_3367A
		add	sp, 6
		inc	si

loc_29670:				; CODE XREF: sub_29620+39j
		cmp	si, 4
		jge	short loc_29648
		push	cs
		call	near ptr sub_2A230
		push	ax
		push	cs
		call	near ptr sub_289E2
		add	sp, 2
		mov	di, ax
		or	di, di
		jz	short loc_2965C
		push	cs
		call	near ptr sub_28F3C
		les	bx, [bp+arg_0]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		push	cs
		call	near ptr sub_28D9E
		mov	ax, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_29620	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_296AA	proc far		; CODE XREF: _main+2CBP _main+2DDP ...
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		push	word_44382
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 3460h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		push	cs
		call	near ptr sub_28DB6
		retf
sub_296AA	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_296E0(char *, int, int)
sub_296E0	proc far		; CODE XREF: sub_13178+400P
					; sub_13178+4A8P ...

arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	ax, 0Ah
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	word ptr [bp+arg_0+2] ;	int
		call	_itoa
		add	sp, 6
		cmp	[bp+arg_6], 0
		jz	short loc_2974D
		sub	si, si
		jmp	short loc_29705
; ---------------------------------------------------------------------------

loc_29704:				; CODE XREF: sub_296E0+2Bj
		inc	si

loc_29705:				; CODE XREF: sub_296E0+22j
		mov	bx, word ptr [bp+arg_0]
		cmp	byte ptr [bx+si], 0
		jnz	short loc_29704
		jmp	short loc_29748
; ---------------------------------------------------------------------------
		align 2

loc_29710:				; CODE XREF: sub_296E0+6Bj
		cmp	[bp+arg_6], si
		jge	short loc_2972A
		sub	di, di
		jmp	short loc_29723
; ---------------------------------------------------------------------------
		align 2

loc_2971A:				; CODE XREF: sub_296E0+45j
		mov	bx, word ptr [bp+arg_0]
		mov	al, [bx+di+1]
		mov	[bx+di], al
		inc	di

loc_29723:				; CODE XREF: sub_296E0+37j
		cmp	di, si
		jl	short loc_2971A
		dec	si
		jmp	short loc_29748
; ---------------------------------------------------------------------------

loc_2972A:				; CODE XREF: sub_296E0+33j
		cmp	[bp+arg_6], si
		jle	short loc_29748
		mov	di, si
		jmp	short loc_2973D
; ---------------------------------------------------------------------------
		align 2

loc_29734:				; CODE XREF: sub_296E0+5Fj
		mov	bx, word ptr [bp+arg_0]
		mov	al, [bx+di]
		mov	[bx+di+1], al
		dec	di

loc_2973D:				; CODE XREF: sub_296E0+51j
		or	di, di
		jge	short loc_29734
		mov	bx, word ptr [bp+arg_0]
		mov	byte ptr [bx], 20h ; ' '
		inc	si

loc_29748:				; CODE XREF: sub_296E0+2Dj
					; sub_296E0+48j ...
		cmp	[bp+arg_6], si
		jnz	short loc_29710

loc_2974D:				; CODE XREF: sub_296E0+1Ej
		cmp	[bp+arg_4], 0
		jz	short loc_2976B
		sub	si, si
		jmp	short loc_29763
; ---------------------------------------------------------------------------
		align 2

loc_29758:				; CODE XREF: sub_296E0+89j
		mov	bx, word ptr [bp+arg_0]
		mov	ax, si
		inc	si
		add	bx, ax
		mov	byte ptr [bx], 30h ; '0'

loc_29763:				; CODE XREF: sub_296E0+75j
		mov	bx, word ptr [bp+arg_0]
		cmp	byte ptr [bx+si], 20h ;	' '
		jz	short loc_29758

loc_2976B:				; CODE XREF: sub_296E0+71j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_296E0	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_29772	proc far		; CODE XREF: sub_10F3C+AEP
					; sub_110D0+310P ...
		mov	word_45D1C, 0
		mov	word_45D06, 0
		mov	word_449F2, 0
		retf
sub_29772	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29786	proc far		; CODE XREF: sub_10F3C+D0P
					; sub_110D0+332P ...

var_6		= word ptr -6
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		push	cs
		call	near ptr sub_2A230
		mov	si, ax
		add	word_45D1C, si
		jmp	short loc_2979F
; ---------------------------------------------------------------------------

loc_2979A:				; CODE XREF: sub_29786+1Ej
		sub	word_45D1C, 3Ch	; '<'

loc_2979F:				; CODE XREF: sub_29786+12j
		cmp	word_45D1C, 3Ch	; '<'
		jg	short loc_2979A
		cmp	word_45D1C, 1Eh
		jle	short loc_297B2
		mov	di, [bp+arg_A]
		jmp	short loc_297B5
; ---------------------------------------------------------------------------

loc_297B2:				; CODE XREF: sub_29786+25j
		mov	di, [bp+arg_C]

loc_297B5:				; CODE XREF: sub_29786+2Aj
		cmp	word_45D06, di
		jz	short loc_297F4
		mov	word_45D06, di
		push	cs
		call	near ptr sub_28DB6
		mov	ax, [bp+arg_0]
		shl	ax, 1
		mov	[bp+var_6], ax
		push	di
		mov	bx, ax
		add	bx, [bp+arg_8]
		push	word ptr [bx]
		mov	bx, ax
		add	bx, [bp+arg_4]
		push	word ptr [bx]
		mov	bx, ax
		add	bx, [bp+arg_6]
		push	word ptr [bx]
		mov	bx, ax
		add	bx, [bp+arg_2]
		push	word ptr [bx]
		call	sub_361BC
		add	sp, 0Ah
		push	cs
		call	near ptr sub_28D9E

loc_297F4:				; CODE XREF: sub_29786+33j
		mov	ax, si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_29786	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_297FC(char *)
sub_297FC	proc far		; CODE XREF: _main+45FP sub_1059A+13P	...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	word ptr [bp+arg_0+2] ;	char *
		mov	ax, 5
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	word_44A7C, ax
		mov	word_44A7E, dx
		push	word ptr [bp+arg_0] ; char *
		mov	ax, 4
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	word_44360, ax
		mov	word_44362, dx
		push	word ptr [bp+0Ah]
		push	word_44A7E
		push	word_44A7C
		push	dx
		push	ax
		call	sub_370D2
		add	sp, 0Ah
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	dx
		push	ax
		call	sub_3717C
		mov	byte_3B8F3, 1
		mov	sp, bp
		pop	bp
		retf
sub_297FC	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_29858	proc far		; CODE XREF: _main:loc_1039EP
					; _main:loc_103EAP ...
		mov	ax, 2
		push	ax
		call	sub_3776C
		add	sp, 2
		push	word_44362
		push	word_44360
		call	sub_3147C
		add	sp, 4
		push	word_44A7E
		push	word_44A7C
		call	sub_3147C
		add	sp, 4
		mov	byte_3B8F3, 0
		retf
sub_29858	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2988A	proc far		; CODE XREF: sub_110D0+18EP
					; sub_1168E+17DP ...

arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0]
		call	sub_34B7C
		add	sp, 4
		les	bx, [bp+arg_0]
		mov	ax, es:[bx+0Eh]
		mov	word_459F2, ax
		pop	bp
		retf
sub_2988A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_298A8	proc far		; CODE XREF: _main+ECP	sub_110D0+210P	...
		push	word_454C8
		push	word_454C6
		push	cs
		call	near ptr sub_2988A
		add	sp, 4
		retf
sub_298A8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_298B8(char *, int)
sub_298B8	proc far		; CODE XREF: sub_118D4+117P
					; sub_13178+119P ...

var_16		= word ptr -16h
var_12		= byte ptr -12h
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	di
		push	si
		mov	ax, 3Ch	; '<'
		imul	word_449D0
		mov	[bp+var_16], ax
		mov	ax, word ptr [bp+arg_0+2]
		sub	dx, dx
		div	[bp+var_16]
		mov	si, ax
		mov	ax, [bp+var_16]
		imul	si
		sub	word ptr [bp+arg_0+2], ax
		mov	ax, word ptr [bp+arg_0+2]
		sub	dx, dx
		div	word_449D0
		mov	di, ax
		mov	ax, word_449D0
		imul	di
		sub	word ptr [bp+arg_0+2], ax
		mov	ax, 2
		push	ax		; int
		sub	ax, ax
		push	ax		; int
		push	si
		lea	ax, [bp+var_12]
		push	ax		; char *
		push	cs
		call	near ptr sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 3464h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strcat
		add	sp, 4
		mov	ax, 2
		push	ax		; int
		mov	ax, 1
		push	ax		; int
		push	di
		lea	ax, [bp+var_12]
		push	ax		; char *
		push	cs
		call	near ptr sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strcat
		add	sp, 4
		cmp	[bp+arg_4], 0
		jz	short loc_29988
		mov	ax, 3466h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strcat
		add	sp, 4
		mov	ax, 2
		push	ax		; int
		mov	ax, 1
		push	ax		; int
		mov	ax, 64h	; 'd'
		cwd
		mov	cx, word_449D0
		idiv	cx
		mul	word ptr [bp+arg_0+2]
		push	ax
		lea	ax, [bp+var_12]
		push	ax		; char *
		push	cs
		call	near ptr sub_296E0
		add	sp, 8
		lea	ax, [bp+var_12]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strcat
		add	sp, 4

loc_29988:				; CODE XREF: sub_298B8+8Fj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_298B8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2998E	proc far		; CODE XREF: _main+388P sub_13178+647P ...

var_4		= word ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		call	_rand
		mov	di, ax
		call	sub_19E7B
		mov	[bp+var_4], ax
		call	sub_32778
		add	ax, [bp+var_4]
		add	ax, di
		add	ax, word_4434C
		mov	si, ax
		or	si, si
		jge	short loc_299C2
		neg	ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_299C2:				; CODE XREF: sub_2998E+29j
		mov	ax, si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2998E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_299CA(int, char	*)
sub_299CA	proc far		; CODE XREF: _main+C7P	_main+DDP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4

loc_299D0:				; CODE XREF: sub_299CA+B1j
		mov	ax, [bp+arg_0]
		cmp	ax, 8
		jbe	short loc_299DB
		jmp	loc_29A60
; ---------------------------------------------------------------------------

loc_299DB:				; CODE XREF: sub_299CA+Cj
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_29A4E[bx]
; ---------------------------------------------------------------------------
		align 2

loc_299E4:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA:off_29A4Eo
		push	word ptr [bp+arg_2]
		call	sub_30D88

loc_299EC:				; CODE XREF: sub_299CA+50j
					; sub_299CA+5Aj ...
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		jmp	short loc_29A60
; ---------------------------------------------------------------------------
		align 2

loc_299F8:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+86o
		push	word ptr [bp+arg_2]
		call	sub_30D88

loc_29A00:				; CODE XREF: sub_299CA+46j
		add	sp, 2
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_29A08:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+92o
		push	word ptr [bp+arg_2]
		call	sub_30DF7
		jmp	short loc_29A00
; ---------------------------------------------------------------------------

loc_29A12:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+88o
		push	word ptr [bp+arg_2]
		call	sub_33861
		jmp	short loc_299EC
; ---------------------------------------------------------------------------

loc_29A1C:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+8Ao
		push	word ptr [bp+arg_2]
		call	sub_3384D
		jmp	short loc_299EC
; ---------------------------------------------------------------------------

loc_29A26:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+8Co
		push	word ptr [bp+arg_2] ; char *
		call	sub_37CBA
		jmp	short loc_299EC
; ---------------------------------------------------------------------------

loc_29A30:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+8Eo
		push	word ptr [bp+arg_2] ; char *
		call	sub_37D04
		jmp	short loc_299EC
; ---------------------------------------------------------------------------

loc_29A3A:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+90o
		push	word ptr [bp+arg_2] ; char *
		call	sub_37C44
		jmp	short loc_299EC
; ---------------------------------------------------------------------------

loc_29A44:				; CODE XREF: sub_299CA+14j
					; DATA XREF: sub_299CA+94o
		push	word ptr [bp+arg_2]
		call	sub_39E14
		jmp	short loc_299EC
; ---------------------------------------------------------------------------
off_29A4E	dw offset loc_299E4	; DATA XREF: sub_299CA+14r
		dw offset loc_299F8
		dw offset loc_29A12
		dw offset loc_29A1C
		dw offset loc_29A26
		dw offset loc_29A30
		dw offset loc_29A3A
		dw offset loc_29A08
		dw offset loc_29A44
; ---------------------------------------------------------------------------

loc_29A60:				; CODE XREF: sub_299CA+Ej
					; sub_299CA+2Bj
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jz	short loc_29A72
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_29A72:				; CODE XREF: sub_299CA+9Cj
		push	cs
		call	near ptr sub_2A118
		cmp	ax, 2
		jz	short loc_29A7E
		jmp	loc_299D0
; ---------------------------------------------------------------------------

loc_29A7E:				; CODE XREF: sub_299CA+AFj
		sub	ax, ax
		cwd
		mov	sp, bp
		pop	bp
		retf
sub_299CA	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29A86	proc far		; CODE XREF: sub_11588+5AP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4

loc_29A8C:				; CODE XREF: sub_29A86+5Dj
		mov	ax, [bp+arg_0]
		cmp	ax, 9
		jz	short loc_29A9C
		cmp	ax, 0Ah
		jz	short loc_29AC6
		jmp	short loc_29AB3
; ---------------------------------------------------------------------------
		align 2

loc_29A9C:				; CODE XREF: sub_29A86+Cj
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	[bp+arg_2]
		call	sub_30AE0
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_29AB3:				; CODE XREF: sub_29A86+13j
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jz	short loc_29ADC
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_29AC6:				; CODE XREF: sub_29A86+11j
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	[bp+arg_2]
		call	sub_30AE0
		add	sp, 6
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_29ADC:				; CODE XREF: sub_29A86+33j
		push	cs
		call	near ptr sub_2A118
		cmp	ax, 2
		jnz	short loc_29A8C
		sub	ax, ax
		cwd
		mov	sp, bp
		pop	bp
		retf
sub_29A86	endp


; =============== S U B	R O U T	I N E =======================================


sub_29AEC	proc far		; CODE XREF: sub_21B7A+289P
					; sub_29B32+9p	...
		push	si
		mov	al, byte_3EBD8
		cbw
		mov	si, ax
		mov	al, byte_3B8F7
		mov	[si-5A64h], al
		mov	al, byte_3B8F8
		mov	[si-5A5Ch], al
		inc	byte_3EBD8
		pop	si
		retf
sub_29AEC	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_29B08	proc far		; CODE XREF: sub_21B7A+2DAP
					; sub_29B32+25Fp ...
		push	si
		cmp	byte_3EBD8, 0
		jz	short loc_29B30
		dec	byte_3EBD8
		mov	al, byte_3EBD8
		cbw
		mov	si, ax
		mov	al, [si-5A64h]
		mov	byte_3B8F7, al
		mov	al, [si-5A5Ch]
		mov	byte_3B8F8, al
		or	al, al
		jnz	short loc_29B30
		push	cs
		call	near ptr sub_28DB6

loc_29B30:				; CODE XREF: sub_29B08+6j
					; sub_29B08+22j
		pop	si
		retf
sub_29B08	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29B32	proc far		; CODE XREF: sub_12F4A:loc_130C2P

var_56		= word ptr -56h
var_54		= word ptr -54h
var_52		= word ptr -52h
var_50		= word ptr -50h
var_4E		= word ptr -4Eh
var_4C		= word ptr -4Ch
var_4A		= word ptr -4Ah
var_48		= word ptr -48h
var_46		= word ptr -46h
var_44		= word ptr -44h
var_42		= word ptr -42h
var_40		= word ptr -40h
var_3E		= word ptr -3Eh
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= word ptr -36h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_1C		= word ptr -1Ch
var_18		= word ptr -18h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah

		push	bp
		mov	bp, sp
		sub	sp, 56h
		push	di
		push	si
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		sub	ax, ax
		push	ax
		lea	ax, [bp+var_2E]
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3469h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		or	ax, ax
		jg	short loc_29B84
		jmp	loc_29D76
; ---------------------------------------------------------------------------

loc_29B84:				; CODE XREF: sub_29B32+4Dj
		mov	[bp+var_C], 0

loc_29B89:				; CODE XREF: sub_29B32+67j
		mov	bx, [bp+var_C]
		add	bx, bp
		mov	byte ptr [bx-0Ah], 0
		inc	[bp+var_C]
		cmp	[bp+var_C], 9
		jl	short loc_29B89
		mov	byte_3FE00, 1
		push	cs
		call	near ptr sub_28DB6
		push	word_40802
		mov	ax, [bp+var_14]
		sub	ax, [bp+var_28]
		sub	ax, 8
		push	ax
		mov	ax, 1
		push	ax
		push	[bp+var_28]
		mov	ax, [bp+var_2A]
		sub	ax, 4
		push	ax
		call	sub_335D2
		add	sp, 0Ah
		push	word_40802
		mov	ax, [bp+var_14]
		sub	ax, [bp+var_28]
		sub	ax, 8
		push	ax
		mov	ax, 1
		push	ax
		push	[bp+var_24]
		mov	ax, [bp+var_26]
		sub	ax, 4
		push	ax
		call	sub_335D2
		add	sp, 0Ah
		push	word_40802
		mov	ax, 1
		push	ax
		mov	ax, [bp+var_22]
		sub	ax, [bp+var_2E]
		push	ax
		mov	ax, [bp+var_1C]
		sub	ax, 4
		push	ax
		push	[bp+var_2E]
		call	sub_335D2
		add	sp, 0Ah
		push	word_40802
		mov	ax, 1
		push	ax
		mov	ax, [bp+var_22]
		sub	ax, [bp+var_2E]
		push	ax
		mov	ax, [bp+var_18]
		sub	ax, 4
		push	ax
		push	[bp+var_2E]
		call	sub_335D2
		add	sp, 0Ah
		mov	ax, [bp+var_2A]
		mov	[bp+var_40], ax
		mov	[bp+var_3E], ax
		mov	[bp+var_36], ax
		mov	ax, [bp+var_26]
		mov	[bp+var_3C], ax
		mov	[bp+var_3A], ax
		mov	[bp+var_38], ax
		mov	ax, [bp+var_2E]
		mov	[bp+var_34], ax
		mov	[bp+var_32], ax
		mov	[bp+var_30], ax
		mov	ax, [bp+var_1C]
		mov	[bp+var_54], ax
		mov	[bp+var_4E], ax
		mov	[bp+var_46], ax
		mov	ax, [bp+var_28]
		mov	[bp+var_52], ax
		mov	[bp+var_50], ax
		mov	[bp+var_44], ax
		mov	ax, [bp+var_18]
		mov	[bp+var_4C], ax
		mov	[bp+var_4A], ax
		mov	[bp+var_48], ax
		mov	ax, [bp+var_2A]
		sub	ax, [bp+var_2E]
		sub	ax, 8
		mov	[bp+var_12], ax
		mov	ax, [bp+var_1C]
		sub	ax, [bp+var_2C]
		sub	ax, 8
		mov	[bp+var_42], ax
		mov	si, 0FFFFh
		call	sub_307B4

loc_29C96:				; CODE XREF: sub_29B32+190j
					; sub_29B32+1EDj
		call	sub_30A21
		or	ax, ax
		jz	short loc_29CA8

loc_29C9F:				; CODE XREF: sub_29B32+181j
		mov	[bp+var_C], 0
		jmp	short loc_29D25
; ---------------------------------------------------------------------------
		align 4

loc_29CA8:				; CODE XREF: sub_29B32+16Bj
		call	sub_305FC
		mov	di, ax
		test	di, 30h
		jnz	short loc_29C9F
		push	di
		call	sub_307D2
		add	sp, 2
		mov	di, ax
		cmp	di, si
		jz	short loc_29C96
		mov	[bp+var_C], 0

loc_29CC9:				; CODE XREF: sub_29B32+1C2j
		mov	ax, [bp+var_C]
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_56], ax
		push	word_3EB90
		push	[bp+var_42]
		push	[bp+var_12]
		mov	bx, ax
		push	word ptr [bx-54h]
		push	word ptr [bx-40h]
		call	sub_335D2
		add	sp, 0Ah
		inc	[bp+var_C]
		cmp	[bp+var_C], 9
		jl	short loc_29CC9
		mov	ax, di
		shl	ax, 1
		add	ax, bp
		mov	[bp+var_56], ax
		push	word_407CA
		push	[bp+var_42]
		push	[bp+var_12]
		mov	bx, ax
		push	word ptr [bx-54h]
		push	word ptr [bx-40h]
		call	sub_335D2
		add	sp, 0Ah
		mov	si, di
		mov	[bp+di+var_A], 1
		jmp	loc_29C96
; ---------------------------------------------------------------------------

loc_29D22:				; CODE XREF: sub_29B32+205j
		inc	[bp+var_C]

loc_29D25:				; CODE XREF: sub_29B32+172j
		cmp	[bp+var_C], 9
		jge	short loc_29D3A
		mov	bx, [bp+var_C]
		add	bx, bp
		mov	al, [bx-0Ah]
		and	byte_3FE00, al
		jmp	short loc_29D22
; ---------------------------------------------------------------------------
		align 2

loc_29D3A:				; CODE XREF: sub_29B32+1F7j
		push	cs
		call	near ptr sub_275C6
		cmp	byte_3FE00, 0
		jnz	short loc_29D7B
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 346Dh
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		jmp	short loc_29D7B
; ---------------------------------------------------------------------------
		align 2

loc_29D76:				; CODE XREF: sub_29B32+4Fj
		mov	byte_3FE00, 0

loc_29D7B:				; CODE XREF: sub_29B32+211j
					; sub_29B32+241j
		call	sub_30A68
		mov	byte_3B8F2, 0
		call	sub_372F4
		mov	word_3F88E, 0
		push	cs
		call	near ptr sub_29B08
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_29B32	endp


; =============== S U B	R O U T	I N E =======================================


sub_29D9A	proc far		; CODE XREF: sub_12F4A:loc_130BAP
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3471h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	byte_3FE00, 0
		mov	byte_3B8F2, 0
		mov	word_3F88E, 0
		call	sub_372F4
		push	cs
		call	near ptr sub_29B08
		retf
sub_29D9A	endp


; =============== S U B	R O U T	I N E =======================================


sub_29DF4	proc far		; CODE XREF: sub_12F4A:loc_130CAP
					; sub_223FA:loc_2245EP
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		mov	byte_3B8F2, 1
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3475h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	word_3F88E, 0
		call	sub_372F4
		push	cs
		call	near ptr sub_29B08
		retf
sub_29DF4	endp

; ---------------------------------------------------------------------------
		align 2
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3479h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	word_3F88E, 0
		call	sub_372F4
		push	cs
		call	near ptr sub_29B08
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_29E98	proc far		; CODE XREF: sub_12F4A:loc_130D2P
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_373E8
		or	ax, ax
		jz	short loc_29EBE
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 347Dh
		jmp	short loc_29ECE
; ---------------------------------------------------------------------------
		align 2

loc_29EBE:				; CODE XREF: sub_29E98+11j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3481h

loc_29ECE:				; CODE XREF: sub_29E98+23j
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	word_3F88E, 0
		push	cs
		call	near ptr sub_29B08
		retf
sub_29E98	endp


; =============== S U B	R O U T	I N E =======================================


sub_29EFA	proc far		; CODE XREF: sub_12F4A:loc_130DAP
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37708
		or	ax, ax
		jz	short loc_29F20
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3485h
		jmp	short loc_29F30
; ---------------------------------------------------------------------------
		align 2

loc_29F20:				; CODE XREF: sub_29EFA+11j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3489h

loc_29F30:				; CODE XREF: sub_29EFA+23j
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	word_3F88E, 0
		push	cs
		call	near ptr sub_29B08
		retf
sub_29EFA	endp


; =============== S U B	R O U T	I N E =======================================


sub_29F5C	proc far		; CODE XREF: sub_12F4A:loc_1313CP
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 348Dh
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		cmp	ax, 1
		jnz	short loc_29FA6
		call	far ptr	sub_2FE74
; ---------------------------------------------------------------------------

loc_29FA6:				; CODE XREF: sub_29F5C+43j
		mov	word_3F88E, 0
		call	sub_372F4
		push	cs
		call	near ptr sub_29B08
		retf
sub_29F5C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_29FB6	proc far		; CODE XREF: sub_12F4A:loc_13134P
					; sub_23B4C:loc_2480AP

var_212		= word ptr -212h
var_20C		= byte ptr -20Ch
var_205		= byte ptr -205h
var_204		= byte ptr -204h
var_202		= byte ptr -202h
var_201		= byte ptr -201h
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 212h
		push	di
		push	si
		push	cs
		call	near ptr sub_29AEC
		mov	word_3F88E, 1
		call	sub_37216
		mov	ax, word_44D4E
		mov	[bp+var_212], ax
		mov	[bp+var_2], 0

loc_29FD9:				; CODE XREF: sub_29FB6+EAj
					; sub_29FB6+F4j ...
		mov	ax, 3491h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		lea	ax, [bp+var_202]
		push	ax
		push	cs
		call	near ptr sub_28AD6
		add	sp, 6
		sub	si, si

loc_29FFC:				; CODE XREF: sub_29FB6+4Fj
		mov	[bp+si+var_20C], 0
		inc	si
		cmp	si, 9
		jl	short loc_29FFC
		mov	bl, byte_3B8FA
		sub	bh, bh
		add	bx, bp
		mov	byte ptr [bx-20Ch], 1
		mov	bx, word_44CEA
		add	bx, bp
		mov	byte ptr [bx-207h], 1
		cmp	word_44D4E, 0Ah
		jnz	short loc_2A02E
		mov	[bp+var_205], 1
		jmp	short loc_2A033
; ---------------------------------------------------------------------------
		align 2

loc_2A02E:				; CODE XREF: sub_29FB6+6Ej
		mov	[bp+var_204], 1

loc_2A033:				; CODE XREF: sub_29FB6+75j
		sub	di, di
		sub	si, si
		jmp	short loc_2A050
; ---------------------------------------------------------------------------
		align 2

loc_2A03A:				; CODE XREF: sub_29FB6+8Aj
		inc	di

loc_2A03B:				; CODE XREF: sub_29FB6+9Dj
		cmp	[bp+di+var_202], 5Bh ; '['
		jnz	short loc_2A03A
		cmp	[bp+si+var_20C], 0
		jz	short loc_2A04E
		mov	[bp+di+var_201], 2Ah ; '*'

loc_2A04E:				; CODE XREF: sub_29FB6+91j
		inc	di
		inc	si

loc_2A050:				; CODE XREF: sub_29FB6+81j
		cmp	si, 9
		jl	short loc_2A03B
		mov	al, [bp+var_2]
		cbw
		push	ax
		sub	ax, ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		lea	ax, [bp+var_202]
		push	ss
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	[bp+var_2], al
		cbw
		cmp	ax, 0FFFFh
		jz	short loc_2A0CC
		cmp	ax, 5
		jz	short loc_2A0A4
		cmp	ax, 6
		jz	short loc_2A0AE
		cmp	ax, 7
		jz	short loc_2A0B8
		cmp	ax, 8
		jz	short loc_2A0C2
		cmp	ax, 9
		jz	short loc_2A0CC
		mov	byte_3B8FA, al
		jmp	loc_29FD9
; ---------------------------------------------------------------------------
		align 2

loc_2A0A4:				; CODE XREF: sub_29FB6+D1j
		mov	word_44CEA, 0
		jmp	loc_29FD9
; ---------------------------------------------------------------------------
		align 2

loc_2A0AE:				; CODE XREF: sub_29FB6+D6j
		mov	word_44CEA, 1
		jmp	loc_29FD9
; ---------------------------------------------------------------------------
		align 2

loc_2A0B8:				; CODE XREF: sub_29FB6+DBj
		mov	word_44D4E, 0Ah
		jmp	loc_29FD9
; ---------------------------------------------------------------------------
		align 2

loc_2A0C2:				; CODE XREF: sub_29FB6+E0j
		mov	word_44D4E, 14h
		jmp	loc_29FD9
; ---------------------------------------------------------------------------
		align 2

loc_2A0CC:				; CODE XREF: sub_29FB6+CCj
					; sub_29FB6+E5j
		mov	ax, word_44D4E
		cmp	[bp+var_212], ax
		jz	short loc_2A103
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3495h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h

loc_2A103:				; CODE XREF: sub_29FB6+11Dj
		mov	word_3F88E, 0
		call	sub_372F4
		push	cs
		call	near ptr sub_29B08
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_29FB6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2A118	proc far		; CODE XREF: sub_289F2+77p
					; sub_299CA+A9p ...

var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	cs
		call	near ptr sub_29AEC
		cmp	byte_3B8FB, 0
		jz	short loc_2A168
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3499h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		mov	[bp+var_2], ax
		or	ax, ax
		jz	short loc_2A196
		mov	[bp+var_2], 0
		jmp	short loc_2A19B
; ---------------------------------------------------------------------------

loc_2A168:				; CODE XREF: sub_2A118+Fj
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 349Dh
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h

loc_2A196:				; CODE XREF: sub_2A118+47j
		mov	[bp+var_2], 1

loc_2A19B:				; CODE XREF: sub_2A118+4Ej
		push	cs
		call	near ptr sub_29B08
		mov	ax, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_2A118	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2A1A6	proc far		; CODE XREF: _main+3F5P _main+444P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		jmp	short loc_2A1E8
; ---------------------------------------------------------------------------
		align 2

loc_2A1AC:				; CODE XREF: sub_2A1A6+55j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	bx, [bp+arg_0]
		shl	bx, 1
		push	word ptr [bx+340Eh]
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		push	cs
		call	near ptr sub_28DB6
		mov	byte_3B8F8, 0

loc_2A1E8:				; CODE XREF: sub_2A1A6+3j
		mov	bx, [bp+arg_0]
		shl	bx, 1
		push	word ptr [bx+3416h]
		call	sub_2FFD4
		add	sp, 2
		or	ax, ax
		jz	short loc_2A1AC
		pop	bp
		retf
sub_2A1A6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_2A200	proc far		; CODE XREF: sub_21B7A+A1P
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 34A1h
		push	ax
		push	word_44CEE
		push	word_44CEC
		push	cs
		call	near ptr sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		push	cs
		call	near ptr sub_27686
		add	sp, 12h
		retf
sub_2A200	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_2A230	proc far		; CODE XREF: sub_10786+5E9P
					; sub_10786:loc_10D77P	...
		call	sub_3279A
		retf
sub_2A230	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2A236	proc far		; CODE XREF: sub_1D93C+11P
					; sub_1FE94+32P ...

var_54		= byte ptr -54h
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 54h

loc_2A23C:				; CODE XREF: sub_2A236+7Aj
		push	[bp+arg_0]
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 34A5h
		push	ax
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcat
		add	sp, 4
		lea	ax, [bp+var_54]
		push	ax		; char *
		mov	ax, 7
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_2A2B2
		push	[bp+arg_0]
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 34AAh
		push	ax
		lea	ax, [bp+var_54]
		push	ax		; char *
		call	_strcat
		add	sp, 4
		lea	ax, [bp+var_54]
		push	ax		; char *
		mov	ax, 1
		push	ax		; int
		push	cs
		call	near ptr sub_299CA
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_2A2B2
		push	cs
		call	near ptr sub_2A118
		jmp	short loc_2A23C
; ---------------------------------------------------------------------------

loc_2A2B2:				; CODE XREF: sub_2A236+3Cj
					; sub_2A236+74j
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_2A236	endp

seg008		ends

; ===========================================================================

; Segment type:	Pure code
seg009		segment	byte public 'CODE' use16
		assume cs:seg009
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2A2BC	proc far		; CODE XREF: sub_110D0+4AFP

var_198		= word ptr -198h
var_196		= word ptr -196h
var_194		= word ptr -194h
var_192		= byte ptr -192h
var_190		= byte ptr -190h
var_18E		= byte ptr -18Eh
var_18D		= byte ptr -18Dh
var_18C		= byte ptr -18Ch
var_18A		= byte ptr -18Ah
var_188		= byte ptr -188h
var_186		= byte ptr -186h
var_184		= byte ptr -184h
var_182		= byte ptr -182h
var_180		= byte ptr -180h
var_17F		= byte ptr -17Fh
var_17E		= byte ptr -17Eh
var_17C		= dword	ptr -17Ch
var_178		= byte ptr -178h
var_176		= byte ptr -176h
var_174		= byte ptr -174h
var_172		= word ptr -172h
var_170		= word ptr -170h
var_16E		= word ptr -16Eh
var_16C		= word ptr -16Ch
var_16A		= word ptr -16Ah
var_168		= word ptr -168h
var_166		= word ptr -166h
var_164		= word ptr -164h
var_162		= byte ptr -162h
var_DC		= word ptr -0DCh
var_DA		= byte ptr -0DAh
var_D8		= byte ptr -0D8h
var_D6		= byte ptr -0D6h
var_D4		= byte ptr -0D4h
var_D2		= word ptr -0D2h
var_D0		= word ptr -0D0h
var_CC		= word ptr -0CCh
var_CA		= word ptr -0CAh
var_C8		= word ptr -0C8h
var_C6		= byte ptr -0C6h
var_C4		= byte ptr -0C4h
var_C2		= byte ptr -0C2h
var_C0		= byte ptr -0C0h
var_BE		= byte ptr -0BEh
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= byte ptr -36h
var_34		= byte ptr -34h
var_32		= byte ptr -32h
var_30		= byte ptr -30h
var_2E		= byte ptr -2Eh
var_2C		= byte ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= byte ptr -1Eh
var_1C		= byte ptr -1Ch
var_1A		= byte ptr -1Ah
var_18		= word ptr -18h
var_16		= byte ptr -16h
var_14		= byte ptr -14h
var_12		= byte ptr -12h
var_10		= dword	ptr -10h
var_C		= byte ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= byte ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 198h
		push	di
		push	si
		mov	ax, 34B0h
		push	ax
		call	sub_3385C
		add	sp, 2
		mov	[bp+var_2A], ax
		mov	[bp+var_28], dx
		mov	ax, 70CCh
		push	ax
		mov	ax, 3592h
		push	ax
		push	dx
		push	[bp+var_2A]
		call	sub_367B2
		add	sp, 8
		mov	ax, 70BCh
		push	ax
		mov	ax, 35E0h
		push	ax
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_367B2
		add	sp, 8
		mov	ax, 7118h
		push	ax
		mov	ax, 35F2h
		push	ax
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_367B2
		add	sp, 8
		mov	ax, 0Fh
		push	ax
		les	bx, dword_4282C
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	[bp+var_172], ax
		mov	[bp+var_170], dx
		mov	ax, 0Fh
		push	ax
		les	bx, dword_42830
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	[bp+var_16E], ax
		mov	[bp+var_16C], dx
		mov	ax, 0Fh
		push	ax
		les	bx, dword_42834
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	[bp+var_16A], ax
		mov	[bp+var_168], dx
		mov	ax, 0Fh
		push	ax
		les	bx, dword_42838
		push	word ptr es:[bx+2]
		mov	ax, es:[bx]
		imul	word_44AE4
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	[bp+var_166], ax
		mov	[bp+var_164], dx
		mov	ax, 34B8h
		push	ax
		call	sub_289F2
		add	sp, 2
		mov	[bp+var_22], ax
		mov	[bp+var_20], dx
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44D26, ax
		mov	word ptr dword_44D26+2,	dx
		mov	ax, 34BEh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A8C
		add	sp, 6
		mov	word_42540, ax
		mov	word_42542, dx
		mov	ax, 34C3h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_26], ax
		mov	[bp+var_24], dx
		mov	ax, 34C8h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	ax, 34CDh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A8C
		add	sp, 6
		mov	[bp+var_D2], ax
		mov	[bp+var_D0], dx
		mov	[bp+var_D4], 0
		sub	si, si

loc_2A43E:				; CODE XREF: sub_2A2BC+191j
		mov	[bp+si+var_162], 0FFh
		mov	[bp+si+var_BE],	0FFh
		inc	si
		cmp	si, 84h	; 'Ñ'
		jl	short loc_2A43E
		sub	si, si

loc_2A451:				; CODE XREF: sub_2A2BC+24Ej
		mov	ax, si
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_194], ax
		mov	ax, [bp+var_26]
		mov	dx, [bp+var_24]
		add	ax, [bp+var_194]
		mov	word ptr [bp+var_17C], ax
		mov	word ptr [bp+var_17C+2], dx
		les	bx, [bp+var_17C]
		mov	al, es:[bx]
		mov	byte_463E4, al
		mov	al, es:[bx+1]
		mov	byte_463E5, al
		mov	al, es:[bx+2]
		mov	byte_463E6, al
		mov	al, es:[bx+3]
		mov	byte_463E7, al
		mov	ax, 0AC74h
		push	ax
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_30F9D
		add	sp, 6
		mov	bx, [bp+var_194]
		mov	[bx+6AE8h], ax
		mov	[bx+6AEAh], dx
		mov	ax, si
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_196], ax
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		add	ax, [bp+var_196]
		mov	word ptr [bp+var_17C], ax
		mov	word ptr [bp+var_17C+2], dx
		les	bx, [bp+var_17C]
		mov	al, es:[bx]
		mov	byte_463E4, al
		mov	al, es:[bx+1]
		mov	byte_463E5, al
		mov	al, es:[bx+2]
		mov	byte_463E6, al
		mov	al, es:[bx+3]
		mov	byte_463E7, al
		mov	ax, 0AC74h
		push	ax
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_30F9D
		add	sp, 6
		mov	bx, [bp+var_196]
		mov	[bx+6DD4h], ax
		mov	[bx+6DD6h], dx
		inc	si
		cmp	si, 0BAh ; '∫'
		jge	short loc_2A50D
		jmp	loc_2A451
; ---------------------------------------------------------------------------

loc_2A50D:				; CODE XREF: sub_2A2BC+24Cj
		mov	[bp+var_DA], 0FFh
		mov	[bp+var_2C], 0FFh
		mov	[bp+var_32], 1
		mov	[bp+var_184], 1
		mov	[bp+var_A], 1
		mov	[bp+var_36], 0FFh
		mov	[bp+var_188], 1
		mov	[bp+var_C6], 1
		mov	[bp+var_30], 1
		mov	[bp+var_38], 0
		mov	[bp+var_34], 0
		mov	[bp+var_190], 0
		mov	[bp+var_18], 0
		mov	[bp+var_18D], 0
		mov	[bp+var_8], 0
		mov	[bp+var_18C], 0
		mov	[bp+var_C2], 0
		mov	[bp+var_12], 0
		mov	al, byte_45D90
		mov	[bp+var_18E], al
		mov	al, byte_45E16
		mov	[bp+var_180], al
		mov	[bp+var_17F], 7
		call	sub_28F7C
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 16h
		push	ax
		mov	ax, 66h	; 'f'
		push	ax
		mov	ax, 3
		push	ax
		mov	ax, 0D9h ; 'Ÿ'
		push	ax
		mov	ax, 34D2h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		push	word_407F0
		push	word_407EE
		push	word_407EC
		mov	ax, 0BEh ; 'æ'
		push	ax
		mov	ax, 0CEh ; 'Œ'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 5
		push	ax
		call	sub_2916E
		add	sp, 0Eh
		push	word_407F0
		push	word_407EE
		push	word_407EC
		mov	ax, 9Eh	; 'û'
		push	ax
		mov	ax, 66h	; 'f'
		push	ax
		mov	ax, 20h	; ' '
		push	ax
		mov	ax, 0D9h ; 'Ÿ'
		push	ax
		call	sub_2916E
		add	sp, 0Eh
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 0Eh
		push	ax
		mov	ax, 5Eh	; '^'
		push	ax
		mov	ax, 8Ch	; 'å'
		push	ax
		mov	ax, 0DDh ; '›'
		push	ax
		mov	ax, 34D6h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 0Eh
		push	ax
		mov	ax, 2Eh	; '.'
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax
		mov	ax, 0DDh ; '›'
		push	ax
		mov	ax, 34DAh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 0Eh
		push	ax
		mov	ax, 2Eh	; '.'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 0DDh ; '›'
		push	ax
		mov	ax, 34DEh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 0Eh
		push	ax
		mov	ax, 2Eh	; '.'
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax
		mov	ax, 10Dh
		push	ax
		mov	ax, 34E2h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h
		sub	ax, ax
		push	ax
		push	word_407F8
		push	word_407F6
		push	word_407F4
		mov	ax, 0Eh
		push	ax
		mov	ax, 2Eh	; '.'
		push	ax
		mov	ax, 0ACh ; '¨'
		push	ax
		mov	ax, 10Dh
		push	ax
		mov	ax, 34E6h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		call	sub_292DC
		add	sp, 14h

loc_2A720:				; CODE XREF: sub_2A2BC+1088j
					; sub_2A2BC+1097j ...
		cmp	[bp+var_A], 0
		jnz	short loc_2A72F
		mov	al, [bp+var_2C]
		cmp	[bp+var_C6], al
		jz	short loc_2A775

loc_2A72F:				; CODE XREF: sub_2A2BC+468j
		mov	[bp+var_14], 1
		mov	[bp+var_6], 1
		mov	[bp+var_C4], 0
		cmp	[bp+var_C6], 0
		jz	short loc_2A775
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		cmp	ax, 1
		jz	short loc_2A76C
		cmp	ax, 2
		jz	short loc_2A7C0
		cmp	ax, 3
		jz	short loc_2A7CC
		jmp	short loc_2A775
; ---------------------------------------------------------------------------
		align 2

loc_2A76C:				; CODE XREF: sub_2A2BC+4A1j
		mov	[bp+var_6], 2
		mov	[bp+var_C4], 1

loc_2A775:				; CODE XREF: sub_2A2BC+471j
					; sub_2A2BC+485j ...
		cmp	[bp+var_34], 0
		jz	short loc_2A77E
		jmp	loc_2A851
; ---------------------------------------------------------------------------

loc_2A77E:				; CODE XREF: sub_2A2BC+4BDj
		cmp	[bp+var_18E], 1Dh
		jnz	short loc_2A78F
		cmp	[bp+var_14], 2
		jnz	short loc_2A78F
		dec	[bp+var_18E]

loc_2A78F:				; CODE XREF: sub_2A2BC+4C7j
					; sub_2A2BC+4CDj
		cmp	[bp+var_180], 1Dh
		jnz	short loc_2A7A0
		cmp	[bp+var_6], 2
		jnz	short loc_2A7A0
		dec	[bp+var_180]

loc_2A7A0:				; CODE XREF: sub_2A2BC+4D8j
					; sub_2A2BC+4DEj ...
		mov	al, [bp+var_8]
		cbw
		mov	cx, ax
		mov	al, [bp+var_18E]
		cbw
		sub	ax, cx
		mov	cx, ax
		mov	al, [bp+var_14]
		cbw
		add	cx, ax
		cmp	cx, 0Ch
		jle	short loc_2A7DF
		inc	[bp+var_8]
		jmp	short loc_2A7A0
; ---------------------------------------------------------------------------
		align 2

loc_2A7C0:				; CODE XREF: sub_2A2BC+4A6j
		mov	[bp+var_C4], 2
		mov	[bp+var_14], 2
		jmp	short loc_2A775
; ---------------------------------------------------------------------------
		align 2

loc_2A7CC:				; CODE XREF: sub_2A2BC+4ABj
		mov	[bp+var_14], 2
		mov	[bp+var_6], 2
		mov	[bp+var_C4], 3
		jmp	short loc_2A775
; ---------------------------------------------------------------------------
		align 2

loc_2A7DC:				; CODE XREF: sub_2A2BC+530j
		dec	[bp+var_8]

loc_2A7DF:				; CODE XREF: sub_2A2BC+4FCj
		mov	al, [bp+var_8]
		cbw
		mov	cx, ax
		mov	al, [bp+var_18E]
		cbw
		cmp	ax, cx
		jl	short loc_2A7DC
		jmp	short loc_2A7F4
; ---------------------------------------------------------------------------

loc_2A7F0:				; CODE XREF: sub_2A2BC+551j
		inc	[bp+var_18C]

loc_2A7F4:				; CODE XREF: sub_2A2BC+532j
		mov	al, [bp+var_18C]
		cbw
		mov	cx, ax
		mov	al, [bp+var_180]
		cbw
		sub	ax, cx
		mov	cx, ax
		mov	al, [bp+var_6]
		cbw
		add	cx, ax
		cmp	cx, 0Bh
		jg	short loc_2A7F0
		jmp	short loc_2A816
; ---------------------------------------------------------------------------
		align 2

loc_2A812:				; CODE XREF: sub_2A2BC+568j
		dec	[bp+var_18C]

loc_2A816:				; CODE XREF: sub_2A2BC+553j
		mov	al, [bp+var_18C]
		cbw
		mov	cx, ax
		mov	al, [bp+var_180]
		cbw
		cmp	ax, cx
		jl	short loc_2A812
		mov	al, [bp+var_17E]
		cmp	[bp+var_8], al
		jnz	short loc_2A839
		mov	al, [bp+var_D8]
		cmp	[bp+var_18C], al
		jz	short loc_2A851

loc_2A839:				; CODE XREF: sub_2A2BC+571j
		mov	al, [bp+var_8]
		mov	[bp+var_17E], al
		mov	al, [bp+var_18C]
		mov	[bp+var_D8], al
		mov	[bp+var_32], 1
		mov	[bp+var_184], 1

loc_2A851:				; CODE XREF: sub_2A2BC+4BFj
					; sub_2A2BC+57Bj
		mov	al, [bp+var_C6]
		cmp	[bp+var_2C], al
		jnz	short loc_2A85D
		jmp	loc_2A8F4
; ---------------------------------------------------------------------------

loc_2A85D:				; CODE XREF: sub_2A2BC+59Cj
		mov	[bp+var_A], 1
		mov	[bp+var_2C], al
		jmp	short loc_2A878
; ---------------------------------------------------------------------------

loc_2A866:				; CODE XREF: sub_2A2BC+5E9j
		cmp	byte ptr [bp+var_196], 0FFh
		jnz	short loc_2A874
		dec	[bp+var_18D]
		jmp	short loc_2A878
; ---------------------------------------------------------------------------
		align 2

loc_2A874:				; CODE XREF: sub_2A2BC+5AFj
		dec	[bp+var_17F]

loc_2A878:				; CODE XREF: sub_2A2BC+5A8j
					; sub_2A2BC+5B5j
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	byte ptr [bp+var_196], al
		cmp	al, 0FEh ; '˛'
		jnb	short loc_2A866
		call	sub_28F6A
		mov	al, [bp+var_C6]
		cbw
		push	ax
		push	cs
		call	near ptr sub_2BEB6
		add	sp, 2
		cmp	[bp+var_C6], 0
		jnz	short loc_2A8CA
		mov	ax, 1
		push	ax
		push	ax
		sub	ax, ax
		jmp	short loc_2A8D8
; ---------------------------------------------------------------------------
		align 2

loc_2A8CA:				; CODE XREF: sub_2A2BC+602j
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	al, [bp+var_C6]
		cbw
		dec	ax

loc_2A8D8:				; CODE XREF: sub_2A2BC+60Bj
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 85h	; 'Ö'
		push	ax
		mov	ax, 5Fh	; '_'
		push	ax
		mov	ax, 0DDh ; '›'
		push	ax
		sub	ax, ax
		push	ax
		call	sub_28B0E
		add	sp, 10h

loc_2A8F4:				; CODE XREF: sub_2A2BC+59Ej
		cmp	[bp+var_30], 0
		jz	short loc_2A905
		mov	[bp+var_30], 0
		push	cs
		call	near ptr sub_2C81C
		mov	[bp+var_12], al

loc_2A905:				; CODE XREF: sub_2A2BC+63Cj
		cmp	[bp+var_32], 0
		jnz	short loc_2A914
		cmp	[bp+var_A], 0
		jnz	short loc_2A914
		jmp	loc_2AB0E
; ---------------------------------------------------------------------------

loc_2A914:				; CODE XREF: sub_2A2BC+64Dj
					; sub_2A2BC+653j
		call	sub_28F6A
		cmp	[bp+var_32], 0
		jnz	short loc_2A922
		jmp	loc_2A9CD
; ---------------------------------------------------------------------------

loc_2A922:				; CODE XREF: sub_2A2BC+661j
		mov	[bp+var_32], 0
		cmp	[bp+var_184], 0
		jz	short loc_2A983
		mov	[bp+var_184], 0
		mov	ax, 1Eh
		push	ax
		mov	ax, 0Ch
		push	ax
		mov	al, [bp+var_8]
		cbw
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 0B5h ; 'µ'
		push	ax
		mov	ax, 0C0h ; '¿'
		push	ax
		mov	ax, 9
		push	ax
		sub	ax, ax
		push	ax
		call	sub_28B0E
		add	sp, 10h
		mov	ax, 1Eh
		push	ax
		mov	ax, 0Bh
		push	ax
		mov	al, [bp+var_18C]
		cbw
		push	ax
		mov	ax, 0B0h ; '∞'
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 0CAh ; ' '
		push	ax
		sub	ax, ax
		push	ax
		call	sub_28B0E
		add	sp, 10h

loc_2A983:				; CODE XREF: sub_2A2BC+66Fj
		mov	ax, 0B3h ; '≥'
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 8
		push	ax
		call	sub_3327F
		add	sp, 8
		lea	ax, [bp+var_BE]
		push	ax
		lea	ax, [bp+var_162]
		push	ax
		mov	al, [bp+var_18C]
		cbw
		push	ax
		mov	al, [bp+var_8]
		cbw
		push	ax
		push	cs
		call	near ptr sub_2C0A8
		add	sp, 8
		mov	ax, 0C8h ; '»'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8

loc_2A9CD:				; CODE XREF: sub_2A2BC+663j
		cmp	[bp+var_A], 0
		jnz	short loc_2A9D6
		jmp	loc_2AAF0
; ---------------------------------------------------------------------------

loc_2A9D6:				; CODE XREF: sub_2A2BC+715j
		mov	[bp+var_A], 0
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		push	word ptr [bx-170h]
		push	word ptr [bx-172h]
		call	sub_35AF6
		add	sp, 4
		cmp	[bp+var_C6], 0
		jz	short loc_2AA01
		jmp	loc_2AA8E
; ---------------------------------------------------------------------------

loc_2AA01:				; CODE XREF: sub_2A2BC+740j
		sub	ax, ax
		push	ax
		push	ax
		mov	bl, [bp+var_190]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33D30
		add	sp, 8
		push	word_40800
		sub	ax, ax
		push	ax
		mov	ax, 0Fh
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	word_40800
		mov	ax, 0Eh
		push	ax
		mov	ax, 0Fh
		push	ax
		mov	ax, 0Eh
		push	ax
		mov	ax, 1
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	word_40800
		mov	ax, 0Eh
		push	ax
		mov	ax, 1
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		push	word_40800
		mov	ax, 0Eh
		push	ax
		mov	ax, 0Fh
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 0Fh
		push	ax
		call	sub_2FDDE
		add	sp, 0Ah
		jmp	short loc_2AAF0
; ---------------------------------------------------------------------------
		align 2

loc_2AA8E:				; CODE XREF: sub_2A2BC+742j
		sub	ax, ax
		push	ax
		push	ax
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70BEh]
		push	word ptr [bx+70BCh]
		call	sub_33D30
		add	sp, 8
		cmp	[bp+var_190], 0
		jz	short loc_2AAF0
		sub	ax, ax
		push	ax
		push	ax
		mov	bl, [bp+var_190]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33A1E
		add	sp, 8
		sub	ax, ax
		push	ax
		push	ax
		mov	bl, [bp+var_190]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6AEAh]
		push	word ptr [bx+6AE8h]
		call	sub_34212
		add	sp, 8

loc_2AAF0:				; CODE XREF: sub_2A2BC+717j
					; sub_2A2BC+7CFj ...
		mov	al, [bp+var_36]
		cbw
		push	ax
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_29620
		add	sp, 6
		mov	[bp+var_36], 0FEh ; '˛'
		mov	[bp+var_C2], 0FFh

loc_2AB0E:				; CODE XREF: sub_2A2BC+655j
		call	sub_28F3C
		cmp	[bp+var_34], 0
		jz	short loc_2AB1C
		jmp	loc_2ABEA
; ---------------------------------------------------------------------------

loc_2AB1C:				; CODE XREF: sub_2A2BC+85Bj
		mov	al, [bp+var_14]
		mov	cl, 4
		shl	al, cl
		mov	[bp+var_2E], al
		mov	al, [bp+var_6]
		shl	al, cl
		mov	[bp+var_1A], al
		mov	al, [bp+var_18E]
		cbw
		mov	[bp+var_196], ax
		mov	al, [bp+var_8]
		cbw
		mov	dx, [bp+var_196]
		sub	dx, ax
		shl	dx, cl
		add	dx, 8
		mov	[bp+var_CA], dx
		mov	al, [bp+var_180]
		cbw
		mov	[bp+var_194], ax
		mov	al, [bp+var_18C]
		cbw
		mov	dx, [bp+var_194]
		sub	dx, ax
		shl	dx, cl
		add	dx, 4
		mov	[bp+var_DC], dx
		mov	bx, [bp+var_194]
		shl	bx, 1
		mov	bx, [bx-5A30h]
		add	bx, [bp+var_196]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_182], al
		sub	ah, ah
		cmp	ax, 0FDh ; '˝'
		jz	short loc_2AB98
		cmp	ax, 0FEh ; '˛'
		jz	short loc_2ABBC
		cmp	ax, 0FFh
		jz	short loc_2ABDA
		jmp	loc_2AD2B
; ---------------------------------------------------------------------------

loc_2AB98:				; CODE XREF: sub_2A2BC+8CDj
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A32h]

loc_2ABA5:				; CODE XREF: sub_2A2BC+92Bj
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	al, es:[bx-1]

loc_2ABB4:				; CODE XREF: sub_2A2BC+91Bj
		mov	[bp+var_182], al
		jmp	loc_2AD2B
; ---------------------------------------------------------------------------
		align 2

loc_2ABBC:				; CODE XREF: sub_2A2BC+8D2j
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A32h]
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	al, es:[bx]
		jmp	short loc_2ABB4
; ---------------------------------------------------------------------------
		align 2

loc_2ABDA:				; CODE XREF: sub_2A2BC+8D7j
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		jmp	short loc_2ABA5
; ---------------------------------------------------------------------------
		align 2

loc_2ABEA:				; CODE XREF: sub_2A2BC+85Dj
		mov	[bp+var_2E], 10h
		mov	[bp+var_1A], 10h
		mov	al, [bp+var_17F]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		mov	[bp+var_DC], ax
		cmp	[bp+var_17F], 6
		jnz	short loc_2AC1A
		mov	[bp+var_CA], 0DCh ; '‹'
		mov	[bp+var_1A], 8
		mov	[bp+var_2E], 60h ; '`'
		jmp	loc_2AD1F
; ---------------------------------------------------------------------------

loc_2AC1A:				; CODE XREF: sub_2A2BC+94Bj
		cmp	[bp+var_17F], 7
		jnz	short loc_2AC38
		sub	[bp+var_DC], 8
		mov	[bp+var_18D], 0
		mov	[bp+var_CA], 0DCh ; '‹'
		mov	[bp+var_2E], 60h ; '`'
		jmp	loc_2AD1A
; ---------------------------------------------------------------------------

loc_2AC38:				; CODE XREF: sub_2A2BC+963j
		cmp	[bp+var_17F], 7
		jle	short loc_2AC6E
		sub	[bp+var_DC], 8
		cmp	[bp+var_18D], 3
		jge	short loc_2AC52
		mov	[bp+var_18D], 0
		jmp	short loc_2AC57
; ---------------------------------------------------------------------------

loc_2AC52:				; CODE XREF: sub_2A2BC+98Dj
		mov	[bp+var_18D], 3

loc_2AC57:				; CODE XREF: sub_2A2BC+994j
		mov	al, [bp+var_18D]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		mov	[bp+var_CA], ax
		mov	[bp+var_2E], 30h ; '0'
		jmp	loc_2AD1A
; ---------------------------------------------------------------------------

loc_2AC6E:				; CODE XREF: sub_2A2BC+981j
		mov	al, [bp+var_18D]
		cbw
		mov	[bp+var_196], ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		mov	[bp+var_CA], ax
		cmp	[bp+var_17F], 5
		jge	short loc_2ACB5
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		add	bx, [bp+var_196]
		add	bx, word_42540
		mov	es, word_42542
		cmp	byte ptr es:[bx+6], 0FEh ; '˛'
		jnz	short loc_2ACB5
		mov	[bp+var_1A], 20h ; ' '

loc_2ACB5:				; CODE XREF: sub_2A2BC+9CBj
					; sub_2A2BC+9F3j
		cmp	[bp+var_18D], 5
		jge	short loc_2ACEB
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		cmp	byte ptr es:[bx+1], 0FFh
		jnz	short loc_2ACEB
		mov	[bp+var_2E], 20h ; ' '

loc_2ACEB:				; CODE XREF: sub_2A2BC+9FEj
					; sub_2A2BC+A29j
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	[bp+var_182], al
		cmp	al, 0FDh ; '˝'
		jb	short loc_2AD1F

loc_2AD1A:				; CODE XREF: sub_2A2BC+979j
					; sub_2A2BC+9AFj
		mov	[bp+var_182], 0

loc_2AD1F:				; CODE XREF: sub_2A2BC+95Bj
					; sub_2A2BC+A5Cj
		cmp	[bp+var_C6], 0
		jnz	short loc_2AD2B
		mov	[bp+var_182], 0

loc_2AD2B:				; CODE XREF: sub_2A2BC+8D9j
					; sub_2A2BC+8FCj ...
		mov	al, [bp+var_C2]
		cmp	[bp+var_182], al
		jnz	short loc_2AD38
		jmp	loc_2ADF4
; ---------------------------------------------------------------------------

loc_2AD38:				; CODE XREF: sub_2A2BC+A77j
		call	sub_28DB6
		sub	ax, ax
		push	ax
		push	word_407CA
		call	sub_34B0C
		add	sp, 4
		mov	al, [bp+var_182]
		sub	ah, ah
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	ax, [bp+var_D2]
		mov	dx, [bp+var_D0]
		mov	word ptr [bp+var_17C], ax
		mov	word ptr [bp+var_17C+2], dx
		les	bx, [bp+var_17C]
		mov	al, es:[bx]
		mov	byte_463E4, al
		mov	al, es:[bx+1]
		mov	byte_463E5, al
		mov	al, es:[bx+2]
		mov	byte_463E6, al
		mov	ax, 0AC74h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_28AD6
		add	sp, 6
		mov	ax, 0AC74h
		push	ax
		call	sub_32843
		add	sp, 2
		mov	si, ax
		mov	ax, 0C0h ; '¿'
		push	ax
		mov	ax, 8
		push	ax
		mov	ax, 0AC74h
		push	ax
		call	sub_345BC
		add	sp, 6
		cmp	[bp+var_38], si
		jle	short loc_2ADE4
		sub	ax, ax
		push	ax
		mov	ax, 8
		push	ax
		mov	ax, [bp+var_38]
		sub	ax, si
		push	ax
		mov	ax, 0C0h ; '¿'
		push	ax
		lea	ax, [si+8]
		push	ax
		call	sub_335D2
		add	sp, 0Ah

loc_2ADE4:				; CODE XREF: sub_2A2BC+B09j
		call	sub_28D9E
		mov	[bp+var_38], si
		mov	al, [bp+var_182]
		mov	[bp+var_C2], al

loc_2ADF4:				; CODE XREF: sub_2A2BC+A79j
		cmp	[bp+var_12], 0
		jz	short loc_2AE36
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	al, [bp+var_12]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	ax, 351Ah
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_12], 0

loc_2AE36:				; CODE XREF: sub_2A2BC+B3Cj
		mov	[bp+var_3A], 63h ; 'c'
		mov	[bp+var_CC], 0
		call	sub_28DB6
		mov	al, [bp+var_34]
		mov	[bp+var_16], al
		or	al, al
		jnz	short loc_2AE73
		push	[bp+var_DC]
		push	[bp+var_CA]
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+711Ah]
		push	word ptr [bx+7118h]
		call	sub_3475A
		add	sp, 8

loc_2AE73:				; CODE XREF: sub_2A2BC+B92j
					; sub_2A2BC+D26j
		cmp	[bp+var_3A], 0Fh
		jg	short loc_2AE7C
		jmp	loc_2AF0E
; ---------------------------------------------------------------------------

loc_2AE7C:				; CODE XREF: sub_2A2BC+BBBj
		call	sub_28DB6
		cmp	[bp+var_34], 0
		jnz	short loc_2AED6
		cmp	[bp+var_CC], 0
		jz	short loc_2AEB4
		push	[bp+var_DC]
		push	[bp+var_CA]
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+711Ah]
		push	word ptr [bx+7118h]

loc_2AEA9:				; CODE XREF: sub_2A2BC+C18j
		call	sub_33D30
		add	sp, 8
		jmp	short loc_2AEFF
; ---------------------------------------------------------------------------
		align 2

loc_2AEB4:				; CODE XREF: sub_2A2BC+BD0j
		push	[bp+var_DC]
		push	[bp+var_CA]
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		les	bx, [bx-172h]
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		jmp	short loc_2AEA9
; ---------------------------------------------------------------------------

loc_2AED6:				; CODE XREF: sub_2A2BC+BC9j
		push	word_407F2
		mov	al, [bp+var_1A]
		cbw
		add	ax, [bp+var_DC]
		dec	ax
		push	ax
		mov	al, [bp+var_2E]
		cbw
		add	ax, [bp+var_CA]
		push	ax
		mov	ax, [bp+var_DC]
		dec	ax
		push	ax
		push	[bp+var_CA]
		call	sub_3702E
		add	sp, 0Ah

loc_2AEFF:				; CODE XREF: sub_2A2BC+BF5j
		call	sub_28D9E
		xor	byte ptr [bp+var_CC], 1
		mov	[bp+var_3A], 0

loc_2AF0E:				; CODE XREF: sub_2A2BC+BBDj
		call	sub_2A230
		mov	di, ax
		add	[bp+var_3A], di
		push	di
		call	sub_287C4
		add	sp, 2
		mov	[bp+var_C8], ax
		mov	ax, 3584h
		push	ax
		mov	ax, 357Ah
		push	ax
		mov	ax, 3570h
		push	ax
		mov	ax, 3566h
		push	ax
		mov	ax, 5
		push	ax
		call	sub_28E90
		add	sp, 0Ah
		mov	[bp+var_18A], al
		cmp	al, 0FFh
		jz	short loc_2AFC8
		cbw
		or	ax, ax
		jz	short loc_2AF70
		cmp	ax, 1
		jnz	short loc_2AF56
		jmp	loc_2B038
; ---------------------------------------------------------------------------

loc_2AF56:				; CODE XREF: sub_2A2BC+C95j
		cmp	ax, 2
		jnz	short loc_2AF5E
		jmp	loc_2B088
; ---------------------------------------------------------------------------

loc_2AF5E:				; CODE XREF: sub_2A2BC+C9Dj
		cmp	ax, 3
		jnz	short loc_2AF66
		jmp	loc_2B0E2
; ---------------------------------------------------------------------------

loc_2AF66:				; CODE XREF: sub_2A2BC+CA5j
		cmp	ax, 4
		jnz	short loc_2AF6E
		jmp	loc_2B1B0
; ---------------------------------------------------------------------------

loc_2AF6E:				; CODE XREF: sub_2A2BC+CADj
		jmp	short loc_2AFBC
; ---------------------------------------------------------------------------

loc_2AF70:				; CODE XREF: sub_2A2BC+C90j
		test	byte ptr word_442E8, 3
		jz	short loc_2AFBC
		mov	[bp+var_34], 0
		mov	ax, 1Eh
		push	ax
		mov	ax, 0Ch
		push	ax
		mov	al, [bp+var_8]
		cbw
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 0B5h ; 'µ'
		push	ax
		mov	ax, 0C0h ; '¿'
		push	ax
		mov	ax, 9
		push	ax
		mov	ax, 1
		push	ax
		call	sub_28B0E
		add	sp, 10h
		mov	[bp+var_186], al
		sub	al, [bp+var_8]
		add	[bp+var_18E], al
		mov	al, [bp+var_186]
		mov	[bp+var_8], al

loc_2AFB6:				; CODE XREF: sub_2A2BC+DC8j
					; sub_2A2BC+E23j
		mov	[bp+var_C8], 1

loc_2AFBC:				; CODE XREF: sub_2A2BC:loc_2AF6Ej
					; sub_2A2BC+CB9j ...
		cmp	[bp+var_C8], 1
		jnz	short loc_2AFC8
		mov	[bp+var_DA], 0FFh

loc_2AFC8:				; CODE XREF: sub_2A2BC+C8Bj
					; sub_2A2BC+D05j
		cmp	[bp+var_C8], 0
		jnz	short loc_2AFDB
		cmp	[bp+var_18], 0
		jz	short loc_2AFDB
		mov	[bp+var_C8], 1

loc_2AFDB:				; CODE XREF: sub_2A2BC+D11j
					; sub_2A2BC+D17j
		cmp	[bp+var_C8], 0
		jnz	short loc_2AFE5
		jmp	loc_2AE73
; ---------------------------------------------------------------------------

loc_2AFE5:				; CODE XREF: sub_2A2BC+D24j
		cmp	[bp+var_18], 0
		jz	short loc_2AFF9
		mov	ax, 0Ah
		cwd
		push	dx
		push	ax
		call	sub_32805
		add	sp, 4

loc_2AFF9:				; CODE XREF: sub_2A2BC+D2Dj
		cmp	[bp+var_CC], 0
		jnz	short loc_2B003
		jmp	loc_2B2D4
; ---------------------------------------------------------------------------

loc_2B003:				; CODE XREF: sub_2A2BC+D42j
		call	sub_28DB6
		cmp	[bp+var_16], 0
		jz	short loc_2B011
		jmp	loc_2B2A6
; ---------------------------------------------------------------------------

loc_2B011:				; CODE XREF: sub_2A2BC+D50j
		push	[bp+var_DC]
		push	[bp+var_CA]
		mov	al, [bp+var_C4]
		cbw
		mov	bx, ax
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+711Ah]
		push	word ptr [bx+7118h]
		call	sub_33D30
		add	sp, 8
		jmp	loc_2B2CF
; ---------------------------------------------------------------------------
		align 2

loc_2B038:				; CODE XREF: sub_2A2BC+C97j
		test	byte ptr word_442E8, 3
		jnz	short loc_2B042
		jmp	loc_2AFBC
; ---------------------------------------------------------------------------

loc_2B042:				; CODE XREF: sub_2A2BC+D81j
		mov	[bp+var_34], 0
		mov	ax, 1Eh
		push	ax
		mov	ax, 0Bh
		push	ax
		mov	al, [bp+var_18C]
		cbw
		push	ax
		mov	ax, 0B0h ; '∞'
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 0CAh ; ' '
		push	ax
		mov	ax, 1
		push	ax
		call	sub_28B0E
		add	sp, 10h
		mov	[bp+var_186], al
		sub	al, [bp+var_18C]
		add	[bp+var_180], al
		mov	al, [bp+var_186]
		mov	[bp+var_18C], al
		jmp	loc_2AFB6
; ---------------------------------------------------------------------------
		align 2

loc_2B088:				; CODE XREF: sub_2A2BC+C9Fj
		cmp	[bp+var_34], 1
		jnz	short loc_2B095
		cmp	[bp+var_17F], 6
		jz	short loc_2B0A4

loc_2B095:				; CODE XREF: sub_2A2BC+DD0j
		mov	[bp+var_34], 1
		mov	[bp+var_17F], 6
		mov	[bp+var_C8], 1

loc_2B0A4:				; CODE XREF: sub_2A2BC+DD7j
		test	byte ptr word_442E8, 3
		jnz	short loc_2B0AE
		jmp	loc_2AFBC
; ---------------------------------------------------------------------------

loc_2B0AE:				; CODE XREF: sub_2A2BC+DEDj
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	al, [bp+var_C6]
		cbw
		dec	ax
		push	ax
		mov	ax, 5
		push	ax
		mov	ax, 85h	; 'Ö'
		push	ax
		mov	ax, 5Fh	; '_'
		push	ax
		mov	ax, 0DDh ; '›'
		push	ax
		mov	ax, 1
		push	ax
		call	sub_28B0E
		add	sp, 10h
		inc	al
		mov	[bp+var_C6], al
		jmp	loc_2AFB6
; ---------------------------------------------------------------------------

loc_2B0E2:				; CODE XREF: sub_2A2BC+CA7j
		mov	ax, word_4616C
		sub	ax, 8
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	cx, 4
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_D6], al
		mov	ax, word_461CE
		sub	ax, cx
		cwd
		xor	ax, dx
		sub	ax, dx
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_174], al
		cmp	[bp+var_C6], 0
		jz	short loc_2B15A
		cmp	al, 0Ah
		jnz	short loc_2B136
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_2B136
		dec	[bp+var_174]

loc_2B136:				; CODE XREF: sub_2A2BC+E5Bj
					; sub_2A2BC+E74j
		cmp	[bp+var_D6], 0Bh
		jnz	short loc_2B15A
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_2B15A
		dec	[bp+var_D6]

loc_2B15A:				; CODE XREF: sub_2A2BC+E57j
					; sub_2A2BC+E7Fj ...
		mov	al, [bp+var_8]
		add	[bp+var_D6], al
		mov	al, [bp+var_18C]
		add	[bp+var_174], al
		cmp	[bp+var_34], 0
		jnz	short loc_2B183
		mov	al, [bp+var_D6]
		cmp	[bp+var_18E], al
		jnz	short loc_2B183
		mov	al, [bp+var_174]
		cmp	[bp+var_180], al
		jz	short loc_2B19D

loc_2B183:				; CODE XREF: sub_2A2BC+EB1j
					; sub_2A2BC+EBBj
		mov	[bp+var_34], 0
		mov	al, [bp+var_D6]
		mov	[bp+var_18E], al
		mov	al, [bp+var_174]
		mov	[bp+var_180], al

loc_2B197:				; CODE XREF: sub_2A2BC+FB5j
		mov	[bp+var_C8], 1

loc_2B19D:				; CODE XREF: sub_2A2BC+EC5j
					; sub_2A2BC+F9Ej
		cmp	[bp+var_C8], 20h ; ' '
		jz	short loc_2B1A7
		jmp	loc_2AFBC
; ---------------------------------------------------------------------------

loc_2B1A7:				; CODE XREF: sub_2A2BC+EE6j
		mov	[bp+var_C8], 0Dh
		jmp	loc_2AFBC
; ---------------------------------------------------------------------------

loc_2B1B0:				; CODE XREF: sub_2A2BC+CAFj
		mov	ax, word_4616C
		sub	ax, 0DCh ; '‹'
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	cx, 4
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_D6], al
		mov	ax, word_461CE
		sub	ax, 24h	; '$'
		cwd
		xor	ax, dx
		sub	ax, dx
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_174], al
		cmp	al, 6
		jl	short loc_2B1E4
		jmp	loc_2B274
; ---------------------------------------------------------------------------

loc_2B1E4:				; CODE XREF: sub_2A2BC+F23j
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	cx, ax
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		mov	bx, ax
		add	bx, cx
		mov	al, [bp+var_D6]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		cmp	byte ptr es:[bx], 0FEh ; '˛'
		jnz	short loc_2B212
		dec	[bp+var_174]

loc_2B212:				; CODE XREF: sub_2A2BC+F50j
		mov	al, [bp+var_174]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	cx, ax
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		mov	bx, ax
		add	bx, cx
		mov	al, [bp+var_D6]
		cbw
		add	bx, ax
		add	bx, word_42540
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_2B240
		dec	[bp+var_D6]

loc_2B240:				; CODE XREF: sub_2A2BC+F7Ej
					; sub_2A2BC+FD9j ...
		cmp	[bp+var_34], 0
		jz	short loc_2B25D
		mov	al, [bp+var_D6]
		cmp	[bp+var_18D], al
		jnz	short loc_2B25D
		mov	al, [bp+var_174]
		cmp	[bp+var_17F], al
		jnz	short loc_2B25D
		jmp	loc_2B19D
; ---------------------------------------------------------------------------

loc_2B25D:				; CODE XREF: sub_2A2BC+F88j
					; sub_2A2BC+F92j ...
		mov	al, [bp+var_D6]
		mov	[bp+var_18D], al
		mov	al, [bp+var_174]
		mov	[bp+var_17F], al
		mov	[bp+var_34], 1
		jmp	loc_2B197
; ---------------------------------------------------------------------------

loc_2B274:				; CODE XREF: sub_2A2BC+F25j
		mov	ax, word_461CE
		sub	ax, 1Ch
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	cx, 4
		sar	ax, cl
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_174], al
		cmp	al, 7
		jnz	short loc_2B298

loc_2B290:				; CODE XREF: sub_2A2BC+FE1j
		mov	[bp+var_D6], 0
		jmp	short loc_2B240
; ---------------------------------------------------------------------------
		align 2

loc_2B298:				; CODE XREF: sub_2A2BC+FD2j
		cmp	[bp+var_D6], 3
		jl	short loc_2B290
		mov	[bp+var_D6], 3
		jmp	short loc_2B240
; ---------------------------------------------------------------------------

loc_2B2A6:				; CODE XREF: sub_2A2BC+D52j
		push	word_407F2
		mov	al, [bp+var_1A]
		cbw
		add	ax, [bp+var_DC]
		dec	ax
		push	ax
		mov	al, [bp+var_2E]
		cbw
		add	ax, [bp+var_CA]
		push	ax
		mov	ax, [bp+var_DC]
		dec	ax
		push	ax
		push	[bp+var_CA]
		call	sub_3702E
		add	sp, 0Ah

loc_2B2CF:				; CODE XREF: sub_2A2BC+D78j
		call	sub_28D9E

loc_2B2D4:				; CODE XREF: sub_2A2BC+D44j
		cmp	[bp+var_18], 0
		jz	short loc_2B356
		cmp	[bp+var_C8], 1
		jnz	short loc_2B2E7
		cmp	[bp+var_34], 0
		jz	short loc_2B2EE

loc_2B2E7:				; CODE XREF: sub_2A2BC+1023j
		mov	ax, word_45DD0
		dec	ax
		mov	[bp+var_18], ax

loc_2B2EE:				; CODE XREF: sub_2A2BC+1029j
		mov	bx, [bp+var_18]
		add	bx, word ptr dword_4563C
		mov	es, word ptr dword_4563C+2
		mov	al, es:[bx]
		mov	[bp+var_18E], al
		mov	bx, [bp+var_18]
		add	bx, word ptr dword_459DA
		mov	es, word ptr dword_459DA+2
		mov	al, es:[bx]
		mov	[bp+var_180], al
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_190], al
		mov	[bp+var_32], 1
		mov	[bp+var_A], 1
		inc	[bp+var_18]
		mov	ax, word_45DD0
		cmp	[bp+var_18], ax
		jge	short loc_2B347
		jmp	loc_2A720
; ---------------------------------------------------------------------------

loc_2B347:				; CODE XREF: sub_2A2BC+1086j
		mov	al, [bp+var_1E]
		mov	[bp+var_190], al
		mov	[bp+var_18], 0
		jmp	loc_2A720
; ---------------------------------------------------------------------------

loc_2B356:				; CODE XREF: sub_2A2BC+101Cj
		mov	[bp+var_18], 0
		sub	si, si
		jmp	short loc_2B361
; ---------------------------------------------------------------------------
		align 2

loc_2B360:				; CODE XREF: sub_2A2BC+10B6j
		inc	si

loc_2B361:				; CODE XREF: sub_2A2BC+10A1j
		cmp	si, 0Ah
		jge	short loc_2B382
		mov	bx, si
		shl	bx, 1
		mov	ax, [bp+var_C8]
		cmp	[bx+354Eh], ax
		jnz	short loc_2B360
		mov	ax, si
		inc	al
		mov	[bp+var_C6], al
		mov	[bp+var_C8], 0

loc_2B382:				; CODE XREF: sub_2A2BC+10A8j
		mov	ax, [bp+var_C8]
		cmp	ax, 63h	; 'c'
		jz	short loc_2B3EA
		jbe	short loc_2B390
		jmp	loc_2BDFE
; ---------------------------------------------------------------------------

loc_2B390:				; CODE XREF: sub_2A2BC+10CFj
		cmp	ax, 0Dh
		jnz	short loc_2B398
		jmp	loc_2B49A
; ---------------------------------------------------------------------------

loc_2B398:				; CODE XREF: sub_2A2BC+10D7j
		cmp	ax, 20h	; ' '
		jz	short loc_2B3B0
		cmp	ax, 2Bh	; '+'
		jz	short loc_2B3CA
		cmp	ax, 2Dh	; '-'
		jz	short loc_2B3B8
		cmp	ax, 43h	; 'C'
		jz	short loc_2B3EA
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B3B0:				; CODE XREF: sub_2A2BC+10DFj
					; sub_2A2BC+1B73j
		xor	[bp+var_34], 1
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B3B8:				; CODE XREF: sub_2A2BC+10E9j
					; sub_2A2BC+19DBj
		cmp	[bp+var_C6], 1
		jg	short loc_2B3C2
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2B3C2:				; CODE XREF: sub_2A2BC+1101j
		dec	[bp+var_C6]
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B3CA:				; CODE XREF: sub_2A2BC+10E4j
					; sub_2A2BC+1A71j
		cmp	[bp+var_C6], 0Ah
		jl	short loc_2B3D4
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2B3D4:				; CODE XREF: sub_2A2BC+1113j
		inc	[bp+var_C6]
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B3DC:				; CODE XREF: sub_2A2BC+1B7Bj
		mov	[bp+var_C6], 0
		mov	[bp+var_190], 0
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B3EA:				; CODE XREF: sub_2A2BC+10CDj
					; sub_2A2BC+10EEj
		call	sub_206D4
		cbw
		mov	si, ax
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, si
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		add	ax, 351Ah
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		call	sub_27686
		add	sp, 12h
		cmp	si, 1
		jle	short loc_2B491
		mov	[bp+var_34], 0
		cmp	word_45DD0, 0
		jnz	short loc_2B448
		mov	al, byte_45D90
		mov	[bp+var_18E], al
		mov	al, byte_45E16
		mov	[bp+var_180], al
		jmp	short loc_2B491
; ---------------------------------------------------------------------------

loc_2B448:				; CODE XREF: sub_2A2BC+117Aj
		les	bx, dword_4563C
		mov	al, es:[bx]
		mov	[bp+var_18E], al
		les	bx, dword_459DA
		mov	al, es:[bx]
		mov	[bp+var_180], al
		mov	al, [bp+var_190]
		mov	[bp+var_1E], al
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_190], al
		mov	[bp+var_18], 1
		mov	[bp+var_A], 1

loc_2B491:				; CODE XREF: sub_2A2BC+116Fj
					; sub_2A2BC+118Aj ...
		call	sub_28EE4
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2B49A:				; CODE XREF: sub_2A2BC+10D9j
		cmp	[bp+var_34], 0
		jnz	short loc_2B4A3
		jmp	loc_2B8EE
; ---------------------------------------------------------------------------

loc_2B4A3:				; CODE XREF: sub_2A2BC+11E2j
		cmp	[bp+var_17F], 6
		jl	short loc_2B4AD
		jmp	loc_2B544
; ---------------------------------------------------------------------------

loc_2B4AD:				; CODE XREF: sub_2A2BC+11ECj
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	[bp+var_190], al
		cmp	[bp+var_C6], 0
		jz	short loc_2B53A
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_2B50B
		mov	al, [bp+var_18C]
		cbw
		mov	cx, ax
		mov	al, [bp+var_180]
		cbw
		sub	ax, cx
		cmp	ax, 0Ah
		jnz	short loc_2B50B
		dec	[bp+var_180]

loc_2B50B:				; CODE XREF: sub_2A2BC+1236j
					; sub_2A2BC+1249j
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_2B53A
		mov	al, [bp+var_8]
		cbw
		mov	cx, ax
		mov	al, [bp+var_18E]
		cbw
		sub	ax, cx
		cmp	ax, 0Bh
		jnz	short loc_2B53A
		dec	[bp+var_18E]

loc_2B53A:				; CODE XREF: sub_2A2BC+1221j
					; sub_2A2BC+1266j ...
		inc	[bp+var_A]
		mov	[bp+var_34], 0
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B544:				; CODE XREF: sub_2A2BC+11EEj
		mov	[bp+var_30], 1
		cmp	[bp+var_17F], 6
		jnz	short loc_2B566
		inc	[bp+var_C6]
		cmp	[bp+var_C6], 0Ah
		jg	short loc_2B55D
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B55D:				; CODE XREF: sub_2A2BC+129Cj
		mov	[bp+var_C6], 1
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2B566:				; CODE XREF: sub_2A2BC+1291j
		cmp	[bp+var_17F], 7
		jnz	short loc_2B5C6
		les	bx, dword_44D42
		mov	al, es:[bx+384h]
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 34EAh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_C], al
		cmp	al, 0FFh
		jnz	short loc_2B5B3
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B5B3:				; CODE XREF: sub_2A2BC+12F2j
		cmp	al, 5
		jnz	short loc_2B5BA
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B5BA:				; CODE XREF: sub_2A2BC+12F9j
		les	bx, dword_44D42
		mov	es:[bx+384h], al
		jmp	loc_2B668
; ---------------------------------------------------------------------------

loc_2B5C6:				; CODE XREF: sub_2A2BC+12AFj
		cmp	[bp+var_17F], 8
		jz	short loc_2B5D0
		jmp	loc_2B674
; ---------------------------------------------------------------------------

loc_2B5D0:				; CODE XREF: sub_2A2BC+130Fj
		cmp	[bp+var_18D], 0
		jnz	short loc_2B5DA
		jmp	loc_2B674
; ---------------------------------------------------------------------------

loc_2B5DA:				; CODE XREF: sub_2A2BC+1319j
		sub	ax, ax
		push	ax
		push	ax
		push	word_40802
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 34EEh
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_C], al
		cmp	al, 0FFh
		jnz	short loc_2B615
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B615:				; CODE XREF: sub_2A2BC+1354j
		cmp	al, 5
		jnz	short loc_2B61C
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B61C:				; CODE XREF: sub_2A2BC+135Bj
		sub	si, si

loc_2B61E:				; CODE XREF: sub_2A2BC+136Fj
		les	bx, dword_44D42
		mov	byte ptr es:[bx+si], 0
		inc	si
		cmp	si, 384h
		jl	short loc_2B61E
		mov	al, [bp+var_C]
		add	al, 30h	; '0'
		mov	byte_3ECBB, al
		mov	ax, 3548h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A8C
		add	sp, 6
		mov	word ptr [bp+var_10], ax
		mov	word ptr [bp+var_10+2],	dx
		sub	si, si

loc_2B64F:				; CODE XREF: sub_2A2BC+13A5j
		les	bx, [bp+var_10]
		mov	al, es:[bx+si]
		les	bx, dword_454BC
		mov	es:[bx+si], al
		inc	si
		cmp	si, 385h
		jl	short loc_2B64F
		mov	byte_449B1, 0

loc_2B668:				; CODE XREF: sub_2A2BC+1307j
		inc	[bp+var_32]
		mov	[bp+var_D4], 1
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2B674:				; CODE XREF: sub_2A2BC+1311j
					; sub_2A2BC+131Bj
		cmp	[bp+var_17F], 8
		jz	short loc_2B67E
		jmp	loc_2B75C
; ---------------------------------------------------------------------------

loc_2B67E:				; CODE XREF: sub_2A2BC+13BDj
		cmp	[bp+var_18D], 0
		jz	short loc_2B688
		jmp	loc_2B75C
; ---------------------------------------------------------------------------

loc_2B688:				; CODE XREF: sub_2A2BC+13C7j
		call	sub_28F3C
		cmp	[bp+var_D4], 0
		jz	short loc_2B6CE
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 34F2h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		or	si, si
		jnz	short loc_2B6CE
		jmp	loc_2B766
; ---------------------------------------------------------------------------

loc_2B6CE:				; CODE XREF: sub_2A2BC+13D6j
					; sub_2A2BC+140Dj
		mov	si, 1
		mov	byte_3B8FB, 1
		inc	[bp+var_32]
		mov	ax, 34F6h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 34FAh
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_27ED4
		add	sp, 0Ah
		cbw
		mov	si, ax
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 34FFh
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		or	si, si
		jg	short loc_2B725
		jmp	loc_2B89B
; ---------------------------------------------------------------------------

loc_2B725:				; CODE XREF: sub_2A2BC+1464j
		push	word ptr dword_44D42+2
		push	word ptr dword_44D42
		mov	ax, 95F8h
		push	ax
		call	sub_30AEF
		add	sp, 6
		call	sub_206D4
		mov	[bp+var_34], 0
		mov	al, byte_45E16
		mov	[bp+var_180], al
		mov	al, byte_45D90
		mov	[bp+var_18E], al
		mov	[bp+var_D4], 0
		inc	[bp+var_32]
		jmp	loc_2B89B
; ---------------------------------------------------------------------------
		align 2

loc_2B75C:				; CODE XREF: sub_2A2BC+13BFj
					; sub_2A2BC+13C9j
		cmp	[bp+var_18D], 0
		jz	short loc_2B766
		jmp	loc_2B8A4
; ---------------------------------------------------------------------------

loc_2B766:				; CODE XREF: sub_2A2BC+140Fj
					; sub_2A2BC+14A5j ...
		mov	[bp+var_176], 0
		mov	byte_3B8FB, 1
		jmp	loc_2B891
; ---------------------------------------------------------------------------
		align 2

loc_2B774:				; CODE XREF: sub_2A2BC+15DCj
		call	sub_28F3C
		inc	[bp+var_32]
		mov	ax, 3504h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx		; int
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_2863A
		add	sp, 8
		or	al, al
		jz	short loc_2B80D
		mov	ax, 95F8h
		push	ax		; char *
		mov	ax, 3508h
		push	ax		; int
		mov	ax, 9241h
		push	ax
		mov	ax, 9Ch	; 'ú'
		push	ax		; char *
		call	sub_285C2
		add	sp, 8
		mov	[bp+var_176], 1
		mov	ax, 95F8h
		push	ax
		call	sub_2FFD4
		add	sp, 2
		or	ax, ax
		jz	short loc_2B812
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 350Dh
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		cmp	si, 0FFFFh
		jnz	short loc_2B880

loc_2B80D:				; CODE XREF: sub_2A2BC+14E8j
		mov	[bp+var_176], 0FFh

loc_2B812:				; CODE XREF: sub_2A2BC+1515j
					; sub_2A2BC+15C6j ...
		cmp	[bp+var_176], 1
		jnz	short loc_2B891
		mov	ax, 70Ah
		cwd
		push	dx
		push	ax
		push	word ptr dword_44D42+2
		push	word ptr dword_44D42
		mov	ax, 95F8h
		push	ax
		call	sub_3250B
		add	sp, 0Ah
		mov	si, ax
		or	si, si
		jnz	short loc_2B845
		mov	ax, 1
		push	ax
		call	sub_11588
		add	sp, 2

loc_2B845:				; CODE XREF: sub_2A2BC+157Bj
		or	si, si
		jz	short loc_2B88C
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3511h
		push	ax
		push	word_44CEE
		push	word_44CEC
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	[bp+var_176], 0
		jmp	short loc_2B891
; ---------------------------------------------------------------------------

loc_2B880:				; CODE XREF: sub_2A2BC+154Fj
		or	si, si
		jnz	short loc_2B812
		mov	[bp+var_176], 0
		jmp	short loc_2B812
; ---------------------------------------------------------------------------
		align 2

loc_2B88C:				; CODE XREF: sub_2A2BC+158Bj
		mov	[bp+var_D4], 0

loc_2B891:				; CODE XREF: sub_2A2BC+14B4j
					; sub_2A2BC+155Bj ...
		cmp	[bp+var_176], 0
		jnz	short loc_2B89B
		jmp	loc_2B774
; ---------------------------------------------------------------------------

loc_2B89B:				; CODE XREF: sub_2A2BC+1466j
					; sub_2A2BC+149Cj ...
		mov	byte_3B8FB, 0
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2B8A4:				; CODE XREF: sub_2A2BC+14A7j
		cmp	[bp+var_D4], 0
		jz	short loc_2B8E5
		sub	ax, ax
		push	ax
		push	ax
		push	word_40800
		mov	ax, 0FFFFh
		push	ax
		push	ax
		mov	ax, 3515h
		push	ax
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28AA2
		add	sp, 6
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 2
		push	ax
		call	sub_27686
		add	sp, 12h
		mov	si, ax
		or	si, si
		jnz	short loc_2B8E5
		jmp	loc_2B766
; ---------------------------------------------------------------------------

loc_2B8E5:				; CODE XREF: sub_2A2BC+15EDj
					; sub_2A2BC+1624j
		mov	[bp+var_188], 0
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2B8EE:				; CODE XREF: sub_2A2BC+11E4j
		cmp	[bp+var_C6], 0
		jz	short loc_2B8F8
		jmp	loc_2B98E
; ---------------------------------------------------------------------------

loc_2B8F8:				; CODE XREF: sub_2A2BC+1637j
		mov	al, [bp+var_DA]
		cmp	[bp+var_18E], al
		jnz	short loc_2B928
		mov	al, [bp+var_C0]
		cmp	[bp+var_180], al
		jnz	short loc_2B928
		mov	al, [bp+var_190]
		mov	[bp+var_1C], al
		mov	al, [bp+var_192]
		mov	[bp+var_190], al
		mov	al, [bp+var_1C]
		mov	[bp+var_192], al
		inc	[bp+var_A]
		jmp	short loc_2B95B
; ---------------------------------------------------------------------------
		align 2

loc_2B928:				; CODE XREF: sub_2A2BC+1644j
					; sub_2A2BC+164Ej
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx]
		mov	[bp+var_192], al
		mov	al, [bp+var_18E]
		mov	[bp+var_DA], al
		mov	al, [bp+var_180]
		mov	[bp+var_C0], al

loc_2B95B:				; CODE XREF: sub_2A2BC+1669j
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-73C4h]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, [bp+var_190]
		mov	es:[bx], al
		mov	[bp+var_D4], 1
		mov	[bp+var_30], 1
		inc	[bp+var_32]
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2B98E:				; CODE XREF: sub_2A2BC+1639j
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 1
		jz	short loc_2B9B1
		cmp	[bp+var_180], 1Ch
		jle	short loc_2B9B1
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B9B1:				; CODE XREF: sub_2A2BC+16E9j
					; sub_2A2BC+16F0j
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+20A3h], 2
		jz	short loc_2B9D4
		cmp	[bp+var_18E], 1Ch
		jle	short loc_2B9D4
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2B9D4:				; CODE XREF: sub_2A2BC+170Cj
					; sub_2A2BC+1713j
		mov	al, [bp+var_DA]
		cmp	[bp+var_18E], al
		jnz	short loc_2BA04
		mov	al, [bp+var_C0]
		cmp	[bp+var_180], al
		jnz	short loc_2BA04
		mov	al, [bp+var_190]
		mov	[bp+var_1C], al
		mov	al, [bp+var_192]
		mov	[bp+var_190], al
		mov	al, [bp+var_1C]
		mov	[bp+var_192], al
		inc	[bp+var_A]
		jmp	short loc_2BA40
; ---------------------------------------------------------------------------
		align 2

loc_2BA04:				; CODE XREF: sub_2A2BC+1720j
					; sub_2A2BC+172Aj
		mov	al, [bp+var_180]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_18E]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx]
		mov	[bp+var_192], al
		cmp	al, 0FDh ; '˝'
		jb	short loc_2BA30
		mov	[bp+var_192], 0

loc_2BA30:				; CODE XREF: sub_2A2BC+176Dj
		mov	al, [bp+var_18E]
		mov	[bp+var_DA], al
		mov	al, [bp+var_180]
		mov	[bp+var_C0], al

loc_2BA40:				; CODE XREF: sub_2A2BC+1745j
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, [bp+var_190]
		mov	es:[bx], al
		mov	[bp+var_D4], 1
		mov	[bp+var_30], 1
		inc	[bp+var_32]
		mov	al, [bp+var_190]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		cmp	ax, 1
		jz	short loc_2BA98
		cmp	ax, 2
		jz	short loc_2BABC
		cmp	ax, 3
		jz	short loc_2BAE0
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2BA98:				; CODE XREF: sub_2A2BC+17CDj
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A2Eh]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	byte ptr es:[bx], 0FEh ; '˛'
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2BABC:				; CODE XREF: sub_2A2BC+17D2j
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	byte ptr es:[bx+1], 0FFh
		jmp	loc_2B491
; ---------------------------------------------------------------------------

loc_2BAE0:				; CODE XREF: sub_2A2BC+17D7j
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	byte ptr es:[bx+1], 0FFh
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A2Eh]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	byte ptr es:[bx], 0FEh ; '˛'
		mov	al, [bp+var_C0]
		cbw
		mov	bx, ax
		shl	bx, 1
		mov	bx, [bx-5A2Eh]
		mov	al, [bp+var_DA]
		cbw
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	byte ptr es:[bx+1], 0FDh ; '˝'
		jmp	loc_2B491
; ---------------------------------------------------------------------------
		align 2

loc_2BB46:				; CODE XREF: sub_2A2BC+1B51j
		cmp	[bp+var_34], 0
		jz	short loc_2BB54
		mov	[bp+var_17F], 0
		jmp	loc_2BCC8
; ---------------------------------------------------------------------------

loc_2BB54:				; CODE XREF: sub_2A2BC+188Ej
		mov	al, [bp+var_18C]
		cmp	[bp+var_180], al
		jnz	short loc_2BB70
		mov	al, [bp+var_8]
		cmp	[bp+var_18E], al
		jnz	short loc_2BB70
		mov	[bp+var_8], 0
		mov	[bp+var_18C], 0

loc_2BB70:				; CODE XREF: sub_2A2BC+18A0j
					; sub_2A2BC+18A9j
		mov	al, [bp+var_18C]
		mov	[bp+var_180], al
		mov	al, [bp+var_8]
		mov	[bp+var_18E], al
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BB82:				; CODE XREF: sub_2A2BC+1B59j
		mov	al, [bp+var_34]
		cbw
		add	ax, bp
		sub	ax, 180h
		mov	[bp+var_196], ax
		mov	bx, ax
		cmp	byte ptr [bx], 0
		jnz	short loc_2BB99
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BB99:				; CODE XREF: sub_2A2BC+18D8j
		mov	[bp+var_DA], 0FFh
		dec	byte ptr [bx]
		cmp	[bp+var_34], 0
		jnz	short loc_2BBA9
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BBA9:				; CODE XREF: sub_2A2BC+18E8j
		cmp	[bp+var_17F], 6
		jl	short loc_2BBB3
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BBB3:				; CODE XREF: sub_2A2BC+18F2j
		jmp	short loc_2BBD3
; ---------------------------------------------------------------------------
		align 2

loc_2BBB6:				; CODE XREF: sub_2A2BC+1944j
		mov	al, byte ptr [bp+var_196]
		mov	[bp+var_178], al
		cmp	al, 0FFh
		jnz	short loc_2BBC8
		dec	[bp+var_18D]
		jmp	short loc_2BBD3
; ---------------------------------------------------------------------------

loc_2BBC8:				; CODE XREF: sub_2A2BC+1904j
		cmp	[bp+var_178], 0FEh ; '˛'
		jnz	short loc_2BBD3
		dec	[bp+var_17F]

loc_2BBD3:				; CODE XREF: sub_2A2BC:loc_2BBB3j
					; sub_2A2BC+190Aj ...
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	byte ptr [bp+var_196], al
		cmp	al, 0FEh ; '˛'
		jnb	short loc_2BBB6
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2BC06:				; CODE XREF: sub_2A2BC+1B6Bj
		mov	al, [bp+var_34]
		cbw
		mov	[bp+var_196], ax
		mov	bx, ax
		mov	al, [bx+3590h]
		add	bx, bp
		cmp	[bx-180h], al
		jb	short loc_2BC1F
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BC1F:				; CODE XREF: sub_2A2BC+195Ej
		mov	[bp+var_DA], 0FFh
		mov	bx, [bp+var_196]
		add	bx, bp
		inc	byte ptr [bx-180h]
		cmp	[bp+var_34], 0
		jnz	short loc_2BC37
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BC37:				; CODE XREF: sub_2A2BC+1976j
		cmp	[bp+var_17F], 6
		jl	short loc_2BC41
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BC41:				; CODE XREF: sub_2A2BC+1980j
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	[bp+var_178], al
		cmp	al, 0FFh
		jnz	short loc_2BC78
		dec	[bp+var_18D]
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2BC78:				; CODE XREF: sub_2A2BC+19B2j
		cmp	[bp+var_178], 0FEh ; '˛'
		jz	short loc_2BC82
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BC82:				; CODE XREF: sub_2A2BC+19C1j
		inc	[bp+var_17F]
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2BC8A:				; CODE XREF: sub_2A2BC+1B47j
		cmp	[bp+var_34], 0
		jz	short loc_2BC9A
		cmp	[bp+var_17F], 6
		jnz	short loc_2BC9A
		jmp	loc_2B3B8
; ---------------------------------------------------------------------------

loc_2BC9A:				; CODE XREF: sub_2A2BC+19D2j
					; sub_2A2BC+19D9j
		mov	al, [bp+var_34]
		cbw
		add	ax, bp
		sub	ax, 18Eh
		mov	[bp+var_196], ax
		mov	bx, ax
		cmp	byte ptr [bx], 0
		jnz	short loc_2BCB1
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BCB1:				; CODE XREF: sub_2A2BC+19F0j
		mov	[bp+var_DA], 0FFh
		dec	byte ptr [bx]
		cmp	[bp+var_34], 0
		jnz	short loc_2BCC1
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BCC1:				; CODE XREF: sub_2A2BC+1A00j
		cmp	[bp+var_17F], 5
		jle	short loc_2BCED

loc_2BCC8:				; CODE XREF: sub_2A2BC+1895j
		mov	[bp+var_18D], 0
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BCD0:				; CODE XREF: sub_2A2BC+1A5Ej
		mov	al, byte ptr [bp+var_196]
		mov	[bp+var_178], al
		cmp	al, 0FFh
		jnz	short loc_2BCE2
		dec	[bp+var_18D]
		jmp	short loc_2BCED
; ---------------------------------------------------------------------------

loc_2BCE2:				; CODE XREF: sub_2A2BC+1A1Ej
		cmp	[bp+var_178], 0FEh ; '˛'
		jnz	short loc_2BCED
		dec	[bp+var_17F]

loc_2BCED:				; CODE XREF: sub_2A2BC+1A0Aj
					; sub_2A2BC+1A24j ...
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	byte ptr [bp+var_196], al
		cmp	al, 0FEh ; '˛'
		jnb	short loc_2BCD0
		jmp	loc_2BE3A
; ---------------------------------------------------------------------------
		align 2

loc_2BD20:				; CODE XREF: sub_2A2BC+1B63j
		cmp	[bp+var_34], 0
		jz	short loc_2BD30
		cmp	[bp+var_17F], 6
		jnz	short loc_2BD30
		jmp	loc_2B3CA
; ---------------------------------------------------------------------------

loc_2BD30:				; CODE XREF: sub_2A2BC+1A68j
					; sub_2A2BC+1A6Fj
		mov	[bp+var_178], 1
		cmp	[bp+var_34], 0
		jnz	short loc_2BD3E
		jmp	loc_2BDC8
; ---------------------------------------------------------------------------

loc_2BD3E:				; CODE XREF: sub_2A2BC+1A7Dj
		cmp	[bp+var_17F], 5
		jle	short loc_2BD9B
		mov	[bp+var_178], 3
		jmp	short loc_2BDC8
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_2BD4E:				; CODE XREF: sub_2A2BC+1B0Aj
		mov	al, [bp+var_17F]
		cbw
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, 24h	; '$'
		imul	[bp+var_C6]
		add	bx, ax
		mov	al, [bp+var_18D]
		cbw
		add	bx, ax
		add	bx, [bp+var_196]
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx]
		mov	byte ptr [bp+var_198], al
		cmp	al, 0FEh ; '˛'
		jb	short loc_2BDC8
		mov	[bp+var_186], al
		cmp	al, 0FFh
		jnz	short loc_2BD90
		inc	[bp+var_178]
		jmp	short loc_2BD9B
; ---------------------------------------------------------------------------
		align 2

loc_2BD90:				; CODE XREF: sub_2A2BC+1ACBj
		cmp	[bp+var_186], 0FEh ; '˛'
		jnz	short loc_2BD9B
		dec	[bp+var_17F]

loc_2BD9B:				; CODE XREF: sub_2A2BC+1A87j
					; sub_2A2BC+1AD1j ...
		mov	al, [bp+var_178]
		sub	ah, ah
		mov	[bp+var_196], ax
		mov	al, [bp+var_34]
		cbw
		mov	[bp+var_194], ax
		mov	bx, ax
		add	bx, bp
		mov	al, [bx-18Eh]
		cbw
		add	ax, [bp+var_196]
		mov	bx, [bp+var_194]
		mov	cl, [bx+358Eh]
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_2BD4E

loc_2BDC8:				; CODE XREF: sub_2A2BC+1A7Fj
					; sub_2A2BC+1A8Ej ...
		mov	al, [bp+var_34]
		cbw
		mov	[bp+var_198], ax
		mov	bx, ax
		add	bx, bp
		mov	al, [bx-18Eh]
		cbw
		mov	cl, [bp+var_178]
		sub	ch, ch
		add	ax, cx
		mov	bx, [bp+var_198]
		mov	cl, [bx+358Eh]
		cmp	ax, cx
		jnb	short loc_2BE3A
		mov	[bp+var_DA], 0FFh
		add	bx, bp
		mov	al, [bp+var_178]
		add	[bx-18Eh], al
		jmp	short loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BDFE:				; CODE XREF: sub_2A2BC+10D1j
		cmp	ax, 4B00h
		jnz	short loc_2BE06
		jmp	loc_2BC8A
; ---------------------------------------------------------------------------

loc_2BE06:				; CODE XREF: sub_2A2BC+1B45j
		ja	short loc_2BE1A
		cmp	ax, 4700h
		jnz	short loc_2BE10
		jmp	loc_2BB46
; ---------------------------------------------------------------------------

loc_2BE10:				; CODE XREF: sub_2A2BC+1B4Fj
		cmp	ax, 4800h
		jnz	short loc_2BE18
		jmp	loc_2BB82
; ---------------------------------------------------------------------------

loc_2BE18:				; CODE XREF: sub_2A2BC+1B57j
		jmp	short loc_2BE3A
; ---------------------------------------------------------------------------

loc_2BE1A:				; CODE XREF: sub_2A2BC:loc_2BE06j
		cmp	ax, 4D00h
		jnz	short loc_2BE22
		jmp	loc_2BD20
; ---------------------------------------------------------------------------

loc_2BE22:				; CODE XREF: sub_2A2BC+1B61j
		cmp	ax, 5000h
		jnz	short loc_2BE2A
		jmp	loc_2BC06
; ---------------------------------------------------------------------------

loc_2BE2A:				; CODE XREF: sub_2A2BC+1B69j
		cmp	ax, 5200h
		jnz	short loc_2BE32
		jmp	loc_2B3B0
; ---------------------------------------------------------------------------

loc_2BE32:				; CODE XREF: sub_2A2BC+1B71j
		cmp	ax, 5400h
		jnz	short loc_2BE3A
		jmp	loc_2B3DC
; ---------------------------------------------------------------------------

loc_2BE3A:				; CODE XREF: sub_2A2BC+10F0j
					; sub_2A2BC+10F8j ...
		cmp	[bp+var_188], 0
		jz	short loc_2BE44
		jmp	loc_2A720
; ---------------------------------------------------------------------------

loc_2BE44:				; CODE XREF: sub_2A2BC+1B83j
		push	word ptr dword_44D26+2
		push	word ptr dword_44D26
		call	sub_324AA
		add	sp, 4
		push	[bp+var_164]
		push	[bp+var_166]
		call	sub_324AA
		add	sp, 4
		push	[bp+var_168]
		push	[bp+var_16A]
		call	sub_324AA
		add	sp, 4
		push	[bp+var_16C]
		push	[bp+var_16E]
		call	sub_324AA
		add	sp, 4
		push	[bp+var_170]
		push	[bp+var_172]
		call	sub_324AA
		add	sp, 4
		push	[bp+var_20]
		push	[bp+var_22]
		call	sub_28A78
		add	sp, 4
		push	[bp+var_28]
		push	[bp+var_2A]
		call	sub_3147C
		add	sp, 4
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2A2BC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2BEB6	proc far		; CODE XREF: sub_2A2BC+5F7p

var_6		= byte ptr -6
var_4		= byte ptr -4
var_2		= byte ptr -2
arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		mov	[bp+var_2], 0
		jmp	loc_2C095
; ---------------------------------------------------------------------------

loc_2BEC4:				; CODE XREF: sub_2BEB6+133j
		cmp	[bp+var_6], 0FDh ; '˝'
		jb	short loc_2BECD
		jmp	loc_2BFAC
; ---------------------------------------------------------------------------

loc_2BECD:				; CODE XREF: sub_2BEB6+12j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		push	ax
		push	word_4283E
		push	word_4283C
		call	sub_33D30
		add	sp, 8
		mov	al, [bp+var_6]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		cmp	ax, 1
		jz	short loc_2BF22
		cmp	ax, 2
		jnz	short loc_2BF18
		jmp	loc_2C01A
; ---------------------------------------------------------------------------

loc_2BF18:				; CODE XREF: sub_2BEB6+5Dj
		cmp	ax, 3
		jnz	short loc_2BF20
		jmp	loc_2C034
; ---------------------------------------------------------------------------

loc_2BF20:				; CODE XREF: sub_2BEB6+65j
		jmp	short loc_2BF4A
; ---------------------------------------------------------------------------

loc_2BF22:				; CODE XREF: sub_2BEB6+58j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 34h	; '4'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0DCh ; '‹'

loc_2BF39:				; CODE XREF: sub_2BEB6+17Bj
		push	ax
		push	word_4283E
		push	word_4283C
		call	sub_33D30
		add	sp, 8

loc_2BF4A:				; CODE XREF: sub_2BEB6:loc_2BF20j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		push	ax
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33A1E
		add	sp, 8
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		push	ax
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6AEAh]
		push	word ptr [bx+6AE8h]
		call	sub_34212

loc_2BFA9:				; CODE XREF: sub_2BEB6+161j
		add	sp, 8

loc_2BFAC:				; CODE XREF: sub_2BEB6+14j
		inc	[bp+var_4]

loc_2BFAF:				; CODE XREF: sub_2BEB6+1E9j
		cmp	[bp+var_4], 6
		jb	short loc_2BFB8
		jmp	loc_2C092
; ---------------------------------------------------------------------------

loc_2BFB8:				; CODE XREF: sub_2BEB6+FDj
		mov	al, [bp+var_4]
		sub	ah, ah
		mov	si, ax
		mov	al, [bp+var_2]
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		mov	cx, ax
		mov	al, 24h	; '$'
		mul	[bp+arg_0]
		mov	bx, ax
		add	bx, cx
		add	bx, word_42540
		mov	es, word_42542
		mov	al, es:[bx+si]
		mov	[bp+var_6], al
		cmp	[bp+arg_0], 0
		jz	short loc_2BFEC
		jmp	loc_2BEC4
; ---------------------------------------------------------------------------

loc_2BFEC:				; CODE XREF: sub_2BEB6+131j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		push	ax
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33D30
		jmp	short loc_2BFA9
; ---------------------------------------------------------------------------
		align 2

loc_2C01A:				; CODE XREF: sub_2BEB6+5Fj
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'

loc_2C026:				; CODE XREF: sub_2BEB6+1DAj
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0ECh ; 'Ï'
		jmp	loc_2BF39
; ---------------------------------------------------------------------------

loc_2C034:				; CODE XREF: sub_2BEB6+67j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 24h	; '$'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0ECh ; 'Ï'
		push	ax
		push	word_4283E
		push	word_4283C
		call	sub_33D30
		add	sp, 8
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 34h	; '4'
		push	ax
		mov	al, [bp+var_4]
		sub	ah, ah
		shl	ax, cl
		add	ax, 0DCh ; '‹'
		push	ax
		push	word_4283E
		push	word_4283C
		call	sub_33D30
		add	sp, 8
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cl, 4
		shl	ax, cl
		add	ax, 34h	; '4'
		jmp	short loc_2C026
; ---------------------------------------------------------------------------

loc_2C092:				; CODE XREF: sub_2BEB6+FFj
		inc	[bp+var_2]

loc_2C095:				; CODE XREF: sub_2BEB6+Bj
		cmp	[bp+var_2], 6
		jnb	short loc_2C0A2
		mov	[bp+var_4], 0
		jmp	loc_2BFAF
; ---------------------------------------------------------------------------

loc_2C0A2:				; CODE XREF: sub_2BEB6+1E3j
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_2BEB6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2C0A8	proc far		; CODE XREF: sub_2A2BC+6F5p

var_E		= word ptr -0Eh
var_C		= byte ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= byte ptr -8
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= byte ptr  6
arg_2		= byte ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		mov	[bp+var_6], 0
		jmp	loc_2C7F7
; ---------------------------------------------------------------------------
		align 2

loc_2C0B8:				; CODE XREF: sub_2C0A8+619j
					; sub_2C0A8+622j
		cmp	[bp+var_C], 0FEh ; '˛'
		jz	short loc_2C0C1
		jmp	loc_2C21A
; ---------------------------------------------------------------------------

loc_2C0C1:				; CODE XREF: sub_2C0A8+14j
		cmp	[bp+var_6], 0
		jz	short loc_2C0CA
		jmp	loc_2C21A
; ---------------------------------------------------------------------------

loc_2C0CA:				; CODE XREF: sub_2C0A8+1Dj
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 18h
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx+1]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		sub	ax, 0Ch
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A32h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33890
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		sub	ax, 0Ch
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A32h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	bl, es:[bx]

loc_2C201:				; CODE XREF: sub_2C0A8+272j
					; sub_2C0A8+46Bj
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6AEAh]
		push	word ptr [bx+6AE8h]
		call	sub_34084

loc_2C214:				; CODE XREF: sub_2C0A8+3CDj
		add	sp, 8
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C21A:				; CODE XREF: sub_2C0A8+16j
					; sub_2C0A8+1Fj
		cmp	[bp+var_C], 0FDh ; '˝'
		jz	short loc_2C223
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C223:				; CODE XREF: sub_2C0A8+176j
		cmp	[bp+var_6], 0
		jz	short loc_2C22C
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C22C:				; CODE XREF: sub_2C0A8+17Fj
		cmp	[bp+var_8], 0
		jz	short loc_2C235
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C235:				; CODE XREF: sub_2C0A8+188j
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		sub	ax, 0Ch
		push	ax
		mov	ax, si
		shl	ax, cl
		sub	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A32h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	bl, es:[bx-1]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33890
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		sub	ax, 0Ch
		push	ax
		mov	ax, si
		shl	ax, cl
		sub	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A32h]

loc_2C305:				; CODE XREF: sub_2C0A8+748j
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	bl, es:[bx-1]
		jmp	loc_2C201
; ---------------------------------------------------------------------------
		align 2

loc_2C31E:				; CODE XREF: sub_2C0A8+5FAj
					; sub_2C0A8+607j
		cmp	[bp+var_C], 0
		jnz	short loc_2C382
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_4]
		cmp	byte ptr [bx+si], 0
		jnz	short loc_2C33C
		mov	si, [bp+arg_6]
		mov	al, [bp+var_A]
		cmp	[bx+si], al
		jnz	short loc_2C33C
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C33C:				; CODE XREF: sub_2C0A8+285j
					; sub_2C0A8+28Fj
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_A]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33D30
		add	sp, 8
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_4]
		mov	byte ptr [bx+si], 0
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_6]
		mov	al, [bp+var_A]
		mov	[bx+si], al
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C382:				; CODE XREF: sub_2C0A8+27Aj
		cmp	[bp+var_C], 0FDh ; '˝'
		jb	short loc_2C38B
		jmp	loc_2C62C
; ---------------------------------------------------------------------------

loc_2C38B:				; CODE XREF: sub_2C0A8+2DEj
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_4]
		mov	al, [bp+var_C]
		cmp	[bx+si], al
		jnz	short loc_2C3A5
		mov	si, [bp+arg_6]
		mov	al, [bp+var_A]
		cmp	[bx+si], al
		jnz	short loc_2C3A5
		jmp	loc_2C63E
; ---------------------------------------------------------------------------

loc_2C3A5:				; CODE XREF: sub_2C0A8+2EEj
					; sub_2C0A8+2F8j
		mov	si, [bp+arg_4]
		mov	al, [bp+var_C]
		mov	[bx+si], al
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_6]
		mov	al, [bp+var_A]
		mov	[bx+si], al
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_A]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33D30
		add	sp, 8
		mov	al, [bp+var_C]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		or	ax, ax
		jz	short loc_2C41A
		cmp	ax, 1
		jz	short loc_2C478
		cmp	ax, 2
		jnz	short loc_2C40E
		jmp	loc_2C516
; ---------------------------------------------------------------------------

loc_2C40E:				; CODE XREF: sub_2C0A8+361j
		cmp	ax, 3
		jnz	short loc_2C416
		jmp	loc_2C558
; ---------------------------------------------------------------------------

loc_2C416:				; CODE XREF: sub_2C0A8+369j
		jmp	loc_2C63E
; ---------------------------------------------------------------------------
		align 2

loc_2C41A:				; CODE XREF: sub_2C0A8+357j
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_C]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33A1E
		add	sp, 8
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_C]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6AEAh]
		push	word ptr [bx+6AE8h]
		call	sub_34212
		jmp	loc_2C214
; ---------------------------------------------------------------------------

loc_2C478:				; CODE XREF: sub_2C0A8+35Cj
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 14h
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C2h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]

loc_2C4B5:				; CODE XREF: sub_2C0A8+4ACj
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_C]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33890
		add	sp, 8
		mov	al, [bp+var_6]
		cbw
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	al, [bp+var_8]
		cbw
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+var_C]
		jmp	loc_2C201
; ---------------------------------------------------------------------------

loc_2C516:				; CODE XREF: sub_2C0A8+363j
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 18h
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]

loc_2C53F:				; CODE XREF: sub_2C0A8+580j
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx+1]
		jmp	loc_2C4B5
; ---------------------------------------------------------------------------
		align 2

loc_2C558:				; CODE XREF: sub_2C0A8+36Bj
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 18h
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx+1]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 14h
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C2h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 14h
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 18h
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C2h]
		jmp	loc_2C53F
; ---------------------------------------------------------------------------
		align 2

loc_2C62C:				; CODE XREF: sub_2C0A8+2E0j
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_4]
		mov	byte ptr [bx+si], 0FFh
		mov	bx, [bp+var_4]
		mov	si, [bp+arg_6]
		mov	byte ptr [bx+si], 0FFh

loc_2C63E:				; CODE XREF: sub_2C0A8+16Fj
					; sub_2C0A8+178j ...
		inc	[bp+var_8]

loc_2C641:				; CODE XREF: sub_2C0A8+76Aj
		cmp	[bp+var_8], 0Ch
		jl	short loc_2C64A
		jmp	loc_2C7F4
; ---------------------------------------------------------------------------

loc_2C64A:				; CODE XREF: sub_2C0A8+59Dj
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+arg_0]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_6]
		cbw
		mov	cl, [bp+arg_2]
		sub	ch, ch
		add	ax, cx
		shl	ax, 1
		mov	[bp+var_E], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, si
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx+di]
		mov	[bp+var_C], al
		mov	bx, [bp+var_E]
		mov	bx, [bx-73C4h]
		add	bx, si
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx+di]
		mov	[bp+var_A], al
		mov	ax, [bp+var_2]
		add	ax, si
		mov	[bp+var_4], ax
		cmp	[bp+var_C], 0FDh ; '˝'
		jnb	short loc_2C6A5
		jmp	loc_2C31E
; ---------------------------------------------------------------------------

loc_2C6A5:				; CODE XREF: sub_2C0A8+5F8j
		cmp	[bp+var_6], ch
		jz	short loc_2C6B2
		cmp	[bp+var_8], ch
		jz	short loc_2C6B2
		jmp	loc_2C31E
; ---------------------------------------------------------------------------

loc_2C6B2:				; CODE XREF: sub_2C0A8+600j
					; sub_2C0A8+605j
		mov	bx, [bp+var_4]
		add	bx, [bp+arg_4]
		mov	byte ptr [bx], 0FFh
		cmp	[bp+var_C], 0FFh
		jz	short loc_2C6C4
		jmp	loc_2C0B8
; ---------------------------------------------------------------------------

loc_2C6C4:				; CODE XREF: sub_2C0A8+617j
		cmp	[bp+var_8], 0
		jz	short loc_2C6CD
		jmp	loc_2C0B8
; ---------------------------------------------------------------------------

loc_2C6CD:				; CODE XREF: sub_2C0A8+620j
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C4h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 14h
		push	ax
		mov	ax, si
		shl	ax, cl
		add	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-73C2h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	bl, es:[bx]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+70CEh]
		push	word ptr [bx+70CCh]
		call	sub_33BBC
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		sub	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A30h]
		add	bx, si
		mov	al, [bp+arg_0]
		sub	ah, ah
		add	bx, ax
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	bl, es:[bx-1]
		sub	bh, bh
		shl	bx, 1
		shl	bx, 1
		push	word ptr [bx+6DD6h]
		push	word ptr [bx+6DD4h]
		call	sub_33890
		add	sp, 8
		mov	al, [bp+var_8]
		cbw
		mov	si, ax
		mov	al, [bp+var_6]
		cbw
		mov	di, ax
		mov	cl, 4
		shl	ax, cl
		add	ax, 4
		push	ax
		mov	ax, si
		shl	ax, cl
		sub	ax, 8
		push	ax
		mov	bl, [bp+arg_2]
		sub	bh, bh
		add	bx, di
		shl	bx, 1
		mov	bx, [bx-5A30h]
		jmp	loc_2C305
; ---------------------------------------------------------------------------
		align 2

loc_2C7F4:				; CODE XREF: sub_2C0A8+59Fj
		inc	[bp+var_6]

loc_2C7F7:				; CODE XREF: sub_2C0A8+Cj
		cmp	[bp+var_6], 0Bh
		jge	short loc_2C816
		mov	al, [bp+var_6]
		cbw
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_2], ax
		mov	[bp+var_8], 0
		jmp	loc_2C641
; ---------------------------------------------------------------------------
		align 2

loc_2C816:				; CODE XREF: sub_2C0A8+753j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2C0A8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2C81C	proc far		; CODE XREF: sub_2A2BC+643p

var_A		= byte ptr -0Ah
var_8		= byte ptr -8
var_6		= byte ptr -6
var_4		= byte ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		push	cs
		call	near ptr sub_2C9B4
		mov	[bp+var_A], 0
		mov	[bp+var_6], 0
		jmp	loc_2C993
; ---------------------------------------------------------------------------
		align 2

loc_2C834:				; CODE XREF: sub_2C81C+141j
		cmp	[bp+var_4], 0FFh
		jnz	short loc_2C848
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx-5A30h]
		jmp	short loc_2C87B
; ---------------------------------------------------------------------------
		align 2

loc_2C848:				; CODE XREF: sub_2C81C+1Cj
		cmp	[bp+var_4], 0FEh ; '˛'
		jnz	short loc_2C86A
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-5A32h]
		mov	al, [bp+var_2]
		sub	ah, ah
		add	bx, ax
		les	si, dword_44D42
		mov	al, es:[bx+si]
		jmp	short loc_2C88A
; ---------------------------------------------------------------------------
		align 2

loc_2C86A:				; CODE XREF: sub_2C81C+30j
		cmp	[bp+var_4], 0FDh ; '˝'
		jnz	short loc_2C88D
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	si, [bx-5A32h]

loc_2C87B:				; CODE XREF: sub_2C81C+29j
		mov	al, [bp+var_2]
		sub	ah, ah
		add	si, ax
		les	bx, dword_44D42
		mov	al, es:[bx+si-1]

loc_2C88A:				; CODE XREF: sub_2C81C+4Bj
		mov	[bp+var_4], al

loc_2C88D:				; CODE XREF: sub_2C81C+52j
		mov	al, [bp+var_4]
		sub	ah, ah
		cmp	ax, 22h	; '"'
		jb	short loc_2C8B0
		cmp	ax, 23h	; '#'
		jbe	short loc_2C903
		cmp	ax, 67h	; 'g'
		jb	short loc_2C8B0
		cmp	ax, 6Ch	; 'l'
		jbe	short loc_2C903
		cmp	ax, 0ABh ; '´'
		jb	short loc_2C8B0
		cmp	ax, 0AEh ; 'Æ'
		jbe	short loc_2C903

loc_2C8B0:				; CODE XREF: sub_2C81C+79j
					; sub_2C81C+83j ...
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_2]
		sub	ah, ah
		add	bx, ax
		les	si, dword_44D42
		mov	es:[bx+si], ah
		mov	[bp+var_A], 0Ch
		jmp	short loc_2C903
; ---------------------------------------------------------------------------
		align 2

loc_2C8D0:				; CODE XREF: sub_2C81C+14Ej
		mov	al, [bp+var_4]
		sub	ah, ah
		push	ax
		mov	al, [bp+var_8]
		push	ax
		call	sub_21A5A
		add	sp, 4
		or	al, al
		jnz	short loc_2C903
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_2]
		sub	ah, ah
		add	bx, ax
		les	si, dword_44D42
		mov	es:[bx+si], ah
		mov	[bp+var_A], 0Dh

loc_2C903:				; CODE XREF: sub_2C81C+7Ej
					; sub_2C81C+88j ...
		inc	[bp+var_2]

loc_2C906:				; CODE XREF: sub_2C81C+181j
		cmp	[bp+var_2], 1Eh
		jb	short loc_2C90F
		jmp	loc_2C990
; ---------------------------------------------------------------------------

loc_2C90F:				; CODE XREF: sub_2C81C+EEj
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	si, ax
		mov	al, [bp+var_6]
		mov	di, ax
		shl	di, 1
		mov	bx, [di-73C4h]
		add	bx, word ptr dword_454BC
		mov	es, word ptr dword_454BC+2
		mov	al, es:[bx+si]
		mov	[bp+var_8], al
		mov	bx, [di-5A30h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		mov	al, es:[bx+si]
		mov	[bp+var_4], al
		cmp	al, ah
		jz	short loc_2C903
		cmp	[bp+var_8], ah
		jz	short loc_2C903
		cmp	[bp+var_8], 6
		jz	short loc_2C903
		mov	al, [bp+var_8]
		cmp	ax, 1
		jb	short loc_2C96D
		cmp	ax, 5
		ja	short loc_2C960
		jmp	loc_2C834
; ---------------------------------------------------------------------------

loc_2C960:				; CODE XREF: sub_2C81C+13Fj
		cmp	ax, 7
		jb	short loc_2C96D
		cmp	ax, 0Ah
		ja	short loc_2C96D
		jmp	loc_2C8D0
; ---------------------------------------------------------------------------

loc_2C96D:				; CODE XREF: sub_2C81C+13Aj
					; sub_2C81C+147j ...
		mov	[bp+var_A], 0Eh
		mov	bl, [bp+var_6]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_2]
		sub	ah, ah
		add	bx, ax
		mov	si, word ptr dword_44D42
		mov	es:[bx+si], ah
		jmp	loc_2C903
; ---------------------------------------------------------------------------
		align 4

loc_2C990:				; CODE XREF: sub_2C81C+F0j
		inc	[bp+var_6]

loc_2C993:				; CODE XREF: sub_2C81C+14j
		cmp	[bp+var_6], 1Eh
		jnb	short loc_2C9A0
		mov	[bp+var_2], 0
		jmp	loc_2C906
; ---------------------------------------------------------------------------

loc_2C9A0:				; CODE XREF: sub_2C81C+17Bj
		cmp	[bp+var_A], 0
		jz	short loc_2C9AA
		push	cs
		call	near ptr sub_2C9B4

loc_2C9AA:				; CODE XREF: sub_2C81C+188j
		mov	al, [bp+var_A]
		cbw
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2C81C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2C9B4	proc far		; CODE XREF: sub_2C81C+9p
					; sub_2C81C+18Bp

var_392		= dword	ptr -392h
var_38E		= word ptr -38Eh
var_38C		= byte ptr -38Ch
var_38A		= byte ptr -38Ah
var_388		= byte ptr -388h
var_384		= byte ptr -384h
var_383		= byte ptr -383h

		push	bp
		mov	bp, sp
		sub	sp, 392h
		push	di
		push	si
		sub	si, si

loc_2C9BF:				; CODE XREF: sub_2C9B4+15j
		mov	[bp+si+var_384], 0
		inc	si
		cmp	si, 384h
		jl	short loc_2C9BF
		mov	[bp+var_38C], 0
		jmp	loc_2CC3C
; ---------------------------------------------------------------------------
		align 2

loc_2C9D4:				; CODE XREF: sub_2C9B4+FAj
		mov	al, [bp+var_38A]
		sub	ah, ah
		mov	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		mov	al, [bx+20A3h]
		cbw
		cmp	ax, 1
		jz	short loc_2CA02
		cmp	ax, 2
		jnz	short loc_2C9F8
		jmp	loc_2CABC
; ---------------------------------------------------------------------------

loc_2C9F8:				; CODE XREF: sub_2C9B4+3Fj
		cmp	ax, 3
		jnz	short loc_2CA00
		jmp	loc_2CB30
; ---------------------------------------------------------------------------

loc_2CA00:				; CODE XREF: sub_2C9B4+47j
		jmp	short loc_2CA79
; ---------------------------------------------------------------------------

loc_2CA02:				; CODE XREF: sub_2C9B4+3Aj
		mov	al, [bp+var_388]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_38C]
		shl	ax, 1
		mov	[bp+var_38E], ax
		mov	bx, ax
		mov	bx, [bx-5A2Eh]
		add	bx, di
		add	bx, bp
		cmp	byte ptr [bx-384h], 0
		jz	short loc_2CA2A
		mov	bx, ax
		jmp	loc_2CB7E
; ---------------------------------------------------------------------------

loc_2CA2A:				; CODE XREF: sub_2C9B4+6Fj
		mov	al, [bp+var_388]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_38C]
		shl	ax, 1
		mov	[bp+var_38E], ax
		mov	bx, ax
		mov	bx, [bx-5A2Eh]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		cmp	byte ptr es:[bx+di], 0FEh ; '˛'
		jz	short loc_2CA60
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, word ptr dword_44D42

loc_2CA5A:				; CODE XREF: sub_2C9B4+126j
					; sub_2C9B4+1D6j
		mov	byte ptr es:[bx+di], 0
		jmp	short loc_2CA79
; ---------------------------------------------------------------------------

loc_2CA60:				; CODE XREF: sub_2C9B4+9Aj
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	di, [bx-5A2Eh]
		mov	al, [bp+var_388]
		sub	ah, ah
		add	di, ax
		mov	[bp+di+var_384], 1

loc_2CA79:				; CODE XREF: sub_2C9B4:loc_2CA00j
					; sub_2C9B4+AAj ...
		inc	[bp+var_388]

loc_2CA7D:				; CODE XREF: sub_2C9B4+294j
		cmp	[bp+var_388], 1Eh
		jb	short loc_2CA87
		jmp	loc_2CC38
; ---------------------------------------------------------------------------

loc_2CA87:				; CODE XREF: sub_2C9B4+CEj
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	di, [bx-5A30h]
		mov	al, [bp+var_388]
		sub	ah, ah
		add	di, ax
		les	bx, dword_44D42
		mov	al, es:[bx+di]
		mov	[bp+var_38A], al
		cmp	al, ah
		jz	short loc_2CA79
		cmp	al, 0FDh ; '˝'
		jnb	short loc_2CAB1
		jmp	loc_2C9D4
; ---------------------------------------------------------------------------

loc_2CAB1:				; CODE XREF: sub_2C9B4+F8j
		cmp	[bp+di+var_384], ah
		jnz	short loc_2CA79

loc_2CAB7:				; CODE XREF: sub_2C9B4+23Aj
		mov	es:[bx+di], ah
		jmp	short loc_2CA79
; ---------------------------------------------------------------------------

loc_2CABC:				; CODE XREF: sub_2C9B4+41j
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	di, [bx-5A30h]
		mov	al, [bp+var_388]
		sub	ah, ah
		add	di, ax
		cmp	[bp+di+var_383], ah
		jz	short loc_2CADE
		les	bx, dword_44D42
		jmp	loc_2CA5A
; ---------------------------------------------------------------------------
		align 2

loc_2CADE:				; CODE XREF: sub_2C9B4+120j
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	ax, [bx-5A30h]
		mov	cl, [bp+var_388]
		sub	ch, ch
		add	ax, cx
		add	ax, word ptr dword_44D42
		mov	dx, word ptr dword_44D42+2
		mov	word ptr [bp+var_392], ax
		mov	word ptr [bp+var_392+2], dx
		les	bx, [bp+var_392]
		cmp	byte ptr es:[bx+1], 0FFh
		jz	short loc_2CB14
		mov	es:[bx], ch
		jmp	loc_2CA79
; ---------------------------------------------------------------------------
		align 2

loc_2CB14:				; CODE XREF: sub_2C9B4+157j
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	di, [bx-5A30h]
		mov	al, [bp+var_388]
		sub	ah, ah
		add	di, ax
		mov	[bp+di+var_383], 1
		jmp	loc_2CA79
; ---------------------------------------------------------------------------

loc_2CB30:				; CODE XREF: sub_2C9B4+49j
		mov	al, [bp+var_388]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_38C]
		shl	ax, 1
		mov	word ptr [bp+var_392], ax
		mov	bx, ax
		mov	bx, [bx-5A2Eh]
		add	bx, di
		add	bx, bp
		mov	al, [bx-383h]
		sub	ah, ah
		mov	bx, word ptr [bp+var_392]
		mov	bx, [bx-5A30h]
		add	bx, di
		add	bx, bp
		mov	cl, [bx-383h]
		sub	ch, ch
		add	ax, cx
		mov	bx, word ptr [bp+var_392]
		mov	bx, [bx-5A2Eh]
		add	bx, di
		add	bx, bp
		mov	cl, [bx-384h]
		add	ax, cx
		jz	short loc_2CB8E
		mov	bx, word ptr [bp+var_392]

loc_2CB7E:				; CODE XREF: sub_2C9B4+73j
		mov	bx, [bx-5A30h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		jmp	loc_2CA5A
; ---------------------------------------------------------------------------
		align 2

loc_2CB8E:				; CODE XREF: sub_2C9B4+1C4j
		mov	al, [bp+var_388]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_38C]
		shl	ax, 1
		mov	word ptr [bp+var_392], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, word ptr dword_44D42
		mov	es, word ptr dword_44D42+2
		cmp	byte ptr es:[bx+di+1], 0FFh
		jnz	short loc_2CBD6
		mov	bx, ax
		mov	bx, [bx-5A2Eh]
		add	bx, word ptr dword_44D42
		cmp	byte ptr es:[bx+di], 0FEh ; '˛'
		jnz	short loc_2CBD6
		mov	bx, ax
		mov	bx, [bx-5A2Eh]
		add	bx, word ptr dword_44D42
		cmp	byte ptr es:[bx+di+1], 0FDh ; '˝'
		jz	short loc_2CBF2

loc_2CBD6:				; CODE XREF: sub_2C9B4+1FFj
					; sub_2C9B4+20Fj
		mov	bl, [bp+var_38C]
		sub	bh, bh
		shl	bx, 1
		mov	bx, [bx-5A30h]
		mov	al, [bp+var_388]
		sub	ah, ah
		add	bx, ax
		mov	di, word ptr dword_44D42
		jmp	loc_2CAB7
; ---------------------------------------------------------------------------
		align 2

loc_2CBF2:				; CODE XREF: sub_2C9B4+220j
		mov	al, [bp+var_388]
		sub	ah, ah
		mov	di, ax
		mov	al, [bp+var_38C]
		shl	ax, 1
		mov	word ptr [bp+var_392], ax
		mov	bx, ax
		mov	bx, [bx-5A30h]
		add	bx, di
		add	bx, bp
		mov	byte ptr [bx-383h], 1
		mov	bx, word ptr [bp+var_392]
		mov	bx, [bx-5A2Eh]
		add	bx, di
		add	bx, bp
		mov	byte ptr [bx-384h], 1
		mov	bx, word ptr [bp+var_392]
		mov	bx, [bx-5A2Eh]
		add	bx, di
		add	bx, bp
		mov	byte ptr [bx-383h], 1
		jmp	loc_2CA79
; ---------------------------------------------------------------------------

loc_2CC38:				; CODE XREF: sub_2C9B4+D0j
		inc	[bp+var_38C]

loc_2CC3C:				; CODE XREF: sub_2C9B4+1Cj
		cmp	[bp+var_38C], 1Eh
		jnb	short loc_2CC4C
		mov	[bp+var_388], 0
		jmp	loc_2CA7D
; ---------------------------------------------------------------------------
		align 2

loc_2CC4C:				; CODE XREF: sub_2C9B4+28Dj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_2C9B4	endp

seg009		ends

; ===========================================================================

; Segment type:	Pure code
seg010		segment	byte public 'CODE' use16
		assume cs:seg010
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 10h dup(0)
		assume ss:seg041, ds:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function noreturn

		public start
start		proc near
		mov	ah, 30h
		int	21h		; DOS -	GET DOS	VERSION
					; Return: AL = major version number (00h for DOS 1.x)
		cmp	al, 2
		jnb	short loc_2CC6C
		int	20h		; DOS -	PROGRAM	TERMINATION
					; returns to DOS--identical to INT 21/AH=00h
; ---------------------------------------------------------------------------

loc_2CC6C:				; CODE XREF: start+6j
		mov	di, seg	dseg
		mov	si, ds:2
		sub	si, di
		cmp	si, 1000h
		jb	short loc_2CC7E
		mov	si, 1000h

loc_2CC7E:				; CODE XREF: start+17j
		cli
		mov	ss, di
		assume ss:dseg
		add	sp, 0AD1Eh
		sti
		jnb	short loc_2CC9C
		push	ss
		pop	ds
		assume ds:dseg
		call	__FF_MSGBANNER
		xor	ax, ax
		push	ax
		call	__NMSG_WRITE
		mov	ax, 4CFFh
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
					; AL = exit code
; ---------------------------------------------------------------------------

loc_2CC9C:				; CODE XREF: start+24j
		and	sp, 0FFFEh
		mov	ss:word_3ED7A, sp
		mov	ss:word_3ED76, sp
		mov	ax, si
		mov	cl, 4
		shl	ax, cl
		dec	ax
		mov	ss:word_3ED74, ax
		add	si, di
		mov	word_3B772, si
		mov	bx, es
		sub	bx, si
		neg	bx
		mov	ah, 4Ah
		int	21h		; DOS -	2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)
					; ES = segment address of block	to change
					; BX = new size	in paragraphs
		mov	ss:word_3EDEB, ds
		push	ss
		pop	es
		assume es:dseg
		cld
		mov	di, 55CAh
		mov	cx, 0AD20h
		sub	cx, di
		xor	ax, ax
		rep stosb
		push	ss
		pop	ds
		call	far ptr	loc_2CD27+1
		push	ss
		pop	ds
		call	__setenvp
		call	far ptr	__setargv
		xor	bp, bp
		push	word_3EE0C
		push	argv		; p_argv
		push	argc		; p_argc
		call	_main
		push	ax
		call	far ptr	sub_2CDEC
; ---------------------------------------------------------------------------

__cintDIV:
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 3
		mov	ss:off_3ED78, 19Ch

__amsg_exit:				; CODE XREF: __fptrap+3j __chkstk+1Bj	...
		push	ax
		call	__FF_MSGBANNER
		call	__NMSG_WRITE
		mov	ax, 0FFh
		push	ax
		push	cs
		call	off_3ED78
start		endp ; sp-analysis failed


loc_2CD27:				; CODE XREF: start+78P
		add	[si-32D0h], dh
		and	[bp+di+367Dh], sp
		mov	ax, 3500h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_3EDD9, bx
		mov	word ptr dword_3EDD9+2,	es
		push	cs
		pop	ds
		assume ds:seg010
		mov	ax, 2500h
		mov	dx, 0B4h ; '¥'
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		push	ss
		pop	ds
		assume ds:dseg
		mov	cx, word ptr dword_40C1E+2
		jcxz	short loc_2CD7C
		mov	es, word_3EDEB
		assume es:nothing
		mov	si, es:2Ch
		lds	ax, dword_40C22
		mov	dx, ds
		xor	bx, bx
		call	ss:dword_40C1E
		jnb	short loc_2CD6B
		push	ss
		pop	ds
		jmp	__fptrap
; ---------------------------------------------------------------------------

loc_2CD6B:				; CODE XREF: seg010:0114j
		lds	ax, ss:dword_40C26
		mov	dx, ds
		mov	bx, 3
		call	ss:dword_40C1E
		push	ss
		pop	ds

loc_2CD7C:				; CODE XREF: seg010:00FCj
		mov	es, word_3EDEB
		mov	cx, es:2Ch
		jcxz	short loc_2CDBD
		mov	es, cx
		xor	di, di

loc_2CD8B:				; CODE XREF: seg010:0154j
		cmp	byte ptr es:[di], 0
		jz	short loc_2CDBD
		mov	cx, 0Ch
		mov	si, 365Ch
		repe cmpsb
		jz	short loc_2CDA6
		mov	cx, 7FFFh
		xor	ax, ax
		repne scasb
		jnz	short loc_2CDBD
		jmp	short loc_2CD8B
; ---------------------------------------------------------------------------

loc_2CDA6:				; CODE XREF: seg010:0149j
		push	es
		push	ds
		pop	es
		assume es:dseg
		pop	ds
		mov	si, di
		mov	di, 3684h
		lodsb
		cbw
		xchg	ax, cx

loc_2CDB2:				; CODE XREF: seg010:0169j
		lodsb
		inc	al
		jz	short loc_2CDB8
		dec	ax

loc_2CDB8:				; CODE XREF: seg010:0165j
		stosb
		loop	loc_2CDB2
		push	ss
		pop	ds

loc_2CDBD:				; CODE XREF: seg010:0135j seg010:013Fj ...
		mov	bx, 4

loc_2CDC0:				; CODE XREF: seg010:0187j
		and	byte ptr [bx+3684h], 0BFh
		mov	ax, 4400h
		int	21h		; DOS -	2+ - IOCTL - GET DEVICE	INFORMATION
					; BX = file or device handle
		jb	short loc_2CDD6
		test	dl, 80h
		jz	short loc_2CDD6
		or	byte ptr [bx+3684h], 40h

loc_2CDD6:				; CODE XREF: seg010:017Aj seg010:017Fj
		dec	bx
		jns	short loc_2CDC0
		mov	si, 54BAh
		mov	di, 54BAh
		call	sub_2CE77
		mov	si, 54BAh
		mov	di, 54BAh
		call	sub_2CE77
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_2CDEC	proc near		; CODE XREF: start+9DP	sub_2FE74+8P ...
		push	bp
		mov	bp, sp
		mov	si, 72B4h
		mov	di, 72B4h
		call	sub_2CE77
		mov	si, 54BAh
		mov	di, 54BEh
		call	sub_2CE77
		jmp	short loc_2CE06
sub_2CDEC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

sub_2CE03	proc near		; CODE XREF: start+C1p	_abort+19P ...

arg_2		= word ptr  6

		push	bp
		mov	bp, sp

loc_2CE06:				; CODE XREF: sub_2CDEC+15j
		mov	si, 54BEh
		mov	di, 54BEh
		call	sub_2CE77
		mov	si, 54BEh
		mov	di, 54BEh
		call	sub_2CE77
		call	__nullcheck
		or	ax, ax
		jz	short loc_2CE2C
		cmp	[bp+arg_2], 0
		jnz	short loc_2CE2C
		mov	[bp+arg_2], 0FFh

loc_2CE2C:				; CODE XREF: sub_2CE03+1Cj
					; sub_2CE03+22j
		mov	cx, 0Fh
		mov	bx, 5

loc_2CE32:				; CODE XREF: sub_2CE03+3Bj
		test	byte ptr [bx+3684h], 1
		jz	short loc_2CE3D
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle

loc_2CE3D:				; CODE XREF: sub_2CE03+34j
		inc	bx
		loop	loc_2CE32
		call	sub_2CE4A
		mov	ax, [bp+arg_2]
		mov	ah, 4Ch
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
sub_2CE03	endp			; AL = exit code


; =============== S U B	R O U T	I N E =======================================


sub_2CE4A	proc near		; CODE XREF: sub_2CE03+3Dp
		mov	cx, word ptr dword_40C1E+2
		jcxz	short loc_2CE57
		mov	bx, 2
		call	dword_40C1E

loc_2CE57:				; CODE XREF: sub_2CE4A+4j
		push	ds
		lds	dx, dword_3EDD9
		mov	ax, 2500h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		cmp	byte_3EE16, 0
		jz	short locret_2CE76
		push	ds
		mov	al, byte_3EE17
		lds	dx, dword_3EE18
		mov	ah, 25h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds

locret_2CE76:				; CODE XREF: sub_2CE4A+1Dj
		retn
sub_2CE4A	endp


; =============== S U B	R O U T	I N E =======================================


sub_2CE77	proc near		; CODE XREF: seg010:018Fp seg010:0198p ...
		cmp	si, di
		jnb	short locret_2CE89
		sub	di, 4
		mov	ax, [di]
		or	ax, [di+2]
		jz	short sub_2CE77
		call	dword ptr [di]
		jmp	short sub_2CE77
; ---------------------------------------------------------------------------

locret_2CE89:				; CODE XREF: sub_2CE77+2j
		retn
sub_2CE77	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__FF_MSGBANNER	proc far		; CODE XREF: start+28P	start+B2P ...
		push	bp
		mov	bp, sp
		mov	ax, 0FCh ; '¸'
		push	ax
		call	__NMSG_WRITE
		cmp	word_3EE1E, 0
		jz	short loc_2CEA1
		call	dword ptr unk_3EE1C

loc_2CEA1:				; CODE XREF: __FF_MSGBANNER+11j
		mov	ax, 0FFh
		push	ax
		call	__NMSG_WRITE
		mov	sp, bp
		pop	bp
		retf
__FF_MSGBANNER	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function noreturn

__fptrap	proc near		; CODE XREF: seg010:0118j fprint+53P ...
		mov	ax, 2
		jmp	__amsg_exit
__fptrap	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__chkstk	proc far		; CODE XREF: __output+6P
		pop	cx
		pop	dx
		mov	bx, sp
		sub	bx, ax
		jb	short loc_2CEC7
		cmp	bx, word_3EE24
		jb	short loc_2CEC7
		mov	sp, bx
		push	dx
		push	cx
		retf
; ---------------------------------------------------------------------------

loc_2CEC7:				; CODE XREF: __chkstk+6j __chkstk+Cj
		mov	ax, word ptr dword_3EE20
		inc	ax
		jnz	short loc_2CED2
		xor	ax, ax
		jmp	__amsg_exit
; ---------------------------------------------------------------------------

loc_2CED2:				; CODE XREF: __chkstk+17j
		push	dx
		push	cx
		jmp	dword_3EE20
__chkstk	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__nullcheck	proc far		; CODE XREF: sub_2CE03+15P
		push	si
		xor	si, si
		mov	cx, 42h	; 'B'
		xor	ah, ah
		cld

loc_2CEE1:				; CODE XREF: __nullcheck+Cj
		lodsb
		xor	ah, al
		loop	loc_2CEE1
		xor	ah, 55h
		jz	short loc_2CEFC
		call	__FF_MSGBANNER
		mov	ax, 1
		push	ax
		call	__NMSG_WRITE
		mov	ax, 1

loc_2CEFC:				; CODE XREF: __nullcheck+11j
		pop	si
		retf
__nullcheck	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__setargv	proc near		; CODE XREF: start+84P
		pop	word ptr dword_3EE26
		pop	word ptr dword_3EE26+2
		mov	dx, 2
		cmp	byte_3EDED, dl
		jz	short loc_2CF38
		mov	es, word_3EDEB
		assume es:nothing
		mov	es, word ptr es:2Ch
		mov	seg_3EE10, es
		xor	ax, ax
		cwd
		mov	cx, 8000h
		xor	di, di

loc_2CF24:				; CODE XREF: __setargv+29j
		repne scasb
		scasb
		jnz	short loc_2CF24
		inc	di
		inc	di
		mov	word_3EE0E, di
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		mov	dx, cx

loc_2CF38:				; CODE XREF: __setargv+Fj
		mov	di, 1
		mov	si, 81h	; 'Å'
		mov	ds, word_3EDEB

loc_2CF42:				; CODE XREF: __setargv+47j
					; __setargv+4Bj ...
		lodsb
		cmp	al, 20h	; ' '
		jz	short loc_2CF42
		cmp	al, 9
		jz	short loc_2CF42
		cmp	al, 0Dh
		jz	short loc_2CFBE
		or	al, al
		jz	short loc_2CFBE
		inc	di

loc_2CF54:				; CODE XREF: __setargv+81j
		dec	si

loc_2CF55:				; CODE XREF: __setargv+71j
					; __setargv+8Bj ...
		lodsb
		cmp	al, 20h	; ' '
		jz	short loc_2CF42
		cmp	al, 9
		jz	short loc_2CF42
		cmp	al, 0Dh
		jz	short loc_2CFBE
		or	al, al
		jz	short loc_2CFBE
		cmp	al, 22h	; '"'
		jz	short loc_2CF8E
		cmp	al, 5Ch	; '\'
		jz	short loc_2CF71
		inc	dx
		jmp	short loc_2CF55
; ---------------------------------------------------------------------------

loc_2CF71:				; CODE XREF: __setargv+6Ej
		xor	cx, cx

loc_2CF73:				; CODE XREF: __setargv+79j
		inc	cx
		lodsb
		cmp	al, 5Ch	; '\'
		jz	short loc_2CF73
		cmp	al, 22h	; '"'
		jz	short loc_2CF81
		add	dx, cx
		jmp	short loc_2CF54
; ---------------------------------------------------------------------------

loc_2CF81:				; CODE XREF: __setargv+7Dj
		mov	ax, cx
		shr	cx, 1
		adc	dx, cx
		test	al, 1
		jnz	short loc_2CF55
		jmp	short loc_2CF8E
; ---------------------------------------------------------------------------

loc_2CF8D:				; CODE XREF: __setargv+B2j
		dec	si

loc_2CF8E:				; CODE XREF: __setargv+6Aj
					; __setargv+8Dj ...
		lodsb
		cmp	al, 0Dh
		jz	short loc_2CFBE
		or	al, al
		jz	short loc_2CFBE
		cmp	al, 22h	; '"'
		jz	short loc_2CF55
		cmp	al, 5Ch	; '\'
		jz	short loc_2CFA2
		inc	dx
		jmp	short loc_2CF8E
; ---------------------------------------------------------------------------

loc_2CFA2:				; CODE XREF: __setargv+9Fj
		xor	cx, cx

loc_2CFA4:				; CODE XREF: __setargv+AAj
		inc	cx
		lodsb
		cmp	al, 5Ch	; '\'
		jz	short loc_2CFA4
		cmp	al, 22h	; '"'
		jz	short loc_2CFB2
		add	dx, cx
		jmp	short loc_2CF8D
; ---------------------------------------------------------------------------

loc_2CFB2:				; CODE XREF: __setargv+AEj
		mov	ax, cx
		shr	cx, 1
		adc	dx, cx
		test	al, 1
		jnz	short loc_2CF8E
		jmp	short loc_2CF55
; ---------------------------------------------------------------------------

loc_2CFBE:				; CODE XREF: __setargv+4Fj
					; __setargv+53j ...
		push	ss
		pop	ds
		mov	argc, di
		add	dx, di
		inc	di
		shl	di, 1
		add	dx, di
		and	dl, 0FEh
		sub	sp, dx
		mov	ax, sp
		mov	argv, ax
		mov	bx, ax
		add	di, bx
		push	ss
		pop	es
		assume es:dseg
		mov	ss:[bx], di
		inc	bx
		inc	bx
		lds	si, dword ptr word_3EE0E

loc_2CFE4:				; CODE XREF: __setargv+EAj
		lodsb
		stosb
		or	al, al
		jnz	short loc_2CFE4
		mov	si, 81h	; 'Å'
		mov	ds, ss:word_3EDEB
		jmp	short loc_2CFF7
; ---------------------------------------------------------------------------

loc_2CFF4:				; CODE XREF: __setargv+119j
					; __setargv+11Dj
		xor	ax, ax
		stosb

loc_2CFF7:				; CODE XREF: __setargv+F4j
					; __setargv+FCj ...
		lodsb
		cmp	al, 20h	; ' '
		jz	short loc_2CFF7
		cmp	al, 9
		jz	short loc_2CFF7
		cmp	al, 0Dh
		jnz	short loc_2D007
		jmp	loc_2D086
; ---------------------------------------------------------------------------

loc_2D007:				; CODE XREF: __setargv+104j
		or	al, al
		jnz	short loc_2D00E
		jmp	short loc_2D086
; ---------------------------------------------------------------------------
		align 2

loc_2D00E:				; CODE XREF: __setargv+10Bj
		mov	ss:[bx], di
		inc	bx
		inc	bx

loc_2D013:				; CODE XREF: __setargv+142j
		dec	si

loc_2D014:				; CODE XREF: __setargv+130j
					; __setargv+14Fj ...
		lodsb
		cmp	al, 20h	; ' '
		jz	short loc_2CFF4
		cmp	al, 9
		jz	short loc_2CFF4
		cmp	al, 0Dh
		jz	short loc_2D083
		or	al, al
		jz	short loc_2D083
		cmp	al, 22h	; '"'
		jz	short loc_2D050
		cmp	al, 5Ch	; '\'
		jz	short loc_2D030
		stosb
		jmp	short loc_2D014
; ---------------------------------------------------------------------------

loc_2D030:				; CODE XREF: __setargv+12Dj
		xor	cx, cx

loc_2D032:				; CODE XREF: __setargv+138j
		inc	cx
		lodsb
		cmp	al, 5Ch	; '\'
		jz	short loc_2D032
		cmp	al, 22h	; '"'
		jz	short loc_2D042
		mov	al, 5Ch	; '\'
		rep stosb
		jmp	short loc_2D013
; ---------------------------------------------------------------------------

loc_2D042:				; CODE XREF: __setargv+13Cj
		mov	al, 5Ch	; '\'
		shr	cx, 1
		rep stosb
		jnb	short loc_2D050
		mov	al, 22h	; '"'
		stosb
		jmp	short loc_2D014
; ---------------------------------------------------------------------------

loc_2D04F:				; CODE XREF: __setargv+176j
		dec	si

loc_2D050:				; CODE XREF: __setargv+129j
					; __setargv+14Aj ...
		lodsb
		cmp	al, 0Dh
		jz	short loc_2D083
		or	al, al
		jz	short loc_2D083
		cmp	al, 22h	; '"'
		jz	short loc_2D014
		cmp	al, 5Ch	; '\'
		jz	short loc_2D064
		stosb
		jmp	short loc_2D050
; ---------------------------------------------------------------------------

loc_2D064:				; CODE XREF: __setargv+161j
		xor	cx, cx

loc_2D066:				; CODE XREF: __setargv+16Cj
		inc	cx
		lodsb
		cmp	al, 5Ch	; '\'
		jz	short loc_2D066
		cmp	al, 22h	; '"'
		jz	short loc_2D076
		mov	al, 5Ch	; '\'
		rep stosb
		jmp	short loc_2D04F
; ---------------------------------------------------------------------------

loc_2D076:				; CODE XREF: __setargv+170j
		mov	al, 5Ch	; '\'
		shr	cx, 1
		rep stosb
		jnb	short loc_2D014
		mov	al, 22h	; '"'
		stosb
		jmp	short loc_2D050
; ---------------------------------------------------------------------------

loc_2D083:				; CODE XREF: __setargv+121j
					; __setargv+125j ...
		xor	ax, ax
		stosb

loc_2D086:				; CODE XREF: __setargv+106j
					; __setargv+10Dj
		push	ss
		pop	ds
		mov	word ptr [bx], 0
		jmp	dword_3EE26
__setargv	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__setenvp	proc far		; CODE XREF: start+7FP
		push	bp
		mov	bp, sp
		push	bp
		mov	ds, word_3EDEB
		xor	cx, cx
		mov	ax, cx
		mov	bp, cx
		mov	di, cx
		dec	cx
		mov	si, word_3B79C
		or	si, si
		jz	short loc_2D0B9
		mov	es, si
		assume es:nothing
		cmp	byte ptr es:0, 0
		jz	short loc_2D0B9

loc_2D0B3:				; CODE XREF: __setenvp+27j
		repne scasb
		inc	bp
		scasb
		jnz	short loc_2D0B3

loc_2D0B9:				; CODE XREF: __setenvp+17j
					; __setenvp+21j
		inc	bp
		xchg	ax, di
		inc	ax
		and	al, 0FEh
		mov	di, bp
		shl	bp, 1
		add	ax, bp
		push	ss
		pop	ds
		push	di
		mov	di, 9
		call	__myalloc
		pop	di
		mov	cx, di
		mov	di, bp
		add	di, ax
		mov	word_3EE0C, bp
		push	ds
		pop	es
		assume es:dseg
		mov	ds, si
		xor	si, si
		dec	cx
		jcxz	short loc_2D0F4

loc_2D0E1:				; CODE XREF: __setenvp+62j
		cmp	word ptr [si], 433Bh
		jz	short loc_2D0EC
		mov	[bp+0],	di
		inc	bp
		inc	bp

loc_2D0EC:				; CODE XREF: __setenvp+55j
					; __setenvp+60j
		lodsb
		stosb
		or	al, al
		jnz	short loc_2D0EC
		loop	loc_2D0E1

loc_2D0F4:				; CODE XREF: __setenvp+4Fj
		mov	[bp+0],	cx
		push	ss
		pop	ds
		pop	bp
		mov	sp, bp
		pop	bp
		retf
__setenvp	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__NMSG_TEXT	proc far		; CODE XREF: __NMSG_WRITE+7P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		push	ds
		pop	es
		mov	dx, [bp+arg_0]
		mov	si, 54C6h

loc_2D10B:				; CODE XREF: __NMSG_TEXT+20j
		lodsw
		cmp	ax, dx
		jz	short loc_2D120
		inc	ax
		xchg	ax, si
		jz	short loc_2D120
		xchg	ax, di
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		mov	si, di
		jmp	short loc_2D10B
; ---------------------------------------------------------------------------

loc_2D120:				; CODE XREF: __NMSG_TEXT+10j
					; __NMSG_TEXT+14j
		xchg	ax, si
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	2
__NMSG_TEXT	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__NMSG_WRITE	proc far		; CODE XREF: start+30P	start+B7P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	di
		push	[bp+arg_0]
		call	__NMSG_TEXT
		or	ax, ax
		jz	short loc_2D14D
		xchg	ax, dx
		mov	di, dx
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		dec	cx
		mov	bx, 2
		mov	ah, 40h
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer

loc_2D14D:				; CODE XREF: __NMSG_WRITE+Ej
		pop	di
		mov	sp, bp
		pop	bp
		retf	2
__NMSG_WRITE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__myalloc	proc near		; CODE XREF: __setenvp+3Ap
		mov	dx, ax
		add	ax, word_3ED7A
		jb	short loc_2D191
		cmp	word_3ED74, ax
		jnb	short loc_2D187
		add	ax, 0Fh
		push	ax
		rcr	ax, 1
		mov	cl, 3
		shr	ax, cl
		mov	cx, ds
		mov	bx, word_3EDEB
		sub	cx, bx
		add	ax, cx
		mov	es, bx
		assume es:nothing
		mov	bx, ax
		mov	ah, 4Ah
		int	21h		; DOS -	2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)
					; ES = segment address of block	to change
					; BX = new size	in paragraphs
		pop	ax
		jb	short loc_2D191
		and	al, 0F0h
		dec	ax
		mov	word_3ED74, ax

loc_2D187:				; CODE XREF: __myalloc+Cj
		xchg	ax, bp
		mov	bp, word_3ED7A
		add	word_3ED7A, dx
		retn
; ---------------------------------------------------------------------------

loc_2D191:				; CODE XREF: __myalloc+6j
					; __myalloc+2Bj
		mov	ax, di
		jmp	__amsg_exit
__myalloc	endp

; ---------------------------------------------------------------------------

__dosret0:
		jb	short loc_2D1AB

loc_2D198:				; CODE XREF: seg010:__dosreturnj
		xor	ax, ax
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

__dosreturn:
		jnb	short loc_2D198
		push	ax
		call	sub_2D1BC
		pop	ax
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR _lseek

__dosretax:				; CODE XREF: _lseek:loc_2DF25j
					; _write:loc_2DF3Bj ...
		jnb	short loc_2D1B2

loc_2D1AB:				; CODE XREF: seg010:__dosret0j
		call	sub_2D1BC
		mov	ax, 0FFFFh
		cwd

loc_2D1B2:				; CODE XREF: _lseek:__dosretaxj
		mov	sp, bp
		pop	bp
		retf
; END OF FUNCTION CHUNK	FOR _lseek

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__maperror	proc far		; CODE XREF: _int86:loc_2E476P
		xor	ah, ah
		call	sub_2D1BC
		retf
__maperror	endp


; =============== S U B	R O U T	I N E =======================================


sub_2D1BC	proc near		; CODE XREF: seg010:0551p
					; _lseek:loc_2D1ABp ...
		mov	byte_3EDF0, al
		or	ah, ah
		jnz	short loc_2D1E6
		cmp	byte_3EDED, 3
		jb	short loc_2D1D7
		cmp	al, 22h	; '"'
		jnb	short loc_2D1DB
		cmp	al, 20h	; ' '
		jb	short loc_2D1D7
		mov	al, 5
		jmp	short loc_2D1DD
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2D1D7:				; CODE XREF: sub_2D1BC+Cj
					; sub_2D1BC+14j
		cmp	al, 13h
		jbe	short loc_2D1DD

loc_2D1DB:				; CODE XREF: sub_2D1BC+10j
		mov	al, 13h

loc_2D1DD:				; CODE XREF: sub_2D1BC+18j
					; sub_2D1BC+1Dj
		mov	bx, 36BAh
		xlat

loc_2D1E1:				; CODE XREF: sub_2D1BC+2Cj
		cbw
		mov	word_3EDE5, ax
		retn
; ---------------------------------------------------------------------------

loc_2D1E6:				; CODE XREF: sub_2D1BC+5j
		mov	al, ah
		jmp	short loc_2D1E1
sub_2D1BC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int flushall(void)
_flushall	proc far		; DATA XREF: dseg:54BAo
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	si, 36D0h
		sub	di, di
		jmp	short loc_2D210
; ---------------------------------------------------------------------------
		align 2

loc_2D1FA:				; CODE XREF: _flushall+2Aj
		test	byte ptr [si+6], 83h
		jz	short loc_2D20D
		push	si		; FILE *
		call	_fflush
		add	sp, 2
		inc	ax
		jz	short loc_2D20D
		inc	di

loc_2D20D:				; CODE XREF: _flushall+14j
					; _flushall+20j
		add	si, 8

loc_2D210:				; CODE XREF: _flushall+Dj
		cmp	word_3EF58, si
		jnb	short loc_2D1FA
		mov	ax, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_flushall	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int printf(const char	*, ...)
_printf		proc far		; CODE XREF: sub_2EA2A+7P
					; sub_2EA2A+16P

var_8		= word ptr -8
var_4		= word ptr -4
arg_0		= word ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	di
		push	si
		mov	si, 36D8h
		lea	ax, [bp+arg_2]
		mov	[bp+var_4], ax
		push	si
		call	__stbuf
		add	sp, 2
		mov	di, ax
		lea	ax, [bp+arg_2]
		push	ax
		push	[bp+arg_0]
		push	si
		call	__output
		add	sp, 6
		mov	[bp+var_8], ax
		push	si		; FILE *
		push	di		; int
		call	__ftbuf
		add	sp, 4
		mov	ax, [bp+var_8]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_printf		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl _flsbuf(int, FILE	*)
__flsbuf	proc far		; CODE XREF: _outc+26P	putpad+20P ...

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
arg_0		= byte ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	di
		push	si
		mov	si, [bp+arg_2]
		mov	al, [si+7]
		cbw
		mov	[bp+var_6], ax
		mov	ax, si
		sub	ax, 36D0h
		mov	cl, 3
		sar	ax, cl
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 3770h
		mov	[bp+var_8], ax
		test	byte ptr [si+6], 83h
		jz	short loc_2D295
		test	byte ptr [si+6], 40h
		jz	short loc_2D2A0

loc_2D295:				; CODE XREF: __flsbuf+2Dj __flsbuf+44j ...
		or	byte ptr [si+6], 20h
		mov	ax, 0FFFFh
		jmp	loc_2D3B7
; ---------------------------------------------------------------------------
		align 2

loc_2D2A0:				; CODE XREF: __flsbuf+33j
		test	byte ptr [si+6], 1
		jnz	short loc_2D295
		or	byte ptr [si+6], 2
		and	byte ptr [si+6], 0EFh
		sub	ax, ax
		mov	[si+2],	ax
		mov	di, ax
		mov	[bp+var_4], di
		test	byte ptr [si+6], 0Ch
		jnz	short loc_2D31F
		mov	bx, si
		sub	bx, 36D0h
		mov	cl, 3
		sar	bx, cl
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+3770h], 1
		jnz	short loc_2D31F
		cmp	si, 36D8h
		jz	short loc_2D2E3
		cmp	si, 36E0h
		jnz	short loc_2D318

loc_2D2E3:				; CODE XREF: __flsbuf+7Bj
		push	[bp+var_6]	; int
		call	_isatty
		add	sp, 2
		or	ax, ax
		jnz	short loc_2D31F
		inc	word_3EE3E
		cmp	si, 36D8h
		jnz	short loc_2D302
		mov	ax, 891Eh
		jmp	short loc_2D305
; ---------------------------------------------------------------------------
		align 2

loc_2D302:				; CODE XREF: __flsbuf+9Aj
		mov	ax, 0AA62h

loc_2D305:				; CODE XREF: __flsbuf+9Fj
		mov	[si+4],	ax
		mov	[si], ax
		mov	bx, [bp+var_8]
		mov	word ptr [bx+2], 200h
		mov	byte ptr [bx], 1
		jmp	short loc_2D31F
; ---------------------------------------------------------------------------
		align 2

loc_2D318:				; CODE XREF: __flsbuf+81j
		push	si
		call	__getbuf
		add	sp, 2

loc_2D31F:				; CODE XREF: __flsbuf+5Cj __flsbuf+75j ...
		test	byte ptr [si+6], 8
		jnz	short loc_2D33E
		mov	bx, si
		sub	bx, 36D0h
		mov	cl, 3
		sar	bx, cl
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+3770h], 1
		jz	short loc_2D392

loc_2D33E:				; CODE XREF: __flsbuf+C3j
		mov	di, [si]
		sub	di, [si+4]
		mov	ax, [si+4]
		inc	ax
		mov	[si], ax
		mov	bx, [bp+var_8]
		mov	ax, [bx+2]
		dec	ax
		mov	[si+2],	ax
		or	di, di
		jle	short loc_2D36C
		push	di
		push	word ptr [si+4]	; void *
		push	[bp+var_6]	; int
		call	_write
		add	sp, 6
		mov	[bp+var_4], ax
		jmp	short loc_2D387
; ---------------------------------------------------------------------------
		align 2

loc_2D36C:				; CODE XREF: __flsbuf+F5j
		mov	bx, [bp+var_6]
		test	byte ptr [bx+3684h], 20h
		jz	short loc_2D387
		mov	ax, 2
		push	ax		; int
		sub	ax, ax
		push	ax
		push	ax		; __int32
		push	bx		; int
		call	_lseek
		add	sp, 8

loc_2D387:				; CODE XREF: __flsbuf+109j
					; __flsbuf+114j
		mov	bx, [si+4]
		mov	al, [bp+arg_0]
		mov	[bx], al
		jmp	short loc_2D3AA
; ---------------------------------------------------------------------------
		align 2

loc_2D392:				; CODE XREF: __flsbuf+DCj
		mov	di, 1
		mov	ax, di
		push	ax
		lea	ax, [bp+arg_0]
		push	ax		; void *
		push	[bp+var_6]	; int
		call	_write
		add	sp, 6
		mov	[bp+var_4], ax

loc_2D3AA:				; CODE XREF: __flsbuf+12Fj
		cmp	[bp+var_4], di
		jz	short loc_2D3B2
		jmp	loc_2D295
; ---------------------------------------------------------------------------

loc_2D3B2:				; CODE XREF: __flsbuf+14Dj
		mov	al, [bp+arg_0]
		sub	ah, ah

loc_2D3B7:				; CODE XREF: __flsbuf+3Cj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
__flsbuf	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__getbuf	proc near		; CODE XREF: __flsbuf+B9p

var_2		= word ptr -2
arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	ax, [bp+arg_0]
		sub	ax, 36D0h
		mov	cl, 3
		sar	ax, cl
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 3770h
		mov	[bp+var_2], ax
		mov	ax, 200h
		push	ax
		call	unknown_libname_2 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic
		add	sp, 2
		mov	bx, [bp+arg_0]
		mov	[bx+4],	ax
		or	ax, ax
		jz	short loc_2D402
		or	byte ptr [bx+6], 8
		mov	bx, [bp+var_2]
		mov	word ptr [bx+2], 200h
		jmp	short loc_2D418
; ---------------------------------------------------------------------------
		align 2

loc_2D402:				; CODE XREF: __getbuf+33j
		mov	bx, [bp+arg_0]
		or	byte ptr [bx+6], 4
		mov	ax, [bp+var_2]
		inc	ax
		mov	[bx+4],	ax
		mov	bx, [bp+var_2]
		mov	word ptr [bx+2], 1

loc_2D418:				; CODE XREF: __getbuf+41j
		mov	bx, [bp+arg_0]
		mov	si, bx
		mov	ax, [si+4]
		mov	[bx], ax
		mov	word ptr [bx+2], 0
		pop	si
		mov	sp, bp
		pop	bp
		retn
__getbuf	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__stbuf		proc far		; CODE XREF: _printf+12P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		mov	si, [bp+arg_0]
		inc	word_3EE3E
		cmp	si, 36D8h
		jnz	short loc_2D448
		mov	[bp+var_2], 891Eh
		jmp	short loc_2D453
; ---------------------------------------------------------------------------
		align 2

loc_2D448:				; CODE XREF: __stbuf+12j
		cmp	si, 36E0h
		jnz	short loc_2D472
		mov	[bp+var_2], 0AA62h

loc_2D453:				; CODE XREF: __stbuf+19j
		test	byte ptr [si+6], 0Ch
		jnz	short loc_2D472
		mov	bx, si
		sub	bx, 36D0h
		mov	cl, 3
		sar	bx, cl
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+3770h], 1
		jz	short loc_2D476

loc_2D472:				; CODE XREF: __stbuf+20j __stbuf+2Bj
		sub	ax, ax
		jmp	short loc_2D4AB
; ---------------------------------------------------------------------------

loc_2D476:				; CODE XREF: __stbuf+44j
		mov	ax, si
		sub	ax, 36D0h
		mov	cl, 3
		sar	ax, cl
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 3770h
		mov	[bp+var_4], ax
		mov	ax, [bp+var_2]
		mov	[si+4],	ax
		mov	[si], ax
		mov	bx, [bp+var_4]
		mov	ax, 200h
		mov	[bx+2],	ax
		mov	[si+2],	ax
		mov	byte ptr [bx], 1
		or	byte ptr [si+6], 2
		mov	ax, 1

loc_2D4AB:				; CODE XREF: __stbuf+48j
		pop	si
		mov	sp, bp
		pop	bp
		retf
__stbuf		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl __far _ftbuf(int,	FILE *)
__ftbuf		proc far		; CODE XREF: _printf+31P

var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		cmp	[bp+arg_0], 0
		jz	short loc_2D51C
		cmp	word ptr [bp+arg_2], 36D8h
		jz	short loc_2D4CB
		cmp	word ptr [bp+arg_2], 36E0h
		jnz	short loc_2D549

loc_2D4CB:				; CODE XREF: __ftbuf+12j
		mov	bx, word ptr [bp+arg_2]
		mov	al, [bx+7]
		cbw
		push	ax		; int
		call	_isatty
		add	sp, 2
		or	ax, ax
		jz	short loc_2D549
		mov	ax, word ptr [bp+arg_2]
		sub	ax, 36D0h
		mov	cl, 3
		sar	ax, cl
		mov	cx, ax
		shl	ax, 1
		add	ax, cx
		shl	ax, 1
		add	ax, 3770h
		mov	[bp+var_2], ax
		push	word ptr [bp+arg_2] ; FILE *
		call	_fflush
		add	sp, 2
		mov	bx, [bp+var_2]
		mov	byte ptr [bx], 0
		mov	word ptr [bx+2], 0
		mov	bx, word ptr [bp+arg_2]
		mov	si, bx
		sub	ax, ax
		mov	[si], ax
		mov	[bx+4],	ax
		jmp	short loc_2D549
; ---------------------------------------------------------------------------
		align 2

loc_2D51C:				; CODE XREF: __ftbuf+Bj
		mov	bx, word ptr [bp+arg_2]
		cmp	word ptr [bx+4], 891Eh
		jz	short loc_2D52D
		cmp	word ptr [bx+4], 0AA62h
		jnz	short loc_2D549

loc_2D52D:				; CODE XREF: __ftbuf+74j
		mov	al, [bx+7]
		cbw
		push	ax		; int
		call	_isatty
		add	sp, 2
		or	ax, ax
		jz	short loc_2D549
		push	word ptr [bp+arg_2] ; FILE *
		call	_fflush
		add	sp, 2

loc_2D549:				; CODE XREF: __ftbuf+19j __ftbuf+2Dj ...
		pop	si
		mov	sp, bp
		pop	bp
		retf
__ftbuf		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl fflush(FILE *)
_fflush		proc far		; CODE XREF: _flushall+17P __ftbuf+4AP ...

var_4		= word ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	si, [bp+arg_0]
		sub	di, di
		mov	al, [si+6]
		and	al, 3
		cmp	al, 2
		jnz	short loc_2D5AC
		test	byte ptr [si+6], 8
		jnz	short loc_2D583
		mov	bx, si
		sub	bx, 36D0h
		mov	cl, 3
		sar	bx, cl
		mov	ax, bx
		shl	bx, 1
		add	bx, ax
		shl	bx, 1
		test	byte ptr [bx+3770h], 1
		jz	short loc_2D5AC

loc_2D583:				; CODE XREF: _fflush+1Aj
		mov	ax, [si]
		sub	ax, [si+4]
		mov	[bp+var_4], ax
		or	ax, ax
		jle	short loc_2D5AC
		push	ax
		push	word ptr [si+4]	; void *
		mov	al, [si+7]
		cbw
		push	ax		; int
		call	_write
		add	sp, 6
		cmp	ax, [bp+var_4]
		jz	short loc_2D5AC
		or	byte ptr [si+6], 20h
		mov	di, 0FFFFh

loc_2D5AC:				; CODE XREF: _fflush+14j _fflush+33j ...
		mov	ax, [si+4]
		mov	[si], ax
		mov	word ptr [si+2], 0
		mov	ax, di
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_fflush		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__output	proc far		; CODE XREF: _printf+24P _sprintf+2CP

var_164		= word ptr -164h
var_162		= byte ptr -162h
var_4		= word ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	ax, 164h
		call	__chkstk
		push	di
		push	si
		mov	si, [bp+arg_2]
		lea	ax, [bp+var_162]
		mov	off_428B6, ax
		mov	ax, [bp+arg_4]
		mov	word_428A6, ax
		mov	ax, [bp+arg_0]
		mov	off_4289A, ax
		mov	word_428B0, 0
		mov	word_428AE, 0
		jmp	loc_2D877
; ---------------------------------------------------------------------------

loc_2D5F0:				; CODE XREF: __output+2BEj
		cmp	byte ptr [si], 25h ; '%'
		jz	short loc_2D5F8
		jmp	loc_2D85A
; ---------------------------------------------------------------------------

loc_2D5F8:				; CODE XREF: __output+35j
		mov	word_428B2, 1
		sub	ax, ax
		mov	word_428A2, ax
		mov	word_4289E, ax
		mov	word_428AC, ax
		mov	word_428A0, ax
		mov	word_428AA, ax
		mov	word_428A8, ax
		mov	word_4289C, ax
		mov	word_42898, ax
		mov	word_428A4, ax
		mov	word_428BC, 20h	; ' '
		cmp	byte ptr [si+1], 30h ; '0'
		jnz	short loc_2D663
		inc	si
		mov	word_428BC, 30h	; '0'
		jmp	short loc_2D663
; ---------------------------------------------------------------------------

loc_2D630:				; CODE XREF: __output+9Fj
		cmp	byte ptr [si], 2Bh ; '+'
		jnz	short loc_2D642
		inc	word_428A2
		mov	word_428A8, 0
		jmp	short loc_2D663
; ---------------------------------------------------------------------------
		align 2

loc_2D642:				; CODE XREF: __output+75j
		cmp	byte ptr [si], 20h ; ' '
		jnz	short loc_2D654
		cmp	word_428A2, 0
		jnz	short loc_2D663
		inc	word_428A8
		jmp	short loc_2D663
; ---------------------------------------------------------------------------

loc_2D654:				; CODE XREF: __output+87j
		inc	word_42898
		jmp	short loc_2D663
; ---------------------------------------------------------------------------

loc_2D65A:				; CODE XREF: __output+B3j
		cmp	byte ptr [si], 2Dh ; '-'
		jnz	short loc_2D630
		inc	word_428A4

loc_2D663:				; CODE XREF: __output+67j __output+70j ...
		inc	si
		mov	al, [si]
		cbw
		push	ax
		push	cs
		call	near ptr flagchar
		add	sp, 2
		or	ax, ax
		jnz	short loc_2D65A
		push	si
		mov	ax, 7148h
		push	ax
		push	cs
		call	near ptr getnum
		add	sp, 4
		mov	si, ax
		cmp	word_428B8, 0
		jge	short loc_2D694
		inc	word_428A4
		mov	ax, word_428B8
		neg	ax
		mov	word_428B8, ax

loc_2D694:				; CODE XREF: __output+C8j
		cmp	byte ptr [si], 2Eh ; '.'
		jnz	short loc_2D6BD
		inc	word_428AA
		inc	si
		push	si
		mov	ax, 7142h
		push	ax
		push	cs
		call	near ptr getnum
		add	sp, 4
		mov	si, ax
		cmp	word_428B2, 0
		jge	short loc_2D6BD
		mov	word_428B2, 1
		dec	word_428AA

loc_2D6BD:				; CODE XREF: __output+D9j __output+F3j
		mov	al, [si]
		cbw
		cmp	ax, 46h	; 'F'
		jz	short loc_2D6F8
		cmp	ax, 4Eh	; 'N'
		jz	short loc_2D700
		cmp	ax, 68h	; 'h'
		jz	short loc_2D6F0
		cmp	ax, 6Ch	; 'l'
		jnz	short loc_2D6DA
		mov	word_428A0, 2

loc_2D6DA:				; CODE XREF: __output+114j
					; __output+138j ...
		cmp	word_428A0, 0
		jnz	short loc_2D6E6
		cmp	byte ptr [si], 4Ch ; 'L'
		jnz	short loc_2D6E7

loc_2D6E6:				; CODE XREF: __output+121j
		inc	si

loc_2D6E7:				; CODE XREF: __output+126j
		cmp	byte ptr [si], 0
		jnz	short loc_2D708
		jmp	loc_2D87F
; ---------------------------------------------------------------------------
		align 2

loc_2D6F0:				; CODE XREF: __output+10Fj
		mov	word_428A0, 1
		jmp	short loc_2D6DA
; ---------------------------------------------------------------------------

loc_2D6F8:				; CODE XREF: __output+105j
		mov	word_428A0, 10h
		jmp	short loc_2D6DA
; ---------------------------------------------------------------------------

loc_2D700:				; CODE XREF: __output+10Aj
		mov	word_428A0, 8
		jmp	short loc_2D6DA
; ---------------------------------------------------------------------------

loc_2D708:				; CODE XREF: __output+12Cj
		mov	al, [si]
		cbw
		mov	[bp+var_164], ax
		cmp	ax, 45h	; 'E'
		jz	short loc_2D71E
		cmp	ax, 47h	; 'G'
		jz	short loc_2D71E
		cmp	ax, 58h	; 'X'
		jnz	short loc_2D727

loc_2D71E:				; CODE XREF: __output+154j
					; __output+159j
		inc	word_4289E
		add	[bp+var_164], 20h ; ' '

loc_2D727:				; CODE XREF: __output+15Ej
		mov	ax, [bp+var_164]
		sub	ax, 63h	; 'c'
		cmp	ax, 15h
		jbe	short loc_2D736
		jmp	loc_2D850
; ---------------------------------------------------------------------------

loc_2D736:				; CODE XREF: __output+173j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_2D896[bx]

loc_2D73E:				; DATA XREF: __output+2EEo
		mov	bx, word_428A6
		mov	bx, [bx]
		mov	ax, word_428AE
		mov	[bx], ax

loc_2D749:				; CODE XREF: __output+26Cj
		add	word_428A6, 2
		jmp	loc_2D8C2
; ---------------------------------------------------------------------------
		align 2

loc_2D752:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2FCo
		inc	word_428AC

loc_2D756:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2DAo ...
		mov	word_42898, 0
		mov	ax, 0Ah

loc_2D75F:				; CODE XREF: __output+1AFj
					; __output+273j
		push	ax
		push	cs
		call	near ptr iprint

loc_2D764:				; CODE XREF: __output+27Dj
					; __output+28Ej
		add	sp, 2
		jmp	loc_2D8C2
; ---------------------------------------------------------------------------

loc_2D76A:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2F0o
		mov	ax, 8
		jmp	short loc_2D75F
; ---------------------------------------------------------------------------
		align 2

loc_2D770:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2F2o
		inc	word_4289C
		inc	word_4289E
		cmp	word_428AA, 0
		jnz	short loc_2D788
		mov	word_428B4, 1
		jmp	short loc_2D78E
; ---------------------------------------------------------------------------
		align 2

loc_2D788:				; CODE XREF: __output+1BFj
		mov	word_428B4, 0

loc_2D78E:				; CODE XREF: __output+1C7j
		inc	word_428AA
		mov	word_428B2, 4
		cmp	word_428A0, 8
		jnz	short loc_2D7A2
		jmp	loc_2D82E
; ---------------------------------------------------------------------------

loc_2D7A2:				; CODE XREF: __output+1DFj
		sub	ax, ax
		mov	word_428A0, ax
		mov	[bp+var_4], ax
		cmp	word_428B8, ax
		jz	short loc_2D7D7
		mov	ax, word_428B8
		mov	[bp+var_4], ax
		cmp	word_428A4, 0
		jz	short loc_2D7C6
		mov	word_428B8, 0
		jmp	short loc_2D7D7
; ---------------------------------------------------------------------------
		align 2

loc_2D7C6:				; CODE XREF: __output+1FDj
		sub	word_428B8, 5
		mov	ax, word_428B8
		or	ax, ax
		jge	short loc_2D7D4
		sub	ax, ax

loc_2D7D4:				; CODE XREF: __output+212j
		mov	word_428B8, ax

loc_2D7D7:				; CODE XREF: __output+1F0j
					; __output+205j
		add	word_428A6, 2
		mov	ax, 10h
		push	ax
		push	cs
		call	near ptr iprint
		add	sp, 2
		mov	ax, 3Ah	; ':'
		push	ax
		push	cs
		call	near ptr _outc
		add	sp, 2
		cmp	[bp+var_4], 0
		jz	short loc_2D81A
		cmp	word_428A4, 0
		jz	short loc_2D814
		mov	ax, [bp+var_4]
		sub	ax, 5
		mov	word_428B8, ax
		or	ax, ax
		jge	short loc_2D80E
		sub	ax, ax

loc_2D80E:				; CODE XREF: __output+24Cj
		mov	word_428B8, ax
		jmp	short loc_2D81A
; ---------------------------------------------------------------------------
		align 2

loc_2D814:				; CODE XREF: __output+23Fj
		mov	word_428B8, 0

loc_2D81A:				; CODE XREF: __output+238j
					; __output+253j
		sub	word_428A6, 4
		mov	ax, 10h
		push	ax
		push	cs
		call	near ptr iprint
		add	sp, 2
		jmp	loc_2D749
; ---------------------------------------------------------------------------
		align 2

loc_2D82E:				; CODE XREF: __output+17Bj
					; __output+1E1j
					; DATA XREF: ...
		mov	ax, 10h
		jmp	loc_2D75F
; ---------------------------------------------------------------------------

loc_2D834:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2F8o
		sub	ax, ax

loc_2D836:				; CODE XREF: __output+283j
		push	ax
		push	cs
		call	near ptr sprint
		jmp	loc_2D764
; ---------------------------------------------------------------------------

loc_2D83E:				; CODE XREF: __output+17Bj
					; DATA XREF: __output:off_2D896o
		mov	ax, 1
		jmp	short loc_2D836
; ---------------------------------------------------------------------------
		align 2

loc_2D844:				; CODE XREF: __output+17Bj
					; DATA XREF: __output+2DCo ...
		push	[bp+var_164]
		push	cs
		call	near ptr fprint
; ---------------------------------------------------------------------------
		jmp	loc_2D764
; ---------------------------------------------------------------------------
		align 2

loc_2D850:				; CODE XREF: __output+175j
					; __output+17Bj
					; DATA XREF: ...
		cmp	word_428A0, 0
		jz	short loc_2D85A
		mov	ax, si
		dec	si

loc_2D85A:				; CODE XREF: __output+37j
					; __output+297j
		mov	di, si

loc_2D85C:				; CODE XREF: __output+2A7j
		inc	di
		cmp	byte ptr [di], 0
		jz	short loc_2D867
		cmp	byte ptr [di], 25h ; '%'
		jnz	short loc_2D85C

loc_2D867:				; CODE XREF: __output+2A2j
		mov	ax, di
		sub	ax, si
		push	ax
		push	ds
		push	si
		push	cs
		call	near ptr putbuf
		add	sp, 6
		mov	si, di

loc_2D877:				; CODE XREF: __output+2Fj
					; __output+31Fj
		cmp	byte ptr [si], 0
		jz	short loc_2D87F
		jmp	loc_2D5F0
; ---------------------------------------------------------------------------

loc_2D87F:				; CODE XREF: __output+12Ej
					; __output+2BCj
		cmp	word_428AE, 0
		jnz	short loc_2D8E0
		mov	bx, off_4289A
		test	byte ptr [bx+6], 20h
		jz	short loc_2D8E0

loc_2D890:				; CODE XREF: __output+31Aj
		mov	ax, 0FFFFh
		jmp	short loc_2D8E3
; ---------------------------------------------------------------------------
		align 2
off_2D896	dw offset loc_2D83E	; DATA XREF: __output+17Br
		dw offset loc_2D756
		dw offset loc_2D844
		dw offset loc_2D844
		dw offset loc_2D844
		dw offset loc_2D850
		dw offset loc_2D756
		dw offset loc_2D850
		dw offset loc_2D850
		dw offset loc_2D850
		dw offset loc_2D850
		dw offset loc_2D73E
		dw offset loc_2D76A
		dw offset loc_2D770
		dw offset loc_2D850
		dw offset loc_2D850
		dw offset loc_2D834
		dw offset loc_2D850
		dw offset loc_2D752
		dw offset loc_2D850
		dw offset loc_2D850
		dw offset loc_2D82E
; ---------------------------------------------------------------------------

loc_2D8C2:				; CODE XREF: __output+190j
					; __output+1A9j
		cmp	word_428B0, 0
		jz	short loc_2D8DC
		cmp	word_428AE, 0
		jnz	short loc_2D8E0
		mov	bx, off_4289A
		test	byte ptr [bx+6], 20h
		jnz	short loc_2D890
		jmp	short loc_2D8E0
; ---------------------------------------------------------------------------

loc_2D8DC:				; CODE XREF: __output+309j
		inc	si
		jmp	short loc_2D877
; ---------------------------------------------------------------------------
		align 2

loc_2D8E0:				; CODE XREF: __output+2C6j
					; __output+2D0j ...
		mov	ax, word_428AE

loc_2D8E3:				; CODE XREF: __output+2D5j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
__output	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

iprint		proc far		; CODE XREF: __output+1A3p
					; __output+223p ...

var_18		= byte ptr -18h
var_C		= word ptr -0Ch
var_8		= word ptr -8
var_4		= dword	ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	di
		push	si
		cmp	[bp+arg_0], 0Ah
		jz	short loc_2D8FC
		inc	word_428AC

loc_2D8FC:				; CODE XREF: iprint+Cj
		cmp	word_428A0, 2
		jz	short loc_2D90A
		cmp	word_428A0, 10h
		jnz	short loc_2D920

loc_2D90A:				; CODE XREF: iprint+17j
		mov	bx, word_428A6
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		add	word_428A6, 4
		jmp	short loc_2D94A
; ---------------------------------------------------------------------------

loc_2D920:				; CODE XREF: iprint+1Ej
		cmp	word_428AC, 0
		jz	short loc_2D938
		mov	bx, word_428A6
		mov	ax, [bx]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], 0
		jmp	short loc_2D945
; ---------------------------------------------------------------------------
		align 2

loc_2D938:				; CODE XREF: iprint+3Bj
		mov	bx, word_428A6
		mov	ax, [bx]
		cwd
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx

loc_2D945:				; CODE XREF: iprint+4Bj
		add	word_428A6, 2

loc_2D94A:				; CODE XREF: iprint+34j
		cmp	word_42898, 0
		jz	short loc_2D95E
		mov	ax, word ptr [bp+var_4]
		or	ax, word ptr [bp+var_4+2]
		jz	short loc_2D95E
		mov	ax, [bp+arg_0]
		jmp	short loc_2D960
; ---------------------------------------------------------------------------

loc_2D95E:				; CODE XREF: iprint+65j iprint+6Dj
		sub	ax, ax

loc_2D960:				; CODE XREF: iprint+72j
		mov	word_428BA, ax
		mov	si, off_428B6
		cmp	word_428AC, 0
		jnz	short loc_2D998
		cmp	word ptr [bp+var_4+2], 0
		jge	short loc_2D998
		cmp	[bp+arg_0], 0Ah
		jnz	short loc_2D991
		mov	byte ptr [si], 2Dh ; '-'
		inc	si
		mov	ax, word ptr [bp+var_4]
		mov	dx, word ptr [bp+var_4+2]
		neg	ax
		adc	dx, 0
		neg	dx
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx

loc_2D991:				; CODE XREF: iprint+8Ej
		mov	[bp+var_8], 1
		jmp	short loc_2D99D
; ---------------------------------------------------------------------------

loc_2D998:				; CODE XREF: iprint+82j iprint+88j
		mov	[bp+var_8], 0

loc_2D99D:				; CODE XREF: iprint+ACj
		lea	ax, [bp+var_18]
		mov	di, ax
		push	[bp+arg_0]
		push	di		; char *
		push	word ptr [bp+var_4+2]
		push	word ptr [bp+var_4] ; unsigned __int32
		call	far ptr	_ultoa
		add	sp, 8
		cmp	word_428AA, 0
		jz	short loc_2D9DE
		push	di		; char *
		call	_strlen
		add	sp, 2
		mov	cx, word_428B2
		sub	cx, ax
		mov	[bp+var_C], cx
		jmp	short loc_2D9D4
; ---------------------------------------------------------------------------
		align 2

loc_2D9D0:				; CODE XREF: iprint+EFj
		mov	byte ptr [si], 30h ; '0'
		inc	si

loc_2D9D4:				; CODE XREF: iprint+E3j
		mov	ax, cx
		dec	cx
		or	ax, ax
		jg	short loc_2D9D0
		mov	[bp+var_C], cx

loc_2D9DE:				; CODE XREF: iprint+CFj
		mov	cx, word_4289E

loc_2D9E2:				; CODE XREF: iprint+10Dj
		mov	al, [di]
		mov	[si], al
		or	cx, cx
		jz	short loc_2D9F1
		cmp	al, 61h	; 'a'
		jl	short loc_2D9F1
		sub	byte ptr [si], 20h ; ' '

loc_2D9F1:				; CODE XREF: iprint+FEj iprint+102j
		inc	si
		inc	di
		cmp	byte ptr [di-1], 0
		jnz	short loc_2D9E2
		cmp	word_428AC, 0
		jnz	short loc_2DA14
		mov	ax, word_428A2
		or	ax, word_428A8
		jz	short loc_2DA14
		cmp	[bp+var_8], 0
		jnz	short loc_2DA14
		mov	ax, 1
		jmp	short loc_2DA16
; ---------------------------------------------------------------------------

loc_2DA14:				; CODE XREF: iprint+114j iprint+11Dj ...
		sub	ax, ax

loc_2DA16:				; CODE XREF: iprint+128j
		push	ax
		push	cs
		call	near ptr _out
		add	sp, 2
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
iprint		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

sprint		proc far		; CODE XREF: __output+27Ap

var_E		= dword	ptr -0Eh
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		cmp	[bp+arg_0], 0
		jz	short loc_2DA46
		mov	si, 1
		mov	ax, word_428A6
		mov	[bp+var_8], ax
		mov	[bp+var_6], ds
		add	word_428A6, 2
		jmp	loc_2DAD7
; ---------------------------------------------------------------------------

loc_2DA46:				; CODE XREF: sprint+Cj
		cmp	word_428A0, 10h
		jnz	short loc_2DA64
		mov	bx, word_428A6
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		add	word_428A6, 4
		jmp	short loc_2DA78
; ---------------------------------------------------------------------------
		align 2

loc_2DA64:				; CODE XREF: sprint+27j
		mov	bx, word_428A6
		mov	ax, [bx]
		mov	[bp+var_4], ax
		mov	[bp+var_8], ax
		mov	[bp+var_6], ds
		add	word_428A6, 2

loc_2DA78:				; CODE XREF: sprint+3Dj
		cmp	word_428A0, 10h
		jnz	short loc_2DA8C
		mov	ax, [bp+var_8]
		or	ax, [bp+var_6]
		jnz	short loc_2DA9B
		mov	ax, 37EAh
		jmp	short loc_2DA95
; ---------------------------------------------------------------------------

loc_2DA8C:				; CODE XREF: sprint+59j
		cmp	[bp+var_4], 0
		jnz	short loc_2DA9B
		mov	ax, 37F1h

loc_2DA95:				; CODE XREF: sprint+66j
		mov	[bp+var_8], ax
		mov	[bp+var_6], ds

loc_2DA9B:				; CODE XREF: sprint+61j sprint+6Cj
		mov	ax, [bp+var_8]
		mov	dx, [bp+var_6]
		mov	word ptr [bp+var_E], ax
		mov	word ptr [bp+var_E+2], dx
		sub	si, si
		cmp	word_428AA, si
		jz	short loc_2DACB
		mov	cx, word_428B2
		jmp	short loc_2DAC3
; ---------------------------------------------------------------------------
		align 2

loc_2DAB6:				; CODE XREF: sprint+A3j
		les	bx, [bp+var_E]
		inc	word ptr [bp+var_E]
		cmp	byte ptr es:[bx], 0
		jz	short loc_2DAD7
		inc	si

loc_2DAC3:				; CODE XREF: sprint+8Fj
		cmp	cx, si
		jle	short loc_2DAD7
		jmp	short loc_2DAB6
; ---------------------------------------------------------------------------
		align 2

loc_2DACA:				; CODE XREF: sprint+B1j
		inc	si

loc_2DACB:				; CODE XREF: sprint+89j
		les	bx, [bp+var_E]
		inc	word ptr [bp+var_E]
		cmp	byte ptr es:[bx], 0
		jnz	short loc_2DACA

loc_2DAD7:				; CODE XREF: sprint+1Fj sprint+9Cj ...
		mov	di, word_428B8
		sub	di, si
		cmp	word_428A4, 0
		jnz	short loc_2DAEC
		push	di
		push	cs
		call	near ptr putpad
		add	sp, 2

loc_2DAEC:				; CODE XREF: sprint+BEj
		push	si
		push	[bp+var_6]
		push	[bp+var_8]
		push	cs
		call	near ptr putbuf
		add	sp, 6
		cmp	word_428A4, 0
		jz	short loc_2DB09
		push	di
		push	cs
		call	near ptr putpad
		add	sp, 2

loc_2DB09:				; CODE XREF: sprint+DBj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sprint		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function noreturn	static bp-based	frame

fprint		proc far		; CODE XREF: __output+28Bp

var_4		= byte ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	ax, word_428A6
		mov	[bp+var_2], ax
		cmp	[bp+arg_0], 67h	; 'g'
		jz	short loc_2DB28
		cmp	[bp+arg_0], 47h	; 'G'
		jnz	short loc_2DB2C

loc_2DB28:				; CODE XREF: fprint+10j
		mov	al, 1
		jmp	short loc_2DB2E
; ---------------------------------------------------------------------------

loc_2DB2C:				; CODE XREF: fprint+16j
		sub	al, al

loc_2DB2E:				; CODE XREF: fprint+1Aj
		mov	[bp+var_4], al
		cmp	word_428AA, 0
		jnz	short loc_2DB3E
		mov	word_428B2, 6

loc_2DB3E:				; CODE XREF: fprint+26j
		cmp	[bp+var_4], 0
		jz	short loc_2DB51
		cmp	word_428B2, 0
		jnz	short loc_2DB51
		mov	word_428B2, 1

loc_2DB51:				; CODE XREF: fprint+32j fprint+39j
		push	word_4289E
		push	word_428B2
		push	[bp+arg_0]
		push	off_428B6
		push	[bp+var_2]
		call	off_3EF84
fprint		endp ; sp-analysis failed

		add	sp, 0Ah
		cmp	byte ptr [bp-4], 0
		jz	short loc_2DB82
		cmp	word_42898, 0
		jnz	short loc_2DB82
		push	off_428B6
		call	off_3EF88
		add	sp, 2

loc_2DB82:				; CODE XREF: seg010:0F1Ej seg010:0F25j
		cmp	word_42898, 0
		jz	short loc_2DB9B
		cmp	word_428B2, 0
		jnz	short loc_2DB9B
		push	off_428B6
		call	off_3EF90
		add	sp, 2

loc_2DB9B:				; CODE XREF: seg010:0F37j seg010:0F3Ej
		add	word_428A6, 8
		mov	word_428BA, 0
		mov	ax, word_428A2
		or	ax, word_428A8
		jz	short loc_2DBC2
		push	word ptr [bp-2]
		call	off_3EF94
		add	sp, 2
		or	ax, ax
		jz	short loc_2DBC2
		mov	ax, 1
		jmp	short loc_2DBC4
; ---------------------------------------------------------------------------

loc_2DBC2:				; CODE XREF: seg010:0F5Dj seg010:0F6Bj
		sub	ax, ax

loc_2DBC4:				; CODE XREF: seg010:0F70j
		push	ax
		push	cs
		call	near ptr _out
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

_outc		proc far		; CODE XREF: __output+22Ep _out+5Fp ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		cmp	word_428B0, 0
		jnz	short loc_2DC0A
		mov	bx, off_4289A
		dec	word ptr [bx+2]
		js	short loc_2DBF0
		mov	al, byte ptr [bp+arg_0]
		mov	si, [bx]
		inc	word ptr [bx]
		mov	[si], al
		sub	ah, ah
		jmp	short loc_2DBFC
; ---------------------------------------------------------------------------
		align 2

loc_2DBF0:				; CODE XREF: _outc+12j
		push	bx		; FILE *
		push	[bp+arg_0]	; int
		call	__flsbuf
		add	sp, 4

loc_2DBFC:				; CODE XREF: _outc+1Fj
		inc	ax
		jnz	short loc_2DC06
		inc	word_428B0
		jmp	short loc_2DC0A
; ---------------------------------------------------------------------------
		align 2

loc_2DC06:				; CODE XREF: _outc+2Fj
		inc	word_428AE

loc_2DC0A:				; CODE XREF: _outc+9j _outc+35j
		pop	si
		pop	bp
		retf
_outc		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

putpad		proc far		; CODE XREF: sprint+C2p sprint+DFp ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	word_428B0, 0
		jnz	short loc_2DC68
		mov	si, [bp+arg_0]
		or	si, si
		jle	short loc_2DC68
		jmp	short loc_2DC3D
; ---------------------------------------------------------------------------

loc_2DC26:				; CODE XREF: putpad+3Dj
		push	off_4289A	; FILE *
		push	word_428BC	; int
		call	__flsbuf
		add	sp, 4

loc_2DC36:				; CODE XREF: putpad+4Aj
		inc	ax
		jnz	short loc_2DC3D
		inc	word_428B0

loc_2DC3D:				; CODE XREF: putpad+16j putpad+29j
		mov	ax, si
		dec	si
		or	ax, ax
		jle	short loc_2DC5A
		mov	bx, off_4289A
		dec	word ptr [bx+2]
		js	short loc_2DC26
		mov	al, byte ptr word_428BC
		mov	di, [bx]
		inc	word ptr [bx]
		mov	[di], al
		sub	ah, ah
		jmp	short loc_2DC36
; ---------------------------------------------------------------------------

loc_2DC5A:				; CODE XREF: putpad+34j
		cmp	word_428B0, 0
		jnz	short loc_2DC68
		mov	ax, [bp+arg_0]
		add	word_428AE, ax

loc_2DC68:				; CODE XREF: putpad+Dj	putpad+14j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
putpad		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

putbuf		proc far		; CODE XREF: __output+2B1p sprint+D0p	...

arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		mov	si, [bp+arg_4]
		cmp	word_428B0, 0
		jnz	short loc_2DCD2
		jmp	short loc_2DCA0
; ---------------------------------------------------------------------------

loc_2DC82:				; CODE XREF: putbuf+40j
		push	off_4289A	; FILE *
		les	bx, [bp+arg_0]
		mov	al, es:[bx]
		cbw
		push	ax		; int
		call	__flsbuf
		add	sp, 4

loc_2DC96:				; CODE XREF: putbuf+54j
		inc	ax
		jnz	short loc_2DC9D
		inc	word_428B0

loc_2DC9D:				; CODE XREF: putbuf+29j
		inc	word ptr [bp+arg_0]

loc_2DCA0:				; CODE XREF: putbuf+12j
		mov	ax, si
		dec	si
		or	ax, ax
		jz	short loc_2DCC4
		mov	bx, off_4289A
		dec	word ptr [bx+2]
		js	short loc_2DC82
		les	bx, [bp+arg_0]
		mov	al, es:[bx]
		mov	bx, off_4289A
		mov	di, [bx]
		inc	word ptr [bx]
		mov	[di], al
		sub	ah, ah
		jmp	short loc_2DC96
; ---------------------------------------------------------------------------

loc_2DCC4:				; CODE XREF: putbuf+37j
		cmp	word_428B0, 0
		jnz	short loc_2DCD2
		mov	ax, [bp+arg_4]
		add	word_428AE, ax

loc_2DCD2:				; CODE XREF: putbuf+10j putbuf+5Bj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
putbuf		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

_out		proc far		; CODE XREF: iprint+12Ep seg010:0F76p

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		mov	si, off_428B6
		sub	ax, ax
		mov	[bp+var_4], ax
		mov	[bp+var_6], ax
		cmp	word_428BC, 30h	; '0'
		jnz	short loc_2DD0B
		cmp	word_428AA, ax
		jz	short loc_2DD0B
		cmp	word_4289C, ax
		jz	short loc_2DD05
		cmp	word_428B4, ax
		jnz	short loc_2DD0B

loc_2DD05:				; CODE XREF: _out+25j
		mov	word_428BC, 20h	; ' '

loc_2DD0B:				; CODE XREF: _out+19j _out+1Fj ...
		mov	di, word_428B8
		push	si		; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_8], ax
		sub	di, ax
		sub	di, [bp+arg_0]
		cmp	word_428A4, 0
		jnz	short loc_2DD40
		cmp	byte ptr [si], 2Dh ; '-'
		jnz	short loc_2DD40
		cmp	word_428BC, 30h	; '0'
		jnz	short loc_2DD40
		lodsb
		cbw
		push	ax
		push	cs
		call	near ptr _outc
		add	sp, 2
		dec	[bp+var_8]

loc_2DD40:				; CODE XREF: _out+4Dj _out+52j ...
		cmp	word_428BC, 30h	; '0'
		jz	short loc_2DD52
		or	di, di
		jle	short loc_2DD52
		cmp	word_428A4, 0
		jz	short loc_2DD6D

loc_2DD52:				; CODE XREF: _out+6Dj _out+71j
		cmp	[bp+arg_0], 0
		jz	short loc_2DD5F
		inc	[bp+var_6]
		push	cs
		call	near ptr putsign

loc_2DD5F:				; CODE XREF: _out+7Ej
		cmp	word_428BA, 0
		jz	short loc_2DD6D
		inc	[bp+var_4]
		push	cs
		call	near ptr putprefix

loc_2DD6D:				; CODE XREF: _out+78j _out+8Cj
		cmp	word_428A4, 0
		jnz	short loc_2DD9D
		push	di
		push	cs
		call	near ptr putpad
		add	sp, 2
		cmp	[bp+arg_0], 0
		jz	short loc_2DD8C
		cmp	[bp+var_6], 0
		jnz	short loc_2DD8C
		push	cs
		call	near ptr putsign

loc_2DD8C:				; CODE XREF: _out+A8j _out+AEj
		cmp	word_428BA, 0
		jz	short loc_2DD9D
		cmp	[bp+var_4], 0
		jnz	short loc_2DD9D
		push	cs
		call	near ptr putprefix

loc_2DD9D:				; CODE XREF: _out+9Aj _out+B9j ...
		push	[bp+var_8]
		push	ds
		push	si
		push	cs
		call	near ptr putbuf
		add	sp, 6
		cmp	word_428A4, 0
		jz	short loc_2DDBE
		mov	word_428BC, 20h	; ' '
		push	di
		push	cs
		call	near ptr putpad
		add	sp, 2

loc_2DDBE:				; CODE XREF: _out+D6j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_out		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static

putsign		proc far		; CODE XREF: _out+84p _out+B1p
		cmp	word_428A2, 0
		jz	short loc_2DDD0
		mov	ax, 2Bh	; '+'
		jmp	short loc_2DDD3
; ---------------------------------------------------------------------------

loc_2DDD0:				; CODE XREF: putsign+5j
		mov	ax, 20h	; ' '

loc_2DDD3:				; CODE XREF: putsign+Aj
		push	ax
		push	cs
		call	near ptr _outc
		add	sp, 2
		retf
putsign		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static

putprefix	proc far		; CODE XREF: _out+92p _out+C2p
		mov	ax, 30h	; '0'
		push	ax
		push	cs
		call	near ptr _outc
		add	sp, 2
		cmp	word_428BA, 10h
		jnz	short locret_2DE05
		cmp	word_4289E, 0
		jz	short loc_2DDFA
		mov	ax, 58h	; 'X'
		jmp	short loc_2DDFD
; ---------------------------------------------------------------------------

loc_2DDFA:				; CODE XREF: putprefix+17j
		mov	ax, 78h	; 'x'

loc_2DDFD:				; CODE XREF: putprefix+1Cj
		push	ax
		push	cs
		call	near ptr _outc
		add	sp, 2

locret_2DE05:				; CODE XREF: putprefix+10j
		retf
putprefix	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

getnum		proc far		; CODE XREF: __output+BBp __output+E6p

var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	si, [bp+arg_2]
		mov	[bp+var_2], 1
		cmp	byte ptr [si], 2Ah ; '*'
		jnz	short loc_2DE2A
		mov	bx, word_428A6
		mov	di, [bx]
		add	word_428A6, 2
		inc	si
		jmp	short loc_2DE71
; ---------------------------------------------------------------------------
		align 2

loc_2DE2A:				; CODE XREF: getnum+13j
		cmp	byte ptr [si], 2Dh ; '-'
		jnz	short loc_2DE35
		mov	[bp+var_2], 0FFFFh
		inc	si

loc_2DE35:				; CODE XREF: getnum+27j
		sub	di, di
		cmp	byte ptr [si], 30h ; '0'
		jl	short loc_2DE71
		cmp	byte ptr [si], 39h ; '9'
		jg	short loc_2DE71
		cmp	word_428AA, di
		jnz	short loc_2DE52
		cmp	byte ptr [si], 30h ; '0'
		jnz	short loc_2DE52
		mov	word_428BC, 30h	; '0'

loc_2DE52:				; CODE XREF: getnum+3Fj getnum+44j ...
		mov	al, [si]
		cbw
		mov	cx, di
		shl	cx, 1
		shl	cx, 1
		add	cx, di
		shl	cx, 1
		add	cx, ax
		sub	cx, 30h	; '0'
		mov	di, cx
		inc	si
		cmp	byte ptr [si], 30h ; '0'
		jl	short loc_2DE71
		cmp	byte ptr [si], 39h ; '9'
		jle	short loc_2DE52

loc_2DE71:				; CODE XREF: getnum+21j getnum+34j ...
		mov	ax, [bp+var_2]
		imul	di
		mov	di, ax
		mov	bx, [bp+arg_0]
		mov	[bx], di
		mov	ax, si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
getnum		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function static bp-based frame

flagchar	proc far		; CODE XREF: __output+ABp

arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	si, 37F8h
		mov	cl, [bp+arg_0]
		jmp	short loc_2DE97
; ---------------------------------------------------------------------------
		align 2

loc_2DE96:				; CODE XREF: flagchar+18j
		inc	si

loc_2DE97:				; CODE XREF: flagchar+Dj
		cmp	byte ptr [si], 0
		jz	short loc_2DEA6
		cmp	cl, [si]
		jnz	short loc_2DE96
		mov	ax, 1
		jmp	short loc_2DEA8
; ---------------------------------------------------------------------------
		align 2

loc_2DEA6:				; CODE XREF: flagchar+14j
		sub	ax, ax

loc_2DEA8:				; CODE XREF: flagchar+1Dj
		pop	si
		mov	sp, bp
		pop	bp
		retf
flagchar	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; __int32 __cdecl lseek(int, __int32, int)
_lseek		proc far		; CODE XREF: __flsbuf+11FP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

; FUNCTION CHUNK AT 0559 SIZE 0000000D BYTES

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	bx, [bp+arg_0]
		cmp	bx, word_3EDF2
		jb	short loc_2DEC2
		mov	ax, 900h
		jmp	short loc_2DEEC
; ---------------------------------------------------------------------------

loc_2DEC2:				; CODE XREF: _lseek+Dj
		test	[bp+arg_6], 8000h
		jz	short loc_2DF11
		cmp	[bp+arg_8], 0
		jz	short loc_2DEE9
		xor	cx, cx
		mov	dx, cx
		mov	ax, 4201h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from present location
		jb	short loc_2DF25
		test	[bp+arg_8], 2
		jnz	short loc_2DEEF
		add	ax, [bp+arg_2]
		adc	dx, [bp+arg_6]
		jns	short loc_2DF11

loc_2DEE9:				; CODE XREF: _lseek+1Fj _lseek+61j
		mov	ax, 1600h

loc_2DEEC:				; CODE XREF: _lseek+12j
		stc
		jmp	short loc_2DF25
; ---------------------------------------------------------------------------

loc_2DEEF:				; CODE XREF: _lseek+31j
		mov	[bp+var_2], dx
		mov	[bp+var_4], ax
		mov	dx, cx
		mov	ax, 4202h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from end of file
		add	ax, [bp+arg_2]
		adc	dx, [bp+arg_6]
		jns	short loc_2DF11
		mov	cx, [bp+var_2]
		mov	dx, [bp+var_4]
		mov	ax, 4200h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from beginning of	file
		jmp	short loc_2DEE9
; ---------------------------------------------------------------------------

loc_2DF11:				; CODE XREF: _lseek+19j _lseek+39j ...
		mov	dx, [bp+arg_2]
		mov	cx, [bp+arg_6]
		mov	al, byte ptr [bp+arg_8]
		mov	ah, 42h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method:
					; 0-from beginnig,1-from current,2-from	end
		jb	short loc_2DF25
		and	byte ptr [bx+3684h], 0FDh

loc_2DF25:				; CODE XREF: _lseek+2Aj _lseek+3Fj ...
		jmp	__dosretax
_lseek		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl write(int, const void *, unsigned	int)
_write		proc far		; CODE XREF: __flsbuf+FEP
					; __flsbuf+13FP ...

var_8		= word ptr -8
var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  0Ah

; FUNCTION CHUNK AT 13CE SIZE 00000034 BYTES

		push	bp
		mov	bp, sp
		sub	sp, 8
		mov	bx, [bp+arg_2]
		cmp	bx, word_3EDF2
		jb	short loc_2DF3E
		mov	ax, 900h
		stc

loc_2DF3B:				; CODE XREF: _write+26j
		jmp	__dosretax
; ---------------------------------------------------------------------------

loc_2DF3E:				; CODE XREF: _write+Dj
		test	byte ptr [bx+3684h], 20h
		jz	short loc_2DF50
		mov	ax, 4202h
		xor	cx, cx
		mov	dx, cx
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from end of file
		jb	short loc_2DF3B

loc_2DF50:				; CODE XREF: _write+1Bj
		test	byte ptr [bx+3684h], 80h
		jz	short loc_2DFC7
		mov	dx, [bp+8]
		push	ds
		pop	es
		assume es:dseg
		xor	ax, ax
		mov	[bp+var_2], ax
		mov	[bp+var_4], ax
		cld
		push	di
		push	si
		mov	di, dx
		mov	si, dx
		mov	[bp+var_8], sp
		mov	cx, [bp+arg_4]
		jcxz	short loc_2DFC9
		mov	al, 0Ah
		repne scasb
		jnz	short loc_2DFC5
		call	_stackavail
		cmp	ax, 0A8h ; '®'
		jbe	short loc_2DFCB
		sub	sp, 2
		mov	bx, sp
		mov	dx, 200h
		cmp	ax, 228h
		jnb	short loc_2DF93
		mov	dx, 80h	; 'Ä'

loc_2DF93:				; CODE XREF: _write+66j
		sub	sp, dx
		mov	dx, sp
		mov	di, dx
		push	ss
		pop	es
		mov	cx, [bp+arg_4]

loc_2DF9E:				; CODE XREF: _write+80j
		lodsb
		cmp	al, 0Ah
		jz	short loc_2DFAF

loc_2DFA3:				; CODE XREF: _write+96j
		cmp	di, bx
		jz	short loc_2DFC0

loc_2DFA7:				; CODE XREF: _write+9Bj
		stosb
		loop	loc_2DF9E
		call	near ptr sub_2DFD0
		jmp	short loc_2E010
; ---------------------------------------------------------------------------

loc_2DFAF:				; CODE XREF: _write+79j
		mov	al, 0Dh
		cmp	di, bx
		jnz	short loc_2DFB8
		call	near ptr sub_2DFD0

loc_2DFB8:				; CODE XREF: _write+8Bj
		stosb
		mov	al, 0Ah
		inc	[bp+var_4]
		jmp	short loc_2DFA3
; ---------------------------------------------------------------------------

loc_2DFC0:				; CODE XREF: _write+7Dj
		call	near ptr sub_2DFD0
		jmp	short loc_2DFA7
; ---------------------------------------------------------------------------

loc_2DFC5:				; CODE XREF: _write+4Fj
		pop	si
		pop	di

loc_2DFC7:				; CODE XREF: _write+2Dj
		jmp	short loc_2E01E
; ---------------------------------------------------------------------------

loc_2DFC9:				; CODE XREF: _write+49j
		jmp	short loc_2E010
; ---------------------------------------------------------------------------

loc_2DFCB:				; CODE XREF: _write+59j
		xor	ax, ax
		jmp	__amsg_exit
_write		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

sub_2DFD0	proc far		; CODE XREF: _write+82p _write+8Dp ...
		push	ax
		push	bx
		push	cx
		mov	cx, di
		sub	cx, dx
		jcxz	short loc_2DFE9
		mov	bx, [bp+6]
		mov	ah, 40h
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		jb	short loc_2DFEF
		add	[bp-2],	ax
		or	ax, ax
		jz	short loc_2DFEF

loc_2DFE9:				; CODE XREF: sub_2DFD0+7j
		pop	cx
		pop	bx
		pop	ax
		mov	di, dx
		retn
; ---------------------------------------------------------------------------

loc_2DFEF:				; CODE XREF: sub_2DFD0+10j
					; sub_2DFD0+17j
		add	sp, 8
		jnb	short loc_2DFF8
		mov	ah, 9
		jmp	short loc_2E016
; ---------------------------------------------------------------------------

loc_2DFF8:				; CODE XREF: sub_2DFD0+22j
		test	byte ptr [bx+3684h], 40h
		jz	short loc_2E00A
		mov	bx, [bp+8]
		cmp	byte ptr [bx], 1Ah
		jnz	short loc_2E00A
		clc
		jmp	short loc_2E016
; ---------------------------------------------------------------------------

loc_2E00A:				; CODE XREF: sub_2DFD0+2Dj
					; sub_2DFD0+35j
		stc
		mov	ax, 1C00h
		jmp	short loc_2E016
; ---------------------------------------------------------------------------

loc_2E010:				; CODE XREF: _write+85j
					; _write:loc_2DFC9j
		mov	ax, [bp-2]
		sub	ax, [bp-4]

loc_2E016:				; CODE XREF: sub_2DFD0+26j
					; sub_2DFD0+38j ...
		mov	sp, [bp-8]
		pop	si
		pop	di

loc_2E01B:				; CODE XREF: _write+10Dj _write+111j ...
		jmp	__dosretax
sub_2DFD0	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR _write

loc_2E01E:				; CODE XREF: _write:loc_2DFC7j
		mov	cx, [bp+arg_4]
		or	cx, cx
		jnz	short loc_2E02A
		mov	ax, cx
		jmp	__dosretax
; ---------------------------------------------------------------------------

loc_2E02A:				; CODE XREF: _write+FBj
		mov	dx, [bp+8]
		mov	ah, 40h
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		jnb	short loc_2E037
		mov	ah, 9
		jmp	short loc_2E01B
; ---------------------------------------------------------------------------

loc_2E037:				; CODE XREF: _write+109j
		or	ax, ax
		jnz	short loc_2E01B
		test	byte ptr [bx+3684h], 40h
		jz	short loc_2E04C
		mov	bx, dx
		cmp	byte ptr [bx], 1Ah
		jnz	short loc_2E04C
		clc
		jmp	short loc_2E01B
; ---------------------------------------------------------------------------

loc_2E04C:				; CODE XREF: _write+118j _write+11Fj
		stc
		mov	ax, 1C00h
		jmp	short loc_2E01B
; END OF FUNCTION CHUNK	FOR _write

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

; size_t stackavail(void)
_stackavail	proc far		; CODE XREF: _write+51P
		pop	cx
		pop	dx
		mov	ax, word_3EE24
		cmp	ax, sp
		jnb	short loc_2E062
		sub	ax, sp
		neg	ax

loc_2E05F:				; CODE XREF: _stackavail+12j
		push	dx
		push	cx
		retf
; ---------------------------------------------------------------------------

loc_2E062:				; CODE XREF: _stackavail+7j
		xor	ax, ax
		jmp	short loc_2E05F
_stackavail	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; MS Quick C v1.0/v2.01	& MSC v5.1 DOS run-time	& graphic
; Attributes: library function bp-based	frame

unknown_libname_1 proc far

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		or	bx, bx
		jz	short loc_2E074
		or	byte ptr [bx-2], 1

loc_2E074:				; CODE XREF: unknown_libname_1+8j
		mov	sp, bp
		pop	bp
		retf
unknown_libname_1 endp


; =============== S U B	R O U T	I N E =======================================

; MS Quick C v1.0/v2.01	& MSC v5.1 DOS run-time	& graphic
; Attributes: library function bp-based	frame

unknown_libname_2 proc far		; CODE XREF: __getbuf+23P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	bx, 37FEh
		cmp	word ptr [bx], 0
		jnz	short loc_2E0AE
		push	ds
		pop	es
		mov	ax, 5
		call	__amallocbrk
		jnz	short loc_2E094
		xor	ax, ax
		cwd
		jmp	short loc_2E0B8
; ---------------------------------------------------------------------------

loc_2E094:				; CODE XREF: unknown_libname_2+15j
		inc	ax
		and	al, 0FEh
		mov	word_3EF6E, ax
		mov	word_3EF70, ax
		xchg	ax, si
		mov	word ptr [si], 1
		add	si, 4
		mov	word ptr [si-2], 0FFFEh
		mov	word_3EF74, si

loc_2E0AE:				; CODE XREF: unknown_libname_2+Bj
		mov	cx, [bp+arg_0]
		mov	ax, ds
		mov	es, ax
		call	__amalloc

loc_2E0B8:				; CODE XREF: unknown_libname_2+1Aj
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
unknown_libname_2 endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR __amalloc

loc_2E0BE:				; CODE XREF: __amalloc+1j __amalloc+9j
		jmp	loc_2E18F
; END OF FUNCTION CHUNK	FOR __amalloc

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__amalloc	proc near		; CODE XREF: unknown_libname_2+3Dp

; FUNCTION CHUNK AT 146E SIZE 00000003 BYTES

		inc	cx
		jz	short loc_2E0BE
		and	cl, 0FEh
		cmp	cx, 0FFEEh
		jnb	short loc_2E0BE
		mov	si, [bx+2]
		cld
		lodsw
		mov	di, si
		test	al, 1
		jz	short loc_2E119

loc_2E0D7:				; CODE XREF: __amalloc+2Ej
		dec	ax
		cmp	ax, cx
		jnb	short loc_2E0F1
		mov	dx, ax
		add	si, ax
		lodsw
		test	al, 1
		jz	short loc_2E119
		add	ax, dx
		add	ax, 2
		mov	si, di
		mov	[si-2],	ax
		jmp	short loc_2E0D7
; ---------------------------------------------------------------------------

loc_2E0F1:				; CODE XREF: __amalloc+19j
					; __amalloc+71j
		mov	di, si
		jz	short loc_2E101
		add	di, cx
		mov	[si-2],	cx
		sub	ax, cx
		dec	ax
		mov	[di], ax
		jmp	short loc_2E106
; ---------------------------------------------------------------------------

loc_2E101:				; CODE XREF: __amalloc+32j
		add	di, cx
		dec	byte ptr [si-2]

loc_2E106:				; CODE XREF: __amalloc+3Ej
		mov	ax, si
		mov	dx, ds
		mov	cx, ss
		cmp	dx, cx
		jz	short loc_2E115
		mov	es:word_3EF7C, ds

loc_2E115:				; CODE XREF: __amalloc+4Dj
		mov	[bx+2],	di
		retn
; ---------------------------------------------------------------------------

loc_2E119:				; CODE XREF: __amalloc+14j
					; __amalloc+22j
		mov	es:byte_3EF82, 2

loc_2E11F:				; CODE XREF: __amalloc+6Aj
					; __amalloc+7Aj
		cmp	ax, 0FFFEh
		jz	short loc_2E149
		mov	di, si
		add	si, ax

loc_2E128:				; CODE XREF: __amalloc+A9j
					; __amalloc+CCj
		lodsw
		test	al, 1
		jz	short loc_2E11F
		mov	di, si

loc_2E12F:				; CODE XREF: __amalloc+86j
		dec	ax
		cmp	ax, cx
		jnb	short loc_2E0F1
		mov	dx, ax
		add	si, ax
		lodsw
		test	al, 1
		jz	short loc_2E11F
		add	ax, dx
		add	ax, 2
		mov	si, di
		mov	[si-2],	ax
		jmp	short loc_2E12F
; ---------------------------------------------------------------------------

loc_2E149:				; CODE XREF: __amalloc+61j
		mov	ax, [bx+8]
		or	ax, ax
		jz	short loc_2E154
		mov	ds, ax
		jmp	short loc_2E168
; ---------------------------------------------------------------------------

loc_2E154:				; CODE XREF: __amalloc+8Dj
		dec	es:byte_3EF82
		jz	short loc_2E16C
		mov	ax, ds
		mov	di, ss
		cmp	ax, di
		jz	short loc_2E168
		mov	ds, es:word_3EF78
		assume ds:nothing

loc_2E168:				; CODE XREF: __amalloc+91j
					; __amalloc+A0j
		mov	si, [bx]
		jmp	short loc_2E128
; ---------------------------------------------------------------------------

loc_2E16C:				; CODE XREF: __amalloc+98j
		mov	si, [bx+6]
		xor	ax, ax
		call	__amlink
		cmp	ax, si
		jz	short loc_2E185
		and	al, 1
		inc	ax
		inc	ax
		cbw
		call	__amlink
		jz	short loc_2E18F
		dec	byte ptr [di-2]

loc_2E185:				; CODE XREF: __amalloc+B5j
		call	__amexpand
		jz	short loc_2E18F
		xchg	ax, si
		dec	si
		dec	si
		jmp	short loc_2E128
; ---------------------------------------------------------------------------

loc_2E18F:				; CODE XREF: __amalloc:loc_2E0BEj
					; __amalloc+BFj ...
		mov	ax, ds
		mov	cx, ss
		cmp	ax, cx
		jz	short loc_2E19B
		mov	es:word_3EF7C, ax

loc_2E19B:				; CODE XREF: __amalloc+D4j
		mov	ax, [bx]
		mov	[bx+2],	ax
		xor	ax, ax
		cwd
		retn
__amalloc	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__amexpand	proc near		; CODE XREF: __amalloc:loc_2E185p
		push	cx
		mov	ax, [di-2]
		test	al, 1
		jz	short loc_2E1AF
		sub	cx, ax
		dec	cx

loc_2E1AF:				; CODE XREF: __amexpand+6j
		inc	cx
		inc	cx
		mov	dx, 7FFFh

loc_2E1B4:				; CODE XREF: __amexpand+19j
		cmp	dx, es:word_3EF7E
		jbe	short loc_2E1BF
		shr	dx, 1
		jnz	short loc_2E1B4

loc_2E1BF:				; CODE XREF: __amexpand+15j
					; __amexpand+34j
		mov	ax, cx
		add	ax, si
		jb	short loc_2E1DA
		add	ax, dx
		jb	short loc_2E1D6
		not	dx
		and	ax, dx
		sub	ax, si
		call	__amlink
		jnz	short loc_2E1DC
		not	dx

loc_2E1D6:				; CODE XREF: __amexpand+23j
		shr	dx, 1
		jnz	short loc_2E1BF

loc_2E1DA:				; CODE XREF: __amexpand+1Fj
		xor	ax, ax

loc_2E1DC:				; CODE XREF: __amexpand+2Ej
		pop	cx
		retn
__amexpand	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__amlink	proc near		; CODE XREF: __amalloc+B0p
					; __amalloc+BCp ...
		push	dx
		push	cx
		call	__amallocbrk
		jz	short loc_2E1FD
		push	di
		mov	di, si
		mov	si, ax
		add	si, dx
		mov	word ptr [si-2], 0FFFEh
		mov	[bx+6],	si
		mov	dx, si
		sub	dx, di
		dec	dx
		mov	[di-2],	dx
		pop	ax

loc_2E1FD:				; CODE XREF: __amlink+5j
		pop	cx
		pop	dx
		retn
__amlink	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__amallocbrk	proc near		; CODE XREF: unknown_libname_2+12p
					; __amlink+2p
		push	bx
		push	ax
		xor	dx, dx
		push	ds
		push	dx
		push	dx
		push	ax
		mov	ax, 1
		push	ax
		push	es
		pop	ds
		assume ds:dseg
		call	_brkctl
		add	sp, 8
		cmp	dx, 0FFFFh
		pop	ds
		pop	dx
		pop	bx
		jz	short locret_2E220
		or	dx, dx

locret_2E220:				; CODE XREF: __amallocbrk+1Cj
		retn
__amallocbrk	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

_brkctl		proc far		; CODE XREF: __amallocbrk+EP

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		push	si
		push	di
		push	es
		cmp	[bp+arg_4], 0
		jnz	short loc_2E266
		mov	di, 360Ah
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		dec	ax
		jnz	short loc_2E241
		call	sub_2E290
		jb	short loc_2E266
		jmp	short loc_2E289
; ---------------------------------------------------------------------------

loc_2E241:				; CODE XREF: _brkctl+16j
		mov	si, word_3EDCA
		dec	ax
		jz	short loc_2E259
		cmp	si, di
		jz	short loc_2E259
		mov	ax, [si+2]
		mov	[bp+arg_8], ax
		push	si
		call	sub_2E290
		pop	si
		jnb	short loc_2E289

loc_2E259:				; CODE XREF: _brkctl+24j _brkctl+28j
		add	si, 4
		cmp	si, 365Ah
		jnb	short loc_2E266
		or	dx, dx
		jnz	short loc_2E26C

loc_2E266:				; CODE XREF: _brkctl+Aj _brkctl+1Bj ...
		mov	ax, 0FFFFh
		cwd
		jmp	short loc_2E289
; ---------------------------------------------------------------------------

loc_2E26C:				; CODE XREF: _brkctl+42j
		mov	bx, dx
		add	bx, 0Fh
		rcr	bx, 1
		mov	cl, 3
		shr	bx, cl
		mov	ah, 48h
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		jb	short loc_2E266
		xchg	ax, dx
		mov	[si], ax
		mov	[si+2],	dx
		mov	word_3EDCA, si
		xor	ax, ax

loc_2E289:				; CODE XREF: _brkctl+1Dj _brkctl+35j ...
		pop	es
		assume es:nothing
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
_brkctl		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

sub_2E290	proc near		; CODE XREF: _brkctl+18p _brkctl+31p
		mov	cx, [bp+0Eh]
		mov	si, di

loc_2E295:				; CODE XREF: sub_2E290+11j
		cmp	[si+2],	cx
		jz	short loc_2E2A6
		add	si, 4
		cmp	si, 365Ah
		jnz	short loc_2E295
		stc
		jmp	short locret_2E2E5
; ---------------------------------------------------------------------------

loc_2E2A6:				; CODE XREF: sub_2E290+8j
		mov	bx, dx
		add	bx, [si]
		jb	short locret_2E2E5
		mov	dx, bx
		mov	es, cx
		cmp	si, di
		jnz	short loc_2E2BA
		cmp	word_3ED74, bx
		jnb	short loc_2E2E0

loc_2E2BA:				; CODE XREF: sub_2E290+22j
		add	bx, 0Fh
		rcr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		cmp	si, di
		jnz	short loc_2E2D2
		add	bx, cx
		mov	ax, word_3EDEB
		sub	bx, ax
		mov	es, ax

loc_2E2D2:				; CODE XREF: sub_2E290+37j
		mov	ah, 4Ah
		int	21h		; DOS -	2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)
					; ES = segment address of block	to change
					; BX = new size	in paragraphs
		jb	short locret_2E2E5
		cmp	si, di
		jnz	short loc_2E2E0
		mov	word_3ED74, dx

loc_2E2E0:				; CODE XREF: sub_2E290+28j
					; sub_2E290+4Aj
		xchg	ax, dx
		xchg	ax, [si]
		mov	dx, cx

locret_2E2E5:				; CODE XREF: sub_2E290+14j
					; sub_2E290+1Aj ...
		retn
sub_2E290	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; char *__cdecl	strcat(char *, const char *)
_strcat		proc far		; CODE XREF: sub_110D0+DCP
					; sub_110D0+ECP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	dx, di
		mov	bx, si
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, [bp+arg_0]
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		lea	si, [di-1]
		mov	di, [bp+arg_2]
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		sub	di, cx
		xchg	di, si
		mov	ax, [bp+arg_0]
		test	si, 1
		jz	short loc_2E317
		movsb
		dec	cx

loc_2E317:				; CODE XREF: _strcat+2Dj
		shr	cx, 1
		rep movsw
		adc	cx, cx
		rep movsb
		mov	si, bx
		mov	di, dx
		pop	bp
		retf
_strcat		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; char *__cdecl	strcpy(char *, const char *)
_strcpy		proc far		; CODE XREF: _main+27CP sub_110D0+CCP	...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	dx, di
		mov	bx, si
		mov	si, [bp+arg_2]
		mov	di, si
		mov	ax, ds
		mov	es, ax
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		mov	di, [bp+arg_0]
		mov	ax, di
		test	al, 1
		jz	short loc_2E34A
		movsb
		dec	cx

loc_2E34A:				; CODE XREF: _strcpy+20j
		shr	cx, 1
		rep movsw
		adc	cx, cx
		rep movsb
		mov	si, bx
		mov	di, dx
		pop	bp
		retf
_strcpy		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl strcmp(const char	*, const char *)
_strcmp		proc far		; CODE XREF: sub_11C42+147P
					; sub_144CF+1CEP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	dx, di
		mov	bx, si
		mov	ax, ds
		mov	es, ax
		mov	si, [bp+arg_0]
		mov	di, [bp+arg_2]
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		sub	di, cx
		repe cmpsb
		jz	short loc_2E37D
		sbb	ax, ax
		sbb	ax, 0FFFFh

loc_2E37D:				; CODE XREF: _strcmp+1Ej
		mov	si, bx
		mov	di, dx
		pop	bp
		retf
_strcmp		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; size_t __cdecl strlen(const char *)
_strlen		proc far		; CODE XREF: sub_118D4+48P
					; sub_118D4+77P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, di
		mov	ax, ds
		mov	es, ax
		mov	di, [bp+arg_0]
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		not	cx
		dec	cx
		xchg	ax, cx
		mov	di, dx
		pop	bp
		retf
_strlen		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; char *__cdecl	itoa(int, char *, int)
_itoa		proc far		; CODE XREF: sub_296E0+12P

arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

; FUNCTION CHUNK AT 18E4 SIZE 00000053 BYTES

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	bl, 1
		mov	cx, [bp+arg_6]
		mov	ax, [bp+arg_2]
		xor	dx, dx
		cmp	cx, 0Ah
		jnz	short loc_2E3B5
		cwd

loc_2E3B5:				; CODE XREF: _itoa+12j
		mov	di, [bp+arg_4]
		jmp	__cxtoa
_itoa		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; char *__cdecl	ultoa(unsigned __int32,	char *,	int)
_ultoa		proc near		; CODE XREF: iprint+C2P

arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

; FUNCTION CHUNK AT 18D8 SIZE 0000000C BYTES

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	bl, 0
		jmp	__cltoasub
_ultoa		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function noreturn	bp-based frame

; void abort(void)
_abort		proc far		; CODE XREF: sub_2EA2A+1EP
		push	bp
		mov	bp, sp
		mov	ax, 0Ah
		push	ax
		call	__NMSG_WRITE
		mov	ax, 16h
		push	ax		; int
		call	_raise
		mov	ax, 3
		push	ax
		call	far ptr	sub_2CE03
_abort		endp

; ---------------------------------------------------------------------------
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl isatty(int)
_isatty		proc far		; CODE XREF: __flsbuf+86P __ftbuf+23P	...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		cmp	bx, word_3EDF2
		jge	short loc_2E405
		cmp	bx, 0
		jl	short loc_2E405
		test	byte ptr [bx+3684h], 40h
		jz	short loc_2E405
		mov	ax, 1
		jmp	short loc_2E407
; ---------------------------------------------------------------------------

loc_2E405:				; CODE XREF: _isatty+Aj _isatty+Fj ...
		xor	ax, ax

loc_2E407:				; CODE XREF: _isatty+1Bj
		mov	sp, bp
		pop	bp
		retf
_isatty		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl int86(int, union REGS *, union REGS *)
_int86		proc far		; CODE XREF: sub_368AA+1EP
					; sub_368D2+15P ...

var_E		= dword	ptr -0Eh
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= byte ptr -8
var_7		= byte ptr -7
var_6		= byte ptr -6
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		sub	sp, 0Ah
		mov	[bp+var_A], 0CDh ; 'Õ'
		mov	ax, [bp+arg_0]
		mov	[bp+var_9], al
		cmp	al, 25h	; '%'
		jz	short loc_2E42C
		cmp	al, 26h	; '&'
		jz	short loc_2E42C
		mov	[bp+var_8], 0CBh ; 'À'
		jmp	short loc_2E438
; ---------------------------------------------------------------------------

loc_2E42C:				; CODE XREF: _int86+14j _int86+18j
		mov	[bp+var_6], 0CBh ; 'À'
		mov	[bp+var_7], 44h	; 'D'
		mov	[bp+var_8], 44h	; 'D'

loc_2E438:				; CODE XREF: _int86+1Ej
		mov	word ptr [bp+var_E+2], ss
		lea	ax, [bp+var_A]
		mov	word ptr [bp+var_E], ax
		mov	di, [bp+arg_2]
		mov	ax, [di]
		mov	bx, [di+2]
		mov	cx, [di+4]
		mov	dx, [di+6]
		mov	si, [di+8]
		mov	di, [di+0Ah]
		push	bp
		call	[bp+var_E]
		pop	bp
		cld
		push	di
		mov	di, [bp+arg_4]
		mov	[di], ax
		mov	[di+2],	bx
		mov	[di+4],	cx
		mov	[di+6],	dx
		mov	[di+8],	si
		pop	word ptr [di+0Ah]
		jb	short loc_2E476
		xor	si, si
		jmp	short loc_2E480
; ---------------------------------------------------------------------------

loc_2E476:				; CODE XREF: _int86+64j
		call	__maperror
		mov	si, 1
		mov	ax, [di]

loc_2E480:				; CODE XREF: _int86+68j
		mov	[di+0Ch], si
		add	sp, 0Ah
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
_int86		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int sprintf(char *, const char *, ...)
_sprintf	proc far		; CODE XREF: sub_3219D+CP seg012:386AP

var_C		= FILE ptr -0Ch
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= byte ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		lea	ax, [bp+var_C]
		mov	di, ax
		lea	ax, [bp+arg_4]
		mov	word ptr [bp+var_C._flag], ax
		mov	byte ptr [di+6], 42h ; 'B'
		mov	ax, [bp+arg_0]
		mov	[di+4],	ax
		mov	[di], ax
		mov	word ptr [di+2], 7FFFh
		lea	ax, [bp+arg_4]
		push	ax
		push	[bp+arg_2]
		push	di
		call	__output
		add	sp, 6
		mov	si, ax
		dec	word ptr [di+2]
		js	short loc_2E4D2
		sub	al, al
		mov	bx, [di]
		inc	word ptr [di]
		mov	[bx], al
		jmp	short loc_2E4DE
; ---------------------------------------------------------------------------
		align 2

loc_2E4D2:				; CODE XREF: _sprintf+39j
		push	di		; FILE *
		sub	ax, ax
		push	ax		; int
		call	__flsbuf
		add	sp, 4

loc_2E4DE:				; CODE XREF: _sprintf+43j
		mov	ax, si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
_sprintf	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl stricmp(const char *, const char *)
_stricmp	proc far		; CODE XREF: sub_3A9FC+C3P
					; sub_3A9FC+130P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	dx, si
		mov	si, [bp+arg_2]
		mov	bx, [bp+arg_0]
		mov	al, 0FFh

loc_2E4F3:				; CODE XREF: _stricmp+17j _stricmp+37j
		or	al, al
		jz	short loc_2E523
		lodsb
		mov	ah, [bx]
		inc	bx
		cmp	ah, al
		jz	short loc_2E4F3
		sub	al, 41h	; 'A'
		cmp	al, 1Ah
		sbb	cl, cl
		and	cl, 20h
		add	al, cl
		add	al, 41h	; 'A'
		xchg	ah, al
		sub	al, 41h	; 'A'
		cmp	al, 1Ah
		sbb	cl, cl
		and	cl, 20h
		add	al, cl
		add	al, 41h	; 'A'
		cmp	al, ah
		jz	short loc_2E4F3
		sbb	al, al
		sbb	al, 0FFh

loc_2E523:				; CODE XREF: _stricmp+Fj
		cbw
		mov	si, dx
		pop	bp
		retf
_stricmp	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR _ultoa

__cltoasub:				; CODE XREF: _ultoa+7j
		mov	cx, [bp+arg_8]
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_4]
		mov	di, [bp+arg_6]
; END OF FUNCTION CHUNK	FOR _ultoa
; START	OF FUNCTION CHUNK FOR _itoa

__cxtoa:				; CODE XREF: _itoa+18j
		push	di
		push	ds
		pop	es
		cld
		xchg	ax, bx
		or	al, al
		jz	short loc_2E550
		cmp	cx, 0Ah
		jnz	short loc_2E550
		or	dx, dx
		jns	short loc_2E550
		mov	al, 2Dh	; '-'
		stosb
		neg	bx
		adc	dx, 0
		neg	dx

loc_2E550:				; CODE XREF: _itoa+19Bj _itoa+1A0j ...
		mov	si, di

loc_2E552:				; CODE XREF: _itoa+1CEj
		xchg	ax, dx
		xor	dx, dx
		or	ax, ax
		jz	short loc_2E55B
		div	cx

loc_2E55B:				; CODE XREF: _itoa+1B7j
		xchg	ax, bx
		div	cx
		xchg	ax, dx
		xchg	dx, bx
		add	al, 30h	; '0'
		cmp	al, 39h	; '9'
		jbe	short loc_2E569
		add	al, 27h	; '''

loc_2E569:				; CODE XREF: _itoa+1C5j
		stosb
		mov	ax, dx
		or	ax, bx
		jnz	short loc_2E552
		mov	[di], al

loc_2E572:				; CODE XREF: _itoa+1DEj
		dec	di
		lodsb
		xchg	al, [di]
		mov	[si-1],	al
		lea	ax, [si+1]
		cmp	ax, di
		jb	short loc_2E572
		pop	ax
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; END OF FUNCTION CHUNK	FOR _itoa
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl abs(int)
_abs		proc far		; CODE XREF: sub_17A78+165P
					; sub_17A78+1AEP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 0
		jl	short loc_2E596
		mov	ax, [bp+arg_0]
		jmp	short loc_2E59B
; ---------------------------------------------------------------------------

loc_2E596:				; CODE XREF: _abs+7j
		mov	ax, [bp+arg_0]
		neg	ax

loc_2E59B:				; CODE XREF: _abs+Cj
		pop	bp
		retf
_abs		endp

; ---------------------------------------------------------------------------
		align 2
off_2E59E	dw offset loc_2E635	; DATA XREF: _raise+43r
		dw offset loc_2E626
		dw offset loc_2E61E
		dw offset loc_2E626
		dw offset loc_2E626
		dw offset loc_2E626

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; int __cdecl raise(int)
_raise		proc far		; CODE XREF: _abort+10P

var_4		= dword	ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	ax, [bp+arg_0]
		cmp	ax, 2
		jnz	short loc_2E5C1
		clc
		int	23h		; DOS -	CONTROL	"C" EXIT ADDRESS
					; Return: return via RETF 2 with CF set
					; DOS will abort program with errorlevel 0
					; else
					; interrupted DOS call continues
		jnb	short loc_2E635
		mov	ah, 4Ch
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
					; AL = exit code
; ---------------------------------------------------------------------------

loc_2E5C1:				; CODE XREF: _raise+Cj
		cmp	ax, 8
		jnz	short loc_2E5D0
		mov	bx, word ptr dword_40C1E
		or	bx, word ptr dword_40C1E+2
		jz	short loc_2E62F

loc_2E5D0:				; CODE XREF: _raise+1Aj
		call	__sigentry
		jb	short loc_2E62F
		mov	ax, [bx]
		mov	dx, [bx+2]
		or	dx, dx
		jnz	short loc_2E5F2
		cmp	ax, 1
		ja	short loc_2E5F2
		or	ax, ax
		jnz	short loc_2E635
		mov	bx, cx
		shl	bx, 1
		jmp	cs:off_2E59E[bx]
; ---------------------------------------------------------------------------

loc_2E5F2:				; CODE XREF: _raise+34j _raise+39j
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		push	es
		push	bp
		push	di
		push	si
		mov	cx, [bp+arg_0]
		cmp	cx, 8
		jz	short loc_2E60B
		xor	ax, ax
		mov	[bx], ax
		mov	[bx+2],	ax

loc_2E60B:				; CODE XREF: _raise+58j
		mov	ax, 8Ch	; 'å'
		push	ax
		push	cx
		cld
		call	[bp+var_4]
		add	sp, 4
		pop	si
		pop	di
		pop	bp
		pop	es
		assume es:nothing
		jmp	short loc_2E635
; ---------------------------------------------------------------------------
		align 2

loc_2E61E:				; CODE XREF: _raise+43j
					; DATA XREF: seg010:1952o
		mov	ax, 8Ch	; 'å'
		call	ss:dword_40C26

loc_2E626:				; CODE XREF: _raise+43j
					; DATA XREF: seg010:1950o ...
		mov	ax, 3
		push	ax
		call	far ptr	sub_2CE03
; ---------------------------------------------------------------------------

loc_2E62F:				; CODE XREF: _raise+24j _raise+2Bj
		mov	ax, 0FFFFh
		jmp	short loc_2E637
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2E635:				; CODE XREF: _raise+11j _raise+3Dj ...
		xor	ax, ax

loc_2E637:				; CODE XREF: _raise+88j
		mov	sp, bp
		pop	bp
		retf
_raise		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; void __cdecl srand(unsigned int)
_srand		proc far

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	word_3F0A0, ax
		mov	word_3F0A2, 0
		pop	bp
		retf
_srand		endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

; int rand(void)
_rand		proc far		; CODE XREF: sub_2998E+8P
					; sub_3A25C:loc_3A290P	...
		mov	ax, 43FDh
		mov	dx, 3
		push	dx
		push	ax
		push	word_3F0A2
		push	word_3F0A0
		call	__aFlmul
		add	ax, 9EC3h
		adc	dx, 26h	; '&'
		mov	word_3F0A0, ax
		mov	word_3F0A2, dx
		mov	ax, dx
		and	ah, 7Fh
		retf
_rand		endp

; ---------------------------------------------------------------------------
		db 2, 4, 8, 0Bh, 0Fh, 16h

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; void (__cdecl	*__cdecl signal(int, void (__cdecl *)(int)))(int)
_signal		proc far

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	ax, [bp+arg_0]
		cmp	ax, 8
		jnz	short loc_2E69B
		mov	bx, word ptr dword_40C1E
		or	bx, word ptr dword_40C1E+2
		jnz	short loc_2E69B

loc_2E694:				; CODE XREF: _signal+24j
		mov	ax, 1600h
		stc
		jmp	__dosretax
; ---------------------------------------------------------------------------

loc_2E69B:				; CODE XREF: _signal+Cj _signal+16j
		call	__sigentry
		jb	short loc_2E694
		mov	ax, [bx]
		mov	[bp+var_2], ax
		mov	ax, [bx+2]
		mov	[bp+var_4], ax
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_4]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	cx, [bp+arg_0]
		cmp	cx, 2
		jnz	short loc_2E6EC
		or	dx, dx
		jnz	short loc_2E6C8
		or	ax, ax
		jz	short loc_2E6EC

loc_2E6C8:				; CODE XREF: _signal+46j
		cmp	word_3EF98, 0
		jnz	short loc_2E6EC
		push	bx
		mov	al, 23h	; '#'
		mov	ah, 35h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word_3EF98, es
		mov	word_3EF9A, bx
		pop	bx
		mov	dx, 1AF7h
		push	ds
		push	cs
		pop	ds
		assume ds:seg010
		mov	al, 23h	; '#'
		mov	ah, 25h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg

loc_2E6EC:				; CODE XREF: _signal+42j _signal+4Aj ...
		cmp	cx, 8
		jnz	short loc_2E715
		mov	ax, 1B7Bh
		mov	dx, [bx+2]
		or	dx, dx
		jnz	short loc_2E70C
		mov	cx, [bx]
		cmp	cx, 2
		jnb	short loc_2E70C
		mov	ax, 1B76h
		or	cx, cx
		jz	short loc_2E70C
		mov	ax, 1B75h

loc_2E70C:				; CODE XREF: _signal+7Dj _signal+84j ...
		mov	dx, cs
		mov	bx, 3
		call	dword_40C1E

loc_2E715:				; CODE XREF: _signal+73j
		mov	ax, [bp+var_2]
		mov	dx, [bp+var_4]
		mov	sp, bp
		pop	bp
		retf
_signal		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__sigentry	proc far		; CODE XREF: _raise:loc_2E5D0P
					; _signal:loc_2E69BP ...
		push	bp
		mov	bp, sp
		lea	bx, unk_3D19B
		mov	cx, 6

loc_2E729:				; CODE XREF: __sigentry+10j
		cmp	cs:[bx], al
		jz	short loc_2E735
		dec	bx
		loop	loc_2E729
		stc
		jmp	short loc_2E743
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2E735:				; CODE XREF: __sigentry+Dj
		dec	cx
		mov	ax, cx
		shl	ax, 1
		shl	ax, 1
		lea	bx, word_3F0A4
		add	bx, ax
		clc

loc_2E743:				; CODE XREF: __sigentry+13j
		mov	sp, bp
		pop	bp
		retf
__sigentry	endp

; ---------------------------------------------------------------------------
		push	ax
		lahf
		push	ax
		push	ds
		push	dx
		mov	ax, seg	dseg
		mov	ds, ax
		cmp	word_3EE14, 0
		jnz	short loc_2E76C
		mov	ax, word_3F0A4
		mov	dx, word_3F0A6
		or	dx, dx
		jnz	short loc_2E799
		cmp	ax, 1
		ja	short loc_2E799
		or	ax, ax
		jnz	short loc_2E7BE

loc_2E76C:				; CODE XREF: seg010:1B06j
		sub	sp, 4
		push	bp
		mov	bp, sp
		add	bp, 2
		mov	al, 4

loc_2E777:				; CODE XREF: seg010:1B33j
		mov	dx, [bp+4]
		mov	[bp+0],	dx
		inc	bp
		inc	bp
		dec	al
		cmp	al, 0
		jnz	short loc_2E777
		mov	ax, word_3EF9A
		mov	[bp+0],	ax
		mov	ax, word_3EF98
		mov	[bp+2],	ax
		pop	bp
		pop	dx
		pop	ds
		pop	ax
		sahf
		pop	ax
		stc
		retf
; ---------------------------------------------------------------------------

loc_2E799:				; CODE XREF: seg010:1B11j seg010:1B16j
		mov	word ptr dword_3F0BC, ax
		mov	word ptr dword_3F0BC+2,	dx
		push	es
		push	bp
		push	di
		push	si
		push	cx
		push	bx
		xor	ax, ax
		mov	word_3F0A4, ax
		mov	word_3F0A6, ax
		mov	ax, 2
		push	ax
		cld
		call	dword_3F0BC
		pop	ax
		pop	bx
		pop	cx
		pop	si
		pop	di
		pop	bp
		pop	es

loc_2E7BE:				; CODE XREF: seg010:1B1Aj
		pop	dx
		pop	ds
		pop	ax
		sahf
		pop	ax
		clc
		retf
; ---------------------------------------------------------------------------
		retf
; ---------------------------------------------------------------------------
		jmp	ss:dword_40C26
; ---------------------------------------------------------------------------
		push	bx
		push	cx
		push	dx
		push	es
		xor	ah, ah
		push	ax
		mov	ax, 8
		push	ax
		call	__sigentry
		push	ss
		pop	ds
		call	dword ptr [bx]
		add	sp, 4
		pop	es
		pop	dx
		pop	cx
		pop	bx
		retf
; ---------------------------------------------------------------------------
		align 2
		jmp	__aFldiv
; ---------------------------------------------------------------------------
		jmp	unknown_libname_3 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic
; ---------------------------------------------------------------------------
		jmp	__aFlmul
; ---------------------------------------------------------------------------
		jmp	__aFFblmul
; ---------------------------------------------------------------------------
		jmp	unknown_libname_4 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic
; ---------------------------------------------------------------------------
		jmp	__aFlshr
; ---------------------------------------------------------------------------
		jmp	__aFuldiv
; ---------------------------------------------------------------------------
		jmp	unknown_libname_5 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

; char *__cdecl	strrchr(const char *, int)
_strrchr	proc far		; CODE XREF: sub_39CCE+2DP
					; sub_39CCE+7BP

arg_0		= word ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		push	di
		push	ds
		pop	es
		assume es:dseg
		mov	di, [bp+arg_0]
		xor	ax, ax
		mov	cx, 0FFFFh
		repne scasb
		inc	cx
		neg	cx
		dec	di
		mov	al, [bp+arg_2]
		std
		repne scasb
		inc	di
		cmp	[di], al
		jz	short loc_2E833
		xor	ax, ax
		jmp	short loc_2E835
; ---------------------------------------------------------------------------

loc_2E833:				; CODE XREF: _strrchr+1Dj
		mov	ax, di

loc_2E835:				; CODE XREF: _strrchr+21j
		cld
		pop	di
		mov	sp, bp
		pop	bp
		retf
_strrchr	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__aFldiv	proc far		; CODE XREF: sub_14DA2+82FP
					; sub_14DA2+862P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bx
		xor	di, di
		mov	ax, [bp+arg_2]
		or	ax, ax
		jge	short loc_2E85C
		inc	di
		mov	dx, [bp+arg_0]
		neg	ax
		neg	dx
		sbb	ax, 0
		mov	[bp+arg_2], ax
		mov	[bp+arg_0], dx

loc_2E85C:				; CODE XREF: __aFldiv+Dj
		mov	ax, [bp+arg_6]
		or	ax, ax
		jge	short loc_2E874
		inc	di
		mov	dx, [bp+arg_4]
		neg	ax
		neg	dx
		sbb	ax, 0
		mov	[bp+arg_6], ax
		mov	[bp+arg_4], dx

loc_2E874:				; CODE XREF: __aFldiv+25j
		or	ax, ax
		jnz	short loc_2E88D
		mov	cx, [bp+arg_4]
		mov	ax, [bp+arg_2]
		xor	dx, dx
		div	cx
		mov	bx, ax
		mov	ax, [bp+arg_0]
		div	cx
		mov	dx, bx
		jmp	short loc_2E8C5
; ---------------------------------------------------------------------------

loc_2E88D:				; CODE XREF: __aFldiv+3Aj
		mov	bx, ax
		mov	cx, [bp+arg_4]
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]

loc_2E898:				; CODE XREF: __aFldiv+66j
		shr	bx, 1
		rcr	cx, 1
		shr	dx, 1
		rcr	ax, 1
		or	bx, bx
		jnz	short loc_2E898
		div	cx
		mov	si, ax
		mul	[bp+arg_6]
		xchg	ax, cx
		mov	ax, [bp+arg_4]
		mul	si
		add	dx, cx
		jb	short loc_2E8C1
		cmp	dx, [bp+arg_2]
		ja	short loc_2E8C1
		jb	short loc_2E8C2
		cmp	ax, [bp+arg_0]
		jbe	short loc_2E8C2

loc_2E8C1:				; CODE XREF: __aFldiv+77j __aFldiv+7Cj
		dec	si

loc_2E8C2:				; CODE XREF: __aFldiv+7Ej __aFldiv+83j
		xor	dx, dx
		xchg	ax, si

loc_2E8C5:				; CODE XREF: __aFldiv+4Fj
		dec	di
		jnz	short loc_2E8CF
		neg	dx
		neg	ax
		sbb	dx, 0

loc_2E8CF:				; CODE XREF: __aFldiv+8Aj
		pop	bx
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf	8
__aFldiv	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__aFlmul	proc far		; CODE XREF: sub_14DA2+A4P
					; sub_14DA2+828P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		mov	bx, [bp+arg_6]
		or	bx, ax
		mov	bx, [bp+arg_4]
		jnz	short loc_2E8F3
		mov	ax, [bp+arg_0]
		mul	bx
		mov	sp, bp
		pop	bp
		retf	8
; ---------------------------------------------------------------------------

loc_2E8F3:				; CODE XREF: __aFlmul+Ej
		mul	bx
		mov	cx, ax
		mov	ax, [bp+arg_0]
		mul	[bp+arg_6]
		add	cx, ax
		mov	ax, [bp+arg_0]
		mul	bx
		add	dx, cx
		mov	sp, bp
		pop	bp
		retf	8
__aFlmul	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function

__aFlshr	proc far		; CODE XREF: seg010:1BB1J
					; unknown_libname_4+EP
		xor	ch, ch
		jcxz	short locret_2E916

loc_2E910:				; CODE XREF: __aFlshr+8j
		sar	dx, 1
		rcr	ax, 1
		loop	loc_2E910

locret_2E916:				; CODE XREF: __aFlshr+2j
		retf
__aFlshr	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; MS Quick C v1.0/v2.01	& MSC v5.1 DOS run-time	& graphic
; Attributes: library function bp-based	frame

unknown_libname_3 proc far		; CODE XREF: seg010:1B9DJ

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	__aFldiv
		mov	bx, [bp+arg_0]
		mov	[bx+2],	dx
		mov	[bx], ax
		mov	sp, bp
		pop	bp
		retf	6
unknown_libname_3 endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__aFFblmul	proc far		; CODE XREF: seg010:1BA7J

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	__aFlmul
		mov	bx, [bp+arg_0]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	sp, bp
		pop	bp
		retf	6
__aFFblmul	endp


; =============== S U B	R O U T	I N E =======================================

; MS Quick C v1.0/v2.01	& MSC v5.1 DOS run-time	& graphic
; Attributes: library function bp-based	frame

unknown_libname_4 proc far		; CODE XREF: seg010:1BACJ
					; sub_3AD9C+2D3P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	cx, [bp+arg_2]
		call	__aFlshr
		mov	bx, [bp+arg_0]
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	sp, bp
		pop	bp
		retf	4
unknown_libname_4 endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; MS Quick C v1.0/v2.01	& MSC v5.1 DOS run-time	& graphic
; Attributes: library function bp-based	frame

unknown_libname_5 proc far		; CODE XREF: seg010:1BBBJ

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	__aFuldiv
		mov	bx, [bp+arg_0]
		mov	[bx+2],	dx
		mov	[bx], ax
		mov	sp, bp
		pop	bp
		retf	6
unknown_libname_5 endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: library function bp-based	frame

__aFuldiv	proc far		; CODE XREF: sub_11C42+6C3P
					; sub_13178+3E1P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		push	bx
		push	si
		mov	ax, [bp+arg_6]
		or	ax, ax
		jnz	short loc_2E9C7
		mov	cx, [bp+arg_4]
		mov	ax, [bp+arg_2]
		xor	dx, dx
		div	cx
		mov	bx, ax
		mov	ax, [bp+arg_0]
		div	cx
		mov	dx, bx
		jmp	short loc_2E9FF
; ---------------------------------------------------------------------------

loc_2E9C7:				; CODE XREF: __aFuldiv+Aj
		mov	cx, ax
		mov	bx, [bp+arg_4]
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]

loc_2E9D2:				; CODE XREF: __aFuldiv+36j
		shr	cx, 1
		rcr	bx, 1
		shr	dx, 1
		rcr	ax, 1
		or	cx, cx
		jnz	short loc_2E9D2
		div	bx
		mov	si, ax
		mul	[bp+arg_6]
		xchg	ax, cx
		mov	ax, [bp+arg_4]
		mul	si
		add	dx, cx
		jb	short loc_2E9FB
		cmp	dx, [bp+arg_2]
		ja	short loc_2E9FB
		jb	short loc_2E9FC
		cmp	ax, [bp+arg_0]
		jbe	short loc_2E9FC

loc_2E9FB:				; CODE XREF: __aFuldiv+47j
					; __aFuldiv+4Cj
		dec	si

loc_2E9FC:				; CODE XREF: __aFuldiv+4Ej
					; __aFuldiv+53j
		xor	dx, dx
		xchg	ax, si

loc_2E9FF:				; CODE XREF: __aFuldiv+1Fj
		pop	si
		pop	bx
		mov	sp, bp
		pop	bp
		retf	8
__aFuldiv	endp

seg010		ends

; ===========================================================================

; Segment type:	Pure code
seg011		segment	byte public 'CODE' use16
		assume cs:seg011
		;org 7
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EA08	proc far		; CODE XREF: sub_14712+12CP
					; sub_14DA2+652P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		call	sub_300B6
		add	sp, 4
		push	ax
		call	sub_300B6
		add	sp, 4
		pop	bp
		retf
sub_2EA08	endp

seg011		ends

; ===========================================================================

; Segment type:	Pure code
seg012		segment	byte public 'CODE' use16
		assume cs:seg012
		;org 9
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_2EA2A	proc near		; CODE XREF: sub_26C3C+2ACP
					; sub_2FE1C+27P ...
		pop	ax
		pop	ax
		call	sub_35B14
		call	_printf
		call	sub_30A5D
		call	sub_2FE59
		call	_printf
		add	sp, 2
		call	_abort
sub_2EA2A	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EA4E	proc far		; CODE XREF: sub_11C42+7E9P
					; sub_14712+381P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	di
		xor	di, di
		mov	dx, [bp+arg_0]
		mov	cx, [bp+arg_2]
		or	dx, dx
		jge	short loc_2EA63
		or	di, 8
		neg	dx

loc_2EA63:				; CODE XREF: sub_2EA4E+Ej
		or	cx, cx
		jge	short loc_2EA6C
		or	di, 4
		neg	cx

loc_2EA6C:				; CODE XREF: sub_2EA4E+17j
		cmp	dx, cx
		jl	short loc_2EA77
		jz	short loc_2EA8F
		xchg	dx, cx
		or	di, 2

loc_2EA77:				; CODE XREF: sub_2EA4E+20j
		xor	ax, ax
		div	cx
		mov	bl, ah
		xor	bh, bh
		add	al, 80h	; 'Ä'
		adc	bx, 0
		mov	al, [bx+3950h]
		xor	ah, ah
		jmp	cs:off_2EA9B[di]
; ---------------------------------------------------------------------------

loc_2EA8F:				; CODE XREF: sub_2EA4E+22j
		or	dx, dx
		jz	short loc_2EAB0
		mov	ax, 80h	; 'Ä'
		jmp	cs:off_2EA9B[di]
; ---------------------------------------------------------------------------
off_2EA9B	dw offset loc_2EAB0	; DATA XREF: sub_2EA4E+3Cr
					; sub_2EA4E+48r
		dw offset loc_2EAAB
		dw offset loc_2EAB8
		dw offset loc_2EAB3
		dw offset loc_2EABF
		dw offset loc_2EAC3
		dw offset loc_2EACF
		dw offset loc_2EAC8
; ---------------------------------------------------------------------------

loc_2EAAB:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		neg	ax
		add	ah, 1

loc_2EAB0:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+43j ...
		pop	di
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2EAB3:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		add	ah, 1
		jmp	short loc_2EAB0
; ---------------------------------------------------------------------------

loc_2EAB8:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		neg	ax
		add	ah, 2
		jmp	short loc_2EAB0
; ---------------------------------------------------------------------------

loc_2EABF:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		neg	ax
		jmp	short loc_2EAB0
; ---------------------------------------------------------------------------

loc_2EAC3:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		sub	ah, 1
		jmp	short loc_2EAB0
; ---------------------------------------------------------------------------

loc_2EAC8:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		add	ah, 1
		neg	ax
		jmp	short loc_2EAB0
; ---------------------------------------------------------------------------

loc_2EACF:				; CODE XREF: sub_2EA4E+3Cj
					; sub_2EA4E+48j
					; DATA XREF: ...
		sub	ah, 2
		jmp	short loc_2EAB0
sub_2EA4E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2EAD4	proc far		; CODE XREF: sub_2EADE+3P
					; seg012:loc_2EAF5P ...
		cli
		mov	ax, word_3F87C
		mov	dx, word_3F87E
		sti
		retf
sub_2EAD4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EADE	proc far		; CODE XREF: sub_3A4B6+A5P
					; sub_3A4B6+EFP

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		call	sub_2EAD4
		add	ax, [bp+arg_0]
		adc	dx, [bp+arg_2]
		mov	word_3F1C2, ax
		mov	word_3F1C4, dx
		pop	bp
		retf
sub_2EADE	endp

; ---------------------------------------------------------------------------

loc_2EAF5:				; CODE XREF: seg012:00DEj seg012:00E4j
		call	sub_2EAD4
		cmp	dx, word_3F1C4
		jb	short loc_2EAF5
		cmp	ax, word_3F1C2
		jb	short loc_2EAF5
		retf

; =============== S U B	R O U T	I N E =======================================


sub_2EB07	proc far		; CODE XREF: sub_3A4B6+D5P
		call	sub_2EAD4
		xor	cx, cx
		cmp	dx, word_3F1C4
		jb	short loc_2EB1B
		cmp	ax, word_3F1C2
		jb	short loc_2EB1B
		inc	cx

loc_2EB1B:				; CODE XREF: sub_2EB07+Bj
					; sub_2EB07+11j
		mov	ax, cx
		retf
sub_2EB07	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EB1E	proc far		; CODE XREF: sub_27686+4FAP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		call	sub_2EAD4
		add	ax, [bp+arg_0]
		adc	dx, [bp+arg_2]
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_2EB35:				; CODE XREF: sub_2EB1E+1Fj
					; sub_2EB1E+24j
		call	sub_2EAD4
		cmp	dx, [bp+var_2]
		jb	short loc_2EB35
		cmp	ax, [bp+var_4]
		jb	short loc_2EB35
		mov	sp, bp
		pop	bp
		retf
sub_2EB1E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EB48	proc far		; CODE XREF: sub_317EE:loc_3192EP
					; sub_317EE:loc_31972P

var_4		= byte ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		mov	[bp+var_4], 1
		jmp	short loc_2EB62
sub_2EB48	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2EB56	proc far		; CODE XREF: sub_1C474+15BP
					; sub_2FDDE+1CP ...

var_4		= byte ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		mov	[bp+var_4], 0

loc_2EB62:				; CODE XREF: sub_2EB48+Cj
		mov	si, [bp+arg_8]
		mov	word ptr [si+12h], 0FFh
		xor	ax, ax
		mov	[si], ax
		mov	[si+4],	ax
		mov	[si+14h], ax
		mov	[si+16h], ax
		mov	[si+18h], ax
		mov	[si+1Ah], ax
		mov	ax, [bp+arg_2]
		mov	bx, [bp+arg_6]
		mov	cx, [bp+arg_0]
		mov	dx, [bp+arg_4]
		cmp	ax, bx
		jg	short loc_2EB9C
		mov	[si+2],	cx
		mov	[si+6],	ax
		mov	[si+8],	dx
		mov	[si+0Ah], bx
		jmp	short loc_2EBA8
; ---------------------------------------------------------------------------
		align 2

loc_2EB9C:				; CODE XREF: sub_2EB56+35j
		mov	[si+2],	dx
		mov	[si+6],	bx
		mov	[si+8],	cx
		mov	[si+0Ah], ax

loc_2EBA8:				; CODE XREF: sub_2EB56+43j
		jnz	short loc_2EBAD
		jmp	loc_2F1A3
; ---------------------------------------------------------------------------

loc_2EBAD:				; CODE XREF: sub_2EB56:loc_2EBA8j
					; sub_2EB56+77Dj
		xor	dx, dx
		cmp	[bp+var_4], 0
		jnz	short loc_2EC1A
		mov	ax, [si+6]
		mov	bx, cs:word_34950
		mov	cx, cs:word_34952
		cmp	ax, cx
		jl	short loc_2EBCB
		mov	dl, 8
		jmp	loc_2EF9B
; ---------------------------------------------------------------------------

loc_2EBCB:				; CODE XREF: sub_2EB56+6Ej
		cmp	ax, bx
		jge	short loc_2EBD2
		or	dh, 4

loc_2EBD2:				; CODE XREF: sub_2EB56+77j
		mov	ax, [si+0Ah]
		cmp	ax, bx
		jge	short loc_2EBDE

loc_2EBD9:
		mov	dl, 4
		jmp	loc_2EF9B
; ---------------------------------------------------------------------------

loc_2EBDE:				; CODE XREF: sub_2EB56+81j
		cmp	ax, cx
		jl	short loc_2EBE5
		or	dl, 8

loc_2EBE5:				; CODE XREF: sub_2EB56+8Aj
		mov	bx, cs:word_3495A
		mov	cx, cs:word_3495C
		mov	ax, [si+2]
		cmp	ax, bx
		jge	short loc_2EBF9
		or	dh, 2

loc_2EBF9:				; CODE XREF: sub_2EB56+9Ej
		cmp	ax, cx
		jl	short loc_2EC00
		or	dh, 1

loc_2EC00:				; CODE XREF: sub_2EB56+A5j
		mov	ax, [si+8]
		cmp	ax, bx
		jge	short loc_2EC0A
		or	dl, 2

loc_2EC0A:				; CODE XREF: sub_2EB56+AFj
		cmp	ax, cx
		jl	short loc_2EC11
		or	dl, 1

loc_2EC11:				; CODE XREF: sub_2EB56+B6j
		test	dl, dh
		jz	short loc_2EC1A
		and	dl, dh
		jmp	loc_2EF9B
; ---------------------------------------------------------------------------

loc_2EC1A:				; CODE XREF: sub_2EB56+5Dj
					; sub_2EB56+BDj
		or	dl, dh
		xor	dh, dh
		mov	[bp+var_2], dx
		mov	cx, [si+0Ah]
		sub	cx, [si+6]
		jno	short loc_2EC2C

loc_2EC29:				; CODE XREF: sub_2EB56+DCj
					; sub_2EB56+124j ...
		jmp	loc_2F253
; ---------------------------------------------------------------------------

loc_2EC2C:				; CODE XREF: sub_2EB56+D1j
		mov	dx, [si+8]
		sub	dx, [si+2]
		jo	short loc_2EC29
		jnz	short loc_2EC41
		inc	cx
		mov	[si+0Eh], cx
		mov	byte ptr [si+12h], 2
		jmp	short loc_2ECAD
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2EC41:				; CODE XREF: sub_2EB56+DEj
		jl	short loc_2EC8F
		cmp	dx, cx
		jb	short loc_2EC82
		jz	short loc_2EC88
		mov	byte ptr [si+12h], 8

loc_2EC4D:				; CODE XREF: sub_2EB56+147j
		xchg	cx, dx

loc_2EC4F:				; CODE XREF: sub_2EB56+130j
					; sub_2EB56+14Dj
		cmp	cx, cs:word_2F448
		jge	short loc_2EC69
		mov	bx, cx
		shl	bx, 1
		mov	bx, cs:[bx+0A2Ah]
		add	bx, dx
		add	bx, dx
		mov	ax, cs:[bx]
		jmp	short loc_2EC76
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2EC69:				; CODE XREF: sub_2EB56+FEj
		xor	ax, ax
		div	cx
		mov	bx, cx
		shr	bx, 1
		sub	bx, dx
		adc	ax, 0

loc_2EC76:				; CODE XREF: sub_2EB56+110j
		mov	[si+0Ch], ax
		inc	cx
		jo	short loc_2EC29
		mov	[si+0Eh], cx
		jmp	short loc_2ECAD
; ---------------------------------------------------------------------------
		align 2

loc_2EC82:				; CODE XREF: sub_2EB56+EFj
		mov	byte ptr [si+12h], 6
		jmp	short loc_2EC4F
; ---------------------------------------------------------------------------

loc_2EC88:				; CODE XREF: sub_2EB56+F1j
		mov	byte ptr [si+12h], 4
		jmp	short loc_2ECA9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_2EC8F:				; CODE XREF: sub_2EB56:loc_2EC41j
		neg	dx
		jo	short loc_2EC29
		cmp	dx, cx
		jb	short loc_2EC9F
		jz	short loc_2ECA5
		mov	byte ptr [si+12h], 7
		jmp	short loc_2EC4D
; ---------------------------------------------------------------------------

loc_2EC9F:				; CODE XREF: sub_2EB56+13Fj
		mov	byte ptr [si+12h], 5
		jmp	short loc_2EC4F
; ---------------------------------------------------------------------------

loc_2ECA5:				; CODE XREF: sub_2EB56+141j
		mov	byte ptr [si+12h], 3

loc_2ECA9:				; CODE XREF: sub_2EB56+136j
		inc	cx
		mov	[si+0Eh], cx

loc_2ECAD:				; CODE XREF: sub_2EB56+E8j
					; sub_2EB56+129j ...
		mov	bx, [bp+var_2]
		shl	bx, 1
		jz	short loc_2ECD9
		jmp	cs:off_2ECB9[bx]
; ---------------------------------------------------------------------------
off_2ECB9	dw offset loc_2ECD9	; DATA XREF: sub_2EB56+15Er
		dw offset loc_2F01F
		dw offset loc_2EE78
		dw offset loc_2EE78
		dw offset loc_2ECE1
		dw offset loc_2ECE1
		dw offset loc_2ECE1
		dw offset loc_2ECE1
		dw offset loc_2EDA5
		dw offset loc_2EDA5
		dw offset loc_2EDA5
		dw offset loc_2EDA5
		dw offset loc_2ECE1
		dw offset loc_2ECE1
		dw offset loc_2ECE1
		dw offset loc_2ECE1
; ---------------------------------------------------------------------------

loc_2ECD9:				; CODE XREF: sub_2EB56+15Cj
					; sub_2EB56+15Ej ...
		xor	ax, ax
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2ECE1:				; CODE XREF: sub_2EB56+15Ej
					; DATA XREF: sub_2EB56+16Bo ...
		mov	ax, [si+6]
		mov	cx, cs:word_34950
		mov	[si+6],	cx
		sub	cx, ax
		mov	bl, [si+12h]
		shl	bx, 1
		jmp	word ptr cs:[bx+2D8h]
; ---------------------------------------------------------------------------
		dw 0
		dw 0
		dw offset loc_2ED0A
		dw offset loc_2ED10
		dw offset loc_2ED19
		dw offset loc_2ED22
		dw offset loc_2ED32
		dw offset loc_2ED42
		dw offset loc_2ED7E
; ---------------------------------------------------------------------------

loc_2ED0A:				; DATA XREF: sub_2EB56+1A6o
		sub	[si+0Eh], cx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED10:				; DATA XREF: sub_2EB56+1A8o
		sub	[si+2],	cx
		sub	[si+0Eh], cx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED19:				; DATA XREF: sub_2EB56+1AAo
		add	[si+2],	cx
		sub	[si+0Eh], cx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED22:				; DATA XREF: sub_2EB56+1ACo
		mov	ax, [si+0Ch]
		mul	cx
		sub	[si], ax
		sbb	[si+2],	dx
		sub	[si+0Eh], cx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED32:				; DATA XREF: sub_2EB56+1AEo
		mov	ax, [si+0Ch]
		mul	cx
		add	[si], ax
		adc	[si+2],	dx
		sub	[si+0Eh], cx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED42:				; DATA XREF: sub_2EB56+1B0o
		mov	[si+6],	ax
		mov	dx, cx
		xor	ax, ax
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		sub	[si+2],	ax
		sub	[si+0Eh], ax
		jle	short loc_2ED69
		mul	word ptr [si+0Ch]
		add	[si+4],	ax
		adc	[si+6],	dx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED69:				; CODE XREF: sub_2EB56+205j
					; sub_2EB56+241j
		mov	word ptr [si+0Eh], 1
		mov	ax, cs:word_34950
		mov	[si+6],	ax
		mov	ax, [si+8]
		mov	[si+2],	ax
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2ED7E:				; DATA XREF: sub_2EB56+1B2o
		mov	[si+6],	ax
		mov	dx, cx
		xor	ax, ax
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		add	[si+2],	ax
		sub	[si+0Eh], ax
		jle	short loc_2ED69
		mul	word ptr [si+0Ch]
		add	[si+4],	ax
		adc	[si+6],	dx
		jmp	loc_2F13E
; ---------------------------------------------------------------------------

loc_2EDA5:				; CODE XREF: sub_2EB56+15Ej
					; sub_2EB56+5EFj
					; DATA XREF: ...
		mov	cx, [si+0Ah]
		mov	dx, cs:word_34952
		dec	dx
		mov	[si+0Ah], dx
		sub	cx, dx
		mov	bl, [si+12h]
		shl	bx, 1
		jmp	word ptr cs:[bx+39Dh]
; ---------------------------------------------------------------------------
		dw 0
		dw 0
		dw offset loc_2EDCF
		dw offset loc_2EDD5
		dw offset loc_2EDDE
		dw offset loc_2EDE7
		dw offset loc_2EE0B
		dw offset loc_2EE2A
		dw offset loc_2EE53
; ---------------------------------------------------------------------------

loc_2EDCF:				; DATA XREF: sub_2EB56+26Bo
		sub	[si+0Eh], cx
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EDD5:				; DATA XREF: sub_2EB56+26Do
		add	[si+8],	cx
		sub	[si+0Eh], cx
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EDDE:				; DATA XREF: sub_2EB56+26Fo
		sub	[si+8],	cx
		sub	[si+0Eh], cx
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EDE7:				; DATA XREF: sub_2EB56+271o
		mov	dx, [si+0Eh]
		sub	dx, cx
		mov	[si+0Eh], dx
		dec	dx
		mov	ax, [si+0Ch]
		mul	dx
		mov	bx, [si]
		mov	cx, [si+2]
		sub	bx, ax
		sbb	cx, dx
		add	bx, 8000h
		adc	cx, 0
		mov	[si+8],	cx
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EE0B:				; DATA XREF: sub_2EB56+273o
		mov	dx, [si+0Eh]
		sub	dx, cx
		mov	[si+0Eh], dx
		dec	dx
		mov	ax, [si+0Ch]
		mul	dx
		add	ax, [si]
		adc	dx, [si+2]
		add	ax, 8000h
		adc	dx, 0
		mov	[si+8],	dx
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EE2A:				; DATA XREF: sub_2EB56+275o
		xor	ax, ax
		sub	ax, [si+4]
		sbb	dx, [si+6]
		jl	short loc_2EE4F
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0

loc_2EE40:				; CODE XREF: sub_2EB56+2FBj
		mov	dx, [si+2]
		sub	dx, ax
		mov	[si+8],	dx
		inc	ax
		mov	[si+0Eh], ax
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EE4F:				; CODE XREF: sub_2EB56+2DCj
					; sub_2EB56+305j
		xor	ax, ax
		jmp	short loc_2EE40
; ---------------------------------------------------------------------------

loc_2EE53:				; DATA XREF: sub_2EB56+277o
		xor	ax, ax
		sub	ax, [si+4]
		sbb	dx, [si+6]
		jl	short loc_2EE4F
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		mov	dx, [si+2]
		add	dx, ax
		mov	[si+8],	dx
		inc	ax
		mov	[si+0Eh], ax
		jmp	loc_2F148
; ---------------------------------------------------------------------------

loc_2EE78:				; CODE XREF: sub_2EB56+15Ej
					; DATA XREF: sub_2EB56+167o ...
		mov	bl, [si+12h]
		shl	bx, 1
		jmp	word ptr cs:[bx+462h]
; ---------------------------------------------------------------------------
		dw 0
		dw 0
		dw offset loc_2EF98
		dw offset loc_2EE94
		dw offset loc_2EEAD
		dw offset loc_2EEC6
		dw offset loc_2EEFE
		dw offset loc_2EF31
		dw offset loc_2EF61
; ---------------------------------------------------------------------------

loc_2EE94:				; DATA XREF: sub_2EB56+332o
		mov	cx, cs:word_3495A
		mov	ax, [si+8]
		mov	[si+8],	cx
		sub	cx, ax
		add	[si+16h], cx
		sub	[si+0Eh], cx
		sub	[si+0Ah], cx
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EEAD:				; DATA XREF: sub_2EB56+334o
		mov	ax, [si+2]
		mov	cx, cs:word_3495A
		mov	[si+2],	cx
		sub	cx, ax
		add	[si+14h], cx
		add	[si+6],	cx
		sub	[si+0Eh], cx
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EEC6:				; DATA XREF: sub_2EB56+336o
		mov	ax, [si]
		mov	dx, [si+2]
		mov	cx, cs:word_3495A
		mov	[si+8],	cx
		sub	dx, cx
		jl	short loc_2EEF9
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		inc	ax

loc_2EEE4:				; CODE XREF: sub_2EB56+3A6j
		mov	cx, [si+0Eh]
		mov	[si+0Eh], ax
		sub	cx, ax
		add	[si+16h], cx
		dec	ax
		add	ax, [si+6]
		mov	[si+0Ah], ax
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EEF9:				; CODE XREF: sub_2EB56+37Fj
		mov	ax, 1
		jmp	short loc_2EEE4
; ---------------------------------------------------------------------------

loc_2EEFE:				; DATA XREF: sub_2EB56+338o
		mov	dx, cs:word_3495A
		xor	ax, ax
		sub	ax, [si]
		sbb	dx, [si+2]
		jl	short loc_2EF2E
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		add	[si+6],	ax
		add	[si+14h], ax
		sub	[si+0Eh], ax
		jle	short loc_2EF98
		mul	word ptr [si+0Ch]
		add	[si], ax
		adc	[si+2],	dx
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EF2E:				; CODE XREF: sub_2EB56+3B4j
		jmp	short loc_2EF98
; ---------------------------------------------------------------------------
		nop

loc_2EF31:				; DATA XREF: sub_2EB56+33Ao
		mov	ax, [si+2]
		mov	dx, cs:word_3495A
		mov	[si+8],	dx
		sub	ax, dx
		mov	cx, ax
		inc	cx
		mov	[si+0Eh], cx
		mul	word ptr [si+0Ch]
		add	ax, [si+4]
		adc	dx, [si+6]
		add	ax, 8000h
		adc	dx, 0
		mov	ax, [si+0Ah]
		sub	ax, dx
		mov	[si+0Ah], dx
		add	[si+16h], ax
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EF61:				; DATA XREF: sub_2EB56+33Co
		mov	cx, [si+2]
		mov	ax, cs:word_3495A
		mov	[si+2],	ax
		sub	ax, cx
		sub	[si+0Eh], ax
		mul	word ptr [si+0Ch]
		mov	bx, [si+4]
		mov	cx, [si+6]
		add	ax, bx
		adc	dx, cx
		mov	[si+4],	ax
		mov	[si+6],	dx
		add	bx, 8000h
		adc	cx, 0
		add	ax, 8000h
		adc	dx, 0
		sub	dx, cx
		add	[si+14h], dx
		jmp	loc_2F196
; ---------------------------------------------------------------------------

loc_2EF98:				; CODE XREF: sub_2EB56+3CBj
					; sub_2EB56:loc_2EF2Ej
					; DATA XREF: ...
		mov	dx, 2

loc_2EF9B:				; CODE XREF: sub_2EB56+72j
					; sub_2EB56+85j ...
		mov	[si+13h], dl
		mov	word ptr [si+0Eh], 0
		mov	al, [si+13h]
		test	al, 4
		jz	short loc_2EFBE
		mov	bx, cs:word_34950
		mov	[si+6],	bx
		mov	word ptr [si+4], 0
		dec	bx
		mov	[si+0Ah], bx
		jmp	short loc_2F017
; ---------------------------------------------------------------------------
		align 2

loc_2EFBE:				; CODE XREF: sub_2EB56+452j
		test	al, 8
		jz	short loc_2EFD2
		mov	bx, cs:word_34952
		mov	[si+6],	bx
		mov	word ptr [si+4], 0
		jmp	short loc_2F017
; ---------------------------------------------------------------------------
		align 2

loc_2EFD2:				; CODE XREF: sub_2EB56+46Aj
		mov	cx, [si+0Ah]
		cmp	cx, cs:word_34952
		jl	short loc_2EFE2
		mov	cx, cs:word_34952
		dec	cx

loc_2EFE2:				; CODE XREF: sub_2EB56+484j
		mov	dx, [si+6]
		mov	bx, [si+4]
		add	bx, 8000h
		adc	dx, 0
		cmp	dx, cs:word_34950
		jge	short loc_2EFFB
		mov	dx, cs:word_34950

loc_2EFFB:				; CODE XREF: sub_2EB56+49Ej
		mov	[si+6],	dx
		mov	word ptr [si+4], 0
		sub	cx, dx
		dec	dx
		inc	cx
		mov	[si+0Ah], dx
		test	al, 2
		jz	short loc_2F014
		add	[si+16h], cx
		jmp	short loc_2F017
; ---------------------------------------------------------------------------
		align 2

loc_2F014:				; CODE XREF: sub_2EB56+4B6j
		add	[si+1Ah], cx

loc_2F017:				; CODE XREF: sub_2EB56+465j
					; sub_2EB56+479j ...
		xor	ah, ah
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2F01F:				; CODE XREF: sub_2EB56+15Ej
					; sub_2EB56+647j
					; DATA XREF: ...
		mov	bl, [si+12h]
		xor	bh, bh
		shl	bx, 1
		jmp	word ptr cs:[bx+60Bh]
; ---------------------------------------------------------------------------
		dw 0
		dw 0
		dw offset loc_2F03D
		dw offset loc_2F043
		dw offset loc_2F05C
		dw offset loc_2F076
		dw offset loc_2F0A3
		dw offset loc_2F0D7
		dw offset loc_2F110
; ---------------------------------------------------------------------------

loc_2F03D:				; CODE XREF: sub_2EB56+53Aj
					; sub_2EB56+55Dj
					; DATA XREF: ...
		mov	dx, 1
		jmp	loc_2EF9B
; ---------------------------------------------------------------------------

loc_2F043:				; DATA XREF: sub_2EB56+4DBo
		mov	cx, [si+2]
		mov	ax, cs:word_3495C
		dec	ax
		mov	[si+2],	ax
		sub	cx, ax
		add	[si+6],	cx
		sub	[si+0Eh], cx
		add	[si+18h], cx
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F05C:				; DATA XREF: sub_2EB56+4DDo
		mov	cx, cs:word_3495C
		dec	cx
		mov	ax, [si+8]
		mov	[si+8],	cx
		sub	ax, cx
		add	[si+1Ah], ax
		sub	[si+0Eh], ax
		sub	[si+0Ah], ax
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F076:				; DATA XREF: sub_2EB56+4DFo
		mov	ax, [si]
		mov	dx, [si+2]
		sub	dx, cs:word_3495C
		inc	dx
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		sub	[si+0Eh], ax
		jle	short loc_2F03D
		add	[si+6],	ax
		add	[si+18h], ax
		mul	word ptr [si+0Ch]
		sub	[si], ax
		sbb	[si+2],	dx
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F0A3:				; DATA XREF: sub_2EB56+4E1o
		mov	dx, cs:word_3495C
		dec	dx
		mov	[si+8],	dx
		xor	ax, ax
		sub	ax, [si]
		sbb	dx, [si+2]
		jl	short loc_2F03D
		mov	cx, [si+0Ch]
		div	cx
		shr	cx, 1
		sub	cx, dx
		adc	ax, 0
		inc	ax
		mov	cx, [si+0Eh]
		mov	[si+0Eh], ax
		sub	cx, ax
		add	[si+1Ah], cx
		dec	ax
		add	ax, [si+6]
		mov	[si+0Ah], ax
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F0D7:				; DATA XREF: sub_2EB56+4E3o
		mov	ax, [si+2]
		mov	cx, cs:word_3495C
		dec	cx
		sub	ax, cx
		mov	[si+2],	cx
		sub	[si+0Eh], ax
		mul	word ptr [si+0Ch]
		mov	bx, [si+4]
		mov	cx, [si+6]
		add	ax, bx
		adc	dx, cx
		mov	[si+4],	ax
		mov	[si+6],	dx
		add	bx, 8000h
		adc	cx, 0
		add	ax, 8000h
		adc	dx, 0
		sub	dx, cx
		add	[si+18h], dx
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F110:				; DATA XREF: sub_2EB56+4E5o
		mov	ax, cs:word_3495C
		mov	cx, ax
		dec	cx
		mov	[si+8],	cx
		sub	ax, [si+2]
		mov	[si+0Eh], ax
		dec	ax
		mul	word ptr [si+0Ch]
		add	ax, [si+4]
		adc	dx, [si+6]
		add	ax, 8000h
		adc	dx, 0
		mov	ax, [si+0Ah]
		sub	ax, dx
		mov	[si+0Ah], dx
		add	[si+1Ah], ax
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F13E:				; CODE XREF: sub_2EB56+1B7j
					; sub_2EB56+1C0j ...
		test	[bp+var_2], 8
		jz	short loc_2F148
		jmp	loc_2EDA5
; ---------------------------------------------------------------------------

loc_2F148:				; CODE XREF: sub_2EB56+27Cj
					; sub_2EB56+285j ...
		xor	dx, dx
		mov	ax, [si+2]
		cmp	ax, cs:word_3495A
		jge	short loc_2F157
		or	dh, 2

loc_2F157:				; CODE XREF: sub_2EB56+5FCj
		mov	bx, [si]
		add	bx, 8000h
		adc	ax, 0
		cmp	ax, cs:word_3495C
		jl	short loc_2F16A
		or	dh, 1

loc_2F16A:				; CODE XREF: sub_2EB56+60Fj
		mov	ax, [si+8]
		cmp	ax, cs:word_3495A
		jge	short loc_2F177
		or	dl, 2

loc_2F177:				; CODE XREF: sub_2EB56+61Cj
		cmp	ax, cs:word_3495C
		jl	short loc_2F181
		or	dl, 1

loc_2F181:				; CODE XREF: sub_2EB56+626j
		test	dl, dh
		jz	short loc_2F18A
		and	dl, dh
		jmp	loc_2EF9B
; ---------------------------------------------------------------------------

loc_2F18A:				; CODE XREF: sub_2EB56+62Dj
		or	dl, dh
		jz	short loc_2F1A0
		xor	dh, dh
		mov	[bp+var_2], dx
		jmp	loc_2ECAD
; ---------------------------------------------------------------------------

loc_2F196:				; CODE XREF: sub_2EB56+354j
					; sub_2EB56+36Dj ...
		test	[bp+var_2], 1
		jz	short loc_2F1A0
		jmp	loc_2F01F
; ---------------------------------------------------------------------------

loc_2F1A0:				; CODE XREF: sub_2EB56+636j
					; sub_2EB56+645j
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F1A3:				; CODE XREF: sub_2EB56+54j
		mov	byte ptr [si+12h], 1
		cmp	cx, dx
		jnz	short loc_2F1AF
		mov	byte ptr [si+12h], 9

loc_2F1AF:				; CODE XREF: sub_2EB56+653j
		jle	short loc_2F1BD
		mov	byte ptr [si+12h], 0
		mov	[si+2],	dx
		mov	[si+8],	cx
		xchg	cx, dx

loc_2F1BD:				; CODE XREF: sub_2EB56:loc_2F1AFj
		cmp	[bp+var_4], 0
		jnz	short loc_2F1E4
		mov	bx, cs:word_34950
		cmp	ax, bx
		jge	short loc_2F1ED
		mov	al, 4
		mov	[si+6],	bx
		mov	[si+0Ah], bx

loc_2F1D4:				; CODE XREF: sub_2EB56+6A8j
					; sub_2EB56+6C3j ...
		mov	[si+13h], al
		mov	word ptr [si+0Eh], 0
		xor	ah, ah
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2F1E4:				; CODE XREF: sub_2EB56+66Bj
		sub	dx, cx
		inc	dx
		mov	[si+0Eh], dx
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F1ED:				; CODE XREF: sub_2EB56+674j
		mov	bx, cs:word_34952
		cmp	ax, bx
		jl	short loc_2F200
		mov	al, 8
		mov	[si+6],	bx
		mov	[si+0Ah], bx
		jmp	short loc_2F1D4
; ---------------------------------------------------------------------------

loc_2F200:				; CODE XREF: sub_2EB56+69Ej
		mov	ax, dx
		sub	ax, cx
		inc	ax
		mov	[si+0Eh], ax
		cmp	dx, cs:word_3495A
		jge	short loc_2F21B
		dec	word ptr [si+0Ah]
		mov	word ptr [si+16h], 1
		mov	al, 2
		jmp	short loc_2F1D4
; ---------------------------------------------------------------------------

loc_2F21B:				; CODE XREF: sub_2EB56+6B7j
		cmp	cx, cs:word_3495C
		jl	short loc_2F22E
		dec	word ptr [si+0Ah]
		mov	word ptr [si+1Ah], 1
		mov	al, 1
		jmp	short loc_2F1D4
; ---------------------------------------------------------------------------

loc_2F22E:				; CODE XREF: sub_2EB56+6CAj
		mov	ax, cs:word_3495A
		mov	bx, ax
		sub	ax, cx
		jle	short loc_2F23E
		mov	[si+2],	bx
		sub	[si+0Eh], ax

loc_2F23E:				; CODE XREF: sub_2EB56+6E0j
		mov	ax, dx
		mov	bx, cs:word_3495C
		dec	bx
		sub	ax, bx
		jle	short loc_2F250
		sub	[si+0Eh], ax
		mov	[si+8],	bx

loc_2F250:				; CODE XREF: sub_2EB56+6F2j
		jmp	loc_2ECD9
; ---------------------------------------------------------------------------

loc_2F253:				; CODE XREF: sub_2EB56:loc_2EC29j
		mov	cx, [si+0Ah]
		sar	cx, 1
		mov	ax, [si+6]
		sar	ax, 1
		sub	cx, ax
		sar	cx, 1
		mov	dx, [si+8]
		sar	dx, 1
		mov	ax, [si+2]
		sar	ax, 1
		sub	dx, ax
		sar	dx, 1

loc_2F26F:				; CODE XREF: sub_2EB56+758j
		cmp	word ptr [si+6], 0C180h
		jg	short loc_2F2B0

loc_2F276:				; CODE XREF: sub_2EB56+766j
					; sub_2EB56+76Dj
		mov	ax, [si+6]
		add	ax, cx
		mov	[si+6],	ax
		mov	bx, ax
		sub	ax, cs:word_34950
		jle	short loc_2F2AB
		cmp	ax, cx
		jle	short loc_2F28D
		mov	ax, cx

loc_2F28D:				; CODE XREF: sub_2EB56+733j
		sub	bx, cs:word_34952
		jle	short loc_2F298
		sub	ax, bx
		jle	short loc_2F2AB

loc_2F298:				; CODE XREF: sub_2EB56+73Cj
		mov	bx, [si+2]
		cmp	bx, cs:word_3495A
		jge	short loc_2F2A8
		add	[si+14h], ax
		jmp	short loc_2F2AB
; ---------------------------------------------------------------------------
		align 2

loc_2F2A8:				; CODE XREF: sub_2EB56+74Aj
		add	[si+18h], ax

loc_2F2AB:				; CODE XREF: sub_2EB56+72Fj
					; sub_2EB56+740j ...
		add	[si+2],	dx
		jmp	short loc_2F26F
; ---------------------------------------------------------------------------

loc_2F2B0:				; CODE XREF: sub_2EB56+71Ej
					; sub_2EB56+7BCj
		cmp	word ptr [si+0Ah], 3E80h
		jge	short loc_2F2D6
		cmp	word ptr [si+2], 0C180h
		jle	short loc_2F276
		cmp	word ptr [si+2], 3E80h
		jge	short loc_2F276
		cmp	word ptr [si+8], 0C180h
		jle	short loc_2F2D6
		cmp	word ptr [si+8], 3E80h
		jge	short loc_2F2D6
		jmp	loc_2EBAD
; ---------------------------------------------------------------------------

loc_2F2D6:				; CODE XREF: sub_2EB56+75Fj
					; sub_2EB56+774j ...
		mov	ax, [si+0Ah]
		sub	ax, cx
		mov	[si+0Ah], ax
		mov	bx, ax
		sub	ax, cs:word_34952
		inc	ax
		jge	short loc_2F30F
		neg	ax
		cmp	ax, cx
		jle	short loc_2F2F0
		mov	ax, cx

loc_2F2F0:				; CODE XREF: sub_2EB56+796j
		sub	bx, cs:word_34950
		inc	bx
		jge	short loc_2F2FC
		add	ax, bx
		jle	short loc_2F30F

loc_2F2FC:				; CODE XREF: sub_2EB56+7A0j
		mov	bx, [si+8]
		cmp	bx, cs:word_3495A
		jge	short loc_2F30C
		add	[si+16h], ax
		jmp	short loc_2F30F
; ---------------------------------------------------------------------------
		align 2

loc_2F30C:				; CODE XREF: sub_2EB56+7AEj
		add	[si+1Ah], ax

loc_2F30F:				; CODE XREF: sub_2EB56+790j
					; sub_2EB56+7A4j ...
		sub	[si+8],	dx
		jmp	short loc_2F2B0
sub_2EB56	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2F314	proc far		; CODE XREF: sub_3AD9C+1E7P
					; sub_3AD9C+20BP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		xor	dx, dx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	ax, [bp+arg_0]
		adc	dx, 0
		pop	bp
		retf
sub_2F314	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2F334	proc far		; CODE XREF: sub_3AD9C+1F7P

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_2]
		mov	dx, [bp+arg_0]
		mov	ax, dx
		shr	bx, 1
		rcr	dx, 1
		shr	bx, 1
		rcr	dx, 1
		shr	bx, 1
		rcr	dx, 1
		shr	bx, 1
		rcr	dx, 1
		and	ax, 0Fh
		pop	bp
		retf
sub_2F334	endp

; ---------------------------------------------------------------------------
word_2F354	dw 0			; DATA XREF: sub_2F377+29w
word_2F356	dw 0			; DATA XREF: sub_2F377+31w
word_2F358	dw 0			; DATA XREF: sub_2F377+14w
word_2F35A	dw 0			; DATA XREF: sub_2F377+1Bw
		db 53h,	52h, 51h, 56h, 57h, 1Eh, 6, 55h, 8Ch, 0D0h, 8Eh
		db 0D8h, 0BBh, 38h, 9, 2Eh, 0FFh, 1Fh, 5Dh, 7, 1Fh, 5Fh
		db 5Eh,	59h, 5Ah, 5Bh, 0CFh

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2F377	proc far		; CODE XREF: sub_39E56+28BP

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	ds
		push	cs
		mov	ax, 99Ch
		push	ax
		call	sub_2FE1C
		add	sp, 4
		mov	ax, [bp+arg_0]
		mov	cs:word_2F358, ax
		mov	ax, [bp+arg_2]
		mov	cs:word_2F35A, ax
		xor	ax, ax
		mov	es, ax
		assume es:nothing
		mov	bx, 90h	; 'ê'
		mov	ax, es:[bx]
		mov	cs:word_2F354, ax
		mov	ax, es:[bx+2]
		mov	cs:word_2F356, ax
		mov	dx, 93Ch
		mov	ax, cs
		mov	ds, ax
		assume ds:seg012
		mov	al, 24h	; '$'
		mov	ah, 25h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		pop	bp
		retf
sub_2F377	endp

; ---------------------------------------------------------------------------
		db 1Eh,	2Eh, 0A1h, 36h,	9, 2Eh,	2Bh, 6,	34h, 9,	74h, 10h
		db 2Eh,	8Bh, 16h, 34h, 9, 2Eh, 8Eh, 1Eh, 36h, 9, 0B0h
		db 24h,	0B4h, 25h, 0CDh, 21h, 1Fh, 0CBh

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2F3DA	proc far		; CODE XREF: sub_25FF6+146P

var_A		= byte ptr -0Ah
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	si, [bp+arg_8]
		mov	[bp+var_A], 1
		jmp	short loc_2F3FD
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	si, [bp+arg_8]
		mov	[bp+var_A], 0

loc_2F3FD:				; CODE XREF: sub_2F3DA+10j
					; seg012:0A14j	...
		mov	ax, [bp+arg_2]
		mov	word_4031E, ax
		mov	ax, [bp+0Ah]
		mov	word_40320, ax
		mov	ax, [bp+arg_4]
		mov	[bp+arg_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+arg_4], ax
		mov	ax, 4924h
		mov	word ptr off_40322, ax
		mov	ax, 13BEh
		mov	word ptr off_40326, ax
		jmp	loc_3180A
sub_2F3DA	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		lea	si, [bp+0Eh]
		mov	byte ptr [bp-0Ah], 0
		jmp	short loc_2F3FD
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		lea	si, [bp+0Eh]
		mov	byte ptr [bp-0Ah], 1
		jmp	short loc_2F3FD
; ---------------------------------------------------------------------------
word_2F448	dw 32h			; DATA XREF: sub_2EB56:loc_2EC4Fr
		db 8Ch,	0Ah, 8Ch, 0Ah, 8Ch, 0Ah, 8Eh, 0Ah, 92h,	0Ah, 98h
		db 0Ah,	0A0h, 0Ah, 0AAh, 0Ah, 0B6h, 0Ah, 0C4h, 0Ah, 0D4h
		db 0Ah,	0E6h, 0Ah, 0FAh, 0Ah, 10h, 0Bh,	28h, 0Bh, 42h
		db 0Bh,	5Eh, 0Bh, 7Ch, 0Bh, 9Ch, 0Bh, 0BEh, 0Bh, 0E2h
		db 0Bh,	8, 0Ch,	30h, 0Ch, 5Ah, 0Ch, 86h, 0Ch, 0B4h, 0Ch
		db 0E4h, 0Ch, 16h, 0Dh,	4Ah, 0Dh, 80h, 0Dh, 0B8h, 0Dh
		db 0F2h, 0Dh, 2Eh, 0Eh,	6Ch, 0Eh, 0ACh,	0Eh, 0EEh, 0Eh
		db 32h,	0Fh, 78h, 0Fh, 0C0h, 0Fh, 0Ah, 10h, 56h, 10h, 0A4h
		db 10h,	0F4h, 10h, 46h,	11h, 9Ah, 11h, 0F0h, 11h, 48h
		db 12h,	0A2h, 12h, 0FEh, 12h, 5Ch, 13h,	0, 80h,	2 dup(55h)
		db 2 dup(0AAh),	0, 40h,	0, 80h,	0, 0C0h, 2 dup(33h), 2 dup(66h)
		db 2 dup(99h), 2 dup(0CCh), 0AAh, 2Ah, 2 dup(55h), 0, 80h
		db 2 dup(0AAh),	55h, 0D5h, 92h,	2 dup(24h), 49h, 0B6h
		db 6Dh,	49h, 92h, 0DBh,	0B6h, 6Dh, 0DBh, 0, 20h, 0, 40h
		db 0, 60h, 0, 80h, 0, 0A0h, 0, 0C0h, 0,	0E0h, 71h, 1Ch
		db 0E3h, 38h, 2	dup(55h), 0C7h,	71h, 38h, 8Eh, 2 dup(0AAh)
		db 1Ch,	0C7h, 8Eh, 0E3h, 99h, 19h, 2 dup(33h), 0CCh, 4Ch
		db 2 dup(66h), 0, 80h, 2 dup(99h), 33h,	0B3h, 2	dup(0CCh)
		db 66h,	0E6h, 45h, 17h,	8Bh, 2Eh, 0D1h,	45h, 17h, 2 dup(5Dh)
		db 74h,	0A2h, 8Bh, 0E8h, 0A2h, 2Eh, 0BAh, 74h, 0D1h, 0BAh
		db 0E8h, 55h, 15h, 0AAh, 2Ah, 0, 40h, 2	dup(55h), 0AAh
		db 6Ah,	0, 80h,	55h, 95h, 2 dup(0AAh), 0, 0C0h,	55h, 0D5h
		db 0AAh, 0EAh, 0B1h, 13h, 62h, 27h, 13h, 3Bh, 0C4h, 4Eh
		db 76h,	62h, 27h, 76h, 0D8h, 2 dup(89h), 9Dh, 3Bh, 0B1h
		db 0ECh, 0C4h, 9Dh, 0D8h, 4Eh, 0ECh, 49h, 12h, 92h, 24h
		db 0DBh, 36h, 24h, 49h,	6Dh, 5Bh, 0B6h,	6Dh, 0,	80h, 49h
		db 2 dup(92h), 0A4h, 0DBh, 0B6h, 24h, 0C9h, 6Dh, 0DBh
		db 0B6h, 0EDh, 2 dup(11h), 2 dup(22h), 2 dup(33h), 2 dup(44h)
		db 2 dup(55h), 2 dup(66h), 2 dup(77h), 2 dup(88h), 2 dup(99h)
		db 2 dup(0AAh),	2 dup(0BBh), 2 dup(0CCh), 2 dup(0DDh)
		db 2 dup(0EEh),	0, 10h,	0, 20h,	0, 30h,	0, 40h,	0, 50h
		db 0, 60h, 0, 70h, 0, 80h, 0, 90h, 0, 0A0h, 0, 0B0h, 0
		db 0C0h, 0, 0D0h, 0, 0E0h, 0, 0F0h, 2 dup(0Fh),	2 dup(1Eh)
		db 2 dup(2Dh), 2 dup(3Ch), 2 dup(4Bh), 2 dup(5Ah), 2 dup(69h)
		db 2 dup(78h), 2 dup(87h), 2 dup(96h), 2 dup(0A5h), 2 dup(0B4h)
		db 2 dup(0C3h),	2 dup(0D2h), 2 dup(0E1h), 2 dup(0F0h)
		db 38h,	0Eh, 71h, 1Ch, 0AAh, 2Ah, 0E3h,	38h, 1Ch, 47h
		db 2 dup(55h), 8Eh, 63h, 0C7h, 71h, 0, 80h, 38h, 8Eh, 71h
		db 9Ch,	2 dup(0AAh), 0E3h, 0B8h, 1Ch, 0C7h, 55h, 0D5h
		db 8Eh,	0E3h, 0C7h, 0F1h, 79h, 0Dh, 0F2h, 1Ah, 6Bh, 28h
		db 0E5h, 35h, 5Eh, 43h,	0D7h, 2	dup(50h), 5Eh, 0CAh, 6Bh
		db 43h,	79h, 0BCh, 86h,	35h, 94h, 0AFh,	0A1h, 28h, 0AFh
		db 0A1h, 0BCh, 1Ah, 0CAh, 94h, 0D7h, 0Dh, 0E5h,	86h, 0F2h
		db 0CCh, 0Ch, 99h, 19h,	66h, 26h, 2 dup(33h), 0, 40h, 0CCh
		db 4Ch,	99h, 59h, 2 dup(66h), 33h, 73h,	0, 80h,	0CCh, 8Ch
		db 2 dup(99h), 66h, 0A6h, 33h, 0B3h, 0,	0C0h, 2	dup(0CCh)
		db 99h,	0D9h, 66h, 0E6h, 33h, 0F3h, 30h, 0Ch, 61h, 18h
		db 92h,	24h, 0C3h, 30h,	0F3h, 3Ch, 24h,	49h, 2 dup(55h)
		db 86h,	61h, 0B6h, 6Dh,	0E7h, 79h, 18h,	86h, 49h, 92h
		db 79h,	9Eh, 2 dup(0AAh), 0DBh,	0B6h, 0Ch, 0C3h, 3Ch, 0CFh
		db 6Dh,	0DBh, 9Eh, 0E7h, 0CFh, 0F3h, 0A2h, 0Bh,	45h, 17h
		db 0E8h, 22h, 8Bh, 2 dup(2Eh), 3Ah, 0D1h, 45h, 74h, 51h
		db 17h,	5Dh, 0BAh, 68h,	5Dh, 74h, 0, 80h, 0A2h,	8Bh, 45h
		db 97h,	0E8h, 0A2h, 8Bh, 0AEh, 2Eh, 0BAh, 0D1h,	0C5h, 74h
		db 0D1h, 17h, 0DDh, 0BAh, 0E8h,	5Dh, 0F4h, 21h,	0Bh, 42h
		db 16h,	64h, 21h, 85h, 2Ch, 0A6h, 37h
		db 0C8h, 42h, 0E9h, 4Dh, 0Bh, 59h, 2Ch,	64h, 4Dh, 2 dup(6Fh)
		db 7Ah,	90h, 85h, 0B2h,	90h, 0D3h, 9Bh,	0F4h, 0A6h, 16h
		db 0B2h, 37h, 0BDh, 59h, 0C8h, 7Ah, 0D3h, 9Bh, 0DEh, 0BDh
		db 0E9h, 0DEh, 0F4h, 0AAh, 0Ah,	55h, 15h, 0, 20h, 0AAh
		db 2Ah,	55h, 35h, 0, 40h, 0AAh,	4Ah, 2 dup(55h), 0, 60h
		db 0AAh, 6Ah, 55h, 75h,	0, 80h,	0AAh, 8Ah, 55h,	95h, 0
		db 0A0h, 2 dup(0AAh), 55h, 0B5h, 0, 0C0h, 0AAh,	0CAh, 55h
		db 0D5h, 0, 0E0h, 0AAh,	0EAh, 55h, 0F5h, 3Dh, 0Ah, 7Ah
		db 14h,	0B8h, 1Eh, 0F5h, 28h, 2	dup(33h), 70h, 3Dh, 0AEh
		db 47h,	0EBh, 51h, 28h,	5Ch, 2 dup(66h), 0A3h, 70h, 0E1h
		db 7Ah,	1Eh, 85h, 5Ch, 8Fh, 2 dup(99h),	0D7h, 0A3h, 14h
		db 0AEh, 51h, 0B8h, 8Fh, 0C2h, 2 dup(0CCh), 0Ah, 0D7h
		db 47h,	0E1h, 85h, 0EBh, 0C2h, 0F5h, 0D8h, 9, 0B1h, 13h
		db 89h,	1Dh, 62h, 27h, 3Bh, 31h, 13h, 3Bh, 0ECh, 44h, 0C4h
		db 4Eh,	9Dh, 58h, 76h, 62h, 4Eh, 6Ch, 27h, 76h,	0, 80h
		db 0D8h, 89h, 0B1h, 93h, 89h, 9Dh, 62h,	0A7h, 3Bh, 0B1h
		db 13h,	0BBh, 0ECh, 2 dup(0C4h), 0CEh, 9Dh, 0D8h, 76h
		db 0E2h, 4Eh, 0ECh, 27h, 0F6h, 7Bh, 9, 0F6h, 12h, 71h
		db 1Ch,	0EDh, 25h, 68h,	2Fh, 0E3h, 38h,	5Eh, 42h, 0DAh
		db 4Bh,	2 dup(55h), 0D0h, 5Eh, 4Bh, 68h, 0C7h, 71h, 42h
		db 7Bh,	0BDh, 84h, 38h,	8Eh, 0B4h, 97h,	2Fh, 0A1h, 2 dup(0AAh)
		db 25h,	0B4h, 0A1h, 0BDh, 1Ch, 0C7h, 97h, 0D0h,	12h, 0DAh
		db 8Eh,	0E3h, 9, 0EDh, 84h, 0F6h, 24h, 9, 49h, 12h, 6Dh
		db 1Bh,	92h, 24h, 0B6h,	2Dh, 0DBh, 36h,	0, 40h,	24h, 2 dup(49h)
		db 52h,	6Dh, 5Bh, 92h, 64h, 0B6h, 6Dh, 0DBh, 76h, 0, 80h
		db 24h,	89h, 49h, 92h, 6Dh, 9Bh, 92h, 0A4h, 0B6h, 0ADh
		db 0DBh, 0B6h, 0, 0C0h,	24h, 0C9h, 49h,	0D2h, 6Dh, 0DBh
		db 92h,	0E4h, 0B6h, 0EDh, 0DBh,	0F6h, 0D3h, 8, 0A7h, 11h
		db 7Bh,	1Ah, 4Fh, 2 dup(23h), 2Ch, 0F7h, 34h, 0CBh, 3Dh
		db 9Eh,	46h, 72h, 4Fh, 46h, 58h, 1Ah, 61h, 0EEh, 69h, 0C2h
		db 72h,	96h, 7Bh, 69h, 84h, 3Dh, 8Dh, 11h, 96h,	0E5h, 9Eh
		db 0B9h, 0A7h, 8Dh, 0B0h, 61h, 0B9h, 34h, 0C2h,	8, 0CBh
		db 0DCh, 0D3h, 0B0h, 0DCh, 84h,	0E5h, 58h, 0EEh, 2Ch, 0F7h
		db 88h,	8, 2 dup(11h), 99h, 19h, 2 dup(22h), 0AAh, 2Ah
		db 2 dup(33h), 0BBh, 3Bh, 2 dup(44h), 0CCh, 4Ch, 2 dup(55h)
		db 0DDh, 5Dh, 2	dup(66h), 0EEh,	6Eh, 2 dup(77h), 0, 80h
		db 2 dup(88h), 11h, 91h, 2 dup(99h), 22h, 0A2h,	2 dup(0AAh)
		db 33h,	0B3h, 2	dup(0BBh), 44h,	0C4h, 2	dup(0CCh), 55h
		db 0D5h, 2 dup(0DDh), 66h, 0E6h, 2 dup(0EEh), 77h, 0F7h
		db 42h,	8, 84h,	10h, 0C6h, 18h,	8, 21h,	4Ah, 29h, 8Ch
		db 31h,	0CEh, 39h, 10h,	42h, 52h, 4Ah, 94h, 52h, 0D6h
		db 5Ah,	18h, 63h, 5Ah, 6Bh, 9Ch, 73h, 0DEh, 7Bh, 21h, 84h
		db 63h,	8Ch, 0A5h, 94h,	0E7h, 9Ch, 29h,	0A5h, 6Bh, 2 dup(0ADh)
		db 0B5h, 0EFh, 0BDh, 31h, 0C6h,	73h, 0CEh, 0B5h, 0D6h
		db 0F7h, 0DEh, 39h, 0E7h, 7Bh, 0EFh, 0BDh, 0F7h, 0, 8
		db 0, 10h, 0, 18h, 0, 20h, 0, 28h, 0, 30h, 0, 38h, 0, 40h
		db 0, 48h, 0, 50h, 0, 58h, 0, 60h, 0, 68h, 0, 70h, 0, 78h
		db 0, 80h, 0, 88h, 0, 90h, 0, 98h, 0, 0A0h, 0, 0A8h, 0
		db 0B0h, 0, 0B8h, 0, 0C0h, 0, 0C8h, 0, 0D0h, 0,	0D8h, 0
		db 0E0h, 0, 0E8h, 0, 0F0h, 0, 0F8h, 0C1h, 7, 83h, 0Fh
		db 45h,	17h, 7,	1Fh, 0C9h, 26h,	8Bh, 2Eh, 4Dh, 36h, 0Fh
		db 3Eh,	0D1h, 45h, 93h
		db 4Dh,	2 dup(55h), 17h, 5Dh, 0D9h, 64h, 9Bh, 6Ch, 5Dh
		db 74h,	1Fh, 7Ch, 0E0h,	83h, 0A2h, 8Bh,	64h, 93h, 26h
		db 9Bh,	0E8h, 0A2h, 2 dup(0AAh), 6Ch, 0B2h, 2Eh, 0BAh
		db 0F0h, 0C1h, 0B2h, 0C9h, 74h,	0D1h, 36h, 0D9h, 0F8h
		db 0E0h, 0BAh, 0E8h, 7Ch, 0F0h,	3Eh, 0F8h, 87h,	7, 2 dup(0Fh)
		db 96h,	16h, 2 dup(1Eh), 0A5h, 25h, 2 dup(2Dh),	0B4h, 34h
		db 2 dup(3Ch), 0C3h, 43h, 2 dup(4Bh), 0D2h, 52h, 2 dup(5Ah)
		db 0E1h, 61h, 2	dup(69h), 0F0h,	70h, 2 dup(78h), 0, 80h
		db 2 dup(87h), 0Fh, 8Fh, 2 dup(96h), 1Eh, 9Eh, 2 dup(0A5h)
		db 2Dh,	0ADh, 2	dup(0B4h), 3Ch,	0BCh, 2	dup(0C3h), 4Bh
		db 0CBh, 2 dup(0D2h), 5Ah, 0DAh, 2 dup(0E1h), 69h, 0E9h
		db 2 dup(0F0h),	78h, 0F8h, 50h,	7, 0A0h, 0Eh, 0F1h, 15h
		db 41h,	1Dh, 92h, 24h, 0E2h, 2Bh, 2 dup(33h), 83h, 3Ah
		db 0D4h, 41h, 24h, 49h,	75h, 50h, 0C5h,	57h, 15h, 5Fh
		db 2 dup(66h), 0B6h, 6Dh, 7, 75h, 57h, 7Ch, 0A8h, 83h
		db 0F8h, 8Ah, 49h, 92h,	2 dup(99h), 0EAh, 0A0h,	3Ah, 0A8h
		db 8Ah,	0AFh, 0DBh, 0B6h, 2Bh, 0BEh, 7Ch, 0C5h,	2 dup(0CCh)
		db 1Dh,	0D4h, 6Dh, 0DBh, 0BEh, 0E2h, 0Eh, 0EAh,	5Fh, 0F1h
		db 0AFh, 0F8h, 1Ch, 7, 38h, 0Eh, 55h, 15h, 71h,	1Ch, 8Eh
		db 23h,	0AAh, 2Ah, 0C7h, 31h, 0E3h, 38h, 0, 40h, 1Ch, 47h
		db 38h,	4Eh, 2 dup(55h), 71h, 5Ch, 8Eh,	63h, 0AAh, 6Ah
		db 0C7h, 71h, 0E3h, 78h, 0, 80h, 1Ch, 87h, 38h,	8Eh, 55h
		db 95h,	71h, 9Ch, 8Eh, 0A3h, 2 dup(0AAh), 0C7h,	0B1h, 0E3h
		db 0B8h, 0, 0C0h, 1Ch, 0C7h, 38h, 0CEh,	55h, 0D5h, 71h
		db 0DCh, 8Eh, 0E3h, 0AAh, 0EAh,	0C7h, 0F1h, 0E3h, 0F8h
		db 0EBh, 6, 0D6h, 0Dh, 0C1h, 14h, 0ACh,	1Bh, 98h, 22h
		db 83h,	29h, 6Eh, 30h, 59h, 37h, 45h, 3Eh, 30h,	45h, 1Bh
		db 4Ch,	6, 53h,	0F2h, 59h, 0DDh, 60h, 0C8h, 67h, 0B3h
		db 6Eh,	9Fh, 75h, 8Ah, 7Ch, 75h, 83h, 60h, 8Ah,	4Ch, 91h
		db 37h,	98h, 22h, 9Fh, 0Dh, 0A6h, 0F9h,	0ACh, 0E4h, 0B3h
		db 0CFh, 2 dup(0BAh), 0C1h, 0A6h, 0C8h,	91h, 0CFh, 7Ch
		db 0D6h, 67h, 0DDh, 53h, 0E4h, 3Eh, 0EBh, 29h, 0F2h, 14h
		db 0F9h, 0BCh, 6, 79h, 0Dh, 35h, 14h, 0F2h, 1Ah, 0AFh
		db 21h,	6Bh, 2 dup(28h), 2Fh, 0E5h, 35h, 0A1h, 3Ch, 5Eh
		db 43h,	1Ah, 4Ah, 0D7h,	50h, 94h, 57h, 50h, 5Eh, 0Dh, 65h
		db 0CAh, 6Bh, 86h, 72h,	43h, 79h, 0, 80h, 0BCh,	86h, 79h
		db 8Dh,	35h, 94h, 0F2h,	9Ah, 0AFh, 0A1h, 6Bh, 0A8h, 28h
		db 0AFh, 0E5h, 0B5h, 0A1h, 0BCh, 5Eh, 0C3h, 1Ah, 0CAh
		db 0D7h, 0D0h, 94h, 0D7h, 50h, 0DEh, 0Dh, 0E5h,	0CAh, 0EBh
		db 86h,	0F2h, 43h, 0F9h, 90h, 6, 20h, 0Dh, 0B1h, 13h, 41h
		db 1Ah,	0D2h, 20h, 62h,	27h, 0F2h, 2Dh,	83h, 34h, 13h
		db 3Bh,	0A4h, 41h, 34h,	48h, 0C4h, 4Eh,	2 dup(55h), 0E5h
		db 5Bh,	76h, 62h, 6, 69h, 96h, 6Fh, 27h, 76h, 0B7h, 7Ch
		db 48h,	83h, 0D8h, 89h,	69h, 90h, 0F9h,	96h, 89h, 9Dh
		db 1Ah,	0A4h, 2	dup(0AAh), 3Bh,	0B1h, 0CBh, 0B7h, 5Bh
		db 0BEh, 0ECh, 0C4h, 7Ch, 0CBh,	0Dh, 0D2h, 9Dh,	0D8h, 2Dh
		db 0DFh, 0BEh, 0E5h, 4Eh, 0ECh,	0DFh, 0F2h, 6Fh, 0F9h
		db 66h,	6, 0CCh, 0Ch, 33h, 13h,	99h, 19h, 0, 20h, 66h
		db 26h,	0CCh, 2Ch, 2 dup(33h), 99h, 39h, 0, 40h, 66h, 46h
		db 0CCh, 4Ch, 33h, 53h,	99h, 59h, 0, 60h, 2 dup(66h), 0CCh
		db 6Ch,	33h, 73h, 99h, 79h, 0, 80h, 66h, 86h, 0CCh, 8Ch
		db 33h,	93h, 2 dup(99h), 0, 0A0h, 66h, 0A6h, 0CCh, 0ACh
		db 33h,	0B3h, 99h, 0B9h, 0, 0C0h, 66h, 0C6h, 2 dup(0CCh)
		db 33h,	0D3h, 99h, 0D9h, 0, 0E0h, 66h, 0E6h, 0CCh
		db 0ECh, 33h, 0F3h, 99h, 0F9h, 3Eh, 6, 7Ch, 0Ch, 0BBh
		db 12h,	0F9h, 18h, 38h,	1Fh, 76h, 25h, 0B5h, 2Bh, 0F3h
		db 2 dup(31h), 38h, 70h, 3Eh, 0AEh, 44h, 0EDh, 4Ah, 2Bh
		db 51h,	6Ah, 57h, 0A8h,	5Dh, 0E7h, 63h,	25h, 6Ah, 63h
		db 70h,	0A2h, 76h, 0E0h, 7Ch, 1Fh, 83h,	5Dh, 89h, 9Ch
		db 8Fh,	0DAh, 95h, 18h,	9Ch, 57h, 0A2h,	95h, 0A8h, 0D4h
		db 0AEh, 12h, 0B5h, 51h, 0BBh, 8Fh, 0C1h, 0CEh,	0C7h, 0Ch
		db 0CEh, 4Ah, 0D4h, 89h, 0DAh, 0C7h, 0E0h, 6, 0E7h, 44h
		db 0EDh, 83h, 0F3h, 0C1h, 0F9h,	18h, 6,	30h, 0Ch, 49h
		db 12h,	61h, 18h, 79h, 1Eh, 92h, 24h, 0AAh, 2Ah, 0C3h
		db 30h,	0DBh, 36h, 0F3h, 3Ch, 0Ch, 43h,	24h, 49h, 3Ch
		db 4Fh,	2 dup(55h), 6Dh, 5Bh, 86h, 61h,	9Eh, 67h, 0B6h
		db 6Dh,	0CFh, 73h, 0E7h, 79h, 0, 80h, 18h, 86h,	30h, 8Ch
		db 49h,	92h, 61h, 98h, 79h, 9Eh, 92h, 0A4h, 2 dup(0AAh)
		db 0C3h, 0B0h, 0DBh, 0B6h, 0F3h, 0BCh, 0Ch, 0C3h, 24h
		db 0C9h, 3Ch, 0CFh, 55h, 0D5h, 6Dh, 0DBh, 86h, 0E1h, 9Eh
		db 0E7h, 0B6h, 0EDh, 0CFh, 0F3h, 0E7h, 0F9h, 0F4h, 5, 0E8h
		db 0Bh,	0DCh, 11h, 0D0h, 17h, 0C4h, 1Dh, 0B8h, 23h, 0ACh
		db 29h,	0A0h, 2Fh, 94h,	35h, 88h, 3Bh, 7Dh, 41h, 71h, 47h
		db 65h,	4Dh, 59h, 53h, 4Dh, 59h, 41h, 5Fh, 35h,	65h, 29h
		db 6Bh,	1Dh, 71h, 11h, 77h, 5, 7Dh, 0FAh, 82h, 0EEh, 88h
		db 0E2h, 8Eh, 0D6h, 94h, 0CAh, 9Ah, 0BEh, 0A0h,	0B2h, 2	dup(0A6h)
		db 0ACh, 9Ah, 0B2h, 8Eh, 0B8h, 82h, 0BEh, 77h, 0C4h, 6Bh
		db 0CAh, 5Fh, 0D0h, 53h, 0D6h, 47h, 0DCh, 3Bh, 0E2h, 2Fh
		db 0E8h, 23h, 0EEh, 17h, 0F4h, 0Bh, 0FAh, 0D1h,	5, 0A2h
		db 0Bh,	74h, 11h, 45h, 2 dup(17h), 1Dh,	0E8h, 22h, 0BAh
		db 28h,	8Bh, 2Eh, 5Dh, 34h, 2Eh, 3Ah, 0, 40h, 0D1h, 45h
		db 0A2h, 4Bh, 74h, 51h,	45h, 57h, 17h, 5Dh, 0E8h, 62h
		db 0BAh, 68h, 8Bh, 6Eh,	5Dh, 74h, 2Eh, 7Ah, 0, 80h, 0D1h
		db 85h,	0A2h, 8Bh, 74h,	91h, 45h, 97h, 17h, 9Dh, 0E8h
		db 0A2h, 0BAh, 0A8h, 8Bh, 0AEh,	5Dh, 0B4h, 2Eh,	0BAh, 0
		db 0C0h, 0D1h, 0C5h, 0A2h, 0CBh, 74h, 0D1h, 45h, 0D7h
		db 17h,	0DDh, 0E8h, 0E2h, 0BAh,	0E8h, 8Bh, 0EEh, 5Dh, 0F4h
		db 2Eh,	0FAh, 0B0h, 5, 60h, 0Bh, 2 dup(11h), 0C1h, 16h
		db 71h,	1Ch, 2 dup(22h), 0D2h, 27h, 82h, 2Dh, 2	dup(33h)
		db 0E3h, 38h, 93h, 3Eh,	2 dup(44h), 0F4h, 49h, 0A4h, 4Fh
		db 2 dup(55h), 5, 5Bh, 0B6h, 60h, 2 dup(66h), 16h, 6Ch
		db 0C7h, 71h, 2	dup(77h), 27h, 7Dh, 0D8h, 82h, 2 dup(88h)
		db 38h,	8Eh, 0E9h, 93h,	2 dup(99h), 49h, 9Fh, 0FAh, 0A4h
		db 2 dup(0AAh),	5Bh, 0B0h, 0Bh,	0B6h, 2	dup(0BBh), 6Ch
		db 0C1h, 1Ch, 0C7h, 2 dup(0CCh), 7Dh, 0D2h, 2Dh, 0D8h
		db 2 dup(0DDh),	8Eh, 0E3h, 3Eh,	0E9h, 2	dup(0EEh), 9Fh
		db 0F4h, 4Fh, 0FAh, 90h, 5, 21h, 0Bh, 0B2h, 10h, 42h, 16h
		db 0D3h, 1Bh, 64h, 21h,	0F4h, 26h, 85h,	2Ch, 16h, 32h
		db 0A6h, 2 dup(37h), 3Dh, 0C8h,	42h, 59h, 48h, 0E9h, 4Dh
		db 7Ah,	53h, 0Bh, 59h, 9Bh, 5Eh, 2Ch, 64h, 0BDh, 69h, 4Dh
		db 6Fh,	0DEh, 74h, 6Fh,	7Ah, 0,	80h, 90h, 85h, 21h, 8Bh
		db 0B2h, 90h, 42h, 96h,	0D3h, 9Bh, 64h,	0A1h, 0F4h, 0A6h
		db 85h,	0ACh, 16h, 0B2h, 0A6h, 0B7h, 37h, 0BDh,	0C8h, 0C2h
		db 59h,	0C8h, 0E9h, 0CDh, 7Ah, 0D3h, 0Bh, 0D9h,	9Bh, 0DEh
		db 2Ch,	0E4h, 0BDh, 0E9h, 4Dh, 0EFh, 0DEh, 0F4h, 6Fh, 0FAh
		db 72h,	5, 0E4h, 0Ah, 57h, 10h,	0C9h, 15h, 3Bh,	1Bh, 0AEh
		db 2 dup(20h), 26h, 93h, 2Bh, 5, 31h
		db 77h,	36h, 0EAh, 3Bh,	5Ch, 41h, 0CEh,	46h, 41h, 4Ch
		db 0B3h, 51h, 26h, 57h,	98h, 5Ch, 0Ah, 62h, 7Dh, 67h, 0EFh
		db 6Ch,	62h, 72h, 0D4h,	77h, 46h, 7Dh, 0B9h, 82h, 2Bh
		db 88h,	9Dh, 8Dh, 10h, 93h, 82h, 98h, 0F5h, 9Dh, 67h, 0A3h
		db 0D9h, 0A8h, 4Ch, 0AEh, 0BEh,	0B3h, 31h, 0B9h, 0A3h
		db 0BEh, 15h, 0C4h, 88h, 0C9h, 0FAh, 0CEh, 6Ch,	0D4h, 0DFh
		db 0D9h, 51h, 0DFh, 0C4h, 0E4h,	36h, 0EAh, 0A8h, 0EFh
		db 1Bh,	0F5h, 8Dh, 0FAh, 55h, 5, 0AAh, 0Ah, 0, 10h, 55h
		db 15h,	0AAh, 1Ah, 0, 20h, 55h,	25h, 0AAh, 2Ah,	0, 30h
		db 55h,	35h, 0AAh, 3Ah,	0, 40h,	55h, 45h, 0AAh,	4Ah, 0
		db 50h,	2 dup(55h), 0AAh, 5Ah, 0, 60h, 55h, 65h, 0AAh
		db 6Ah,	0, 70h,	55h, 75h, 0AAh,	7Ah, 0,	80h, 55h, 85h
		db 0AAh, 8Ah, 0, 90h, 55h, 95h,	0AAh, 9Ah, 0, 0A0h, 55h
		db 0A5h, 2 dup(0AAh), 0, 0B0h, 55h, 0B5h, 0AAh,	0BAh, 0
		db 0C0h, 55h, 0C5h, 0AAh, 0CAh,	0, 0D0h, 55h, 0D5h, 0AAh
		db 0DAh, 0, 0E0h, 55h, 0E5h, 0AAh, 0EAh, 0, 0F0h, 55h
		db 0F5h, 0AAh, 0FAh, 39h, 5, 72h, 0Ah, 0ACh, 0Fh, 0E5h
		db 14h,	1Fh, 1Ah, 58h, 1Fh, 92h, 24h, 0CBh, 29h, 5, 2Fh
		db 3Eh,	34h, 78h, 39h, 0B1h, 3Eh, 0EBh,	43h, 24h, 49h
		db 5Eh,	4Eh, 97h, 53h, 0D0h, 58h, 0Ah, 5Eh, 43h, 63h, 7Dh
		db 68h,	0B6h, 6Dh, 0F0h, 72h, 29h, 78h,	63h, 7Dh, 9Ch
		db 82h,	0D6h, 87h, 0Fh,	8Dh, 49h, 92h, 82h, 97h, 0BCh
		db 9Ch,	0F5h, 0A1h, 2Fh, 0A7h, 68h, 0ACh, 0A1h,	0B1h, 0DBh
		db 0B6h, 14h, 0BCh, 4Eh, 0C1h, 87h, 0C6h, 0C1h,	0CBh, 0FAh
		db 0D0h, 34h, 0D6h, 6Dh, 0DBh, 0A7h, 2 dup(0E0h), 0E5h
		db 1Ah,	0EBh, 53h, 0F0h, 8Dh, 0F5h, 0C6h, 0FAh

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2FDDE	proc far		; CODE XREF: sub_1D5B4+108P
					; sub_1D5B4+129P ...

var_1C		= byte ptr -1Ch
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 1Ch
		mov	ax, [bp+arg_8]
		lea	bx, [bp+var_1C]
		mov	[bx+10h], ax
		push	bx
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_2EB56
		add	sp, 0Ah
		or	ax, ax
		jnz	short loc_2FE18
		lea	bx, [bp+var_1C]
		cmp	word ptr [bx+0Eh], 0
		jle	short loc_2FE18
		push	bx
		call	sub_333C0
		add	sp, 2

loc_2FE18:				; CODE XREF: sub_2FDDE+26j
					; sub_2FDDE+2Fj
		mov	sp, bp
		pop	bp
		retf
sub_2FDDE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2FE1C	proc far		; CODE XREF: sub_2F377+9P
					; sub_301A0+BEP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	cx, 0Ah
		mov	bx, 3FB4h
		mov	dx, [bp+arg_2]

loc_2FE2B:				; CODE XREF: sub_2FE1C+21j
		cmp	[bx], ax
		jnz	short loc_2FE34
		cmp	[bx+2],	dx
		jz	short loc_2FE57

loc_2FE34:				; CODE XREF: sub_2FE1C+11j
		cmp	word ptr [bx+2], 0
		jz	short loc_2FE48
		add	bx, 4
		loop	loc_2FE2B
		mov	ax, 3FE0h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_2FE48:				; CODE XREF: sub_2FE1C+1Cj
		mov	word ptr [bx+2], 0
		mov	[bx], ax
		mov	word ptr [bx+6], 0
		mov	[bx+2],	dx

loc_2FE57:				; CODE XREF: sub_2FE1C+16j
		pop	bp
		retf
sub_2FE1C	endp


; =============== S U B	R O U T	I N E =======================================


sub_2FE59	proc far		; CODE XREF: sub_2EA2A+11P sub_2FE74P
		push	di
		mov	di, 28h	; '('

loc_2FE5D:				; CODE XREF: sub_2FE59+17j
		mov	ax, [di+3FB6h]
		or	ax, ax
		jz	short loc_2FE6B
		push	di
		call	dword ptr [di+3FB4h]
		pop	di

loc_2FE6B:				; CODE XREF: sub_2FE59+Aj
		sub	di, 4
		jl	short loc_2FE72
		jmp	short loc_2FE5D
; ---------------------------------------------------------------------------

loc_2FE72:				; CODE XREF: sub_2FE59+15j
		pop	di
		retf
sub_2FE59	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_2FE74	proc near		; CODE XREF: sub_29F5C+45P
		call	sub_2FE59
		xor	ax, ax
		push	ax
		call	far ptr	sub_2CDEC
sub_2FE74	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2FE82	proc far		; CODE XREF: sub_30D88+2EP
					; sub_30E07+55P

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	[bp+var_6], ax
		jmp	short loc_2FEB3
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		push	si
		push	di
		mov	[bp+var_6], 0
		jmp	short loc_2FEB3
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		push	si
		push	di
		mov	[bp+var_6], 1

loc_2FEB3:				; CODE XREF: sub_2FE82+Fj
					; sub_2FE82+20j
		mov	dx, [bp+arg_0]
		mov	ah, 3Dh	; '='
		xor	al, al
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 0 - read
		jnb	short loc_2FEDD
		cmp	[bp+var_6], 0
		jnz	short loc_2FECD
		xor	ax, ax
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2FECD:				; CODE XREF: sub_2FE82+40j
		mov	ax, 3FF6h
		mov	bx, ss
		mov	ds, bx
		push	[bp+arg_0]
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_2FEDD:				; CODE XREF: sub_2FE82+3Aj
		mov	[bp+var_2], ax
		mov	bx, ax
		sub	cx, cx
		sub	dx, dx
		mov	ax, 4202h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from end of file
		push	dx
		push	ax
		sub	dx, dx
		mov	ax, 4200h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from beginning of	file
		pop	ax
		pop	dx
		xor	bx, bx
		test	ax, 0Fh
		jz	short loc_2FF00
		mov	bx, 1

loc_2FF00:				; CODE XREF: sub_2FE82+79j
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		add	ax, bx
		mov	[bp+var_4], ax
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		mov	ax, [bp+var_4]
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_2FE82	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2FF26	proc far		; CODE XREF: sub_30E07+2BP

var_8		= word ptr -8
var_6		= byte ptr -6
var_5		= word ptr -5
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	[bp+var_8], ax
		jmp	short loc_2FF57
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		push	si
		push	di
		mov	[bp+var_8], 0
		jmp	short loc_2FF57
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		push	si
		push	di
		mov	[bp+var_8], 1

loc_2FF57:				; CODE XREF: sub_2FF26+Fj
					; sub_2FF26+20j
		mov	dx, [bp+arg_0]
		mov	dx, [bp+arg_0]
		mov	ah, 3Dh	; '='
		xor	al, al
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 0 - read
		jnb	short loc_2FF68
		jmp	short loc_2FFB5
; ---------------------------------------------------------------------------
		align 2

loc_2FF68:				; CODE XREF: sub_2FF26+3Dj
		mov	[bp+var_2], ax
		mov	bx, [bp+var_2]
		lea	dx, [bp+var_6]
		mov	cx, 4
		mov	ah, 3Fh
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		cmp	ax, cx
		jnz	short loc_2FFAE
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		mov	ax, [bp+var_5]
		mov	dx, [bp-3]
		xor	dh, dh
		xor	bx, bx
		test	ax, 0Fh
		jz	short loc_2FF95
		mov	bx, 1

loc_2FF95:				; CODE XREF: sub_2FF26+6Aj
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		add	ax, bx
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2FFAE:				; CODE XREF: sub_2FF26+54j
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle

loc_2FFB5:				; CODE XREF: sub_2FF26+3Fj
		cmp	[bp+var_8], 0
		jnz	short loc_2FFC4
		xor	ax, ax
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_2FFC4:				; CODE XREF: sub_2FF26+93j
		mov	ax, 3FF6h
		mov	bx, ss
		mov	ds, bx
		push	[bp+arg_0]
		push	ax
		call	far ptr	sub_2EA2A
sub_2FF26	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_2FFD4	proc far		; CODE XREF: _main+3DEP sub_23B4C+B48P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	dx, 406Ah
		mov	ah, 1Ah
		int	21h		; DOS -	SET DISK TRANSFER AREA ADDRESS
					; DS:DX	-> disk	transfer buffer
		mov	dx, [bp+arg_0]
		mov	cl, 6
		mov	ah, 4Eh
		int	21h		; DOS -	2+ - FIND FIRST	ASCIZ (FINDFIRST)
					; CX = search attributes
					; DS:DX	-> ASCIZ filespec
					; (drive, path,	and wildcards allowed)
		jb	short loc_3002A
		mov	di, 4004h
		mov	word_3F7D8, di
		mov	si, [bp+arg_0]
		mov	cx, 57h	; 'W'
		mov	ax, ds
		mov	es, ax
		assume es:dseg

loc_2FFFD:				; CODE XREF: sub_2FFD4:loc_3000Fj
		lodsb
		stosb
		cmp	al, 0
		jz	short loc_30011
		cmp	al, 3Ah	; ':'
		jz	short loc_3000B
		cmp	al, 5Ch	; '\'
		jnz	short loc_3000F

loc_3000B:				; CODE XREF: sub_2FFD4+31j
		mov	word_3F7D8, di

loc_3000F:				; CODE XREF: sub_2FFD4+35j
		loop	loc_2FFFD

loc_30011:				; CODE XREF: sub_2FFD4+2Dj
					; sub_3002E+13j
		mov	ax, ds
		mov	es, ax
		mov	si, 4088h
		mov	di, word_3F7D8
		mov	cx, 0Dh
		cld
		rep movsb
		mov	ax, 4004h

loc_30025:				; CODE XREF: sub_2FFD4+58j
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3002A:				; CODE XREF: sub_2FFD4+16j
					; sub_3002E+11j
		xor	ax, ax
		jmp	short loc_30025
sub_2FFD4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3002E	proc far		; CODE XREF: sub_39E4CP
		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	dx, 406Ah
		mov	ah, 1Ah
		int	21h		; DOS -	SET DISK TRANSFER AREA ADDRESS
					; DS:DX	-> disk	transfer buffer
		mov	ah, 4Fh
		int	21h		; DOS -	2+ - FIND NEXT ASCIZ (FINDNEXT)
					; [DTA]	= data block from
					; last AH = 4Eh/4Fh call
		jb	short loc_3002A
		jmp	short loc_30011
sub_3002E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30044	proc far		; CODE XREF: sub_14712+5FFP
					; sub_14712+639P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		imul	[bp+arg_2]
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		adc	dx, 0
		mov	ax, dx
		pop	bp
		retf
sub_30044	endp


; =============== S U B	R O U T	I N E =======================================


sub_3005E	proc far		; CODE XREF: sub_39E56+22FP
		push	di
		mov	byte_3F85A, 1
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		mov	ax, es:10h
		and	ax, 0FFCFh
		or	ax, 20h
		mov	es:10h,	ax
		mov	ah, 0
		mov	al, 4
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	al, 3
		mov	dx, 3BFh
		out	dx, al		; Printer Status Bits:
					; 3: 0=printer signals an error
					; 4: 1=printer is selected
					; 5: 1=out of paper
					; 6: 0=ready for next character
					; 7: 0=busy or offline or error
		mov	al, 2
		mov	dx, 3B8h
		out	dx, al
		mov	cx, 0Ch
		mov	dx, 3B4h
		xor	bx, bx

loc_30091:				; CODE XREF: sub_3005E+3Ej
		mov	al, bl
		out	dx, al		; Video: CRT cntrlr addr
					; horizontal total
		inc	dx
		mov	al, [bx+40ECh]
		out	dx, al		; Video: CRT controller	internal registers
		dec	dx
		inc	bx
		loop	loc_30091
		cld
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		mov	cx, 4000h
		xor	ax, ax
		rep stosw
		mov	al, 8Ah	; 'ä'
		mov	dx, 3B8h
		out	dx, al
		pop	di
		retf
sub_3005E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_300B6	proc far		; CODE XREF: sub_14712+144P
					; sub_18466+C2P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_2EA4E
		add	sp, 4
		or	ax, ax
		jge	short loc_300CD
		neg	ax

loc_300CD:				; CODE XREF: sub_300B6+13j
		cmp	ax, 100h
		jl	short loc_300D7
		sub	ax, 200h
		neg	ax

loc_300D7:				; CODE XREF: sub_300B6+1Aj
		cmp	ax, 80h	; 'Ä'
		jg	short loc_300FE
		push	ax
		call	sub_3272C
		add	sp, 2
		mov	bx, ax
		mov	dx, [bp+arg_2]
		or	dx, dx
		jge	short loc_300F0
		neg	dx

loc_300F0:				; CODE XREF: sub_300B6+36j
		xor	ax, ax
		sar	dx, 1
		rcr	ax, 1
		sar	dx, 1
		rcr	ax, 1
		div	bx
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_300FE:				; CODE XREF: sub_300B6+24j
		push	ax
		call	sub_326DE
		add	sp, 2
		mov	bx, ax
		mov	dx, [bp+arg_0]
		or	dx, dx
		jge	short loc_30112
		neg	dx

loc_30112:				; CODE XREF: sub_300B6+58j
		xor	ax, ax
		sar	dx, 1
		rcr	ax, 1
		sar	dx, 1
		rcr	ax, 1
		div	bx
		pop	bp
		retf
sub_300B6	endp


; =============== S U B	R O U T	I N E =======================================


sub_30120	proc far		; CODE XREF: _main+58EP
		push	di
		cmp	byte_3F85A, 0
		jnz	short loc_3012F
		call	sub_303D8
		pop	di
		retf
; ---------------------------------------------------------------------------

loc_3012F:				; CODE XREF: sub_30120+6j
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		mov	ax, es:10h
		and	ax, 0FFCFh
		or	ax, 30h
		mov	es:10h,	ax
		mov	al, 3
		mov	dx, 3BFh
		out	dx, al		; Printer Status Bits:
					; 3: 0=printer signals an error
					; 4: 1=printer is selected
					; 5: 1=out of paper
					; 6: 0=ready for next character
					; 7: 0=busy or offline or error
		mov	al, 20h	; ' '
		mov	dx, 3B8h
		out	dx, al
		mov	cx, 0Ch
		mov	dx, 3B4h
		xor	bx, bx

loc_30156:				; CODE XREF: sub_30120+41j
		mov	al, bl
		out	dx, al		; Video: CRT cntrlr addr
					; horizontal total
		inc	dx
		mov	al, [bx+40F8h]
		out	dx, al		; Video: CRT controller	internal registers
		dec	dx
		inc	bx
		loop	loc_30156
		cld
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		mov	cx, 4000h
		xor	ax, ax
		rep stosw
		mov	al, 28h	; '('
		mov	dx, 3B8h
		out	dx, al
		mov	ah, 0
		mov	al, 7
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		pop	di
		retf
sub_30120	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, 2E9Ch
		mov	word_3F884, 5
		mov	word_3F886, 5
		mov	word_3F882, 64h	; 'd'
		mov	byte_3F880, 1
		jmp	short loc_301FD
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_301A0	proc far		; CODE XREF: sub_39E56:loc_3A08AP
		push	bp
		mov	dx, 2E9Ch
		mov	word_3F884, 5
		mov	word_3F886, 5
		mov	byte_3F880, 0
		mov	byte_3F881, 1
		jmp	short loc_301FD
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, 1
		xor	ax, ax
		idiv	word ptr [bp+6]
		mov	word_3F884, ax
		mov	word_3F886, ax
		mov	dx, [bp+6]
		mov	byte_3F880, 0
		mov	byte_3F881, 1
		jmp	short loc_301FD
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	dx, 1
		xor	ax, ax
		idiv	word ptr [bp+6]
		mov	word_3F884, ax
		mov	word_3F886, ax
		mov	dx, [bp+6]
		mov	word_3F882, 64h	; 'd'
		mov	byte_3F880, 1

loc_301FD:				; CODE XREF: seg012:177Dj
					; sub_301A0+1Aj ...
		cli
		mov	byte_3F88C, 0
		mov	word_3F890, 0
		mov	word_3F892, 0
		sti
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 0B6h ; '∂'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		in	al, 21h		; Interrupt controller,	8259A.
		or	al, 3
		out	21h, al		; Interrupt controller,	8259A.
		xor	ax, ax
		mov	es, ax
		assume es:nothing
		cli
		mov	ax, es:20h
		cmp	ax, 1909h
		jz	short loc_30231
		mov	word ptr dword_3F874, ax

loc_30231:				; CODE XREF: sub_301A0+8Cj
		mov	ax, es:22h
		mov	bx, cs
		cmp	ax, bx
		jz	short loc_3024A
		mov	word ptr dword_3F874+2,	ax
		mov	word ptr es:20h, offset	loc_30329
		mov	word ptr es:22h, cs

loc_3024A:				; CODE XREF: sub_301A0+99j
		in	al, 21h		; Interrupt controller,	8259A.
		and	al, 0FCh
		out	21h, al		; Interrupt controller,	8259A.
		sti
		mov	al, dl
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dh
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		push	cs
		mov	ax, 1848h
		push	ax
		call	sub_2FE1C
		add	sp, 4
		pop	bp
		retf
sub_301A0	endp


; =============== S U B	R O U T	I N E =======================================


sub_30268	proc far		; CODE XREF: _main+57AP sub_39E56+262P
		xor	ax, ax
		mov	es, ax
		mov	ax, es:22h
		mov	dx, cs
		cmp	ax, dx
		jz	short loc_30277
		retf
; ---------------------------------------------------------------------------

loc_30277:				; CODE XREF: sub_30268+Cj
		mov	ax, es:20h
		cmp	ax, 1909h
		jz	short loc_30281
		retf
; ---------------------------------------------------------------------------

loc_30281:				; CODE XREF: sub_30268+16j
		in	al, 21h		; Interrupt controller,	8259A.
		or	al, 3
		out	21h, al		; Interrupt controller,	8259A.
		cli
		mov	ax, word ptr dword_3F874
		mov	es:20h,	ax
		mov	ax, word ptr dword_3F874+2
		mov	es:22h,	ax
		in	al, 21h		; Interrupt controller,	8259A.
		and	al, 0FCh
		out	21h, al		; Interrupt controller,	8259A.
		sti
		mov	al, 0
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retf
sub_30268	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_302AA	proc far		; CODE XREF: sub_2255A+EP
					; sub_26BAE+1FP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	cx, 5
		mov	bx, 4120h

loc_302B3:				; CODE XREF: sub_302AA+12j
		cmp	word ptr [bx+2], 0
		jz	short loc_302C7
		add	bx, 4
		loop	loc_302B3
		mov	ax, 413Ch
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_302C7:				; CODE XREF: sub_302AA+Dj
		mov	ax, [bp+arg_0]
		mov	[bx], ax
		mov	word ptr [bx+2], 0
		mov	ax, [bp+arg_2]
		mov	[bx+2],	ax
		mov	word ptr [bx+6], 0
		pop	bp
		retf
sub_302AA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_302DE	proc far		; CODE XREF: sub_22576+16P
					; sub_26BD5+28P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	cx, 5
		mov	bx, 4120h
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]

loc_302ED:				; CODE XREF: sub_302DE+1Bj
		cmp	[bx], ax
		jnz	short loc_302F6
		cmp	[bx+2],	dx
		jz	short loc_302FD

loc_302F6:				; CODE XREF: sub_302DE+11j
		add	bx, 4
		loop	loc_302ED
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_302FD:				; CODE XREF: sub_302DE+16j
		cli
		dec	cx
		jz	short loc_30311

loc_30301:				; CODE XREF: sub_302DE+31j
		mov	ax, [bx+4]
		mov	[bx], ax
		mov	ax, [bx+6]
		mov	[bx+2],	ax
		add	bx, 4
		loop	loc_30301

loc_30311:				; CODE XREF: sub_302DE+21j
		mov	word ptr [bx], 0
		mov	word ptr [bx+2], 0
		sti
		pop	bp
		retf
sub_302DE	endp


; =============== S U B	R O U T	I N E =======================================


sub_3031D	proc far		; CODE XREF: seg005:0A26P seg007:040BP
		xor	ax, ax
		mov	bx, ss
		mov	dx, ds
		cmp	bx, dx
		jnz	short locret_30328
		inc	ax

locret_30328:				; CODE XREF: sub_3031D+8j
		retf
sub_3031D	endp

; ---------------------------------------------------------------------------

loc_30329:				; DATA XREF: sub_301A0+9Eo
		cli
		push	ds
		push	es
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	bp
		mov	ax, seg	dseg
		mov	ds, ax
		sti
		dec	word_3F886
		jg	short loc_3035C
		inc	word_3F87C
		jnz	short loc_30349
		inc	word_3F87E

loc_30349:				; CODE XREF: seg012:1923j
		mov	ax, word_3F884
		mov	word_3F886, ax
		cmp	byte_3F881, 0
		jz	short loc_3035C
		call	sub_303BA
		jmp	short loc_30360
; ---------------------------------------------------------------------------
		align 2

loc_3035C:				; CODE XREF: seg012:191Dj seg012:1934j
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.

loc_30360:				; CODE XREF: seg012:1939j
		cmp	byte ptr word_3F88E, 0
		jnz	short loc_303A5
		inc	word_3F878
		jnz	short loc_30371
		inc	word_3F87A

loc_30371:				; CODE XREF: seg012:194Bj
		xor	di, di
		cli
		cmp	byte_3F88C, 0
		jnz	short loc_30392
		mov	byte_3F88C, 1
		sti

loc_30381:				; CODE XREF: seg012:1970j
		mov	ax, [di+4122h]
		or	ax, ax
		jz	short loc_303A5
		call	dword ptr [di+4120h]
		add	di, 4
		jmp	short loc_30381
; ---------------------------------------------------------------------------

loc_30392:				; CODE XREF: seg012:1959j
		inc	word_3F88A
		mov	ax, word_3F88A
		cmp	word_3F888, ax
		jge	short loc_303B0
		mov	word_3F888, ax
		jmp	short loc_303B0
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_303A5:				; CODE XREF: seg012:1945j seg012:1967j
		mov	byte_3F88C, 0
		mov	word_3F88A, 0

loc_303B0:				; CODE XREF: seg012:197Dj seg012:1982j
		pop	bp
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		pop	es
		assume es:nothing
		pop	ds
		iret

; =============== S U B	R O U T	I N E =======================================


sub_303BA	proc near		; CODE XREF: seg012:1936p
		cmp	byte_3F880, 0
		jz	short loc_303D1
		dec	word_3F882
		jg	short loc_303D1
		mov	byte_3F880, 0
		mov	byte_3F881, 0

loc_303D1:				; CODE XREF: sub_303BA+5j sub_303BA+Bj
		pushf
		call	dword_3F874
		retn
sub_303BA	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_303D8	proc far		; CODE XREF: sub_30120+8P
		xor	ax, ax
		push	ax
		call	sub_332A8
		add	sp, 2
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		mov	ax, es:10h
		and	ax, 0FFCFh
		or	ax, 10h
		mov	es:10h,	ax
		mov	ah, 0
		mov	al, 3
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	ah, 0Bh
		mov	bx, 0
		int	10h		; - VIDEO - SET	COLOR PALETTE
					; BH = 00h, BL = border	color
					; BH = 01h, BL = palette (0-3)
		retf
sub_303D8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30404	proc far		; CODE XREF: sub_30519+16P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cli
		cmp	byte_3F9E0, 0
		jz	short loc_30412
		sti
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30412:				; CODE XREF: sub_30404+9j
		mov	byte_3F9E0, 1
		sti
		mov	bx, [bp+arg_0]
		or	bl, bl
		jz	short loc_30441
		and	bx, 7Fh
		mov	[bp+arg_0], bx
		mov	bl, [bx+416Ah]

loc_30429:				; CODE XREF: sub_30404+4Ej
		dec	bx
		jl	short loc_30454
		shl	bx, 1
		push	di
		push	si
		shl	bx, 1
		call	dword ptr [bx+4272h]
		pop	si
		pop	di
		xor	ax, ax
		mov	byte_3F9E0, 0
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30441:				; CODE XREF: sub_30404+19j
		mov	bl, bh
		xor	bh, bh
		cmp	bx, 84h	; 'Ñ'
		jl	short loc_3044E
		mov	bx, 84h	; 'Ñ'

loc_3044E:				; CODE XREF: sub_30404+45j
		mov	bl, [bx+41EAh]
		jmp	short loc_30429
; ---------------------------------------------------------------------------

loc_30454:				; CODE XREF: sub_30404+26j
		mov	ax, [bp+arg_0]
		mov	byte_3F9E0, 0
		pop	bp
		retf
sub_30404	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3045E	proc far		; CODE XREF: sub_39E56+23P
					; sub_39E56+37P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		mov	cx, 40h	; '@'
		mov	bx, 4272h
		mov	dx, [bp+arg_4]

loc_3046D:				; CODE XREF: sub_3045E+21j
		cmp	[bx], ax
		jnz	short loc_30476
		cmp	[bx+2],	dx
		jz	short loc_30488

loc_30476:				; CODE XREF: sub_3045E+11j
		cmp	word ptr [bx+2], 0
		jz	short loc_30483
		add	bx, 4
		loop	loc_3046D
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30483:				; CODE XREF: sub_3045E+1Cj
		mov	[bx], ax
		mov	[bx+2],	dx

loc_30488:				; CODE XREF: sub_3045E+16j
		mov	ax, 41h	; 'A'
		sub	ax, cx

loc_3048D:				; CODE XREF: seg012:1A94j
		mov	bx, [bp+arg_0]
		or	bl, bl
		jz	short loc_3049F
		cmp	bx, 7Fh	; ''
		jg	short loc_3049D
		mov	[bx+416Ah], al

loc_3049D:				; CODE XREF: sub_3045E+39j
					; sub_3045E+49j
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3049F:				; CODE XREF: sub_3045E+34j
		mov	bl, bh
		xor	bh, bh
		cmp	bx, 84h	; 'Ñ'
		jg	short loc_3049D
		mov	[bx+41EAh], al
		pop	bp
		retf
sub_3045E	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		xor	ax, ax
		jmp	short loc_3048D
; ---------------------------------------------------------------------------
		db 0B4h, 1, 0CDh, 16h, 74h, 1Fh, 0B4h, 0, 0CDh,	16h, 0Ah
		db 0C0h, 74h, 2, 32h, 0E4h, 0CBh, 0B4h,	1, 0CDh, 16h, 74h
		db 0Eh,	0B4h, 0, 0CDh, 16h, 50h, 9Ah, 0E4h, 19h
		dw seg seg012
; ---------------------------------------------------------------------------
		add	sp, 2
		retf
; ---------------------------------------------------------------------------
		call	sub_305FC
		mov	bx, ax
		test	ax, 30h
		jz	short loc_304ED
		mov	ax, 0Dh
		jmp	short loc_304F6
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_304ED:				; CODE XREF: seg012:1AC5j
		and	bx, 0Fh
		shl	bx, 1
		mov	ax, [bx+4372h]

loc_304F6:				; CODE XREF: seg012:1ACAj
		cmp	ax, word_3FB02
		jnz	short loc_304FF

loc_304FC:				; CODE XREF: seg012:1AE9j seg012:1AF7j
		xor	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_304FF:				; CODE XREF: seg012:1ADAj
		cmp	ax, word_3FB04
		jnz	short loc_3050F
		dec	byte_3FB06
		jg	short loc_304FC
		mov	word_3FB02, ax
		retf
; ---------------------------------------------------------------------------

loc_3050F:				; CODE XREF: seg012:1AE3j
		mov	byte_3FB06, 3
		mov	word_3FB04, ax
		jmp	short loc_304FC

; =============== S U B	R O U T	I N E =======================================


sub_30519	proc far		; CODE XREF: sub_21B7A+60AP
					; sub_21B7A:loc_22222P	...
		mov	ah, 1
		int	16h		; KEYBOARD - CHECK BUFFER, DO NOT CLEAR
					; Return: ZF clear if character	in buffer
					; AH = scan code, AL = character
					; ZF set if no character in buffer
		jnz	short loc_30522
		xor	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_30522:				; CODE XREF: sub_30519+4j
		mov	bx, ss
		mov	cx, ds
		cmp	bx, cx
		jnz	short locret_30537
		mov	ah, 0
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		push	ax
		call	sub_30404
		add	sp, 2

locret_30537:				; CODE XREF: sub_30519+Fj
		retf
sub_30519	endp


; =============== S U B	R O U T	I N E =======================================


sub_30538	proc far		; CODE XREF: sub_21B7A:loc_2219AP
					; sub_21B7A+6F8P ...
		xor	ax, ax
		xor	bx, bx
		mov	bl, byte_3FB08
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_30549
		or	al, 10h

loc_30549:				; CODE XREF: sub_30538+Dj
		mov	bl, byte_3FB09
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_30556
		or	al, 20h

loc_30556:				; CODE XREF: sub_30538+1Aj
		mov	bl, byte_3FB0A
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_30563
		or	al, 9

loc_30563:				; CODE XREF: sub_30538+27j
		mov	bl, byte_3FB0B
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_30570
		or	al, 1

loc_30570:				; CODE XREF: sub_30538+34j
		mov	bl, byte_3FB0C
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_3057D
		or	al, 5

loc_3057D:				; CODE XREF: sub_30538+41j
		mov	bl, byte_3FB0D
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_3058A
		or	al, 4

loc_3058A:				; CODE XREF: sub_30538+4Ej
		mov	bl, byte_3FB0E
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_30597
		or	al, 6

loc_30597:				; CODE XREF: sub_30538+5Bj
		mov	bl, byte_3FB0F
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_305A4
		or	al, 2

loc_305A4:				; CODE XREF: sub_30538+68j
		mov	bl, byte_3FB10
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_305B1
		or	al, 0Ah

loc_305B1:				; CODE XREF: sub_30538+75j
		mov	bl, byte_3FB11
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_305BE
		or	al, 8

loc_305BE:				; CODE XREF: sub_30538+82j
		or	ax, ax
		jnz	short locret_305C7
		call	sub_305FC

locret_305C7:				; CODE XREF: sub_30538+88j
		retf
sub_30538	endp

; ---------------------------------------------------------------------------
		xor	cx, cx
		xor	bx, bx
		mov	bl, byte_3FB08
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_305DA
		or	cl, 10h

loc_305DA:				; CODE XREF: seg012:1BB5j
		mov	bl, byte_3FB09
		cmp	byte ptr [bx+446Ah], 0
		jz	short loc_305E8
		or	cl, 20h

loc_305E8:				; CODE XREF: seg012:1BC3j
		xor	ax, ax
		mov	dx, 201h
		test	byte_3FE00, 1
		jz	short loc_305F9
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		not	al
		and	al, 30h

loc_305F9:				; CODE XREF: seg012:1BD2j
		or	ax, cx
		retf

; =============== S U B	R O U T	I N E =======================================


sub_305FC	proc far		; CODE XREF: sub_287C4:loc_287FDP
					; sub_29B32:loc_29CA8P	...
		test	byte_3FE00, 1
		jnz	short loc_30606
		xor	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_30606:				; CODE XREF: sub_305FC+5j
		mov	byte_3FB17, 0
		mov	dx, 201h
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		mov	byte_3FB16, al
		mov	bl, 3
		mov	word_3FB12, 50h	; 'P'
		mov	word_3FB14, 50h	; 'P'
		cli
		out	dx, al		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		mov	cx, 14h

loc_30625:				; CODE XREF: sub_305FC:loc_30625j
		loop	loc_30625
		mov	cx, 0

loc_3062A:				; CODE XREF: sub_305FC+3Aj
					; sub_305FC+45j ...
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		and	al, bl
		xor	al, bl
		jnz	short loc_3063B
		inc	cx
		cmp	cx, 0FA0h
		jl	short loc_3062A
		jmp	short loc_30658
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3063B:				; CODE XREF: sub_305FC+33j
		test	al, 1
		jnz	short loc_3064F

loc_3063F:				; CODE XREF: sub_305FC+5Aj
		test	al, 2
		jz	short loc_3062A
		mov	word_3FB14, cx
		and	bl, 1
		jnz	short loc_3062A
		jmp	short loc_30658
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3064F:				; CODE XREF: sub_305FC+41j
		mov	word_3FB12, cx
		and	bl, 2
		jnz	short loc_3063F

loc_30658:				; CODE XREF: sub_305FC+3Cj
					; sub_305FC+50j
		sti
		mov	ax, word_3FB12
		cmp	ax, word_3FB18
		jge	short loc_306B1
		dec	word_3FB20
		jle	short loc_30674
		cmp	ax, word_3FB1A
		jl	short loc_306E5
		mov	word_3FB1A, ax
		jmp	short loc_306E5
; ---------------------------------------------------------------------------
		align 2

loc_30674:				; CODE XREF: sub_305FC+6Aj
		mov	bx, word_3FB1A
		mov	word_3FB18, bx
		mov	bx, word_3FB1C

loc_30680:				; CODE XREF: sub_305FC+D5j
		sub	bx, word_3FB18
		jle	short loc_30690
		xor	dx, dx
		mov	ax, 4000h
		div	bx
		mov	word_3FB34, ax

loc_30690:				; CODE XREF: sub_305FC+88j
		mov	ax, bx
		mov	dx, 201h
		shr	ax, 1
		mov	bx, ax
		shr	bx, 1
		add	ax, word_3FB18
		add	ax, bx
		mov	word_3FB24, ax
		sub	ax, bx
		sub	ax, bx
		mov	word_3FB22, ax
		mov	ax, word_3FB12
		jmp	short loc_306D3
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_306B1:				; CODE XREF: sub_305FC+64j
		cmp	ax, word_3FB1C
		jle	short loc_306D3
		dec	word_3FB20
		jle	short loc_306C9
		cmp	ax, word_3FB1E
		jge	short loc_306E5
		mov	word_3FB1E, ax
		jmp	short loc_306E5
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_306C9:				; CODE XREF: sub_305FC+BFj
		mov	bx, word_3FB1E
		mov	word_3FB1C, bx
		jmp	short loc_30680
; ---------------------------------------------------------------------------

loc_306D3:				; CODE XREF: sub_305FC+B2j
					; sub_305FC+B9j
		mov	word_3FB20, 14h
		mov	word_3FB1E, 4E20h
		mov	word_3FB1A, 0

loc_306E5:				; CODE XREF: sub_305FC+70j
					; sub_305FC+75j ...
		cmp	ax, word_3FB22
		jl	short loc_3074E
		cmp	ax, word_3FB24
		jl	short loc_306F6
		or	byte_3FB17, 4

loc_306F6:				; CODE XREF: sub_305FC+F3j
					; sub_305FC+157j
		mov	ax, word_3FB14
		cmp	ax, word_3FB26
		jnb	short loc_30755
		dec	word_3FB2E
		jle	short loc_30711
		cmp	ax, word_3FB28
		jl	short loc_30789
		mov	word_3FB28, ax
		jmp	short loc_30789
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_30711:				; CODE XREF: sub_305FC+107j
		mov	bx, word_3FB28
		mov	word_3FB26, bx
		mov	bx, word_3FB2A

loc_3071D:				; CODE XREF: sub_305FC+179j
		sub	bx, word_3FB26
		jle	short loc_3072D
		xor	dx, dx
		mov	ax, 4000h
		div	bx
		mov	word_3FB36, ax

loc_3072D:				; CODE XREF: sub_305FC+125j
		mov	ax, bx
		mov	dx, 201h
		shr	ax, 1
		mov	bx, ax
		shr	bx, 1
		add	ax, word_3FB26
		add	ax, bx
		mov	word_3FB32, ax
		sub	ax, bx
		sub	ax, bx
		mov	word_3FB30, ax
		mov	ax, word_3FB14
		jmp	short loc_30777
; ---------------------------------------------------------------------------
		align 2

loc_3074E:				; CODE XREF: sub_305FC+EDj
		or	byte_3FB17, 8
		jmp	short loc_306F6
; ---------------------------------------------------------------------------

loc_30755:				; CODE XREF: sub_305FC+101j
		cmp	ax, word_3FB2A
		jle	short loc_30777
		dec	word_3FB2E
		jz	short loc_3076D
		cmp	ax, word_3FB2C
		jge	short loc_30789
		mov	word_3FB2C, ax
		jmp	short loc_30789
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3076D:				; CODE XREF: sub_305FC+163j
		mov	bx, word_3FB2C
		mov	word_3FB2A, bx
		jmp	short loc_3071D
; ---------------------------------------------------------------------------

loc_30777:				; CODE XREF: sub_305FC+14Fj
					; sub_305FC+15Dj
		mov	word_3FB2E, 14h
		mov	word_3FB2C, 4E20h
		mov	word_3FB28, 0

loc_30789:				; CODE XREF: sub_305FC+10Dj
					; sub_305FC+112j ...
		cmp	ax, word_3FB30
		jb	short loc_307AD
		cmp	ax, word_3FB32
		jb	short loc_3079A
		or	byte_3FB17, 2

loc_3079A:				; CODE XREF: sub_305FC+197j
					; sub_305FC+1B6j
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		and	al, byte_3FB16
		and	al, 30h
		xor	al, 30h
		or	byte_3FB17, al
		mov	al, byte_3FB17
		xor	ah, ah
		retf
; ---------------------------------------------------------------------------

loc_307AD:				; CODE XREF: sub_305FC+191j
		or	byte_3FB17, 1
		jmp	short loc_3079A
sub_305FC	endp


; =============== S U B	R O U T	I N E =======================================


sub_307B4	proc far		; CODE XREF: sub_29B32+15FP
		mov	byte_3FE00, 1
		mov	word_3FB18, 50h	; 'P'
		mov	word_3FB1C, 0
		mov	word_3FB26, 50h	; 'P'
		mov	word_3FB2A, 0
		retf
sub_307B4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_307D2	proc far		; CODE XREF: sub_29B32+184P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		and	bx, 0Fh
		mov	al, [bx+43C8h]
		xor	ah, ah
		pop	bp
		retf
sub_307D2	endp


; =============== S U B	R O U T	I N E =======================================


sub_307E3	proc far		; CODE XREF: sub_22698:loc_2279AP
		mov	ax, word_3FB12
		sub	ax, word_3FB18
		jge	short loc_307EE
		xor	ax, ax

loc_307EE:				; CODE XREF: sub_307E3+7j
		mul	word_3FB34
		mov	al, ah
		mov	ah, dl
		sub	ax, 1Fh
		retf
sub_307E3	endp

; ---------------------------------------------------------------------------
		mov	ax, word_3FB14
		sub	ax, word_3FB26
		jge	short loc_30805
		xor	ax, ax

loc_30805:				; CODE XREF: seg012:1DE1j
		mul	word_3FB36
		mov	al, ah
		mov	ah, dl
		sub	ax, 1Fh
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_30812	proc far		; CODE XREF: sub_39E56+8P
		push	di
		in	al, 21h		; Interrupt controller,	8259A.
		mov	ah, al
		or	al, 3
		out	21h, al		; Interrupt controller,	8259A.
		xor	bx, bx
		mov	es, bx
		assume es:nothing
		mov	bx, es:24h
		cmp	bx, 1EA6h
		jz	short loc_30861
		mov	word_3FB48, bx
		mov	bx, es:26h
		mov	word_3FB4A, bx
		mov	word ptr es:24h, offset	loc_308C6
		mov	word ptr es:26h, cs
		mov	bx, es:58h
		mov	word_3FB4C, bx
		mov	bx, es:5Ah
		mov	word_3FB4E, bx
		mov	word ptr es:58h, offset	loc_309A5
		mov	word ptr es:5Ah, cs

loc_30861:				; CODE XREF: sub_30812+16j
		mov	al, ah
		out	21h, al		; Interrupt controller,	8259A.
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, 446Ah
		mov	cx, 5Ah	; 'Z'
		xor	ax, ax
		cld
		rep stosb
		push	cs
		mov	ax, 1E63h
		push	ax
		call	sub_2FE1C
		add	sp, 4
		pop	di
		retf
sub_30812	endp


; =============== S U B	R O U T	I N E =======================================


sub_30883	proc far		; CODE XREF: _main+584P
		in	al, 21h		; Interrupt controller,	8259A.
		mov	ah, al
		or	al, 3
		out	21h, al		; Interrupt controller,	8259A.
		xor	bx, bx
		mov	es, bx
		assume es:nothing
		mov	bx, word_3FB48
		or	bx, bx
		jz	short loc_308C1
		mov	es:24h,	bx
		mov	bx, word_3FB4A
		mov	es:26h,	bx
		mov	bx, word_3FB4C
		mov	es:58h,	bx
		mov	bx, word_3FB4E
		mov	es:5Ah,	bx
		mov	al, es:417h
		and	al, 0F0h
		mov	es:417h, al

loc_308C1:				; CODE XREF: sub_30883+12j
		mov	al, ah
		out	21h, al		; Interrupt controller,	8259A.
		retf
sub_30883	endp

; ---------------------------------------------------------------------------

loc_308C6:				; DATA XREF: sub_30812+25o
		sti
		push	ax
		push	bx
		push	cx
		push	dx
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		in	al, 60h		; AT Keyboard controller 8042.
		push	ax
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	ah, al
		or	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		xchg	ah, al
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		pop	ax
		test	al, 80h
		jz	short loc_308F4
		and	al, 7Fh
		jmp	loc_30992
; ---------------------------------------------------------------------------

loc_308EA:				; CODE XREF: seg012:1F49j seg012:1F82j
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		pop	ds
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		iret
; ---------------------------------------------------------------------------

loc_308F4:				; CODE XREF: seg012:1EC3j
		xor	ah, ah
		mov	bx, ax
		cmp	bx, 5Ah	; 'Z'
		jb	short loc_308FF
		xor	bx, bx

loc_308FF:				; CODE XREF: seg012:1EDBj
		mov	word_3FBD8, bx
		mov	byte ptr [bx+446Ah], 1
		test	byte_3FC12, 1
		jnz	short loc_30986
		test	byte_3FBF7, 1
		jnz	short loc_30980
		test	byte_3FC04, 1
		jnz	short loc_3097A
		test	byte_3FC10, 1
		jnz	short loc_3097A
		test	byte_3FC14, 1
		jnz	short loc_3098C
		mov	al, [bx+44C4h]

loc_3092F:				; CODE XREF: seg012:1F5Ej seg012:1F64j ...
		test	al, 80h
		jnz	short loc_3096C
		xor	ah, ah

loc_30935:				; CODE XREF: seg012:loc_30978j
		mov	bx, word_3FBD0
		cli
		mov	[bx+43E0h], ax
		add	bx, 2
		cmp	bx, word_3FBD4
		jb	short loc_30949
		xor	bx, bx

loc_30949:				; CODE XREF: seg012:1F25j
		mov	word_3FBD0, bx
		mov	bx, word_3FBD6
		add	bx, 2
		cmp	bx, word_3FBD4
		jbe	short loc_30964
		mov	bx, word_3FBD4
		mov	ax, word_3FBD0
		mov	word_3FBD2, ax

loc_30964:				; CODE XREF: seg012:1F38j
		mov	word_3FBD6, bx
		sti
		jmp	loc_308EA
; ---------------------------------------------------------------------------

loc_3096C:				; CODE XREF: seg012:1F11j
		mov	ah, al
		xor	al, al
		cmp	ah, 85h	; 'Ö'
		jb	short loc_30978
		and	ah, 7Fh

loc_30978:				; CODE XREF: seg012:1F53j
		jmp	short loc_30935
; ---------------------------------------------------------------------------

loc_3097A:				; CODE XREF: seg012:1EFBj seg012:1F02j
		mov	al, [bx+451Fh]
		jmp	short loc_3092F
; ---------------------------------------------------------------------------

loc_30980:				; CODE XREF: seg012:1EF4j
		mov	al, [bx+45D5h]
		jmp	short loc_3092F
; ---------------------------------------------------------------------------

loc_30986:				; CODE XREF: seg012:1EEDj
		mov	al, [bx+4630h]
		jmp	short loc_3092F
; ---------------------------------------------------------------------------

loc_3098C:				; CODE XREF: seg012:1F09j
		mov	al, [bx+457Ah]
		jmp	short loc_3092F
; ---------------------------------------------------------------------------

loc_30992:				; CODE XREF: seg012:1EC7j
		xor	ah, ah
		mov	bx, ax
		cmp	bx, 5Ah	; 'Z'
		jb	short loc_3099D
		xor	bx, bx

loc_3099D:				; CODE XREF: seg012:1F79j
		mov	byte ptr [bx+446Ah], 0
		jmp	loc_308EA
; ---------------------------------------------------------------------------

loc_309A5:				; DATA XREF: sub_30812+43o
		push	bx
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		cmp	ah, 0
		jz	short loc_309C3
		cmp	ah, 1
		jz	short loc_309EF
		cmp	ah, 2
		jz	short loc_30A04

loc_309BB:				; CODE XREF: seg012:1FA9j seg012:1FD4j
		xor	ax, ax

loc_309BD:				; CODE XREF: seg012:1FCDj seg012:1FEBj
		sti
		pop	ds
		pop	bx
		retf	2
; ---------------------------------------------------------------------------

loc_309C3:				; CODE XREF: seg012:1F8Fj
		cli
		cmp	word_3FBD6, 0
		jz	short loc_309BB
		mov	bx, word_3FBD2
		mov	ax, [bx+43E0h]
		add	bx, 2
		cmp	bx, word_3FBD4
		jb	short loc_309DE
		xor	bx, bx

loc_309DE:				; CODE XREF: seg012:1FBAj
		mov	word_3FBD2, bx
		mov	bx, word_3FBD6
		sub	bx, 2
		mov	word_3FBD6, bx
		jmp	short loc_309BD
; ---------------------------------------------------------------------------

loc_309EF:				; CODE XREF: seg012:1F94j
		cmp	word_3FBD6, 0
		jz	short loc_309BB
		sti
		mov	bx, word_3FBD2
		mov	ax, [bx+43E0h]
		pop	ds
		pop	bx
		retf	2
; ---------------------------------------------------------------------------

loc_30A04:				; CODE XREF: seg012:1F99j
		mov	al, byte_3FC04
		or	al, byte_3FC10
		jmp	short loc_309BD

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30A0D	proc far		; CODE XREF: sub_22698+15BP
					; sub_22698+16FP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		mov	al, [bx+446Ah]
		xor	ah, ah
		pop	bp
		retf
sub_30A0D	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_30A1C	proc far		; CODE XREF: sub_30A5DP
					; seg012:loc_30A77P ...
		call	dword ptr word_3FDFC
		retf
sub_30A1C	endp


; =============== S U B	R O U T	I N E =======================================


sub_30A21	proc far		; CODE XREF: sub_29B32:loc_29C96P
		mov	ah, 1
		int	16h		; KEYBOARD - CHECK BUFFER, DO NOT CLEAR
					; Return: ZF clear if character	in buffer
					; AH = scan code, AL = character
					; ZF set if no character in buffer
		jnz	short loc_30A2A
		xor	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_30A2A:				; CODE XREF: sub_30A21+4j
		mov	ah, 0
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		or	al, al
		jz	short locret_30A34
		xor	ah, ah

locret_30A34:				; CODE XREF: sub_30A21+Fj
		retf
sub_30A21	endp


; =============== S U B	R O U T	I N E =======================================


sub_30A35	proc far		; CODE XREF: sub_36AF4+BP sub_36B05+BP
		mov	ah, 1
		int	16h		; KEYBOARD - CHECK BUFFER, DO NOT CLEAR
					; Return: ZF clear if character	in buffer
					; AH = scan code, AL = character
					; ZF set if no character in buffer
		jnz	short loc_30A3D
		xor	ax, ax

loc_30A3D:				; CODE XREF: sub_30A35+4j
		or	al, al
		jz	short locret_30A43
		xor	ah, ah

locret_30A43:				; CODE XREF: sub_30A35+Aj
		retf
sub_30A35	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		mov	word_3FDFC, ax
		mov	ax, [bp+8]
		mov	seg_3FDFE, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------
		mov	ax, word_3FDFC
		mov	dx, seg_3FDFE
		retf

; =============== S U B	R O U T	I N E =======================================


sub_30A5D	proc far		; CODE XREF: sub_2EA2A+CP sub_30A5D+8j ...
		call	sub_30A1C
		cmp	ax, 0
		jz	short near ptr sub_30A5D
		retf
sub_30A5D	endp


; =============== S U B	R O U T	I N E =======================================


sub_30A68	proc far		; CODE XREF: sub_29B32:loc_29D7BP
					; sub_30A68+Dj
		mov	ah, 1
		int	16h		; KEYBOARD - CHECK BUFFER, DO NOT CLEAR
					; Return: ZF clear if character	in buffer
					; AH = scan code, AL = character
					; ZF set if no character in buffer
		jnz	short loc_30A71
		xor	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_30A71:				; CODE XREF: sub_30A68+4j
		mov	ah, 0
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		jmp	short near ptr sub_30A68
sub_30A68	endp

; ---------------------------------------------------------------------------

loc_30A77:				; CODE XREF: seg012:206Aj seg012:2072j
		call	sub_30A1C
		cmp	ax, 0
		jnz	short locret_30A96
		call	sub_32778
		cmp	dx, word_405F8
		jb	short loc_30A77
		ja	short loc_30A94
		cmp	ax, word_405F6
		jb	short loc_30A77

loc_30A94:				; CODE XREF: seg012:206Cj
		xor	ax, ax

locret_30A96:				; CODE XREF: seg012:205Fj
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 4
		call	sub_32778
		add	ax, [bp+6]
		adc	dx, [bp+8]
		mov	[bp-4],	ax
		mov	[bp-2],	dx

loc_30AAE:				; CODE XREF: seg012:20A0j seg012:20A7j
		call	sub_30A1C
		cmp	ax, 0
		jnz	short loc_30ACB
		call	sub_32778
		cmp	dx, [bp-2]
		jb	short loc_30AAE
		ja	short loc_30AC9
		cmp	ax, [bp-4]
		jb	short loc_30AAE

loc_30AC9:				; CODE XREF: seg012:20A2j
		xor	ax, ax

loc_30ACB:				; CODE XREF: seg012:2096j
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30AD0	proc far		; CODE XREF: sub_30D88+4EP
					; sub_30E07+73P

var_8		= word ptr -8
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		mov	ax, [bp+arg_8]
		mov	[bp+var_8], ax
		jmp	short loc_30AFB
sub_30AD0	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30AE0	proc far		; CODE XREF: sub_29A86+1FP
					; sub_29A86+49P

var_8		= word ptr -8

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		mov	[bp+var_8], 0
		jmp	short loc_30AFB
sub_30AE0	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30AEF	proc far		; CODE XREF: _main+425P sub_110D0+467P ...

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		mov	[bp+var_8], 1

loc_30AFB:				; CODE XREF: sub_30AD0+Dj sub_30AE0+Cj
		mov	ax, [bp+arg_2]
		mov	[bp+var_4], ax
		mov	ax, [bp+arg_4]
		mov	[bp+var_6], ax
		mov	dx, [bp+arg_0]
		xor	al, al
		mov	ah, 3Dh
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 0 - read
		jb	short loc_30B43
		mov	[bp+var_2], ax

loc_30B15:				; CODE XREF: sub_30AEF+40j
		mov	ds, [bp+var_6]
		mov	dx, [bp+var_4]
		mov	cx, 4000h
		mov	bx, [bp+var_2]
		mov	ah, 3Fh
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		jb	short loc_30B43
		add	[bp+var_6], 400h
		cmp	ax, 4000h
		jz	short loc_30B15
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_4]
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30B43:				; CODE XREF: sub_30AEF+21j
					; sub_30AEF+36j
		cmp	[bp+var_8], 0
		jnz	short loc_30B52
		xor	ax, ax
		xor	dx, dx
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30B52:				; CODE XREF: sub_30AEF+58j
		mov	ax, 4692h
		mov	bx, ss
		mov	ds, bx
		push	[bp+arg_0]
		push	ax
		call	far ptr	sub_2EA2A
sub_30AEF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30B62	proc far		; CODE XREF: sub_30E07+B8P
					; DATA XREF: sub_30E07:off_30F04o

var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		sub	sp, 116h
		cld
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	si, [bp+arg_0]
		mov	ds, [bp+arg_2]
		mov	ax, [si+1]
		mov	[bp+var_1A], ax
		mov	al, [si+3]
		xor	ah, ah
		mov	[bp+var_18], ax
		add	si, 4
		mov	cx, 8
		lea	di, [bp+var_16]
		rep movsw
		mov	si, [bp+arg_0]
		add	si, 9
		mov	dx, [bp+var_12]
		and	dx, 7Fh
		add	si, dx
		mov	[bp+arg_0], si
		cmp	byte ptr [bp+var_12], 80h ; 'Ä'
		ja	short loc_30BE6
		call	sub_30CCF
		mov	[bp+var_16], ax
		mov	[bp+var_14], dx
		mov	si, ax
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		test	si, 0Fh
		jz	short loc_30BC9
		inc	ax

loc_30BC9:				; CODE XREF: sub_30B62+64j
		push	ax
		mov	bx, [bp+arg_8]
		sub	bx, ax
		add	bx, [bp+arg_6]
		mov	[bp+arg_2], bx
		push	bx
		push	[bp+arg_6]
		call	sub_311D5
		add	sp, 6
		xor	si, si
		mov	[bp+arg_0], si

loc_30BE6:				; CODE XREF: sub_30B62+43j
		call	sub_30BF8
		mov	ax, [bp+var_1A]
		mov	dx, [bp+var_18]
		add	sp, 116h
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
sub_30B62	endp


; =============== S U B	R O U T	I N E =======================================


sub_30BF8	proc near		; CODE XREF: sub_30B62:loc_30BE6p
		mov	cx, 80h	; 'Ä'
		lea	di, [bp-11Ch]
		mov	ax, ss
		mov	es, ax
		assume es:nothing
		mov	ds, ax
		xor	ax, ax
		rep stosw
		mov	cl, [bp-12h]
		and	cx, 7Fh
		lea	si, [bp-11h]
		lea	di, [bp-11Ch]
		xor	ax, ax
		xor	bh, bh

loc_30C1A:				; CODE XREF: sub_30BF8+28j
		inc	ax
		mov	bl, [si]
		mov	[bx+di], al
		inc	si
		loop	loc_30C1A
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	es, word ptr [bp+0Ch]
		xor	di, di
		mov	dx, [bp-16h]
		mov	ax, [bp-14h]
		mov	[bp-1Ch], ax

loc_30C36:				; CODE XREF: sub_30BF8+63j
					; sub_30BF8+6Ej ...
		cmp	si, 8000h
		jbe	short loc_30C3F
		jmp	short loc_30CB3
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_30C3F:				; CODE XREF: sub_30BF8+42j
					; sub_30BF8+C6j
		cmp	di, 8000h
		jbe	short loc_30C48
		jmp	short loc_30CC1
; ---------------------------------------------------------------------------
		align 2

loc_30C48:				; CODE XREF: sub_30BF8+4Bj
					; sub_30BF8+D4j
		lodsb
		xor	ah, ah
		lea	bx, [bp-11Ch]
		add	bx, ax
		mov	cl, ss:[bx]
		test	cl, 0FFh
		jnz	short loc_30C68
		stosb
		dec	dx
		jnz	short loc_30C36
		cmp	word ptr [bp-1Ch], 0
		jz	short loc_30C8A
		dec	word ptr [bp-1Ch]
		jmp	short loc_30C36
; ---------------------------------------------------------------------------

loc_30C68:				; CODE XREF: sub_30BF8+5Fj
		xor	ch, ch
		cmp	cl, 1
		jz	short loc_30C9A
		cmp	cl, 3
		jz	short loc_30CA5
		dec	cx
		lodsb
		rep stosb
		sub	dx, 2

loc_30C7B:				; CODE XREF: sub_30BF8+ABj
					; sub_30BF8+B9j
		mov	ax, [bp-1Ch]
		sbb	ax, 0
		mov	[bp-1Ch], ax
		or	ax, dx
		jz	short loc_30C8A
		jmp	short loc_30C36
; ---------------------------------------------------------------------------

loc_30C8A:				; CODE XREF: sub_30BF8+69j
					; sub_30BF8+8Ej
		mov	dx, es
		sub	dx, [bp+0Ch]
		mov	ax, 10h
		mul	dx
		add	ax, di
		adc	dx, 0
		retn
; ---------------------------------------------------------------------------

loc_30C9A:				; CODE XREF: sub_30BF8+75j
		lodsb
		mov	cl, al
		lodsb
		rep stosb
		sub	dx, 3
		jmp	short loc_30C7B
; ---------------------------------------------------------------------------

loc_30CA5:				; CODE XREF: sub_30BF8+7Aj
		lodsb
		mov	cl, al
		lodsb
		mov	ch, al
		lodsb
		rep stosb
		sub	dx, 4
		jmp	short loc_30C7B
; ---------------------------------------------------------------------------

loc_30CB3:				; CODE XREF: sub_30BF8+44j
		sub	si, 8000h
		mov	ax, ds
		add	ax, 800h
		mov	ds, ax
		assume ds:nothing
		jmp	loc_30C3F
; ---------------------------------------------------------------------------

loc_30CC1:				; CODE XREF: sub_30BF8+4Dj
		sub	di, 8000h
		mov	ax, es
		add	ax, 800h
		mov	es, ax
		assume es:nothing
		jmp	loc_30C48
sub_30BF8	endp


; =============== S U B	R O U T	I N E =======================================


sub_30CCF	proc near		; CODE XREF: sub_30B62+45p
		cmp	byte ptr [bp-12h], 1
		jnz	short loc_30CD6
		retn
; ---------------------------------------------------------------------------

loc_30CD6:				; CODE XREF: sub_30CCF+4j
		mov	ds, word ptr [bp+8]
		assume ds:dseg
		mov	si, [bp+6]
		mov	es, word ptr [bp+0Ch]
		assume es:nothing
		xor	di, di
		mov	bx, [bp-16h]
		mov	ax, [bp-14h]
		mov	[bp-1Ch], ax
		mov	ah, [bp-10h]

loc_30CED:				; CODE XREF: sub_30CCF+31j
					; sub_30CCF+3Cj ...
		cmp	si, 8000h
		ja	short loc_30D0D

loc_30CF3:				; CODE XREF: sub_30CCF+4Aj
		cmp	di, 8000h
		ja	short loc_30D1B

loc_30CF9:				; CODE XREF: sub_30CCF+58j
		lodsb
		cmp	al, ah
		jz	short loc_30D39
		stosb
		dec	bx
		jnz	short loc_30CED
		cmp	word ptr [bp-1Ch], 0
		jz	short loc_30D29
		dec	word ptr [bp-1Ch]
		jmp	short loc_30CED
; ---------------------------------------------------------------------------

loc_30D0D:				; CODE XREF: sub_30CCF+22j
		sub	si, 8000h
		mov	dx, ds
		add	dx, 800h
		mov	ds, dx
		assume ds:nothing
		jmp	short loc_30CF3
; ---------------------------------------------------------------------------

loc_30D1B:				; CODE XREF: sub_30CCF+28j
		sub	di, 8000h
		mov	dx, es
		add	dx, 800h
		mov	es, dx
		assume es:nothing
		jmp	short loc_30CF9
; ---------------------------------------------------------------------------

loc_30D29:				; CODE XREF: sub_30CCF+37j
					; sub_30CCF+A5j
		mov	dx, es
		sub	dx, [bp+0Ch]
		mov	ax, 10h
		mul	dx
		add	ax, di
		adc	dx, 0
		retn
; ---------------------------------------------------------------------------

loc_30D39:				; CODE XREF: sub_30CCF+2Dj
		mov	dx, di

loc_30D3B:				; CODE XREF: sub_30CCF+73j
					; sub_30CCF+78j
		lodsb
		cmp	al, ah
		jz	short loc_30D49
		stosb
		dec	bx
		jnz	short loc_30D3B
		dec	word ptr [bp-1Ch]
		jmp	short loc_30D3B
; ---------------------------------------------------------------------------

loc_30D49:				; CODE XREF: sub_30CCF+6Fj
		lodsb
		push	si
		push	ds
		mov	cx, es
		mov	ds, cx
		assume ds:nothing
		mov	si, dx
		mov	cx, di
		sub	cx, dx
		mov	dl, al
		dec	dl

loc_30D5A:				; CODE XREF: sub_30CCF+95j
		push	cx
		push	si
		push	ds
		rep movsb
		pop	ds
		assume ds:dseg
		pop	si
		pop	cx
		dec	dl
		jnz	short loc_30D5A
		pop	ds
		pop	si
		sub	bx, 3
		sbb	word ptr [bp-1Ch], 0
		mov	dx, [bp-1Ch]
		or	dx, bx
		jz	short loc_30D29
		jmp	loc_30CED
sub_30CCF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30D79	proc far		; CODE XREF: sub_3A9FC+23BP
					; sub_3A9FC+25BP

var_2		= word ptr -2
arg_4		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 2
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		jmp	short loc_30DA1
sub_30D79	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30D88	proc far		; CODE XREF: sub_299CA+1DP
					; sub_299CA+31P ...

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		mov	[bp+var_2], 0
		jmp	short loc_30DA1
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 2
		mov	[bp+var_2], 1

loc_30DA1:				; CODE XREF: sub_30D79+Cj sub_30D88+Bj
		push	[bp+arg_0]
		call	sub_3136A
		add	sp, 2
		or	dx, dx
		jnz	short loc_30DDE
		push	[bp+var_2]
		push	[bp+arg_0]
		call	sub_2FE82
		add	sp, 4
		or	ax, ax
		jz	short loc_30DE2
		push	ax
		push	[bp+arg_0]
		call	sub_31248
		add	sp, 4
		push	[bp+var_2]
		push	dx
		push	ax
		push	[bp+arg_0]
		call	sub_30AD0
		add	sp, 8

loc_30DDE:				; CODE XREF: sub_30D88+26j
					; sub_30D88+5Cj
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30DE2:				; CODE XREF: sub_30D88+38j
		xor	dx, dx
		jmp	short loc_30DDE
sub_30D88	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30DE6	proc far		; CODE XREF: sub_3A9FC+D6P
					; sub_3A9FC+143P ...

var_C		= word ptr -0Ch
arg_4		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	ax, [bp+arg_4]
		mov	[bp+var_C], ax
		jmp	short loc_30E14
sub_30DE6	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30DF7	proc far		; CODE XREF: sub_299CA+41P
					; sub_37B14+5DP ...

var_C		= word ptr -0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	[bp+var_C], 0
		jmp	short loc_30E14
sub_30DF7	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30E07	proc far		; CODE XREF: seg012:2564P

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	[bp+var_C], 1

loc_30E14:				; CODE XREF: sub_30DE6+Ej sub_30DF7+Dj
		push	[bp+arg_0]
		call	sub_3136A
		add	sp, 2
		or	dx, dx
		jz	short loc_30E2C
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30E29:				; CODE XREF: sub_30E07+35j
					; sub_30E07+5Fj ...
		jmp	loc_30F0F
; ---------------------------------------------------------------------------

loc_30E2C:				; CODE XREF: sub_30E07+1Aj
		push	[bp+var_C]
		push	[bp+arg_0]
		call	sub_2FF26
		add	sp, 4
		or	ax, ax
		jz	short loc_30E29
		add	ax, 4
		mov	[bp+var_6], ax
		push	ax
		push	[bp+arg_0]
		call	sub_31248
		add	sp, 4
		mov	[bp+var_2], ax
		mov	[bp+var_4], dx
		push	[bp+var_C]
		push	[bp+arg_0]
		call	sub_2FE82
		add	sp, 4
		or	ax, ax
		jz	short loc_30E29
		mov	dx, [bp+var_6]
		sub	dx, ax
		add	dx, [bp+var_4]
		push	[bp+var_C]
		push	dx
		push	[bp+var_2]
		push	[bp+arg_0]
		call	sub_30AD0
		add	sp, 8
		or	dx, dx
		jz	short loc_30E29
		mov	[bp+var_8], 1
		mov	ds, dx
		mov	si, ax
		mov	al, [si]
		test	al, 80h
		jz	short loc_30E9E
		and	ax, 7Fh
		mov	[bp+var_8], ax
		add	si, 4

loc_30E9E:				; CODE XREF: sub_30E07+8Cj
					; sub_30E07+FBj
		push	[bp+var_6]
		push	[bp+var_4]
		push	[bp+var_2]
		push	ds
		mov	bl, [si]
		dec	bl
		jl	short loc_30F0C
		cmp	bl, 2
		jge	short loc_30F0C
		push	si
		xor	bh, bh
		shl	bx, 1
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		call	cs:off_30F04[bx]
		add	sp, 0Ah
		dec	[bp+var_8]
		jle	short loc_30F2F
		mov	si, ax
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		test	si, 0Fh
		jz	short loc_30EE5
		inc	ax

loc_30EE5:				; CODE XREF: sub_30E07+DBj
		push	ax
		mov	bx, [bp+var_6]
		sub	bx, ax
		add	bx, [bp+var_4]
		mov	[bp+var_A], bx
		push	bx
		push	[bp+var_4]
		call	sub_311D5
		add	sp, 6
		mov	ds, [bp+var_A]
		xor	si, si
		jmp	short loc_30E9E
; ---------------------------------------------------------------------------
off_30F04	dd sub_30B62		; DATA XREF: sub_30E07+B8r
		dd sub_32D7C
; ---------------------------------------------------------------------------

loc_30F0C:				; CODE XREF: sub_30E07+A5j
					; sub_30E07+AAj
		add	sp, 8

loc_30F0F:				; CODE XREF: sub_30E07:loc_30E29j
		cmp	[bp+var_C], 0
		jnz	short loc_30F1F
		xor	ax, ax
		xor	dx, dx
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_30F1F:				; CODE XREF: sub_30E07+10Cj
		mov	bx, ss
		mov	ds, bx
		push	[bp+arg_0]
		mov	ax, 46B5h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_30F2F:				; CODE XREF: sub_30E07+C3j
		mov	ax, [bp+var_6]
		sub	ax, 4
		push	ax
		push	[bp+var_4]
		push	[bp+var_2]
		call	sub_316A2
		add	sp, 6
		mov	ax, [bp+var_2]
		mov	dx, [bp+var_4]
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_30E07	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	ax, [bp+0Ch]
		mov	[bp-0Ch], ax
		jmp	short loc_30F7E
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	word ptr [bp-0Ch], 0
		jmp	short loc_30F7E
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		mov	word ptr [bp-0Ch], 1

loc_30F7E:				; CODE XREF: seg012:253Ej seg012:254Ej
		push	word ptr [bp-0Ch]
		push	word ptr [bp+6]
		call	sub_30E07
		add	sp, 4
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30F92	proc far		; CODE XREF: sub_1FE94+6CP
					; sub_22D2E+1B7P ...
		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		xor	dx, dx
		jmp	short loc_30FB2
sub_30F92	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30F9D	proc far		; CODE XREF: sub_1069C+27P
					; sub_1069C+54P ...
		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	dx, 1
		jmp	short loc_30FB2
sub_30F9D	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_30FA9	proc far		; CODE XREF: seg016:008DP

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	dx, 2

loc_30FB2:				; CODE XREF: sub_30F92+8j sub_30F9D+9j
		cld
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, seg	dseg
		mov	es, ax
		assume es:dseg
		mov	di, [bp+arg_4]
		mov	cx, 4
		mov	bx, 0

loc_30FC7:				; CODE XREF: sub_30FA9+25j
		cmp	byte ptr es:[bx+di], 0
		jz	short loc_31024
		inc	bx
		loop	loc_30FC7

loc_30FD0:				; CODE XREF: sub_30FA9+82j
		mov	ax, [si+4]
		or	ax, ax
		jz	short loc_30FFF
		add	si, 6
		mov	bx, si

loc_30FDC:				; CODE XREF: sub_30FA9+54j
		mov	si, bx
		mov	di, [bp+arg_4]
		mov	cx, 4

loc_30FE4:				; CODE XREF: sub_30FA9+3Ej
		cmpsb
		jnz	short loc_30FEC
		loop	loc_30FE4
		jmp	short loc_3102D
; ---------------------------------------------------------------------------
		align 2

loc_30FEC:				; CODE XREF: sub_30FA9+3Cj
		cmp	byte ptr [si-1], 0
		jnz	short loc_30FF9
		cmp	byte ptr es:[di-1], 20h	; ' '
		jz	short loc_3102D

loc_30FF9:				; CODE XREF: sub_30FA9+47j
		add	bx, 4
		dec	ax
		jge	short loc_30FDC

loc_30FFF:				; CODE XREF: sub_30FA9+2Cj
		cmp	dx, 1
		jl	short loc_3101F
		jg	short loc_3100C
		mov	dx, 46CCh
		jmp	short loc_3100F
; ---------------------------------------------------------------------------
		align 2

loc_3100C:				; CODE XREF: sub_30FA9+5Bj
		mov	dx, 46F2h

loc_3100F:				; CODE XREF: sub_30FA9+60j
		mov	ax, seg	dseg
		mov	ds, ax
		push	[bp+arg_4]
		push	dx
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		db 0CDh, 20h
; ---------------------------------------------------------------------------

loc_3101F:				; CODE XREF: sub_30FA9+59j
		xor	ax, ax
		jmp	short loc_31075
; ---------------------------------------------------------------------------
		align 2

loc_31024:				; CODE XREF: sub_30FA9+22j
					; sub_30FA9+80j
		mov	byte ptr es:[bx+di], 20h ; ' '
		inc	bx
		loop	loc_31024
		jmp	short loc_30FD0
; ---------------------------------------------------------------------------

loc_3102D:				; CODE XREF: sub_30FA9+40j
					; sub_30FA9+4Ej
		mov	si, [bp+arg_0]
		mov	ax, [si+4]
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		shl	ax, 1
		add	ax, 6
		mov	cx, ds
		xor	dx, dx
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		add	ax, cx
		adc	dx, 0
		add	ax, [bx]
		adc	dx, [bx+2]
		mov	bx, ax
		and	bx, 0Fh
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		mov	dx, ax
		mov	ax, bx

loc_31075:				; CODE XREF: sub_30FA9+78j
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
sub_30FA9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3107A	proc far		; CODE XREF: sub_310F1+4P seg012:26E5P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, 3000h
		int	21h		; DOS -	GET DOS	VERSION
					; Return: AL = major version number (00h for DOS 1.x)
		mov	bx, cs
		cmp	al, 3
		jl	short loc_3108E
		mov	ah, 62h
		int	21h		; DOS -	3+ - GET PSP ADDRESS

loc_3108E:				; CODE XREF: sub_3107A+Ej
		mov	word_3FF88, bx
		mov	word_3FF8A, ds
		cmp	word_3FF82, 0
		jnz	short loc_310CD
		mov	bx, 64h	; 'd'
		mov	ah, 48h
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		mov	si, word_40310
		mov	[si+0Eh], ax
		mov	word_3FF84, ax
		mov	es, ax
		assume es:nothing
		mov	bx, [bp+arg_0]
		sub	bx, [si+0Eh]
		mov	ah, 4Ah
		int	21h		; DOS -	2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)
					; ES = segment address of block	to change
					; BX = new size	in paragraphs
		mov	ah, 4Ah
		int	21h		; DOS -	2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)
					; ES = segment address of block	to change
					; BX = new size	in paragraphs
		mov	ax, word_3FF84
		add	ax, bx
		mov	si, word_40316
		mov	[si+0Eh], ax
		mov	word_3FF82, ax

loc_310CD:				; CODE XREF: sub_3107A+21j
					; seg012:270Fj	...
		mov	si, word_40316
		mov	word_40314, si
		mov	si, word_40310
		mov	word_40312, si

loc_310DD:				; CODE XREF: sub_3107A+71j
		add	si, 12h
		cmp	si, word_40316
		jz	short loc_310ED
		mov	word ptr [si+10h], 0
		jmp	short loc_310DD
; ---------------------------------------------------------------------------

loc_310ED:				; CODE XREF: sub_3107A+6Aj
		pop	di
		pop	si
		pop	bp
		retf
sub_3107A	endp


; =============== S U B	R O U T	I N E =======================================


sub_310F1	proc far		; CODE XREF: sub_39E56+E3P
		mov	ax, 0A000h
		push	ax
		call	sub_3107A
		add	sp, 2
		retf
sub_310F1	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, 0A000h
		push	ax
		call	sub_3107A
		add	sp, 2
		mov	ax, [bp+6]
		mov	bx, word_40316
		sub	[bx+0Eh], ax
		sub	word_3FF82, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	word_3FF88, cs
		mov	word_3FF8A, ds
		cmp	word_3FF82, 0
		jnz	short loc_310CD
		mov	bx, [bp+6]
		mov	ah, 48h
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		jnb	short loc_3113E
		mov	ah, 48h
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired

loc_3113E:				; CODE XREF: seg012:2718j
		mov	si, word_40310
		mov	[si+0Eh], ax
		mov	word_3FF84, ax
		add	ax, bx
		mov	si, word_40316
		mov	[si+0Eh], ax
		mov	word_3FF82, ax
		jmp	loc_310CD
; ---------------------------------------------------------------------------
		mov	bx, word_40314
		mov	ax, [bx+0Eh]
		mov	bx, word_40312
		sub	ax, [bx+0Eh]
		sub	ax, [bx+0Ch]
		retf
; ---------------------------------------------------------------------------
		mov	bx, word_40312
		mov	ax, [bx+0Eh]
		add	ax, [bx+0Ch]
		mov	bx, word_40310
		sub	ax, [bx+0Eh]
		retf

; =============== S U B	R O U T	I N E =======================================


sub_3117B	proc far		; CODE XREF: sub_3A484P
		mov	bx, word_40316
		mov	ax, [bx+0Eh]
		mov	bx, word_40312
		sub	ax, [bx+0Eh]
		sub	ax, [bx+0Ch]
		retf
sub_3117B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3118D	proc far		; CODE XREF: sub_3136A:loc_313F6P
					; seg012:2BBCP	...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		cld
		mov	ds, [bp+arg_0]
		mov	es, [bp+arg_2]
		assume es:nothing
		mov	bx, [bp+arg_4]

loc_3119D:				; CODE XREF: sub_3118D+41j
		or	bx, bx
		jz	short loc_311D0
		mov	cx, 8000h
		mov	ax, bx
		sub	bx, 1000h
		jnb	short loc_311BA
		add	bx, 1000h
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		mov	cx, bx
		xor	bx, bx

loc_311BA:				; CODE XREF: sub_3118D+1Dj
		xor	si, si
		xor	di, di
		rep movsw
		mov	ax, ds
		add	ax, 1000h
		mov	ds, ax
		assume ds:nothing
		mov	ax, es
		add	ax, 1000h
		mov	es, ax
		assume es:nothing
		jmp	short loc_3119D
; ---------------------------------------------------------------------------

loc_311D0:				; CODE XREF: sub_3118D+12j
		pop	di
		pop	si
		pop	ds
		assume ds:dseg
		pop	bp
		retf
sub_3118D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_311D5	proc far		; CODE XREF: sub_30B62+77P
					; sub_30E07+EEP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		std
		mov	bx, [bp+arg_4]
		mov	ax, [bp+arg_0]
		add	ax, bx
		mov	ds, ax
		mov	ax, [bp+arg_2]
		add	ax, bx
		mov	es, ax
		assume es:nothing

loc_311ED:				; CODE XREF: sub_311D5+4Bj
		or	bx, bx
		jz	short loc_31222
		mov	cx, 1000h
		sub	bx, 1000h
		jnb	short loc_31202
		add	bx, 1000h
		mov	cx, bx
		xor	bx, bx

loc_31202:				; CODE XREF: sub_311D5+23j
		mov	ax, ds
		sub	ax, cx
		mov	ds, ax
		mov	ax, es
		sub	ax, cx
		mov	es, ax
		shl	cx, 1
		shl	cx, 1
		shl	cx, 1
		mov	ax, cx
		shl	ax, 1
		dec	ax
		dec	ax
		mov	si, ax
		mov	di, ax
		rep movsw
		jmp	short loc_311ED
; ---------------------------------------------------------------------------

loc_31222:				; CODE XREF: sub_311D5+1Aj
		cld
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
sub_311D5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_31228	proc far		; CODE XREF: sub_31248+21P
					; sub_3136A+CP	...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	si, [bp+arg_0]
		mov	bx, si
		cld

loc_31232:				; CODE XREF: sub_31228+15j
					; sub_31228+19j
		lodsb
		or	al, al
		jz	short loc_31243
		cmp	al, 3Ah	; ':'
		jz	short loc_3123F
		cmp	al, 5Ch	; '\'
		jnz	short loc_31232

loc_3123F:				; CODE XREF: sub_31228+11j
		mov	bx, si
		jmp	short loc_31232
; ---------------------------------------------------------------------------

loc_31243:				; CODE XREF: sub_31228+Dj
		mov	ax, bx
		pop	si
		pop	bp
		retf
sub_31228	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_31248	proc far		; CODE XREF: sub_30D88+3EP
					; sub_30E07+41P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	di, word_40312
		mov	si, word_40314
		mov	dx, [di+0Eh]
		add	dx, [di+0Ch]
		add	di, 12h
		cmp	si, di
		jbe	short loc_312A7

loc_31262:				; CODE XREF: sub_31248+6Cj
		mov	word_40312, di
		push	[bp+arg_0]
		call	sub_31228
		add	sp, 2
		mov	si, ax
		xor	bx, bx
		mov	cx, 0Ch

loc_31278:				; CODE XREF: sub_31248+35j
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_31278
		mov	si, word_40314
		mov	ax, [bp+arg_2]
		mov	[di+0Eh], dx
		mov	[di+0Ch], ax
		mov	word ptr [di+10h], 2
		add	ax, dx
		cmp	ax, word_3FF86
		jb	short loc_3129C
		mov	word_3FF86, ax

loc_3129C:				; CODE XREF: sub_31248+4Fj
		cmp	ax, [si+0Eh]
		ja	short loc_312C2

loc_312A1:				; CODE XREF: sub_31248+8Bj
		xor	ax, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_312A7:				; CODE XREF: sub_31248+18j
		cmp	si, word_40316
		jz	short loc_312B6
		add	si, 12h
		mov	word_40314, si
		jmp	short loc_31262
; ---------------------------------------------------------------------------

loc_312B6:				; CODE XREF: sub_31248+63j
		push	[bp+arg_0]
		mov	ax, 4750h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_312C2:				; CODE XREF: sub_31248+57j
		mov	si, word_40314
		mov	di, word_40312
		mov	ax, [di+0Eh]
		add	ax, [di+0Ch]

loc_312D0:				; CODE XREF: sub_31248+9Fj
		cmp	ax, [si+0Eh]
		jbe	short loc_312A1
		cmp	si, word_40316
		jz	short loc_312E9
		mov	word ptr [si+10h], 0
		add	si, 12h
		mov	word_40314, si
		jmp	short loc_312D0
; ---------------------------------------------------------------------------

loc_312E9:				; CODE XREF: sub_31248+91j
		mov	bx, word_3FF86
		push	bx
		push	word ptr [di+0Ch]
		push	[bp+arg_0]
		mov	ax, 4718h
		push	ax
		call	far ptr	sub_2EA2A
sub_31248	endp


; =============== S U B	R O U T	I N E =======================================


sub_312FD	proc far		; CODE XREF: sub_3136A:loc_3141FP
		push	si
		push	di
		push	dx
		mov	si, word_40316
		mov	di, si
		xor	dx, dx

loc_31308:				; CODE XREF: sub_312FD+26j
		test	word ptr [si+10h], 1
		jnz	short loc_31315
		add	dx, [si+0Ch]
		jmp	short loc_3131C
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31315:				; CODE XREF: sub_312FD+10j
		or	dx, dx
		jnz	short loc_31330

loc_31319:				; CODE XREF: sub_312FD+6Bj
		sub	di, 12h

loc_3131C:				; CODE XREF: sub_312FD+15j
		sub	si, 12h
		cmp	si, word_40314
		jnb	short loc_31308
		add	di, 12h
		mov	word_40314, di
		pop	dx
		pop	di
		pop	si
		retf
; ---------------------------------------------------------------------------

loc_31330:				; CODE XREF: sub_312FD+1Aj
		mov	bx, [si+0Ch]
		push	bx
		add	di, 12h
		mov	ax, [di+0Eh]
		sub	ax, bx
		push	ax
		push	word ptr [si+0Eh]
		sub	di, 12h
		mov	[di+0Ch], bx
		mov	[di+0Eh], ax
		mov	cx, [si+10h]
		mov	word ptr [si+10h], 0
		mov	[di+10h], cx
		xor	bx, bx
		mov	cx, 0Ch

loc_31359:				; CODE XREF: sub_312FD+61j
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_31359
		call	sub_311D5
		add	sp, 6
		jmp	short loc_31319
sub_312FD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3136A	proc far		; CODE XREF: sub_30D88+1CP
					; sub_30E07+10P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, word_40314
		push	[bp+arg_0]
		call	sub_31228
		add	sp, 2
		mov	di, ax

loc_31380:				; CODE XREF: sub_3136A+42j
		xor	bx, bx
		cmp	word ptr [si+10h], 0
		jz	short loc_313AE

loc_31388:				; CODE XREF: sub_3136A+2Cj
		mov	al, [bx+di]
		or	al, al
		jz	short loc_3139B
		cmp	al, [bx+si]
		jnz	short loc_313A5
		inc	bx
		cmp	bx, 0Ch
		jl	short loc_31388
		jmp	short loc_313B6
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3139B:				; CODE XREF: sub_3136A+22j
		cmp	byte ptr [bx+si], 2Eh ;	'.'
		jz	short loc_313B6
		cmp	byte ptr [bx+si], 0
		jz	short loc_313B6

loc_313A5:				; CODE XREF: sub_3136A+26j
		add	si, 12h
		cmp	si, word_40316
		jb	short loc_31380

loc_313AE:				; CODE XREF: sub_3136A+1Cj
		xor	dx, dx

loc_313B0:				; CODE XREF: sub_3136A+BDj
		xor	ax, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_313B6:				; CODE XREF: sub_3136A+2Ej
					; sub_3136A+34j ...
		mov	di, word_40312
		mov	dx, [di+0Eh]
		add	dx, [di+0Ch]
		add	di, 12h
		mov	word_40312, di
		mov	ax, [si+0Ch]
		push	ax
		push	dx
		push	word ptr [si+0Eh]
		mov	word ptr [si+10h], 0
		mov	[di+0Eh], dx
		mov	[di+0Ch], ax
		mov	word ptr [di+10h], 2
		xor	bx, bx
		mov	cx, 0Ch

loc_313E4:				; CODE XREF: sub_3136A+7Fj
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_313E4
		cmp	di, word_40314
		jnz	short loc_313F6
		add	word_40314, 12h

loc_313F6:				; CODE XREF: sub_3136A+85j
		call	sub_3118D
		add	sp, 6
		mov	si, word_40314
		mov	di, word_40312
		mov	ax, [di+0Eh]
		add	ax, [di+0Ch]

loc_3140C:				; CODE XREF: sub_3136A+B3j
		cmp	ax, [si+0Eh]
		jbe	short loc_3141F
		mov	word ptr [si+10h], 0
		add	si, 12h
		mov	word_40314, si
		jmp	short loc_3140C
; ---------------------------------------------------------------------------

loc_3141F:				; CODE XREF: sub_3136A+A5j
		call	sub_312FD
		mov	dx, [di+0Eh]
		jmp	short loc_313B0
sub_3136A	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, word_40314
		push	word ptr [bp+6]
		call	sub_31228
		add	sp, 2
		mov	di, ax

loc_3143F:				; CODE XREF: seg012:2A4Bj
		xor	bx, bx
		cmp	word ptr [si+10h], 0
		jz	short loc_3146D

loc_31447:				; CODE XREF: seg012:2A35j
		mov	al, [bx+di]
		or	al, al
		jz	short loc_3145A
		cmp	al, [bx+si]
		jnz	short loc_31464
		inc	bx
		cmp	bx, 0Ch
		jl	short loc_31447
		jmp	short loc_31475
; ---------------------------------------------------------------------------
		align 2

loc_3145A:				; CODE XREF: seg012:2A2Bj
		cmp	byte ptr [bx+si], 2Eh ;	'.'
		jz	short loc_31475
		cmp	byte ptr [bx+si], 0
		jz	short loc_31475

loc_31464:				; CODE XREF: seg012:2A2Fj
		add	si, 12h
		cmp	si, word_40316
		jb	short loc_3143F

loc_3146D:				; CODE XREF: seg012:2A25j
		xor	dx, dx
		xor	ax, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_31475:				; CODE XREF: seg012:2A37j seg012:2A3Dj ...
		mov	ax, 1
		pop	di
		pop	si
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3147C	proc far		; CODE XREF: sub_1059A+6BP
					; sub_1059A+ECP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	si, word_40312

loc_31488:				; CODE XREF: sub_3147C+1Aj
		cmp	si, word_40310
		jz	short loc_31498
		cmp	ax, [si+0Eh]
		jz	short loc_314A4
		sub	si, 12h
		jmp	short loc_31488
; ---------------------------------------------------------------------------

loc_31498:				; CODE XREF: sub_3147C+10j
					; seg012:loc_31544j ...
		push	[bp+arg_2]
		mov	ax, 4783h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_314A4:				; CODE XREF: sub_3147C+15j
		mov	[bp+arg_2], 0
		mov	word ptr [si+10h], 0
		cmp	si, word_40312
		jz	short loc_314CE
		mov	bx, word_40312
		mov	di, word_40314
		cmp	si, di
		jz	short loc_31508
		mov	ax, [di+0Eh]
		sub	ax, [bx+0Eh]
		sub	ax, [bx+0Ch]
		cmp	ax, [si+0Ch]
		jb	short loc_31508

loc_314CE:				; CODE XREF: sub_3147C+36j
		mov	bx, [si+0Ch]
		push	bx
		mov	di, word_40314
		mov	ax, [di+0Eh]
		sub	ax, bx
		push	ax
		mov	[bp+arg_2], ax
		push	word ptr [si+0Eh]
		sub	di, 12h
		mov	word_40314, di
		mov	[di+0Eh], ax
		mov	[di+0Ch], bx
		mov	word ptr [di+10h], 1
		mov	cx, 0Ch
		xor	bx, bx

loc_314F9:				; CODE XREF: sub_3147C+82j
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_314F9
		call	sub_311D5
		add	sp, 6

loc_31508:				; CODE XREF: sub_3147C+42j
					; sub_3147C+50j
		cmp	si, word_40312
		jnz	short loc_3151B

loc_3150E:				; CODE XREF: sub_3147C+99j
		sub	si, 12h
		cmp	word ptr [si+10h], 0
		jz	short loc_3150E
		mov	word_40312, si

loc_3151B:				; CODE XREF: sub_3147C+90j
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		pop	di
		pop	si
		pop	bp
		retf
sub_3147C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		mov	ax, [bp+8]
		mov	si, word_40312

loc_31534:				; CODE XREF: seg012:2B22j
		cmp	si, word_40310
		jz	short loc_31544
		cmp	ax, [si+0Eh]
		jz	short loc_31547
		sub	si, 12h
		jmp	short loc_31534
; ---------------------------------------------------------------------------

loc_31544:				; CODE XREF: seg012:2B18j
		jmp	loc_31498
; ---------------------------------------------------------------------------

loc_31547:				; CODE XREF: seg012:2B1Dj
		mov	word ptr [bp+8], 0
		mov	word ptr [si+10h], 0
		cmp	si, word_40312
		jz	short loc_31570
		mov	bx, word_40312
		mov	di, word_40316
		mov	ax, [di+0Eh]
		sub	ax, [bx+0Eh]
		sub	ax, [bx+0Ch]
		cmp	ax, [si+0Ch]
		ja	short loc_31570
		jmp	loc_31622
; ---------------------------------------------------------------------------

loc_31570:				; CODE XREF: seg012:2B35j seg012:2B4Bj
		mov	di, word_40312
		mov	ax, [di+0Eh]
		add	ax, [di+0Ch]
		mov	[bp-2],	ax
		mov	word ptr [bp-4], 0
		mov	di, word_40314

loc_31586:				; CODE XREF: seg012:2BC7j
		cmp	di, word_40316
		jz	short loc_315E9
		mov	ax, [di+0Eh]
		sub	ax, [si+0Ch]
		cmp	[bp-2],	ax
		ja	short loc_315E4
		mov	bx, di
		sub	bx, 12h
		cmp	bx, word_40312
		jz	short loc_315E4
		cmp	word ptr [bp-4], 0
		jnz	short loc_315B1
		mov	word_40314, bx
		mov	word ptr [bp-4], 1

loc_315B1:				; CODE XREF: seg012:2B86j
		mov	ax, [di+10h]
		mov	[bx+10h], ax
		mov	ax, [di+0Ch]
		mov	[bx+0Ch], ax
		push	ax
		mov	ax, [di+0Eh]
		sub	ax, [si+0Ch]
		mov	[bx+0Eh], ax
		push	ax
		push	word ptr [di+0Eh]
		mov	cx, 0Ch

loc_315CE:				; CODE XREF: seg012:2BB4j
		mov	al, [di]
		mov	[bx], al
		inc	bx
		inc	di
		loop	loc_315CE
		sub	di, 0Ch
		sub	bx, 0Ch
		call	sub_3118D
		add	sp, 6

loc_315E4:				; CODE XREF: seg012:2B75j seg012:2B80j
		add	di, 12h
		jmp	short loc_31586
; ---------------------------------------------------------------------------

loc_315E9:				; CODE XREF: seg012:2B6Aj
		mov	ax, [di+0Eh]
		sub	di, 12h
		cmp	word ptr [bp-4], 0
		jnz	short loc_315F9
		mov	word_40314, di

loc_315F9:				; CODE XREF: seg012:2BD3j
		mov	bx, [si+0Ch]
		mov	[di+0Ch], bx
		push	bx
		sub	ax, bx
		mov	[di+0Eh], ax
		push	ax
		push	word ptr [si+0Eh]
		mov	word ptr [di+10h], 1
		mov	cx, 0Ch
		xor	bx, bx

loc_31613:				; CODE XREF: seg012:2BF8j
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_31613
		call	sub_311D5
		add	sp, 6

loc_31622:				; CODE XREF: seg012:2B4Dj
		cmp	si, word_40312
		jnz	short loc_31635

loc_31628:				; CODE XREF: seg012:2C0Fj
		sub	si, 12h
		cmp	word ptr [si+10h], 0
		jz	short loc_31628
		mov	word_40312, si

loc_31635:				; CODE XREF: seg012:2C06j
		mov	ax, [bp+6]
		mov	dx, [bp+8]
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_31641	proc far		; CODE XREF: _main+524P sub_13178+834P ...

arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	si, word_40312

loc_3164D:				; CODE XREF: sub_31641+1Aj
		cmp	si, word_40310
		jz	short loc_3165D
		cmp	ax, [si+0Eh]
		jz	short loc_31660
		sub	si, 12h
		jmp	short loc_3164D
; ---------------------------------------------------------------------------

loc_3165D:				; CODE XREF: sub_31641+10j
		jmp	loc_31498
; ---------------------------------------------------------------------------

loc_31660:				; CODE XREF: sub_31641+15j
		mov	word ptr [si+10h], 0
		cmp	si, word_40312
		jnz	short loc_31678

loc_3166B:				; CODE XREF: sub_31641+31j
		sub	si, 12h
		cmp	word ptr [si+10h], 0
		jz	short loc_3166B
		mov	word_40312, si

loc_31678:				; CODE XREF: sub_31641+28j
		pop	di
		pop	si
		pop	bp
		retf
sub_31641	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3167C	proc far		; CODE XREF: sub_3A496+9P
					; sub_3ACFE+52P

arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	si, word_40312

loc_31688:				; CODE XREF: sub_3167C+1Aj
		cmp	si, word_40310
		jz	short loc_31698
		cmp	ax, [si+0Eh]
		jz	short loc_3169B
		sub	si, 12h
		jmp	short loc_31688
; ---------------------------------------------------------------------------

loc_31698:				; CODE XREF: sub_3167C+10j
		jmp	loc_31498
; ---------------------------------------------------------------------------

loc_3169B:				; CODE XREF: sub_3167C+15j
		mov	ax, [si+0Ch]
		pop	di
		pop	si
		pop	bp
		retf
sub_3167C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_316A2	proc far		; CODE XREF: sub_30E07+135P
					; sub_3AD9C+2E1P

arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	si, word_40312

loc_316AE:				; CODE XREF: sub_316A2+1Aj
		cmp	si, word_40310
		jz	short loc_316BE
		cmp	ax, [si+0Eh]
		jz	short loc_316C1
		sub	si, 12h
		jmp	short loc_316AE
; ---------------------------------------------------------------------------

loc_316BE:				; CODE XREF: sub_316A2+10j
		jmp	loc_31498
; ---------------------------------------------------------------------------

loc_316C1:				; CODE XREF: sub_316A2+15j
		mov	ax, [bp+arg_4]
		cmp	ax, [si+0Ch]
		ja	short loc_316D0
		mov	[si+0Ch], ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_316D0:				; CODE XREF: sub_316A2+25j
		cmp	si, word_40312
		jnz	short loc_316F4
		mov	[si+0Ch], ax
		mov	di, word_40314
		add	ax, [si+0Eh]
		cmp	ax, word_3FF86
		jb	short loc_316E9
		mov	word_3FF86, ax

loc_316E9:				; CODE XREF: sub_316A2+42j
		cmp	ax, [di+0Eh]
		ja	short loc_316FD

loc_316EE:				; CODE XREF: sub_316A2+6Cj
		xor	ax, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_316F4:				; CODE XREF: sub_316A2+32j
		mov	ax, 47B1h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_316FD:				; CODE XREF: sub_316A2+4Aj
		mov	si, word_40314
		mov	di, word_40312
		mov	ax, [di+0Eh]
		add	ax, [di+0Ch]

loc_3170B:				; CODE XREF: sub_316A2+80j
		cmp	ax, [si+0Eh]
		jbe	short loc_316EE
		cmp	si, word_40316
		jz	short loc_31724
		mov	word ptr [si+10h], 0
		add	si, 12h
		mov	word_40314, si
		jmp	short loc_3170B
; ---------------------------------------------------------------------------

loc_31724:				; CODE XREF: sub_316A2+72j
		mov	bx, word_3FF86
		push	bx
		mov	ax, 47E1h
		push	ax
		call	far ptr	sub_2EA2A
sub_316A2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_31732	proc far		; CODE XREF: sub_3A9FC+293P
					; sub_3ACFE+92P

arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	si, word_40312

loc_3173E:				; CODE XREF: sub_31732+1Aj
		cmp	si, word_40310
		jz	short loc_3174E
		cmp	ax, [si+0Eh]
		jz	short loc_31751
		sub	si, 12h
		jmp	short loc_3173E
; ---------------------------------------------------------------------------

loc_3174E:				; CODE XREF: sub_31732+10j
		jmp	loc_31498
; ---------------------------------------------------------------------------

loc_31751:				; CODE XREF: sub_31732+15j
		mov	di, si
		sub	di, 12h
		cmp	word ptr [di+10h], 0
		jnz	short loc_317AD

loc_3175C:				; CODE XREF: sub_31732+31j
		sub	di, 12h
		cmp	word ptr [di+10h], 0
		jz	short loc_3175C
		mov	word ptr [si+10h], 0
		mov	bx, [si+0Ch]
		push	bx
		mov	ax, [di+0Eh]
		add	ax, [di+0Ch]
		push	ax
		push	word ptr [si+0Eh]
		add	di, 12h
		cmp	si, word_40312
		jnz	short loc_31785
		mov	word_40312, di

loc_31785:				; CODE XREF: sub_31732+4Dj
		mov	[di+0Eh], ax
		mov	[di+0Ch], bx
		mov	word ptr [di+10h], 2
		mov	cx, 0Ch
		xor	bx, bx

loc_31795:				; CODE XREF: sub_31732+68j
		mov	al, [bx+si]
		mov	[bx+di], al
		inc	bx
		loop	loc_31795
		call	sub_3118D
		add	sp, 6

loc_317A4:				; CODE XREF: sub_31732+7Dj
		mov	dx, [di+0Eh]
		xor	ax, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_317AD:				; CODE XREF: sub_31732+28j
		mov	di, si
		jmp	short loc_317A4
sub_31732	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_317B2	proc far		; CODE XREF: sub_25FF6+84P

var_A		= byte ptr -0Ah

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	[bp+var_A], 1
		jmp	short loc_317CE
sub_317B2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_317C1	proc far		; CODE XREF: sub_36BBE+21P
					; sub_36C7E+17BP ...

var_A		= byte ptr -0Ah
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	[bp+var_A], 0

loc_317CE:				; CODE XREF: sub_317B2+Dj
		mov	ax, 5C9Ch
		mov	word ptr off_40322, ax
		mov	ax, 13BEh
		mov	word ptr off_40326, ax
		mov	si, [bp+arg_6]
		jmp	short loc_3180A
sub_317C1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_317DF	proc far		; CODE XREF: sub_1C474+4B0P
					; sub_1C474+4D8P

var_A		= byte ptr -0Ah

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	[bp+var_A], 1
		jmp	short loc_317FB
sub_317DF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_317EE	proc far		; CODE XREF: sub_36C7E+4DP
					; sub_36C7E+8BP

var_7D0		= byte ptr -7D0h
var_798		= byte ptr -798h
var_3D8		= byte ptr -3D8h
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= byte ptr -0Ch
var_A		= byte ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= byte ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	[bp+var_A], 0

loc_317FB:				; CODE XREF: sub_317DF+Dj
		mov	ax, 5C9Ch
		mov	word ptr off_40322, ax
		mov	ax, 13BEh
		mov	word ptr off_40326, ax
		lea	si, [bp+arg_4]

loc_3180A:				; CODE XREF: sub_2F3DA+47j
					; sub_317C1+1Cj ...
		mov	[bp+var_6], si
		mov	cx, [bp+arg_2]
		mov	ax, cx
		dec	ax
		shl	ax, 1
		shl	ax, 1
		add	ax, si
		mov	[bp+var_8], ax
		cld
		mov	ax, ss
		mov	es, ax
		lea	ax, [bp+var_798]
		mov	[bp+var_18], ax
		mov	ax, cs:word_3495A
		mov	[bp+var_2], ax
		mov	ax, cs:word_3495C
		dec	ax
		mov	[bp+var_4], ax
		mov	ax, [si+2]
		mov	[bp+var_E], ax
		mov	[bp+var_12], ax
		mov	bx, [si]
		mov	dx, bx
		mov	[bp+var_10], si
		mov	[bp+var_14], si
		add	si, 4
		dec	cx
		jnz	short loc_3186D
		push	[bp+arg_0]
		mov	si, [bp+var_6]
		push	word ptr [si+2]
		push	word ptr [si]
		push	word ptr [si+2]
		push	word ptr [si]
		call	off_40326
		add	sp, 0Ah
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3186D:				; CODE XREF: sub_317EE+60j
					; sub_317EE+A9j
		mov	ax, [si+2]
		cmp	ax, [bp+var_E]
		jg	short loc_3187B
		mov	[bp+var_E], ax
		mov	[bp+var_10], si

loc_3187B:				; CODE XREF: sub_317EE+85j
		cmp	ax, [bp+var_12]
		jle	short loc_31886
		mov	[bp+var_12], ax
		mov	[bp+var_14], si

loc_31886:				; CODE XREF: sub_317EE+90j
		mov	ax, [si]
		cmp	ax, bx
		jge	short loc_3188E
		mov	bx, ax

loc_3188E:				; CODE XREF: sub_317EE+9Cj
		cmp	ax, dx
		jle	short loc_31894
		mov	dx, ax

loc_31894:				; CODE XREF: sub_317EE+A2j
		add	si, 4
		loop	loc_3186D
		cmp	dx, [bp+var_2]
		jl	short loc_318F0
		cmp	bx, [bp+var_4]
		jge	short loc_318F0
		mov	ax, [bp+var_12]
		cmp	ax, cs:word_34950
		jl	short loc_318F0
		mov	cx, [bp+var_E]
		cmp	cx, cs:word_34952
		jge	short loc_318F0
		mov	[bp+var_C], 0
		cmp	dx, [bp+var_4]
		jg	short loc_318D3
		cmp	bx, [bp+var_2]
		jl	short loc_318D3
		cmp	ax, cs:word_34952
		jge	short loc_318D3
		cmp	cx, cs:word_34950
		jge	short loc_318D7

loc_318D3:				; CODE XREF: sub_317EE+D0j
					; sub_317EE+D5j ...
		mov	[bp+var_C], 1

loc_318D7:				; CODE XREF: sub_317EE+E3j
		cmp	ax, cx
		jz	short loc_318DF
		cmp	dx, bx
		jnz	short loc_318F6

loc_318DF:				; CODE XREF: sub_317EE+EBj
		push	[bp+arg_0]
		mov	si, [bp+var_6]
		push	ax
		push	dx
		push	cx
		push	bx
		call	off_40326
		add	sp, 0Ah

loc_318F0:				; CODE XREF: sub_317EE+AEj
					; sub_317EE+B3j ...
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_318F6:				; CODE XREF: sub_317EE+EFj
		lea	si, [bp+var_7D0]
		mov	di, [bp+var_10]

loc_318FD:				; CODE XREF: sub_317EE+154j
		mov	ax, [di+2]
		mov	cx, [di]
		add	di, 4
		cmp	di, [bp+var_8]
		jbe	short loc_3190D
		mov	di, [bp+var_6]

loc_3190D:				; CODE XREF: sub_317EE+11Aj
		mov	dx, [di+2]
		cmp	dx, ax
		jle	short loc_3193F
		push	si
		push	dx
		push	word ptr [di]
		push	ax
		push	cx
		cmp	[bp+var_C], 0
		jz	short loc_3192E
		call	sub_2EB56
		mov	[bp+var_16], di
		call	sub_319CD
		jmp	short loc_31939
; ---------------------------------------------------------------------------
		align 2

loc_3192E:				; CODE XREF: sub_317EE+130j
		call	sub_2EB48
		mov	[bp+var_16], di
		call	sub_31A67

loc_31939:				; CODE XREF: sub_317EE+13Dj
		mov	di, [bp+var_16]
		add	sp, 0Ah

loc_3193F:				; CODE XREF: sub_317EE+124j
		cmp	di, [bp+var_14]
		jnz	short loc_318FD
		mov	di, [bp+var_10]

loc_31947:				; CODE XREF: sub_317EE+198j
		mov	ax, [di+2]
		mov	cx, [di]
		sub	di, 4
		cmp	di, [bp+var_6]
		jnb	short loc_31957
		mov	di, [bp+var_8]

loc_31957:				; CODE XREF: sub_317EE+164j
		mov	dx, [di+2]
		cmp	dx, ax
		jle	short loc_31983
		push	si
		push	dx
		push	word ptr [di]
		push	ax
		push	cx
		cmp	[bp+var_C], 0
		jz	short loc_31972
		call	sub_2EB56
		jmp	short loc_31977
; ---------------------------------------------------------------------------
		align 2

loc_31972:				; CODE XREF: sub_317EE+17Aj
		call	sub_2EB48

loc_31977:				; CODE XREF: sub_317EE+181j
		mov	[bp+var_16], di
		call	sub_31B5E
		mov	di, [bp+var_16]
		add	sp, 0Ah

loc_31983:				; CODE XREF: sub_317EE+16Ej
		cmp	di, [bp+var_14]
		jnz	short loc_31947
		mov	ax, [bp+var_12]
		cmp	ax, cs:word_34952
		jl	short loc_31997
		mov	ax, cs:word_34952
		dec	ax

loc_31997:				; CODE XREF: sub_317EE+1A2j
		mov	bx, [bp+var_E]
		cmp	bx, cs:word_34950
		jge	short loc_319A6
		mov	bx, cs:word_34950

loc_319A6:				; CODE XREF: sub_317EE+1B1j
		sub	ax, bx
		jle	short loc_319C7
		inc	ax
		push	[bp+arg_0]
		push	ax
		push	bx
		shl	bx, 1
		lea	ax, [bp+var_3D8]
		add	ax, bx
		push	ax
		lea	ax, [bp+var_798]
		add	ax, bx
		push	ax
		call	off_40322
		add	sp, 0Ah

loc_319C7:				; CODE XREF: sub_317EE+1BAj
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_317EE	endp


; =============== S U B	R O U T	I N E =======================================


sub_319CD	proc near		; CODE XREF: sub_317EE+13Ap
					; seg012:36B0p
		mov	cx, [si+14h]
		or	cx, cx
		jle	short loc_319F9
		mov	di, [si+6]
		mov	dx, [si+4]
		add	dx, 8000h
		adc	di, 0
		sub	di, cx
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495A
		push	cx
		push	di
		rep stosw
		pop	di
		pop	cx
		add	di, 3C0h
		dec	ax
		rep stosw

loc_319F9:				; CODE XREF: sub_319CD+5j
		mov	cx, [si+18h]
		or	cx, cx
		jle	short loc_31A25
		mov	di, [si+6]
		mov	dx, [si+4]
		add	dx, 8000h
		adc	di, 0
		sub	di, cx
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495C
		push	cx
		push	di
		rep stosw
		pop	di
		pop	cx
		add	di, 3C0h
		dec	ax
		rep stosw

loc_31A25:				; CODE XREF: sub_319CD+31j
		mov	cx, [si+16h]
		or	cx, cx
		jle	short loc_31A46
		mov	di, [si+0Ah]
		inc	di
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495A
		push	cx
		push	di
		rep stosw
		pop	di
		pop	cx
		add	di, 3C0h
		dec	ax
		rep stosw

loc_31A46:				; CODE XREF: sub_319CD+5Dj
		mov	cx, [si+1Ah]
		or	cx, cx
		jle	short sub_31A67
		mov	di, [si+0Ah]
		inc	di
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495C
		push	cx
		push	di
		rep stosw
		pop	di
		pop	cx
		add	di, 3C0h
		dec	ax
		rep stosw
sub_319CD	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_31A67	proc near		; CODE XREF: sub_317EE+148p
					; sub_319CD+7Ej ...
		mov	cx, [si+0Eh]
		or	cx, cx
		jle	short locret_31AA3
		mov	di, [si+6]
		shl	di, 1
		add	di, [bp-18h]
		mov	bl, [si+12h]
		xor	bh, bh
		shl	bx, 1
		jmp	cs:off_31A82[bx]
; ---------------------------------------------------------------------------
off_31A82	dw offset locret_31AA3	; DATA XREF: sub_31A67+16r
		dw offset locret_31AA3
		dw offset loc_31A96
		dw offset loc_31AA4
		dw offset loc_31AB3
		dw offset loc_31AC2
		dw offset loc_31AE1
		dw offset loc_31B00
		dw offset loc_31B2C
		dw offset locret_31AA3
; ---------------------------------------------------------------------------

loc_31A96:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+1Fo
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31A9C:				; CODE XREF: sub_31A67+3Aj
		mov	[di+3C0h], ax
		stosw
		loop	loc_31A9C

locret_31AA3:				; CODE XREF: sub_31A67+5j
					; sub_31A67+16j ...
		retn
; ---------------------------------------------------------------------------

loc_31AA4:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+21o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31AAA:				; CODE XREF: sub_31A67+49j
		mov	[di+3C0h], ax
		stosw
		dec	ax
		loop	loc_31AAA
		retn
; ---------------------------------------------------------------------------

loc_31AB3:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+23o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31AB9:				; CODE XREF: sub_31A67+58j
		mov	[di+3C0h], ax
		stosw
		inc	ax
		loop	loc_31AB9
		retn
; ---------------------------------------------------------------------------

loc_31AC2:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+25o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31AD4:				; CODE XREF: sub_31A67+77j
		mov	[di+3C0h], ax
		stosw
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31AD4
		retn
; ---------------------------------------------------------------------------

loc_31AE1:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+27o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31AF3:				; CODE XREF: sub_31A67+96j
		mov	[di+3C0h], ax
		stosw
		add	dx, bx
		adc	ax, 0
		loop	loc_31AF3
		retn
; ---------------------------------------------------------------------------

loc_31B00:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+29o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31B15
		add	di, 2

loc_31B15:				; CODE XREF: sub_31A67+A9j
					; sub_31A67+B8j
		mov	[di+3C0h], ax

loc_31B19:				; CODE XREF: sub_31A67+BFj
		add	dx, bx
		jnb	short loc_31B25
		stosw
		dec	ax
		loop	loc_31B15
		sub	di, 2
		retn
; ---------------------------------------------------------------------------

loc_31B25:				; CODE XREF: sub_31A67+B4j
		dec	ax
		loop	loc_31B19
		inc	ax
		mov	[di], ax
		retn
; ---------------------------------------------------------------------------

loc_31B2C:				; CODE XREF: sub_31A67+16j
					; DATA XREF: sub_31A67+2Bo
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31B41
		add	di, 2

loc_31B41:				; CODE XREF: sub_31A67+D5j
					; sub_31A67+E8j
		mov	[di], ax

loc_31B43:				; CODE XREF: sub_31A67+EFj
		add	dx, bx
		jnb	short loc_31B55
		mov	[di+3C0h], ax
		add	di, 2
		inc	ax
		loop	loc_31B41
		sub	di, 2
		retn
; ---------------------------------------------------------------------------

loc_31B55:				; CODE XREF: sub_31A67+DEj
		inc	ax
		loop	loc_31B43
		dec	ax
		mov	[di+3C0h], ax
		retn
sub_31A67	endp


; =============== S U B	R O U T	I N E =======================================


sub_31B5E	proc near		; CODE XREF: sub_317EE+18Cp
					; seg012:36ECp
		mov	cx, [si+0Eh]
		or	cx, cx
		jle	short loc_31BA8
		mov	di, [si+6]
		shl	di, 1
		add	di, [bp-18h]
		mov	bl, [si+12h]
		xor	bh, bh
		shl	bx, 1
		cmp	byte ptr [bp-0Ah], 0
		jnz	short loc_31B7F
		jmp	cs:off_31CF7[bx]
; ---------------------------------------------------------------------------

loc_31B7F:				; CODE XREF: sub_31B5E+1Aj
		jmp	cs:off_31B84[bx]
; ---------------------------------------------------------------------------
off_31B84	dw offset locret_31AA3	; DATA XREF: sub_31B5E:loc_31B7Fr
		dw offset locret_31AA3
		dw offset loc_31B98
		dw offset loc_31BB7
		dw offset loc_31BDB
		dw offset loc_31BFF
		dw offset loc_31C37
		dw offset loc_31C6F
		dw offset loc_31CB1
		dw offset locret_31AA3
; ---------------------------------------------------------------------------

loc_31B98:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+2Ao
		mov	ax, [si+2]

loc_31B9B:				; CODE XREF: sub_31B5E+48j
					; sub_31B5E+54j
		cmp	[di+3C0h], ax
		jl	short loc_31BAB
		cmp	[di], ax
		jle	short loc_31BAF
		stosw
		loop	loc_31B9B

loc_31BA8:				; CODE XREF: sub_31B5E+5j
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BAB:				; CODE XREF: sub_31B5E+41j
		mov	[di+3C0h], ax

loc_31BAF:				; CODE XREF: sub_31B5E+45j
		add	di, 2
		loop	loc_31B9B
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BB7:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+2Co
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31BBD:				; CODE XREF: sub_31B5E+6Bj
					; sub_31B5E+78j
		cmp	[di+3C0h], ax
		jl	short loc_31BCE
		cmp	[di], ax
		jle	short loc_31BD2
		stosw
		dec	ax
		loop	loc_31BBD
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BCE:				; CODE XREF: sub_31B5E+63j
		mov	[di+3C0h], ax

loc_31BD2:				; CODE XREF: sub_31B5E+67j
		add	di, 2
		dec	ax
		loop	loc_31BBD
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BDB:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+2Eo
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31BE1:				; CODE XREF: sub_31B5E+8Fj
					; sub_31B5E+9Cj
		cmp	[di+3C0h], ax
		jl	short loc_31BF2
		cmp	[di], ax
		jle	short loc_31BF6
		stosw
		inc	ax
		loop	loc_31BE1
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BF2:				; CODE XREF: sub_31B5E+87j
		mov	[di+3C0h], ax

loc_31BF6:				; CODE XREF: sub_31B5E+8Bj
		add	di, 2
		inc	ax
		loop	loc_31BE1
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31BFF:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+30o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31C11:				; CODE XREF: sub_31B5E+C3j
					; sub_31B5E+D4j
		cmp	[di+3C0h], ax
		jl	short loc_31C26
		cmp	[di], ax
		jle	short loc_31C2A
		stosw
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31C11
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31C26:				; CODE XREF: sub_31B5E+B7j
		mov	[di+3C0h], ax

loc_31C2A:				; CODE XREF: sub_31B5E+BBj
		add	di, 2
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31C11
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31C37:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+32o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31C49:				; CODE XREF: sub_31B5E+FBj
					; sub_31B5E+10Cj
		cmp	[di+3C0h], ax
		jl	short loc_31C5E
		cmp	[di], ax
		jle	short loc_31C62
		stosw
		add	dx, bx
		adc	ax, 0
		loop	loc_31C49
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31C5E:				; CODE XREF: sub_31B5E+EFj
		mov	[di+3C0h], ax

loc_31C62:				; CODE XREF: sub_31B5E+F3j
		add	di, 2
		add	dx, bx
		adc	ax, 0
		loop	loc_31C49
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31C6F:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+34o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31C84
		add	di, 2

loc_31C84:				; CODE XREF: sub_31B5E+121j
					; sub_31B5E+13Ej
		cmp	[di+3C0h], ax
		jge	short loc_31C8E
		mov	[di+3C0h], ax

loc_31C8E:				; CODE XREF: sub_31B5E+12Aj
					; sub_31B5E+147j
		add	dx, bx
		jnb	short loc_31CA4
		cmp	[di], ax
		jle	short loc_31C98
		mov	[di], ax

loc_31C98:				; CODE XREF: sub_31B5E+136j
		add	di, 2
		dec	ax
		loop	loc_31C84
		sub	di, 2
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31CA4:				; CODE XREF: sub_31B5E+132j
		dec	ax
		loop	loc_31C8E
		inc	ax
		cmp	[di], ax
		jle	short loc_31CAE
		mov	[di], ax

loc_31CAE:				; CODE XREF: sub_31B5E+14Cj
					; sub_31B5E+190j
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31CB1:				; CODE XREF: sub_31B5E:loc_31B7Fj
					; DATA XREF: sub_31B5E+36o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31CC6
		add	di, 2

loc_31CC6:				; CODE XREF: sub_31B5E+163j
					; sub_31B5E+180j
		cmp	[di], ax
		jle	short loc_31CCC
		mov	[di], ax

loc_31CCC:				; CODE XREF: sub_31B5E+16Aj
					; sub_31B5E+189j
		add	dx, bx
		jnb	short loc_31CE6
		cmp	[di+3C0h], ax
		jge	short loc_31CDA
		mov	[di+3C0h], ax

loc_31CDA:				; CODE XREF: sub_31B5E+176j
		add	di, 2
		inc	ax
		loop	loc_31CC6
		sub	di, 2
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31CE6:				; CODE XREF: sub_31B5E+170j
		inc	ax
		loop	loc_31CCC
		dec	ax
		cmp	[di+3C0h], ax
		jge	short loc_31CAE
		mov	[di+3C0h], ax
		jmp	loc_31EB9
; ---------------------------------------------------------------------------
off_31CF7	dw offset locret_31AA3	; DATA XREF: sub_31B5E+1Cr
		dw offset locret_31AA3
		dw offset loc_31D0B
		dw offset loc_31D31
		dw offset loc_31D5C
		dw offset loc_31D87
		dw offset loc_31DCA
		dw offset loc_31E0D
		dw offset loc_31E61
		dw offset locret_31AA3
; ---------------------------------------------------------------------------

loc_31D0B:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+19Do
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31D11:				; CODE XREF: sub_31B5E+1C0j
		cmp	[di], ax
		jg	short loc_31D23
		cmp	[di+3C0h], ax
		jl	short loc_31D28
		add	di, 2
		loop	loc_31D11
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D23:				; CODE XREF: sub_31B5E+1B5j
		rep stosw
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D28:				; CODE XREF: sub_31B5E+1BBj
		add	di, 3C0h
		rep stosw
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D31:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+19Fo
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31D37:				; CODE XREF: sub_31B5E+1E7j
		cmp	[di], ax
		jg	short loc_31D4A
		cmp	[di+3C0h], ax
		jl	short loc_31D51
		add	di, 2
		dec	ax
		loop	loc_31D37
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D4A:				; CODE XREF: sub_31B5E+1DBj
					; sub_31B5E+1EEj
		stosw
		dec	ax
		loop	loc_31D4A
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D51:				; CODE XREF: sub_31B5E+1E1j
		add	di, 3C0h

loc_31D55:				; CODE XREF: sub_31B5E+1F9j
		stosw
		dec	ax
		loop	loc_31D55
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D5C:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+1A1o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]

loc_31D62:				; CODE XREF: sub_31B5E+212j
		cmp	[di], ax
		jg	short loc_31D75
		cmp	[di+3C0h], ax
		jl	short loc_31D7C
		add	di, 2
		inc	ax
		loop	loc_31D62
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D75:				; CODE XREF: sub_31B5E+206j
					; sub_31B5E+219j
		stosw
		inc	ax
		loop	loc_31D75
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D7C:				; CODE XREF: sub_31B5E+20Cj
		add	di, 3C0h

loc_31D80:				; CODE XREF: sub_31B5E+224j
		stosw
		inc	ax
		loop	loc_31D80
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31D87:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+1A3o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31D99:				; CODE XREF: sub_31B5E+24Dj
		cmp	[di], ax
		jg	short loc_31DB0
		cmp	[di+3C0h], ax
		jl	short loc_31DBB
		add	di, 2
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31D99
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31DB0:				; CODE XREF: sub_31B5E+23Dj
					; sub_31B5E+258j
		stosw
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31DB0
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31DBB:				; CODE XREF: sub_31B5E+243j
		add	di, 3C0h

loc_31DBF:				; CODE XREF: sub_31B5E+267j
		stosw
		sub	dx, bx
		sbb	ax, 0
		loop	loc_31DBF
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31DCA:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+1A5o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	dx, [si]
		add	dx, 8000h
		adc	ax, 0
		mov	bx, [si+0Ch]

loc_31DDC:				; CODE XREF: sub_31B5E+290j
		cmp	[di], ax
		jg	short loc_31DF3
		cmp	[di+3C0h], ax
		jl	short loc_31DFE
		add	di, 2
		add	dx, bx
		adc	ax, 0
		loop	loc_31DDC
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31DF3:				; CODE XREF: sub_31B5E+280j
					; sub_31B5E+29Bj
		stosw
		add	dx, bx
		adc	ax, 0
		loop	loc_31DF3
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31DFE:				; CODE XREF: sub_31B5E+286j
		add	di, 3C0h

loc_31E02:				; CODE XREF: sub_31B5E+2AAj
		stosw
		add	dx, bx
		adc	ax, 0
		loop	loc_31E02
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31E0D:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+1A7o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31E22
		add	di, 2

loc_31E22:				; CODE XREF: sub_31B5E+2BFj
					; sub_31B5E+2D6j
		cmp	[di+3C0h], ax
		jl	short loc_31E39
		add	dx, bx
		jnb	short loc_31E33
		cmp	[di], ax
		jg	short loc_31E51
		add	di, 2

loc_31E33:				; CODE XREF: sub_31B5E+2CCj
		dec	ax
		loop	loc_31E22
		jmp	loc_31EB9
; ---------------------------------------------------------------------------

loc_31E39:				; CODE XREF: sub_31B5E+2C8j
		add	di, 3C0h

loc_31E3D:				; CODE XREF: sub_31B5E+2E5j
		stosw

loc_31E3E:				; CODE XREF: sub_31B5E:loc_31E48j
		dec	ax
		add	dx, bx
		jnb	short loc_31E48
		loop	loc_31E3D
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		align 2

loc_31E48:				; CODE XREF: sub_31B5E+2E3j
		loop	loc_31E3E
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31E4D:				; CODE XREF: sub_31B5E+2F5j
					; sub_31B5E+2FBj
		add	dx, bx
		jnb	short loc_31E58

loc_31E51:				; CODE XREF: sub_31B5E+2D0j
		stosw
		dec	ax
		loop	loc_31E4D
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		align 2

loc_31E58:				; CODE XREF: sub_31B5E+2F1j
		dec	ax
		loop	loc_31E4D
		inc	ax
		mov	[di], ax
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31E61:				; CODE XREF: sub_31B5E+1Cj
					; DATA XREF: sub_31B5E+1A9o
		mov	cx, [si+0Eh]
		mov	ax, [si+2]
		mov	bx, [si+0Ch]
		mov	dx, [si+4]
		add	dx, 8000h
		jnb	short loc_31E76
		add	di, 2

loc_31E76:				; CODE XREF: sub_31B5E+313j
					; sub_31B5E+32Aj
		cmp	[di], ax
		jg	short loc_31EB2
		add	dx, bx
		jnb	short loc_31E87
		cmp	[di+3C0h], ax
		jl	short loc_31E8D
		add	di, 2

loc_31E87:				; CODE XREF: sub_31B5E+31Ej
		inc	ax
		loop	loc_31E76
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31E8D:				; CODE XREF: sub_31B5E+324j
		add	di, 3C0h

loc_31E91:				; CODE XREF: sub_31B5E+33Dj
		mov	[di], ax

loc_31E93:				; CODE XREF: sub_31B5E:loc_31EA3j
		inc	ax
		add	dx, bx
		jnb	short loc_31EA3
		add	di, 2
		loop	loc_31E91
		dec	ax
		mov	[di], ax
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31EA3:				; CODE XREF: sub_31B5E+338j
		loop	loc_31E93
		add	di, 2
		dec	ax
		mov	[di], ax
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		align 2

loc_31EAE:				; CODE XREF: sub_31B5E+356j
		add	dx, bx
		jnb	short loc_31EB3

loc_31EB2:				; CODE XREF: sub_31B5E+31Aj
		stosw

loc_31EB3:				; CODE XREF: sub_31B5E+352j
		inc	ax
		loop	loc_31EAE
		jmp	short loc_31EB9
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_31EB9:				; CODE XREF: sub_31B5E:loc_31BA8j
					; sub_31B5E+56j ...
		cmp	byte ptr [bp-0Ch], 0
		jnz	short loc_31EC0
		retn
; ---------------------------------------------------------------------------

loc_31EC0:				; CODE XREF: sub_31B5E+35Fj
		mov	cx, [si+14h]
		or	cx, cx
		jle	short loc_31EE1
		mov	di, [si+6]
		mov	dx, [si+4]
		add	dx, 8000h
		adc	di, 0
		sub	di, cx
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495A
		rep stosw

loc_31EE1:				; CODE XREF: sub_31B5E+367j
		mov	cx, [si+18h]
		or	cx, cx
		jle	short loc_31F07
		mov	di, [si+6]
		mov	dx, [si+4]
		add	dx, 8000h
		adc	di, 0
		sub	di, cx
		shl	di, 1
		add	di, [bp-18h]
		add	di, 3C0h
		mov	ax, cs:word_3495C
		dec	ax
		rep stosw

loc_31F07:				; CODE XREF: sub_31B5E+388j
		mov	cx, [si+16h]
		or	cx, cx
		jle	short loc_31F1D
		mov	di, [si+0Ah]
		inc	di
		shl	di, 1
		add	di, [bp-18h]
		mov	ax, cs:word_3495A
		rep stosw

loc_31F1D:				; CODE XREF: sub_31B5E+3AEj
		mov	cx, [si+1Ah]
		or	cx, cx
		jle	short locret_31F38
		mov	di, [si+0Ah]
		inc	di
		shl	di, 1
		add	di, [bp-18h]
		add	di, 3C0h
		mov	ax, cs:word_3495C
		dec	ax
		rep stosw

locret_31F38:				; CODE XREF: sub_31B5E+3C4j
		retn
sub_31B5E	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	byte ptr [bp-0Ah], 1
		mov	ax, 5C9Ch
		mov	word ptr off_40322, ax
		mov	ax, 49A0h
		mov	word ptr off_40326, ax
		jmp	short loc_31F6E
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	byte ptr [bp-0Ah], 0
		mov	ax, 5C9Ch
		mov	word ptr off_40322, ax
		mov	ax, 49A0h
		mov	word ptr off_40326, ax

loc_31F6E:				; CODE XREF: seg012:3532j
		lea	si, [bp+0Ah]
		mov	[bp-6],	si
		mov	cx, [bp+8]
		mov	ax, cx
		dec	ax
		shl	ax, 1
		add	ax, si
		mov	[bp-8],	ax
		cld
		mov	ax, ss
		mov	es, ax
		lea	ax, [bp-798h]
		mov	[bp-18h], ax
		mov	ax, cs:word_3495A
		mov	[bp-2],	ax
		mov	ax, cs:word_3495C
		dec	ax
		mov	[bp-4],	ax
		mov	di, [si]
		mov	ax, [di+6]
		sub	ax, [di+14h]
		sub	ax, [di+18h]
		mov	[bp-0Eh], ax
		mov	ax, [di+0Ah]
		add	ax, [di+16h]
		add	ax, [di+1Ah]
		mov	[bp-12h], ax
		mov	word ptr [bp-7D0h], 3
		mov	bx, [di+2]
		mov	dx, [di+8]
		cmp	bx, dx
		jle	short loc_31FC8
		xchg	bx, dx

loc_31FC8:				; CODE XREF: seg012:35A4j
		mov	[bp-10h], si
		mov	[bp-14h], si
		add	si, 2
		dec	cx
		jnz	short loc_31FE8
		mov	ax, [bp+6]
		mov	[bp+di+6], ax
		push	di
		call	off_40326
		add	sp, 2
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_31FE8:				; CODE XREF: seg012:35B2j seg012:3641j
		mov	di, [si]
		mov	ax, [di+6]
		sub	ax, [di+14h]
		sub	ax, [di+18h]
		cmp	ax, [bp-0Eh]
		jg	short loc_32010
		jnz	short loc_32002
		test	word ptr [bp-7D0h], 1
		jz	short loc_32015

loc_32002:				; CODE XREF: seg012:35D8j
		mov	[bp-0Eh], ax
		mov	[bp-10h], si
		or	word ptr [bp-7D0h], 1
		jmp	short loc_32015
; ---------------------------------------------------------------------------
		align 2

loc_32010:				; CODE XREF: seg012:35D6j
		and	word ptr [bp-7D0h], 2

loc_32015:				; CODE XREF: seg012:35E0j seg012:35EDj
		mov	ax, [di+0Ah]
		add	ax, [di+16h]
		add	ax, [di+1Ah]
		cmp	ax, [bp-12h]
		jl	short loc_3203B
		jnz	short loc_3202D
		test	word ptr [bp-7D0h], 2
		jnz	short loc_32040

loc_3202D:				; CODE XREF: seg012:3603j
		mov	[bp-12h], ax
		mov	[bp-14h], si
		or	word ptr [bp-7D0h], 2
		jmp	short loc_32040
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3203B:				; CODE XREF: seg012:3601j
		and	word ptr [bp-7D0h], 1

loc_32040:				; CODE XREF: seg012:360Bj seg012:3618j
		mov	ax, [di+2]
		cmp	ax, bx
		jge	short loc_32049
		mov	bx, ax

loc_32049:				; CODE XREF: seg012:3625j
		cmp	ax, dx
		jle	short loc_3204F
		mov	dx, ax

loc_3204F:				; CODE XREF: seg012:362Bj
		mov	ax, [di+8]
		cmp	ax, bx
		jge	short loc_32058
		mov	bx, ax

loc_32058:				; CODE XREF: seg012:3634j
		cmp	ax, dx
		jle	short loc_3205E
		mov	dx, ax

loc_3205E:				; CODE XREF: seg012:363Aj
		add	si, 2
		loop	loc_31FE8
		cmp	dx, [bp-2]
		jl	short loc_320B6
		cmp	bx, [bp-4]
		jge	short loc_320B6
		mov	ax, [bp-12h]
		cmp	ax, cs:word_34950
		jl	short loc_320B6
		mov	cx, [bp-0Eh]
		cmp	cx, cs:word_34952
		jge	short loc_320B6
		mov	byte ptr [bp-0Ch], 0
		cmp	dx, [bp-4]
		jg	short loc_3209D
		cmp	bx, [bp-2]
		jl	short loc_3209D
		cmp	ax, cs:word_34952
		jge	short loc_3209D
		cmp	cx, cs:word_34950
		jge	short loc_320A1

loc_3209D:				; CODE XREF: seg012:3668j seg012:366Dj ...
		mov	byte ptr [bp-0Ch], 1

loc_320A1:				; CODE XREF: seg012:367Bj
		cmp	ax, cx
		jz	short loc_320A9
		cmp	dx, bx
		jnz	short loc_320BC

loc_320A9:				; CODE XREF: seg012:3683j
		mov	si, [bp-6]
		mov	di, [si]
		push	di
		call	off_40326
		add	sp, 2

loc_320B6:				; CODE XREF: seg012:3646j seg012:364Bj ...
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_320BC:				; CODE XREF: seg012:3687j
		mov	di, [bp-10h]

loc_320BF:				; CODE XREF: seg012:36C7j seg012:36CCj
		mov	si, [di]
		cmp	byte ptr [si+12h], 2
		jl	short loc_320DC
		mov	[bp-16h], di
		cmp	byte ptr [bp-0Ch], 0
		jz	short loc_320D6
		call	sub_319CD
		jmp	short loc_320D9
; ---------------------------------------------------------------------------
		align 2

loc_320D6:				; CODE XREF: seg012:36AEj
		call	sub_31A67

loc_320D9:				; CODE XREF: seg012:36B3j
		mov	di, [bp-16h]

loc_320DC:				; CODE XREF: seg012:36A5j
		cmp	di, [bp-14h]
		jz	short loc_320EE
		add	di, 2
		cmp	di, [bp-8]
		jbe	short loc_320BF
		mov	di, [bp-6]
		jmp	short loc_320BF
; ---------------------------------------------------------------------------

loc_320EE:				; CODE XREF: seg012:36BFj
		mov	di, [bp-10h]

loc_320F1:				; CODE XREF: seg012:36E7j seg012:36F2j
		sub	di, 2
		cmp	di, [bp-6]
		jnb	short loc_320FC
		mov	di, [bp-8]

loc_320FC:				; CODE XREF: seg012:36D7j
		cmp	di, [bp-14h]
		jz	short loc_32114
		mov	si, [di]
		cmp	byte ptr [si+12h], 2
		jl	short loc_320F1
		mov	[bp-16h], di
		call	sub_31B5E
		mov	di, [bp-16h]
		jmp	short loc_320F1
; ---------------------------------------------------------------------------

loc_32114:				; CODE XREF: seg012:36DFj
		mov	ax, [bp-12h]
		cmp	ax, cs:word_34952
		jl	short loc_32123
		mov	ax, cs:word_34952
		dec	ax

loc_32123:				; CODE XREF: seg012:36FCj
		mov	bx, [bp-0Eh]
		cmp	bx, cs:word_34950
		jge	short loc_32132
		mov	bx, cs:word_34950

loc_32132:				; CODE XREF: seg012:370Bj
		sub	ax, bx
		jle	short loc_32153
		inc	ax
		push	word ptr [bp+6]
		push	ax
		push	bx
		shl	bx, 1
		lea	ax, [bp-3D8h]
		add	ax, bx
		push	ax
		lea	ax, [bp-798h]
		add	ax, bx
		push	ax
		call	off_40322
		add	sp, 0Ah

loc_32153:				; CODE XREF: seg012:3714j
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_3215A	proc far		; CODE XREF: sub_3219D+B5P
		push	di
		mov	ax, 0B000h
		mov	es, ax
		assume es:nothing
		xor	di, di
		mov	cx, 7D0h
		xor	ax, ax
		cld
		rep stosw
		pop	di
		retf
sub_3215A	endp


; =============== S U B	R O U T	I N E =======================================


sub_3216C	proc far		; CODE XREF: sub_3219D+4AP
					; sub_3219D+7CP
		push	si
		push	di
		push	ds
		mov	al, byte_4032A
		mov	bl, 0A0h ; '†'
		mul	bl
		mov	si, ax
		mov	di, si
		add	si, 0A0h ; '†'
		mov	ax, 18h
		sub	al, byte_4032A
		mov	bl, 50h	; 'P'
		mul	bl
		mov	cx, ax
		mov	ax, es
		mov	ds, ax
		assume ds:nothing
		cld
		rep movsw
		xor	ax, ax
		mov	cx, 50h	; 'P'
		rep stosw
		pop	ds
		assume ds:dseg
		pop	di
		pop	si
		retf
sub_3216C	endp


; =============== S U B	R O U T	I N E =======================================


sub_3219D	proc far		; CODE XREF: seg007:06B8P seg027:14BEP ...
		pop	ax
		mov	word_40332, ax
		pop	ax
		mov	word_40334, ax
		mov	ax, 4BC6h
		push	ax		; char *
		call	_sprintf
		add	sp, 2
		mov	byte_4032B, 1
		mov	ax, word_4032E
		mov	word_40330, ax

loc_321BC:				; CODE XREF: seg012:3877j
		mov	ax, word_40334
		push	ax
		mov	ax, word_40332
		push	ax
		push	si
		mov	ax, 0B000h
		mov	es, ax
		mov	si, 4BC6h
		mov	dh, byte_4032C

loc_321D1:				; CODE XREF: sub_3219D+5Ej
					; sub_3219D+87j ...
		mov	dl, [si]
		inc	si
		or	dl, dl
		jz	short loc_321FD
		cmp	dl, 20h	; ' '
		jl	short loc_3220C
		mov	bx, word_40330
		cmp	bx, 0FA0h
		jl	short loc_321F3
		call	sub_3216C
		mov	bx, 0F00h
		mov	word_40330, bx

loc_321F3:				; CODE XREF: sub_3219D+48j
		mov	es:[bx], dx
		add	word_40330, 2
		jmp	short loc_321D1
; ---------------------------------------------------------------------------

loc_321FD:				; CODE XREF: sub_3219D+39j
		cmp	byte_4032B, 0
		jz	short loc_3220A
		mov	ax, word_40330
		mov	word_4032E, ax

loc_3220A:				; CODE XREF: sub_3219D+65j
		pop	si
		retf
; ---------------------------------------------------------------------------

loc_3220C:				; CODE XREF: sub_3219D+3Ej
		cmp	dl, 0Ah
		jnz	short loc_3223A
		cmp	word_40330, 0F00h
		jle	short loc_32226
		call	sub_3216C
		mov	word_40330, 0F00h
		jmp	short loc_321D1
; ---------------------------------------------------------------------------

loc_32226:				; CODE XREF: sub_3219D+7Aj
		mov	ax, word_40330
		mov	bx, 0A0h ; '†'
		div	bl
		xor	ah, ah
		mul	bl
		add	ax, 0A0h ; '†'
		mov	word_40330, ax
		jmp	short loc_321D1
; ---------------------------------------------------------------------------

loc_3223A:				; CODE XREF: sub_3219D+72j
		cmp	dl, 8
		jnz	short loc_3224D
		cmp	word_40330, 0
		jz	short loc_321D1
		sub	word_40330, 2
		jmp	short loc_321D1
; ---------------------------------------------------------------------------

loc_3224D:				; CODE XREF: sub_3219D+A0j
		cmp	dl, 0Ch
		jnz	short loc_32260
		call	sub_3215A
		mov	word_40330, 0
		jmp	loc_321D1
; ---------------------------------------------------------------------------

loc_32260:				; CODE XREF: sub_3219D+B3j
		cmp	dl, 9
		jnz	short loc_3226F
		add	word_40330, 10h
		and	word_40330, 0FFF0h

loc_3226F:				; CODE XREF: sub_3219D+C6j
		jmp	loc_321D1
sub_3219D	endp

; ---------------------------------------------------------------------------
		pop	ax
		mov	word_40332, ax
		pop	ax
		mov	word_40334, ax
		pop	dx
		pop	ax
		mov	bx, 0A0h ; '†'
		mul	bl
		add	ax, dx
		mov	word_40330, ax
		mov	ax, 4BC6h
		push	ax
		call	_sprintf
		sub	sp, 2
		mov	byte_4032B, 0
		jmp	loc_321BC
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		cmp	ax, 0
		jge	short loc_322A7
		xor	ax, ax

loc_322A7:				; CODE XREF: seg012:3883j
		cmp	ax, 18h
		jle	short loc_322AF
		mov	ax, 18h

loc_322AF:				; CODE XREF: seg012:388Aj
		mov	byte_4032A, al
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		mov	byte_4032C, al
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		mov	word_403B2, ax
		add	ax, word_403AE
		mov	word_403B6, ax
		mov	ax, [bp+8]
		mov	word_403B4, ax
		add	ax, word_403B0
		mov	word_403B8, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+6]
		mov	word_403BE, ax
		mov	ax, [bp+8]
		mov	word_403C0, ax
		jmp	short loc_32334
; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_322F3	proc far		; CODE XREF: sub_110D0+75P
					; sub_11C42+33BP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_0]
		xor	dh, dh
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	cx, 3

loc_32306:				; CODE XREF: sub_322F3+17j
		shl	ax, 1
		rcl	dx, 1
		loop	loc_32306
		mov	cx, 168h
		div	cx
		shr	ax, 1
		mov	word_403BE, ax
		mov	ax, [bp+arg_2]
		xor	dh, dh
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	cx, 3

loc_32324:				; CODE XREF: sub_322F3+35j
		shl	ax, 1
		rcl	dx, 1
		loop	loc_32324
		mov	cx, 168h
		div	cx
		shr	ax, 1
		mov	word_403C0, ax

loc_32334:				; CODE XREF: seg012:38D0j
		mov	ax, [bp+arg_4]
		shr	ax, 1
		mov	word_403AE, ax
		add	ax, word_403B2
		mov	word_403B6, ax
		mov	ax, [bp+arg_6]
		shr	ax, 1
		mov	word_403B0, ax
		add	ax, word_403B4
		mov	word_403B8, ax
		push	word_403BE
		call	sub_3272C
		add	sp, 2
		mul	word_403AE
		mov	si, ax
		mov	di, dx
		push	word_403BE
		call	sub_326DE
		add	sp, 2
		mov	cx, ax
		mov	dx, di
		mov	ax, si
		div	cx
		mov	word_403BA, ax
		mov	bx, word_403C0
		or	bx, bx
		jz	short loc_323B4
		push	word_403C0
		call	sub_3272C
		add	sp, 2
		mul	word_403B0
		mov	si, ax
		mov	di, dx
		push	word_403C0
		call	sub_326DE
		add	sp, 2
		mov	cx, ax
		mov	dx, di
		mov	ax, si
		div	cx
		mov	word_403BC, ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_323B4:				; CODE XREF: sub_322F3+90j
		mov	bx, ax
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		sub	ax, bx
		shr	bx, 1
		sub	ax, bx
		mov	word_403BC, ax
		push	word_403B0
		push	ax
		call	sub_2EA4E
		add	sp, 4
		mov	word_403C0, ax
		pop	di
		pop	si
		pop	bp
		retf
sub_322F3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_323D9	proc far		; CODE XREF: sub_1C474+B0P
					; sub_1C474+C0P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	di
		push	si
		mov	si, [bp+arg_0]
		mov	di, [bp+arg_2]
		mov	cx, [si+4]
		or	cx, cx
		jle	short loc_32431
		mov	ax, [si]
		or	ax, ax
		jl	short loc_3240F
		mul	word_403BA
		mov	bx, dx
		shl	bx, 1
		or	ax, ax
		jge	short loc_323FE
		inc	bx

loc_323FE:				; CODE XREF: sub_323D9+22j
		cmp	cx, bx
		jle	short loc_32440
		div	cx
		add	ax, word_403B6
		jo	short loc_3243C
		mov	[di], ax
		jmp	short loc_3244D
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_3240F:				; CODE XREF: sub_323D9+16j
		neg	ax
		mul	word_403BA
		mov	bx, dx
		shl	bx, 1
		or	ax, ax
		jge	short loc_3241E
		inc	bx

loc_3241E:				; CODE XREF: sub_323D9+42j
		cmp	cx, bx
		jle	short loc_32448
		div	cx
		neg	ax
		add	ax, word_403B6
		jo	short loc_3243C
		mov	[di], ax
		jmp	short loc_3244D
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_32431:				; CODE XREF: sub_323D9+10j
		mov	ax, 8000h
		mov	[di], ax
		mov	[di+2],	ax
		jmp	short loc_32472
; ---------------------------------------------------------------------------
		align 2

loc_3243C:				; CODE XREF: sub_323D9+2Fj
					; sub_323D9+51j
		or	ax, ax
		jge	short loc_32448

loc_32440:				; CODE XREF: sub_323D9+27j
		mov	ax, 7D00h
		mov	[di], ax
		jmp	short loc_3244D
; ---------------------------------------------------------------------------
		align 2

loc_32448:				; CODE XREF: sub_323D9+47j
					; sub_323D9+65j
		mov	ax, 8300h
		mov	[di], ax

loc_3244D:				; CODE XREF: sub_323D9+33j
					; sub_323D9+55j ...
		mov	ax, [si+2]
		or	ax, ax
		jl	short loc_32476
		mul	word_403BC
		mov	bx, dx
		shl	bx, 1
		or	ax, ax
		jge	short loc_32461
		inc	bx

loc_32461:				; CODE XREF: sub_323D9+85j
		cmp	cx, bx
		jle	short loc_3249A
		div	cx
		neg	ax
		add	ax, word_403B8
		jo	short loc_32496
		mov	[di+2],	ax

loc_32472:				; CODE XREF: sub_323D9+60j
					; sub_323D9+BBj ...
		pop	si
		pop	di
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32476:				; CODE XREF: sub_323D9+79j
		neg	ax
		mul	word_403BC
		mov	bx, dx
		shl	bx, 1
		or	ax, ax
		jge	short loc_32485
		inc	bx

loc_32485:				; CODE XREF: sub_323D9+A9j
		cmp	cx, bx
		jle	short loc_324A2
		div	cx
		add	ax, word_403B8
		jo	short loc_32496
		mov	[di+2],	ax
		jmp	short loc_32472
; ---------------------------------------------------------------------------

loc_32496:				; CODE XREF: sub_323D9+94j
					; sub_323D9+B6j
		or	ax, ax
		jl	short loc_324A2

loc_3249A:				; CODE XREF: sub_323D9+8Aj
		mov	ax, 8300h
		mov	[di+2],	ax
		jmp	short loc_32472
; ---------------------------------------------------------------------------

loc_324A2:				; CODE XREF: sub_323D9+AEj
					; sub_323D9+BFj
		mov	ax, 7D00h
		mov	[di+2],	ax
		jmp	short loc_32472
sub_323D9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_324AA	proc far		; CODE XREF: sub_1059A+5BP
					; sub_1059A+DCP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	es, [bp+arg_2]
		assume es:nothing
		mov	di, [bp+arg_0]
		mov	ds, word ptr es:[di+2]
		mov	si, es:[di]
		mov	ax, [si+2]
		add	ax, 0Fh
		shl	ax, 1
		mov	dx, ax
		add	dx, di
		mov	bx, cs:word_34CE4
		cmp	bx, dx
		jnz	short loc_324EC
		sub	bx, ax
		mov	cs:word_34CE4, bx
		push	ds
		push	si
		mov	ax, ss
		mov	ds, ax
		call	sub_31641
		add	sp, 4
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_324EC:				; CODE XREF: sub_324AA+26j
		mov	ax, ss
		mov	ds, ax
		lea	ax, aWindowReleased ; "Window Released Out of Order\r\n"
		push	ax
		call	far ptr	sub_2EA2A
sub_324AA	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		push	si
		push	di
		mov	word ptr [bp-4], 0
		jmp	short loc_32519
; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3250B	proc far		; CODE XREF: sub_11588+F1P
					; sub_11BB4+7AP ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		push	si
		push	di
		mov	[bp+var_4], 1

loc_32519:				; CODE XREF: seg012:3AE8j
		mov	dx, [bp+arg_0]
		xor	cx, cx
		mov	ah, 3Ch
		int	21h		; DOS -	2+ - CREATE A FILE WITH	HANDLE (CREAT)
					; CX = attributes for file
					; DS:DX	-> ASCIZ filename (may include drive and path)
		jb	short loc_32570
		mov	[bp+var_2], ax

loc_32527:				; CODE XREF: sub_3250B+60j
		cmp	[bp+arg_6], 0
		jnz	short loc_32533
		cmp	[bp+arg_8], 0
		jz	short loc_3259E

loc_32533:				; CODE XREF: sub_3250B+20j
		mov	cx, 4000h
		mov	ax, [bp+arg_6]
		sub	[bp+arg_6], cx
		sbb	[bp+arg_8], 0
		jnb	short loc_32553
		mov	cx, [bp+arg_6]
		mov	[bp+arg_6], 0
		mov	[bp+arg_8], 0
		add	cx, 4000h

loc_32553:				; CODE XREF: sub_3250B+35j
		mov	ds, [bp+arg_4]
		mov	dx, [bp+arg_2]
		mov	bx, [bp+var_2]
		mov	ah, 40h
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		jb	short loc_32570
		cmp	ax, cx
		jnz	short loc_3256D
		add	[bp+arg_4], 400h
		jmp	short loc_32527
; ---------------------------------------------------------------------------

loc_3256D:				; CODE XREF: sub_3250B+59j
		mov	ax, 1

loc_32570:				; CODE XREF: sub_3250B+17j
					; sub_3250B+55j
		mov	[bp+var_6], ax
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		mov	ax, ss
		mov	ds, ax
		mov	dx, [bp+arg_0]
		mov	ah, 41h
		int	21h		; DOS -	2+ - DELETE A FILE (UNLINK)
					; DS:DX	-> ASCIZ pathname of file to delete (no	wildcards allowed)
		mov	ax, [bp+var_6]
		cmp	[bp+var_4], 0
		jnz	short loc_325A7
		mov	ax, ss
		mov	ds, ax
		mov	ax, 4C72h
		push	[bp+arg_0]
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------

loc_3259E:				; CODE XREF: sub_3250B+26j
		mov	bx, [bp+var_2]
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		xor	ax, ax

loc_325A7:				; CODE XREF: sub_3250B+81j
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_3250B	endp


; =============== S U B	R O U T	I N E =======================================


sub_325AE	proc far		; CODE XREF: sub_33816P
		cmp	byte_403F2, 0
		jnz	short locret_325D5
		mov	ah, 0Fh
		int	10h		; - VIDEO - GET	CURRENT	VIDEO MODE
					; Return: AH = number of columns on screen
					; AL = current video mode
					; BH = current active display page
		mov	byte_403F2, al
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		mov	al, es:10h
		mov	byte_403F3, al
		push	cs
		mov	ax, 3BB6h
		push	ax
		call	sub_2FE1C
		add	sp, 4

locret_325D5:				; CODE XREF: sub_325AE+5j
		retf
sub_325AE	endp

; ---------------------------------------------------------------------------
		db 0B8h, 40h, 0, 8Eh, 0C0h, 0A0h, 83h, 4Ch, 26h, 0A2h
		db 10h,	0, 0B4h, 0, 0A0h, 82h, 4Ch, 0CDh, 10h, 0B8h, 40h
		db 0, 8Eh, 0C0h, 0A0h, 83h, 4Ch, 26h, 0A2h, 10h, 0, 24h
		db 30h,	3Ch, 30h, 75h, 0Bh, 33h, 0C0h, 50h, 9Ah, 88h, 48h
		dw seg seg012
		db 83h,	0C4h, 2, 0B4h, 0Bh, 0BBh, 2 dup(0), 0CDh, 10h
		db 0CBh

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3260E	proc far		; CODE XREF: sub_274B0+A1P
					; sub_28DC8+AP	...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	ds
		push	di
		push	si
		lea	si, unk_41690
		mov	di, [bp+arg_0]
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ax, cs
		mov	ds, ax
		assume ds:seg012
		cld
		mov	cx, 1Eh
		rep movsw
		pop	si
		pop	di
		pop	ds
		assume ds:dseg
		pop	bp
		retf
sub_3260E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3262E	proc far		; CODE XREF: sub_275C6+94P
					; sub_28DC8+2EP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	ds
		push	di
		push	si
		mov	si, [bp+arg_0]
		mov	ax, cs
		mov	es, ax
		assume es:seg012
		lea	di, unk_41690
		cld
		mov	cx, 1Eh
		rep movsw
		pop	si
		pop	di
		pop	ds
		pop	bp
		retf
sub_3262E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3264A	proc far		; CODE XREF: sub_3AD9C+EP sub_3B0BA+CP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		mov	es, [bp+arg_2]
		assume es:nothing
		mov	si, [bp+arg_0]
		mov	ax, es:[si+4]
		pop	si
		pop	bp
		retf
sub_3264A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3265B	proc far		; CODE XREF: sub_32AE2+39P
					; sub_35F48+32P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		mov	es, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, es:[si+4]
		shl	ax, 1
		shl	ax, 1
		mov	bx, [bp+arg_4]
		shl	bx, 1
		shl	bx, 1
		add	bx, ax
		add	bx, 6
		shl	ax, 1
		add	ax, 6
		mov	cx, es
		xor	dx, dx
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		shl	cx, 1
		rcl	dx, 1
		add	ax, cx
		adc	dx, 0
		add	ax, es:[bx]
		adc	dx, es:[bx+2]
		mov	bx, ax
		and	bx, 0Fh
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		mov	dx, ax
		mov	ax, bx
		pop	si
		pop	bp
		retf
sub_3265B	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		mov	es, word ptr [bp+8]
		mov	si, [bp+6]
		mov	bx, [bp+0Ah]
		shl	bx, 1
		shl	bx, 1
		mov	ax, es:[bx+si+6]
		mov	dx, es:[bx+si+8]
		mov	si, [bp+0Ch]
		mov	[si], ax
		mov	[si+2],	dx
		pop	si
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_326DE	proc far		; CODE XREF: sub_14712+630P
					; sub_14DA2+1995P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]

loc_326E4:				; CODE XREF: sub_3272C+9j
		mov	bl, ah
		xor	ah, ah
		and	bx, 3
		shl	bx, 1
		jmp	cs:off_326F2[bx]
; ---------------------------------------------------------------------------
off_326F2	dw offset loc_326FA	; DATA XREF: sub_326DE+Fr
		dw offset loc_32704
		dw offset loc_32711
		dw offset loc_3271D
; ---------------------------------------------------------------------------

loc_326FA:				; CODE XREF: sub_326DE+Fj
					; DATA XREF: sub_326DE:off_326F2o
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+4C84h]
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32704:				; CODE XREF: sub_326DE+Fj
					; DATA XREF: sub_326DE+16o
		mov	bx, 100h
		sub	bx, ax
		shl	bx, 1
		mov	ax, [bx+4C84h]
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32711:				; CODE XREF: sub_326DE+Fj
					; DATA XREF: sub_326DE+18o
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+4C84h]
		neg	ax
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3271D:				; CODE XREF: sub_326DE+Fj
					; DATA XREF: sub_326DE+1Ao
		mov	bx, 100h
		sub	bx, ax
		shl	bx, 1
		mov	ax, [bx+4C84h]
		neg	ax
		pop	bp
		retf
sub_326DE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3272C	proc far		; CODE XREF: sub_14712+5F6P
					; sub_14DA2+19CFP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		add	ax, 100h
		jmp	short loc_326E4
sub_3272C	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	dx, [bp+8]
		mov	ax, [bp+6]
		div	word ptr [bp+0Ah]
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, word_403BA
		mul	word ptr [bp+6]
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, word_403BC
		mul	word ptr [bp+6]
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3275C	proc far		; CODE XREF: sub_24E9E+DD6P

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	ax, word_403BA
		mul	[bp+arg_0]
		div	[bp+arg_2]
		pop	bp
		retf
sub_3275C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, word_403BC
		mul	word ptr [bp+6]
		div	word ptr [bp+8]
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================


sub_32778	proc far		; CODE XREF: sub_2998E+17P
					; seg012:2061P	...
		cli
		mov	ax, word_3F878
		mov	dx, word_3F87A
		sti
		retf
sub_32778	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, [bp+6]
		mov	cx, [bp+8]
		cli
		mov	ax, word_3F878
		mov	dx, word_3F87A
		sti
		sub	ax, bx
		sbb	dx, cx
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================


sub_3279A	proc far		; CODE XREF: sub_1D93C+153P
					; sub_1D93C:loc_1DADEP	...
		mov	bx, word_405FA
		mov	cx, word_405FC
		cli
		mov	ax, word_3F878
		mov	dx, word_3F87A
		sti
		mov	word_405FA, ax
		mov	word_405FC, dx
		sub	ax, bx
		sbb	dx, cx
		retf
sub_3279A	endp

; ---------------------------------------------------------------------------
		xor	ax, ax
		mov	word_3F878, ax
		mov	word_3F87A, ax
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_327C0	proc far		; CODE XREF: sub_3776C+44P
					; sub_3776C+9DP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		call	sub_32778
		add	ax, [bp+arg_0]
		adc	dx, [bp+arg_2]
		mov	word_405F6, ax
		mov	word_405F8, dx
		pop	bp
		retf
sub_327C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_327D7	proc far		; CODE XREF: sub_327D7+9j
					; sub_327D7+11j ...
		call	sub_32778
		cmp	dx, word_405F8
		jb	short near ptr sub_327D7
		ja	short locret_327EA
		cmp	ax, word_405F6
		jb	short near ptr sub_327D7

locret_327EA:				; CODE XREF: sub_327D7+Bj
		retf
sub_327D7	endp


; =============== S U B	R O U T	I N E =======================================


sub_327EB	proc far		; CODE XREF: sub_3A4B6+124P
		call	sub_32778
		cmp	dx, word_405F8
		jb	short loc_32802
		ja	short loc_327FE
		cmp	ax, word_405F6
		jb	short loc_32802

loc_327FE:				; CODE XREF: sub_327EB+Bj
		mov	ax, 1
		retf
; ---------------------------------------------------------------------------

loc_32802:				; CODE XREF: sub_327EB+9j
					; sub_327EB+11j
		xor	ax, ax
		retf
sub_327EB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32805	proc far		; CODE XREF: sub_22576+6P
					; sub_23B4C+119AP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		call	sub_32778
		add	ax, [bp+arg_0]
		adc	dx, [bp+arg_2]
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_3281C:				; CODE XREF: sub_32805+1Fj
					; sub_32805+26j
		call	sub_32778
		cmp	dx, [bp+var_2]
		jb	short loc_3281C
		ja	short loc_3282D
		cmp	ax, [bp+var_4]
		jb	short loc_3281C

loc_3282D:				; CODE XREF: sub_32805+21j
		mov	sp, bp
		pop	bp
		retf
sub_32805	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32832	proc far		; CODE XREF: sub_3A7F6+3DP
					; sub_3A7F6+63P

arg_4		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	dx, [bp+arg_4]
		or	dx, dx
		jnz	short loc_3284A
		xor	ax, ax
		jmp	short loc_32882
sub_32832	endp

; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32843	proc far		; CODE XREF: sub_13178+A2CP
					; sub_13178+B03P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		xor	dx, dx

loc_3284A:				; CODE XREF: sub_32832+Aj
		mov	es, word ptr off_405FE+2
		mov	si, [bp+arg_0]
		xor	ax, ax
		mov	cl, es:14h
		mov	di, es:10h

loc_3285D:				; CODE XREF: sub_32843+2Bj
					; sub_32843+3Dj
		mov	bl, [si]
		or	bl, bl
		jz	short loc_32882
		inc	si
		xor	bh, bh
		shl	bx, 1
		mov	bx, es:[bx+16h]
		or	bx, bx
		jz	short loc_3285D
		or	cl, cl
		jz	short loc_3287B
		mov	bl, es:[bx]
		xor	bh, bh
		mov	di, bx

loc_3287B:				; CODE XREF: sub_32843+2Fj
		add	ax, di
		dec	dx
		jz	short loc_32882
		jmp	short loc_3285D
; ---------------------------------------------------------------------------

loc_32882:				; CODE XREF: sub_32832+Ej
					; sub_32843+1Ej ...
		pop	di
		pop	si
		pop	bp
		retf
sub_32843	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32886	proc far		; CODE XREF: sub_25FF6+ADP

var_A		= byte ptr -0Ah
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	si, [bp+arg_6]
		mov	[bp+var_A], 1
		jmp	short loc_328A8
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		mov	si, [bp+arg_6]
		mov	[bp+var_A], 0

loc_328A8:				; CODE XREF: sub_32886+10j
					; seg012:3EB9j	...
		mov	ax, [bp+arg_0]
		mov	word_4031E, ax
		mov	ax, [bp+arg_2]
		mov	[bp+arg_0], ax
		mov	ax, [bp+arg_4]
		mov	[bp+arg_2], ax
		mov	ax, 6176h
		mov	word ptr off_40322, ax
		mov	ax, 13BEh
		mov	word ptr off_40326, ax
		jmp	loc_3180A
sub_32886	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		lea	si, [bp+0Ch]
		mov	byte ptr [bp-0Ah], 1
		jmp	short loc_328A8
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 7D0h
		push	si
		push	di
		lea	si, [bp+0Ch]
		mov	byte ptr [bp-0Ah], 0
		jmp	short loc_328A8
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_328EE	proc far		; CODE XREF: sub_14712+200P
					; sub_14712+26FP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	bx, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	di, [bp+arg_4]
		xor	dx, dx
		mov	ax, [bx]
		or	ax, ax
		jz	short loc_32914
		mov	cx, [si]
		or	cx, cx
		jz	short loc_32914
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1

loc_32914:				; CODE XREF: sub_328EE+14j
					; sub_328EE+1Aj
		mov	[di], dx
		mov	ax, [bx+6]
		or	ax, ax
		jz	short loc_32930
		mov	cx, [si+2]
		or	cx, cx
		jz	short loc_32930
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di], dx

loc_32930:				; CODE XREF: sub_328EE+2Dj
					; sub_328EE+34j
		mov	ax, [bx+0Ch]
		or	ax, ax
		jz	short loc_3294A
		mov	cx, [si+4]
		or	cx, cx
		jz	short loc_3294A
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di], dx

loc_3294A:				; CODE XREF: sub_328EE+47j
					; sub_328EE+4Ej
		xor	dx, dx
		mov	ax, [bx+2]
		or	ax, ax
		jz	short loc_32963
		mov	cx, [si]
		or	cx, cx
		jz	short loc_32963
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1

loc_32963:				; CODE XREF: sub_328EE+63j
					; sub_328EE+69j
		mov	[di+2],	dx
		mov	ax, [bx+8]
		or	ax, ax
		jz	short loc_32981
		mov	cx, [si+2]
		or	cx, cx
		jz	short loc_32981
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di+2],	dx

loc_32981:				; CODE XREF: sub_328EE+7Dj
					; sub_328EE+84j
		mov	ax, [bx+0Eh]
		or	ax, ax
		jz	short loc_3299C
		mov	cx, [si+4]
		or	cx, cx
		jz	short loc_3299C
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di+2],	dx

loc_3299C:				; CODE XREF: sub_328EE+98j
					; sub_328EE+9Fj
		xor	dx, dx
		mov	ax, [bx+4]
		or	ax, ax
		jz	short loc_329B5
		mov	cx, [si]
		or	cx, cx
		jz	short loc_329B5
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1

loc_329B5:				; CODE XREF: sub_328EE+B5j
					; sub_328EE+BBj
		mov	[di+4],	dx
		mov	ax, [bx+0Ah]
		or	ax, ax
		jz	short loc_329D3
		mov	cx, [si+2]
		or	cx, cx
		jz	short loc_329D3
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di+4],	dx

loc_329D3:				; CODE XREF: sub_328EE+CFj
					; sub_328EE+D6j
		mov	ax, [bx+10h]
		or	ax, ax
		jz	short loc_329EE
		mov	cx, [si+4]
		or	cx, cx
		jz	short loc_329EE
		imul	cx
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di+4],	dx

loc_329EE:				; CODE XREF: sub_328EE+EAj
					; sub_328EE+F1j
		pop	di
		pop	si
		pop	bp
		retf
sub_328EE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_329F2	proc far		; CODE XREF: sub_24E9E+E8P
					; sub_24E9E+152P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, [bp+arg_0]
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_4]
		mov	cx, 9

loc_32A03:				; CODE XREF: sub_329F2+6Ej
					; sub_329F2+7Aj
		xor	dx, dx
		mov	ax, [si]
		or	ax, ax
		jz	short loc_32A1A
		cmp	word ptr [bx], 0
		jz	short loc_32A1A
		imul	word ptr [bx]
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1

loc_32A1A:				; CODE XREF: sub_329F2+17j
					; sub_329F2+1Cj
		mov	[di], dx
		mov	ax, [si+2]
		or	ax, ax
		jz	short loc_32A36
		cmp	word ptr [bx+6], 0
		jz	short loc_32A36
		imul	word ptr [bx+6]
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di], dx

loc_32A36:				; CODE XREF: sub_329F2+2Fj
					; sub_329F2+35j
		mov	ax, [si+4]
		or	ax, ax
		jz	short loc_32A50
		cmp	word ptr [bx+0Ch], 0
		jz	short loc_32A50
		imul	word ptr [bx+0Ch]
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		add	[di], dx

loc_32A50:				; CODE XREF: sub_329F2+49j
					; sub_329F2+4Fj
		add	di, 2
		cmp	cx, 7
		jz	short loc_32A66
		cmp	cx, 4
		jz	short loc_32A66
		add	bx, 2
		loop	loc_32A03
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32A66:				; CODE XREF: sub_329F2+64j
					; sub_329F2+69j
		sub	bx, 4
		add	si, 6
		loop	loc_32A03
		pop	di
		pop	si
		pop	bp
		retf
sub_329F2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32A72	proc far		; CODE XREF: sub_14DA2+A70P
					; sub_19794+82P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, [bp+arg_0]
		mov	di, [bp+arg_2]
		mov	cx, 9
		cmp	si, di
		jnz	short loc_32AA3
		mov	ax, [si+2]
		xchg	ax, [si+6]
		mov	[si+2],	ax
		mov	ax, [si+4]
		xchg	ax, [si+0Ch]
		mov	[si+4],	ax
		mov	ax, [si+0Ah]
		xchg	ax, [si+0Eh]
		mov	[si+0Ah], ax
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32AA3:				; CODE XREF: sub_32A72+10j
		mov	ax, [si]
		mov	[di], ax
		mov	ax, [si+2]
		mov	[di+6],	ax
		mov	ax, [si+4]
		mov	[di+0Ch], ax
		mov	ax, [si+6]
		mov	[di+2],	ax
		mov	ax, [si+8]
		mov	[di+8],	ax
		mov	ax, [si+0Ah]
		mov	[di+0Eh], ax
		mov	ax, [si+0Ch]
		mov	[di+4],	ax
		mov	ax, [si+0Eh]
		mov	[di+0Ah], ax
		mov	ax, [si+10h]
		mov	[di+10h], ax
		pop	di
		pop	si
		pop	bp
		retf
sub_32A72	endp

; ---------------------------------------------------------------------------
		align 2
off_32ADC	dw offset loc_32B78	; DATA XREF: sub_32AE2+91r
		dw offset loc_32B93
		dw offset loc_32BDE

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32AE2	proc far		; CODE XREF: sub_3A9FC+10FP

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		cld
		mov	ax, [bp+arg_2]
		mov	ds, ax
		mov	ax, [bp+arg_0]
		mov	si, ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_A], ax
		mov	ax, [bp+arg_4]
		mov	[bp+var_8], ax
		mov	bx, [si+4]
		mov	[bp+var_2], bx
		mov	[bp+var_4], 0

loc_32B0D:				; CODE XREF: sub_32AE2+72j
		push	[bp+var_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		mov	ax, seg	dseg
		mov	ds, ax
		call	sub_3265B
		add	sp, 6
		mov	[bp+var_6], ax
		mov	si, ax
		mov	ds, dx
		mov	di, [bp+var_8]
		mov	es, [bp+var_A]
		mov	al, [si+0Fh]
		and	al, 0F0h
		jnz	short loc_32B4E
		mov	al, [si+0Eh]
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		jz	short loc_32B4E
		cmp	al, 4
		jb	short loc_32B5F
		mov	ax, 1
		jmp	short loc_32B58
; ---------------------------------------------------------------------------
		align 2

loc_32B4E:				; CODE XREF: sub_32AE2+53j
					; sub_32AE2+60j ...
		inc	[bp+var_4]
		dec	[bp+var_2]
		jg	short loc_32B0D
		xor	ax, ax

loc_32B58:				; CODE XREF: sub_32AE2+69j
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32B5F:				; CODE XREF: sub_32AE2+64j
		mov	dx, [si]
		mov	[bp+var_C], dx
		mov	dx, [si+2]
		mov	[bp+var_E], dx
		xor	dx, dx
		xor	ah, ah
		mov	bx, ax
		dec	bx
		shl	bx, 1
		jmp	cs:off_32ADC[bx]

loc_32B78:				; CODE XREF: sub_32AE2+ACj
					; DATA XREF: seg012:off_32ADCo
		mov	bx, si
		add	bx, 10h
		add	bx, dx
		mov	cx, [bp+var_C]

loc_32B82:				; CODE XREF: sub_32AE2+A6j
		mov	al, [bx]
		stosb
		add	bx, [bp+var_E]
		loop	loc_32B82
		inc	dx
		cmp	dx, [bp+var_E]
		jnz	short loc_32B78
		jmp	loc_32C15
; ---------------------------------------------------------------------------

loc_32B93:				; CODE XREF: sub_32AE2+91j
					; sub_32AE2+CDj
					; DATA XREF: ...
		mov	bx, dx
		shr	bx, 1
		add	bx, 10h
		add	bx, si
		mov	cx, [bp+var_C]

loc_32B9F:				; CODE XREF: sub_32AE2+C3j
		mov	al, [bx]
		stosb
		add	bx, [bp+var_E]
		loop	loc_32B9F
		add	di, [bp+var_C]
		inc	dx
		inc	dx
		cmp	dx, [bp+var_E]
		jb	short loc_32B93
		mov	dx, 1
		mov	di, [bp+var_8]
		add	di, [bp+var_C]

loc_32BBA:				; CODE XREF: sub_32AE2+F7j
		mov	bx, dx
		add	bx, [bp+var_E]
		shr	bx, 1
		add	bx, 10h
		add	bx, si
		mov	cx, [bp+var_C]

loc_32BC9:				; CODE XREF: sub_32AE2+EDj
		mov	al, [bx]
		stosb
		add	bx, [bp+var_E]
		loop	loc_32BC9
		add	di, [bp+var_C]
		inc	dx
		inc	dx
		cmp	dx, [bp+var_E]
		jb	short loc_32BBA
		jmp	short loc_32C15
; ---------------------------------------------------------------------------
		align 2

loc_32BDE:				; CODE XREF: sub_32AE2+91j
					; sub_32AE2+131j
					; DATA XREF: ...
		mov	bx, dx
		shr	bx, 1
		add	bx, 10h
		add	bx, [bp+var_6]
		mov	cx, [bp+var_C]
		mov	si, [bp+var_E]
		shr	si, 1
		adc	si, 0

loc_32BF3:				; CODE XREF: sub_32AE2+116j
		mov	al, [bx]
		stosb
		add	bx, si
		loop	loc_32BF3
		inc	dx
		cmp	dx, [bp+var_E]
		jz	short loc_32C15
		mov	cx, [bp+var_C]
		mov	si, [bp+var_E]
		shr	si, 1

loc_32C08:				; CODE XREF: sub_32AE2+12Bj
		mov	al, [bx]
		stosb
		add	bx, si
		loop	loc_32C08
		inc	dx
		cmp	dx, [bp+var_E]
		jnz	short loc_32BDE

loc_32C15:				; CODE XREF: sub_32AE2+AEj
					; sub_32AE2+F9j ...
		mov	di, [bp+var_6]
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		add	di, 10h
		mov	si, [bp+var_8]
		mov	ds, [bp+var_A]
		mov	ax, [bp+var_C]
		mul	[bp+var_E]
		mov	cx, ax
		shr	cx, 1
		jb	short loc_32C36
		rep movsw
		jmp	loc_32B4E
; ---------------------------------------------------------------------------

loc_32C36:				; CODE XREF: sub_32AE2+14Dj
		rep movsw
		movsb
		jmp	loc_32B4E
sub_32AE2	endp

; ---------------------------------------------------------------------------
word_32C3C	dw 0			; DATA XREF: sub_32D7C+88r
		db 13Eh	dup(0)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_32D7C	proc far		; CODE XREF: sub_30E07+B8P
					; DATA XREF: sub_30E07+101o

var_210		= byte ptr -210h
var_110		= byte ptr -110h
var_E		= word ptr -0Eh
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		push	ds
		cld
		sub	sp, 200h
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+1]
		mov	[bp+var_2], ax
		mov	[bp+var_6], ax
		mov	al, [si+3]
		xor	ah, ah
		mov	[bp+var_4], ax
		mov	[bp+var_8], ax
		mov	al, [si+4]
		xor	ah, ah
		mov	[bp+var_A], ax
		and	ax, 7Fh
		add	si, 5
		mov	[bp+var_E], si
		lea	cx, unk_3F9CC
		shl	ax, 1
		mov	di, ax
		xor	bx, bx
		xor	dx, dx

loc_32DC1:				; CODE XREF: sub_32D7C+66j
		mov	cs:[bx+421Ch], cx
		shl	dx, 1
		sub	cs:[bx+421Ch], dx
		lodsb
		xor	ah, ah
		add	dx, ax
		add	cx, ax
		or	ax, ax
		jz	short $+2
		mov	cs:[bx+423Ch], dx
		add	bx, 2
		cmp	bx, di
		jl	short loc_32DC1
		sub	cx, 425Ch
		mov	ax, cs
		mov	es, ax
		assume es:seg012
		mov	di, 425Ch
		rep movsb
		push	si
		mov	bx, [bp+var_A]
		mov	bh, bl
		cmp	bh, 8
		jle	short loc_32DFE
		mov	bh, 8

loc_32DFE:				; CODE XREF: sub_32D7C+7Ej
		xor	si, si
		mov	bl, 1
		mov	cl, 80h	; 'Ä'
		mov	di, cs:word_32C3C

loc_32E09:				; CODE XREF: sub_32D7C+B7j
		xchg	si, [bp+var_E]
		lodsb
		xchg	si, [bp+var_E]
		mov	dh, al
		or	al, al
		jz	short loc_32E29

loc_32E16:				; CODE XREF: sub_32D7C+AFj
		mov	ch, cl
		mov	dl, cs:[di]
		inc	di

loc_32E1C:				; CODE XREF: sub_32D7C+ABj
		mov	[bp+si+var_110], dl
		mov	[bp+si+var_210], bl
		inc	si
		dec	ch
		jnz	short loc_32E1C

loc_32E29:				; CODE XREF: sub_32D7C+98j
		dec	dh
		jg	short loc_32E16
		shr	cl, 1
		inc	bl
		cmp	bl, bh
		jle	short loc_32E09

loc_32E35:				; CODE XREF: sub_32D7C+C3j
		mov	[bp+si+var_210], 40h ; '@'
		inc	si
		cmp	si, 100h
		jnz	short loc_32E35
		pop	si
		mov	bx, si
		mov	es, [bp+arg_6]
		assume es:nothing
		mov	di, [bp+arg_4]
		mov	dl, [bx]
		inc	bx
		mov	dh, [bx]
		inc	bx
		mov	ah, 8
		test	[bp+var_A], 80h
		jz	short loc_32E5C
		jmp	loc_32F27
; ---------------------------------------------------------------------------

loc_32E5C:				; CODE XREF: sub_32D7C+DBj
					; sub_32D7C+10Ej ...
		mov	si, dx
		and	si, 0FFh
		mov	cl, [bp+si+var_210]
		cmp	cl, 8
		ja	short loc_32EB5
		mov	al, [bp+si+var_110]
		stosb
		cmp	cl, ah
		jle	short loc_32E7F
		xchg	cl, ah
		rol	dx, cl
		xchg	cl, ah
		sub	cl, ah
		jmp	short loc_32EA0
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_32E7F:				; CODE XREF: sub_32D7C+F6j
					; sub_32D7C+12Bj ...
		rol	dx, cl
		sub	ah, cl
		or	di, di
		jz	short loc_32E94

loc_32E87:				; CODE XREF: sub_32D7C+122j
		dec	[bp+var_2]
		jnz	short loc_32E5C
		dec	[bp+var_4]
		jge	short loc_32E5C
		jmp	loc_32F16
; ---------------------------------------------------------------------------

loc_32E94:				; CODE XREF: sub_32D7C+109j
		mov	di, es
		add	di, 1000h
		mov	es, di
		assume es:nothing
		xor	di, di
		jmp	short loc_32E87
; ---------------------------------------------------------------------------

loc_32EA0:				; CODE XREF: sub_32D7C+100j
		mov	dh, [bx]
		inc	bx
		jz	short loc_32EA9

loc_32EA5:				; CODE XREF: sub_32D7C+137j
		mov	ah, 8
		jmp	short loc_32E7F
; ---------------------------------------------------------------------------

loc_32EA9:				; CODE XREF: sub_32D7C+127j
		mov	bx, ds
		add	bx, 1000h
		mov	ds, bx
		assume ds:nothing
		xor	bx, bx
		jmp	short loc_32EA5
; ---------------------------------------------------------------------------

loc_32EB5:				; CODE XREF: sub_32D7C+EDj
		push	si
		push	bp
		mov	si, bx
		mov	bp, 0Eh
		mov	bh, dh
		xor	dh, dh
		xor	ch, ch

loc_32EC2:				; CODE XREF: sub_32D7C+167j
					; sub_32D7C+183j
		cmp	ah, 0
		jz	short loc_32F01

loc_32EC7:				; CODE XREF: sub_32D7C+18Cj
		cmp	ch, 0
		jz	short loc_32ED4
		mov	dh, bh
		mov	bx, si
		pop	bp
		pop	si
		jmp	short loc_32E7F
; ---------------------------------------------------------------------------

loc_32ED4:				; CODE XREF: sub_32D7C+14Ej
		shl	bh, 1
		rcl	dx, 1
		sub	ah, 1
		add	bp, 2
		cmp	dx, cs:[bp+423Ch]
		jnb	short loc_32EC2
		add	dx, cs:[bp+421Ch]
		mov	bp, dx
		mov	al, cs:[bp+0]
		stosb
		mov	dh, bh
		mov	cl, ah
		rol	dx, cl
		mov	cl, 8
		sub	cl, ah
		mov	ah, 0
		mov	ch, 1
		jmp	short loc_32EC2
; ---------------------------------------------------------------------------

loc_32F01:				; CODE XREF: sub_32D7C+149j
		mov	bh, [si]
		inc	si
		jz	short loc_32F0A

loc_32F06:				; CODE XREF: sub_32D7C+198j
		mov	ah, 8
		jmp	short loc_32EC7
; ---------------------------------------------------------------------------

loc_32F0A:				; CODE XREF: sub_32D7C+188j
		mov	si, ds
		add	si, 1000h
		mov	ds, si
		assume ds:nothing
		xor	si, si
		jmp	short loc_32F06
; ---------------------------------------------------------------------------

loc_32F16:				; CODE XREF: sub_32D7C+115j
					; sub_32D7C+1E4j
		mov	ax, [bp+var_6]
		mov	dx, [bp+var_8]
		add	sp, 200h
		pop	ds
		assume ds:dseg
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_32F27:				; CODE XREF: sub_32D7C+DDj
					; sub_32D7C+1DDj ...
		mov	si, dx
		and	si, 0FFh
		mov	cl, [bp+si+var_210]
		cmp	cl, 8
		ja	short loc_32F83
		mov	al, [bp+si+var_110]
		add	al, ch
		stosb
		cmp	cl, ah
		jle	short loc_32F4C
		xchg	cl, ah
		rol	dx, cl
		xchg	cl, ah
		sub	cl, ah
		jmp	short loc_32F6E
; ---------------------------------------------------------------------------
		align 2

loc_32F4C:				; CODE XREF: sub_32D7C+1C3j
					; sub_32D7C+1F9j ...
		rol	dx, cl
		sub	ah, cl
		or	di, di
		jz	short loc_32F62

loc_32F54:				; CODE XREF: sub_32D7C+1F0j
		mov	ch, al
		dec	[bp+var_2]
		jnz	short loc_32F27
		dec	[bp+var_4]
		jge	short loc_32F27
		jmp	short loc_32F16
; ---------------------------------------------------------------------------

loc_32F62:				; CODE XREF: sub_32D7C+1D6j
		mov	di, es
		add	di, 1000h
		mov	es, di
		assume es:nothing
		xor	di, di
		jmp	short loc_32F54
; ---------------------------------------------------------------------------

loc_32F6E:				; CODE XREF: sub_32D7C+1CDj
		mov	dh, [bx]
		inc	bx
		jz	short loc_32F77

loc_32F73:				; CODE XREF: sub_32D7C+205j
		mov	ah, 8
		jmp	short loc_32F4C
; ---------------------------------------------------------------------------

loc_32F77:				; CODE XREF: sub_32D7C+1F5j
		mov	bx, ds
		add	bx, 1000h
		mov	ds, bx
		assume ds:nothing
		xor	bx, bx
		jmp	short loc_32F73
; ---------------------------------------------------------------------------

loc_32F83:				; CODE XREF: sub_32D7C+1B8j
		push	si
		push	bp
		mov	si, bx
		mov	bp, 0Eh
		mov	bh, dh
		xor	dh, dh
		mov	[bp+var_E], 0

loc_32F93:				; CODE XREF: sub_32D7C+239j
					; sub_32D7C+25Aj
		cmp	ah, 0
		jz	short loc_32FD8

loc_32F98:				; CODE XREF: sub_32D7C+263j
		cmp	[bp+var_E], 0
		jz	short loc_32FA6
		mov	dh, bh
		mov	bx, si
		pop	bp
		pop	si
		jmp	short loc_32F4C
; ---------------------------------------------------------------------------

loc_32FA6:				; CODE XREF: sub_32D7C+220j
		shl	bh, 1
		rcl	dx, 1
		sub	ah, 1
		add	bp, 2
		cmp	dx, cs:[bp+423Ch]
		jnb	short loc_32F93
		add	dx, cs:[bp+421Ch]
		mov	bp, dx
		mov	al, cs:[bp+0]
		add	al, ch
		stosb
		mov	dh, bh
		mov	cl, ah
		rol	dx, cl
		mov	cl, 8
		sub	cl, ah
		mov	ah, 0
		mov	[bp+var_E], 1
		jmp	short loc_32F93
; ---------------------------------------------------------------------------

loc_32FD8:				; CODE XREF: sub_32D7C+21Aj
		mov	bh, [si]
		inc	si
		jz	short loc_32FE1

loc_32FDD:				; CODE XREF: sub_32D7C+26Fj
		mov	ah, 8
		jmp	short loc_32F98
; ---------------------------------------------------------------------------

loc_32FE1:				; CODE XREF: sub_32D7C+25Fj
		mov	si, ds
		add	si, 1000h
		mov	ds, si
		assume ds:nothing
		xor	si, si
		jmp	short loc_32FDD
sub_32D7C	endp

; ---------------------------------------------------------------------------
		align 2
		mov	dx, 3DAh

loc_32FF1:				; CODE XREF: seg012:45D4j
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		test	al, 8
		jnz	short loc_32FF1

loc_32FF6:				; CODE XREF: seg012:45D9j
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		test	al, 8
		jz	short loc_32FF6
		retf

; =============== S U B	R O U T	I N E =======================================


sub_32FFC	proc far		; CODE XREF: sub_3A25C+8P
					; sub_3A25C:loc_3A277P
		mov	dx, 3DAh
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		and	al, 8
		xor	ah, ah
		retf
sub_32FFC	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		mov	ax, ds:4E92h
		jmp	short loc_3301F
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33014	proc far		; CODE XREF: sub_14DA2+61CP
					; sub_14DA2+CCAP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		mov	ax, [bp+arg_6]

loc_3301F:				; CODE XREF: seg012:45F1j
		mov	si, [bp+arg_0]
		mov	bx, [bp+arg_2]
		mov	di, [bp+arg_4]
		mov	[di+4],	ax
		sub	ax, [bx+4]
		mov	[bp+var_4], ax
		mov	ax, [si+4]
		sub	ax, [bx+4]
		or	ax, ax
		jge	short loc_33040
		shr	[bp+var_4], 1
		shr	ax, 1

loc_33040:				; CODE XREF: sub_33014+25j
		mov	[bp+var_2], ax
		mov	ax, [si]
		sub	ax, [bx]
		imul	[bp+var_4]
		idiv	[bp+var_2]
		add	ax, [bx]
		mov	[di], ax
		mov	ax, [si+2]
		sub	ax, [bx+2]
		imul	[bp+var_4]
		idiv	[bp+var_2]
		add	ax, [bx+2]
		mov	[di+2],	ax
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_33014	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		mov	ds:4E92h, ax

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33072	proc far		; CODE XREF: sub_25FF6+1DCP

var_79A		= byte ptr -79Ah
var_3DA		= byte ptr -3DAh
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 79Ah
		push	si
		push	di
		mov	dx, [bp+arg_4]
		mov	ax, dx
		shr	ax, 1
		shr	ax, 1
		sub	dx, ax
		shr	ax, 1
		shr	ax, 1
		add	dx, ax
		or	dx, dx
		jg	short loc_33096
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33096:				; CODE XREF: sub_33072+1Cj
		mov	[bp+var_6], dx
		mov	bx, dx
		shr	dx, 1
		jnz	short loc_330B6
		push	[bp+arg_6]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_35B26
		add	sp, 6

loc_330B0:				; CODE XREF: sub_33072+61j
					; sub_33072+6Dj ...
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_330B6:				; CODE XREF: sub_33072+2Bj
		sub	bx, dx
		mov	ax, cs:word_3495A
		mov	[bp+var_4], ax
		mov	ax, cs:word_3495C
		dec	ax
		mov	[bp+var_2], ax
		mov	cx, [bp+arg_2]
		mov	ax, cx
		sub	ax, dx
		cmp	ax, cs:word_34952
		jge	short loc_330B0
		mov	[bp+var_14], ax
		add	cx, bx
		cmp	cx, cs:word_34950
		jle	short loc_330B0
		mov	dx, bx
		mov	ax, dx
		shr	ax, 1
		shr	ax, 1
		add	dx, ax
		mov	cx, [bp+arg_0]
		mov	ax, cx
		sub	ax, dx
		cmp	ax, [bp+var_2]
		jg	short loc_330B0
		add	cx, dx
		cmp	cx, [bp+var_4]
		jl	short loc_330B0
		cmp	bx, ds:3C56h
		jl	short loc_33148
		mov	ax, [bp+arg_0]
		mov	[bp+var_12], ax
		mov	[bp+var_E], ax
		mov	dx, [bp+arg_4]
		shr	dx, 1
		add	ax, dx
		mov	[bp+var_A], ax
		mov	ax, [bp+arg_2]
		mov	[bp+var_10], ax
		mov	[bp+var_8], ax
		mov	dx, [bp+var_6]
		shr	dx, 1
		add	ax, dx
		mov	[bp+var_C], ax
		mov	dx, [bp+arg_6]
		lea	ax, [bp+var_12]
		add	sp, 780h
		push	dx
		push	ax
		call	sub_36BBE
		add	sp, 4
		sub	sp, 780h
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33148:				; CODE XREF: sub_33072+90j
		shl	bx, 1
		mov	ax, [bx+3C58h]
		mov	[bp+var_16], ax
		mov	ax, [bp+var_6]
		mov	[bp+var_1A], ax
		dec	ax
		shl	ax, 1
		mov	[bp+var_18], ax
		lea	si, [bp+var_3DA]
		lea	di, [bp+var_79A]

loc_33165:				; CODE XREF: sub_33072+136j
					; sub_33072+146j
		mov	bx, [bp+var_16]
		mov	dl, [bx]
		inc	[bp+var_16]
		xor	dh, dh
		mov	bx, [bp+var_18]
		mov	ax, [bp+arg_0]
		sub	ax, dx
		cmp	ax, [bp+var_2]
		jg	short loc_331AD
		cmp	ax, [bp+var_4]
		jge	short loc_33184
		mov	ax, [bp+var_4]

loc_33184:				; CODE XREF: sub_33072+10Dj
		mov	[si], ax
		mov	[bx+si], ax
		mov	ax, [bp+arg_0]
		add	ax, dx
		cmp	ax, [bp+var_4]
		jl	short loc_331AD
		cmp	ax, [bp+var_2]
		jle	short loc_3319A
		mov	ax, [bp+var_2]

loc_3319A:				; CODE XREF: sub_33072+123j
		mov	[di], ax
		mov	[bx+di], ax
		add	si, 2
		add	di, 2
		sub	[bp+var_18], 4
		jge	short loc_33165
		jmp	short loc_331C0
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_331AD:				; CODE XREF: sub_33072+108j
					; sub_33072+11Ej
		inc	[bp+var_14]
		sub	[bp+var_1A], 2
		sub	[bp+var_18], 4
		jge	short loc_33165
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_331C0:				; CODE XREF: sub_33072+138j
		xor	dx, dx
		mov	ax, cs:word_34950
		sub	ax, [bp+var_14]
		jle	short loc_331D9
		sub	[bp+var_1A], ax
		shl	ax, 1
		mov	dx, ax
		mov	ax, cs:word_34950
		mov	[bp+var_14], ax

loc_331D9:				; CODE XREF: sub_33072+157j
		mov	ax, [bp+var_14]
		add	ax, [bp+var_1A]
		sub	ax, cs:word_34952
		jle	short loc_331E9
		sub	[bp+var_1A], ax

loc_331E9:				; CODE XREF: sub_33072+172j
		push	[bp+arg_6]
		push	[bp+var_1A]
		push	[bp+var_14]
		lea	ax, [bp+var_79A]
		add	ax, dx
		push	ax
		lea	ax, [bp+var_3DA]
		add	ax, dx
		push	ax
		call	sub_346BC
		add	sp, 0Ah
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_33072	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		push	si
		mov	ds, word ptr [bp+8]
		assume ds:dseg
		mov	si, [bp+6]
		mov	ax, [si+2]
		cmp	cs:word_34942, ax
		jnz	short loc_3325D
		mov	ax, [bp+0Ah]
		mov	[si+1Ah], ax
		mov	cs:word_3495A, ax
		mov	[si+0Ch], ax
		mov	cs:word_3494C, ax
		mov	ax, [bp+0Ch]
		mov	[si+1Ch], ax
		mov	cs:word_3495C, ax
		mov	[si+0Eh], ax
		mov	cs:word_3494E, ax
		mov	ax, [bp+0Eh]
		mov	[si+10h], ax
		mov	cs:word_34950, ax
		mov	ax, [bp+10h]
		mov	[si+12h], ax
		mov	cs:word_34952, ax
		pop	si
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3325D:				; CODE XREF: seg012:4801j
		mov	ax, [bp+0Ah]
		mov	[si+1Ah], ax
		mov	[si+0Ch], ax
		mov	ax, [bp+0Ch]
		mov	[si+1Ch], ax
		mov	[si+0Eh], ax
		mov	ax, [bp+0Eh]
		mov	[si+10h], ax
		mov	ax, [bp+10h]
		mov	[si+12h], ax
		pop	si
		pop	ds
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3327F	proc far		; CODE XREF: sub_10786+679P
					; sub_10786+6B5P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	cs:word_3495A, ax
		mov	cs:word_3494C, ax
		mov	ax, [bp+arg_2]
		mov	cs:word_3495C, ax
		mov	cs:word_3494E, ax
		mov	ax, [bp+arg_4]
		mov	cs:word_34950, ax
		mov	ax, [bp+arg_6]
		mov	cs:word_34952, ax
		pop	bp
		retf
sub_3327F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_332A8	proc far		; CODE XREF: sub_303D8+3P
					; sub_33816+29P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	di
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, [bp+arg_0]
		mov	di, 0
		mov	cx, 0FA00h
		rep stosw
		pop	di
		pop	bp
		retf
sub_332A8	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_332C0	proc far		; CODE XREF: sub_10786+684P
					; sub_10786+757P ...

arg_0		= byte ptr  6

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, cs:word_34942
		mov	es, ax
		mov	dx, cs:word_34952
		mov	bx, cs:word_34950
		sub	dx, bx
		jle	short loc_3330D
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, cs:word_3494C
		mov	bx, cs:word_3494E
		sub	bx, cs:word_3494C
		jle	short loc_3330D
		mov	si, cs:word_34954
		sub	si, bx
		mov	al, [bp+arg_0]
		mov	ah, al
		shr	bx, 1
		jb	short loc_33311

loc_33304:				; CODE XREF: sub_332C0+4Bj
		mov	cx, bx
		rep stosw
		add	di, si
		dec	dx
		jg	short loc_33304

loc_3330D:				; CODE XREF: sub_332C0+17j
					; sub_332C0+32j ...
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33311:				; CODE XREF: sub_332C0+42j
		jz	short loc_33324
		jl	short loc_3330D
		inc	si

loc_33316:				; CODE XREF: sub_332C0+60j
		mov	cx, bx
		rep stosw
		mov	es:[di], al
		add	di, si
		dec	dx
		jg	short loc_33316
		jmp	short loc_3330D
; ---------------------------------------------------------------------------

loc_33324:				; CODE XREF: sub_332C0:loc_33311j
		inc	si

loc_33325:				; CODE XREF: sub_332C0+6Bj
		mov	es:[di], al
		add	di, si
		dec	dx
		jg	short loc_33325
		jmp	short loc_3330D
sub_332C0	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+12h]
		mov	word_4031E, ax
		mov	ax, [bp+10h]
		mov	byte ptr word_40320, al
		jmp	short loc_33349
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	si
		push	di

loc_33349:				; CODE XREF: seg012:4921j
		cld
		mov	si, [bp+0Ah]
		test	si, 1
		jnz	short loc_3335B
		mov	ax, word_4031E
		xchg	ah, al
		mov	word_4031E, ax

loc_3335B:				; CODE XREF: seg012:4931j
		mov	si, [bp+0Ah]
		shl	si, 1
		add	si, cs:word_3494A
		mov	ax, cs:word_34942
		mov	es, ax
		mov	al, [bp+0Eh]

loc_3336E:				; CODE XREF: seg012:4992j
		mov	bx, [bp+8]
		mov	dx, [bx]
		mov	bx, [bp+6]
		mov	bx, [bx]
		mov	ah, byte ptr word_4031E
		mov	cl, bl
		and	cl, 7
		rol	ah, cl
		mov	cx, dx
		mov	dl, byte ptr word_40320
		sub	cx, bx
		inc	cx
		jle	short loc_3339A
		mov	di, cs:[si]
		add	di, bx

loc_33393:				; CODE XREF: seg012:4978j seg012:499Cj
		rol	ah, 1
		jb	short loc_333B8
		stosb
		loop	loc_33393

loc_3339A:				; CODE XREF: seg012:496Cj seg012:499Ej
		add	word ptr [bp+8], 2
		add	word ptr [bp+6], 2
		add	si, 2
		mov	dx, word_4031E
		xchg	dh, dl
		mov	word_4031E, dx
		dec	word ptr [bp+0Ch]
		jg	short loc_3336E
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_333B8:				; CODE XREF: seg012:4975j
		mov	es:[di], dl
		inc	di
		loop	loc_33393
		jmp	short loc_3339A

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_333C0	proc far		; CODE XREF: sub_2FDDE+32P

var_E		= byte ptr -0Eh
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	si
		push	di
		mov	si, [bp+arg_0]
		mov	ax, [si]
		mov	dx, [si+2]
		add	ax, 8000h
		adc	dx, 0
		mov	[bp+var_2], ax
		mov	[bp+var_4], dx
		mov	ax, [si+4]
		mov	dx, [si+6]
		add	ax, 8000h
		adc	dx, 0
		mov	[bp+var_6], ax
		mov	[bp+var_8], dx
		mov	al, [si+10h]
		mov	[bp+var_E], al
		mov	ax, [si+0Ch]
		mov	[bp+var_A], ax
		mov	ax, cs:word_34942
		mov	es, ax
		mov	bx, [si+12h]
		shl	bx, 1
		jmp	cs:off_3340A[bx]
; ---------------------------------------------------------------------------
off_3340A	dw offset loc_3341E	; DATA XREF: sub_333C0+45r
		dw offset loc_3341E
		dw offset loc_33458
		dw offset loc_3347C
		dw offset loc_334A1
		dw offset loc_334C6
		dw offset loc_334F3
		dw offset loc_33520
		dw offset loc_3354C
		dw offset loc_3343C
; ---------------------------------------------------------------------------

loc_3341E:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0:off_3340Ao ...
		mov	cx, [si+0Eh]
		mov	al, [bp+var_E]
		mov	di, [bp+var_8]
		shl	di, 1
		add	di, cs:word_3494A
		mov	di, cs:[di]
		add	di, [bp+var_4]
		rep stosb
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3343C:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+5Co
		mov	al, [bp+var_E]
		mov	di, [bp+var_8]
		shl	di, 1
		add	di, cs:word_3494A
		mov	di, cs:[di]
		add	di, [bp+var_4]
		mov	es:[di], al
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33458:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+4Eo
		mov	cx, [si+0Eh]
		mov	al, [bp+var_E]
		mov	bx, [bp+var_4]
		mov	si, [si+6]
		shl	si, 1
		add	si, cs:word_3494A

loc_3346B:				; CODE XREF: sub_333C0+B4j
		mov	di, cs:[si]
		mov	es:[bx+di], al
		add	si, 2
		loop	loc_3346B
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3347C:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+50o
		mov	cx, [si+0Eh]
		mov	al, [bp+var_E]
		mov	si, [si+6]
		shl	si, 1
		add	si, cs:word_3494A
		mov	bx, [bp+var_4]

loc_3348F:				; CODE XREF: sub_333C0+D9j
		mov	di, cs:[si]
		mov	es:[bx+di], al
		dec	bx
		add	si, 2
		loop	loc_3348F
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_334A1:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+52o
		mov	cx, [si+0Eh]
		mov	al, [bp+var_E]
		mov	si, [si+6]
		shl	si, 1
		add	si, cs:word_3494A
		mov	bx, [bp+var_4]

loc_334B4:				; CODE XREF: sub_333C0+FEj
		mov	di, cs:[si]
		mov	es:[bx+di], al
		inc	bx
		add	si, 2
		loop	loc_334B4
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_334C6:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+54o
		mov	cx, [si+0Eh]
		mov	dx, [bp+var_A]
		mov	al, [bp+var_E]
		mov	si, [si+6]
		shl	si, 1
		add	si, cs:word_3494A
		mov	bx, [bp+var_4]

loc_334DC:				; CODE XREF: sub_333C0+12Bj
		mov	di, cs:[si]
		mov	es:[bx+di], al
		add	si, 2
		sub	[bp+var_2], dx
		sbb	bx, 0
		loop	loc_334DC
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_334F3:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+56o
		mov	cx, [si+0Eh]
		mov	dx, [bp+var_A]
		mov	al, [bp+var_E]
		mov	si, [si+6]
		shl	si, 1
		add	si, cs:word_3494A
		mov	bx, [bp+var_4]

loc_33509:				; CODE XREF: sub_333C0+158j
		mov	di, cs:[si]
		mov	es:[bx+di], al
		add	si, 2
		add	[bp+var_2], dx
		adc	bx, 0
		loop	loc_33509
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33520:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+58o
		mov	cx, [si+0Eh]
		mov	dx, [bp+var_A]
		mov	al, [bp+var_E]
		mov	bx, [bp+var_4]

loc_3352C:				; CODE XREF: sub_333C0+184j
		mov	si, [bp+var_8]
		shl	si, 1
		add	si, cs:word_3494A
		mov	di, cs:[si]
		mov	es:[bx+di], al
		dec	bx
		add	[bp+var_6], dx
		adc	[bp+var_8], 0
		loop	loc_3352C
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3354C:				; CODE XREF: sub_333C0+45j
					; DATA XREF: sub_333C0+5Ao
		mov	cx, [si+0Eh]
		mov	dx, [bp+var_A]
		mov	al, [bp+var_E]
		mov	bx, [bp+var_4]

loc_33558:				; CODE XREF: sub_333C0+1B0j
		mov	si, [bp+var_8]
		shl	si, 1
		add	si, cs:word_3494A
		mov	di, cs:[si]
		mov	es:[bx+di], al
		inc	bx
		add	[bp+var_6], dx
		adc	[bp+var_8], 0
		loop	loc_33558
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_333C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33578	proc far		; CODE XREF: sub_10786+644P
					; sub_361BC+2FP ...

arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	dx, cs:word_3494C
		mov	ax, dx
		sub	ax, [bp+arg_2]
		jle	short loc_33591
		mov	[bp+arg_2], dx
		sub	[bp+arg_6], ax
		jle	short loc_335CF

loc_33591:				; CODE XREF: sub_33578+Fj
		mov	ax, [bp+arg_2]
		add	ax, [bp+arg_6]
		sub	ax, cs:word_3494E
		jle	short loc_335A3
		sub	[bp+arg_6], ax
		jle	short loc_335CF

loc_335A3:				; CODE XREF: sub_33578+24j
		mov	ax, cs:word_34950
		sub	ax, [bp+arg_4]
		jle	short loc_335B8
		sub	[bp+arg_8], ax
		jle	short loc_335CF
		mov	ax, cs:word_34950
		mov	[bp+arg_4], ax

loc_335B8:				; CODE XREF: sub_33578+32j
		mov	ax, [bp+arg_4]
		add	ax, [bp+arg_8]
		mov	bx, cs:word_34952
		sub	ax, bx
		jle	short loc_335D7
		sub	[bp+arg_8], ax
		jle	short loc_335CF
		jmp	short loc_335D7
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_335CF:				; CODE XREF: sub_33578+17j
					; sub_33578+29j ...
		jmp	short loc_33622
sub_33578	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_335D2	proc far		; CODE XREF: sub_23B4C+28EP
					; sub_23B4C+2A8P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= byte ptr  0Eh

		push	bp
		mov	bp, sp
		push	si
		push	di

loc_335D7:				; CODE XREF: sub_33578+4Dj
					; sub_33578+54j
		cld
		cmp	[bp+arg_4], 0
		jle	short loc_335CF
		cmp	[bp+arg_6], 0
		jle	short loc_335CF
		mov	es, cs:word_34942
		mov	al, [bp+arg_8]
		mov	ah, al
		mov	dx, [bp+arg_0]
		mov	si, [bp+arg_6]
		mov	bx, [bp+arg_2]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+arg_0]
		mov	dx, cs:word_34954
		sub	dx, [bp+arg_4]
		mov	cx, [bp+arg_4]
		sar	cx, 1
		mov	[bp+arg_4], cx
		jb	short loc_33626
		jle	short loc_33622

loc_33618:				; CODE XREF: sub_335D2+4Ej
		mov	cx, [bp+arg_4]
		rep stosw
		add	di, dx
		dec	si
		jg	short loc_33618

loc_33622:				; CODE XREF: sub_33578:loc_335CFj
					; sub_335D2+44j ...
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33626:				; CODE XREF: sub_335D2+42j
		jz	short loc_3363A
		jl	short loc_33622
		inc	dx

loc_3362B:				; CODE XREF: sub_335D2+64j
		mov	cx, [bp+arg_4]
		rep stosw
		mov	es:[di], al
		add	di, dx
		dec	si
		jg	short loc_3362B
		jmp	short loc_33622
; ---------------------------------------------------------------------------

loc_3363A:				; CODE XREF: sub_335D2:loc_33626j
		inc	dx

loc_3363B:				; CODE XREF: sub_335D2+6Fj
		mov	es:[di], al
		add	di, dx
		dec	si
		jg	short loc_3363B
		jmp	short loc_33622
sub_335D2	endp

; ---------------------------------------------------------------------------
		align 2
byte_33646	db 0Bh,	5, 8, 2, 0Ah, 4, 7, 1, 9, 3, 6,	0, 1, 3, 0, 2
		db 3, 1, 4, 2
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		assume es:nothing
		mov	si, [bp+6]
		mov	es, cs:word_34942
		assume es:nothing
		mov	ax, [bp+0Ch]
		mov	[bp-2],	ax
		mov	ax, [bp+0Eh]
		jmp	short loc_33697
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3367A	proc far		; CODE XREF: sub_29620+47P

var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	es, cs:word_34942
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]

loc_33697:				; CODE XREF: seg012:4C57j
		shl	ax, 1
		add	ax, cs:word_3494A
		mov	[bp+var_4], ax
		add	ax, [si+2]
		add	ax, [si+2]
		mov	[bp+var_6], ax
		mov	ax, [si]
		mov	[bp+var_8], ax
		mov	bx, 0Ch
		mul	bx
		mov	[bp+var_A], ax
		add	si, 10h
		mov	[bp+var_C], si
		mov	[bp+var_E], 0Bh

loc_336C2:				; CODE XREF: sub_3367A+BFj
		mov	di, [bp+var_E]
		mov	cl, cs:[di+4C26h]
		xor	ch, ch
		mov	ax, [bp+var_8]
		mul	cx
		mov	[bp+var_10], ax
		shl	cx, 1
		add	cx, [bp+var_4]
		mov	[bp+var_12], cx
		mov	si, [bp+var_C]
		add	si, [bp+var_10]
		mov	bx, [bp+arg_4]
		mov	[bp+var_16], bx

loc_336E8:				; CODE XREF: sub_3367A+B7j
		mov	di, [bp+var_12]
		cmp	di, [bp+var_6]
		jnb	short loc_33733
		mov	di, cs:[di]
		add	di, [bp+var_2]
		mov	cx, [bp+var_8]
		mov	[bp+var_14], si
		xor	ah, ah
		mov	bx, [bp+var_16]

loc_33701:				; CODE XREF: sub_3367A+A8j
		and	bx, 3
		mov	al, cs:[bx+4C32h]
		sub	cx, ax
		jle	short loc_33724
		add	si, ax
		add	di, ax
		mov	al, [si]
		mov	es:[di], al
		mov	al, cs:[bx+4C36h]
		add	si, ax
		add	di, ax
		sub	cx, ax
		inc	bx
		jmp	short loc_33701
; ---------------------------------------------------------------------------

loc_33724:				; CODE XREF: sub_3367A+91j
		inc	[bp+var_16]
		add	[bp+var_12], 18h
		mov	si, [bp+var_14]
		add	si, [bp+var_A]
		jmp	short loc_336E8
; ---------------------------------------------------------------------------

loc_33733:				; CODE XREF: sub_3367A+74j
		inc	[bp+arg_4]
		dec	[bp+var_E]
		jge	short loc_336C2
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_3367A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33742	proc far		; CODE XREF: sub_110D0+1C0P
					; sub_110D0+1D8P ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		push	si
		push	di
		mov	ds, word ptr off_405FE+2
		mov	ax, [bp+arg_2]
		mov	word_3B778, ax
		mov	ax, [bp+arg_4]
		mov	word_3B77A, ax
		jmp	short loc_3376B
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		push	si
		push	di
		mov	ds, word ptr off_405FE+2

loc_3376B:				; CODE XREF: sub_33742+19j
		cld
		mov	es, cs:word_34942

loc_33771:				; CODE XREF: sub_33742+53j
					; sub_33742+62j ...
		mov	si, [bp+arg_0]
		mov	bl, ss:[si]
		cmp	bl, 0
		jz	short loc_337A6
		mov	al, bl
		inc	[bp+arg_0]
		xor	bh, bh
		shl	bx, 1
		add	bx, 16h
		mov	si, [bx]
		cmp	si, 0
		jnz	short loc_337AD
		cmp	al, 0Dh
		jz	short loc_33797
		cmp	al, 0Ah
		jnz	short loc_33771

loc_33797:				; CODE XREF: sub_33742+4Fj
		mov	ax, word_3B774
		mov	word_3B778, ax
		mov	ax, word_3B782
		add	word_3B77A, ax
		jmp	short loc_33771
; ---------------------------------------------------------------------------

loc_337A6:				; CODE XREF: sub_33742+38j
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_337AD:				; CODE XREF: sub_33742+4Bj
		mov	ax, word_3B778
		mov	[bp+var_2], ax
		cmp	byte_3B784, 0
		jz	short loc_337CE
		mov	al, [si]
		xor	ah, ah
		inc	si
		mov	word_3B780, ax
		add	ax, 7
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	byte_3B77C, al

loc_337CE:				; CODE XREF: sub_33742+76j
		mov	al, byte_3B770
		mov	ah, byte ptr word_3B772
		mov	cx, word_3B77E
		mov	[bp+var_4], cx
		mov	bx, word_3B77A
		shl	bx, 1
		add	bx, cs:word_3494A

loc_337E7:				; CODE XREF: sub_33742+C8j
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dh, byte_3B77C

loc_337F1:				; CODE XREF: sub_33742+C1j
		mov	cx, 8
		mov	dl, [si]

loc_337F6:				; CODE XREF: sub_33742+BCj
		shl	dl, 1
		jnb	short loc_337FD
		mov	es:[di], al

loc_337FD:				; CODE XREF: sub_33742+B6j
		inc	di
		loop	loc_337F6
		inc	si
		dec	dh
		jg	short loc_337F1
		inc	bx
		inc	bx
		dec	[bp+var_4]
		jg	short loc_337E7
		mov	ax, word_3B780
		add	word_3B778, ax
		jmp	loc_33771
sub_33742	endp


; =============== S U B	R O U T	I N E =======================================


sub_33816	proc far		; CODE XREF: sub_39E56:loc_3A07AP
		call	sub_325AE
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		mov	ax, es:10h
		and	ax, 0FFCFh
		or	ax, 10h
		mov	es:10h,	ax
		mov	ah, 0Bh
		mov	bx, 0
		int	10h		; - VIDEO - SET	COLOR PALETTE
					; BH = 00h, BL = border	color
					; BH = 01h, BL = palette (0-3)
		mov	ah, 0
		mov	al, 13h
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		xor	ax, ax
		push	ax
		push	ax
		call	sub_332A8
		add	sp, 4
		retf
sub_33816	endp

; ---------------------------------------------------------------------------
		jmp	far ptr	loc_3ACD8

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_3384D	proc far		; CODE XREF: sub_299CA+55P
		jmp	sub_3ACEC
sub_3384D	endp

; ---------------------------------------------------------------------------
		jmp	sub_3ACFE
; ---------------------------------------------------------------------------
		jmp	sub_3AD9C

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_3385C	proc far		; CODE XREF: sub_11C42+239P
					; sub_1D7A2+44P ...
		jmp	sub_3A9D6
sub_3385C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_33861	proc far		; CODE XREF: sub_299CA+4BP
					; sub_39E14+6P
		jmp	sub_3A9EA
sub_33861	endp

; ---------------------------------------------------------------------------
		jmp	sub_3A9FC
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3386C	proc far		; CODE XREF: sub_22D2E+407P
					; sub_22D2E+941P

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		sub	ax, [si+4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		sub	ax, [si+6]
		mov	[bp+var_4], ax
		jmp	short loc_338C9
sub_3386C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33890	proc far		; CODE XREF: sub_28E04+52P
					; sub_2C0A8+114P ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_4], ax
		jmp	short loc_338C9
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_338C9:				; CODE XREF: sub_3386C+21j
					; sub_33890+1Bj
		mov	bx, [bp+var_4]
		mov	cx, [si+2]
		lea	dx, [si+10h]
		mov	ax, bx
		cmp	ax, cs:word_34950
		jl	short loc_338EF
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33916
		sub	cx, ax
		jg	short loc_33916

loc_338E8:				; CODE XREF: sub_33890+68j
					; sub_33890+84j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_338EF:				; CODE XREF: sub_33890+49j
		mov	bx, cs:word_34950
		add	ax, cx
		sub	ax, bx
		jle	short loc_338E8
		xchg	ax, cx
		sub	ax, cx
		mov	[bp+var_8], dx
		mul	word ptr [si]
		mov	dx, [bp+var_8]
		add	dx, ax
		mov	ax, bx
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33916
		sub	cx, ax
		jle	short loc_338E8

loc_33916:				; CODE XREF: sub_33890+52j
					; sub_33890+56j ...
		mov	[bp+var_C], dx
		mov	[bp+var_A], cx
		mov	[bp+var_4], bx
		mov	cx, [si]
		xor	dx, dx
		mov	bx, [bp+var_2]
		mov	ax, bx
		cmp	ax, cs:word_3494C
		jl	short loc_33941
		add	ax, cx
		sub	ax, cs:word_3494E
		jl	short loc_33968
		sub	cx, ax
		jle	short loc_338E8
		mov	dx, ax
		jmp	short loc_33968
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_33941:				; CODE XREF: sub_33890+9Dj
		mov	bx, cs:word_3494C
		add	ax, cx
		sub	ax, bx
		jle	short loc_338E8
		mov	si, cx
		sub	si, ax
		add	[bp+var_C], si
		mov	si, cs:word_3494E
		sub	si, bx
		jle	short loc_338E8
		cmp	ax, si
		jl	short loc_33962
		mov	ax, si

loc_33962:				; CODE XREF: sub_33890+CEj
		xchg	cx, dx
		sub	dx, ax
		add	cx, ax

loc_33968:				; CODE XREF: sub_33890+A6j
					; sub_33890+AEj
		or	cx, cx
		jle	short loc_339B1
		mov	[bp+var_6], cx
		mov	[bp+var_8], dx
		mov	[bp+var_2], bx
		cld
		mov	es, cs:word_34942
		assume es:nothing
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	si, [bp+var_C]
		mov	dx, [bp+var_A]
		mov	bx, cs:word_34954
		sub	bx, [bp+var_6]
		cmp	[bp+var_8], 0
		jz	short loc_339B4

loc_3399F:				; CODE XREF: sub_33890+11Fj
		mov	cx, [bp+var_6]

loc_339A2:				; CODE XREF: sub_33890+117j
		lodsb
		and	es:[di], al
		inc	di
		loop	loc_339A2
		add	si, [bp+var_8]
		add	di, bx
		dec	dx
		jg	short loc_3399F

loc_339B1:				; CODE XREF: sub_33890+DAj
		jmp	loc_338E8
; ---------------------------------------------------------------------------

loc_339B4:				; CODE XREF: sub_33890+10Dj
		mov	ax, [bp+var_6]
		shr	ax, 1
		mov	[bp+var_E], ax
		jnb	short loc_339D8
		jz	short loc_339EB
		inc	bx

loc_339C1:				; CODE XREF: sub_33890+143j
		mov	cx, [bp+var_E]

loc_339C4:				; CODE XREF: sub_33890+13Aj
		lodsw
		and	es:[di], ax
		inc	di
		inc	di
		loop	loc_339C4
		lodsb
		and	es:[di], al
		add	di, bx
		dec	dx
		jg	short loc_339C1
		jmp	loc_338E8
; ---------------------------------------------------------------------------

loc_339D8:				; CODE XREF: sub_33890+12Cj
					; sub_33890+156j
		mov	cx, [bp+var_E]

loc_339DB:				; CODE XREF: sub_33890+151j
		lodsw
		and	es:[di], ax
		inc	di
		inc	di
		loop	loc_339DB
		add	di, bx
		dec	dx
		jg	short loc_339D8
		jmp	loc_338E8
; ---------------------------------------------------------------------------

loc_339EB:				; CODE XREF: sub_33890+12Ej
		inc	bx

loc_339EC:				; CODE XREF: sub_33890+164j
		lodsb
		and	es:[di], al
		add	di, bx
		inc	bx
		dec	dx
		jg	short loc_339EC
		jmp	loc_338E8
sub_33890	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33A57
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33A1E	proc far		; CODE XREF: sub_2A2BC+80EP
					; sub_2BEB6+BDP ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_4], ax
		jmp	short loc_33A57
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33A57:				; CODE XREF: seg012:4FFBj
					; sub_33A1E+1Bj
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	es, cs:word_34942
		cld
		mov	dx, [si+2]
		mov	bx, cs:word_34954
		mov	ax, [si]
		sub	bx, ax
		add	si, 10h
		shr	ax, 1
		mov	[bp+var_6], ax
		jnb	short loc_33AA1
		jz	short loc_33AB3
		inc	bx

loc_33A86:				; CODE XREF: sub_33A1E+7Aj
		mov	cx, [bp+var_6]

loc_33A89:				; CODE XREF: sub_33A1E+71j
		lodsw
		and	es:[di], ax
		inc	di
		inc	di
		loop	loc_33A89
		lodsb
		and	es:[di], al
		add	di, bx
		dec	dx
		jg	short loc_33A86

loc_33A9A:				; CODE XREF: sub_33A1E+93j
					; sub_33A1E+9Fj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33AA1:				; CODE XREF: sub_33A1E+63j
					; sub_33A1E+91j
		mov	cx, [bp+var_6]

loc_33AA4:				; CODE XREF: sub_33A1E+8Cj
		lodsw
		and	es:[di], ax
		inc	di
		inc	di
		loop	loc_33AA4
		add	di, bx
		dec	dx
		jg	short loc_33AA1
		jmp	short loc_33A9A
; ---------------------------------------------------------------------------

loc_33AB3:				; CODE XREF: sub_33A1E+65j
		inc	bx

loc_33AB4:				; CODE XREF: sub_33A1E+9Dj
		lodsb
		and	es:[di], ax
		add	di, bx
		dec	dx
		jg	short loc_33AB4
		jmp	short loc_33A9A
sub_33A1E	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33B1D
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		mov	[bp-4],	ax
		jmp	short loc_33B1D
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33B02	proc far		; CODE XREF: sub_21B7A+549P
					; sub_22D2E+798P ...

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33B1D:				; CODE XREF: seg012:50C1j seg012:50DFj
		cld
		lea	ax, [si+10h]
		mov	[bp+var_E], ax
		mov	ax, [si]
		mov	[bp+var_6], ax
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	[bp+var_10], bx
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	ax, cs:word_34942
		mov	es, ax
		mov	si, [bp+var_E]
		mov	dx, [bp+var_6]

loc_33B48:				; CODE XREF: sub_33B02+72j
					; sub_33B02+94j
		lodsb
		or	al, al
		jg	short loc_33B56
		jl	short loc_33B76
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33B56:				; CODE XREF: sub_33B02+49j
		mov	cl, al
		xor	ch, ch
		lodsb

loc_33B5B:				; CODE XREF: sub_33B02:loc_33B72j
		and	es:[di], al
		inc	di
		dec	dx
		jg	short loc_33B72
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_33B72:				; CODE XREF: sub_33B02+5Ej
		loop	loc_33B5B
		jmp	short loc_33B48
; ---------------------------------------------------------------------------

loc_33B76:				; CODE XREF: sub_33B02+4Bj
		neg	al
		mov	cl, al
		xor	ch, ch

loc_33B7C:				; CODE XREF: sub_33B02:loc_33B94j
		lodsb
		and	es:[di], al
		inc	di
		dec	dx
		jg	short loc_33B94
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_33B94:				; CODE XREF: sub_33B02+80j
		loop	loc_33B7C
		jmp	short loc_33B48
sub_33B02	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33BF5
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33BBC	proc far		; CODE XREF: sub_10786+629P
					; sub_11C42+A87P ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		jmp	short loc_33BF5
sub_33BBC	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33BDA	proc far		; CODE XREF: sub_10786+6CDP
					; sub_11C42+8E0P ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33BF5:				; CODE XREF: seg012:5199j
					; sub_33BBC+1Bj
		mov	bx, [bp+var_4]
		mov	cx, [si+2]
		lea	dx, [si+10h]
		mov	ax, bx
		cmp	ax, cs:word_34950
		jl	short loc_33C1B
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33C42
		sub	cx, ax
		jg	short loc_33C42

loc_33C14:				; CODE XREF: sub_33BDA+4Aj
					; sub_33BDA+66j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33C1B:				; CODE XREF: sub_33BDA+2Bj
		mov	bx, cs:word_34950
		add	ax, cx
		sub	ax, bx
		jle	short loc_33C14
		xchg	ax, cx
		sub	ax, cx
		mov	[bp+var_8], dx
		mul	word ptr [si]
		mov	dx, [bp+var_8]
		add	dx, ax
		mov	ax, bx
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33C42
		sub	cx, ax
		jle	short loc_33C14

loc_33C42:				; CODE XREF: sub_33BDA+34j
					; sub_33BDA+38j ...
		mov	[bp+var_C], dx
		mov	[bp+var_A], cx
		mov	[bp+var_4], bx
		mov	cx, [si]
		xor	dx, dx
		mov	bx, [bp+var_2]
		mov	ax, bx
		cmp	ax, cs:word_3494C
		jl	short loc_33C6D
		add	ax, cx
		sub	ax, cs:word_3494E
		jl	short loc_33C94
		sub	cx, ax
		jle	short loc_33C14
		mov	dx, ax
		jmp	short loc_33C94
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_33C6D:				; CODE XREF: sub_33BDA+7Fj
		mov	bx, cs:word_3494C
		add	ax, cx
		sub	ax, bx
		jle	short loc_33C14
		mov	si, cx
		sub	si, ax
		add	[bp+var_C], si
		mov	si, cs:word_3494E
		sub	si, bx
		jle	short loc_33C14
		cmp	ax, si
		jl	short loc_33C8E
		mov	ax, si

loc_33C8E:				; CODE XREF: sub_33BDA+B0j
		xchg	cx, dx
		sub	dx, ax
		add	cx, ax

loc_33C94:				; CODE XREF: sub_33BDA+88j
					; sub_33BDA+90j
		or	cx, cx
		jle	short loc_33CD8
		mov	[bp+var_6], cx
		mov	[bp+var_8], dx
		mov	[bp+var_2], bx
		cld
		mov	es, cs:word_34942
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	si, [bp+var_C]
		mov	dx, [bp+var_A]
		mov	bx, cs:word_34954
		sub	bx, [bp+var_6]
		cmp	[bp+var_8], 0
		jz	short loc_33CDB

loc_33CCB:				; CODE XREF: sub_33BDA+FCj
		mov	cx, [bp+var_6]
		rep movsb
		add	si, [bp+var_8]
		add	di, bx
		dec	dx
		jg	short loc_33CCB

loc_33CD8:				; CODE XREF: sub_33BDA+BCj
		jmp	loc_33C14
; ---------------------------------------------------------------------------

loc_33CDB:				; CODE XREF: sub_33BDA+EFj
		mov	ax, [bp+var_6]
		shr	ax, 1
		mov	[bp+var_E], ax
		jnb	short loc_33CF5
		jz	short loc_33D02

loc_33CE7:				; CODE XREF: sub_33BDA+116j
		mov	cx, [bp+var_E]
		rep movsw
		movsb
		add	di, bx
		dec	dx
		jg	short loc_33CE7
		jmp	loc_33C14
; ---------------------------------------------------------------------------

loc_33CF5:				; CODE XREF: sub_33BDA+109j
					; sub_33BDA+123j
		mov	cx, [bp+var_E]
		rep movsw
		add	di, bx
		dec	dx
		jg	short loc_33CF5
		jmp	loc_33C14
; ---------------------------------------------------------------------------

loc_33D02:				; CODE XREF: sub_33BDA+10Bj
					; sub_33BDA+12Dj
		movsb
		add	di, bx
		inc	bx
		dec	dx
		jg	short loc_33D02
		jmp	loc_33C14
sub_33BDA	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33D69
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33D30	proc far		; CODE XREF: sub_275C6+3EP
					; sub_2A2BC+75BP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		jmp	short loc_33D69
sub_33D30	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33D4E	proc far		; CODE XREF: sub_1069C+5EP
					; sub_1069C+B3P ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33D69:				; CODE XREF: seg012:530Dj
					; sub_33D30+1Bj
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	es, cs:word_34942
		cld
		mov	dx, [si+2]
		mov	bx, cs:word_34954
		mov	ax, [si]
		sub	bx, ax
		add	si, 10h
		shr	ax, 1
		mov	[bp+var_6], ax
		jnb	short loc_33DA9
		jz	short loc_33DB5

loc_33D97:				; CODE XREF: sub_33D4E+52j
		mov	cx, [bp+var_6]
		rep movsw
		movsb
		add	di, bx
		dec	dx
		jg	short loc_33D97

loc_33DA2:				; CODE XREF: sub_33D4E+65j
					; sub_33D4E+6Dj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33DA9:				; CODE XREF: sub_33D4E+45j
					; sub_33D4E+63j
		mov	cx, [bp+var_6]
		rep movsw
		add	di, bx
		dec	dx
		jg	short loc_33DA9
		jmp	short loc_33DA2
; ---------------------------------------------------------------------------

loc_33DB5:				; CODE XREF: sub_33D4E+47j
					; sub_33D4E+6Bj
		movsb
		add	di, bx
		dec	dx
		jg	short loc_33DB5
		jmp	short loc_33DA2
sub_33D4E	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33E1B
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33DE2	proc far		; CODE XREF: sub_13178+977P
					; sub_13178+CBBP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		jmp	short loc_33E1B
sub_33DE2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33E00	proc far		; CODE XREF: sub_22D2E+27BP
					; sub_23B4C+A8P ...

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33E1B:				; CODE XREF: seg012:53BFj
					; sub_33DE2+1Bj
		cld
		lea	ax, [si+10h]
		mov	[bp+var_E], ax
		mov	ax, [si]
		mov	[bp+var_6], ax

loc_33E27:				; CODE XREF: sub_33ED2+D2J
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	[bp+var_10], bx
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	ax, cs:word_34942
		mov	es, ax
		mov	si, [bp+var_E]
		mov	dx, [bp+var_6]

loc_33E46:				; CODE XREF: sub_33E00+6Fj
					; sub_33E00+8Dj
		lodsb
		or	al, al
		jg	short loc_33E54
		jl	short loc_33E71
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33E54:				; CODE XREF: sub_33E00+49j
		mov	cl, al
		xor	ch, ch
		lodsb

loc_33E59:				; CODE XREF: sub_33E00:loc_33E6Dj
		stosb
		dec	dx
		jg	short loc_33E6D
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_33E6D:				; CODE XREF: sub_33E00+5Bj
		loop	loc_33E59
		jmp	short loc_33E46
; ---------------------------------------------------------------------------

loc_33E71:				; CODE XREF: sub_33E00+4Bj
		neg	al
		mov	cl, al
		xor	ch, ch

loc_33E77:				; CODE XREF: sub_33E00:loc_33E8Bj
		movsb
		dec	dx
		jg	short loc_33E8B
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_33E8B:				; CODE XREF: sub_33E00+79j
		loop	loc_33E77
		jmp	short loc_33E46
sub_33E00	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_33EED
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33EB4	proc far		; CODE XREF: sub_22D2E+194P
					; sub_22D2E+3D7P

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		jmp	short loc_33EED
sub_33EB4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_33ED2	proc far		; CODE XREF: sub_22D2E+299P
					; sub_22D2E+2A9P ...

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_33EED:				; CODE XREF: seg012:5491j
					; sub_33EB4+1Bj
		cld
		lea	ax, [si+10h]
		mov	[bp+var_E], ax
		mov	ax, [si]
		mov	[bp+var_6], ax
		xor	di, di
		xor	dx, dx
		mov	bx, [bp+var_4]
		mov	cx, [si+2]
		mov	ax, bx
		cmp	ax, cs:word_34950
		jl	short loc_33F21
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33F44
		inc	di
		sub	cx, ax
		jg	short loc_33F44

loc_33F1A:				; CODE XREF: sub_33ED2+59j
					; sub_33ED2+70j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33F21:				; CODE XREF: sub_33ED2+38j
		inc	di
		mov	bx, cs:word_34950
		add	ax, cx
		sub	ax, bx
		jle	short loc_33F1A
		xchg	ax, cx
		sub	ax, cx
		mul	[bp+var_6]
		mov	dx, ax
		mov	ax, bx
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_33F44
		sub	cx, ax
		jle	short loc_33F1A

loc_33F44:				; CODE XREF: sub_33ED2+41j
					; sub_33ED2+46j ...
		mov	[bp+var_8], cx
		mov	[bp+var_4], bx
		mov	[bp+var_A], dx
		xor	dx, dx
		mov	bx, [bp+var_2]
		mov	ax, bx
		mov	cx, [bp+var_6]
		cmp	ax, cs:word_3494C
		jl	short loc_33F71
		add	ax, cx
		sub	ax, cs:word_3494E
		jle	short loc_33F97
		sub	cx, ax
		jle	short loc_33F1A
		inc	di
		mov	dx, ax
		jmp	short loc_33F97
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_33F71:				; CODE XREF: sub_33ED2+8Aj
		inc	di
		mov	bx, cs:word_3494C
		add	ax, cx
		sub	ax, bx
		jle	short loc_33F1A
		mov	si, cx
		sub	si, ax
		add	[bp+var_A], si
		mov	si, cs:word_3494E
		sub	si, bx
		cmp	ax, si
		jl	short loc_33F91
		mov	ax, si

loc_33F91:				; CODE XREF: sub_33ED2+BBj
		xchg	cx, dx
		sub	dx, ax
		add	cx, ax

loc_33F97:				; CODE XREF: sub_33ED2+93j
					; sub_33ED2+9Cj
		mov	[bp+var_6], cx
		mov	[bp+var_C], dx
		mov	[bp+var_2], bx
		or	di, di
		jnz	short loc_33FA9
		jmp	loc_33E27
; ---------------------------------------------------------------------------

loc_33FA9:				; CODE XREF: sub_33ED2+D0j
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	[bp+var_10], bx
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	ax, cs:word_34942
		mov	es, ax
		mov	si, [bp+var_E]
		mov	dx, [bp+var_A]
		or	dx, dx
		jnz	short loc_34042

loc_33FCC:				; CODE XREF: sub_33ED2+130j
					; sub_33ED2+161j
		mov	dx, [bp+var_6]

loc_33FCF:				; CODE XREF: sub_33ED2+116j
					; sub_33ED2+145j
		lodsb
		or	al, al
		jg	short loc_33FDD
		jl	short loc_3400B

loc_33FD6:				; CODE XREF: sub_33ED2+11Bj
					; sub_33ED2+14Aj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_33FDD:				; CODE XREF: sub_33ED2+100j
		mov	cl, al
		xor	ch, ch
		lodsb

loc_33FE2:				; CODE XREF: sub_33ED2+114j
					; sub_33ED2+137j
		stosb
		dec	dx
		jle	short loc_33FEA
		loop	loc_33FE2
		jmp	short loc_33FCF
; ---------------------------------------------------------------------------

loc_33FEA:				; CODE XREF: sub_33ED2+112j
		dec	[bp+var_8]
		jz	short loc_33FD6
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		dec	cx
		mov	dx, [bp+var_C]

loc_34000:				; CODE XREF: sub_33ED2+183j
		sub	cx, dx
		jz	short loc_33FCC
		jl	short loc_3403E
		mov	dx, [bp+var_6]
		jmp	short loc_33FE2
; ---------------------------------------------------------------------------

loc_3400B:				; CODE XREF: sub_33ED2+102j
		neg	al
		mov	cl, al
		xor	ch, ch

loc_34011:				; CODE XREF: sub_33ED2+143j
					; sub_33ED2+168j
		movsb
		dec	dx
		jle	short loc_34019
		loop	loc_34011
		jmp	short loc_33FCF
; ---------------------------------------------------------------------------

loc_34019:				; CODE XREF: sub_33ED2+141j
		dec	[bp+var_8]
		jz	short loc_33FD6
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		dec	cx
		mov	dx, [bp+var_C]

loc_3402F:				; CODE XREF: sub_33ED2+18Bj
		add	si, dx
		sub	cx, dx
		jz	short loc_33FCC
		jl	short loc_3403C
		mov	dx, [bp+var_6]
		jmp	short loc_34011
; ---------------------------------------------------------------------------

loc_3403C:				; CODE XREF: sub_33ED2+163j
		add	si, cx

loc_3403E:				; CODE XREF: sub_33ED2+132j
		neg	cx
		mov	dx, cx

loc_34042:				; CODE XREF: sub_33ED2+F8j
		lodsb
		or	al, al
		jg	short loc_34050
		jl	short loc_34057
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34050:				; CODE XREF: sub_33ED2+173j
		mov	cl, al
		xor	ch, ch
		lodsb
		jmp	short loc_34000
; ---------------------------------------------------------------------------

loc_34057:				; CODE XREF: sub_33ED2+175j
		neg	al
		mov	cl, al
		xor	ch, ch
		jmp	short loc_3402F
sub_33ED2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34060	proc far		; CODE XREF: sub_22D2E+419P
					; sub_22D2E+95BP

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		sub	ax, [si+4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		sub	ax, [si+6]
		mov	[bp+var_4], ax
		jmp	short loc_340BD
sub_34060	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34084	proc far		; CODE XREF: sub_22D2E+6B0P
					; sub_22D2E+6EAP ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_4], ax
		jmp	short loc_340BD
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_340BD:				; CODE XREF: sub_34060+21j
					; sub_34084+1Bj
		mov	bx, [bp+var_4]
		mov	cx, [si+2]
		lea	dx, [si+10h]
		mov	ax, bx
		cmp	ax, cs:word_34950
		jl	short loc_340E3
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_3410A
		sub	cx, ax
		jg	short loc_3410A

loc_340DC:				; CODE XREF: sub_34084+68j
					; sub_34084+84j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_340E3:				; CODE XREF: sub_34084+49j
		mov	bx, cs:word_34950
		add	ax, cx
		sub	ax, bx
		jle	short loc_340DC
		xchg	ax, cx
		sub	ax, cx
		mov	[bp+var_8], dx
		mul	word ptr [si]
		mov	dx, [bp+var_8]
		add	dx, ax
		mov	ax, bx
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_3410A
		sub	cx, ax
		jle	short loc_340DC

loc_3410A:				; CODE XREF: sub_34084+52j
					; sub_34084+56j ...
		mov	[bp+var_C], dx
		mov	[bp+var_A], cx
		mov	[bp+var_4], bx
		mov	cx, [si]
		xor	dx, dx
		mov	bx, [bp+var_2]
		mov	ax, bx
		cmp	ax, cs:word_3494C
		jl	short loc_34135
		add	ax, cx
		sub	ax, cs:word_3494E
		jl	short loc_3415C
		sub	cx, ax
		jle	short loc_340DC
		mov	dx, ax
		jmp	short loc_3415C
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_34135:				; CODE XREF: sub_34084+9Dj
		mov	bx, cs:word_3494C
		add	ax, cx
		sub	ax, bx
		jle	short loc_340DC
		mov	si, cx
		sub	si, ax
		add	[bp+var_C], si
		mov	si, cs:word_3494E
		sub	si, bx
		jle	short loc_340DC
		cmp	ax, si
		jl	short loc_34156
		mov	ax, si

loc_34156:				; CODE XREF: sub_34084+CEj
		xchg	cx, dx
		sub	dx, ax
		add	cx, ax

loc_3415C:				; CODE XREF: sub_34084+A6j
					; sub_34084+AEj
		or	cx, cx
		jle	short loc_341A5
		mov	[bp+var_6], cx
		mov	[bp+var_8], dx
		mov	[bp+var_2], bx
		cld
		mov	es, cs:word_34942
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	si, [bp+var_C]
		mov	dx, [bp+var_A]
		mov	bx, cs:word_34954
		sub	bx, [bp+var_6]
		cmp	[bp+var_8], 0
		jz	short loc_341A8

loc_34193:				; CODE XREF: sub_34084+11Fj
		mov	cx, [bp+var_6]

loc_34196:				; CODE XREF: sub_34084+117j
		lodsb
		or	es:[di], al
		inc	di
		loop	loc_34196
		add	si, [bp+var_8]
		add	di, bx
		dec	dx
		jg	short loc_34193

loc_341A5:				; CODE XREF: sub_34084+DAj
		jmp	loc_340DC
; ---------------------------------------------------------------------------

loc_341A8:				; CODE XREF: sub_34084+10Dj
		mov	ax, [bp+var_6]
		shr	ax, 1
		mov	[bp+var_E], ax
		jnb	short loc_341CC
		jz	short loc_341DF
		inc	bx

loc_341B5:				; CODE XREF: sub_34084+143j
		mov	cx, [bp+var_E]

loc_341B8:				; CODE XREF: sub_34084+13Aj
		lodsw
		or	es:[di], ax
		inc	di
		inc	di
		loop	loc_341B8
		lodsb
		or	es:[di], al
		add	di, bx
		dec	dx
		jg	short loc_341B5
		jmp	loc_340DC
; ---------------------------------------------------------------------------

loc_341CC:				; CODE XREF: sub_34084+12Cj
					; sub_34084+156j
		mov	cx, [bp+var_E]

loc_341CF:				; CODE XREF: sub_34084+151j
		lodsw
		or	es:[di], ax
		inc	di
		inc	di
		loop	loc_341CF
		add	di, bx
		dec	dx
		jg	short loc_341CC
		jmp	loc_340DC
; ---------------------------------------------------------------------------

loc_341DF:				; CODE XREF: sub_34084+12Ej
		inc	bx

loc_341E0:				; CODE XREF: sub_34084+164j
		lodsb
		or	es:[di], al
		add	di, bx
		inc	bx
		dec	dx
		jg	short loc_341E0
		jmp	loc_340DC
sub_34084	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_3424B
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34212	proc far		; CODE XREF: sub_2A2BC+82CP
					; sub_2BEB6+EEP ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_4], ax
		jmp	short loc_3424B
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_3424B:				; CODE XREF: seg012:57EFj
					; sub_34212+1Bj
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	es, cs:word_34942
		cld
		mov	dx, [si+2]
		mov	bx, cs:word_34954
		mov	ax, [si]
		sub	bx, ax
		add	si, 10h
		shr	ax, 1
		mov	[bp+var_6], ax
		jnb	short loc_34295
		jz	short loc_342A7
		inc	bx

loc_3427A:				; CODE XREF: sub_34212+7Aj
		mov	cx, [bp+var_6]

loc_3427D:				; CODE XREF: sub_34212+71j
		lodsw
		or	es:[di], ax
		inc	di
		inc	di
		loop	loc_3427D
		lodsb
		or	es:[di], al
		add	di, bx
		dec	dx
		jg	short loc_3427A

loc_3428E:				; CODE XREF: sub_34212+93j
					; sub_34212+9Fj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34295:				; CODE XREF: sub_34212+63j
					; sub_34212+91j
		mov	cx, [bp+var_6]

loc_34298:				; CODE XREF: sub_34212+8Cj
		lodsw
		or	es:[di], ax
		inc	di
		inc	di
		loop	loc_34298
		add	di, bx
		dec	dx
		jg	short loc_34295
		jmp	short loc_3428E
; ---------------------------------------------------------------------------

loc_342A7:				; CODE XREF: sub_34212+65j
		inc	bx

loc_342A8:				; CODE XREF: sub_34212+9Dj
		lodsb
		or	es:[di], ax
		add	di, bx
		dec	dx
		jg	short loc_342A8
		jmp	short loc_3428E
sub_34212	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_34311
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		mov	[bp-4],	ax
		jmp	short loc_34311
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_342F6	proc far		; CODE XREF: sub_21B7A+559P
					; sub_22D2E:loc_234D6P

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_34311:				; CODE XREF: seg012:58B5j seg012:58D3j
		cld
		lea	ax, [si+10h]
		mov	[bp+var_E], ax
		mov	ax, [si]
		mov	[bp+var_6], ax
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	[bp+var_10], bx
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	ax, cs:word_34942
		mov	es, ax
		mov	si, [bp+var_E]
		mov	dx, [bp+var_6]

loc_3433C:				; CODE XREF: sub_342F6+72j
					; sub_342F6+94j
		lodsb
		or	al, al
		jg	short loc_3434A
		jl	short loc_3436A
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3434A:				; CODE XREF: sub_342F6+49j
		mov	cl, al
		xor	ch, ch
		lodsb

loc_3434F:				; CODE XREF: sub_342F6:loc_34366j
		or	es:[di], al
		inc	di
		dec	dx
		jg	short loc_34366
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_34366:				; CODE XREF: sub_342F6+5Ej
		loop	loc_3434F
		jmp	short loc_3433C
; ---------------------------------------------------------------------------

loc_3436A:				; CODE XREF: sub_342F6+4Bj
		neg	al
		mov	cl, al
		xor	ch, ch

loc_34370:				; CODE XREF: sub_342F6:loc_34388j
		lodsb
		or	es:[di], al
		inc	di
		dec	dx
		jg	short loc_34388
		add	[bp+var_10], 2
		mov	bx, [bp+var_10]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_6]

loc_34388:				; CODE XREF: sub_342F6+80j
		loop	loc_34370
		jmp	short loc_3433C
sub_342F6	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_343E9
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_343B0	proc far		; CODE XREF: sub_11C42+2E7P
					; sub_11C42+A6FP ...

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [bp+arg_4]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		mov	[bp+var_4], ax
		jmp	short loc_343E9
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_343E9:				; CODE XREF: seg012:598Dj
					; sub_343B0+1Bj
		mov	bx, [bp+var_4]
		mov	cx, [si+2]
		lea	dx, [si+10h]
		mov	ax, bx
		cmp	ax, cs:word_34950
		jl	short loc_3440F
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_34436
		sub	cx, ax
		jg	short loc_34436

loc_34408:				; CODE XREF: sub_343B0+68j
					; sub_343B0+84j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3440F:				; CODE XREF: sub_343B0+49j
		mov	bx, cs:word_34950
		add	ax, cx
		sub	ax, bx
		jle	short loc_34408
		xchg	ax, cx
		sub	ax, cx
		mov	[bp+var_C], dx
		mul	word ptr [si]
		mov	dx, [bp+var_C]
		add	dx, ax
		mov	ax, bx
		add	ax, cx
		sub	ax, cs:word_34952
		jle	short loc_34436
		sub	cx, ax
		jle	short loc_34408

loc_34436:				; CODE XREF: sub_343B0+52j
					; sub_343B0+56j ...
		mov	[bp+var_C], dx
		mov	[bp+var_A], cx
		mov	[bp+var_4], bx
		mov	cx, [si]
		xor	dx, dx
		mov	ax, [bp+var_2]
		mov	bx, ax
		cmp	ax, cs:word_3494C
		jl	short loc_34461
		add	ax, cx
		sub	ax, cs:word_3494E
		jl	short loc_34488
		sub	cx, ax
		jle	short loc_34408
		mov	dx, ax
		jmp	short loc_34488
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_34461:				; CODE XREF: sub_343B0+9Dj
		mov	bx, cs:word_3494C
		add	ax, cx
		sub	ax, bx
		jle	short loc_34408
		mov	si, cx
		sub	si, ax
		add	[bp+var_C], si
		mov	si, cs:word_3494E
		sub	si, bx
		jle	short loc_34408
		cmp	ax, si
		jl	short loc_34482
		mov	ax, si

loc_34482:				; CODE XREF: sub_343B0+CEj
		xchg	cx, dx
		sub	dx, ax
		add	cx, ax

loc_34488:				; CODE XREF: sub_343B0+A6j
					; sub_343B0+AEj
		or	cx, cx
		jle	short loc_344DC
		mov	[bp+var_6], cx
		mov	[bp+var_8], dx
		mov	[bp+var_2], bx
		cld
		mov	es, cs:word_34942
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	si, [bp+var_C]
		mov	dx, cs:word_34954
		sub	dx, [bp+var_6]
		xor	bh, bh
		mov	ah, 0FFh

loc_344BA:				; CODE XREF: sub_343B0+12Aj
		mov	cx, [bp+var_6]

loc_344BD:				; CODE XREF: sub_343B0+11Aj
					; sub_343B0+120j
		lodsb
		mov	bl, al
		mov	al, cs:[bx+72A8h]
		cmp	al, ah
		jz	short loc_344CF
		stosb
		loop	loc_344BD
		jmp	short loc_344D2
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_344CF:				; CODE XREF: sub_343B0+117j
		inc	di
		loop	loc_344BD

loc_344D2:				; CODE XREF: sub_343B0+11Cj
		add	si, [bp+var_8]
		add	di, dx
		dec	[bp+var_A]
		jg	short loc_344BA

loc_344DC:				; CODE XREF: sub_343B0+DAj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_343B0	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [si+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [si+6]
		mov	[bp-4],	ax
		jmp	short loc_34541
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, [bp+0Ah]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		mov	[bp-4],	ax
		jmp	short loc_34541
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34526	proc far		; CODE XREF: sub_1293C+146P
					; sub_1293C+2ADP ...

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_34541:				; CODE XREF: seg012:5AE5j seg012:5B03j
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, cs:word_34954
		mov	ax, [si]
		mov	[bp+var_6], ax
		sub	dx, ax
		mov	ax, [si+2]
		mov	[bp+var_8], ax
		mov	es, cs:word_34942
		cld
		add	si, 10h
		xor	bx, bx

loc_3456E:				; CODE XREF: sub_34526+65j
		mov	cx, [bp+var_6]

loc_34571:				; CODE XREF: sub_34526+58j
					; sub_34526+5Ej
		lodsb
		mov	bl, al
		mov	al, cs:[bx+72A8h]
		cmp	al, 0FFh
		jz	short loc_34583
		stosb
		loop	loc_34571
		jmp	short loc_34586
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_34583:				; CODE XREF: sub_34526+55j
		inc	di
		loop	loc_34571

loc_34586:				; CODE XREF: sub_34526+5Aj
		add	di, dx
		dec	[bp+var_8]
		jg	short loc_3456E
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_34526	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		push	si
		push	di
		mov	ax, [bp+6]
		mov	byte_40B86, al
		mov	ax, 5416h
		mov	[bp+6],	ax
		mov	ds, word ptr off_405FE+2
		mov	ax, [bp+8]
		mov	word_3B778, ax
		mov	ax, [bp+0Ah]
		mov	word_3B77A, ax
		jmp	short loc_345E5
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_345BC	proc far		; CODE XREF: sub_21B7A+818P
					; sub_23B4C+10DP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		push	si
		push	di
		mov	ds, word ptr off_405FE+2
		mov	ax, [bp+arg_2]
		mov	word_3B778, ax
		mov	ax, [bp+arg_4]
		mov	word_3B77A, ax
		jmp	short loc_345E5
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		push	si
		push	di
		mov	ds, word ptr off_405FE+2

loc_345E5:				; CODE XREF: seg012:5B99j
					; sub_345BC+19j
		cld
		mov	es, cs:word_34942

loc_345EB:				; CODE XREF: sub_345BC+52j
					; sub_345BC+61j ...
		mov	si, [bp+arg_0]
		mov	bl, ss:[si]
		or	bl, bl
		jz	short loc_3461F
		mov	al, bl
		inc	[bp+arg_0]
		xor	bh, bh
		shl	bx, 1
		add	bx, 16h
		mov	si, [bx]
		cmp	si, 0
		jnz	short loc_34626
		cmp	al, 0Dh
		jz	short loc_34610
		cmp	al, 0Ah
		jnz	short loc_345EB

loc_34610:				; CODE XREF: sub_345BC+4Ej
		mov	ax, word_3B774
		mov	word_3B778, ax
		mov	ax, word_3B782
		add	word_3B77A, ax
		jmp	short loc_345EB
; ---------------------------------------------------------------------------

loc_3461F:				; CODE XREF: sub_345BC+37j
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34626:				; CODE XREF: sub_345BC+4Aj
		mov	ax, word_3B778
		mov	[bp+var_2], ax
		cmp	byte_3B784, 0
		jz	short loc_34647
		mov	al, [si]
		xor	ah, ah
		inc	si
		mov	word_3B780, ax
		add	ax, 7
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	byte_3B77C, al

loc_34647:				; CODE XREF: sub_345BC+75j
		mov	al, byte_3B770
		mov	ah, byte ptr word_3B772
		mov	cx, word_3B77E
		mov	[bp+var_4], cx
		mov	bx, word_3B77A
		shl	bx, 1
		add	bx, cs:word_3494A

loc_34660:				; CODE XREF: sub_345BC+C4j
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dh, byte_3B77C

loc_3466A:				; CODE XREF: sub_345BC+BDj
					; sub_345BC+D9j
		mov	cx, 8
		mov	dl, [si]

loc_3466F:				; CODE XREF: sub_345BC+B8j
					; sub_345BC+D4j
		shl	dl, 1
		jnb	short loc_3468C
		stosb
		loop	loc_3466F
		inc	si
		dec	dh
		jg	short loc_3466A

loc_3467B:				; CODE XREF: sub_345BC+DBj
		inc	bx
		inc	bx
		dec	[bp+var_4]
		jg	short loc_34660
		mov	ax, word_3B780
		add	word_3B778, ax
		jmp	loc_345EB
; ---------------------------------------------------------------------------

loc_3468C:				; CODE XREF: sub_345BC+B5j
		mov	es:[di], ah
		inc	di
		loop	loc_3466F
		inc	si
		dec	dh
		jg	short loc_3466A
		jmp	short loc_3467B
sub_345BC	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	ax, [bp+0Ch]
		jmp	short loc_346A8
; ---------------------------------------------------------------------------
		db 90h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_346A3	proc far		; CODE XREF: sub_3A2C0+69P

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	ax, ds

loc_346A8:				; CODE XREF: seg012:5C80j
		mov	es, ax
		assume es:dseg
		mov	bx, [bp+arg_0]
		mov	dx, [bp+arg_4]
		mov	cx, [bp+arg_2]
		mov	ah, 10h
		mov	al, 12h
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		pop	bp
		retf
sub_346A3	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_346BC	proc far		; CODE XREF: sub_33072+18EP

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		push	di
		cmp	[bp+arg_6], 0
		jz	short loc_3470C
		cld
		mov	si, [bp+arg_4]
		shl	si, 1
		add	si, cs:word_3494A
		mov	ax, cs:word_34942
		mov	es, ax
		assume es:nothing
		mov	ax, [bp+arg_8]
		mov	ah, al

loc_346E0:				; CODE XREF: sub_346BC+4Ej
		mov	bx, [bp+arg_2]
		mov	cx, [bx]
		mov	bx, [bp+arg_0]
		mov	bx, [bx]
		sub	cx, bx
		inc	cx
		jle	short loc_346FC
		mov	di, cs:[si]
		add	di, bx
		test	cx, 0FFF8h
		jnz	short loc_34712
		rep stosb

loc_346FC:				; CODE XREF: sub_346BC+31j
					; sub_346BC+62j ...
		add	[bp+arg_2], 2
		add	[bp+arg_0], 2
		add	si, 2
		dec	[bp+arg_6]
		jg	short loc_346E0

loc_3470C:				; CODE XREF: sub_346BC+Cj
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34712:				; CODE XREF: sub_346BC+3Cj
		test	di, 1
		jnz	short loc_34725
		shr	cx, 1
		jb	short loc_34720
		rep stosw
		jmp	short loc_346FC
; ---------------------------------------------------------------------------

loc_34720:				; CODE XREF: sub_346BC+5Ej
		rep stosw
		stosb
		jmp	short loc_346FC
; ---------------------------------------------------------------------------

loc_34725:				; CODE XREF: sub_346BC+5Aj
		shr	cx, 1
		jb	short loc_34730
		dec	cx
		stosb
		rep stosw
		stosb
		jmp	short loc_346FC
; ---------------------------------------------------------------------------

loc_34730:				; CODE XREF: sub_346BC+6Bj
		stosb
		rep stosw
		jmp	short loc_346FC
sub_346BC	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+8]
		mov	di, [bp+6]
		mov	ax, [bp+0Ah]
		sub	ax, [di+4]
		mov	[bp-2],	ax
		mov	ax, [bp+0Ch]
		sub	ax, [di+6]
		mov	[bp-4],	ax
		jmp	short loc_34799
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3475A	proc far		; CODE XREF: sub_11C42+2FDP
					; sub_1293C+2FDP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	di, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	[di+8],	ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		mov	[di+0Ah], ax
		jmp	short loc_34799
sub_3475A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3477E	proc far		; CODE XREF: sub_10786+731P

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_2]
		mov	di, [bp+arg_0]
		mov	ax, [di+8]
		mov	[bp+var_2], ax
		mov	ax, [di+0Ah]
		mov	[bp+var_4], ax

loc_34799:				; CODE XREF: seg012:5D37j
					; sub_3475A+21j
		mov	ax, [di]
		mov	[bp+var_8], ax
		mov	ax, [di+2]
		mov	[bp+var_A], ax
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	[bp+var_6], bx
		mov	ds, cs:word_34942
		assume ds:nothing
		mov	es, [bp+arg_2]
		assume es:nothing
		add	di, 10h
		cld
		mov	dx, [bp+var_A]

loc_347C0:				; CODE XREF: sub_3477E+55j
		mov	bx, [bp+var_6]
		mov	si, cs:[bx]
		add	si, [bp+var_2]
		mov	cx, [bp+var_8]
		rep movsb
		add	[bp+var_6], 2
		dec	dx
		jg	short loc_347C0
		pop	di
		pop	si
		pop	ds
		assume ds:dseg
		mov	sp, bp
		pop	bp
		retf
sub_3477E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_347DC	proc far		; CODE XREF: sub_1A0F4+1FC5P

var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

; FUNCTION CHUNK AT 74B9 SIZE 0000006E BYTES

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	cx, [bp+arg_6]
		mov	ax, [si+4]
		imul	[bp+arg_0]
		sub	cl, ah
		sbb	ch, dl
		mov	[bp+var_2], cx
		mov	cx, [bp+arg_8]
		mov	ax, [si+6]
		imul	[bp+arg_0]
		sub	cl, ah
		sbb	ch, dl
		mov	[bp+var_4], cx
		jmp	short loc_3484E
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [bp+arg_6]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_4], ax
		jmp	short loc_3484E
; ---------------------------------------------------------------------------
		align 2

loc_3482C:				; CODE XREF: sub_347DC+76j
					; sub_347DC+85j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, [bp+arg_4]
		mov	si, [bp+arg_2]
		mov	ax, [si+8]
		mov	[bp+var_2], ax
		mov	ax, [si+0Ah]
		mov	[bp+var_4], ax

loc_3484E:				; CODE XREF: sub_347DC+2Fj
					; sub_347DC+4Dj
		cmp	[bp+arg_0], 2
		jb	short loc_3482C
		cld
		mov	ax, [si+2]
		mul	[bp+arg_0]
		mov	al, ah
		mov	ah, dl
		or	ax, ax
		jz	short loc_3482C
		mov	[bp+var_8], ax
		mov	ax, [si]
		mov	[bp+var_A], ax
		mul	[bp+arg_0]
		mov	al, ah
		mov	ah, dl
		or	ax, ax
		jz	short loc_3482C
		mov	[bp+var_6], ax
		mov	dx, cs:word_34954
		sub	dx, ax
		mov	[bp+var_C], dx
		add	si, 10h
		mov	dx, 1
		xor	ax, ax
		mov	[bp+var_12], ax
		mov	[bp+var_14], ax
		div	[bp+arg_0]
		mov	[bp+var_10], ax
		mov	al, ah
		xor	ah, ah
		shr	ax, 1
		jz	short loc_348A8
		add	si, ax
		mov	cx, ax

loc_348A3:				; CODE XREF: sub_347DC+CAj
		add	si, [bp+var_A]
		loop	loc_348A3

loc_348A8:				; CODE XREF: sub_347DC+C1j
		mov	cx, [bp+var_6]
		mov	ax, [bp+var_2]
		mov	bx, cs:word_3495A
		cmp	ax, bx
		jge	short loc_348D6
		add	ax, cx
		sub	ax, bx
		jle	short loc_34939
		mov	[bp+var_2], bx
		mov	[bp+var_6], ax
		xchg	ax, cx
		sub	ax, cx
		mul	[bp+var_10]
		xchg	al, dl
		xor	dh, dh
		mov	[bp+var_14], dx
		xchg	al, ah
		add	si, ax
		mov	ax, bx

loc_348D6:				; CODE XREF: sub_347DC+D9j
		add	ax, cx
		sub	ax, cs:word_3495C
		jl	short loc_348E6
		sub	cx, ax
		jle	short loc_34939
		mov	[bp+var_6], cx

loc_348E6:				; CODE XREF: sub_347DC+101j
		mov	ax, cs:word_34954
		sub	ax, cx
		mov	[bp+var_C], ax
		mov	cx, [bp+var_8]
		mov	ax, [bp+var_4]
		mov	bx, cs:word_34950
		cmp	ax, bx
		jge	short loc_34920
		add	ax, cx
		sub	ax, bx
		jle	short loc_34939
		mov	[bp+var_8], ax
		mov	[bp+var_4], bx
		xchg	ax, cx
		sub	ax, cx
		mul	[bp+var_10]
		xchg	al, dl
		xor	dh, dh
		mov	[bp+var_12], dx
		xchg	al, ah
		mul	[bp+var_A]
		add	si, ax
		mov	ax, bx

loc_34920:				; CODE XREF: sub_347DC+120j
		add	ax, cx
		sub	ax, cs:word_34952
		jl	short loc_34930
		sub	cx, ax
		jle	short loc_34939
		mov	[bp+var_8], cx

loc_34930:				; CODE XREF: sub_347DC+14Bj
		mov	dx, [bp+var_10]
		mov	[bp+var_E], si
		jmp	loc_35ED9
; ---------------------------------------------------------------------------

loc_34939:				; CODE XREF: sub_347DC+DFj
					; sub_347DC+105j ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_347DC	endp

; ---------------------------------------------------------------------------
		db 2 dup(0)
word_34942	dw 0A000h		; DATA XREF: seg012:47FCr sub_332C0+5r ...
		db 6 dup(0)
word_3494A	dw 5F5Ch		; DATA XREF: sub_332C0+1Br
					; seg012:4940r	...
word_3494C	dw 0			; DATA XREF: seg012:4810w sub_3327F+Aw ...
word_3494E	dw 140h			; DATA XREF: seg012:4821w
					; sub_3327F+15w ...
word_34950	dw 0			; DATA XREF: sub_2EB56+62r
					; sub_2EB56+18Er ...
word_34952	dw 0C8h			; DATA XREF: sub_2EB56+67r
					; sub_2EB56+252r ...
word_34954	dw 140h			; DATA XREF: sub_332C0+34r
					; sub_335D2+32r ...
		align 4
word_34958	dw 140h			; DATA XREF: sub_35C4E+3Cr
word_3495A	dw 0			; DATA XREF: sub_2EB56:loc_2EBE5r
					; sub_2EB56:loc_2EE94r	...
word_3495C	dw 140h			; DATA XREF: sub_2EB56+94r
					; sub_2EB56+4F0r ...
		align 4
word_34960	dw 0A000h		; DATA XREF: sub_35C4E+10r
		align 8
word_34968	dw 5F5Ch		; DATA XREF: sub_35C4E+26r
		align 4
		db 40h,	1, 2 dup(0), 0C8h, 0, 40h, 1, 2	dup(0),	40h, 1
		db 2 dup(0), 40h, 1, 2 dup(0), 40h, 1, 80h, 2, 0C0h, 3
		db 0, 5, 40h, 6, 80h, 7, 0C0h, 8, 0, 0Ah, 40h, 0Bh, 80h
		db 0Ch,	0C0h, 0Dh, 0, 0Fh, 40h,	10h, 80h, 11h, 0C0h, 12h
		db 0, 14h, 40h,	15h, 80h, 16h, 0C0h, 17h, 0, 19h, 40h
		db 1Ah,	80h, 1Bh, 0C0h,	1Ch, 0,	1Eh, 40h, 1Fh, 80h, 20h
		db 0C0h, 21h, 0, 23h, 40h, 24h,	80h, 25h, 0C0h,	26h, 0
		db 28h,	40h, 29h, 80h, 2Ah, 0C0h, 2Bh, 0, 2Dh, 40h, 2Eh
		db 80h,	2Fh, 0C0h, 30h,	0, 32h,	40h, 33h, 80h, 34h, 0C0h
		db 35h,	0, 37h,	40h, 38h, 80h, 39h, 0C0h, 3Ah, 0, 3Ch
		db 40h,	3Dh, 80h, 3Eh, 0C0h, 3Fh, 0, 41h, 40h, 42h, 80h
		db 43h,	0C0h, 44h, 0, 46h, 40h,	47h, 80h, 48h, 0C0h, 49h
		db 0, 4Bh, 40h,	4Ch, 80h, 4Dh, 0C0h, 4Eh, 0, 50h, 40h
		db 51h,	80h, 52h, 0C0h,	53h, 0,	55h, 40h, 56h, 80h, 57h
		db 0C0h, 58h, 0, 5Ah, 40h, 5Bh,	80h, 5Ch, 0C0h,	5Dh, 0
		db 5Fh,	40h, 60h, 80h, 61h, 0C0h, 62h, 0, 64h, 40h, 65h
		db 80h,	66h, 0C0h, 67h,	0, 69h,	40h, 6Ah, 80h, 6Bh, 0C0h
		db 6Ch,	0, 6Eh,	40h, 6Fh, 80h, 70h, 0C0h, 71h, 0, 73h
		db 40h,	74h, 80h, 75h, 0C0h, 76h, 0, 78h, 40h, 79h, 80h
		db 7Ah,	0C0h, 7Bh, 0, 7Dh, 40h,	7Eh, 80h, 7Fh, 0C0h, 80h
		db 0, 82h, 40h,	83h, 80h, 84h, 0C0h, 85h, 0, 87h, 40h
		db 88h,	80h, 89h, 0C0h,	8Ah, 0,	8Ch, 40h, 8Dh, 80h, 8Eh
		db 0C0h, 8Fh, 0, 91h, 40h, 92h,	80h, 93h, 0C0h,	94h, 0
		db 96h,	40h, 97h, 80h, 98h, 0C0h, 99h, 0, 9Bh, 40h, 9Ch
		db 80h,	9Dh, 0C0h, 9Eh,	0, 0A0h, 40h, 0A1h, 80h, 0A2h
		db 0C0h, 0A3h, 0, 0A5h,	40h, 0A6h, 80h,	0A7h, 0C0h, 0A8h
		db 0, 0AAh, 40h, 0ABh, 80h, 0ACh, 0C0h,	0ADh, 0, 0AFh
		db 40h,	0B0h, 80h, 0B1h, 0C0h, 0B2h, 0,	0B4h, 40h, 0B5h
		db 80h,	0B6h, 0C0h, 0B7h, 0, 0B9h, 40h,	0BAh, 80h, 0BBh
		db 0C0h, 0BCh, 0, 0BEh,	40h, 0BFh, 80h,	2 dup(0C0h), 0C1h
		db 0, 0C3h, 40h, 0C4h, 80h, 0C5h, 0C0h,	0C6h, 0, 0C8h
		db 40h,	0C9h, 80h, 0CAh, 0C0h, 0CBh, 0,	0CDh, 40h, 0CEh
		db 80h,	0CFh, 0C0h, 0D0h, 0, 0D2h, 40h,	0D3h, 80h, 0D4h
		db 0C0h, 0D5h, 0, 0D7h,	40h, 0D8h, 80h,	0D9h, 0C0h, 0DAh
		db 0, 0DCh, 40h, 0DDh, 80h, 0DEh, 0C0h,	0DFh, 0, 0E1h
		db 40h,	0E2h, 80h, 0E3h, 0C0h, 0E4h, 0,	0E6h, 40h, 0E7h
		db 80h,	0E8h, 0C0h, 0E9h, 0, 0EBh, 40h,	0ECh, 80h, 0EDh
		db 0C0h, 0EEh, 0, 0F0h,	40h, 0F1h, 80h,	0F2h, 0C0h, 0F3h
		db 0, 0F5h, 40h, 0F6h, 80h, 0F7h, 0C0h,	0F8h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34B0C	proc far		; CODE XREF: sub_110D0+1A8P
					; sub_1168E+1ABP ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	es, word ptr off_405FE+2
		mov	ax, [bp+arg_2]
		xor	ah, ah
		mov	es:2, ax
		mov	ax, [bp+arg_0]
		xor	ah, ah
		mov	es:0, ax
		pop	bp
		retf
sub_34B0C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	es, word ptr off_405FE+2
		mov	ax, [bp+6]
		mov	es:8, ax
		mov	ax, [bp+8]
		mov	es:0Ah,	ax
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		push	di
		push	si
		xor	si, si
		mov	di, [bp+6]
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ds, word ptr off_405FE+2
		cld
		mov	word ptr es:[di+16h], ds
		mov	cx, 0Bh
		rep movsw
		pop	si
		pop	di
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		push	si
		mov	si, [bp+6]
		mov	ax, [si+16h]
		mov	word ptr off_405FE+2, ax
		mov	es, ax
		assume es:nothing
		xor	di, di
		cld
		mov	cx, 0Bh
		rep movsw
		pop	si
		pop	di
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34B7C	proc far		; CODE XREF: sub_2988A+9P

arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		mov	word ptr off_405FE+2, ax
		pop	bp
		retf
sub_34B7C	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+10h]
		mov	word_4031E, ax
		jmp	short loc_34B9B
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	si
		push	di

loc_34B9B:				; CODE XREF: seg012:6173j
		cld
		mov	si, [bp+0Ah]
		test	si, 1
		jnz	short loc_34BAD
		mov	ax, word_4031E
		xchg	ah, al
		mov	word_4031E, ax

loc_34BAD:				; CODE XREF: seg012:6183j
		mov	si, [bp+0Ah]
		shl	si, 1
		add	si, cs:word_3494A
		mov	ax, cs:word_34942
		mov	es, ax
		assume es:nothing
		mov	al, [bp+0Eh]

loc_34BC0:				; CODE XREF: seg012:61E0j
		mov	bx, [bp+8]
		mov	dx, [bx]
		mov	bx, [bp+6]
		mov	bx, [bx]
		mov	ah, byte ptr word_4031E
		mov	cl, bl
		and	cl, 7
		rol	ah, cl
		mov	cx, dx
		sub	cx, bx
		inc	cx
		jle	short loc_34BE8
		mov	di, cs:[si]
		add	di, bx

loc_34BE1:				; CODE XREF: seg012:61C6j seg012:61E7j
		rol	ah, 1
		jnb	short loc_34C06
		stosb
		loop	loc_34BE1

loc_34BE8:				; CODE XREF: seg012:61BAj seg012:61E9j
		add	word ptr [bp+8], 2
		add	word ptr [bp+6], 2
		add	si, 2
		mov	dx, word_4031E
		xchg	dh, dl
		mov	word_4031E, dx
		dec	word ptr [bp+0Ch]
		jg	short loc_34BC0
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34C06:				; CODE XREF: seg012:61C3j
		inc	di
		loop	loc_34BE1
		jmp	short loc_34BE8
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_34C0C	proc far		; CODE XREF: sub_1059A+3EP
					; sub_1059A+A6P ...

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	ds
		push	si
		push	di
		mov	ax, [bp+arg_0]
		mov	[bp+var_8], ax
		mov	bx, [bp+arg_2]
		imul	bx
		add	ax, 10h
		mov	cx, 4
		shr	ax, cl
		inc	ax
		mov	bx, ax
		mov	[bp+var_6], ax
		push	ax
		mov	ax, 541Ch
		push	ax
		call	sub_31248
		add	sp, 4
		mov	[bp+var_2], dx
		mov	ds, dx
		xor	bx, bx
		mov	ax, [bp+var_8]
		mov	[bx], ax
		mov	ax, [bp+arg_2]
		mov	[bx+2],	ax
		xor	ax, ax
		mov	[bx+8],	ax
		mov	[bx+0Ah], ax
		mov	[bx+4],	ax
		mov	[bx+6],	ax
		mov	ax, 0Fh
		add	ax, [bp+arg_2]
		shl	ax, 1
		mov	bx, cs:word_34CE4
		mov	[bp+var_4], bx
		add	ax, bx
		cmp	ax, 70D6h
		jnb	short loc_34CD6
		mov	cs:word_34CE4, ax
		mov	word ptr cs:[bx], 0
		mov	ax, [bp+var_2]
		mov	cs:[bx+2], ax
		lea	ax, [bx+1Eh]
		mov	cs:[bx+0Ah], ax
		mov	word ptr cs:[bx+0Ch], 0
		mov	word ptr cs:[bx+1Ah], 0
		mov	ax, [bp+var_8]
		mov	cs:[bx+0Eh], ax
		mov	cs:[bx+14h], ax
		mov	word ptr cs:[bx+10h], 0
		mov	ax, [bp+arg_2]
		mov	cs:[bx+12h], ax
		mov	ax, [bp+arg_0]
		mov	cs:[bx+18h], ax
		mov	cs:[bx+1Ch], ax
		mov	cx, [bp+arg_2]
		mov	ax, 10h

loc_34CBE:				; CODE XREF: sub_34C0C+BCj
		mov	cs:[bx+1Eh], ax
		add	bx, 2
		add	ax, [bp+var_8]
		loop	loc_34CBE
		mov	dx, cs
		mov	ax, [bp+var_4]
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_34CD6:				; CODE XREF: sub_34C0C+64j
		mov	ax, ss
		mov	ds, ax
		mov	ax, 5428h
		push	ax
		call	far ptr	sub_2EA2A
sub_34C0C	endp

; ---------------------------------------------------------------------------
		align 2
word_34CE4	dw 62C6h		; DATA XREF: sub_324AA+1Fr
					; sub_324AA+2Aw ...
		db 0E10h dup(0)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35AF6	proc far		; CODE XREF: sub_13178+CA9P
					; sub_13178+1117P ...

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		cld
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	cx, 0Fh
		mov	ax, cs
		mov	es, ax
		assume es:seg012
		mov	di, 5F20h
		rep movsw
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
sub_35AF6	endp


; =============== S U B	R O U T	I N E =======================================


sub_35B14	proc far		; CODE XREF: sub_22D2E+19CP
					; sub_23B4C:loc_23FDAP	...
		mov	ax, seg	seg012
		push	ax
		mov	ax, 5F3Eh
		push	ax
		call	sub_35AF6
		add	sp, 4
		retf
sub_35B14	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35B26	proc far		; CODE XREF: sub_11C42+6F0P
					; sub_1DEA6+15DP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [bp+arg_0]
		cmp	ax, cs:word_3494C
		jl	short loc_35B4D
		cmp	ax, cs:word_3494E
		jge	short loc_35B4D
		mov	ax, [bp+arg_2]
		cmp	ax, cs:word_34950
		jl	short loc_35B4D
		cmp	ax, cs:word_34952
		jl	short loc_35B56

loc_35B4D:				; CODE XREF: sub_35B26+Dj
					; sub_35B26+14j ...
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	si
		push	di

loc_35B56:				; CODE XREF: sub_35B26+25j
		mov	di, [bp+arg_0]
		mov	si, [bp+arg_2]
		shl	si, 1
		add	si, cs:word_3494A
		add	di, cs:[si]
		mov	es, cs:word_34942
		assume es:nothing
		mov	ax, [bp+arg_4]
		mov	es:[di], al
		pop	di
		pop	si
		pop	bp
		retf
sub_35B26	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35B76	proc far		; CODE XREF: sub_3702E+31P
					; sub_3702E+49P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= byte ptr  0Eh

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	dx, cs:word_3494C
		mov	ax, dx
		sub	ax, [bp+arg_0]
		jle	short loc_35B8F
		mov	[bp+arg_0], dx
		sub	[bp+arg_4], ax
		jle	short loc_35BCD

loc_35B8F:				; CODE XREF: sub_35B76+Fj
		mov	ax, [bp+arg_0]
		add	ax, [bp+arg_4]
		sub	ax, cs:word_3494E
		jle	short loc_35BA1
		sub	[bp+arg_4], ax
		jle	short loc_35BCD

loc_35BA1:				; CODE XREF: sub_35B76+24j
		mov	ax, cs:word_34950
		sub	ax, [bp+arg_2]
		jle	short loc_35BB6
		sub	[bp+arg_6], ax
		jle	short loc_35BCD
		mov	ax, cs:word_34950
		mov	[bp+arg_2], ax

loc_35BB6:				; CODE XREF: sub_35B76+32j
		mov	ax, [bp+arg_2]
		add	ax, [bp+arg_6]
		mov	bx, cs:word_34952
		sub	ax, bx
		jle	short loc_35BD5
		sub	[bp+arg_6], ax
		jle	short loc_35BCD
		jmp	short loc_35BD5
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_35BCD:				; CODE XREF: sub_35B76+17j
					; sub_35B76+29j ...
		jmp	short loc_35C25
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	si
		push	di

loc_35BD5:				; CODE XREF: sub_35B76+4Dj
					; sub_35B76+54j
		cld
		cmp	[bp+arg_4], 0
		jle	short loc_35BCD
		cmp	[bp+arg_6], 0
		jle	short loc_35BCD
		mov	es, cs:word_34942
		mov	al, [bp+arg_8]
		mov	ah, al
		mov	dx, [bp+arg_0]
		mov	si, [bp+arg_6]
		mov	bx, [bp+arg_2]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+arg_0]
		mov	dx, cs:word_34954
		sub	dx, [bp+arg_4]
		mov	cx, [bp+arg_4]
		sar	cx, 1
		mov	[bp+arg_4], cx
		jb	short loc_35C29
		jle	short loc_35C25

loc_35C16:				; CODE XREF: sub_35B76+ADj
		mov	cx, [bp+arg_4]

loc_35C19:				; CODE XREF: sub_35B76+A8j
		xor	es:[di], ax
		inc	di
		inc	di
		loop	loc_35C19
		add	di, dx
		dec	si
		jg	short loc_35C16

loc_35C25:				; CODE XREF: sub_35B76:loc_35BCDj
					; sub_35B76+9Ej ...
		pop	di
		pop	si
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_35C29:				; CODE XREF: sub_35B76+9Cj
		jz	short loc_35C42
		jl	short loc_35C25
		inc	dx

loc_35C2E:				; CODE XREF: sub_35B76+C8j
		mov	cx, [bp+arg_4]

loc_35C31:				; CODE XREF: sub_35B76+C0j
		xor	es:[di], ax
		inc	di
		inc	di
		loop	loc_35C31
		xor	es:[di], al
		add	di, dx
		dec	si
		jg	short loc_35C2E
		jmp	short loc_35C25
; ---------------------------------------------------------------------------

loc_35C42:				; CODE XREF: sub_35B76:loc_35C29j
		inc	dx

loc_35C43:				; CODE XREF: sub_35B76+D3j
		xor	es:[di], al
		add	di, dx
		dec	si
		jg	short loc_35C43
		jmp	short loc_35C25
sub_35B76	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35C4E	proc far		; CODE XREF: sub_1D93C+526P
					; sub_21B7A+747P

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		push	ds
		cld
		mov	ax, cs:word_34942
		mov	es, ax
		mov	ax, cs:word_34960
		mov	ds, ax
		assume ds:nothing
		mov	ax, [bp+arg_0]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_4]
		mov	ax, [bp+arg_2]
		shl	ax, 1
		mov	cx, ax
		add	ax, cs:word_34968
		mov	[bp+var_4], ax
		add	cx, cs:word_3494A
		mov	ax, [bp+arg_8]
		mov	bx, ax
		add	ax, [bp+arg_0]
		cwd
		idiv	cs:word_34958
		sub	dx, [bp+arg_0]
		shl	ax, 1
		add	cx, ax
		add	[bp+var_2], dx
		mov	[bp+var_6], cx
		mov	dx, [bp+arg_6]

loc_35C9F:				; CODE XREF: sub_35C4E+71j
		mov	cx, [bp+arg_4]
		mov	bx, [bp+var_4]
		mov	si, cs:[bx]
		add	si, [bp+arg_0]
		mov	bx, [bp+var_6]
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		rep movsb
		add	[bp+var_4], 2
		add	[bp+var_6], 2
		dec	dx
		jg	short loc_35C9F
		pop	ds
		assume ds:dseg
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_35C4E	endp

; ---------------------------------------------------------------------------
		db 0, 1, 2, 3, 4, 5, 6,	7, 8, 9, 0Ah, 0Bh, 0Ch,	0Dh, 0Eh
		db 0Fh,	10h, 11h, 12h, 13h, 14h, 15h, 16h, 17h,	18h, 19h
		db 1Ah,	1Bh, 1Ch, 1Dh, 1Eh, 1Fh, 20h, 21h, 22h,	23h, 24h
		db 25h,	26h, 27h, 28h, 29h, 2Ah, 2Bh, 2Ch, 2Dh,	2Eh, 2Fh
		db 30h,	31h, 32h, 33h, 34h, 35h, 36h, 37h, 38h,	39h, 3Ah
		db 3Bh,	3Ch, 3Dh, 3Eh, 3Fh, 40h, 41h, 42h, 43h,	44h, 45h
		db 46h,	47h, 48h, 49h, 4Ah, 4Bh, 4Ch, 4Dh, 4Eh,	4Fh, 50h
		db 51h,	52h, 53h, 54h, 55h, 56h, 57h, 58h, 59h,	5Ah, 5Bh
		db 5Ch,	5Dh, 5Eh, 5Fh, 60h, 61h, 62h, 63h, 64h,	65h, 66h
		db 67h,	68h, 69h, 6Ah, 6Bh, 6Ch, 6Dh, 6Eh, 6Fh,	70h, 71h
		db 72h,	73h, 74h, 75h, 76h, 77h, 78h, 79h, 7Ah,	7Bh, 7Ch
		db 7Dh,	7Eh, 7Fh, 80h, 81h, 82h, 83h, 84h, 85h,	86h, 87h
		db 88h,	89h, 8Ah, 8Bh, 8Ch, 8Dh, 8Eh, 8Fh, 90h,	91h, 92h
		db 93h,	94h, 95h, 96h, 97h, 98h, 99h, 9Ah, 9Bh,	9Ch, 9Dh
		db 9Eh,	9Fh, 0A0h, 0A1h, 0A2h, 0A3h, 0A4h, 0A5h, 0A6h
		db 0A7h, 0A8h, 0A9h, 0AAh, 0ABh, 0ACh, 0ADh, 0AEh, 0AFh
		db 0B0h, 0B1h, 0B2h, 0B3h, 0B4h, 0B5h, 0B6h, 0B7h, 0B8h
		db 0B9h, 0BAh, 0BBh, 0BCh, 0BDh, 0BEh, 0BFh, 0C0h, 0C1h
		db 0C2h, 0C3h, 0C4h, 0C5h, 0C6h, 0C7h, 0C8h, 0C9h, 0CAh
		db 0CBh, 0CCh, 0CDh, 0CEh, 0CFh, 0D0h, 0D1h, 0D2h, 0D3h
		db 0D4h, 0D5h, 0D6h, 0D7h, 0D8h, 0D9h, 0DAh, 0DBh, 0DCh
		db 0DDh, 0DEh, 0DFh, 0E0h, 0E1h, 0E2h, 0E3h, 0E4h, 0E5h
		db 0E6h, 0E7h, 0E8h, 0E9h, 0EAh, 0EBh, 0ECh, 0EDh, 0EEh
		db 0EFh, 0F0h, 0F1h, 0F2h, 0F3h, 0F4h, 0F5h, 0F6h, 0F7h
		db 0F8h, 0F9h, 0FAh, 0FBh, 0FCh, 0FDh, 0FEh, 0FFh
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	cx, offset word_3B870
		mov	ds, word ptr [bp+8]
		mov	si, [bp+6]
		mov	ax, cs
		mov	es, ax
		assume es:seg012
		mov	di, 72A8h
		cld
		rep movsb
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		push	si
		push	di
		mov	cx, [bp+8]
		mov	ds, word ptr [bp+0Ch]
		mov	si, [bp+6]
		mov	ax, cs
		mov	es, ax
		lea	di, [si+72A8h]
		mov	si, [bp+0Ah]
		cld
		rep movsb
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+0Ah]
		mov	si, [bp+8]
		mov	cx, [bp+0Ch]
		mov	ax, [si+4]
		imul	word ptr [bp+6]
		sub	cl, ah
		sbb	ch, dl
		mov	[bp-2],	cx
		mov	cx, [bp+0Eh]
		mov	ax, [si+6]
		imul	word ptr [bp+6]
		sub	cl, ah
		sbb	ch, dl
		mov	[bp-4],	cx
		jmp	short loc_35E7A
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+0Ah]
		mov	si, [bp+8]
		mov	ax, [bp+0Ch]
		mov	[bp-2],	ax
		mov	ax, [bp+0Eh]
		mov	[bp-4],	ax
		jmp	short loc_35E7A
; ---------------------------------------------------------------------------
		align 2

loc_35E58:				; CODE XREF: seg012:745Ej seg012:746Dj ...
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	ds
		push	si
		push	di
		mov	ds, word ptr [bp+0Ah]
		mov	si, [bp+8]
		mov	ax, [si+8]
		mov	[bp-2],	ax
		mov	ax, [si+0Ah]
		mov	[bp-4],	ax

loc_35E7A:				; CODE XREF: seg012:7417j seg012:7435j
		cmp	word ptr [bp+6], 2
		jb	short loc_35E58
		cld
		mov	ax, [si+2]
		mul	word ptr [bp+6]
		mov	al, ah
		mov	ah, dl
		or	ax, ax
		jz	short loc_35E58
		mov	[bp-8],	ax
		mov	ax, [si]
		mov	[bp-0Ah], ax
		mul	word ptr [bp+6]
		mov	al, ah
		mov	ah, dl
		or	ax, ax
		jz	short loc_35E58
		mov	[bp-6],	ax
		mov	dx, cs:word_34954
		sub	dx, ax
		mov	[bp-0Ch], dx
		add	si, 10h
		mov	dx, 1
		xor	ax, ax
		mov	[bp-14h], ax
		mov	[bp-12h], ax
		div	word ptr [bp+6]
		mov	dx, ax
		mov	al, ah
		xor	ah, ah
		shr	ax, 1
		jz	short loc_35ED3
		add	si, ax
		mov	cx, ax

loc_35ECE:				; CODE XREF: seg012:74B1j
		add	si, [bp-0Ah]
		loop	loc_35ECE

loc_35ED3:				; CODE XREF: seg012:74A8j
		mov	[bp-0Eh], si
		mov	[bp-10h], dx
; START	OF FUNCTION CHUNK FOR sub_347DC

loc_35ED9:				; CODE XREF: sub_347DC+15Aj
		mov	ax, cs:word_34942
		mov	es, ax
		assume es:nothing
		mov	bx, [bp+var_4]
		shl	bx, 1
		add	bx, cs:word_3494A
		mov	di, cs:[bx]
		add	di, [bp+var_2]
		mov	dx, [bp+var_10]
		mov	ax, [bp+var_12]
		mov	ss:54AAh, ax

loc_35EF9:				; CODE XREF: sub_347DC+1750j
					; sub_347DC+1762j
		mov	cx, [bp+var_6]
		mov	bx, [bp+var_14]

loc_35EFF:				; CODE XREF: sub_347DC+1737j
		mov	al, [si]
		cmp	al, 0FFh
		jz	short loc_35F08
		mov	es:[di], al

loc_35F08:				; CODE XREF: sub_347DC+1727j
		inc	di
		add	bx, dx
		mov	al, bh
		xor	ah, ah
		add	si, ax
		xor	bh, bh
		loop	loc_35EFF
		dec	[bp+var_8]
		jle	short loc_35F40
		add	di, [bp+var_C]
		mov	si, [bp+var_E]
		add	ss:54AAh, dx
		mov	cl, ss:54ABh
		or	cl, cl
		jz	short loc_35EF9
		xor	ch, ch

loc_35F30:				; CODE XREF: sub_347DC+1757j
		add	si, [bp+var_A]
		loop	loc_35F30
		mov	byte ptr ss:54ABh, 0
		mov	[bp+var_E], si
		jmp	short loc_35EF9
; ---------------------------------------------------------------------------

loc_35F40:				; CODE XREF: sub_347DC+173Cj
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; END OF FUNCTION CHUNK	FOR sub_347DC
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35F48	proc far		; CODE XREF: sub_3A9FC+2A9P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		mov	es, [bp+arg_2]
		assume es:nothing
		mov	di, [bp+arg_0]
		mov	si, [bp+arg_4]
		mov	cx, es:[di+4]
		mov	[bp+var_2], cx
		xor	ax, ax
		mov	[bp+var_4], ax

loc_35F65:				; CODE XREF: sub_35F48+57j
		mov	ax, [bp+var_4]
		cmp	ax, [bp+var_2]
		jl	short loc_35F73
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_35F73:				; CODE XREF: sub_35F48+23j
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3265B
		add	sp, 6
		mov	es, dx
		mov	di, ax
		mov	ax, es:[di]
		mul	word ptr es:[di+2]
		mov	cx, ax
		add	di, 10h
		xor	bx, bx

loc_35F94:				; CODE XREF: sub_35F48+52j
		mov	bl, es:[di]
		mov	al, [bx+si]
		stosb
		loop	loc_35F94
		inc	[bp+var_4]
		jmp	short loc_35F65
sub_35F48	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_35FA2	proc far		; CODE XREF: sub_3A9FC+277P

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		push	ds
		mov	ds, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	es, [bp+arg_6]
		mov	di, [bp+arg_4]
		mov	cx, [si+4]
		mov	[bp+var_2], cx
		shl	cx, 1
		add	cx, 1
		add	si, 4
		add	di, 4
		rep movsw
		xor	ax, ax
		mov	[bp+var_4], ax
		mov	[bp+var_6], di
		mov	es:[di], ax
		mov	es:[di+2], ax

loc_35FD9:				; CODE XREF: sub_35FA2+150j
		mov	ax, [bp+var_4]
		cmp	ax, [bp+var_2]
		jl	short loc_35FE8
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_35FE8:				; CODE XREF: sub_35FA2+3Dj
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		mov	ax, ss
		mov	ds, ax
		call	sub_3265B
		add	sp, 6
		mov	ds, dx
		mov	si, ax
		mov	[bp+var_A], dx
		mov	[bp+var_C], ax
		mov	es, [bp+arg_6]
		mov	di, [bp+var_6]
		mov	bx, es:[di]
		mov	cx, es:[di+2]
		add	di, 4
		mov	[bp+var_6], di
		mov	ax, [si]
		mul	word ptr [si+2]
		mov	[bp+var_E], ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 10h
		add	ax, bx
		adc	dx, cx
		mov	bx, [bp+var_4]
		inc	bx
		cmp	bx, [bp+var_2]
		jge	short loc_36040
		mov	es:[di], ax
		mov	es:[di+2], dx
		jmp	short loc_3605B
; ---------------------------------------------------------------------------
		align 2

loc_36040:				; CODE XREF: sub_35FA2+92j
		mov	bx, [bp+var_2]
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		add	bx, 6
		add	ax, bx
		adc	dx, 0
		mov	di, [bp+arg_4]
		mov	es:[di], ax
		mov	es:[di+2], dx

loc_3605B:				; CODE XREF: sub_35FA2+9Bj
		push	[bp+var_4]
		push	[bp+arg_6]
		push	[bp+arg_4]
		mov	ax, ss
		mov	ds, ax
		call	sub_3265B
		add	sp, 6
		mov	es, dx
		mov	di, ax
		mov	[bp+var_10], ax
		mov	ds, [bp+var_A]
		mov	cx, 6
		rep movsw
		mov	si, [bp+var_C]
		mov	di, [bp+var_10]
		mov	ax, [si]
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	es:[di], ax
		mov	al, [si+0Dh]
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		mov	ah, al
		add	di, 10h
		mov	cx, [bp+var_E]
		cmp	cx, 0
		jle	short loc_360EF
		cmp	cx, 1F40h
		jg	short loc_360EF
		shl	cx, 1
		shl	cx, 1
		rep stosw
		add	si, 10h
		mov	[bp+var_8], si
		xor	bx, bx

loc_360BC:				; CODE XREF: sub_35FA2+14Bj
		mov	si, [bp+var_C]
		mov	ah, [bx+si+0Ch]
		and	ah, 0Fh
		jz	short loc_360EF
		mov	di, [bp+var_10]
		add	di, 10h
		mov	si, [bp+var_8]
		mov	dx, [bp+var_E]

loc_360D3:				; CODE XREF: sub_35FA2+140j
		lodsb
		mov	cx, 8

loc_360D7:				; CODE XREF: sub_35FA2+13Dj
		shl	al, 1
		jnb	short loc_360DE
		or	es:[di], ah

loc_360DE:				; CODE XREF: sub_35FA2+137j
		inc	di
		loop	loc_360D7
		dec	dx
		jg	short loc_360D3
		mov	[bp+var_8], si
		shl	ah, 1
		inc	bx
		cmp	bx, 4
		jl	short loc_360BC

loc_360EF:				; CODE XREF: sub_35FA2+104j
					; sub_35FA2+10Aj ...
		inc	[bp+var_4]
		jmp	loc_35FD9
sub_35FA2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_360F6	proc far		; CODE XREF: sub_3A9FC+1A5P

var_14		= byte ptr -14h
var_12		= byte ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	ds
		push	si
		push	di
		mov	ax, [bp+arg_2]
		mov	ds, ax
		mov	ax, [bp+arg_0]
		mov	si, ax
		mov	bx, [si+4]
		mov	[bp+var_2], bx
		mov	[bp+var_4], 0

loc_36114:				; CODE XREF: sub_360F6+5Ej
		push	[bp+var_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		mov	ax, seg	dseg
		mov	ds, ax
		call	sub_3265B
		add	sp, 6
		mov	[bp+var_6], ax
		mov	[bp+var_8], dx
		mov	si, ax
		mov	ds, dx
		mov	al, [si+0Fh]
		and	al, 0F0h
		jnz	short loc_3614E
		mov	bl, [si+0Eh]
		shr	bl, 1
		shr	bl, 1
		shr	bl, 1
		shr	bl, 1
		and	bl, 0Fh
		mov	[bp+var_14], bl
		jnz	short loc_3615D

loc_3614E:				; CODE XREF: sub_360F6+43j
					; sub_360F6+C4j
		inc	[bp+var_4]
		dec	[bp+var_2]
		jg	short loc_36114
		pop	di
		pop	si
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3615D:				; CODE XREF: sub_360F6+56j
		mov	ax, [si]
		mov	[bp+var_A], ax
		mov	dx, [si+2]
		mov	[bp+var_C], dx
		mul	dx
		mov	[bp+var_E], ax
		add	si, 10h
		mov	[bp+var_10], si
		mov	[bp+var_12], 4

loc_36177:				; CODE XREF: sub_360F6+C2j
		shr	[bp+var_14], 1
		jnb	short loc_361AF
		mov	es, [bp+arg_6]
		mov	di, [bp+arg_4]
		mov	ds, [bp+var_8]
		xor	dx, dx
		mov	bx, [bp+var_C]

loc_3618A:				; CODE XREF: sub_360F6+A6j
		mov	si, [bp+var_10]
		add	si, dx
		mov	cx, [bp+var_A]

loc_36192:				; CODE XREF: sub_360F6+A1j
		mov	al, [si]
		stosb
		add	si, bx
		loop	loc_36192
		inc	dx
		cmp	dx, bx
		jnz	short loc_3618A
		mov	es, [bp+var_8]
		mov	di, [bp+var_10]
		mov	ds, [bp+arg_6]
		mov	si, [bp+arg_4]
		mov	cx, [bp+var_E]
		rep movsb

loc_361AF:				; CODE XREF: sub_360F6+84j
		mov	ax, [bp+var_E]
		add	[bp+var_10], ax
		dec	[bp+var_12]
		jnz	short loc_36177
		jmp	short loc_3614E
sub_360F6	endp

seg012		ends

; ===========================================================================

; Segment type:	Pure code
seg013		segment	byte public 'CODE' use16
		assume cs:seg013
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_361BC	proc far		; CODE XREF: sub_23B4C+2C6P
					; sub_23B4C+45CP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	ax, [bp+arg_4]
		sub	ax, [bp+arg_0]
		inc	ax
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		sub	ax, [bp+arg_2]
		mov	[bp+var_4], ax
		cmp	[bp+var_2], 0
		jle	short loc_3620B
		push	[bp+arg_8]
		mov	ax, 1
		push	ax
		push	[bp+var_2]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_33578
		add	sp, 0Ah
		push	[bp+arg_8]
		mov	ax, 1
		push	ax
		push	[bp+var_2]
		push	[bp+arg_6]
		push	[bp+arg_0]
		call	sub_33578
		add	sp, 0Ah

loc_3620B:				; CODE XREF: sub_361BC+1Dj
		cmp	[bp+var_4], 0
		jle	short loc_36241
		push	[bp+arg_8]
		push	[bp+var_4]
		mov	ax, 1
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_33578
		add	sp, 0Ah
		push	[bp+arg_8]
		push	[bp+var_4]
		mov	ax, 1
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_4]
		call	sub_33578
		add	sp, 0Ah

loc_36241:				; CODE XREF: sub_361BC+53j
		mov	sp, bp
		pop	bp
		retf
sub_361BC	endp

seg013		ends

; ===========================================================================

; Segment type:	Pure code
seg014		segment	byte public 'CODE' use16
		assume cs:seg014
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36246	proc far		; CODE XREF: sub_36B16+87P
					; sub_36B16+9AP

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bx]
		mov	ax, [bx+4]
		sub	ax, si
		mov	bx, [bp+arg_2]
		mov	[bx], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+6]
		sub	ax, [bx+2]
		mov	bx, [bp+arg_2]
		mov	[bx+2],	ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+8]
		sub	ax, si
		mov	bx, [bp+arg_2]
		mov	[bx+10h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+0Ah]
		sub	ax, [bx+2]
		mov	bx, [bp+arg_2]
		mov	[bx+12h], ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+10h]
		add	ax, [bx]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+8],	ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+2]
		add	ax, [bx+12h]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Ah], ax
		mov	si, [bx+10h]
		sar	si, 1
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+4],	ax
		mov	di, [bx+12h]
		sar	di, 1
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+2]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+6],	ax
		mov	ax, [bx]
		sar	ax, 1
		mov	[bp+var_4], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+10h]
		add	ax, [bp+var_4]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Ch], ax
		mov	ax, [bx+2]
		sar	ax, 1
		mov	[bp+var_6], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+12h]
		add	ax, [bp+var_6]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Eh], ax
		mov	ax, [bx]
		neg	ax
		mov	[bp+var_8], ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+10h]
		add	ax, [bp+var_8]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+18h], ax
		mov	ax, [bx+2]
		neg	ax
		mov	[bp+var_A], ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+12h]
		add	ax, [bp+var_A]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Ah], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bp+var_8]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Ch], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bp+var_A]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Eh], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+10h]
		sub	ax, [bp+var_4]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+14h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+12h]
		sub	ax, [bp+var_6]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+16h], ax
		mov	[bp+var_2], 0

loc_363DC:				; CODE XREF: sub_36246+1C4j
		mov	si, [bp+var_2]
		mov	cl, 2
		shl	si, cl
		add	si, [bp+arg_2]
		mov	bx, [bp+arg_0]
		mov	di, [bx]
		mov	ax, di
		sub	ax, [si]
		mov	[si+20h], ax
		mov	ax, [bx+2]
		sub	ax, [si+2]
		mov	[si+22h], ax
		add	[si], di
		mov	ax, [bx+2]
		add	[si+2],	ax
		inc	[bp+var_2]
		cmp	[bp+var_2], 8
		jl	short loc_363DC
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_36246	endp

seg014		ends

; ===========================================================================

; Segment type:	Pure code
seg015		segment	byte public 'CODE' use16
		assume cs:seg015
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36412	proc far		; CODE XREF: sub_36BBE+EP

var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 1Ah
		push	di
		push	si
		mov	bx, [bp+arg_0]
		mov	si, [bx]
		mov	ax, [bx+4]
		sub	ax, si
		mov	bx, [bp+arg_2]
		mov	[bx], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+6]
		sub	ax, [bx+2]
		mov	bx, [bp+arg_2]
		mov	[bx+2],	ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+8]
		sub	ax, si
		mov	bx, [bp+arg_2]
		mov	[bx+20h], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bx+0Ah]
		sub	ax, [bx+2]
		mov	bx, [bp+arg_2]
		mov	[bx+22h], ax
		mov	ax, [bx]
		sar	ax, 1
		mov	[bp+var_2], ax
		sar	ax, 1
		mov	[bp+var_A], ax
		mov	ax, [bp+var_2]
		add	ax, [bp+var_A]
		mov	[bp+var_6], ax
		mov	ax, [bx+2]
		sar	ax, 1
		mov	[bp+var_4], ax
		sar	ax, 1
		mov	[bp+var_C], ax
		mov	ax, [bp+var_4]
		add	ax, [bp+var_C]
		mov	[bp+var_8], ax
		mov	ax, [bx+20h]
		sar	ax, 1
		mov	[bp+var_10], ax
		sar	ax, 1
		mov	[bp+var_18], ax
		mov	ax, [bp+var_10]
		add	ax, [bp+var_18]
		mov	[bp+var_14], ax
		mov	ax, [bx+22h]
		sar	ax, 1
		mov	[bp+var_12], ax
		sar	ax, 1
		mov	[bp+var_1A], ax
		mov	ax, [bp+var_12]
		add	ax, [bp+var_1A]
		mov	[bp+var_16], ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+20h]
		add	ax, [bx]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+10h], ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+2]
		add	ax, [bx+22h]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+12h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx]
		add	ax, [bp+var_10]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+8],	ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+2]
		add	ax, [bp+var_12]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Ah], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+20h]
		add	ax, [bp+var_2]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+18h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+22h]
		add	ax, [bp+var_4]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Ah], ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx]
		add	ax, [bp+var_18]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+4],	ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx+2]
		add	ax, [bp+var_1A]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+6],	ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx+20h]
		add	ax, [bp+var_A]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Ch], ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx+22h]
		add	ax, [bp+var_C]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+1Eh], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx]
		add	ax, [bp+var_14]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Ch], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx+2]
		add	ax, [bp+var_16]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+0Eh], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx+20h]
		add	ax, [bp+var_6]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+14h], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx+22h]
		add	ax, [bp+var_8]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+16h], ax
		mov	ax, [bx]
		neg	ax
		mov	si, ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+20h]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+30h], ax
		mov	ax, [bx+2]
		neg	ax
		mov	di, ax
		mov	ax, 2D41h
		push	ax
		mov	ax, [bx+22h]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+32h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bp+var_10]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+38h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bp+var_12]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+3Ah], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+20h]
		sub	ax, [bp+var_2]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+28h], ax
		mov	ax, 393Eh
		push	ax
		mov	ax, [bx+22h]
		sub	ax, [bp+var_4]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+2Ah], ax
		mov	ax, [bx]
		neg	ax
		mov	si, ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bp+var_18]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+3Ch], ax
		mov	ax, [bx+2]
		neg	ax
		mov	di, ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bp+var_1A]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+3Eh], ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx+20h]
		sub	ax, [bp+var_A]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+24h], ax
		mov	ax, 3E17h
		push	ax
		mov	ax, [bx+22h]
		sub	ax, [bp+var_C]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+26h], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bp+var_14]
		add	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+34h], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bp+var_16]
		add	ax, di
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+36h], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx+20h]
		sub	ax, [bp+var_6]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+2Ch], ax
		mov	ax, 3333h
		push	ax
		mov	ax, [bx+22h]
		sub	ax, [bp+var_8]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_2]
		mov	[bx+2Eh], ax
		mov	[bp+var_E], 0

loc_3677B:				; CODE XREF: sub_36412+397j
		mov	si, [bp+var_E]
		mov	cl, 2
		shl	si, cl
		add	si, [bp+arg_2]
		mov	bx, [bp+arg_0]
		mov	di, [bx]
		mov	ax, di
		sub	ax, [si]
		mov	[si+40h], ax
		mov	ax, [bx+2]
		sub	ax, [si+2]
		mov	[si+42h], ax
		add	[si], di
		mov	ax, [bx+2]
		add	[si+2],	ax
		inc	[bp+var_E]
		cmp	[bp+var_E], 10h
		jl	short loc_3677B
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_36412	endp

seg015		ends

; ===========================================================================

; Segment type:	Pure code
seg016		segment	byte public 'CODE' use16
		assume cs:seg016
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_367B2	proc far		; CODE XREF: sub_10786+2AP
					; sub_1293C+4AP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		jmp	short loc_367D9
; ---------------------------------------------------------------------------
		align 2

loc_367B8:				; CODE XREF: sub_367B2+2Dj
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_30F9D
		add	sp, 6
		mov	bx, [bp+arg_6]
		add	[bp+arg_6], 4
		mov	[bx], ax
		mov	[bx+2],	dx
		add	[bp+arg_4], 4

loc_367D9:				; CODE XREF: sub_367B2+3j
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx], 0
		jnz	short loc_367B8
		pop	bp
		retf
sub_367B2	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	word ptr [bp-2], 0
		jmp	short loc_36819
; ---------------------------------------------------------------------------

loc_367F2:				; CODE XREF: seg016:006Fj
		push	word ptr [bp+0Ah]
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		call	sub_30F92
		add	sp, 6
		mov	bx, [bp-2]
		inc	word ptr [bp-2]
		shl	bx, 1
		shl	bx, 1
		mov	si, [bp+0Ch]
		mov	[bx+si], ax
		mov	[bx+si+2], dx
		add	word ptr [bp+0Ah], 4

loc_36819:				; CODE XREF: seg016:0040j
		mov	bx, [bp+0Ah]
		cmp	byte ptr [bx], 0
		jnz	short loc_367F2
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	word ptr [bp-2], 0
		jmp	short loc_3685B
; ---------------------------------------------------------------------------

loc_36834:				; CODE XREF: seg016:00B1j
		push	word ptr [bp+0Ah]
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		call	sub_30FA9
		add	sp, 6
		mov	bx, [bp-2]
		inc	word ptr [bp-2]
		shl	bx, 1
		shl	bx, 1
		mov	si, [bp+0Ch]
		mov	[bx+si], ax
		mov	[bx+si+2], dx
		add	word ptr [bp+0Ah], 4

loc_3685B:				; CODE XREF: seg016:0082j
		mov	bx, [bp+0Ah]
		cmp	byte ptr [bx], 0
		jnz	short loc_36834
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	word ptr [bp-2], 0
		jmp	short loc_3689D
; ---------------------------------------------------------------------------

loc_36876:				; CODE XREF: seg016:00F3j
		push	word ptr [bp+0Ah]
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		call	sub_30F92
		add	sp, 6
		mov	bx, [bp-2]
		inc	word ptr [bp-2]
		shl	bx, 1
		shl	bx, 1
		mov	si, [bp+0Ch]
		mov	[bx+si], ax
		mov	[bx+si+2], dx
		add	word ptr [bp+0Ah], 4

loc_3689D:				; CODE XREF: seg016:00C4j
		mov	bx, [bp+0Ah]
		cmp	byte ptr [bx], 0
		jnz	short loc_36876
		pop	si
		mov	sp, bp
		pop	bp
		retf
seg016		ends

; ===========================================================================

; Segment type:	Pure code
seg017		segment	byte public 'CODE' use16
		assume cs:seg017
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_368AA	proc far		; CODE XREF: sub_368D2+77p

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	word_4498A, 0Fh
		mov	ax, [bp+arg_0]
		mov	word_4498E, ax
		mov	ax, [bp+arg_2]
		mov	word_44990, ax
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		pop	bp
		retf
sub_368AA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_368D2	proc far		; CODE XREF: sub_39E56+246P

var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 2
		mov	word_4498A, 0C201h
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 15h
		push	ax		; int
		call	_int86
		add	sp, 6
		mov	word_4498A, 0
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		mov	ax, word_4498A
		mov	[bp+var_2], ax
		mov	ax, word_4498C
		mov	word_45D7C, ax
		cmp	[bp+var_2], 0
		jz	short loc_36955
		cmp	[bp+arg_0], 140h
		jnz	short loc_36928
		mov	word_4031A, 1
		jmp	short loc_3692E
; ---------------------------------------------------------------------------
		align 2

loc_36928:				; CODE XREF: sub_368D2+4Bj
		mov	word_4031A, 0

loc_3692E:				; CODE XREF: sub_368D2+53j
		mov	ax, [bp+arg_2]
		dec	ax
		push	ax
		mov	ax, [bp+arg_0]
		dec	ax
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	cs
		call	near ptr sub_3695C
		add	sp, 8
		mov	ax, 10h
		push	ax
		push	ax
		push	cs
		call	near ptr sub_368AA
		add	sp, 4
		mov	word_40318, 0FFFFh

loc_36955:				; CODE XREF: sub_368D2+44j
		mov	ax, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_368D2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3695C	proc far		; CODE XREF: sub_23A50+18P
					; sub_23A50+3EP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		mov	word_4498A, 7
		mov	ax, [bp+arg_0]
		mov	cl, byte ptr word_4031A
		shl	ax, cl
		mov	word_4498E, ax
		mov	ax, [bp+arg_4]
		shl	ax, cl
		mov	word_44990, ax
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		mov	word_4498A, 8
		mov	ax, [bp+arg_2]
		mov	word_4498E, ax
		mov	ax, [bp+arg_6]
		mov	word_44990, ax
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		pop	bp
		retf
sub_3695C	endp

; ---------------------------------------------------------------------------
		align 2
		mov	word_4498A, 3
		mov	ax, 921Ah
		push	ax
		push	ax
		mov	ax, 33h	; '3'
		push	ax
		call	_int86
		add	sp, 6
		mov	ax, word_4498C
		mov	word_45D7C, ax
		mov	ax, word_4498E
		mov	cl, byte ptr word_4031A
		shr	ax, cl
		mov	word_44D3C, ax
		mov	ax, word_44990
		mov	word_44D62, ax
		mov	ax, word_45D7C
		retf
; ---------------------------------------------------------------------------
		align 2
		inc	word_4031C
		cmp	word_4031C, 1
		jl	short locret_36A0C
		mov	word_4031C, 1
		mov	word_4498A, 1
		mov	ax, 921Ah
		push	ax
		push	ax
		mov	ax, 33h	; '3'
		push	ax
		call	_int86
		add	sp, 6

locret_36A0C:				; CODE XREF: seg017:014Dj
		retf
; ---------------------------------------------------------------------------
		align 2
		dec	word_4031C
		jnz	short locret_36A2B
		mov	word_4498A, 2
		mov	ax, 921Ah
		push	ax
		push	ax
		mov	ax, 33h	; '3'
		push	ax
		call	_int86
		add	sp, 6

locret_36A2B:				; CODE XREF: seg017:0172j
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36A2C	proc far		; CODE XREF: sub_23A50+28P

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		mov	word_4498A, 4
		mov	ax, [bp+arg_0]
		mov	word_44D3C, ax
		mov	cl, byte ptr word_4031A
		shl	ax, cl
		mov	word_4498E, ax
		mov	ax, [bp+arg_2]
		mov	word_44990, ax
		mov	word_44D62, ax
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		pop	bp
		retf
sub_36A2C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36A60	proc far		; CODE XREF: sub_21B7A+6E9P
					; sub_22698+B1P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	word_4498A, 3
		mov	ax, 921Ah
		push	ax
		push	ax		; union	REGS *
		mov	ax, 33h	; '3'
		push	ax		; int
		call	_int86
		add	sp, 6
		mov	bx, [bp+arg_0]
		mov	ax, word_4498C
		mov	[bx], ax
		mov	bx, [bp+arg_2]
		mov	ax, word_4498E
		mov	cl, byte ptr word_4031A
		shr	ax, cl
		mov	[bx], ax
		mov	bx, [bp+arg_4]
		mov	ax, word_44990
		mov	[bx], ax
		pop	bp
		retf
sub_36A60	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	word_4498A, 7
		mov	ax, [bp+6]
		mov	cl, byte ptr word_4031A
		sar	ax, cl
		mov	word_4498E, ax
		mov	ax, [bp+8]
		sar	ax, cl
		mov	word_44990, ax
		mov	ax, 921Ah
		push	ax
		push	ax
		mov	ax, 33h	; '3'
		push	ax
		call	_int86
		add	sp, 6
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	word_4498A, 8
		mov	ax, [bp+6]
		mov	word_4498E, ax
		mov	ax, [bp+8]
		mov	word_44990, ax
		mov	ax, 921Ah
		push	ax
		push	ax
		mov	ax, 33h	; '3'
		push	ax
		call	_int86
		add	sp, 6
		pop	bp
		retf
seg017		ends

; ---------------------------------------------------------------------------
; ===========================================================================

; Segment type:	Pure code
seg018		segment	byte public 'CODE' use16
		assume cs:seg018
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_36AF4	proc far		; CODE XREF: _main+589P
		mov	ax, 40h	; '@'
		mov	es, ax
		assume es:nothing
		or	byte ptr es:17h, 20h
		call	sub_30A35
		retf
sub_36AF4	endp


; =============== S U B	R O U T	I N E =======================================


sub_36B05	proc far		; CODE XREF: sub_39E56+DP
		mov	ax, 40h	; '@'
		mov	es, ax
		and	byte ptr es:17h, 0DFh
		call	sub_30A35
		retf
sub_36B05	endp

seg018		ends

; ===========================================================================

; Segment type:	Pure code
seg019		segment	byte public 'CODE' use16
		assume cs:seg019
		;org 6
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36B16	proc far		; CODE XREF: sub_36EC0+10P

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		mov	bx, [bp+arg_0]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	[bp+var_C], ax
		mov	[bp+var_A], dx
		mov	si, ax
		push	[bp+arg_4]
		mov	ax, [bx+4]
		sub	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, si
		mov	[bp+var_8], ax
		push	[bp+arg_4]
		mov	bx, [bp+arg_0]
		mov	ax, [bx+6]
		sub	ax, [bx+2]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	cx, [bx+2]
		add	cx, ax
		mov	[bp+var_6], cx
		push	[bp+arg_4]
		mov	ax, [bx+8]
		sub	ax, si
		push	ax
		call	sub_30044
		add	sp, 4
		add	ax, si
		mov	[bp+var_4], ax
		push	[bp+arg_4]
		mov	bx, [bp+arg_0]
		mov	ax, [bx+0Ah]
		sub	ax, [bx+2]
		push	ax
		call	sub_30044
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	cx, [bx+2]
		add	cx, ax
		mov	[bp+var_2], cx
		push	[bp+arg_2]
		push	bx
		call	sub_36246
		add	sp, 4
		mov	ax, [bp+arg_2]
		add	ax, 40h	; '@'
		push	ax
		lea	ax, [bp+var_C]
		push	ax
		call	sub_36246
		add	sp, 4
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_36B16	endp

seg019		ends

; ===========================================================================

; Segment type:	Pure code
seg020		segment	byte public 'CODE' use16
		assume cs:seg020
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36BBE	proc far		; CODE XREF: sub_33072+C4P

var_80		= byte ptr -80h
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 80h
		lea	ax, [bp+var_80]
		push	ax
		push	[bp+arg_0]
		call	sub_36412
		add	sp, 4
		lea	ax, [bp+var_80]
		push	ax
		mov	ax, 20h	; ' '
		push	ax
		push	[bp+arg_2]
		call	sub_317C1
		mov	sp, bp
		pop	bp
		retf
sub_36BBE	endp

seg020		ends

; ===========================================================================

; Segment type:	Pure code
seg021		segment	byte public 'CODE' use16
		assume cs:seg021
		;org 8
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36BE8	proc far		; CODE XREF: sub_1A0F4+1DD4P
					; sub_26B4A+47P

var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	di
		push	si
		mov	ax, [bp+arg_0]
		cwd
		sub	ax, dx
		sar	ax, 1
		jmp	short loc_36C6B
; ---------------------------------------------------------------------------

loc_36BFA:				; CODE XREF: sub_36BE8+61j
		mov	si, [bp+var_8]
		shl	si, 1
		mov	bx, [bp+arg_2]
		mov	ax, [bx+si]
		mov	[bp+var_2], ax
		mov	di, [bp+var_8]
		add	di, [bp+var_4]
		shl	di, 1
		mov	ax, [bx+di]
		mov	[bx+si], ax
		mov	ax, [bp+var_2]
		mov	[bx+di], ax
		mov	bx, [bp+arg_4]
		mov	ax, [bx+si]
		mov	[bp+var_2], ax
		mov	ax, [bx+di]
		mov	[bx+si], ax
		mov	ax, [bp+var_2]
		mov	[bx+di], ax
		mov	ax, [bp+var_4]
		sub	[bp+var_8], ax

loc_36C2F:				; CODE XREF: sub_36BE8+77j
		cmp	[bp+var_8], 0
		jl	short loc_36C4B
		mov	bx, [bp+var_8]
		shl	bx, 1
		mov	si, [bp+arg_2]
		mov	ax, [bx+si]
		mov	bx, [bp+var_8]
		add	bx, [bp+var_4]
		shl	bx, 1
		cmp	[bx+si], ax
		jg	short loc_36BFA

loc_36C4B:				; CODE XREF: sub_36BE8+4Bj
		inc	[bp+var_6]

loc_36C4E:				; CODE XREF: sub_36BE8+8Dj
		mov	ax, [bp+arg_0]
		cmp	[bp+var_6], ax
		jge	short loc_36C62
		mov	ax, [bp+var_6]
		sub	ax, [bp+var_4]
		mov	[bp+var_8], ax
		jmp	short loc_36C2F
; ---------------------------------------------------------------------------
		align 2

loc_36C62:				; CODE XREF: sub_36BE8+6Cj
		mov	cx, 2
		mov	ax, [bp+var_4]
		cwd
		idiv	cx

loc_36C6B:				; CODE XREF: sub_36BE8+10j
		mov	[bp+var_4], ax
		or	ax, ax
		jle	short loc_36C78
		mov	[bp+var_6], ax
		jmp	short loc_36C4E
; ---------------------------------------------------------------------------
		align 2

loc_36C78:				; CODE XREF: sub_36BE8+88j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_36BE8	endp

seg021		ends

; ===========================================================================

; Segment type:	Pure code
seg022		segment	byte public 'CODE' use16
		assume cs:seg022
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36C7E	proc far		; CODE XREF: sub_25FF6+1C2P

var_11A		= word ptr -11Ah
var_118		= word ptr -118h
var_116		= word ptr -116h
var_114		= word ptr -114h
var_112		= word ptr -112h
var_110		= word ptr -110h
var_10E		= word ptr -10Eh
var_10C		= word ptr -10Ch
var_10A		= byte ptr -10Ah
var_D2		= byte ptr -0D2h
var_CE		= byte ptr -0CEh
var_92		= byte ptr -92h
var_8E		= word ptr -8Eh
var_8C		= word ptr -8Ch
var_4E		= byte ptr -4Eh
var_A		= byte ptr -0Ah
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 11Ah
		push	si
		push	[bp+arg_2]
		lea	ax, [bp+var_10E]
		push	ax
		push	[bp+arg_0]
		call	sub_36EC0
		add	sp, 6
		lea	ax, [bp+var_10E]
		mov	[bp+var_2], ax
		mov	[bp+var_110], 0

loc_36CA6:				; CODE XREF: sub_36C7E+62j
		mov	bx, [bp+var_2]
		push	word ptr [bx+82h]
		push	word ptr [bx+80h]
		push	word ptr [bx+86h]
		push	word ptr [bx+84h]
		push	word ptr [bx+6]
		push	word ptr [bx+4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		mov	ax, 4
		push	ax
		push	[bp+arg_4]
		call	sub_317EE
		add	sp, 14h
		add	[bp+var_2], 4
		inc	[bp+var_110]
		cmp	[bp+var_110], 0Fh
		jl	short loc_36CA6
		mov	bx, [bp+var_2]
		push	word ptr [bx+82h]
		push	word ptr [bx+80h]
		push	[bp+var_8C]
		push	[bp+var_8E]
		push	[bp+var_10C]
		push	[bp+var_10E]
		push	word ptr [bx+2]
		push	word ptr [bx]
		mov	ax, 4
		push	ax
		push	[bp+arg_4]
		call	sub_317EE
		add	sp, 14h
		lea	ax, [bp+var_10A]
		mov	[bp+var_4], ax
		mov	ax, [bp+var_10C]
		mov	[bp+var_118], ax
		mov	[bp+var_11A], 0
		mov	[bp+var_110], 1

loc_36D2C:				; CODE XREF: sub_36C7E+D6j
		mov	bx, [bp+var_4]
		mov	ax, [bp+var_118]
		cmp	[bx+2],	ax
		jge	short loc_36D47
		mov	ax, [bx+2]
		mov	[bp+var_118], ax
		mov	ax, [bp+var_110]
		mov	[bp+var_11A], ax

loc_36D47:				; CODE XREF: sub_36C7E+B8j
		add	[bp+var_4], 4
		inc	[bp+var_110]
		cmp	[bp+var_110], 10h
		jl	short loc_36D2C
		mov	si, [bp+var_11A]
		mov	cl, 2
		shl	si, cl
		add	si, bp
		lea	ax, [si-10Eh]
		mov	[bp+var_4], ax
		lea	ax, [si-0CEh]
		mov	[bp+var_114], ax
		lea	ax, [bp+var_4E]
		mov	[bp+var_6], ax
		lea	ax, [bp+var_A]
		mov	[bp+var_116], ax
		mov	ax, [bp+var_11A]
		mov	[bp+var_112], ax
		mov	[bp+var_110], 0
		jmp	short loc_36DA2
; ---------------------------------------------------------------------------

loc_36D8C:				; CODE XREF: sub_36C7E+156j
		add	[bp+var_4], 4
		add	[bp+var_114], 4

loc_36D95:				; CODE XREF: sub_36C7E+16Dj
		add	[bp+var_6], 4
		sub	[bp+var_116], 4
		inc	[bp+var_110]

loc_36DA2:				; CODE XREF: sub_36C7E+10Cj
		cmp	[bp+var_110], 8
		jg	short loc_36DEE
		mov	bx, [bp+var_6]
		mov	si, [bp+var_4]
		mov	ax, [si]
		mov	[bx], ax
		mov	ax, [si+2]
		mov	[bx+2],	ax
		mov	bx, [bp+var_116]
		mov	si, [bp+var_114]
		mov	ax, [si]
		mov	[bx], ax
		mov	ax, [si+2]
		mov	[bx+2],	ax
		inc	[bp+var_112]
		cmp	[bp+var_112], 10h
		jl	short loc_36D8C
		lea	ax, [bp+var_10E]
		mov	[bp+var_4], ax
		lea	ax, [bp+var_CE]
		mov	[bp+var_114], ax
		mov	[bp+var_112], 0
		jmp	short loc_36D95
; ---------------------------------------------------------------------------
		align 2

loc_36DEE:				; CODE XREF: sub_36C7E+129j
		lea	ax, [bp+var_4E]
		push	ax
		mov	ax, 12h
		push	ax
		push	[bp+arg_6]
		call	sub_317C1
		add	sp, 6
		mov	si, [bp+var_11A]
		mov	cl, 2
		shl	si, cl
		add	si, bp
		lea	ax, [si-10Eh]
		mov	[bp+var_4], ax
		lea	ax, [si-0CEh]
		mov	[bp+var_114], ax
		lea	ax, [bp+var_4E]
		mov	[bp+var_6], ax
		lea	ax, [bp+var_A]
		mov	[bp+var_116], ax
		mov	ax, [bp+var_11A]
		mov	[bp+var_112], ax
		mov	[bp+var_110], 0
		jmp	short loc_36E4E
; ---------------------------------------------------------------------------
		align 2

loc_36E38:				; CODE XREF: sub_36C7E+1FDj
		sub	[bp+var_4], 4
		sub	[bp+var_114], 4

loc_36E41:				; CODE XREF: sub_36C7E+214j
		add	[bp+var_6], 4
		sub	[bp+var_116], 4
		inc	[bp+var_110]

loc_36E4E:				; CODE XREF: sub_36C7E+1B7j
		cmp	[bp+var_110], 9
		jge	short loc_36E94
		mov	bx, [bp+var_6]
		mov	si, [bp+var_4]
		mov	ax, [si]
		mov	[bx], ax
		mov	ax, [si+2]
		mov	[bx+2],	ax
		mov	bx, [bp+var_116]
		mov	si, [bp+var_114]
		mov	ax, [si]
		mov	[bx], ax
		mov	ax, [si+2]
		mov	[bx+2],	ax
		dec	[bp+var_112]
		jns	short loc_36E38
		lea	ax, [bp+var_D2]
		mov	[bp+var_4], ax
		lea	ax, [bp+var_92]
		mov	[bp+var_114], ax
		mov	[bp+var_112], 10h
		jmp	short loc_36E41
; ---------------------------------------------------------------------------

loc_36E94:				; CODE XREF: sub_36C7E+1D5j
		lea	ax, [bp+var_4E]
		push	ax
		mov	ax, 12h
		push	ax
		push	[bp+arg_6]
		call	sub_317C1
		add	sp, 6
		lea	ax, [bp+var_CE]
		push	ax
		mov	ax, 10h
		push	ax
		push	[bp+arg_8]
		call	sub_317C1
		add	sp, 6
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_36C7E	endp

seg022		ends

; ===========================================================================

; Segment type:	Pure code
seg023		segment	byte public 'CODE' use16
		assume cs:seg023
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36EC0	proc far		; CODE XREF: sub_36C7E+13P

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_36B16
		add	sp, 6
		mov	bx, [bp+arg_0]
		mov	ax, [bx+0Ch]
		sub	ax, [bx]
		mov	[bp+var_8], ax
		mov	ax, [bx+0Eh]
		sub	ax, [bx+2]
		mov	[bp+var_A], ax
		mov	ax, [bp+arg_2]
		mov	[bp+var_2], ax
		add	ax, 80h	; 'Ä'
		mov	[bp+var_4], ax
		mov	[bp+var_6], 0

loc_36EFD:				; CODE XREF: sub_36EC0+62j
		mov	bx, [bp+var_4]
		mov	si, [bp+var_2]
		mov	ax, [si]
		add	ax, [bp+var_8]
		mov	[bx], ax
		mov	ax, [si+2]
		add	ax, [bp+var_A]
		mov	[bx+2],	ax
		add	[bp+var_2], 4
		add	[bp+var_4], 4
		inc	[bp+var_6]
		cmp	[bp+var_6], 10h
		jl	short loc_36EFD
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_36EC0	endp

seg023		ends

; ===========================================================================

; Segment type:	Pure code
seg024		segment	byte public 'CODE' use16
		assume cs:seg024
		;org 9
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36F2A	proc far		; CODE XREF: sub_14DA2+13BAP
					; sub_261FA+34P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	[bp+arg_2]
		call	sub_3272C
		add	sp, 2
		mov	[bp+var_2], ax
		push	[bp+arg_2]
		call	sub_326DE
		mov	[bp+var_4], ax
		mov	bx, [bp+arg_0]
		mov	word ptr [bx], 4000h
		mov	word ptr [bx+2], 0
		mov	word ptr [bx+4], 0
		mov	word ptr [bx+6], 0
		mov	ax, [bp+var_2]
		mov	[bx+8],	ax
		mov	ax, [bp+var_4]
		mov	[bx+0Ah], ax
		mov	word ptr [bx+0Ch], 0
		neg	ax
		mov	[bx+0Eh], ax
		mov	ax, [bp+var_2]
		mov	[bx+10h], ax
		mov	sp, bp
		pop	bp
		retf
sub_36F2A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36F80	proc far		; CODE XREF: sub_14DA2+553P
					; sub_14DA2+12F8P ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	[bp+arg_2]
		call	sub_3272C
		add	sp, 2
		mov	[bp+var_2], ax
		push	[bp+arg_2]
		call	sub_326DE
		mov	[bp+var_4], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_2]
		mov	[bx], ax
		mov	word ptr [bx+2], 0
		mov	ax, [bp+var_4]
		neg	ax
		mov	[bx+4],	ax
		mov	word ptr [bx+6], 0
		mov	word ptr [bx+8], 4000h
		mov	word ptr [bx+0Ah], 0
		mov	ax, [bp+var_4]
		mov	[bx+0Ch], ax
		mov	word ptr [bx+0Eh], 0
		mov	ax, [bp+var_2]
		mov	[bx+10h], ax
		mov	sp, bp
		pop	bp
		retf
sub_36F80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_36FD8	proc far		; CODE XREF: sub_261FA+1BP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	[bp+arg_2]
		call	sub_3272C
		add	sp, 2
		mov	[bp+var_2], ax
		push	[bp+arg_2]
		call	sub_326DE
		mov	[bp+var_4], ax
		mov	bx, [bp+arg_0]
		mov	ax, [bp+var_2]
		mov	[bx], ax
		mov	ax, [bp+var_4]
		mov	[bx+2],	ax
		mov	word ptr [bx+4], 0
		neg	ax
		mov	[bx+6],	ax
		mov	ax, [bp+var_2]
		mov	[bx+8],	ax
		mov	word ptr [bx+0Ah], 0
		mov	word ptr [bx+0Ch], 0
		mov	word ptr [bx+0Eh], 0
		mov	word ptr [bx+10h], 4000h
		mov	sp, bp
		pop	bp
		retf
sub_36FD8	endp

seg024		ends

; ===========================================================================

; Segment type:	Pure code
seg025		segment	byte public 'CODE' use16
		assume cs:seg025
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3702E	proc far		; CODE XREF: sub_2A2BC+C3BP
					; sub_2A2BC+100BP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		mov	ax, [bp+arg_4]
		sub	ax, [bp+arg_0]
		inc	ax
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_6]
		sub	ax, [bp+arg_2]
		dec	ax
		mov	[bp+var_4], ax
		cmp	[bp+var_2], 0
		jle	short loc_3707F
		push	[bp+arg_8]
		mov	ax, 1
		push	ax
		push	[bp+var_2]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_35B76
		add	sp, 0Ah
		push	[bp+arg_8]
		mov	ax, 1
		push	ax
		push	[bp+var_2]
		push	[bp+arg_6]
		push	[bp+arg_0]
		call	sub_35B76
		add	sp, 0Ah

loc_3707F:				; CODE XREF: sub_3702E+1Fj
		cmp	[bp+var_4], 0
		jle	short loc_370B5
		mov	si, [bp+arg_2]
		inc	si
		push	[bp+arg_8]
		push	[bp+var_4]
		mov	ax, 1
		push	ax
		push	si
		push	[bp+arg_0]
		call	sub_35B76
		add	sp, 0Ah
		push	[bp+arg_8]
		push	[bp+var_4]
		mov	ax, 1
		push	ax
		push	si
		push	[bp+arg_4]
		call	sub_35B76
		add	sp, 0Ah

loc_370B5:				; CODE XREF: sub_3702E+55j
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3702E	endp

seg025		ends

; ===========================================================================

; Segment type:	Pure code
seg026		segment	byte public 'CODE' use16
		assume cs:seg026
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_370BA	proc far		; CODE XREF: sub_39AD4+4FP
					; sub_39AD4+63P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 61h	; 'a'
		jl	short loc_370CD
		cmp	[bp+arg_0], 7Ah	; 'z'
		jg	short loc_370CD
		sub	[bp+arg_0], 20h	; ' '

loc_370CD:				; CODE XREF: sub_370BA+7j sub_370BA+Dj
		mov	ax, [bp+arg_0]
		pop	bp
		retf
sub_370BA	endp

seg026		ends

; ===========================================================================

; Segment type:	Pure code
seg027		segment	byte public 'CODE' use16
		assume cs:seg027
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_370D2	proc far		; CODE XREF: sub_26C3C+D3P
					; sub_26C3C+100P ...

var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	[bp+arg_8]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_39BDC
		add	sp, 6
		mov	word ptr [bp+var_C], ax
		mov	word ptr [bp+var_C+2], dx
		or	dx, ax
		jnz	short loc_370FA

loc_370F3:				; CODE XREF: sub_370D2+42j
		sub	ax, ax
		cwd
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_370FA:				; CODE XREF: sub_370D2+1Fj
		mov	ax, 4E94h
		push	ax
		push	word ptr [bp+var_C+2]
		push	word ptr [bp+var_C]
		call	sub_39BDC
		add	sp, 6
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		or	ax, dx
		jz	short loc_370F3
		les	bx, [bp+var_4]
		cmp	byte ptr es:[bx+5], 1
		jz	short loc_37172
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	word ptr [bp+var_C+2]
		push	word ptr [bp+var_C]
		push	cs
		call	near ptr sub_37EC0
		add	sp, 8
		push	word ptr [bp+var_C+2]
		push	word ptr [bp+var_C]
		push	cs
		call	near ptr sub_38254
		add	sp, 4
		les	bx, [bp+var_4]
		mov	byte ptr es:[bx+5], 1
		les	bx, [bp+var_C]
		mov	al, es:[bx+4]
		sub	ah, ah
		mov	cl, 3
		shl	ax, cl
		add	ax, bx
		mov	dx, es
		inc	ax
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		lea	ax, [bp+var_8]
		push	ss
		push	ax
		push	word ptr [bp+var_4+2]
		push	word ptr [bp+var_4]
		push	cs
		call	near ptr sub_38528
		add	sp, 8

loc_37172:				; CODE XREF: sub_370D2+4Cj
		mov	ax, word ptr [bp+var_4]
		mov	dx, word ptr [bp+var_4+2]
		mov	sp, bp
		pop	bp
		retf
sub_370D2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3717C	proc far		; CODE XREF: sub_297FC+4DP

var_6		= dword	ptr -6
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		mov	word_4063A, 1
		push	cs
		call	near ptr sub_3736A
		mov	ax, word ptr [bp+arg_0]
		or	ax, word ptr [bp+arg_0+2]
		jz	short loc_3720F
		les	bx, [bp+arg_0]
		cmp	byte ptr es:[bx+4], 0
		jnz	short loc_3720F
		cmp	byte ptr es:[bx+5], 1
		jnz	short loc_3720F
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 18h
		mov	word ptr [bp+var_6+2], dx
		mov	word ptr [bp+var_6], ax
		call	[bp+var_6]
		mov	word_44D48, 0
		mov	word_454BA, 80h	; 'Ä'
		les	bx, [bp+arg_0]
		mov	al, es:[bx+6]
		sub	ah, ah
		shl	ax, 1
		shl	ax, 1
		add	ax, 7
		mov	[bp+var_2], ax
		mov	bx, ax
		inc	[bp+var_2]
		mov	si, word ptr [bp+arg_0]
		mov	al, es:[bx+si]
		mov	byte_44290, al
		mov	ax, 20h	; ' '
		push	ax
		mov	al, byte_45950
		sub	ah, ah
		push	ax
		push	[bp+var_2]
		push	es
		push	si
		mov	al, byte_44290
		dec	ax
		push	ax
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_37DBC
		add	sp, 0Eh
		mov	byte_40632, 1
		mov	word_4063A, 0

loc_3720F:				; CODE XREF: sub_3717C+17j
					; sub_3717C+21j ...
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3717C	endp

; ---------------------------------------------------------------------------
		db 2 dup(90h)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37216	proc far		; CODE XREF: sub_21B7A+28EP
					; sub_29B32+12P ...

var_C		= word ptr -0Ch
var_A		= dword	ptr -0Ah
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	di
		push	si
		mov	byte_40630, 1
		mov	word_4063A, 1
		cmp	byte_40634, 0
		jnz	short loc_37262
		sub	si, si
		mov	di, 8224h

loc_37235:				; CODE XREF: sub_37216+44j
		cmp	byte_40633, 1
		jz	short loc_37241
		cmp	si, 10h
		jge	short loc_37253

loc_37241:				; CODE XREF: sub_37216+24j
		mov	al, [di]
		mov	[si+714Eh], al
		sub	ax, ax
		push	ax
		push	si
		call	sub_38C4C
		add	sp, 4

loc_37253:				; CODE XREF: sub_37216+29j
		add	di, 4Ch	; 'L'
		inc	si
		cmp	si, 18h
		jl	short loc_37235
		mov	[bp+var_2], si
		jmp	short loc_37286
; ---------------------------------------------------------------------------
		align 2

loc_37262:				; CODE XREF: sub_37216+18j
		mov	byte_40639, 0
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 6

loc_37286:				; CODE XREF: sub_37216+49j
		cmp	byte_40634, 0
		jnz	short loc_372E7
		mov	[bp+var_2], 10h
		mov	di, 0A2B6h
		mov	[bp+var_C], 10h

loc_3729A:				; CODE XREF: sub_37216+B2j
		mov	si, di
		push	word ptr [si+12h]
		push	word ptr [si+10h]
		push	word ptr [si+2Ah]
		push	si
		mov	al, [si+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 27h	; '''
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 0Ah
		add	di, 2Eh	; '.'
		dec	[bp+var_C]
		jnz	short loc_3729A
		mov	[bp+var_4], si
		mov	ax, 0A2B6h
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 30h	; '0'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 2

loc_372E7:				; CODE XREF: sub_37216+75j
		mov	word_4063A, 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_37216	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_372F4	proc far		; CODE XREF: sub_21B7A:loc_21E49P
					; sub_29B32+253P ...

var_6		= dword	ptr -6
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		mov	byte_40630, 1
		mov	word_4063A, 1
		cmp	byte_40634, 0
		jnz	short loc_37336
		sub	si, si

loc_3730F:				; CODE XREF: sub_372F4+3Bj
		cmp	byte_40633, 1
		jz	short loc_3731B
		cmp	si, 10h
		jge	short loc_3732B

loc_3731B:				; CODE XREF: sub_372F4+20j
		mov	al, [si+714Eh]
		sub	ah, ah
		push	ax
		push	si
		call	sub_38C4C
		add	sp, 4

loc_3732B:				; CODE XREF: sub_372F4+25j
		inc	si
		cmp	si, 18h
		jl	short loc_3730F
		mov	[bp+var_2], si
		jmp	short loc_3735A
; ---------------------------------------------------------------------------

loc_37336:				; CODE XREF: sub_372F4+17j
		mov	byte_40639, 64h	; 'd'
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_6+2], dx
		mov	word ptr [bp+var_6], ax
		call	[bp+var_6]
		add	sp, 6

loc_3735A:				; CODE XREF: sub_372F4+40j
		mov	word_4063A, 0
		mov	byte_40630, 0
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_372F4	endp


; =============== S U B	R O U T	I N E =======================================


sub_3736A	proc far		; CODE XREF: sub_3717C+Ep
					; sub_3776C+B5p
		mov	word_4063A, 1
		mov	byte_40632, 0
		mov	ax, 0Fh
		push	ax
		sub	ax, ax
		push	ax
		call	sub_39966
		add	sp, 4
		sub	ax, ax
		push	ax
		mov	al, byte_45950
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		mov	ax, 0Fh
		push	ax
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_37DBC
		add	sp, 0Eh
		mov	byte_44290, 0
		call	sub_39700
		mov	word_4063A, 0
		retf
sub_3736A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_373B2	proc far		; CODE XREF: sub_373E8+Fp
		mov	byte_40631, 1
		retf
sub_373B2	endp


; =============== S U B	R O U T	I N E =======================================


sub_373B8	proc far		; CODE XREF: sub_373E8+8p
		mov	byte_40631, 0
		mov	word_4063A, 1
		cmp	byte_44290, 0
		jz	short loc_373DC
		mov	al, byte_44290
		sub	ah, ah
		dec	ax
		push	ax
		sub	ax, ax
		push	ax
		call	sub_39966
		add	sp, 4

loc_373DC:				; CODE XREF: sub_373B8+10j
		call	sub_39700
		mov	word_4063A, 0
		retf
sub_373B8	endp


; =============== S U B	R O U T	I N E =======================================


sub_373E8	proc far		; CODE XREF: sub_29E98+AP
					; sub_39E56+279P
		cmp	byte_40631, 1
		jnz	short loc_373F6
		push	cs
		call	near ptr sub_373B8
		sub	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_373F6:				; CODE XREF: sub_373E8+5j
		push	cs
		call	near ptr sub_373B2
		mov	ax, 1
		retf
sub_373E8	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		cmp	byte_40630, 1
		jz	short loc_37414
		cmp	byte_40631, 0
		jnz	short loc_3741E

loc_37414:				; CODE XREF: seg027:033Bj seg027:035Aj ...
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_3741E:				; CODE XREF: seg027:0342j
		mov	word ptr [bp-2], 0
		mov	al, byte_44290
		sub	ah, ah
		or	ax, ax
		jz	short loc_37414
		mov	di, ax
		mov	si, 81FCh
		mov	cx, [bp-2]

loc_37434:				; CODE XREF: seg027:037Ej
		mov	ax, [si]
		or	ax, [si+2]
		jz	short loc_37446
		sub	ax, ax
		mov	[bp-2],	cx
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_37446:				; CODE XREF: seg027:0369j
		add	si, 4Ch	; 'L'
		inc	cx
		mov	ax, cx
		cmp	ax, di
		jb	short loc_37434
		mov	[bp-2],	cx
		jmp	short loc_37414
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	ax, 40h	; '@'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_374FA
		add	sp, 8
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37470	proc far		; CODE XREF: sub_26C3C+230P

var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		cmp	[bp+arg_0], 0FFFFh
		jnz	short loc_374CE
		mov	si, 10h
		mov	di, 86BCh
		mov	cx, [bp+arg_0]

loc_37487:				; CODE XREF: sub_37470+33j
		cmp	cx, 0FFFFh
		jnz	short loc_374A5
		mov	ax, [di]
		or	ax, [di+2]
		jnz	short loc_3749C
		cmp	byte ptr [si-59D6h], 0
		jnz	short loc_3749C
		mov	cx, si

loc_3749C:				; CODE XREF: sub_37470+21j
					; sub_37470+28j
		add	di, 4Ch	; 'L'
		inc	si
		cmp	si, 17h
		jle	short loc_37487

loc_374A5:				; CODE XREF: sub_37470+1Aj
		mov	[bp+var_2], si
		mov	[bp+arg_0], cx
		cmp	cx, 0FFFFh
		jz	short loc_374C5
		mov	bx, cx
		mov	byte ptr [bx-59D6h], 1
		mov	ax, 4Ch	; 'L'
		imul	cx

loc_374BC:				; CODE XREF: sub_37470+6Bj
		mov	bx, ax
		mov	al, [bp+arg_2]
		mov	[bx-7DE0h], al

loc_374C5:				; CODE XREF: sub_37470+3Ej
		mov	ax, [bp+arg_0]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_374CE:				; CODE XREF: sub_37470+Cj
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx-59D6h], 1
		mov	ax, 4Ch	; 'L'
		imul	bx
		jmp	short loc_374BC
sub_37470	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_374DE	proc far		; CODE XREF: sub_26BD5+EP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 0FFFFh
		jle	short loc_374F7
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx-59D6h], 0
		push	bx
		push	cs
		call	near ptr sub_3764A
		add	sp, 2

loc_374F7:				; CODE XREF: sub_374DE+7j
		pop	bp
		retf
sub_374DE	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_374FA	proc far		; CODE XREF: seg027:0398p

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= byte ptr  0Ch

		push	bp
		mov	bp, sp
		mov	al, byte_45948
		sub	ah, ah
		push	ax
		mov	al, [bp+arg_6]
		push	ax
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_3751A
		add	sp, 0Ah
		pop	bp
		retf
sub_374FA	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3751A	proc far		; CODE XREF: seg007:06A8P seg007:06F4P ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah
arg_6		= byte ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	di
		push	si
		cmp	byte_40633, 0
		jnz	short loc_37532

loc_37529:				; CODE XREF: sub_3751A+1Ej
					; sub_3751A+28j ...
		mov	ax, 0FFFFh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_37532:				; CODE XREF: sub_3751A+Dj
		mov	ax, word ptr [bp+arg_0]
		or	ax, word ptr [bp+arg_0+2]
		jz	short loc_37529
		les	bx, [bp+arg_0]
		cmp	byte ptr es:[bx+5], 1
		jnz	short loc_37529
		cmp	byte_45948, 0
		jz	short loc_37568
		mov	al, byte_45948
		sub	ah, ah
		mov	cx, ax
		mov	ax, [bp+arg_8]
		mov	dx, cx
		mov	cl, 7
		shl	ax, cl
		mov	cx, dx
		sub	dx, dx
		div	cx
		dec	ax
		mov	[bp+arg_8], ax
		jmp	short loc_3756D
; ---------------------------------------------------------------------------
		align 2

loc_37568:				; CODE XREF: sub_3751A+2Fj
		mov	[bp+arg_8], 0

loc_3756D:				; CODE XREF: sub_3751A+4Bj
		cmp	[bp+arg_4], 0FFFFh
		jz	short loc_37576
		jmp	loc_37609
; ---------------------------------------------------------------------------

loc_37576:				; CODE XREF: sub_3751A+57j
		mov	si, 10h
		mov	di, 86BCh
		mov	cx, [bp+arg_4]

loc_3757F:				; CODE XREF: sub_3751A+81j
		cmp	cx, 0FFFFh
		jnz	short loc_3759D
		mov	ax, [di]
		or	ax, [di+2]
		jnz	short loc_37594
		cmp	byte ptr [si-59D6h], 0
		jnz	short loc_37594
		mov	cx, si

loc_37594:				; CODE XREF: sub_3751A+6Fj
					; sub_3751A+76j
		add	di, 4Ch	; 'L'
		inc	si
		cmp	si, 17h
		jle	short loc_3757F

loc_3759D:				; CODE XREF: sub_3751A+68j
		mov	[bp+var_4], si
		mov	[bp+arg_4], cx
		cmp	cx, 0FFFFh
		jnz	short loc_37609
		mov	cx, 0FFh
		mov	di, 10h
		mov	si, 86E0h
		mov	dx, [bp+arg_4]

loc_375B4:				; CODE XREF: sub_3751A+B8j
		mov	al, [si]
		sub	ah, ah
		cmp	ax, cx
		ja	short loc_375CB
		mov	ax, 0A62Ah
		or	ax, ax
		jnz	short loc_375CB
		mov	al, [si]
		sub	ah, ah
		mov	cx, ax
		mov	dx, di

loc_375CB:				; CODE XREF: sub_3751A+A0j
					; sub_3751A+A7j
		add	si, 4Ch	; 'L'
		inc	di
		cmp	di, 17h
		jl	short loc_375B4
		mov	[bp+var_4], di
		mov	[bp+arg_4], dx
		mov	[bp+var_6], cx
		cmp	dx, 0FFFFh
		jz	short loc_37609
		mov	ax, 4Ch	; 'L'
		imul	dx
		mov	bx, ax
		mov	al, [bp+arg_6]
		cmp	[bx-7DE0h], al
		ja	short loc_37609
		mov	bx, [bp+arg_4]
		cmp	byte ptr [bx-59D6h], 0
		jz	short loc_37601
		mov	byte ptr [bx-59D6h], 0

loc_37601:				; CODE XREF: sub_3751A+E0j
		push	bx
		push	cs
		call	near ptr sub_3764A
		add	sp, 2

loc_37609:				; CODE XREF: sub_3751A+59j
					; sub_3751A+8Cj ...
		cmp	[bp+arg_4], 0FFFFh
		jnz	short loc_37612
		jmp	loc_37529
; ---------------------------------------------------------------------------

loc_37612:				; CODE XREF: sub_3751A+F3j
		les	bx, [bp+arg_0]
		mov	al, es:[bx+6]
		sub	ah, ah
		shl	ax, 1
		shl	ax, 1
		add	ax, 8
		mov	[bp+var_2], ax
		mov	al, [bp+arg_6]
		sub	ah, ah
		push	ax
		push	[bp+arg_8]
		push	[bp+var_2]
		push	es
		push	bx
		push	[bp+arg_4]
		push	[bp+arg_4]
		push	cs
		call	near ptr sub_37DBC
		add	sp, 0Eh
		mov	ax, [bp+arg_4]
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_3751A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3764A	proc far		; CODE XREF: seg007:0547P
					; sub_273B0+25P ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 10h
		jl	short loc_37694
		cmp	[bp+arg_0], 17h
		jg	short loc_37694
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		sub	ax, ax
		mov	[bx-7E02h], ax
		mov	[bx-7E04h], ax
		push	[bp+arg_0]
		push	[bp+arg_0]
		call	sub_39966
		add	sp, 4
		sub	ax, ax
		push	ax
		mov	al, byte_45948
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	[bp+arg_0]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_37DBC
		add	sp, 0Eh

loc_37694:				; CODE XREF: sub_3764A+7j sub_3764A+Dj
		pop	bp
		retf
sub_3764A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37696	proc far		; CODE XREF: sub_37708+Fp

var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		cmp	byte_40633, 1
		jz	short loc_376C5
		mov	si, 10h

loc_376A7:				; CODE XREF: sub_37696+25j
		mov	al, [si+7166h]
		sub	ah, ah
		push	ax
		push	si
		call	sub_38C4C
		add	sp, 4
		inc	si
		cmp	si, 18h
		jl	short loc_376A7
		mov	[bp+var_2], si
		mov	byte_40633, 1

loc_376C5:				; CODE XREF: sub_37696+Cj
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_37696	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_376CA	proc far		; CODE XREF: sub_37708+8p

var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		cmp	byte_40633, 0
		jz	short loc_37702
		mov	si, 10h
		mov	di, 86E4h

loc_376DF:				; CODE XREF: sub_376CA+2Ej
		mov	al, [di]
		mov	[si+7166h], al
		sub	ax, ax
		push	ax
		push	si
		call	sub_38C4C
		add	sp, 4
		add	di, 4Ch	; 'L'
		inc	si
		cmp	si, 18h
		jl	short loc_376DF
		mov	[bp+var_2], si
		mov	byte_40633, 0

loc_37702:				; CODE XREF: sub_376CA+Dj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_376CA	endp


; =============== S U B	R O U T	I N E =======================================


sub_37708	proc far		; CODE XREF: sub_29EFA+AP
					; sub_39E56+27EP
		cmp	byte_40633, 1
		jnz	short loc_37716
		push	cs
		call	near ptr sub_376CA
		sub	ax, ax
		retf
; ---------------------------------------------------------------------------

loc_37716:				; CODE XREF: sub_37708+5j
		push	cs
		call	near ptr sub_37696
		mov	ax, 1
		retf
sub_37708	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3771E	proc far		; CODE XREF: seg007:0551P seg007:08FFP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	byte_40633, 0
		jnz	short loc_3772E

loc_37728:				; CODE XREF: sub_3771E+14j
					; sub_3771E+1Aj ...
		mov	ax, 1
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_3772E:				; CODE XREF: sub_3771E+8j
		cmp	[bp+arg_0], 10h
		jl	short loc_37728
		cmp	[bp+arg_0], 17h
		jg	short loc_37728
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		mov	ax, [bx-7E04h]
		or	ax, [bx-7E02h]
		jz	short loc_37728
		sub	ax, ax
		pop	bp
		retf
sub_3771E	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, 4Ch	; 'L'
		mul	word ptr [bp+6]
		mov	bx, ax
		mov	ax, [bp+8]
		mov	dx, [bp+0Ah]
		mov	[bx-7DBCh], ax
		mov	[bx-7DBAh], dx
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3776C	proc far		; CODE XREF: sub_29858+4P

var_A		= dword	ptr -0Ah
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		cmp	byte_40634, 0
		jnz	short loc_377C6
		mov	al, byte_45950
		sub	ah, ah
		mov	[bp+var_2], ax
		or	ax, ax
		jg	short loc_37789
		jmp	loc_37820
; ---------------------------------------------------------------------------

loc_37789:				; CODE XREF: sub_3776C+18j
		mov	ax, [bp+arg_0]
		cwd
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		mov	si, [bp+var_2]

loc_37796:				; CODE XREF: sub_3776C+56j
		mov	word_4063A, 1
		push	si
		push	cs
		call	near ptr sub_37868
		add	sp, 2
		mov	word_4063A, 0
		push	[bp+var_4]
		push	[bp+var_6]
		call	sub_327C0
		add	sp, 4
		call	sub_327D7
		sub	si, 2
		or	si, si
		jg	short loc_37796
		jmp	short loc_3781D
; ---------------------------------------------------------------------------

loc_377C6:				; CODE XREF: sub_3776C+Cj
		mov	si, 64h	; 'd'
		mov	ax, [bp+arg_0]
		cwd
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx

loc_377D3:				; CODE XREF: sub_3776C+AFj
		mov	word_4063A, 1
		mov	ax, si
		mov	byte_40639, al
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 6
		mov	word_4063A, 0
		push	[bp+var_4]
		push	[bp+var_6]
		call	sub_327C0
		add	sp, 4
		call	sub_327D7
		sub	si, 2
		or	si, si
		jg	short loc_377D3

loc_3781D:				; CODE XREF: sub_3776C+58j
		mov	[bp+var_2], si

loc_37820:				; CODE XREF: sub_3776C+1Aj
		push	cs
		call	near ptr sub_3736A
		cmp	byte_40634, 0
		jz	short loc_37862
		mov	ax, 32h	; '2'
		cwd
		push	dx
		push	ax
		call	sub_327C0
		add	sp, 4
		call	sub_327D7
		mov	byte_40639, 64h	; 'd'
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 6

loc_37862:				; CODE XREF: sub_3776C+BDj
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3776C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37868	proc far		; CODE XREF: sub_3776C+32p
					; seg027:07D5p

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		sub	si, si
		mov	di, [bp+arg_0]
		jmp	short loc_37883
; ---------------------------------------------------------------------------
		align 2

loc_37878:				; CODE XREF: sub_37868+25j
		push	di
		push	si
		call	sub_38C4C
		add	sp, 4
		inc	si

loc_37883:				; CODE XREF: sub_37868+Dj
		mov	ax, si
		mov	cl, byte_44290
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_37878
		mov	[bp+var_2], si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_37868	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	al, [bp+6]
		mov	byte_45950, al
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_37868
		add	sp, 2
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		mov	bx, [bp+6]
		mov	al, [bx-6A6Ah]
		sub	ah, ah
		pop	bp
		retf
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, [bp+6]
		mov	al, [bx-6CA6h]
		sub	ah, ah
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_378CA(char *, int)
sub_378CA	proc far		; CODE XREF: sub_39E56+256P

var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	di
		push	si
		cmp	[bp+arg_4], 473Ah
		jnz	short loc_378DE
		mov	byte_40635, 1

loc_378DE:				; CODE XREF: sub_378CA+Dj
		mov	ax, word ptr dword_4060A
		or	ax, word ptr dword_4060A+2
		jz	short loc_378EE
		push	cs
		call	near ptr sub_37A64
		jmp	short loc_378FE
; ---------------------------------------------------------------------------
		align 2

loc_378EE:				; CODE XREF: sub_378CA+1Bj
		mov	ax, 994h
		mov	dx, seg	seg027
		push	dx
		push	ax
		call	sub_2FE1C
		add	sp, 4

loc_378FE:				; CODE XREF: sub_378CA+21j
		sub	ax, ax
		mov	word ptr dword_4060A+2,	ax
		mov	word ptr dword_4060A, ax
		push	ds
		pop	es
		assume es:dseg
		mov	di, word ptr [bp+arg_0]
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		dec	cx
		mov	[bp+var_8], cx
		or	cx, cx
		jz	short loc_37932
		mov	dx, word ptr [bp+arg_0]

loc_3791F:				; CODE XREF: sub_378CA+63j
		mov	bx, cx
		mov	si, dx
		cmp	byte ptr [bx+si], 5Ch ;	'\'
		jz	short loc_3792F
		cmp	byte ptr [bx+si], 3Ah ;	':'
		jz	short loc_3792F
		loop	loc_3791F

loc_3792F:				; CODE XREF: sub_378CA+5Cj
					; sub_378CA+61j
		mov	[bp+var_8], cx

loc_37932:				; CODE XREF: sub_378CA+50j
		cmp	[bp+var_8], 0
		jz	short loc_3793B
		inc	[bp+var_8]

loc_3793B:				; CODE XREF: sub_378CA+6Cj
		mov	si, [bp+var_8]
		add	si, word ptr [bp+arg_0]
		mov	al, [si]
		mov	byte_42DAE, al
		mov	al, [si+1]
		mov	byte_42DAF, al
		mov	byte_42DB0, 0
		mov	ax, 4ECEh
		push	ax		; int
		mov	ax, 4ECFh
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		mov	[bp+var_6], ax
		push	ax
		call	sub_30D88
		add	sp, 2
		mov	word ptr dword_4060A, ax
		mov	word ptr dword_4060A+2,	dx
		mov	byte_45950, 7Fh	; ''
		mov	byte_45948, 7Fh	; ''
		or	ax, dx
		jnz	short loc_37988
		jmp	loc_37A52
; ---------------------------------------------------------------------------

loc_37988:				; CODE XREF: sub_378CA+B9j
		call	dword_4060A
		mov	byte_459D2, al
		or	al, al
		jz	short loc_37997
		cmp	al, 0FFh
		jnz	short loc_379A2

loc_37997:				; CODE XREF: sub_378CA+C7j
		mov	ax, 2
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_379A2:				; CODE XREF: sub_378CA+CBj
		cmp	byte_459D2, 7Fh	; ''
		jbe	short loc_379B8
		mov	byte_459D2, 10h
		mov	byte_40634, 1
		mov	byte_40635, 0

loc_379B8:				; CODE XREF: sub_378CA+DDj
		push	cs
		call	near ptr sub_38178
		mov	ax, 0Ch
		mov	dx, seg	seg028
		push	dx
		push	ax
		call	sub_302AA
		add	sp, 4
		cmp	byte_40634, 0
		jz	short loc_37A35
		mov	ax, 4ED3h
		push	ax
		call	sub_30D88
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_37A35
		push	dx
		push	[bp+var_4]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 42h	; 'B'
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 4
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_31641
		add	sp, 4
		mov	byte_40639, 64h	; 'd'
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 6

loc_37A35:				; CODE XREF: sub_378CA+107j
					; sub_378CA+11Dj
		mov	byte_40630, 0
		mov	byte_40631, 1
		mov	byte_40632, 0
		mov	byte_40633, 1
		sub	ax, ax
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_37A52:				; CODE XREF: sub_378CA+BBj
		mov	ax, 4EDCh
		push	ax
		call	far ptr	sub_2EA2A
sub_378CA	endp

; ---------------------------------------------------------------------------
		add	sp, 2
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37A64	proc far		; CODE XREF: _main+57FP sub_378CA+1Ep

var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	word_4063A, 1
		mov	ax, word ptr dword_4060A
		or	ax, word ptr dword_4060A+2
		jnz	short loc_37A7C
		jmp	loc_37B09
; ---------------------------------------------------------------------------

loc_37A7C:				; CODE XREF: sub_37A64+13j
		mov	ax, 0Ch
		mov	dx, seg	seg028
		push	dx
		push	ax
		call	sub_302DE
		add	sp, 4
		mov	byte_40631, 0
		mov	byte_40633, 0
		cmp	byte_40634, 0
		jz	short loc_37AC1
		mov	byte_40639, 64h	; 'd'
		mov	ax, 4EC6h
		push	ds
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3Fh	; '?'
		mov	word ptr [bp+var_4+2], dx
		mov	word ptr [bp+var_4], ax
		call	[bp+var_4]
		add	sp, 6

loc_37AC1:				; CODE XREF: sub_37A64+37j
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 6
		mov	word ptr [bp+var_4+2], dx
		mov	word ptr [bp+var_4], ax
		call	[bp+var_4]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 3
		mov	word ptr [bp+var_4+2], dx
		mov	word ptr [bp+var_4], ax
		call	[bp+var_4]
		push	word ptr dword_4060A+2
		push	word ptr dword_4060A
		call	sub_31641
		add	sp, 4
		sub	ax, ax
		mov	word ptr dword_4060A+2,	ax
		mov	word ptr dword_4060A, ax
		mov	byte_40634, 0
		mov	byte_40635, 0

loc_37B09:				; CODE XREF: sub_37A64+15j
		mov	word_4063A, 0
		mov	sp, bp
		pop	bp
		retf
sub_37A64	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_37B14(char *, int)
sub_37B14	proc far		; CODE XREF: sub_37C44+21p
					; sub_37C44+41p ...

var_8		= byte ptr -8
var_7		= byte ptr -7
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	[bp+arg_4]	; int
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30D88
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_37B48

loc_37B3E:				; CODE XREF: sub_37B14+6Dj
					; sub_37B14+92j ...
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_37B48:				; CODE XREF: sub_37B14+28j
		mov	[bp+var_8], 50h	; 'P'
		mov	bx, word ptr [bp+arg_0+2]
		mov	al, [bx]
		mov	[bp+var_7], al
		mov	al, [bx+1]
		mov	[bp+var_6], al
		mov	[bp+var_5], 0
		push	[bp+arg_4]	; int
		lea	ax, [bp+var_8]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30DF7
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_37B3E
		mov	ax, 4EF0h
		push	ax		; int
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30D88
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_37B3E
		mov	ax, 4EF3h
		push	ax		; int
		lea	ax, [bp+var_8]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30DF7
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_37BD1
		jmp	loc_37B3E
; ---------------------------------------------------------------------------

loc_37BD1:				; CODE XREF: sub_37B14+B8j
		mov	ax, 4EF6h
		push	ax		; int
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30D88
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_37BF9
		jmp	loc_37B3E
; ---------------------------------------------------------------------------

loc_37BF9:				; CODE XREF: sub_37B14+E0j
		mov	ax, 4EF7h
		push	ax		; int
		lea	ax, [bp+var_8]
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	sub_39CCE
		add	sp, 6
		push	ax
		call	sub_30DF7
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_37C22
		jmp	loc_37B3E
; ---------------------------------------------------------------------------

loc_37C22:				; CODE XREF: sub_37B14+109j
		push	word ptr [bp+arg_0]
		call	sub_30D88
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jmp	loc_37B3E
sub_37B14	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+6]
		mov	word_4063C, ax
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_37C44(char *)
sub_37C44	proc far		; CODE XREF: sub_299CA+73P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		sub	ax, ax
		mov	[bp+var_2], ax
		mov	[bp+var_4], ax
		cmp	byte_40635, 0
		jz	short loc_37C71
		mov	ax, 763Eh
		push	ax		; int
		mov	ax, 4EF8h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_37C71:				; CODE XREF: sub_37C44+13j
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jnz	short loc_37C91
		mov	ax, 763Eh
		push	ax		; int
		mov	ax, 4EFCh
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_37C91:				; CODE XREF: sub_37C44+33j
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jnz	short loc_37CAF
		cmp	word_4063C, 0
		jz	short loc_37CAF
		push	word ptr [bp+arg_0]
		mov	ax, 4F00h
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		add	sp, 4

loc_37CAF:				; CODE XREF: sub_37C44+53j
					; sub_37C44+5Aj
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_37C44	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_37CBA(char *)
sub_37CBA	proc far		; CODE XREF: sub_299CA+5FP

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		sub	ax, ax
		mov	[bp+var_2], ax
		mov	[bp+var_4], ax
		mov	ax, 763Eh
		push	ax		; int
		mov	ax, 4F18h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_37CFA
		cmp	word_4063C, 0
		jz	short loc_37CFA
		push	word ptr [bp+arg_0]
		mov	ax, 4F1Ch
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		add	sp, 4

loc_37CFA:				; CODE XREF: sub_37CBA+28j
					; sub_37CBA+2Fj
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_37CBA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_37D04(char *)
sub_37D04	proc far		; CODE XREF: sub_299CA+69P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		sub	ax, ax
		mov	[bp+var_2], ax
		mov	[bp+var_4], ax
		cmp	byte_40635, 0
		jz	short loc_37D31
		mov	ax, 763Eh
		push	ax		; int
		mov	ax, 4F35h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_37D31:				; CODE XREF: sub_37D04+13j
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jnz	short loc_37D51
		mov	ax, 763Eh
		push	ax		; int
		mov	ax, 4F39h
		push	ax
		push	word ptr [bp+arg_0] ; char *
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx

loc_37D51:				; CODE XREF: sub_37D04+33j
		mov	ax, [bp+var_4]
		or	ax, [bp+var_2]
		jnz	short loc_37D6F
		cmp	word_4063C, 0
		jz	short loc_37D6F
		push	word ptr [bp+arg_0]
		mov	ax, 4F3Dh
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		add	sp, 4

loc_37D6F:				; CODE XREF: sub_37D04+53j
					; sub_37D04+5Aj
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_37D04	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 4
		mov	ax, 763Eh
		push	ax
		mov	ax, 4F57h
		push	ax
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_37B14
		add	sp, 6
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		or	ax, dx
		jnz	short loc_37DB2
		cmp	word_4063C, 0
		jz	short loc_37DB2
		push	word ptr [bp+6]
		mov	ax, 4F5Bh
		push	ax
		call	far ptr	sub_2EA2A
; ---------------------------------------------------------------------------
		add	sp, 4

loc_37DB2:				; CODE XREF: seg027:0CCAj seg027:0CD1j
		mov	ax, [bp-4]
		mov	dx, [bp-2]
		mov	sp, bp
		pop	bp
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37DBC	proc far		; CODE XREF: sub_3717C+82p
					; sub_3736A+30p ...

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= byte ptr  10h
arg_C		= byte ptr  12h

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		mov	ax, [bp+arg_0]
		mov	[bp+var_6], ax
		mov	ax, [bp+arg_2]
		cmp	[bp+var_6], ax
		jle	short loc_37DD5
		jmp	loc_37EBA
; ---------------------------------------------------------------------------

loc_37DD5:				; CODE XREF: sub_37DBC+14j
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_A], ax
		mov	di, [bp+var_6]

loc_37DE4:				; CODE XREF: sub_37DBC+F5j
		mov	si, [bp+var_A]
		sub	ax, ax
		mov	[si+4Ah], ax
		mov	[si+48h], ax
		mov	byte ptr [si+22h], 7Fh ; ''
		mov	ax, di
		mov	[si+23h], al
		mov	byte ptr [si+16h], 0Fh
		mov	byte ptr [di-6A6Ah], 0
		mov	byte ptr [di-6CA6h], 0
		mov	byte ptr [si+32h], 0
		mov	byte ptr [si+4], 0
		mov	al, [bp+arg_C]
		mov	[si+24h], al
		mov	byte ptr [si+15h], 0
		sub	ax, ax
		mov	[si+1Ah], ax
		mov	[si+18h], ax
		mov	byte ptr [si+1Ch], 0
		mov	[si+20h], ax
		mov	[si+1Eh], ax
		mov	al, [bp+arg_A]
		mov	[si+28h], al
		mov	byte ptr [si+25h], 0
		mov	word ptr [si+26h], 0
		mov	byte ptr [si+29h], 0
		mov	byte ptr [si+2Ah], 0
		mov	byte ptr [si+2Bh], 0
		mov	byte ptr [si+2Ch], 0
		mov	byte ptr [si+47h], 0FFh
		mov	ax, [bp+arg_4]
		or	ax, [bp+arg_6]
		jz	short loc_37EA0
		mov	ax, [bp+arg_8]
		add	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	dx
		push	ax
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		add	ax, 4
		mov	[si+5],	ax
		mov	[si+7],	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		add	ax, 4
		mov	[si], ax
		mov	[si+2],	dx
		add	[bp+arg_8], 5
		mov	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		add	ax, 7
		mov	[si+2Eh], ax
		mov	[si+30h], dx
		jmp	short loc_37EA7
; ---------------------------------------------------------------------------

loc_37EA0:				; CODE XREF: sub_37DBC+97j
		sub	ax, ax
		mov	[si+2],	ax
		mov	[si], ax

loc_37EA7:				; CODE XREF: sub_37DBC+E2j
		add	[bp+var_A], 4Ch	; 'L'
		inc	di
		cmp	di, [bp+arg_2]
		jg	short loc_37EB4
		jmp	loc_37DE4
; ---------------------------------------------------------------------------

loc_37EB4:				; CODE XREF: sub_37DBC+F3j
		mov	[bp+var_6], di
		mov	[bp+var_8], si

loc_37EBA:				; CODE XREF: sub_37DBC+16j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_37DBC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_37EC0	proc far		; CODE XREF: sub_370D2+5Bp

var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_16		= dword	ptr -16h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= byte ptr -0Ah
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 22h
		push	di
		push	si
		mov	[bp+var_6], 0
		mov	ax, 4F76h
		push	ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_39BDC
		add	sp, 6
		mov	word ptr [bp+var_16], ax
		mov	word ptr [bp+var_16+2],	dx
		or	ax, dx
		jnz	short loc_37EEB
		jmp	loc_38036
; ---------------------------------------------------------------------------

loc_37EEB:				; CODE XREF: sub_37EC0+26j
		mov	[bp+var_10], 0
		les	bx, [bp+var_16]
		assume es:nothing
		mov	al, es:[bx+6]
		sub	ah, ah
		or	ax, ax
		jnz	short loc_37F00
		jmp	loc_37F87
; ---------------------------------------------------------------------------

loc_37F00:				; CODE XREF: sub_37EC0+3Bj
		mov	[bp+var_1C], ax
		mov	[bp+var_1E], 0
		mov	ax, bx
		add	ax, 7
		mov	[bp+var_22], ax
		mov	[bp+var_20], dx

loc_37F13:				; CODE XREF: sub_37EC0+C5j
		mov	[bp+var_12], 0
		mov	di, [bp+var_1E]
		sub	cx, cx
		mov	[bp+var_1A], ds
		lds	si, [bp+var_16]

loc_37F23:				; CODE XREF: sub_37EC0+76j
		mov	bx, di
		add	bx, cx
		mov	al, [bx+si+7]
		mov	bx, cx
		add	bx, bp
		mov	ss:[bx+var_A], al
		inc	cx
		cmp	cx, 4
		jl	short loc_37F23
		mov	ds, [bp+var_1A]
		mov	[bp+var_12], cx
		mov	ax, [bp+var_22]
		mov	dx, [bp+var_20]
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		lea	ax, [bp+var_A]
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	[bp+var_E], ax
		mov	[bp+var_C], dx
		lea	ax, [bp+var_E]
		push	ss
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		push	cs
		call	near ptr sub_38528
		add	sp, 8
		add	[bp+var_1E], 4
		add	[bp+var_22], 4
		inc	[bp+var_10]
		mov	ax, [bp+var_1C]
		cmp	[bp+var_10], ax
		jb	short loc_37F13

loc_37F87:				; CODE XREF: sub_37EC0+3Dj
		mov	ax, 4F7Bh
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_42A34, ax
		mov	word_42A36, dx
		mov	ax, 4F80h
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_4393E, ax
		mov	word_43940, dx
		mov	ax, 4F85h
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_4394A, ax
		mov	word_4394C, dx
		mov	ax, 4F8Ah
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_454CA, ax
		mov	word_454CC, dx
		mov	ax, 4F8Fh
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_4432C, ax
		mov	word_4432E, dx
		mov	ax, 4F94h
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_43928, ax
		mov	word_4392A, dx
		mov	ax, 4F99h
		push	ax
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_39BDC
		add	sp, 6
		mov	word_44368, ax
		mov	word_4436A, dx

loc_38036:				; CODE XREF: sub_37EC0+28j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_37EC0	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 22h
		push	di
		push	si
		mov	ax, [bp+0Ah]
		or	ax, [bp+0Ch]
		jnz	short loc_3804F
		jmp	loc_3814F
; ---------------------------------------------------------------------------

loc_3804F:				; CODE XREF: seg027:0F7Aj
		mov	ax, [bp+6]
		or	ax, [bp+8]
		jnz	short loc_3805A
		jmp	loc_3814F
; ---------------------------------------------------------------------------

loc_3805A:				; CODE XREF: seg027:0F85j
		les	bx, [bp+6]
		mov	al, es:[bx+4]
		sub	ah, ah
		mov	[bp-22h], ax
		mov	[bp-14h], ax
		mov	word ptr [bp-16h], 0
		or	ax, ax
		jnz	short loc_38075
		jmp	loc_3814F
; ---------------------------------------------------------------------------

loc_38075:				; CODE XREF: seg027:0FA0j
		mov	word ptr [bp-20h], 0

loc_3807A:				; CODE XREF: seg027:107Cj
		mov	word ptr [bp-18h], 0
		mov	di, [bp-20h]
		sub	cx, cx
		mov	word ptr [bp-1Ch], ds
		lds	si, [bp+6]

loc_3808A:				; CODE XREF: seg027:0FCDj
		mov	bx, di
		add	bx, cx
		mov	al, [bx+si+6]
		mov	bx, cx
		add	bx, bp
		mov	ss:[bx-0Ah], al
		inc	cx
		cmp	cx, 4
		jl	short loc_3808A
		mov	ds, word ptr [bp-1Ch]
		mov	[bp-18h], cx
		lea	ax, [bp-0Ah]
		push	ax
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		call	sub_39BDC
		add	sp, 6
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		les	bx, [bp-4]
		cmp	byte ptr es:[bx+5], 3
		jz	short loc_380CE
		cmp	byte ptr es:[bx+5], 6
		jnz	short loc_38137

loc_380CE:				; CODE XREF: seg027:0FF5j
		cmp	byte ptr es:[bx+0Ah], 0
		jnz	short loc_38137
		mov	word ptr [bp-18h], 0
		mov	ax, bx
		mov	dx, es
		add	ax, 6
		mov	cx, 2
		lea	di, [bp-0Ah]
		mov	si, ax
		push	ss
		pop	es
		push	ds
		mov	ds, dx
		repne movsw
		pop	ds
		mov	word ptr [bp-18h], 4
		mov	ax, bx
		add	ax, 6
		mov	[bp-0Eh], ax
		mov	[bp-0Ch], dx
		lea	ax, [bp-0Ah]
		push	ax
		push	word ptr [bp+0Ch]
		push	word ptr [bp+0Ah]
		call	sub_30F92
		add	sp, 6
		mov	[bp-12h], ax
		mov	[bp-10h], dx
		or	ax, dx
		jz	short loc_38137
		lea	ax, [bp-12h]
		push	ss
		push	ax
		push	word ptr [bp-0Ch]
		push	word ptr [bp-0Eh]
		push	cs
		call	near ptr sub_38528
		add	sp, 8
		les	bx, [bp-4]
		mov	byte ptr es:[bx+0Ah], 0FFh

loc_38137:				; CODE XREF: seg027:0FFCj seg027:1003j ...
		add	word ptr [bp-20h], 4
		inc	word ptr [bp-16h]
		les	bx, [bp+6]
		mov	al, es:[bx+4]
		sub	ah, ah
		cmp	ax, [bp-16h]
		jbe	short loc_3814F
		jmp	loc_3807A
; ---------------------------------------------------------------------------

loc_3814F:				; CODE XREF: seg027:0F7Cj seg027:0F87j ...
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38156	proc far		; CODE XREF: sub_26F6D+1EP

var_2		= word ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		mov	ax, 2Eh	; '.'
		imul	[bp+arg_0]
		add	ax, 0A2B6h
		mov	[bp+var_2], ax
		mov	bx, ax
		mov	word ptr [bx+0Ch], 1
		mov	word ptr [bx+0Eh], 0
		mov	sp, bp
		pop	bp
		retf
sub_38156	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38178	proc far		; CODE XREF: sub_188A4:loc_18931P
					; sub_378CA+EFp

var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	di
		push	si
		mov	word_4063A, 1
		sub	ax, ax
		push	ax
		mov	ax, 7Fh	; ''
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		mov	ax, 17h
		push	ax
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_37DBC
		add	sp, 0Eh
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jz	short loc_38221
		mov	di, 0A2B7h
		mov	[bp+var_6], 0A2B6h
		mov	[bp+var_8], 0A2B8h
		mov	[bp+var_A], 0A2C6h
		mov	[bp+var_C], 0A2E2h
		mov	si, [bp+var_2]

loc_381C8:				; CODE XREF: sub_38178+A4j
		push	si
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 1Eh
		mov	word ptr [bp+var_10+2],	dx
		mov	word ptr [bp+var_10], ax
		call	[bp+var_10]
		add	sp, 2
		mov	byte ptr [di], 0
		mov	bx, [bp+var_6]
		mov	byte ptr [bx], 0FFh
		mov	bx, [bp+var_8]
		mov	byte ptr [bx], 0
		mov	bx, [bp+var_A]
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	bx, [bp+var_C]
		mov	byte ptr [bx], 0FFh
		add	di, 2Eh	; '.'
		add	[bp+var_6], 2Eh	; '.'
		add	[bp+var_8], 2Eh	; '.'
		add	[bp+var_A], 2Eh	; '.'
		add	[bp+var_C], 2Eh	; '.'
		inc	si
		mov	ax, si
		mov	cl, byte_459D2
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_381C8
		mov	[bp+var_2], si

loc_38221:				; CODE XREF: sub_38178+34j
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 18h
		mov	word ptr [bp+var_10+2],	dx
		mov	word ptr [bp+var_10], ax
		call	[bp+var_10]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 6
		mov	word ptr [bp+var_10+2],	dx
		mov	word ptr [bp+var_10], ax
		call	[bp+var_10]
		mov	word_4063A, 0
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38178	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38254	proc far		; CODE XREF: sub_370D2+68p

var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= word ptr -2Eh
var_2C		= word ptr -2Ch
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= byte ptr -24h
var_22		= word ptr -22h
var_20		= word ptr -20h
var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= dword	ptr -14h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= byte ptr -0Ch
var_8		= byte ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 32h
		push	di
		push	si
		mov	[bp+var_8], 0
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		add	ax, 4
		push	dx
		push	ax
		push	cs
		call	near ptr sub_38514
		add	sp, 4
		mov	[bp+var_16], ax
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		add	ax, 6
		mov	[bp+var_28], ax
		mov	[bp+var_26], dx
		mov	ax, [bp+var_16]
		shl	ax, 1
		shl	ax, 1
		add	ax, [bp+var_28]
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		mov	ax, [bp+var_16]
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_0]
		add	ax, 6
		mov	[bp+var_22], ax
		mov	[bp+var_20], dx
		mov	[bp+var_2A], 0
		jmp	loc_383C9
; ---------------------------------------------------------------------------
		align 2

loc_382B0:				; CODE XREF: sub_38254+66j
		inc	word ptr [bp+var_14]

loc_382B3:				; CODE XREF: sub_38254+105j
		les	bx, [bp+var_14]
		test	byte ptr es:[bx], 80h
		jnz	short loc_382B0
		inc	word ptr [bp+var_14]
		mov	bx, word ptr [bp+var_14]
		mov	al, es:[bx]
		sub	ah, ah
		sub	ax, 0D9h ; 'Ÿ'
		cmp	ax, 11h
		jbe	short loc_382D2
		jmp	loc_3837E
; ---------------------------------------------------------------------------

loc_382D2:				; CODE XREF: sub_38254+79j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_383A0[bx]

loc_382DA:				; DATA XREF: sub_38254+166o
		add	word ptr [bp+var_14], 2
		mov	ax, 4
		push	ax
		lea	ax, [bp+var_C]
		push	ss
		push	ax
		push	es
		push	word ptr [bp+var_14]
		call	sub_39C84
		add	sp, 0Ah
		push	[bp+var_26]
		push	[bp+var_28]
		lea	ax, [bp+var_C]
		push	ax
		push	[bp+var_16]
		sub	ax, ax
		push	ax
		call	sub_39B5A
		add	sp, 0Ah
		mov	[bp+var_2E], ax
		cmp	ax, 0FFFFh
		jz	short loc_3834A
		shl	ax, 1
		shl	ax, 1
		add	ax, [bp+var_6]
		mov	dx, [bp+var_4]
		push	dx
		push	ax
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		mov	[bp+var_1E], ax
		mov	[bp+var_1C], dx
		add	ax, [bp+var_22]
		mov	dx, [bp+var_20]
		mov	[bp+var_10], ax
		mov	[bp+var_E], dx
		lea	ax, [bp+var_10]
		push	ss
		push	ax
		push	word ptr [bp+var_14+2]
		push	word ptr [bp+var_14]
		push	cs
		call	near ptr sub_38528
		add	sp, 8

loc_3834A:				; CODE XREF: sub_38254+BDj
		add	word ptr [bp+var_14], 4

loc_3834E:				; CODE XREF: sub_38254+10Cj
					; sub_38254+112j ...
		mov	ax, [bp+var_1A]
		mov	dx, [bp+var_18]
		cmp	word ptr [bp+var_14], ax
		jnb	short loc_383C6
		jmp	loc_382B3
; ---------------------------------------------------------------------------

loc_3835C:				; CODE XREF: sub_38254+81j
					; DATA XREF: sub_38254+152o ...
		add	word ptr [bp+var_14], 2
		jmp	short loc_3834E
; ---------------------------------------------------------------------------

loc_38362:				; CODE XREF: sub_38254+81j
					; DATA XREF: sub_38254+158o ...
		add	word ptr [bp+var_14], 3
		jmp	short loc_3834E
; ---------------------------------------------------------------------------

loc_38368:				; CODE XREF: sub_38254+81j
					; DATA XREF: sub_38254+168o ...
		inc	word ptr [bp+var_14]
		les	bx, [bp+var_14]
		inc	word ptr [bp+var_14]
		mov	al, es:[bx]
		mov	[bp+var_2], al
		sub	ah, ah
		add	word ptr [bp+var_14], ax
		jmp	short loc_3834E
; ---------------------------------------------------------------------------

loc_3837E:				; CODE XREF: sub_38254+7Bj
		mov	bx, word ptr [bp+var_14]
		mov	al, es:[bx]
		sub	ah, ah
		cmp	ax, 80h	; 'Ä'
		jb	short loc_3838E
		inc	word ptr [bp+var_14]

loc_3838E:				; CODE XREF: sub_38254+135j
					; sub_38254+144j
		inc	word ptr [bp+var_14]
		mov	bx, word ptr [bp+var_14]
		test	byte ptr es:[bx], 80h
		jnz	short loc_3838E

loc_3839A:				; CODE XREF: sub_38254+81j
					; DATA XREF: sub_38254:off_383A0o ...
		inc	word ptr [bp+var_14]
		jmp	short loc_3834E
; ---------------------------------------------------------------------------
		align 2
off_383A0	dw offset loc_3839A	; DATA XREF: sub_38254+81r
		dw offset loc_3839A
		dw offset loc_3839A
		dw offset loc_3835C
		dw offset loc_3835C
		dw offset loc_3835C
		dw offset loc_38362
		dw offset loc_3835C
		dw offset loc_3835C
		dw offset loc_3835C
		dw offset loc_3839A
		dw offset loc_3835C
		dw offset loc_38362
		dw offset loc_382DA
		dw offset loc_38368
		dw offset loc_38368
		dw offset loc_3835C
		dw offset loc_3835C
; ---------------------------------------------------------------------------
		jmp	short loc_3834E
; ---------------------------------------------------------------------------

loc_383C6:				; CODE XREF: sub_38254+103j
					; sub_38254+215j ...
		inc	[bp+var_2A]

loc_383C9:				; CODE XREF: sub_38254+58j
		mov	ax, [bp+var_16]
		cmp	[bp+var_2A], ax
		jl	short loc_383D4
		jmp	loc_384F4
; ---------------------------------------------------------------------------

loc_383D4:				; CODE XREF: sub_38254+17Bj
		mov	ax, [bp+var_2A]
		shl	ax, 1
		shl	ax, 1
		mov	[bp+var_32], ax
		add	ax, [bp+var_6]
		mov	dx, [bp+var_4]
		push	dx
		push	ax
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		add	ax, [bp+var_22]
		mov	dx, [bp+var_20]
		mov	word ptr [bp+var_14], ax
		mov	word ptr [bp+var_14+2],	dx
		lea	ax, [bp+var_14]
		push	ss
		push	ax
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		add	ax, word ptr [bp+var_14]
		mov	dx, word ptr [bp+var_14+2]
		mov	[bp+var_1A], ax
		mov	[bp+var_18], dx
		add	word ptr [bp+var_14], 4
		mov	ax, 4
		push	ax
		mov	ax, 4F9Eh
		push	ds
		push	ax
		mov	ax, [bp+var_32]
		add	ax, [bp+var_28]
		mov	dx, [bp+var_26]
		push	dx
		push	ax
		sub	ax, ax
		push	ax
		call	sub_39AD4
		add	sp, 0Ch
		or	ax, ax
		jnz	short loc_3843B
		jmp	loc_3834E
; ---------------------------------------------------------------------------

loc_3843B:				; CODE XREF: sub_38254+1E2j
		add	word ptr [bp+var_14], 2
		les	bx, [bp+var_14]
		mov	al, es:[bx]
		mov	[bp+var_24], al
		sub	ah, ah
		shl	ax, 1
		shl	ax, 1
		inc	ax
		add	word ptr [bp+var_14], ax
		mov	bx, word ptr [bp+var_14]
		mov	al, es:[bx]
		mov	[bp+var_24], al
		inc	word ptr [bp+var_14]
		mov	[bp+var_2C], 0
		sub	ah, ah
		or	ax, ax
		jnz	short loc_3846C
		jmp	loc_383C6
; ---------------------------------------------------------------------------

loc_3846C:				; CODE XREF: sub_38254+213j
		mov	[bp+var_30], ax
		mov	di, [bp+var_2C]

loc_38472:				; CODE XREF: sub_38254+295j
		mov	ax, 4
		push	ax
		lea	ax, [bp+var_C]
		push	ss
		push	ax
		push	word ptr [bp+var_14+2]
		push	word ptr [bp+var_14]
		call	sub_39C84
		add	sp, 0Ah
		push	[bp+var_26]
		push	[bp+var_28]
		lea	ax, [bp+var_C]
		push	ax
		push	[bp+var_16]
		sub	ax, ax
		push	ax
		call	sub_39B5A
		add	sp, 0Ah
		mov	si, ax
		cmp	si, 0FFFFh
		jz	short loc_384DF
		shl	ax, 1
		shl	ax, 1
		add	ax, [bp+var_6]
		mov	dx, [bp+var_4]
		push	dx
		push	ax
		push	cs
		call	near ptr sub_384FA
		add	sp, 4
		mov	[bp+var_1E], ax
		mov	[bp+var_1C], dx
		add	ax, [bp+var_22]
		mov	dx, [bp+var_20]
		mov	[bp+var_10], ax
		mov	[bp+var_E], dx
		lea	ax, [bp+var_10]
		push	ss
		push	ax
		push	word ptr [bp+var_14+2]
		push	word ptr [bp+var_14]
		push	cs
		call	near ptr sub_38528
		add	sp, 8

loc_384DF:				; CODE XREF: sub_38254+252j
		add	word ptr [bp+var_14], 5
		inc	di
		mov	ax, di
		cmp	ax, [bp+var_30]
		jb	short loc_38472
		mov	[bp+var_2C], di
		mov	[bp+var_2E], si
		jmp	loc_383C6
; ---------------------------------------------------------------------------

loc_384F4:				; CODE XREF: sub_38254+17Dj
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38254	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_384FA	proc far		; CODE XREF: sub_37DBC+ABp
					; sub_37DBC+C1p ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		les	bx, [bp+arg_0]
		mov	ax, es:[bx]
		mov	dx, es:[bx+2]
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	sp, bp
		pop	bp
		retf
sub_384FA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38514	proc far		; CODE XREF: sub_38254+18p
					; sub_3945A+134P

var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		les	bx, [bp+arg_0]
		mov	ax, es:[bx]
		mov	[bp+var_2], ax
		mov	sp, bp
		pop	bp
		retf
sub_38514	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38528	proc far		; CODE XREF: sub_370D2+9Ap
					; sub_37EC0+AEp ...

arg_0		= dword	ptr  6
arg_4		= dword	ptr  0Ah

		push	bp
		mov	bp, sp
		les	bx, [bp+arg_4]
		inc	word ptr [bp+arg_4]
		mov	al, es:[bx]
		les	bx, [bp+arg_0]
		inc	word ptr [bp+arg_0]
		mov	es:[bx], al
		les	bx, [bp+arg_4]
		inc	word ptr [bp+arg_4]
		mov	al, es:[bx]
		les	bx, [bp+arg_0]
		inc	word ptr [bp+arg_0]
		mov	es:[bx], al
		les	bx, [bp+arg_4]
		inc	word ptr [bp+arg_4]
		mov	al, es:[bx]
		les	bx, [bp+arg_0]
		inc	word ptr [bp+arg_0]
		mov	es:[bx], al
		les	bx, [bp+arg_4]
		mov	al, es:[bx]
		les	bx, [bp+arg_0]
		mov	es:[bx], al
		pop	bp
		retf
sub_38528	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		sub	sp, 8
		push	di
		push	si
		mov	al, byte_40633
		sub	ah, ah
		push	ax
		mov	al, byte_40632
		push	ax
		mov	al, byte_40631
		push	ax
		mov	al, byte_40630
		push	ax
		mov	ax, 4FA3h
		push	ax
		call	sub_3219D
		add	sp, 0Ah
		mov	al, byte_45948
		sub	ah, ah
		push	ax
		mov	al, byte_45950
		push	ax
		mov	ax, 4FD5h
		push	ax
		call	sub_3219D
		add	sp, 6
		sub	si, si
		mov	di, 8214h
		mov	word ptr [bp-6], 81FCh

loc_385B6:				; CODE XREF: seg027:150Bj
		push	word ptr [di+2]
		push	word ptr [di]
		mov	bx, [bp-6]
		push	word ptr [bx+2]
		push	word ptr [bx]
		push	si
		mov	ax, 4FFBh
		push	ax
		call	sub_3219D
		add	sp, 0Ch
		add	di, 4Ch	; 'L'
		add	word ptr [bp-6], 4Ch ; 'L'
		inc	si
		cmp	si, 18h
		jl	short loc_385B6
		mov	[bp-2],	si
		mov	ax, 5010h
		push	ax
		call	sub_3219D
		add	sp, 2
		call	sub_30A5D
		sub	si, si
		mov	di, 0A2C2h
		mov	word ptr [bp-4], 0A2BEh
		mov	word ptr [bp-8], 0A2B7h

loc_38600:				; CODE XREF: seg027:1561j
		push	word ptr [di+2]
		push	word ptr [di]
		mov	bx, [bp-4]
		push	word ptr [bx+2]
		push	word ptr [bx]
		mov	bx, [bp-8]
		mov	al, [bx]
		sub	ah, ah
		push	ax
		push	si
		mov	ax, 501Dh
		push	ax
		call	sub_3219D
		add	sp, 0Eh
		add	di, 2Eh	; '.'
		add	word ptr [bp-4], 2Eh ; '.'
		add	word ptr [bp-8], 2Eh ; '.'
		inc	si
		cmp	si, 10h
		jl	short loc_38600
		mov	[bp-2],	si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
seg027		ends

; ===========================================================================

; Segment type:	Pure code
seg028		segment	byte public 'CODE' use16
		assume cs:seg028
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		dd 3B77B81Eh
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	ax, word ptr dword_4060A
		or	ax, word ptr dword_4060A+2
		jz	short loc_38688
		cmp	word_4063A, 0
		jnz	short loc_38688
		cmp	word_407AA, 0
		jnz	short loc_38688
		inc	word_407AA
		push	cs
		call	near ptr sub_39700
		cmp	byte_40632, 1
		jnz	short loc_3867C
		cmp	byte_40631, 1
		jnz	short loc_3867C
		cmp	byte_40630, 0
		jnz	short loc_3867C
		push	cs
		call	near ptr sub_3868A
		jmp	short loc_38680
; ---------------------------------------------------------------------------

loc_3867C:				; CODE XREF: seg028:0036j seg028:003Dj ...
		push	cs
		call	near ptr sub_3963C

loc_38680:				; CODE XREF: seg028:004Aj
		push	cs
		call	near ptr sub_386D6
		dec	word_407AA

loc_38688:				; CODE XREF: seg028:0019j seg028:0020j ...
		pop	ds
		retf

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3868A	proc far		; CODE XREF: seg028:0047p

var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		add	word_44D48, 80h	; 'Ä'
		jmp	short loc_386B6
; ---------------------------------------------------------------------------

loc_3869E:				; CODE XREF: sub_3868A+2Aj
		mov	al, [bp+var_2]
		sub	ah, ah
		push	ax
		push	cs
		call	near ptr sub_38702
		add	sp, 2
		inc	[bp+var_2]

loc_386AE:				; CODE XREF: sub_3868A+44j
		mov	al, byte_44290
		cmp	[bp+var_2], al
		jb	short loc_3869E

loc_386B6:				; CODE XREF: sub_3868A+12j
		mov	ax, word_454BA
		cmp	word_44D48, ax
		jb	short loc_386D0
		push	cs
		call	near ptr sub_3963C
		mov	ax, word_454BA
		sub	word_44D48, ax
		mov	[bp+var_2], 0
		jmp	short loc_386AE
; ---------------------------------------------------------------------------

loc_386D0:				; CODE XREF: sub_3868A+33j
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_3868A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_386D6	proc far		; CODE XREF: seg028:0051p

var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	[bp+var_2], 10h

loc_386E6:				; CODE XREF: sub_386D6+24j
		mov	al, [bp+var_2]
		sub	ah, ah
		push	ax
		push	cs
		call	near ptr sub_38702
		add	sp, 2
		inc	[bp+var_2]
		cmp	[bp+var_2], 17h
		jb	short loc_386E6
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_386D6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38702	proc far		; CODE XREF: sub_3868A+1Bp
					; sub_386D6+17p

var_E		= byte ptr -0Eh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	[bp+var_2], 0
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_4], ax
		mov	bx, ax
		mov	ax, [bx+18h]
		or	ax, [bx+1Ah]
		jz	short loc_3872D
		jmp	loc_38A98
; ---------------------------------------------------------------------------

loc_3872D:				; CODE XREF: sub_38702+26j
		mov	ax, [bx]
		or	ax, [bx+2]
		jnz	short loc_38737
		jmp	loc_38AA0
; ---------------------------------------------------------------------------

loc_38737:				; CODE XREF: sub_38702+30j
					; sub_38702+36Fj ...
		mov	ax, [bx+18h]
		or	ax, [bx+1Ah]
		jz	short loc_38742
		jmp	loc_38A98
; ---------------------------------------------------------------------------

loc_38742:				; CODE XREF: sub_38702+3Bj
		mov	ax, [bx]
		or	ax, [bx+2]
		jnz	short loc_3874C
		jmp	loc_38A98
; ---------------------------------------------------------------------------

loc_3874C:				; CODE XREF: sub_38702+45j
		push	word ptr [bx+2]
		push	word ptr [bx]
		mov	ax, 728Eh
		push	ax
		push	cs
		call	near ptr sub_3945A
		add	sp, 6
		mov	bx, [bp+var_4]
		mov	al, byte_42A08
		sub	ah, ah
		add	[bx], ax
		cmp	byte_42A02, 0D9h ; 'Ÿ'
		jnb	short loc_38770
		jmp	loc_38A44
; ---------------------------------------------------------------------------

loc_38770:				; CODE XREF: sub_38702+69j
		mov	al, byte_42A03
		mov	[bp+var_2], al
		mov	al, byte_42A02
		sub	ax, 0D9h ; 'Ÿ'
		cmp	ax, 11h
		jbe	short loc_38784
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_38784:				; CODE XREF: sub_38702+7Dj
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_38A1E[bx]

loc_3878C:				; DATA XREF: sub_38702:off_38A1Eo
		mov	bx, [bp+var_4]
		cmp	byte ptr [bx+4], 0
		jz	short loc_387B2
		mov	si, [bx+4]
		and	si, 0FFh
		shl	si, 1
		shl	si, 1
		mov	ax, [bx+si+5]
		mov	dx, [bx+si+7]
		mov	[bx], ax
		mov	[bx+2],	dx
		dec	byte ptr [bx+4]
		jmp	loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_387B2:				; CODE XREF: sub_38702+91j
		mov	ax, [bx+48h]
		mov	dx, [bx+4Ah]
		mov	word ptr [bp+var_8], ax
		mov	word ptr [bp+var_8+2], dx
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		push	[bp+arg_0]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_39966
		add	sp, 4

loc_387D2:				; CODE XREF: sub_38702+181j
		mov	ax, word ptr [bp+var_8]
		or	ax, word ptr [bp+var_8+2]
		jnz	short loc_387DD
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_387DD:				; CODE XREF: sub_38702+D6j
		push	[bp+arg_0]
		call	[bp+var_8]
		add	sp, 2
		jmp	loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_387EA:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+33Ao
		mov	ax, 717Eh
		push	ax
		mov	al, byte_42A08
		sub	ah, ah
		sub	ax, 4
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 39h	; '9'
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		jmp	loc_38A64
; ---------------------------------------------------------------------------
		align 2

loc_3880E:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+33Eo
		mov	bx, [bp+arg_0]
		mov	al, [bp+var_2]
		mov	[bx-6A6Ah], al
		jmp	loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_3881C:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+336o
		mov	bx, [bp+var_4]
		inc	byte ptr [bx+4]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	si, [bx+4]
		and	si, 0FFh
		shl	si, 1
		shl	si, 1
		mov	[bx+si+5], ax
		mov	[bx+si+7], dx
		mov	ax, word_42A04
		mov	dx, word_42A06
		add	ax, 4
		jmp	short loc_38899
; ---------------------------------------------------------------------------

loc_38844:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+31Eo
		mov	bx, [bp+var_4]
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	ax, [bx+48h]
		mov	dx, [bx+4Ah]
		mov	word ptr [bp+var_8], ax
		mov	word ptr [bp+var_8+2], dx
		push	[bp+arg_0]
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_39966
		add	sp, 4
		sub	ax, ax
		push	ax
		mov	al, byte_45950
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		push	ax
		push	ax
		push	[bp+arg_0]
		push	[bp+arg_0]
		call	sub_37DBC
		add	sp, 0Eh
		jmp	loc_387D2
; ---------------------------------------------------------------------------

loc_38886:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+320o
		mov	bx, [bp+var_4]
		mov	byte ptr [bx+4], 0
		mov	byte ptr [bx+32h], 0
		mov	si, bx
		mov	ax, [si+5]
		mov	dx, [si+7]

loc_38899:				; CODE XREF: sub_38702+140j
		mov	[bx], ax
		mov	[bx+2],	dx
		jmp	loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_388A2:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+322o
		push	[bp+var_4]
		mov	al, [bp+var_2]
		sub	ah, ah
		push	ax
		push	cs
		call	near ptr sub_38AC4
		add	sp, 4
		mov	bx, [bp+var_4]
		mov	[bx+1Eh], ax
		mov	[bx+20h], dx
		cmp	byte_40634, 0
		jnz	short loc_388C5
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_388C5:				; CODE XREF: sub_38702+1BEj
		les	bx, [bx+1Eh]
		mov	al, es:[bx+43h]
		mov	[bp+var_E], al
		cmp	al, 10h
		jnb	short loc_388D8
		mov	bx, [bp+var_4]
		jmp	short loc_388E2
; ---------------------------------------------------------------------------

loc_388D8:				; CODE XREF: sub_38702+1CFj
		mov	bx, [bp+var_4]
		mov	al, byte ptr [bp+arg_0]
		and	al, 0Fh
		inc	al

loc_388E2:				; CODE XREF: sub_38702+1D4j
		mov	[bx+47h], al
		mov	al, [bx+28h]
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		mov	al, [bx+47h]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 12h
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 6
		mov	bx, [bp+var_4]
		push	word ptr [bx+20h]
		push	word ptr [bx+1Eh]
		push	bx
		sub	ax, ax
		push	ax
		mov	al, [bx+47h]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 21h	; '!'
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 0Ah
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_38936:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+324o
		cmp	[bp+arg_0], 10h
		jl	short loc_3893F
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_3893F:				; CODE XREF: sub_38702+238j
		mov	al, [bp+var_2]
		sub	ah, ah
		mov	cx, ax
		mov	ax, 7D00h
		cwd
		div	cx
		mov	word_454BA, ax
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_38952:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+326o
		mov	al, [bp+var_2]
		sub	ah, ah
		push	ax
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_38C4C
		jmp	loc_38A64
; ---------------------------------------------------------------------------

loc_38962:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+328o
		push	word_42A04
		mov	al, [bp+var_2]
		sub	ah, ah
		push	ax
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_38AEA
		add	sp, 6
		jmp	loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_3897A:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+32Ao
		mov	bx, [bp+var_4]
		mov	al, [bp+var_2]
		mov	[bx+16h], al
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_38986:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+32Co
		mov	bx, [bp+var_4]
		mov	al, [bp+var_2]
		mov	[bx+24h], al
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_38992:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+32Eo
		mov	bx, [bp+var_4]
		mov	ax, [bx]
		mov	dx, [bx+2]
		mov	si, [bx+32h]
		and	si, 0FFh
		shl	si, 1
		shl	si, 1
		mov	[bx+si+33h], ax
		mov	[bx+si+35h], dx
		mov	si, [bx+32h]
		and	si, 0FFh
		mov	al, [bp+var_2]
		dec	al
		mov	[bx+si+43h], al
		inc	byte ptr [bx+32h]
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_389C0:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+330o
		mov	bx, [bp+var_4]
		cmp	byte ptr [bx+32h], 0
		jnz	short loc_389CC
		jmp	loc_38A67
; ---------------------------------------------------------------------------

loc_389CC:				; CODE XREF: sub_38702+2C5j
		mov	al, [bx+32h]
		sub	ah, ah
		mov	si, ax
		mov	di, bx
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx+di+2Fh]
		mov	dx, [bx+di+31h]
		mov	bx, di
		mov	[bx], ax
		mov	[bx+2],	dx
		mov	al, [bx+si+42h]
		dec	byte ptr [bx+si+42h]
		or	al, al
		jnz	short loc_38A67
		dec	byte ptr [bx+32h]
		jmp	short loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_389F8:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+332o
		mov	bx, [bp+var_4]
		mov	al, [bp+var_2]
		mov	[bx+22h], al
		jmp	short loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_38A04:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+33Co
		mov	bx, [bp+var_4]
		mov	al, [bp+var_2]
		mov	[bx+47h], al
		jmp	short loc_38A67
; ---------------------------------------------------------------------------
		align 2

loc_38A10:				; CODE XREF: sub_38702+85j
					; DATA XREF: sub_38702+334o
		push	word_42A04
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_38BEA
		jmp	short loc_38A64
; ---------------------------------------------------------------------------
		align 2
off_38A1E	dw offset loc_3878C	; DATA XREF: sub_38702+85r
		dw offset loc_38844
		dw offset loc_38886
		dw offset loc_388A2
		dw offset loc_38936
		dw offset loc_38952
		dw offset loc_38962
		dw offset loc_3897A
		dw offset loc_38986
		dw offset loc_38992
		dw offset loc_389C0
		dw offset loc_389F8
		dw offset loc_38A10
		dw offset loc_3881C
		dw offset loc_38A67
		dw offset loc_387EA
		dw offset loc_38A04
		dw offset loc_3880E
; ---------------------------------------------------------------------------
		jmp	short loc_38A67
; ---------------------------------------------------------------------------

loc_38A44:				; CODE XREF: sub_38702+6Bj
		cmp	byte_42A02, 80h	; 'Ä'
		jnb	short loc_38A54
		mov	bx, [bp+var_4]
		mov	al, [bx+22h]
		mov	byte_42A03, al

loc_38A54:				; CODE XREF: sub_38702+347j
		and	byte_42A02, 7Fh
		push	[bp+arg_0]
		mov	ax, 728Eh
		push	ax
		push	cs
		call	near ptr sub_38DE6

loc_38A64:				; CODE XREF: sub_38702+108j
					; sub_38702+25Dj ...
		add	sp, 4

loc_38A67:				; CODE XREF: sub_38702+7Fj
					; sub_38702+85j ...
		mov	bx, [bp+var_4]
		mov	ax, [bx]
		or	ax, [bx+2]
		jnz	short loc_38A74
		jmp	loc_38737
; ---------------------------------------------------------------------------

loc_38A74:				; CODE XREF: sub_38702+36Dj
		push	word ptr [bx+2]
		push	word ptr [bx]
		mov	ax, 7282h
		push	ax
		push	cs
		call	near ptr sub_3945A
		add	sp, 6
		mov	bx, [bp+var_4]
		mov	ax, word_429F2
		mov	dx, word_429F4
		mov	[bx+18h], ax
		mov	[bx+1Ah], dx
		jmp	loc_38737
; ---------------------------------------------------------------------------
		align 2

loc_38A98:				; CODE XREF: sub_38702+28j
					; sub_38702+3Dj ...
		sub	word ptr [bx+18h], 1
		sbb	word ptr [bx+1Ah], 0

loc_38AA0:				; CODE XREF: sub_38702+32j
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38702	endp

; ---------------------------------------------------------------------------
		align 2
		push	bp
		mov	bp, sp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	word ptr [bp+6]
		mov	bx, ax
		mov	al, [bp+8]
		mov	[bx-7DBDh], al
		pop	ds
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38AC4	proc far		; CODE XREF: sub_38702+1AAp

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	si, [bp+arg_0]
		and	si, 0FFh
		shl	si, 1
		shl	si, 1
		mov	bx, [bp+arg_2]
		les	bx, [bx+2Eh]
		mov	ax, es:[bx+si]
		mov	dx, es:[bx+si+2]
		pop	ds
		pop	si
		pop	bp
		retf
sub_38AC4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38AEA	proc far		; CODE XREF: sub_38702+26Ep

var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_A		= word ptr -0Ah
var_8		= dword	ptr -8
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= byte ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 12h
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_4], ax
		cmp	[bp+arg_2], 40h	; '@'
		jnz	short loc_38B12
		mov	bx, ax
		mov	al, byte ptr [bp+arg_4]
		mov	[bx+25h], al

loc_38B12:				; CODE XREF: sub_38AEA+1Ej
		cmp	byte_40634, 0
		jz	short loc_38B44
		push	[bp+arg_4]
		mov	al, [bp+arg_2]
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		mov	bx, [bp+var_4]
		mov	al, [bx+47h]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 15h
		mov	word ptr [bp+var_8+2], dx
		mov	word ptr [bp+var_8], ax
		call	[bp+var_8]
		add	sp, 8

loc_38B44:				; CODE XREF: sub_38AEA+2Dj
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jnz	short loc_38B55
		jmp	loc_38BE3
; ---------------------------------------------------------------------------

loc_38B55:				; CODE XREF: sub_38AEA+66j
		mov	al, [bp+arg_2]
		mov	[bp+var_A], ax
		mov	si, 0A2B6h
		mov	[bp+var_E], 0A2B7h
		mov	[bp+var_10], si
		mov	[bp+var_12], 0A2CCh
		mov	di, [bp+var_2]

loc_38B6E:				; CODE XREF: sub_38AEA+F4j
		mov	bx, [bp+var_4]
		mov	al, [si]
		cmp	[bx+23h], al
		jnz	short loc_38B9D
		cmp	byte_40634, 0
		jnz	short loc_38B9D
		push	[bp+arg_4]
		push	[bp+var_A]
		push	si
		push	di
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 15h
		mov	word ptr [bp+var_8+2], dx
		mov	word ptr [bp+var_8], ax
		call	[bp+var_8]
		add	sp, 8

loc_38B9D:				; CODE XREF: sub_38AEA+8Cj
					; sub_38AEA+93j
		cmp	[bp+arg_2], 40h	; '@'
		jnz	short loc_38BC4
		cmp	[bp+arg_4], 0
		jnz	short loc_38BC4
		mov	bx, [bp+var_E]
		cmp	byte ptr [bx], 2
		jnz	short loc_38BC4
		mov	bx, [bp+var_10]
		mov	al, [bx]
		mov	bx, [bp+var_4]
		cmp	[bx+23h], al
		jnz	short loc_38BC4
		mov	bx, [bp+var_12]
		mov	byte ptr [bx], 4

loc_38BC4:				; CODE XREF: sub_38AEA+B7j
					; sub_38AEA+BDj ...
		add	si, 2Eh	; '.'
		add	[bp+var_E], 2Eh	; '.'
		add	[bp+var_10], 2Eh ; '.'
		add	[bp+var_12], 2Eh ; '.'
		inc	di
		mov	ax, di
		mov	cl, byte_459D2
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_38B6E
		mov	[bp+var_2], di

loc_38BE3:				; CODE XREF: sub_38AEA+68j
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38AEA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38BEA	proc far		; CODE XREF: sub_38702+316p

var_6		= dword	ptr -6
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_2], ax
		test	[bp+arg_2], 100h
		jz	short loc_38C0D
		or	byte ptr [bp+arg_2], 80h

loc_38C0D:				; CODE XREF: sub_38BEA+1Dj
		mov	al, byte ptr [bp+arg_2]
		cbw
		mov	cx, [bp+arg_2]
		sub	cl, cl
		shr	cx, 1
		add	cx, ax
		sub	cx, 2000h
		mov	[bp+arg_2], cx
		mov	bx, [bp+var_2]
		mov	ax, cx
		mov	[bx+26h], ax
		mov	al, [bx+47h]
		sub	ah, ah
		push	ax
		push	cx
		push	bx
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 1Bh
		mov	word ptr [bp+var_6+2], dx
		mov	word ptr [bp+var_6], ax
		call	[bp+var_6]
		add	sp, 6
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_38BEA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38C4C	proc far		; CODE XREF: sub_26EF4+6CP
					; seg007:0482P	...

var_C		= dword	ptr -0Ch
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= byte ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_4], ax
		mov	bx, ax
		mov	al, [bp+arg_2]
		mov	[bx+28h], al
		cmp	byte_40634, 0
		jnz	short loc_38CC8
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jz	short loc_38CF0
		mov	al, [bp+arg_2]
		mov	[bp+var_6], ax
		mov	si, 0A2B6h
		mov	di, [bp+var_2]

loc_38C8F:				; CODE XREF: sub_38C4C+75j
		mov	al, [si]
		sub	ah, ah
		cmp	ax, [bp+arg_0]
		jnz	short loc_38CB3
		push	[bp+var_6]
		push	si
		push	di
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 12h
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 6

loc_38CB3:				; CODE XREF: sub_38C4C+4Aj
		add	si, 2Eh	; '.'
		inc	di
		mov	ax, di
		mov	cl, byte_459D2
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_38C8F
		mov	[bp+var_2], di
		jmp	short loc_38CF0
; ---------------------------------------------------------------------------

loc_38CC8:				; CODE XREF: sub_38C4C+27j
		mov	al, [bp+arg_2]
		sub	ah, ah
		push	ax
		sub	ax, ax
		push	ax
		mov	bx, [bp+var_4]
		mov	al, [bx+47h]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 12h
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 6

loc_38CF0:				; CODE XREF: sub_38C4C+35j
					; sub_38C4C+7Aj
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38C4C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38CF8	proc far		; CODE XREF: sub_26EF4+2AP

var_A		= dword	ptr -0Ah
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		mov	ax, word ptr [bp+arg_2]
		mov	dx, word ptr [bp+arg_2+2]
		mov	[si-7DE6h], ax
		mov	[si-7DE4h], dx
		les	bx, [bp+arg_2]
		cmp	byte ptr es:[bx+43h], 10h
		jnb	short loc_38D30
		mov	al, es:[bx+43h]
		mov	[si-7DBDh], al
		jmp	short loc_38D43
; ---------------------------------------------------------------------------

loc_38D30:				; CODE XREF: sub_38CF8+2Cj
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	bx, ax
		mov	al, byte ptr [bp+arg_0]
		and	al, 0Fh
		inc	al
		mov	[bx-7DBDh], al

loc_38D43:				; CODE XREF: sub_38CF8+36j
		cmp	byte_40634, 0
		jnz	short loc_38DAC
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jnz	short loc_38D5B
		jmp	loc_38DDE
; ---------------------------------------------------------------------------

loc_38D5B:				; CODE XREF: sub_38CF8+5Ej
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 81FCh
		mov	[bp+var_4], ax
		mov	si, 0A2B6h
		mov	di, [bp+var_2]

loc_38D6D:				; CODE XREF: sub_38CF8+ADj
		mov	al, [si]
		sub	ah, ah
		cmp	ax, [bp+arg_0]
		jnz	short loc_38D97
		push	word ptr [bp+arg_2+2]
		push	word ptr [bp+arg_2]
		push	[bp+var_4]
		push	si
		push	di
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 21h	; '!'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 0Ah

loc_38D97:				; CODE XREF: sub_38CF8+7Cj
		add	si, 2Eh	; '.'
		inc	di
		mov	ax, di
		mov	cl, byte_459D2
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_38D6D
		mov	[bp+var_2], di
		jmp	short loc_38DDE
; ---------------------------------------------------------------------------

loc_38DAC:				; CODE XREF: sub_38CF8+50j
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		push	word ptr [bp+arg_2+2]
		push	word ptr [bp+arg_2]
		add	ax, 81FCh
		push	ax
		sub	ax, ax
		push	ax
		mov	al, [si-7DBDh]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 21h	; '!'
		mov	word ptr [bp+var_A+2], dx
		mov	word ptr [bp+var_A], ax
		call	[bp+var_A]
		add	sp, 0Ah

loc_38DDE:				; CODE XREF: sub_38CF8+60j
					; sub_38CF8+B2j
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_38CF8	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_38DE6	proc far		; CODE XREF: sub_38702+35Fp
					; sub_39050+2Ep

var_12		= dword	ptr -12h
var_E		= dword	ptr -0Eh
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 12h
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_2]
		add	ax, 81FCh
		mov	[bp+var_8], ax
		mov	bx, ax
		mov	ax, [bx+1Eh]
		mov	dx, [bx+20h]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		les	bx, [bp+var_4]
		cmp	byte ptr es:[bx+5], 5
		jz	short loc_38E1A
		jmp	loc_38E9E
; ---------------------------------------------------------------------------

loc_38E1A:				; CODE XREF: sub_38DE6+2Fj
		mov	bx, [bp+arg_0]
		mov	al, [bx+4]
		sub	ah, ah
		sub	ax, 18h
		cmp	ax, 0Fh
		ja	short loc_38E74
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_38E7E[bx]

loc_38E32:				; DATA XREF: sub_38DE6:off_38E7Eo
		mov	ax, word_42A34
		mov	dx, word_42A36

loc_38E39:				; CODE XREF: sub_38DE6+63j
					; sub_38DE6+6Dj ...
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		jmp	short loc_38E9E
; ---------------------------------------------------------------------------
		align 2

loc_38E42:				; CODE XREF: sub_38DE6+47j
					; DATA XREF: sub_38DE6+9Co
		mov	ax, word_4393E
		mov	dx, word_43940
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2

loc_38E4C:				; CODE XREF: sub_38DE6+47j
					; DATA XREF: sub_38DE6+B2o
		mov	ax, word_454CA
		mov	dx, word_454CC
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2

loc_38E56:				; CODE XREF: sub_38DE6+47j
					; DATA XREF: sub_38DE6+B6o
		mov	ax, word_4432C
		mov	dx, word_4432E
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2

loc_38E60:				; CODE XREF: sub_38DE6+47j
					; DATA XREF: sub_38DE6+A4o
		mov	ax, word_43928
		mov	dx, word_4392A
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2

loc_38E6A:				; CODE XREF: sub_38DE6+47j
					; DATA XREF: sub_38DE6+A8o ...
		mov	ax, word_44368
		mov	dx, word_4436A
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2

loc_38E74:				; CODE XREF: sub_38DE6+42j
					; sub_38DE6+47j
					; DATA XREF: ...
		mov	ax, word_4394A
		mov	dx, word_4394C
		jmp	short loc_38E39
; ---------------------------------------------------------------------------
		align 2
off_38E7E	dw offset loc_38E32	; DATA XREF: sub_38DE6+47r
		dw offset loc_38E74
		dw offset loc_38E42
		dw offset loc_38E74
		dw offset loc_38E74
		dw offset loc_38E74
		dw offset loc_38E60
		dw offset loc_38E74
		dw offset loc_38E6A
		dw offset loc_38E74
		dw offset loc_38E6A
		dw offset loc_38E74
		dw offset loc_38E74
		dw offset loc_38E4C
		dw offset loc_38E74
		dw offset loc_38E56
; ---------------------------------------------------------------------------

loc_38E9E:				; CODE XREF: sub_38DE6+31j
					; sub_38DE6+59j
		mov	ax, word ptr [bp+var_4]
		or	ax, word ptr [bp+var_4+2]
		jnz	short loc_38EB0

loc_38EA6:				; CODE XREF: sub_38DE6+E0j
		mov	ax, 0FFFFh
		pop	ds
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_38EB0:				; CODE XREF: sub_38DE6+BEj
		push	[bp+var_8]
		push	word ptr [bp+var_4+2]
		push	word ptr [bp+var_4]
		push	cs
		call	loc_390C8
		add	sp, 6
		mov	[bp+var_6], ax
		cmp	ax, 0FFFFh
		jz	short loc_38EA6
		mov	ax, 2Eh	; '.'
		imul	[bp+var_6]
		add	ax, 0A2B6h
		mov	[bp+var_A], ax
		mov	bx, ax
		mov	ax, word ptr [bp+var_4]
		mov	dx, word ptr [bp+var_4+2]
		cmp	[bx+10h], ax
		jnz	short loc_38EE6
		cmp	[bx+12h], dx
		jz	short loc_38F18

loc_38EE6:				; CODE XREF: sub_38DE6+F9j
		mov	ax, word ptr [bp+var_4]
		mov	dx, word ptr [bp+var_4+2]
		mov	[bx+10h], ax
		mov	[bx+12h], dx
		cmp	byte_40634, 0
		jnz	short loc_38F18
		push	dx
		push	ax
		push	[bp+var_8]
		push	bx
		push	[bp+var_6]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 21h	; '!'
		mov	word ptr [bp+var_E+2], dx
		mov	word ptr [bp+var_E], ax
		call	[bp+var_E]
		add	sp, 0Ah

loc_38F18:				; CODE XREF: sub_38DE6+FEj
					; sub_38DE6+111j
		mov	bx, [bp+var_A]
		mov	al, byte ptr [bp+arg_2]
		mov	[bx], al
		mov	ax, [bp+var_8]
		mov	[bx+2Ah], ax
		mov	byte ptr [bx+1], 1
		mov	byte ptr [bx+16h], 1
		mov	si, bx
		les	si, [si+10h]
		mov	ax, es:[si+1Ch]
		mov	[bx+14h], ax
		mov	si, [bp+var_8]
		mov	al, [si+24h]
		mov	[bx+2],	al
		sub	ax, ax
		mov	[bx+0Ah], ax
		mov	[bx+8],	ax
		mov	si, [bp+arg_0]
		mov	ax, [si+6]
		mov	dx, [si+8]
		sub	ax, 1
		sbb	dx, 0
		mov	[bx+0Ch], ax
		mov	[bx+0Eh], dx
		les	si, [bp+var_4]
		mov	ax, es:[si+2Ah]
		mov	[bx+18h], ax
		mov	ax, es:[si+2Ch]
		mov	[bx+1Ah], ax
		mov	ax, es:[si+30h]
		mov	[bx+24h], ax
		mov	word ptr [bx+1Ch], 0
		mov	al, es:[si+34h]
		mov	[bx+26h], al
		mov	byte ptr [bx+27h], 0
		mov	ax, es:[si+36h]
		mov	[bx+1Eh], ax
		mov	ax, es:[si+38h]
		mov	[bx+20h], ax
		mov	byte ptr [bx+28h], 0
		mov	byte ptr [bx+22h], 0
		mov	byte ptr [bx+29h], 0
		cmp	byte_40634, 0
		jnz	short loc_38FAE
		mov	al, byte ptr [bp+var_6]
		jmp	short loc_38FB4
; ---------------------------------------------------------------------------

loc_38FAE:				; CODE XREF: sub_38DE6+1C1j
		mov	si, [bp+var_8]
		mov	al, [si+47h]

loc_38FB4:				; CODE XREF: sub_38DE6+1C6j
		mov	[bx+2Ch], al
		mov	bx, [bp+arg_0]
		cmp	byte ptr [bx+4], 0FFh
		jnz	short loc_38FF2
		push	word ptr [bx]
		push	[bp+var_A]
		mov	bx, [bp+var_A]
		mov	al, [bx+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 24h	; '$'
		mov	word ptr [bp+var_E+2], dx
		mov	word ptr [bp+var_E], ax
		call	[bp+var_E]
		add	sp, 6
		cmp	byte_40634, 0
		jz	short loc_38FF2
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+4], 3Ch ; '<'

loc_38FF2:				; CODE XREF: sub_38DE6+1D8j
					; sub_38DE6+203j
		push	word ptr [bp+var_4+2]
		push	word ptr [bp+var_4]
		mov	bx, [bp+arg_0]
		mov	al, [bx+5]
		sub	ah, ah
		push	ax
		les	bx, [bp+var_4]
		mov	al, es:[bx+10h]
		cbw
		mov	bx, [bp+arg_0]
		mov	cx, ax
		mov	al, [bx+4]
		cbw
		add	ax, cx
		push	ax
		push	[bp+var_8]
		push	[bp+var_A]
		mov	bx, [bp+var_A]
		mov	al, [bx+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 9
		mov	word ptr [bp+var_12+2],	dx
		mov	word ptr [bp+var_12], ax
		call	[bp+var_12]
		add	sp, 0Eh
		mov	bx, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	al, [si+4]
		mov	[bx-6CA6h], al
		mov	ax, [bp+var_6]
		pop	ds
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_38DE6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39050	proc far		; CODE XREF: sub_26EF4+54P

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	byte_42A0E, 0FFh
		mov	ax, [bp+arg_0]
		mov	word_42A0A, ax
		mov	word_42A0C, 0
		mov	word_42A10, 0FFE0h
		mov	word_42A12, 0FFFFh
		push	[bp+arg_2]
		mov	ax, 729Ah
		push	ax
		push	cs
		call	near ptr sub_38DE6
		add	sp, 4
		pop	ds
		pop	bp
		retf
sub_39050	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39088	proc far		; CODE XREF: seg007:0529P

var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 2Eh	; '.'
		imul	[bp+arg_0]
		mov	si, ax
		push	[bp+arg_2]
		add	ax, 0A2B6h
		push	ax
		mov	al, [si-5D1Eh]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 24h	; '$'
		mov	word ptr [bp+var_4+2], dx
		mov	word ptr [bp+var_4], ax
		call	[bp+var_4]
		add	sp, 6
		pop	ds
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_39088	endp

; ---------------------------------------------------------------------------
		align 2

loc_390C8:				; CODE XREF: sub_38DE6+D4p
		push	bp
		mov	bp, sp
		sub	sp, 1Ah
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word ptr [bp-10h], 0FFFFh
		mov	word ptr [bp-0Eh], 0FFFFh
		sub	ax, ax
		mov	[bp-8],	ax
		mov	[bp-0Ah], ax
		mov	[bp-2],	ax
		mov	[bp-4],	ax
		les	bx, [bp+6]
		cmp	es:[bx+0Ch], ax
		jnz	short loc_390FE

loc_390F7:				; CODE XREF: seg028:0B6Aj seg028:0CE4j ...
		mov	ax, 0FFFFh
		jmp	loc_39452
; ---------------------------------------------------------------------------
		align 2

loc_390FE:				; CODE XREF: seg028:0AC5j
		cmp	byte_40634, 0
		jnz	short loc_39108
		jmp	loc_391F0
; ---------------------------------------------------------------------------

loc_39108:				; CODE XREF: seg028:0AD3j
		sub	si, si
		mov	di, 0A2B6h

loc_3910D:				; CODE XREF: seg028:0B4Fj
		mov	cx, di
		mov	bx, cx
		cmp	byte ptr [bx+1], 0
		jnz	short loc_39122

loc_39117:				; CODE XREF: seg028:0D51j
		mov	ax, si
		mov	[bp-6],	si
		mov	[bp-0Ch], cx
		jmp	loc_39452
; ---------------------------------------------------------------------------

loc_39122:				; CODE XREF: seg028:0AE5j
		mov	bx, cx
		cmp	byte ptr [bx+1], 1
		jnz	short loc_3914D
		mov	ax, [bp-0Ah]
		mov	dx, [bp-8]
		cmp	[bx+0Ah], dx
		jb	short loc_3914D
		ja	short loc_3913C
		cmp	[bx+8],	ax
		jbe	short loc_3914D

loc_3913C:				; CODE XREF: seg028:0B05j
		mov	bx, cx
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	[bp-0Ah], ax
		mov	[bp-8],	dx
		mov	[bp-10h], si

loc_3914D:				; CODE XREF: seg028:0AF8j seg028:0B03j ...
		mov	bx, cx
		cmp	byte ptr [bx+1], 2
		jnz	short loc_39178
		mov	ax, [bp-4]
		mov	dx, [bp-2]
		cmp	[bx+0Ah], dx
		jb	short loc_39178
		ja	short loc_39167
		cmp	[bx+8],	ax
		jbe	short loc_39178

loc_39167:				; CODE XREF: seg028:0B30j
		mov	bx, cx
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		mov	[bp-0Eh], si

loc_39178:				; CODE XREF: seg028:0B23j seg028:0B2Ej ...
		add	di, 2Eh	; '.'
		inc	si
		cmp	si, 10h
		jl	short loc_3910D
		mov	[bp-6],	si
		mov	[bp-0Ch], cx
		cmp	word ptr [bp-0Eh], 0FFFFh
		jz	short loc_39194

loc_3918D:				; CODE XREF: seg028:0CDBj
		mov	ax, [bp-0Eh]
		jmp	loc_39452
; ---------------------------------------------------------------------------
		align 2

loc_39194:				; CODE XREF: seg028:0B5Bj
		cmp	word ptr [bp-10h], 0FFFFh
		jnz	short loc_3919D
		jmp	loc_390F7
; ---------------------------------------------------------------------------

loc_3919D:				; CODE XREF: seg028:0B68j
		mov	ax, 2Eh	; '.'
		imul	word ptr [bp-10h]
		mov	si, ax
		add	ax, 0A2B6h
		push	ax
		mov	al, [si-5D1Eh]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Ch
		mov	[bp-14h], dx
		mov	[bp-16h], ax
		call	dword ptr [bp-16h]
		add	sp, 4
		mov	ax, si
		add	ax, 0A2B6h
		push	ax
		mov	al, [si-5D1Eh]
		sub	ah, ah
		push	ax

loc_391D3:				; CODE XREF: seg028:0D11j
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Fh
		mov	[bp-14h], dx
		mov	[bp-16h], ax
		call	dword ptr [bp-16h]
		add	sp, 4
		mov	ax, [bp-10h]
		jmp	loc_39452
; ---------------------------------------------------------------------------
		align 2

loc_391F0:				; CODE XREF: seg028:0AD5j
		mov	bx, [bp+0Ah]
		mov	si, bx
		mov	al, [si+16h]
		cmp	[bx+15h], al
		jnb	short loc_39200
		jmp	loc_39344
; ---------------------------------------------------------------------------

loc_39200:				; CODE XREF: seg028:0BCBj
		mov	word ptr [bp-6], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jnz	short loc_39211
		jmp	loc_392C5
; ---------------------------------------------------------------------------

loc_39211:				; CODE XREF: seg028:0BDCj
		mov	[bp-12h], ax
		mov	word ptr [bp-18h], 4E9Eh
		mov	word ptr [bp-1Ah], 0A2B6h
		mov	di, [bp-6]
		mov	si, [bp-0Ch]
		mov	cx, bx

loc_39226:				; CODE XREF: seg028:0C8Cj
		mov	bx, [bp-18h]
		mov	ax, [bx]
		les	bx, [bp+6]
		test	es:[bx+0Ch], ax
		jz	short loc_392AC
		mov	si, [bp-1Ah]
		mov	bx, cx
		mov	al, [si]
		cmp	[bx+23h], al
		jnz	short loc_392AC
		cmp	byte ptr [si+1], 0
		jnz	short loc_39254
		inc	byte ptr [bx+15h]
		mov	ax, di
		mov	[bp-6],	di
		mov	[bp-0Ch], si
		jmp	loc_39452
; ---------------------------------------------------------------------------

loc_39254:				; CODE XREF: seg028:0C14j
		mov	bx, cx
		mov	al, [si+2]
		cmp	[bx+24h], al
		jb	short loc_392AC
		cmp	byte ptr [si+1], 1
		jnz	short loc_39285
		mov	ax, [bp-0Ah]
		mov	dx, [bp-8]
		cmp	[si+0Ah], dx
		jb	short loc_39285
		ja	short loc_39276
		cmp	[si+8],	ax
		jbe	short loc_39285

loc_39276:				; CODE XREF: seg028:0C3Fj
		mov	ax, [si+8]
		mov	dx, [si+0Ah]
		mov	[bp-0Ah], ax
		mov	[bp-8],	dx
		mov	[bp-10h], di

loc_39285:				; CODE XREF: seg028:0C32j seg028:0C3Dj ...
		cmp	byte ptr [si+1], 2
		jnz	short loc_392AC
		mov	ax, [bp-4]
		mov	dx, [bp-2]
		cmp	[si+0Ah], dx
		jb	short loc_392AC
		ja	short loc_3929D
		cmp	[si+8],	ax
		jbe	short loc_392AC

loc_3929D:				; CODE XREF: seg028:0C66j
		mov	ax, [si+8]
		mov	dx, [si+0Ah]
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		mov	[bp-0Eh], di

loc_392AC:				; CODE XREF: seg028:0C02j seg028:0C0Ej ...
		add	word ptr [bp-18h], 2
		add	word ptr [bp-1Ah], 2Eh ; '.'
		inc	di
		mov	ax, di
		cmp	ax, [bp-12h]
		jnb	short loc_392BF
		jmp	loc_39226
; ---------------------------------------------------------------------------

loc_392BF:				; CODE XREF: seg028:0C8Aj
		mov	[bp-6],	di
		mov	[bp-0Ch], si

loc_392C5:				; CODE XREF: seg028:0BDEj
		cmp	word ptr [bp-0Eh], 0FFFFh
		jz	short near ptr byte_3930E

loc_392CB:				; CODE XREF: seg028:0DE8j seg028:0DF4j
		mov	ax, 2Eh	; '.'
		imul	word ptr [bp-0Eh]
		mov	si, ax
		add	si, 0A2B6h
		push	si
		push	word ptr [bp-0Eh]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Ch
		mov	[bp-14h], dx
		mov	[bp-16h], ax
		call	dword ptr [bp-16h]
		add	sp, 4
		push	si
		push	word ptr [bp-0Eh]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Fh
		mov	[bp-14h], dx
		mov	[bp-16h], ax
		call	dword ptr [bp-16h]
		add	sp, 4
		jmp	loc_3918D
; ---------------------------------------------------------------------------
byte_3930E	db 83h,	7Eh		; CODE XREF: seg028:0C99j
byte_39310	db 0F0h			; DATA XREF: __setenvp+1Br
; ---------------------------------------------------------------------------
		push	word ptr [di+3]
		jmp	loc_390F7
; ---------------------------------------------------------------------------

loc_39317:				; CODE XREF: seg028:0E12j seg028:0E1Ej
		mov	ax, 2Eh	; '.'
		imul	word ptr [bp-10h]
		mov	si, ax
		add	si, 0A2B6h
		push	si
		push	word ptr [bp-10h]
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Ch
		mov	[bp-14h], dx
		mov	[bp-16h], ax
		call	dword ptr [bp-16h]
		add	sp, 4
		push	si
		push	word ptr [bp-10h]
		jmp	loc_391D3
; ---------------------------------------------------------------------------

loc_39344:				; CODE XREF: seg028:0BCDj
		mov	word ptr [bp-6], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jnz	short loc_39355
		jmp	loc_39401
; ---------------------------------------------------------------------------

loc_39355:				; CODE XREF: seg028:0D20j
		mov	[bp-1Ah], ax
		mov	di, 0A2B6h
		mov	word ptr [bp-12h], 4E9Eh
		mov	si, [bp-6]

loc_39363:				; CODE XREF: seg028:0DC8j
		mov	cx, di
		mov	bx, [bp-12h]
		mov	ax, [bx]
		les	bx, [bp+6]
		test	es:[bx+0Ch], ax
		jz	short loc_393E9
		mov	bx, cx
		cmp	byte ptr [bx+1], 0
		jnz	short loc_39386
		mov	bx, [bp+0Ah]
		inc	byte ptr [bx+15h]
		jmp	loc_39117
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_39386:				; CODE XREF: seg028:0D49j
		mov	bx, cx
		mov	al, [bx+2]
		mov	bx, [bp+0Ah]
		cmp	[bx+24h], al
		jb	short loc_393E9
		mov	bx, cx
		cmp	byte ptr [bx+1], 1
		jnz	short loc_393BE
		mov	ax, [bp-0Ah]
		mov	dx, [bp-8]
		cmp	[bx+0Ah], dx
		jb	short loc_393BE
		ja	short loc_393AD
		cmp	[bx+8],	ax
		jbe	short loc_393BE

loc_393AD:				; CODE XREF: seg028:0D76j
		mov	bx, cx
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	[bp-0Ah], ax
		mov	[bp-8],	dx
		mov	[bp-10h], si

loc_393BE:				; CODE XREF: seg028:0D69j seg028:0D74j ...
		mov	bx, cx
		cmp	byte ptr [bx+1], 2
		jnz	short loc_393E9
		mov	ax, [bp-4]
		mov	dx, [bp-2]
		cmp	[bx+0Ah], dx
		jb	short loc_393E9
		ja	short loc_393D8
		cmp	[bx+8],	ax
		jbe	short loc_393E9

loc_393D8:				; CODE XREF: seg028:0DA1j
		mov	bx, cx
		mov	ax, [bx+8]
		mov	dx, [bx+0Ah]
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		mov	[bp-0Eh], si

loc_393E9:				; CODE XREF: seg028:0D41j seg028:0D61j ...
		add	di, 2Eh	; '.'
		add	word ptr [bp-12h], 2
		inc	si
		mov	ax, si
		cmp	ax, [bp-1Ah]
		jnb	short loc_393FB
		jmp	loc_39363
; ---------------------------------------------------------------------------

loc_393FB:				; CODE XREF: seg028:0DC6j
		mov	[bp-6],	si
		mov	[bp-0Ch], cx

loc_39401:				; CODE XREF: seg028:0D22j
		cmp	word ptr [bp-0Eh], 0FFFFh
		jz	short loc_39428
		mov	ax, 2Eh	; '.'
		imul	word ptr [bp-0Eh]
		mov	bx, ax
		mov	si, [bx-5D20h]
		cmp	[bp+0Ah], si
		jnz	short loc_3941B
		jmp	loc_392CB
; ---------------------------------------------------------------------------

loc_3941B:				; CODE XREF: seg028:0DE6j
		dec	byte ptr [si+15h]
		mov	bx, [bp+0Ah]
		inc	byte ptr [bx+15h]
		jmp	loc_392CB
; ---------------------------------------------------------------------------
		align 2

loc_39428:				; CODE XREF: seg028:0DD5j
		cmp	word ptr [bp-10h], 0FFFFh
		jnz	short loc_39431
		jmp	loc_390F7
; ---------------------------------------------------------------------------

loc_39431:				; CODE XREF: seg028:0DFCj
		mov	ax, 2Eh	; '.'
		imul	word ptr [bp-10h]
		mov	bx, ax
		mov	si, [bx-5D20h]
		cmp	[bp+0Ah], si
		jnz	short loc_39445
		jmp	loc_39317
; ---------------------------------------------------------------------------

loc_39445:				; CODE XREF: seg028:0E10j
		dec	byte ptr [si+15h]
		mov	bx, [bp+0Ah]
		inc	byte ptr [bx+15h]
		jmp	loc_39317
; ---------------------------------------------------------------------------
		align 2

loc_39452:				; CODE XREF: seg028:0ACAj seg028:0AEFj ...
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3945A	proc far		; CODE XREF: sub_38702+54p
					; sub_38702+37Cp

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= byte ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word ptr [bp+arg_2]
		mov	dx, word ptr [bp+arg_2+2]
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		mov	bx, [bp+arg_0]
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	si, bx

loc_39480:				; CODE XREF: sub_3945A+57j
		les	bx, [bp+arg_2]
		mov	al, es:[bx]
		sub	ah, ah
		and	ax, 7Fh
		sub	dx, dx
		mov	cx, [si]
		mov	bx, [si+2]
		mov	di, cx
		mov	cl, 7

loc_39496:				; CODE XREF: sub_3945A+42j
		shl	di, 1
		rcl	bx, 1
		dec	cl
		jnz	short loc_39496
		add	ax, di
		adc	dx, bx
		mov	[si], ax
		mov	[si+2],	dx
		les	bx, [bp+arg_2]
		inc	word ptr [bp+arg_2]
		test	byte ptr es:[bx], 80h
		jnz	short loc_39480
		mov	bx, [bp+arg_0]
		mov	si, word ptr [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		mov	[bx+4],	al
		mov	[bp+var_8], al
		sub	ah, ah
		sub	ax, 0D9h ; 'Ÿ'
		cmp	ax, 11h
		jbe	short loc_394D2
		jmp	loc_395CC
; ---------------------------------------------------------------------------

loc_394D2:				; CODE XREF: sub_3945A+73j
		add	ax, ax
		xchg	ax, bx
		jmp	cs:off_395A8[bx]

loc_394DA:				; DATA XREF: sub_3945A+16Co
		mov	[bp+var_2], 0
		mov	bx, word ptr [bp+arg_2]
		mov	al, es:[bx]
		sub	ah, ah
		or	ax, ax
		jz	short loc_39518
		mov	[bp+var_A], ax
		mov	[bp+var_C], ax
		mov	bx, [bp+var_2]
		mov	ax, bx
		add	ax, word ptr [bp+arg_2]
		mov	dx, es
		inc	ax
		mov	cx, [bp+var_C]
		shr	cx, 1
		lea	di, [bx+717Eh]
		mov	si, ax
		push	ds
		pop	es
		assume es:dseg
		push	ds
		mov	ds, dx
		repne movsw
		jnb	short loc_39511
		movsb

loc_39511:				; CODE XREF: sub_3945A+B4j
		pop	ds
		mov	ax, [bp+var_C]
		add	[bp+var_2], ax

loc_39518:				; CODE XREF: sub_3945A+7Bj
					; sub_3945A+8Fj
					; DATA XREF: ...
		les	bx, [bp+arg_2]
		assume es:nothing
		mov	al, es:[bx]
		sub	ah, ah
		add	word ptr [bp+arg_2], ax
		inc	word ptr [bp+arg_2]
		jmp	loc_395CC
; ---------------------------------------------------------------------------
		align 2

loc_3952A:				; CODE XREF: sub_3945A+7Bj
					; DATA XREF: sub_3945A+168o
		mov	bx, [bp+arg_0]
		mov	si, word ptr [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		mov	[bx+5],	al
		push	es
		push	word ptr [bp+arg_2]
		call	sub_384FA
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	[bx+6],	ax
		mov	[bx+8],	dx
		add	word ptr [bp+arg_2], 4
		jmp	short loc_395CC
; ---------------------------------------------------------------------------

loc_39554:				; CODE XREF: sub_3945A+7Bj
					; DATA XREF: sub_3945A+154o ...
		mov	bx, [bp+arg_0]
		les	si, [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		mov	[bx+5],	al
		jmp	short loc_395CC
; ---------------------------------------------------------------------------
		align 2

loc_39566:				; CODE XREF: sub_3945A+7Bj
					; DATA XREF: sub_3945A+15Ao
		mov	bx, [bp+arg_0]
		mov	si, word ptr [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		mov	[bx+5],	al
		mov	si, word ptr [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		sub	ah, ah
		mov	[bx+6],	ax
		mov	word ptr [bx+8], 0
		jmp	short loc_395CC
; ---------------------------------------------------------------------------

loc_3958A:				; CODE XREF: sub_3945A+7Bj
					; DATA XREF: sub_3945A+166o
		push	es
		push	word ptr [bp+arg_2]
		call	sub_38514
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	[bx+6],	ax
		mov	word ptr [bx+8], 0
		add	word ptr [bp+arg_2], 2
		jmp	short loc_395CC
; ---------------------------------------------------------------------------
		align 2
off_395A8	dw offset loc_395CC	; DATA XREF: sub_3945A+7Br
		dw offset loc_395CC
		dw offset loc_395CC
		dw offset loc_39554
		dw offset loc_39554
		dw offset loc_39554
		dw offset loc_39566
		dw offset loc_39554
		dw offset loc_39554
		dw offset loc_39554
		dw offset loc_395CC
		dw offset loc_39554
		dw offset loc_3958A
		dw offset loc_3952A
		dw offset loc_39518
		dw offset loc_394DA
		dw offset loc_39554
		dw offset loc_39554
; ---------------------------------------------------------------------------

loc_395CC:				; CODE XREF: sub_3945A+75j
					; sub_3945A+7Bj ...
		cmp	[bp+var_8], 0D9h ; 'Ÿ'
		jnb	short loc_39629
		cmp	[bp+var_8], 80h	; 'Ä'
		jbe	short loc_395E7
		mov	bx, [bp+arg_0]
		les	si, [bp+arg_2]
		inc	word ptr [bp+arg_2]
		mov	al, es:[si]
		mov	[bx+5],	al

loc_395E7:				; CODE XREF: sub_3945A+17Cj
		mov	bx, [bp+arg_0]
		sub	ax, ax
		mov	[bx+8],	ax
		mov	[bx+6],	ax
		mov	si, bx

loc_395F4:				; CODE XREF: sub_3945A+1CDj
		les	bx, [bp+arg_2]
		mov	al, es:[bx]
		sub	ah, ah
		and	ax, 7Fh
		sub	dx, dx
		mov	cx, [si+6]
		mov	bx, [si+8]
		mov	di, cx
		mov	cl, 7

loc_3960B:				; CODE XREF: sub_3945A+1B7j
		shl	di, 1
		rcl	bx, 1
		dec	cl
		jnz	short loc_3960B
		add	ax, di
		adc	dx, bx
		mov	[si+6],	ax
		mov	[si+8],	dx
		les	bx, [bp+arg_2]
		inc	word ptr [bp+arg_2]
		test	byte ptr es:[bx], 80h
		jnz	short loc_395F4

loc_39629:				; CODE XREF: sub_3945A+176j
		mov	bx, [bp+arg_0]
		mov	ax, word ptr [bp+arg_2]
		sub	ax, [bp+var_6]
		mov	[bx+0Ah], al
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_3945A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3963C	proc far		; CODE XREF: seg028:004Dp
					; sub_3868A+36p

var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jz	short loc_39683
		mov	di, 0A2B6h

loc_3965B:				; CODE XREF: sub_3963C+42j
		mov	si, di
		cmp	byte ptr [si+1], 0
		jz	short loc_39670
		cmp	byte ptr [si], 10h
		jnb	short loc_39670
		push	si
		push	cs
		call	near ptr sub_3968A
		add	sp, 2

loc_39670:				; CODE XREF: sub_3963C+25j
					; sub_3963C+2Aj
		add	di, 2Eh	; '.'
		inc	[bp+var_2]
		mov	al, byte_459D2
		sub	ah, ah
		cmp	[bp+var_2], ax
		jb	short loc_3965B
		mov	[bp+var_4], si

loc_39683:				; CODE XREF: sub_3963C+1Aj
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_3963C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3968A	proc far		; CODE XREF: sub_3963C+2Ep
					; sub_39700+1F5p

var_4		= dword	ptr -4
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, [bp+arg_0]
		add	word ptr [bx+8], 1
		adc	word ptr [bx+0Ah], 0
		mov	ax, [bx+0Ch]
		or	ax, [bx+0Eh]
		jnz	short loc_396F2
		push	bx
		mov	al, [bx+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Ch
		mov	word ptr [bp+var_4+2], dx
		mov	word ptr [bp+var_4], ax
		call	[bp+var_4]
		add	sp, 4
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+1], 2
		mov	al, 4Ch	; 'L'
		mul	byte ptr [bx]
		mov	bx, ax
		cmp	byte ptr [bx-7DDFh], 0
		jz	short loc_396E6
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+16h], 3
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_396E6:				; CODE XREF: sub_3968A+4Ej
		mov	bx, [bp+arg_0]
		mov	byte ptr [bx+16h], 4
		pop	ds
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_396F2:				; CODE XREF: sub_3968A+1Dj
		sub	word ptr [bx+0Ch], 1
		sbb	word ptr [bx+0Eh], 0
		pop	ds
		mov	sp, bp
		pop	bp
		retf
sub_3968A	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39700	proc far		; CODE XREF: sub_3736A+3BP
					; sub_373B8:loc_373DCP	...

var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= dword	ptr -6
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	[bp+var_2], 0
		jmp	loc_398D0
; ---------------------------------------------------------------------------
		align 2

loc_39716:				; CODE XREF: sub_39700+238j
		mov	bx, [bp+var_8]
		mov	byte ptr [bx+16h], 2

loc_3971D:				; CODE XREF: sub_39700+210j
					; sub_39700+226j ...
		cmp	byte ptr [bx+16h], 2
		jnz	short loc_3973D
		les	si, [bp+var_6]
		mov	ax, es:[si+22h]
		sub	[bx+14h], ax
		mov	ax, es:[si+24h]
		cmp	[bx+14h], ax
		jg	short loc_3973D
		mov	byte ptr [bx+16h], 3
		mov	[bx+14h], ax

loc_3973D:				; CODE XREF: sub_39700+21j
					; sub_39700+34j
		cmp	byte ptr [bx+16h], 3
		jnz	short loc_39754
		les	bx, [bp+var_6]
		cmp	word ptr es:[bx+24h], 0
		jnz	short loc_39754
		mov	bx, [bp+var_8]
		mov	byte ptr [bx+16h], 4

loc_39754:				; CODE XREF: sub_39700+41j
					; sub_39700+4Bj
		mov	bx, [bp+var_8]
		cmp	byte ptr [bx+16h], 4
		jnz	short loc_397B1
		les	si, [bp+var_6]
		mov	ax, es:[si+26h]
		sub	[bx+14h], ax
		cmp	word ptr [bx+14h], 0
		jg	short loc_397B1
		mov	word ptr [bx+14h], 0
		mov	byte ptr [bx+16h], 0
		mov	byte ptr [bx+1], 0
		mov	al, 4Ch	; 'L'
		mul	byte ptr [bx]
		mov	bx, ax
		dec	byte ptr [bx-7DEFh]
		push	[bp+var_8]
		mov	bx, [bp+var_8]
		mov	al, [bx+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 0Fh
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 4
		mov	bx, [bp+var_8]
		mov	bl, [bx]
		sub	bh, bh
		mov	[bx-6CA6h], bh

loc_397B1:				; CODE XREF: sub_39700+5Bj
					; sub_39700+6Bj
		les	bx, [bp+var_6]
		cmp	byte ptr es:[bx+28h], 0
		jnz	short loc_397BE
		jmp	loc_39853
; ---------------------------------------------------------------------------

loc_397BE:				; CODE XREF: sub_39700+B9j
		mov	bx, [bp+var_8]
		cmp	word ptr [bx+18h], 0
		jz	short loc_397CE
		dec	word ptr [bx+18h]
		jmp	loc_39853
; ---------------------------------------------------------------------------
		align 2

loc_397CE:				; CODE XREF: sub_39700+C5j
		cmp	word ptr [bx+1Ah], 0
		jz	short loc_39853
		cmp	word ptr [bx+1Ah], 7FFFh
		jz	short loc_397DE
		dec	word ptr [bx+1Ah]

loc_397DE:				; CODE XREF: sub_39700+D9j
		cmp	byte ptr [bx+27h], 0
		jnz	short loc_39850
		les	si, [bp+var_6]
		mov	al, es:[si+29h]
		mov	[bx+27h], al
		cmp	byte ptr [bx+26h], 2
		jnz	short loc_39828
		mov	si, bx
		mov	ax, [si+24h]
		sub	[bx+1Ch], ax
		mov	ax, [bx+1Ch]
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	bx, word ptr [bp+var_6]
		cmp	es:[bx+2Eh], ax
		ja	short loc_39853
		test	byte ptr es:[bx+34h], 1
		jz	short loc_3981E
		mov	bx, si
		mov	byte ptr [bx+26h], 1
		jmp	short loc_39853
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_3981E:				; CODE XREF: sub_39700+112j
					; sub_39700+146j
		mov	bx, [bp+var_8]
		mov	word ptr [bx+1Ch], 0
		jmp	short loc_39853
; ---------------------------------------------------------------------------

loc_39828:				; CODE XREF: sub_39700+F2j
		mov	si, bx
		mov	ax, [si+24h]
		add	[bx+1Ch], ax
		mov	ax, [bx+1Ch]
		cwd
		xor	ax, dx
		sub	ax, dx
		mov	bx, word ptr [bp+var_6]
		cmp	es:[bx+2Eh], ax
		ja	short loc_39853
		test	byte ptr es:[bx+34h], 2
		jz	short loc_3981E
		mov	bx, si
		mov	byte ptr [bx+26h], 2
		jmp	short loc_39853
; ---------------------------------------------------------------------------

loc_39850:				; CODE XREF: sub_39700+E2j
		dec	byte ptr [bx+27h]

loc_39853:				; CODE XREF: sub_39700+BBj
					; sub_39700+CAj ...
		les	bx, [bp+var_6]
		cmp	byte ptr es:[bx+35h], 0
		jz	short loc_398A4
		mov	bx, [bp+var_8]
		cmp	word ptr [bx+1Eh], 0
		jz	short loc_3986C
		dec	word ptr [bx+1Eh]
		jmp	short loc_398A4
; ---------------------------------------------------------------------------
		align 2

loc_3986C:				; CODE XREF: sub_39700+164j
		cmp	word ptr [bx+20h], 0
		jz	short loc_398A4
		dec	word ptr [bx+20h]
		cmp	byte ptr [bx+28h], 0
		jz	short loc_39880
		dec	byte ptr [bx+28h]
		jmp	short loc_398A4
; ---------------------------------------------------------------------------

loc_39880:				; CODE XREF: sub_39700+179j
		les	si, [bp+var_6]
		mov	al, es:[si+3Ah]
		mov	[bx+28h], al
		mov	al, [bx+29h]
		inc	byte ptr [bx+29h]
		sub	ah, ah
		mov	si, ax
		and	si, 7
		mov	bx, word ptr [bp+var_6]
		mov	al, es:[bx+si+3Bh]
		mov	bx, [bp+var_8]
		mov	[bx+22h], al

loc_398A4:				; CODE XREF: sub_39700+15Bj
					; sub_39700+169j ...
		mov	bx, [bp+var_8]
		push	word ptr [bx+12h]
		push	word ptr [bx+10h]
		push	word ptr [bx+2Ah]
		push	bx
		mov	al, [bx+2Ch]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 27h	; '''
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 0Ah

loc_398CD:				; CODE XREF: sub_39700+1ECj
		inc	[bp+var_2]

loc_398D0:				; CODE XREF: sub_39700+12j
		mov	al, byte_459D2
		sub	ah, ah
		cmp	[bp+var_2], ax
		jnb	short loc_39946
		mov	ax, 2Eh	; '.'
		imul	[bp+var_2]
		add	ax, 0A2B6h
		mov	[bp+var_8], ax
		mov	bx, ax
		cmp	byte ptr [bx+1], 0
		jz	short loc_398CD
		cmp	byte ptr [bx], 0Fh
		jbe	short loc_398FB
		push	ax
		push	cs
		call	near ptr sub_3968A
		add	sp, 2

loc_398FB:				; CODE XREF: sub_39700+1F1j
		mov	bx, [bp+var_8]
		mov	ax, [bx+10h]
		mov	dx, [bx+12h]
		mov	word ptr [bp+var_6], ax
		mov	word ptr [bp+var_6+2], dx
		cmp	byte ptr [bx+16h], 1
		jz	short loc_39913
		jmp	loc_3971D
; ---------------------------------------------------------------------------

loc_39913:				; CODE XREF: sub_39700+20Ej
		les	si, [bp+var_6]
		mov	ax, es:[si+20h]
		add	[bx+14h], ax
		mov	ax, es:[si+1Eh]
		cmp	[bx+14h], ax
		jge	short loc_39929
		jmp	loc_3971D
; ---------------------------------------------------------------------------

loc_39929:				; CODE XREF: sub_39700+224j
		mov	[bx+14h], ax
		mov	bx, si
		mov	ax, es:[bx+1Eh]
		cmp	es:[bx+24h], ax
		jge	short loc_3993B
		jmp	loc_39716
; ---------------------------------------------------------------------------

loc_3993B:				; CODE XREF: sub_39700+236j
		mov	bx, [bp+var_8]
		mov	byte ptr [bx+16h], 3
		jmp	loc_3971D
; ---------------------------------------------------------------------------
		align 2

loc_39946:				; CODE XREF: sub_39700+1D8j
		mov	ax, 0A2B6h
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 30h	; '0'
		mov	word ptr [bp+var_C+2], dx
		mov	word ptr [bp+var_C], ax
		call	[bp+var_C]
		add	sp, 2
		pop	ds
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_39700	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39966	proc far		; CODE XREF: sub_3736A+12P
					; sub_373B8+1CP ...

var_16		= dword	ptr -16h
var_12		= word ptr -12h
var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	di
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		cmp	byte_40634, 0
		jz	short loc_3997E
		jmp	loc_39A04
; ---------------------------------------------------------------------------

loc_3997E:				; CODE XREF: sub_39966+13j
		mov	[bp+var_2], 0
		mov	al, byte_459D2
		sub	ah, ah
		or	ax, ax
		jnz	short loc_3998F
		jmp	loc_39A9E
; ---------------------------------------------------------------------------

loc_3998F:				; CODE XREF: sub_39966+24j
		mov	si, 0A2B6h
		mov	[bp+var_8], 0A2B7h
		mov	[bp+var_A], 0A2C6h
		mov	[bp+var_C], 0A2B8h
		mov	di, [bp+var_2]

loc_399A4:				; CODE XREF: sub_39966+96j
		mov	al, [si]
		sub	ah, ah
		cmp	ax, [bp+arg_2]
		ja	short loc_399E2
		cmp	ax, [bp+arg_0]
		jb	short loc_399E2
		push	di
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 1Eh
		mov	word ptr [bp+var_10+2],	dx
		mov	word ptr [bp+var_10], ax
		call	[bp+var_10]
		add	sp, 2
		mov	bx, [bp+var_8]
		mov	byte ptr [bx], 0
		mov	bx, [bp+var_A]
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	byte ptr [si], 0FFh
		mov	bx, [bp+var_C]
		mov	byte ptr [bx], 0

loc_399E2:				; CODE XREF: sub_39966+45j
					; sub_39966+4Aj
		add	si, 2Eh	; '.'
		add	[bp+var_8], 2Eh	; '.'
		add	[bp+var_A], 2Eh	; '.'
		add	[bp+var_C], 2Eh	; '.'
		inc	di
		mov	ax, di
		mov	cl, byte_459D2
		sub	ch, ch
		cmp	ax, cx
		jb	short loc_399A4
		mov	[bp+var_2], di
		jmp	loc_39A9E
; ---------------------------------------------------------------------------

loc_39A04:				; CODE XREF: sub_39966+15j
		mov	ax, [bp+arg_0]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_2]
		cmp	[bp+var_2], ax
		jle	short loc_39A15
		jmp	loc_39A9E
; ---------------------------------------------------------------------------

loc_39A15:				; CODE XREF: sub_39966+AAj
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		add	ax, 8243h
		mov	[bp+var_12], ax

loc_39A21:				; CODE XREF: sub_39966+136j
		mov	bx, [bp+var_12]
		cmp	byte ptr [bx], 10h
		jnb	short loc_39A8F
		mov	al, [bx]
		sub	ah, ah
		push	ax
		mov	ax, word ptr dword_4060A
		mov	dx, word ptr dword_4060A+2
		add	ax, 1Eh
		mov	word ptr [bp+var_16+2],	dx
		mov	word ptr [bp+var_16], ax
		call	[bp+var_16]
		add	sp, 2
		mov	[bp+var_4], 10h
		mov	si, 0A2B6h
		mov	di, 0A2B7h
		mov	[bp+var_A], 0A2C6h
		mov	[bp+var_8], 0A2B8h
		mov	[bp+var_6], 10h
		mov	cx, 10h

loc_39A61:				; CODE XREF: sub_39966+127j
		mov	al, [si]
		sub	ah, ah
		cmp	[bp+var_2], ax
		jnz	short loc_39A7F
		mov	[di], ah
		mov	bx, [bp+var_A]
		sub	ax, ax
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	byte ptr [si], 0FFh
		mov	bx, [bp+var_8]
		mov	byte ptr [bx], 0

loc_39A7F:				; CODE XREF: sub_39966+102j
		add	si, 2Eh	; '.'
		add	di, 2Eh	; '.'
		add	[bp+var_A], 2Eh	; '.'
		add	[bp+var_8], 2Eh	; '.'
		loop	loc_39A61

loc_39A8F:				; CODE XREF: sub_39966+C1j
		add	[bp+var_12], 4Ch ; 'L'
		inc	[bp+var_2]
		mov	ax, [bp+arg_2]
		cmp	[bp+var_2], ax
		jle	short loc_39A21

loc_39A9E:				; CODE XREF: sub_39966+26j
					; sub_39966+9Bj ...
		mov	ax, [bp+arg_0]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_2]
		cmp	[bp+var_2], ax
		jg	short loc_39ACA
		mov	ax, 4Ch	; 'L'
		imul	[bp+arg_0]
		mov	si, ax
		add	si, 8211h
		mov	cx, [bp+arg_2]
		sub	cx, [bp+arg_0]
		inc	cx
		add	[bp+var_2], cx

loc_39AC2:				; CODE XREF: sub_39966+162j
		mov	byte ptr [si], 0
		add	si, 4Ch	; 'L'
		loop	loc_39AC2

loc_39ACA:				; CODE XREF: sub_39966+144j
		pop	ds
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39966	endp

seg028		ends

; ===========================================================================

; Segment type:	Pure code
seg029		segment	byte public 'CODE' use16
		assume cs:seg029
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39AD4	proc far		; CODE XREF: sub_38254+1D8P
					; sub_39B5A+55p

var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= dword	ptr  8
arg_6		= dword	ptr  0Ch
arg_A		= word ptr  10h

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		cmp	[bp+arg_A], 0
		jz	short loc_39B50
		mov	di, [bp+arg_0]
		mov	si, [bp+arg_A]

loc_39AE8:				; CODE XREF: sub_39AD4+77j
		les	bx, [bp+arg_2]
		cmp	byte ptr es:[bx], 0
		jz	short loc_39B4D
		les	bx, [bp+arg_6]
		cmp	byte ptr es:[bx], 0
		jz	short loc_39B4D
		or	di, di
		jz	short loc_39B16
		mov	al, es:[bx]
		les	bx, [bp+arg_2]
		cmp	es:[bx], al
		jz	short loc_39B16

loc_39B09:				; CODE XREF: sub_39AD4+6Ej
		sub	ax, ax
		mov	[bp+arg_A], si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		db 2 dup(90h)
; ---------------------------------------------------------------------------

loc_39B16:				; CODE XREF: sub_39AD4+28j
					; sub_39AD4+33j
		or	di, di
		jnz	short loc_39B44
		les	bx, [bp+arg_6]
		mov	al, es:[bx]
		sub	ah, ah
		push	ax
		call	sub_370BA
		add	sp, 2
		les	bx, [bp+arg_2]
		mov	cl, es:[bx]
		sub	ch, ch
		push	cx
		mov	[bp+var_2], ax
		call	sub_370BA
		add	sp, 2
		cmp	ax, [bp+var_2]
		jnz	short loc_39B09

loc_39B44:				; CODE XREF: sub_39AD4+44j
		inc	word ptr [bp+arg_2]
		inc	word ptr [bp+arg_6]
		dec	si
		jnz	short loc_39AE8

loc_39B4D:				; CODE XREF: sub_39AD4+1Bj
					; sub_39AD4+24j
		mov	[bp+arg_A], si

loc_39B50:				; CODE XREF: sub_39AD4+Cj
		mov	ax, 1
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39AD4	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39B5A	proc far		; CODE XREF: sub_38254+AFP
					; sub_38254+245P ...

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= dword	ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	di
		push	si
		mov	[bp+var_2], 0
		mov	[bp+var_8], 0
		cmp	[bp+arg_2], 0
		jle	short loc_39BD3
		mov	ax, [bp+arg_4]
		mov	[bp+var_E], ax
		mov	[bp+var_C], ds
		mov	si, [bp+var_8]

loc_39B7D:				; CODE XREF: sub_39B5A+74j
		sub	cx, cx
		les	di, [bp+arg_6]

loc_39B82:				; CODE XREF: sub_39B5A+37j
		mov	bx, cx
		add	bx, bp
		mov	al, es:[di]
		mov	[bx-6],	al
		inc	di
		inc	cx
		cmp	cx, 4
		jl	short loc_39B82
		mov	word ptr [bp+arg_6], di
		mov	word ptr [bp+arg_6+2], es
		mov	[bp+var_A], cx
		mov	ax, 4
		push	ax
		push	[bp+var_C]
		push	[bp+var_E]
		lea	ax, [bp+var_6]
		push	ss
		push	ax
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_39AD4
		add	sp, 0Ch
		or	ax, ax
		jz	short loc_39BC4
		mov	ax, si
		mov	[bp+var_8], si
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_39BC4:				; CODE XREF: sub_39B5A+5Dj
		mov	ax, [bp+arg_0]
		add	word ptr [bp+arg_6], ax
		inc	si
		cmp	si, [bp+arg_2]
		jl	short loc_39B7D
		mov	[bp+var_8], si

loc_39BD3:				; CODE XREF: sub_39B5A+15j
		mov	ax, 0FFFFh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39B5A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39BDC	proc far		; CODE XREF: sub_370D2+FP
					; sub_370D2+32P ...

var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 10h
		sub	ax, ax
		mov	[bp+var_8], ax
		mov	[bp+var_A], ax
		mov	ax, 4
		cwd
		add	ax, [bp+arg_0]
		adc	dx, 0
		mov	cx, 0Ch
		shl	dx, cl
		add	dx, [bp+arg_2]
		mov	es, dx
		mov	bx, ax
		mov	ax, es:[bx]
		mov	[bp+var_2], ax
		mov	ax, 6
		cwd
		add	ax, [bp+arg_0]
		adc	dx, 0
		shl	dx, cl
		add	dx, [bp+arg_2]
		push	dx
		push	ax
		push	[bp+arg_4]
		push	[bp+var_2]
		sub	ax, ax
		push	ax
		push	cs
		call	near ptr sub_39B5A
		add	sp, 0Ah
		mov	[bp+var_10], ax
		or	ax, ax
		jl	short loc_39C7A
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		mov	cx, [bp+var_2]
		shl	cx, 1
		shl	cx, 1
		add	ax, cx
		mov	cx, [bp+var_10]
		shl	cx, 1
		shl	cx, 1
		add	ax, cx
		add	ax, 6
		mov	[bp+var_6], ax
		mov	[bp+var_4], dx
		push	dx
		push	ax
		call	sub_384FA
		add	sp, 4
		mov	[bp+var_E], ax
		mov	[bp+var_C], dx
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		mov	bx, [bp+var_2]
		mov	cl, 3
		shl	bx, cl
		add	ax, bx
		add	ax, [bp+var_E]
		add	ax, 6
		mov	[bp+var_A], ax
		mov	[bp+var_8], dx

loc_39C7A:				; CODE XREF: sub_39BDC+50j
		mov	ax, [bp+var_A]
		mov	dx, [bp+var_8]
		mov	sp, bp
		pop	bp
		retf
sub_39BDC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39C84	proc far		; CODE XREF: sub_38254+97P
					; sub_38254+22DP

var_6		= word ptr -6
var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= dword	ptr  0Ah
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	di
		push	si
		mov	[bp+var_2], 0
		cmp	[bp+arg_8], 0
		jle	short loc_39CC4
		mov	cx, [bp+arg_8]
		mov	ax, cx
		add	[bp+var_2], ax
		les	di, [bp+arg_4]
		mov	[bp+var_6], ds
		lds	si, [bp+arg_0]

loc_39CA8:				; CODE XREF: sub_39C84+2Fj
		mov	al, [si]
		mov	es:[di], al
		mov	ax, si
		mov	dx, ds
		inc	si
		inc	di
		loop	loc_39CA8
		mov	word ptr [bp+arg_0], si
		mov	word ptr [bp+arg_0+2], ds
		mov	ds, [bp+var_6]
		mov	word ptr [bp+arg_4], di
		mov	word ptr [bp+arg_4+2], es

loc_39CC4:				; CODE XREF: sub_39C84+11j
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39C84	endp

seg029		ends

; ===========================================================================

; Segment type:	Pure code
seg030		segment	byte public 'CODE' use16
		assume cs:seg030
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 2 dup(90h)
		db 2 dup(0)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_39CCE(char *, int)
sub_39CCE	proc far		; CODE XREF: sub_378CA+92P
					; sub_37B14+FP	...

var_2		= word ptr -2
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	di
		push	si
		mov	si, 75BEh
		push	ds
		pop	es
		assume es:dseg
		mov	di, word ptr [bp+arg_0]
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		sub	di, cx
		xchg	di, si
		shr	cx, 1
		repne movsw
		adc	cx, cx
		repne movsb
		mov	ax, 5Ch	; '\'
		push	ax
		mov	ax, 75BEh
		push	ax		; char *
		call	_strrchr
		add	sp, 4
		mov	[bp+var_2], ax
		or	ax, ax
		jz	short loc_39D16
		inc	[bp+var_2]
		mov	bx, [bp+var_2]
		mov	byte ptr [bx], 0
		jmp	short loc_39D1B
; ---------------------------------------------------------------------------
		align 2

loc_39D16:				; CODE XREF: sub_39CCE+3Aj
		mov	byte_42D2E, 0

loc_39D1B:				; CODE XREF: sub_39CCE+45j
		mov	si, 75BEh
		push	ds
		pop	es
		mov	di, [bp+arg_4]
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		sub	di, cx
		mov	bx, cx
		xchg	di, si
		mov	cx, 0FFFFh
		repne scasb
		dec	di
		mov	cx, bx
		shr	cx, 1
		repne movsw
		adc	cx, cx
		repne movsb
		mov	ax, 5Ch	; '\'
		push	ax
		push	word ptr [bp+arg_0] ; char *
		call	_strrchr
		add	sp, 4
		mov	[bp+var_2], ax
		or	ax, ax
		jz	short loc_39D6A
		inc	[bp+var_2]
		mov	bx, [bp+var_2]
		mov	di, bx
		mov	si, 75BEh
		mov	ax, ds
		mov	es, ax
		jmp	short loc_39D72
; ---------------------------------------------------------------------------
		align 2

loc_39D6A:				; CODE XREF: sub_39CCE+88j
		mov	si, 75BEh
		push	ds
		pop	es
		mov	di, word ptr [bp+arg_0]

loc_39D72:				; CODE XREF: sub_39CCE+99j
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		sub	di, cx
		mov	bx, cx
		xchg	di, si
		mov	cx, 0FFFFh
		repne scasb
		dec	di
		mov	cx, bx
		shr	cx, 1
		repne movsw
		adc	cx, cx
		repne movsb
		mov	di, 75BEh
		mov	ax, ds
		mov	es, ax
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		dec	cx
		mov	bx, cx
		cmp	byte ptr [bx+75BAh], 2Eh ; '.'
		jnz	short loc_39DBF
		mov	di, 75BEh
		mov	ax, ds
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		dec	cx
		cmp	cx, 4
		ja	short loc_39E0B

loc_39DBF:				; CODE XREF: sub_39CCE+DBj
		mov	di, 503Ch
		mov	si, 75BEh
		mov	ax, ds
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		sub	di, cx
		mov	bx, cx
		xchg	di, si
		mov	cx, 0FFFFh
		repne scasb
		dec	di
		mov	cx, bx
		shr	cx, 1
		repne movsw
		adc	cx, cx
		repne movsb
		mov	si, 75BEh
		mov	di, word ptr [bp+arg_0+2]
		mov	cx, 0FFFFh
		xor	ax, ax
		repne scasb
		not	cx
		sub	di, cx
		mov	bx, cx
		xchg	di, si
		mov	cx, 0FFFFh
		repne scasb
		dec	di
		mov	cx, bx
		shr	cx, 1
		repne movsw
		adc	cx, cx
		repne movsb

loc_39E0B:				; CODE XREF: sub_39CCE+EFj
		mov	ax, 75BEh
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39CCE	endp

seg030		ends

; ===========================================================================

; Segment type:	Pure code
seg031		segment	byte public 'CODE' use16
		assume cs:seg031
		;org 4
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39E14	proc far		; CODE XREF: sub_299CA+7DP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	[bp+arg_0]
		call	sub_33861
		add	sp, 2
		pop	bp
		retf
sub_39E14	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_39E24(char *, int)
sub_39E24	proc far		; CODE XREF: sub_11C42+5BP
					; sub_27ED4+175P

var_50		= byte ptr -50h
arg_0		= dword	ptr  6
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		sub	sp, 50h
		lea	ax, [bp+var_50]
		push	ax		; char *
		push	[bp+arg_4]	; int
		push	word ptr [bp+arg_0+2]
		push	word ptr [bp+arg_0] ; char *
		call	sub_285C2
		add	sp, 8
		lea	ax, [bp+var_50]
		push	ax
		call	sub_2FFD4
		mov	sp, bp
		pop	bp
		retf
sub_39E24	endp


; =============== S U B	R O U T	I N E =======================================


sub_39E4C	proc far		; CODE XREF: sub_11C42:loc_11CE1P
					; sub_27ED4:loc_280A8P
		call	sub_3002E
		retf
sub_39E4C	endp


; =============== S U B	R O U T	I N E =======================================


nullsub_1	proc far		; CODE XREF: sub_11C42+6BP
					; sub_11C42:loc_11D44P	...
		retf
nullsub_1	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


nullsub_2	proc far		; CODE XREF: sub_11C42+2CCP
					; sub_11C42+A51P ...
		retf
nullsub_2	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_39E56	proc far		; CODE XREF: _main+EP

var_1E		= word ptr -1Eh
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_12		= byte ptr -12h
var_10		= word ptr -10h
var_E		= byte ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 1Eh
		push	di
		push	si
		call	sub_30812
		call	sub_36B05
		call	sub_30A1C
		mov	ax, 2B06h
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 7
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 2682h
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 0Ah
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 28EAh
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 0Bh
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 29E8h
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 3200h
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 299Ah
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 10h
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 299Ah
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 70h	; 'p'
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 2AACh
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 11h
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 2A4Ah
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 13h
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	ax, 2AACh
		mov	dx, seg	seg008
		push	dx
		push	ax
		mov	ax, 18h
		push	ax
		call	sub_3045E
		add	sp, 6
		mov	word_44AE4, 1
		mov	word_44DC8, 1
		mov	word_454D4, 0FFFFh
		mov	word_461D0, 1
		call	sub_310F1
		mov	byte_46436, 0
		mov	byte_459F1, 1
		mov	byte_4645E, 65h	; 'e'
		mov	[bp+var_12], 0
		mov	[bp+var_E], 0
		mov	[bp+var_2], 0
		mov	si, 1
		jmp	short loc_39F63
; ---------------------------------------------------------------------------

loc_39F5E:				; CODE XREF: sub_39E56+131j
		mov	[bp+var_12], 1

loc_39F62:				; CODE XREF: sub_39E56+128j
					; sub_39E56+13Ej ...
		inc	si

loc_39F63:				; CODE XREF: sub_39E56+106j
		cmp	[bp+arg_0], si
		jg	short loc_39F6B
		jmp	loc_3A07A
; ---------------------------------------------------------------------------

loc_39F6B:				; CODE XREF: sub_39E56+110j
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	[bp+var_1E], ax
		mov	bx, ax
		cmp	byte ptr [bx], 2Fh ; '/'
		jnz	short loc_39F62
		mov	al, [bx+1]
		cbw
		cmp	ax, 68h	; 'h'
		jz	short loc_39F5E
		cmp	ax, 6Eh	; 'n'
		jnz	short loc_39F91
		jmp	loc_3A046
; ---------------------------------------------------------------------------

loc_39F91:				; CODE XREF: sub_39E56+136j
		cmp	ax, 73h	; 's'
		jnz	short loc_39F62
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	[bp+var_1E], ax
		mov	bx, ax
		mov	al, [bx+2]
		cbw
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_39FC8
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		mov	al, [bx+2]
		cbw
		add	ax, 20h	; ' '
		jmp	short loc_39FD7
; ---------------------------------------------------------------------------
		align 2

loc_39FC8:				; CODE XREF: sub_39E56+15Bj
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		mov	al, [bx+2]
		cbw

loc_39FD7:				; CODE XREF: sub_39E56+16Fj
		cmp	ax, 73h	; 's'
		jnz	short loc_3A022
		mov	bx, [bp+var_1E]
		mov	al, [bx+3]
		cbw
		mov	bx, ax
		test	byte ptr [bx+382Fh], 1
		jz	short loc_3A000
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		mov	al, [bx+3]
		cbw
		add	ax, 20h	; ' '
		jmp	short loc_3A00F
; ---------------------------------------------------------------------------

loc_3A000:				; CODE XREF: sub_39E56+194j
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		mov	al, [bx+3]
		cbw

loc_3A00F:				; CODE XREF: sub_39E56+1A8j
		cmp	ax, 62h	; 'b'
		jnz	short loc_3A022
		mov	byte_40B12, 61h	; 'a'
		mov	byte_40B13, 64h	; 'd'
		jmp	loc_39F62
; ---------------------------------------------------------------------------
		align 2

loc_3A022:				; CODE XREF: sub_39E56+184j
					; sub_39E56+1BCj
		mov	ax, [bp+arg_2]
		mov	cx, si
		shl	cx, 1
		add	ax, cx
		mov	[bp+var_1E], ax
		mov	bx, ax
		mov	bx, [bx]
		mov	al, [bx+2]
		mov	byte_40B12, al
		mov	bx, [bp+var_1E]
		mov	bx, [bx]
		mov	al, [bx+3]
		mov	byte_40B13, al
		jmp	loc_39F62
; ---------------------------------------------------------------------------

loc_3A046:				; CODE XREF: sub_39E56+138j
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		cmp	byte ptr [bx+2], 73h ; 's'
		jnz	short loc_3A05E
		mov	[bp+var_E], 1
		jmp	loc_39F62
; ---------------------------------------------------------------------------

loc_3A05E:				; CODE XREF: sub_39E56+1FFj
		mov	bx, [bp+arg_2]
		mov	ax, si
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		cmp	byte ptr [bx+2], 64h ; 'd'
		jz	short loc_3A072
		jmp	loc_39F62
; ---------------------------------------------------------------------------

loc_3A072:				; CODE XREF: sub_39E56+217j
		mov	[bp+var_2], 1
		jmp	loc_39F62
; ---------------------------------------------------------------------------
		align 2

loc_3A07A:				; CODE XREF: sub_39E56+112j
		call	sub_33816
		cmp	[bp+var_12], 0
		jz	short loc_3A08A
		call	sub_3005E

loc_3A08A:				; CODE XREF: sub_39E56+22Dj
		call	sub_301A0
		call	sub_28F4E
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_368D2
		add	sp, 4
		sub	ax, ax
		push	ax		; int
		push	ax
		mov	ax, 53A2h
		push	ax		; char *
		call	sub_378CA
		add	sp, 6
		or	ax, ax
		jz	short loc_3A0C9
		call	sub_30268
		mov	ax, 1
		push	ax
		call	far ptr	sub_2CDEC
; ---------------------------------------------------------------------------
		add	sp, 2

loc_3A0C9:				; CODE XREF: sub_39E56+260j
		cmp	[bp+var_E], 0
		jz	short loc_3A0D9
		call	sub_373E8
		call	sub_37708

loc_3A0D9:				; CODE XREF: sub_39E56+277j
		mov	ax, 2C68h
		mov	dx, seg	seg008
		push	dx
		push	ax
		call	sub_2F377
		add	sp, 4
		push	cs
		call	near ptr sub_3A2C0
		call	sub_35B14
		mov	ax, 78h	; 'x'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		call	sub_2A230
		sub	si, si

loc_3A10F:				; CODE XREF: sub_39E56+2C8j
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		inc	si
		cmp	si, 0Fh
		jl	short loc_3A10F
		call	sub_2A230
		mov	[bp+var_C], ax
		mov	ax, 3Ch	; '<'
		push	ax
		sub	ax, ax
		push	ax
		mov	ax, 140h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_3327F
		add	sp, 8
		sub	si, si

loc_3A140:				; CODE XREF: sub_39E56+32Cj
		mov	[bp+var_A], 0
		mov	[bp+var_8], 0
		mov	[bp+var_6], 0
		mov	[bp+var_4], 0
		sub	di, di

loc_3A156:				; CODE XREF: sub_39E56+31Bj
		mov	[bp+var_1A], di
		mov	[bp+var_18], di
		lea	ax, [bp+var_A]
		push	ax
		lea	ax, [bp+var_1A]
		push	ax
		call	sub_2637A
		add	sp, 4
		inc	di
		cmp	di, 190h
		jl	short loc_3A156
		sub	ax, ax
		push	ax
		call	sub_332C0
		add	sp, 2
		inc	si
		cmp	si, 0Fh
		jl	short loc_3A140
		call	sub_2A230
		mov	[bp+var_10], ax
		sub	si, si
		jmp	short loc_3A1AB
; ---------------------------------------------------------------------------

loc_3A190:				; CODE XREF: sub_39E56+351j
		inc	di

loc_3A191:				; CODE XREF: sub_39E56+35Dj
		cmp	di, 0FFh
		jge	short loc_3A1AA
		lea	ax, [bp+var_A]
		push	ax
		lea	ax, [bp+var_1A]
		push	ax
		call	sub_2637A
		add	sp, 4
		jmp	short loc_3A190
; ---------------------------------------------------------------------------
		align 2

loc_3A1AA:				; CODE XREF: sub_39E56+33Fj
		inc	si

loc_3A1AB:				; CODE XREF: sub_39E56+338j
		cmp	si, 92h	; 'í'
		jge	short loc_3A1B6
		sub	di, di
		jmp	short loc_3A191
; ---------------------------------------------------------------------------
		align 2

loc_3A1B6:				; CODE XREF: sub_39E56+359j
		call	sub_2A230
		mov	[bp+var_1C], ax
		mov	ax, [bp+var_C]
		cmp	[bp+var_10], ax
		jle	short loc_3A1CE
		mov	word_44CEA, 0
		jmp	short loc_3A1D4
; ---------------------------------------------------------------------------

loc_3A1CE:				; CODE XREF: sub_39E56+36Ej
		mov	word_44CEA, 1

loc_3A1D4:				; CODE XREF: sub_39E56+376j
		cmp	[bp+var_1C], 4Bh ; 'K'
		jge	short loc_3A1E2
		mov	word_44D4E, 14h
		jmp	short loc_3A1E8
; ---------------------------------------------------------------------------

loc_3A1E2:				; CODE XREF: sub_39E56+382j
		mov	word_44D4E, 0Ah

loc_3A1E8:				; CODE XREF: sub_39E56+38Aj
		cmp	[bp+var_1C], 23h ; '#'
		jge	short loc_3A1F6
		mov	byte_3B8FA, 0
		jmp	short loc_3A22B
; ---------------------------------------------------------------------------
		align 2

loc_3A1F6:				; CODE XREF: sub_39E56+396j
		cmp	[bp+var_1C], 37h ; '7'
		jge	short loc_3A204
		mov	byte_3B8FA, 1
		jmp	short loc_3A22B
; ---------------------------------------------------------------------------
		align 2

loc_3A204:				; CODE XREF: sub_39E56+3A4j
		cmp	[bp+var_1C], 4Bh ; 'K'
		jge	short loc_3A212
		mov	byte_3B8FA, 2
		jmp	short loc_3A22B
; ---------------------------------------------------------------------------
		align 2

loc_3A212:				; CODE XREF: sub_39E56+3B2j
		cmp	[bp+var_1C], 64h ; 'd'
		jl	short loc_3A21F
		cmp	word_44CEA, 0
		jnz	short loc_3A226

loc_3A21F:				; CODE XREF: sub_39E56+3C0j
		mov	byte_3B8FA, 3
		jmp	short loc_3A22B
; ---------------------------------------------------------------------------

loc_3A226:				; CODE XREF: sub_39E56+3C7j
		mov	byte_3B8FA, 4

loc_3A22B:				; CODE XREF: sub_39E56+39Dj
					; sub_39E56+3ABj ...
		mov	ax, word_44D4E
		mov	word_449D0, ax
		mov	ax, word_44CEA
		mov	word_44984, ax
		push	cs
		call	near ptr sub_3A25C
		sub	ax, ax
		push	ax
		push	word_40B10
		push	word_40B0E
		push	word_40B0C
		push	word_40B0A
		call	sub_24DC2
		add	sp, 0Ah
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_39E56	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A25C	proc far		; CODE XREF: _main:loc_1037CP
					; sub_39E56+3E2p
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	di
		push	si
		call	sub_32FFC
		mov	si, ax
		sub	di, di
		jmp	short loc_3A277
; ---------------------------------------------------------------------------
		align 2

loc_3A270:				; CODE XREF: sub_3A25C+22j
		cmp	di, 2EE0h
		jge	short loc_3A280
		inc	di

loc_3A277:				; CODE XREF: sub_3A25C+11j
		call	sub_32FFC
		cmp	ax, si
		jz	short loc_3A270

loc_3A280:				; CODE XREF: sub_3A25C+18j
		cmp	di, 400h
		jnz	short loc_3A29A
		mov	bx, 46Ch
		mov	al, [bx]
		cbw
		mov	di, ax
		jmp	short loc_3A29A
; ---------------------------------------------------------------------------

loc_3A290:				; CODE XREF: sub_3A25C+43j
		call	_rand
		call	sub_19E7B

loc_3A29A:				; CODE XREF: sub_3A25C+28j
					; sub_3A25C+32j
		mov	ax, di
		dec	di
		or	ax, ax
		jnz	short loc_3A290
		and	di, 0FFh
		jmp	short loc_3A2B2
; ---------------------------------------------------------------------------
		align 2

loc_3A2A8:				; CODE XREF: sub_3A25C+5Bj
		call	sub_19E7B
		call	_rand

loc_3A2B2:				; CODE XREF: sub_3A25C+49j
		mov	ax, di
		dec	di
		or	ax, ax
		jnz	short loc_3A2A8
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_3A25C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A2C0	proc far		; CODE XREF: sub_39E56+294p

var_312		= word ptr -312h
var_310		= dword	ptr -310h
var_30C		= word ptr -30Ch
var_30A		= word ptr -30Ah
var_308		= word ptr -308h
var_306		= word ptr -306h
var_304		= dword	ptr -304h
var_300		= byte ptr -300h

		push	bp
		mov	bp, sp
		sub	sp, 312h
		push	si
		mov	ax, 53A7h
		push	ax
		call	sub_3385C
		add	sp, 2
		mov	[bp+var_30C], ax
		mov	[bp+var_30A], dx
		mov	ax, 53AEh
		push	ax
		push	dx
		push	[bp+var_30C]
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_304], ax
		mov	word ptr [bp+var_304+2], dx
		add	word ptr [bp+var_304], 10h
		mov	[bp+var_308], 0

loc_3A300:				; CODE XREF: sub_3A2C0+5Bj
		mov	bx, [bp+var_308]
		les	si, [bp+var_304]
		mov	al, es:[bx+si]
		mov	si, bx
		mov	[bp+si+var_300], al
		inc	[bp+var_308]
		cmp	[bp+var_308], 300h
		jl	short loc_3A300
		lea	ax, [bp+var_300]
		push	ax
		mov	ax, 100h
		push	ax
		sub	ax, ax
		push	ax
		call	sub_346A3
		add	sp, 6
		mov	ax, 53B3h
		push	ax
		push	[bp+var_30A]
		push	[bp+var_30C]
		call	sub_30F9D
		add	sp, 6
		mov	word ptr [bp+var_310], ax
		mov	word ptr [bp+var_310+2], dx
		les	bx, [bp+var_310]
		mov	ax, es:[bx]
		imul	word_44DC8
		mov	[bp+var_312], ax
		mov	ax, es:[bx+2]
		mov	[bp+var_306], ax
		push	[bp+var_30A]
		push	[bp+var_30C]
		call	sub_3147C
		add	sp, 4
		mov	ax, 0Fh
		push	ax
		push	[bp+var_306]
		push	[bp+var_312]
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_449C2, ax
		mov	word ptr dword_449C2+2,	dx
		mov	ax, 0Fh
		push	ax
		push	[bp+var_306]
		push	[bp+var_312]
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_44364, ax
		mov	word ptr dword_44364+2,	dx
		mov	ax, 0Fh
		push	ax
		push	[bp+var_306]
		mov	ax, [bp+var_312]
		add	ax, word_44DC8
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_455C8, ax
		mov	word ptr dword_455C8+2,	dx
		mov	ax, 53B8h
		push	ax
		call	sub_3385C
		add	sp, 2
		mov	[bp+var_30C], ax
		mov	[bp+var_30A], dx
		push	word ptr dword_449C2+2
		push	word ptr dword_449C2
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		mov	ax, 53BFh
		push	ax
		push	[bp+var_30A]
		push	[bp+var_30C]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D30
		add	sp, 8
		push	word ptr dword_44364+2
		push	word ptr dword_44364
		call	sub_35AF6
		add	sp, 4
		sub	ax, ax
		push	ax
		push	ax
		mov	ax, 53C4h
		push	ax
		push	[bp+var_30A]
		push	[bp+var_30C]
		call	sub_30F9D
		add	sp, 6
		push	dx
		push	ax
		call	sub_33D30
		add	sp, 8
		push	[bp+var_30A]
		push	[bp+var_30C]
		call	sub_3147C
		add	sp, 4
		call	sub_28F3C
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3A2C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_3A45C	proc far		; CODE XREF: sub_1D93C+509P
					; sub_21B7A+725P
		sub	ax, ax
		retf
sub_3A45C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A460	proc far		; CODE XREF: _main+102P _main+3ADP ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	ax, 10h
		cwd
		push	dx
		push	ax
		push	[bp+arg_4]
		push	[bp+arg_2]
		call	__aFldiv
		inc	ax
		push	ax
		push	[bp+arg_0]
		call	sub_31248
		add	sp, 4
		pop	bp
		retf
sub_3A460	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_3A484	proc far		; CODE XREF: sub_1FE94+15P
					; sub_23702+275P ...
		call	sub_3117B
		sub	dx, dx
		mov	cl, 4

loc_3A48D:				; CODE XREF: sub_3A484+Fj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_3A48D
		retf
sub_3A484	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A496	proc far		; CODE XREF: sub_1FF92+23AP

arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3167C
		add	sp, 4
		sub	dx, dx
		mov	cl, 4

loc_3A4AB:				; CODE XREF: sub_3A496+1Bj
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jnz	short loc_3A4AB
		pop	bp
		retf
sub_3A496	endp

seg031		ends

; ===========================================================================

; Segment type:	Pure code
seg032		segment	byte public 'CODE' use16
		assume cs:seg032
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl __far sub_3A4B6(char, char *, int, int, int, int,	__int32, int, int)
sub_3A4B6	proc far		; CODE XREF: sub_290BC+3BP

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= byte ptr  6
arg_2		= dword	ptr  8
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= dword	ptr  14h
arg_12		= word ptr  18h
arg_14		= word ptr  1Ah

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		call	sub_35B14
		mov	ax, [bp+arg_A]
		mov	word_42A18, ax
		mov	ax, [bp+arg_C]
		mov	word_42A1A, ax
		mov	ax, word ptr [bp+arg_2]
		mov	off_42A1E, ax
		mov	ax, [bp+arg_8]
		mov	word_42A20, ax
		mov	bx, [bp+arg_6]
		mov	si, word ptr [bp+arg_2]
		mov	byte ptr [bx+si], 0
		test	[bp+arg_0], 1
		jz	short loc_3A4EE
		mov	bx, si
		mov	byte ptr [bx], 0

loc_3A4EE:				; CODE XREF: sub_3A4B6+31j
		test	[bp+arg_0], 2
		jz	short loc_3A4FC
		mov	word_42A22, 0
		jmp	short loc_3A50A
; ---------------------------------------------------------------------------

loc_3A4FC:				; CODE XREF: sub_3A4B6+3Cj
		push	word ptr [bp+arg_2] ; char *
		call	_strlen
		add	sp, 2
		mov	word_42A22, ax

loc_3A50A:				; CODE XREF: sub_3A4B6+44j
		push	word ptr [bp+arg_2] ; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_6], ax
		jmp	short loc_3A526
; ---------------------------------------------------------------------------

loc_3A51A:				; CODE XREF: sub_3A4B6+76j
		mov	bx, [bp+var_6]
		inc	[bp+var_6]
		mov	si, word ptr [bp+arg_2]
		mov	byte ptr [bx+si], 20h ;	' '

loc_3A526:				; CODE XREF: sub_3A4B6+62j
		mov	ax, [bp+arg_6]
		cmp	[bp+var_6], ax
		jl	short loc_3A51A
		push	cs
		call	near ptr sub_3A896
		mov	word_42A16, 1
		mov	word_42A1C, 1
		mov	[bp+var_A], 0
		push	cs
		call	near ptr sub_3A7F6
		push	[bp+arg_14]
		push	[bp+arg_12]
		call	sub_327C0
		add	sp, 4
		mov	ax, 4
		cwd
		push	dx
		push	ax
		call	sub_2EADE
		add	sp, 4
		mov	[bp+var_2], 1

loc_3A568:				; CODE XREF: sub_3A4B6+122j
					; sub_3A4B6+12Bj ...
		cmp	word ptr [bp+arg_2+2], 0
		jz	short loc_3A57F
		mov	ax, word ptr [bp+arg_2+2]
		mov	[bp+var_8], ax
		mov	word ptr [bp+arg_2+2], 0
		jmp	short loc_3A599
; ---------------------------------------------------------------------------
		align 2

loc_3A57C:				; CODE XREF: sub_3A4B6+DCj
		call	[bp+arg_E]

loc_3A57F:				; CODE XREF: sub_3A4B6+B6j
		call	sub_30A1C
		mov	[bp+var_8], ax
		or	ax, ax
		jnz	short loc_3A599
		call	sub_2EB07
		or	ax, ax
		jz	short loc_3A57C
		mov	[bp+var_8], 0

loc_3A599:				; CODE XREF: sub_3A4B6+C3j
					; sub_3A4B6+D3j
		cmp	[bp+var_8], 0
		jnz	short loc_3A5F0
		mov	ax, 4
		cwd
		push	dx
		push	ax
		call	sub_2EADE
		add	sp, 4
		mov	ax, word_42A1C
		mov	[bp+var_4], ax
		mov	word_42A1C, 1
		push	cs
		call	near ptr sub_3A7F6
		cmp	[bp+var_4], 0
		jz	short loc_3A5CC
		mov	word_42A1C, 0
		jmp	short loc_3A5D2
; ---------------------------------------------------------------------------
		align 2

loc_3A5CC:				; CODE XREF: sub_3A4B6+10Bj
		mov	word_42A1C, 1

loc_3A5D2:				; CODE XREF: sub_3A4B6+113j
		mov	ax, [bp+arg_12]
		or	ax, [bp+arg_14]
		jz	short loc_3A568
		call	sub_327EB
		or	ax, ax
		jz	short loc_3A568

loc_3A5E3:				; CODE XREF: sub_3A4B6+14Cj
					; sub_3A4B6+152j ...
		push	cs
		call	near ptr sub_3A7F6
		mov	ax, [bp+var_8]
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_3A5F0:				; CODE XREF: sub_3A4B6+E7j
		push	[bp+arg_14]
		push	[bp+arg_12]
		call	sub_327C0
		add	sp, 4
		cmp	[bp+var_8], 0Dh
		jz	short loc_3A5E3
		cmp	[bp+var_8], 1Bh
		jz	short loc_3A5E3
		cmp	[bp+var_8], 4800h
		jz	short loc_3A5E3
		cmp	[bp+var_8], 5000h
		jnz	short loc_3A61E
		test	[bp+arg_0], 8
		jz	short loc_3A5E3

loc_3A61E:				; CODE XREF: sub_3A4B6+160j
		cmp	[bp+var_8], 9
		jnz	short loc_3A62A
		test	[bp+arg_0], 10h
		jz	short loc_3A5E3

loc_3A62A:				; CODE XREF: sub_3A4B6+16Cj
		cmp	[bp+var_8], 4D00h
		jnz	short loc_3A648
		push	cs
		call	near ptr sub_3A7F6
		mov	ax, word_42A22
		cmp	[bp+arg_6], ax
		jg	short loc_3A640
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A640:				; CODE XREF: sub_3A4B6+185j
		inc	word_42A22
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------
		align 2

loc_3A648:				; CODE XREF: sub_3A4B6+179j
		cmp	[bp+var_8], 4B00h
		jnz	short loc_3A664
		push	cs
		call	near ptr sub_3A7F6
		cmp	word_42A22, 0
		jnz	short loc_3A65D
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A65D:				; CODE XREF: sub_3A4B6+1A2j
		dec	word_42A22
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A664:				; CODE XREF: sub_3A4B6+197j
		cmp	[bp+var_8], 4700h
		jnz	short loc_3A678
		push	cs
		call	near ptr sub_3A7F6
		mov	word_42A22, 0
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A678:				; CODE XREF: sub_3A4B6+1B3j
		cmp	[bp+var_8], 4F00h
		jnz	short loc_3A694
		push	cs
		call	near ptr sub_3A7F6
		push	word ptr [bp+arg_2] ; char *
		call	_strlen
		add	sp, 2
		mov	word_42A22, ax
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A694:				; CODE XREF: sub_3A4B6+1C7j
		cmp	[bp+var_8], 5200h
		jnz	short loc_3A6C2
		push	cs
		call	near ptr sub_3A7F6
		cmp	[bp+var_A], 0
		jnz	short loc_3A6B4
		mov	[bp+var_A], 1
		mov	word_42A16, 8
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------
		align 2

loc_3A6B4:				; CODE XREF: sub_3A4B6+1EDj
		mov	[bp+var_A], 0
		mov	word_42A16, 1
		jmp	loc_3A7E9
; ---------------------------------------------------------------------------

loc_3A6C2:				; CODE XREF: sub_3A4B6+1E3j
		cmp	[bp+var_8], 5300h
		jnz	short loc_3A710
		mov	ax, word_42A22
		cmp	[bp+arg_6], ax
		jg	short loc_3A6D4
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A6D4:				; CODE XREF: sub_3A4B6+219j
		mov	bx, word ptr [bp+arg_2]
		mov	si, ax
		cmp	byte ptr [bx+si], 0
		jnz	short loc_3A6E1
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A6E1:				; CODE XREF: sub_3A4B6+226j
		push	cs
		call	near ptr sub_3A7F6
		mov	ax, word_42A22
		mov	[bp+var_6], ax
		jmp	short loc_3A6FC
; ---------------------------------------------------------------------------
		align 2

loc_3A6EE:				; CODE XREF: sub_3A4B6+24Cj
		mov	si, [bp+var_6]
		add	si, word ptr [bp+arg_2]
		mov	al, [si+1]
		mov	[si], al
		inc	[bp+var_6]

loc_3A6FC:				; CODE XREF: sub_3A4B6+235j
		mov	ax, [bp+arg_6]
		cmp	[bp+var_6], ax
		jl	short loc_3A6EE

loc_3A704:				; CODE XREF: sub_3A4B6+290j
		mov	si, ax
		mov	bx, word ptr [bp+arg_2]
		mov	byte ptr [bx+si-1], 20h	; ' '
		jmp	loc_3A7E5
; ---------------------------------------------------------------------------

loc_3A710:				; CODE XREF: sub_3A4B6+211j
		cmp	[bp+var_8], 8
		jnz	short loc_3A748
		cmp	word_42A22, 0
		jnz	short loc_3A720
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A720:				; CODE XREF: sub_3A4B6+265j
		push	cs
		call	near ptr sub_3A7F6
		dec	word_42A22
		mov	ax, word_42A22
		mov	[bp+var_6], ax
		jmp	short loc_3A73E
; ---------------------------------------------------------------------------

loc_3A730:				; CODE XREF: sub_3A4B6+28Ej
		mov	si, [bp+var_6]
		add	si, word ptr [bp+arg_2]
		mov	al, [si+1]
		mov	[si], al
		inc	[bp+var_6]

loc_3A73E:				; CODE XREF: sub_3A4B6+278j
		mov	ax, [bp+arg_6]
		cmp	[bp+var_6], ax
		jl	short loc_3A730
		jmp	short loc_3A704
; ---------------------------------------------------------------------------

loc_3A748:				; CODE XREF: sub_3A4B6+25Ej
		cmp	[bp+var_8], 20h	; ' '
		jge	short loc_3A751
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A751:				; CODE XREF: sub_3A4B6+296j
		cmp	[bp+var_8], 7Ah	; 'z'
		jle	short loc_3A75A
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A75A:				; CODE XREF: sub_3A4B6+29Fj
		mov	ax, word_42A22
		cmp	[bp+arg_6], ax
		jg	short loc_3A765
		jmp	loc_3A7ED
; ---------------------------------------------------------------------------

loc_3A765:				; CODE XREF: sub_3A4B6+2AAj
		push	cs
		call	near ptr sub_3A7F6
		cmp	[bp+var_2], 0
		jz	short loc_3A796
		test	[bp+arg_0], 4
		jnz	short loc_3A796
		mov	word_42A22, 0
		mov	[bp+var_6], 0
		jmp	short loc_3A78E
; ---------------------------------------------------------------------------

loc_3A782:				; CODE XREF: sub_3A4B6+2DEj
		mov	bx, [bp+var_6]
		mov	si, word ptr [bp+arg_2]
		mov	byte ptr [bx+si], 20h ;	' '
		inc	[bp+var_6]

loc_3A78E:				; CODE XREF: sub_3A4B6+2CAj
		mov	ax, [bp+arg_6]
		cmp	[bp+var_6], ax
		jl	short loc_3A782

loc_3A796:				; CODE XREF: sub_3A4B6+2B7j
					; sub_3A4B6+2BDj
		mov	si, word ptr [bp+arg_2]
		add	si, word_42A22
		cmp	byte ptr [si], 0
		jnz	short loc_3A7A6
		mov	byte ptr [si+1], 0

loc_3A7A6:				; CODE XREF: sub_3A4B6+2EAj
		cmp	[bp+var_A], 0
		jz	short loc_3A7CE
		mov	ax, [bp+arg_6]
		sub	ax, 2
		mov	[bp+var_6], ax
		jmp	short loc_3A7C6
; ---------------------------------------------------------------------------
		align 2

loc_3A7B8:				; CODE XREF: sub_3A4B6+316j
		mov	si, [bp+var_6]
		add	si, word ptr [bp+arg_2]
		mov	al, [si]
		mov	[si+1],	al
		dec	[bp+var_6]

loc_3A7C6:				; CODE XREF: sub_3A4B6+2FFj
		mov	ax, word_42A22
		cmp	[bp+var_6], ax
		jge	short loc_3A7B8

loc_3A7CE:				; CODE XREF: sub_3A4B6+2F4j
		mov	bx, word ptr [bp+arg_2]
		mov	si, word_42A22
		mov	al, byte ptr [bp+var_8]
		mov	[bx+si], al
		mov	ax, si
		cmp	[bp+arg_6], ax
		jle	short loc_3A7E5
		inc	word_42A22

loc_3A7E5:				; CODE XREF: sub_3A4B6+257j
					; sub_3A4B6+329j
		push	cs
		call	near ptr sub_3A896

loc_3A7E9:				; CODE XREF: sub_3A4B6+187j
					; sub_3A4B6+18Ej ...
		push	cs
		call	near ptr sub_3A7F6

loc_3A7ED:				; CODE XREF: sub_3A4B6+21Bj
					; sub_3A4B6+228j ...
		mov	[bp+var_2], 0
		jmp	loc_3A568
sub_3A4B6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A7F6	proc far		; CODE XREF: sub_3A4B6+8Ep
					; sub_3A4B6+104p ...

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_42A1C, 0
		jnz	short loc_3A806
		jmp	loc_3A891
; ---------------------------------------------------------------------------

loc_3A806:				; CODE XREF: sub_3A7F6+Bj
		push	off_42A1E	; char *
		call	_strlen
		add	sp, 2
		cmp	ax, word_42A22
		jge	short loc_3A827
		push	off_42A1E	; char *
		call	_strlen
		add	sp, 2
		mov	word_42A22, ax

loc_3A827:				; CODE XREF: sub_3A7F6+20j
		mov	ax, 1
		push	ax
		mov	ax, word_42A22
		add	ax, off_42A1E
		push	ax
		call	sub_32832
		add	sp, 4
		mov	[bp+var_2], ax
		or	ax, ax
		jnz	short loc_3A851
		mov	ax, 53CAh
		push	ax
		call	sub_32843
		add	sp, 2
		mov	[bp+var_2], ax

loc_3A851:				; CODE XREF: sub_3A7F6+4Aj
		push	word_42A22
		push	off_42A1E
		call	sub_32832
		add	sp, 4
		add	ax, word_42A18
		mov	[bp+var_4], ax
		les	bx, off_405FE
		mov	ax, es:[bx+12h]
		add	ax, word_42A1A
		sub	ax, word_42A16
		mov	[bp+var_6], ax
		push	word ptr es:[bx]
		push	word_42A16
		push	[bp+var_2]
		push	ax
		push	[bp+var_4]
		call	sub_35B76
		add	sp, 0Ah

loc_3A891:				; CODE XREF: sub_3A7F6+Dj
		mov	sp, bp
		pop	bp
		retf
sub_3A7F6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A896	proc far		; CODE XREF: sub_3A4B6+79p
					; sub_3A4B6+330p

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		cmp	word_42A20, 0
		jz	short loc_3A8DE
		jmp	short loc_3A8CC
; ---------------------------------------------------------------------------

loc_3A8A6:				; CODE XREF: sub_3A896+46j
		push	off_42A1E	; char *
		call	_strlen
		add	sp, 2
		or	ax, ax
		jz	short loc_3A8DE
		push	off_42A1E	; char *
		call	_strlen
		add	sp, 2
		mov	si, ax
		mov	bx, off_42A1E
		mov	byte ptr [bx+si-1], 0

loc_3A8CC:				; CODE XREF: sub_3A896+Ej
		push	off_42A1E
		call	sub_32843
		add	sp, 2
		cmp	ax, word_42A20
		jg	short loc_3A8A6

loc_3A8DE:				; CODE XREF: sub_3A896+Cj
					; sub_3A896+1Ej
		push	off_42A1E	; char *
		call	_strlen
		add	sp, 2
		mov	[bp+var_2], ax
		mov	ax, word_42A22
		cmp	[bp+var_2], ax
		jge	short loc_3A8FB
		mov	ax, [bp+var_2]
		mov	word_42A22, ax

loc_3A8FB:				; CODE XREF: sub_3A896+5Dj
		push	word_42A1A
		push	word_42A18
		push	off_42A1E
		call	sub_345BC
		add	sp, 6
		cmp	word_42A20, 0
		jz	short loc_3A953
		push	off_42A1E
		call	sub_32843
		add	sp, 2
		mov	[bp+var_6], ax
		mov	ax, word_42A20
		sub	ax, [bp+var_6]
		mov	[bp+var_4], ax
		or	ax, ax
		jle	short loc_3A953
		les	bx, off_405FE
		push	word ptr es:[bx+2]
		push	word ptr es:[bx+12h]
		push	ax
		push	word_42A1A
		mov	ax, [bp+var_6]
		add	ax, word_42A18
		push	ax
		call	sub_33578
		add	sp, 0Ah

loc_3A953:				; CODE XREF: sub_3A896+7Ej
					; sub_3A896+9Aj
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3A896	endp

seg032		ends

; ===========================================================================

; Segment type:	Pure code
seg033		segment	byte public 'CODE' use16
		assume cs:seg033
		;org 8
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_3A958	proc far		; CODE XREF: sub_1D93C+416P
					; sub_1D93C+533P ...
		mov	ax, word ptr dword_4392E
		or	ax, word ptr dword_4392E+2
		jnz	short loc_3A97C
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_4392E, ax
		mov	word ptr dword_4392E+2,	dx

loc_3A97C:				; CODE XREF: sub_3A958+7j
		mov	ax, 5F3Eh
		mov	dx, seg	seg012
		push	dx
		push	ax
		call	sub_35AF6
		add	sp, 4
		les	bx, dword_4392E
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	sub_33BDA
		add	sp, 4
		retf
sub_3A958	endp


; =============== S U B	R O U T	I N E =======================================


sub_3A9A0	proc far		; CODE XREF: sub_11C42+2ADP
					; sub_1293C:loc_12A48P	...
		mov	ax, word ptr dword_4392E
		or	ax, word ptr dword_4392E+2
		jnz	short loc_3A9C4
		mov	ax, 0Fh
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 140h
		push	ax
		call	sub_34C0C
		add	sp, 6
		mov	word ptr dword_4392E, ax
		mov	word ptr dword_4392E+2,	dx

loc_3A9C4:				; CODE XREF: sub_3A9A0+7j
		push	word ptr dword_4392E+2
		push	word ptr dword_4392E
		call	sub_35AF6
		add	sp, 4
		retf
sub_3A9A0	endp

seg033		ends

; ===========================================================================

; Segment type:	Pure code
seg034		segment	byte public 'CODE' use16
		assume cs:seg034
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A9D6	proc far		; CODE XREF: sub_3385CJ

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, 1
		push	ax
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_3A9FC
		add	sp, 4
		pop	bp
		retf
sub_3A9D6	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A9EA	proc far		; CODE XREF: sub_33861J

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	ax, ax
		push	ax
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_3A9FC
		add	sp, 4
		pop	bp
		retf
sub_3A9EA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3A9FC	proc far		; CODE XREF: seg012:4E46J sub_3A9D6+Bp ...

var_80		= byte ptr -80h
var_7E		= word ptr -7Eh
var_7C		= byte ptr -7Ch
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 80h
		push	si
		push	[bp+arg_0]
		lea	ax, [bp+var_7C]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		lea	ax, [bp+var_7C]
		mov	word ptr [bp+var_C], ax
		jmp	short loc_3AA25
; ---------------------------------------------------------------------------
		align 2

loc_3AA1C:				; CODE XREF: sub_3A9FC+33j
		cmp	[bp+var_80], 2Eh ; '.'
		jz	short loc_3AA31
		inc	word ptr [bp+var_C]

loc_3AA25:				; CODE XREF: sub_3A9FC+1Dj
		mov	bx, word ptr [bp+var_C]
		mov	al, [bx]
		mov	[bp+var_80], al
		or	al, al
		jnz	short loc_3AA1C

loc_3AA31:				; CODE XREF: sub_3A9FC+24j
		mov	bx, word ptr [bp+var_C]
		cmp	byte ptr [bx], 0
		jnz	short loc_3AA92
		mov	[bp+var_14], 0
		jmp	short loc_3AA53
; ---------------------------------------------------------------------------

loc_3AA40:				; CODE XREF: sub_3A9FC+89j
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_2FFD4
		add	sp, 2
		or	ax, ax
		jnz	short loc_3AAA8
		inc	[bp+var_14]

loc_3AA53:				; CODE XREF: sub_3A9FC+42j
		mov	bx, [bp+var_14]
		shl	bx, 1
		mov	si, [bx+5466h]
		cmp	byte ptr [si], 0
		jz	short loc_3AAA8
		mov	ax, word ptr [bp+var_C]
		mov	[bp+var_12], ax
		push	si
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_3136A
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	dx, ax
		jz	short loc_3AA40

loc_3AA87:				; CODE XREF: sub_3A9FC+AAj
					; sub_3A9FC+E6j ...
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_2]
		pop	si
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------

loc_3AA92:				; CODE XREF: sub_3A9FC+3Bj
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_3136A
		add	sp, 2
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	dx, ax
		jnz	short loc_3AA87

loc_3AAA8:				; CODE XREF: sub_3A9FC+52j
					; sub_3A9FC+63j
		push	word ptr [bp+var_C]
		lea	ax, [bp+var_C+2]
		push	ax		; char *
		call	_strcpy
		add	sp, 4
		mov	ax, 5482h
		push	ax
		lea	ax, [bp+var_C+2]
		push	ax		; char *
		call	_stricmp
		add	sp, 4
		or	ax, ax
		jnz	short loc_3AB24
		push	[bp+arg_2]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_30DE6
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_3AA87
		push	dx
		push	[bp+var_4]
		call	sub_3B0BA
		add	sp, 4
		push	ax
		mov	ax, 5487h
		push	ax
		call	sub_31248
		add	sp, 4
		mov	word ptr [bp+var_10], ax
		mov	word ptr [bp+var_10+2],	dx
		push	dx
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_32AE2
		add	sp, 8
		push	word ptr [bp+var_10+2]
		push	word ptr [bp+var_10]
		call	sub_31641
		add	sp, 4
		jmp	loc_3AA87
; ---------------------------------------------------------------------------

loc_3AB24:				; CODE XREF: sub_3A9FC+CDj
		mov	ax, 548Eh
		push	ax
		lea	ax, [bp+var_C+2]
		push	ax		; char *
		call	_stricmp
		add	sp, 4
		or	ax, ax
		jnz	short loc_3AB50
		push	[bp+arg_2]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_30DE6

loc_3AB44:				; CODE XREF: sub_3A9FC+260j
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		jmp	loc_3AA87
; ---------------------------------------------------------------------------

loc_3AB50:				; CODE XREF: sub_3A9FC+13Aj
		mov	ax, 5493h
		push	ax
		lea	ax, [bp+var_C+2]
		push	ax		; char *
		call	_stricmp
		add	sp, 4
		or	ax, ax
		jz	short loc_3AB67
		jmp	loc_3AC1C
; ---------------------------------------------------------------------------

loc_3AB67:				; CODE XREF: sub_3A9FC+166j
		push	[bp+arg_2]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_30DE6
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_3AB83
		jmp	loc_3AA87
; ---------------------------------------------------------------------------

loc_3AB83:				; CODE XREF: sub_3A9FC+182j
		mov	ax, 3E8h
		push	ax
		mov	ax, 5498h
		push	ax
		call	sub_31248
		add	sp, 4
		mov	word ptr [bp+var_10], ax
		mov	word ptr [bp+var_10+2],	dx
		push	dx
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_360F6
		add	sp, 8
		push	word ptr [bp+var_10+2]
		push	word ptr [bp+var_10]
		call	sub_31641
		add	sp, 4

loc_3ABB7:				; CODE XREF: sub_3A9FC+24Dj
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_3B12A
		add	sp, 4
		mov	[bp+var_7E], ax
		mov	ax, 54A4h
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_30F92
		add	sp, 6
		mov	[bp+var_18], ax
		mov	[bp+var_16], dx
		or	ax, dx
		jz	short loc_3ABF3
		mov	ax, [bp+var_18]
		add	ax, 10h
		push	dx
		push	ax
		push	cs
		call	near ptr sub_3ACB0
		add	sp, 4

loc_3ABF3:				; CODE XREF: sub_3A9FC+1E6j
		push	[bp+var_7E]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_31248
		add	sp, 4
		mov	word ptr [bp+var_10], ax
		mov	word ptr [bp+var_10+2],	dx
		les	bx, [bp+var_10]
		mov	ax, [bp+var_7E]
		sub	dx, dx
		mov	cl, 4

loc_3AC12:				; CODE XREF: sub_3A9FC+21Ej
		shl	ax, 1
		rcl	dx, 1
		dec	cl
		jz	short loc_3AC60
		jmp	short loc_3AC12
; ---------------------------------------------------------------------------

loc_3AC1C:				; CODE XREF: sub_3A9FC+168j
		mov	ax, 549Fh
		push	ax
		lea	ax, [bp+var_C+2]
		push	ax		; char *
		call	_stricmp
		add	sp, 4
		or	ax, ax
		jnz	short loc_3AC50
		push	[bp+arg_2]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_30D79
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jz	short loc_3AC4C
		jmp	loc_3ABB7
; ---------------------------------------------------------------------------

loc_3AC4C:				; CODE XREF: sub_3A9FC+24Bj
		jmp	loc_3AA87
; ---------------------------------------------------------------------------
		align 2

loc_3AC50:				; CODE XREF: sub_3A9FC+232j
		push	[bp+arg_2]
		lea	ax, [bp+var_7C]
		push	ax
		call	sub_30D79
		jmp	loc_3AB44
; ---------------------------------------------------------------------------
		align 2

loc_3AC60:				; CODE XREF: sub_3A9FC+21Cj
		mov	es:[bx], ax
		mov	es:[bx+2], dx
		push	word ptr [bp+var_10+2]
		push	word ptr [bp+var_10]
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_35FA2
		add	sp, 8
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_31641
		add	sp, 4
		push	word ptr [bp+var_10+2]
		push	word ptr [bp+var_10]
		call	sub_31732
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	ax, 5472h
		push	ax
		push	dx
		push	[bp+var_4]
		call	sub_35F48
		add	sp, 6
		jmp	loc_3AA87
sub_3A9FC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3ACB0	proc far		; CODE XREF: sub_3A9FC+1F1p

var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	[bp+var_2], 0

loc_3ACBC:				; CODE XREF: sub_3ACB0+20j
		mov	bx, [bp+var_2]
		les	si, [bp+arg_0]
		mov	al, es:[bx+si]
		mov	[bx+5472h], al
		inc	[bp+var_2]
		cmp	[bp+var_2], 10h
		jl	short loc_3ACBC
		pop	si
		mov	sp, bp
		pop	bp
		retf
sub_3ACB0	endp

seg034		ends

; ===========================================================================

; Segment type:	Pure code
seg035		segment	byte public 'CODE' use16
		assume cs:seg035
		;org 7
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		align 2

loc_3ACD8:				; CODE XREF: seg012:4E28J
		push	bp
		mov	bp, sp
		mov	ax, 1
		push	ax
		push	word ptr [bp+6]
		push	cs
		call	near ptr sub_3ACFE
		add	sp, 4
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3ACEC	proc far		; CODE XREF: sub_3384DJ

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	ax, ax
		push	ax
		push	[bp+arg_0]
		push	cs
		call	near ptr sub_3ACFE
		add	sp, 4
		pop	bp
		retf
sub_3ACEC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3ACFE	proc far		; CODE XREF: seg012:4E32J seg035:0013p ...

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	[bp+arg_0]
		call	sub_31228
		add	sp, 2
		push	ax
		call	sub_3136A
		add	sp, 2
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		or	ax, dx
		jz	short loc_3AD2A
		mov	ax, [bp+var_8]
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_3AD2A:				; CODE XREF: sub_3ACFE+22j
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3A9FC
		add	sp, 4
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		or	ax, dx
		jnz	short loc_3AD4A
		mov	ax, [bp+var_4]
		mov	sp, bp
		pop	bp
		retf
; ---------------------------------------------------------------------------
		align 2

loc_3AD4A:				; CODE XREF: sub_3ACFE+42j
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_3167C
		add	sp, 4
		mov	[bp+var_A], ax
		push	ax
		push	[bp+arg_0]
		call	sub_31248
		add	sp, 4
		mov	[bp+var_8], ax
		mov	[bp+var_6], dx
		push	dx
		push	ax
		push	[bp+var_2]
		push	[bp+var_4]
		push	cs
		call	near ptr sub_3AD9C
		add	sp, 8
		push	[bp+var_2]
		push	[bp+var_4]
		call	sub_31641
		add	sp, 4
		push	[bp+var_6]
		push	[bp+var_8]
		call	sub_31732
		add	sp, 4
		mov	sp, bp
		pop	bp
		retf
sub_3ACFE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3AD9C	proc far		; CODE XREF: seg012:4E37J
					; sub_3ACFE+78p

var_38		= dword	ptr -38h
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= word ptr -30h
var_2E		= dword	ptr -2Eh
var_2A		= word ptr -2Ah
var_28		= word ptr -28h
var_26		= word ptr -26h
var_24		= word ptr -24h
var_1E		= word ptr -1Eh
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= word ptr -14h
var_12		= word ptr -12h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 38h
		push	di
		push	si
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3264A
		add	sp, 4
		mov	[bp+var_28], ax
		shl	ax, 1
		shl	ax, 1
		add	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		add	ax, 6
		mov	word ptr [bp+var_18], ax
		mov	word ptr [bp+var_18+2],	dx
		mov	ax, [bp+arg_4]
		mov	word ptr [bp+var_1C], ax
		mov	word ptr [bp+var_1C+2],	dx
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		mov	word ptr [bp+var_38], ax
		mov	word ptr [bp+var_38+2],	dx
		mov	[bp+var_2A], 0
		jmp	short loc_3ADF9
; ---------------------------------------------------------------------------

loc_3ADE4:				; CODE XREF: sub_3AD9C+6Aj
		les	bx, [bp+var_38]
		inc	word ptr [bp+var_38]
		mov	al, es:[bx]
		les	bx, [bp+var_1C]
		inc	word ptr [bp+var_1C]
		mov	es:[bx], al
		inc	[bp+var_2A]

loc_3ADF9:				; CODE XREF: sub_3AD9C+46j
		mov	ax, [bp+var_28]
		shl	ax, 1
		shl	ax, 1
		add	ax, 6
		cmp	ax, [bp+var_2A]
		jg	short loc_3ADE4
		mov	ax, [bp+var_28]
		mov	cl, 3
		shl	ax, cl
		add	ax, [bp+arg_4]
		mov	dx, [bp+arg_6]
		add	ax, 6
		mov	word ptr [bp+var_8], ax
		mov	word ptr [bp+var_8+2], dx
		mov	[bp+var_26], ax
		mov	[bp+var_24], dx
		mov	[bp+var_2A], 0
		jmp	loc_3AF5B
; ---------------------------------------------------------------------------

loc_3AE2C:				; CODE XREF: sub_3AD9C+1AFj
		push	word ptr [bp+var_2E+2]
		push	word ptr [bp+var_2E]
		push	cs
		call	near ptr sub_3B08C
		add	sp, 4
		mov	[bp+var_10], ax
		cmp	ax, 3
		jg	short loc_3AE4C
		mov	ax, [bp+var_1E]
		cmp	[bp+var_E], ax
		jnb	short loc_3AE4C
		jmp	loc_3AF3F
; ---------------------------------------------------------------------------

loc_3AE4C:				; CODE XREF: sub_3AD9C+A3j
					; sub_3AD9C+ABj ...
		cmp	[bp+var_E], 7Fh	; ''
		jg	short loc_3AE74
		cmp	[bp+var_E], 0
		jz	short loc_3AEC9
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	ax, [bp+var_E]
		neg	ax
		mov	es:[bx], al
		mov	ax, [bp+var_E]
		sub	[bp+var_1E], ax
		mov	[bp+var_30], 0
		jmp	short loc_3AEC1
; ---------------------------------------------------------------------------
		align 2

loc_3AE74:				; CODE XREF: sub_3AD9C+B4j
		sub	[bp+var_E], 7Fh	; ''
		sub	[bp+var_1E], 7Fh ; ''
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	byte ptr es:[bx], 81h ;	'Å'
		mov	[bp+var_30], 0
		jmp	short loc_3AE91
; ---------------------------------------------------------------------------
		align 2

loc_3AE8E:				; CODE XREF: sub_3AD9C+10Dj
		inc	[bp+var_30]

loc_3AE91:				; CODE XREF: sub_3AD9C+EFj
		cmp	[bp+var_30], 7Fh ; ''
		jge	short loc_3AE4C
		les	bx, [bp+var_4]
		inc	word ptr [bp+var_4]
		mov	al, es:[bx]
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	es:[bx], al
		jmp	short loc_3AE8E
; ---------------------------------------------------------------------------
		align 2

loc_3AEAC:				; CODE XREF: sub_3AD9C+12Bj
		les	bx, [bp+var_4]
		inc	word ptr [bp+var_4]
		mov	al, es:[bx]
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	es:[bx], al
		inc	[bp+var_30]

loc_3AEC1:				; CODE XREF: sub_3AD9C+D5j
		mov	ax, [bp+var_E]
		cmp	[bp+var_30], ax
		jl	short loc_3AEAC

loc_3AEC9:				; CODE XREF: sub_3AD9C+BAj
		mov	ax, [bp+var_1E]
		cmp	[bp+var_10], ax
		jbe	short loc_3AEFB
		mov	[bp+var_10], ax
		jmp	short loc_3AEFB
; ---------------------------------------------------------------------------

loc_3AED6:				; CODE XREF: sub_3AD9C+163j
		sub	[bp+var_10], 7Fh ; ''
		sub	[bp+var_1E], 7Fh ; ''
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	byte ptr es:[bx], 7Fh ;	''
		les	bx, [bp+var_2E]
		mov	al, es:[bx]
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	es:[bx], al
		add	word ptr [bp+var_2E], 7Fh ; ''

loc_3AEFB:				; CODE XREF: sub_3AD9C+133j
					; sub_3AD9C+138j
		cmp	[bp+var_10], 7Fh ; ''
		jg	short loc_3AED6
		cmp	[bp+var_10], 3
		jle	short loc_3AF2E
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	al, byte ptr [bp+var_10]
		mov	es:[bx], al
		mov	ax, [bp+var_10]
		sub	[bp+var_1E], ax
		les	bx, [bp+var_2E]
		mov	al, es:[bx]
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	es:[bx], al
		mov	ax, [bp+var_10]
		add	word ptr [bp+var_2E], ax

loc_3AF2E:				; CODE XREF: sub_3AD9C+169j
		mov	ax, word ptr [bp+var_2E]
		mov	dx, word ptr [bp+var_2E+2]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		mov	[bp+var_E], 0

loc_3AF3F:				; CODE XREF: sub_3AD9C+ADj
		inc	word ptr [bp+var_2E]
		inc	[bp+var_E]

loc_3AF45:				; CODE XREF: sub_3AD9C+281j
		cmp	[bp+var_1E], 0
		jz	short loc_3AF4E
		jmp	loc_3AE2C
; ---------------------------------------------------------------------------

loc_3AF4E:				; CODE XREF: sub_3AD9C+1ADj
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	byte ptr es:[bx], 0
		inc	[bp+var_2A]

loc_3AF5B:				; CODE XREF: sub_3AD9C+8Dj
		mov	ax, [bp+var_28]
		cmp	[bp+var_2A], ax
		jl	short loc_3AF66
		jmp	loc_3B020
; ---------------------------------------------------------------------------

loc_3AF66:				; CODE XREF: sub_3AD9C+1C5j
		push	[bp+var_2A]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3265B
		add	sp, 6
		mov	word ptr [bp+var_C], ax
		mov	word ptr [bp+var_C+2], dx
		push	word ptr [bp+var_8+2]
		push	word ptr [bp+var_8]
		call	sub_2F314
		add	sp, 4
		mov	[bp+var_14], ax
		mov	[bp+var_12], dx
		push	dx
		push	ax
		call	sub_2F334
		add	sp, 4
		mov	word ptr [bp+var_8], ax
		mov	word ptr [bp+var_8+2], dx
		push	[bp+var_24]
		push	[bp+var_26]
		call	sub_2F314
		add	sp, 4
		push	word ptr [bp+var_8+2]
		push	word ptr [bp+var_8]
		mov	si, ax
		mov	di, dx
		call	sub_2F314
		add	sp, 4
		sub	ax, si
		sbb	dx, di
		les	bx, [bp+var_18]
		add	word ptr [bp+var_18], 4
		mov	es:[bx], ax
		mov	es:[bx+2], dx
		mov	ax, word ptr [bp+var_C]
		mov	dx, word ptr [bp+var_C+2]
		mov	word ptr [bp+var_2E], ax
		mov	word ptr [bp+var_2E+2],	dx
		mov	[bp+var_30], 0

loc_3AFE4:				; CODE XREF: sub_3AD9C+261j
		les	bx, [bp+var_2E]
		inc	word ptr [bp+var_2E]
		mov	al, es:[bx]
		les	bx, [bp+var_8]
		inc	word ptr [bp+var_8]
		mov	es:[bx], al
		inc	[bp+var_30]
		cmp	[bp+var_30], 10h
		jl	short loc_3AFE4
		mov	ax, word ptr [bp+var_2E]
		mov	dx, word ptr [bp+var_2E+2]
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		mov	[bp+var_E], 0
		les	bx, [bp+var_C]
		mov	ax, es:[bx+2]
		imul	word ptr es:[bx]
		mov	[bp+var_1E], ax
		jmp	loc_3AF45
; ---------------------------------------------------------------------------

loc_3B020:				; CODE XREF: sub_3AD9C+1C7j
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_2F314
		add	sp, 4
		push	word ptr [bp+var_8+2]
		push	word ptr [bp+var_8]
		mov	si, ax
		mov	di, dx
		call	sub_2F314
		add	sp, 4
		sub	ax, si
		sbb	dx, di
		mov	[bp+var_34], ax
		mov	[bp+var_32], dx
		test	byte ptr [bp+var_34], 0Fh
		jz	short loc_3B068
		mov	cl, 4

loc_3B052:				; CODE XREF: sub_3AD9C+2BCj
		sar	dx, 1
		rcr	ax, 1
		dec	cl
		jnz	short loc_3B052
		add	ax, 1
		adc	dx, 0
		mov	[bp+var_34], ax
		mov	[bp+var_32], dx
		jmp	short loc_3B074
; ---------------------------------------------------------------------------

loc_3B068:				; CODE XREF: sub_3AD9C+2B2j
		mov	al, 4
		push	ax
		lea	ax, [bp+var_34]
		push	ax
		call	unknown_libname_4 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic

loc_3B074:				; CODE XREF: sub_3AD9C+2CAj
		push	[bp+var_34]
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_316A2
		add	sp, 6
		pop	si
		pop	di
		mov	sp, bp
		pop	bp
		retf
sub_3AD9C	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3B08C	proc far		; CODE XREF: sub_3AD9C+97p

var_4		= byte ptr -4
var_2		= word ptr -2
arg_0		= dword	ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 4
		les	bx, [bp+arg_0]
		mov	al, es:[bx]
		mov	[bp+var_4], al
		mov	[bp+var_2], 0
		jmp	short loc_3B0A5
; ---------------------------------------------------------------------------

loc_3B0A2:				; CODE XREF: sub_3B08C+25j
		inc	[bp+var_2]

loc_3B0A5:				; CODE XREF: sub_3B08C+14j
		les	bx, [bp+arg_0]
		inc	word ptr [bp+arg_0]
		mov	al, [bp+var_4]
		cmp	es:[bx], al
		jz	short loc_3B0A2
		mov	ax, [bp+var_2]
		mov	sp, bp
		pop	bp
		retf
sub_3B08C	endp

seg035		ends

; ===========================================================================

; Segment type:	Pure code
seg036		segment	byte public 'CODE' use16
		assume cs:seg036
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3B0BA	proc far		; CODE XREF: sub_3A9FC+ECP

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3264A
		add	sp, 4
		mov	[bp+var_A], ax
		mov	[bp+var_6], 0
		mov	[bp+var_8], 0
		jmp	short loc_3B11B
; ---------------------------------------------------------------------------
		align 2

loc_3B0DE:				; CODE XREF: sub_3B0BA+67j
		push	[bp+var_8]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3265B
		add	sp, 6
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		les	bx, [bp+var_4]
		mov	ax, es:[bx+2]
		imul	word ptr es:[bx]
		add	ax, 20h	; ' '
		mov	[bp+var_C], ax
		mov	cl, 4
		shr	[bp+var_C], cl
		mov	ax, [bp+var_6]
		cmp	[bp+var_C], ax
		jbe	short loc_3B118
		mov	ax, [bp+var_C]
		mov	[bp+var_6], ax

loc_3B118:				; CODE XREF: sub_3B0BA+56j
		inc	[bp+var_8]

loc_3B11B:				; CODE XREF: sub_3B0BA+21j
		mov	ax, [bp+var_A]
		cmp	[bp+var_8], ax
		jl	short loc_3B0DE
		mov	ax, [bp+var_6]
		mov	sp, bp
		pop	bp
		retf
sub_3B0BA	endp

seg036		ends

; ===========================================================================

; Segment type:	Pure code
seg037		segment	byte public 'CODE' use16
		assume cs:seg037
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_3B12A	proc far		; CODE XREF: sub_3A9FC+1C1P

var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3264A
		add	sp, 4
		mov	[bp+var_A], ax
		mov	cl, 3
		shl	ax, cl
		add	ax, 10h
		cwd
		mov	[bp+var_E], ax
		mov	[bp+var_C], dx
		mov	[bp+var_8], 0
		jmp	short loc_3B191
; ---------------------------------------------------------------------------

loc_3B156:				; CODE XREF: sub_3B12A+6Dj
		push	[bp+var_8]
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_3265B
		add	sp, 6
		mov	word ptr [bp+var_4], ax
		mov	word ptr [bp+var_4+2], dx
		les	bx, [bp+var_4]
		mov	ax, es:[bx+2]
		imul	word ptr es:[bx]
		mov	cl, 3
		shl	ax, cl
		mov	[bp+var_6], ax
		sub	dx, dx
		add	[bp+var_E], ax
		adc	[bp+var_C], dx
		add	[bp+var_E], 10h
		adc	[bp+var_C], 0
		inc	[bp+var_8]

loc_3B191:				; CODE XREF: sub_3B12A+2Aj
		mov	ax, [bp+var_A]
		cmp	[bp+var_8], ax
		jl	short loc_3B156
		add	[bp+var_E], 10h
		adc	[bp+var_C], 0
		mov	al, 4
		push	ax
		lea	ax, [bp+var_E]
		push	ax
		call	unknown_libname_4 ; MS Quick C v1.0/v2.01 & MSC	v5.1 DOS run-time & graphic
		mov	ax, [bp+var_E]
		mov	sp, bp
		pop	bp
		retf
sub_3B12A	endp

; ---------------------------------------------------------------------------
		align 10h
seg037		ends

; ===========================================================================

; Segment type:	Regular
seg038		segment	byte public 'UNK' use16
		assume cs:seg038
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
unk_3B1C0	db    0			; DATA XREF: sub_193E0+1Ao
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
seg038		ends

; ===========================================================================

; Segment type:	Regular
seg039		segment	byte public 'UNK' use16
		assume cs:seg039
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
word_3B1F0	dw 3			; DATA XREF: dseg:off_405FEo
		dw 0
		db    0
		db    0
		db    0
		db    0
		dw 0
		dw 0
		db    1
		db    0
		db    8
		db    0
		dw 8
		db    8
		db    0
		db 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  16h
		db    2
		db  1Eh
		db    2
		db  26h	; &
		db    2
		db  2Eh	; .
		db    2
		db  36h	; 6
		db    2
		db  3Eh	; >
		db    2
		db  46h	; F
		db    2
		db  4Eh	; N
		db    2
		db  56h	; V
		db    2
		db  5Eh	; ^
		db    2
		db  66h	; f
		db    2
		db  6Eh	; n
		db    2
		db  76h	; v
		db    2
		db  7Eh	; ~
		db    2
		db  86h	; Ü
		db    2
		db  8Eh	; é
		db    2
		db  96h	; ñ
		db    2
		db  9Eh	; û
		db    2
		db 0A6h	; ¶
		db    2
		db 0AEh	; Æ
		db    2
		db 0B6h	; ∂
		db    2
		db 0BEh	; æ
		db    2
		db 0C6h	; ∆
		db    2
		db 0CEh	; Œ
		db    2
		db 0D6h	; ÷
		db    2
		db 0DEh	; ﬁ
		db    2
		db 0E6h	; Ê
		db    2
		db 0EEh	; Ó
		db    2
		db 0F6h	; ˆ
		db    2
		db 0FEh	; ˛
		db    2
		db    6
		db    3
		db  0Eh
		db    3
		db  16h
		db    3
		db  1Eh
		db    3
		db  26h	; &
		db    3
		db  2Eh	; .
		db    3
		db  36h	; 6
		db    3
		db  3Eh	; >
		db    3
		db  46h	; F
		db    3
		db  4Eh	; N
		db    3
		db  56h	; V
		db    3
		db  5Eh	; ^
		db    3
		db  66h	; f
		db    3
		db  6Eh	; n
		db    3
		db  76h	; v
		db    3
		db  7Eh	; ~
		db    3
		db  86h	; Ü
		db    3
		db  8Eh	; é
		db    3
		db  96h	; ñ
		db    3
		db  9Eh	; û
		db    3
		db 0A6h	; ¶
		db    3
		db 0AEh	; Æ
		db    3
		db 0B6h	; ∂
		db    3
		db 0BEh	; æ
		db    3
		db 0C6h	; ∆
		db    3
		db 0CEh	; Œ
		db    3
		db 0D6h	; ÷
		db    3
		db 0DEh	; ﬁ
		db    3
		db 0E6h	; Ê
		db    3
		db 0EEh	; Ó
		db    3
		db 0F6h	; ˆ
		db    3
		db 0FEh	; ˛
		db    3
		db    6
		db    4
		db  0Eh
		db    4
		db  16h
		db    4
		db  1Eh
		db    4
		db  26h	; &
		db    4
		db  2Eh	; .
		db    4
		db  36h	; 6
		db    4
		db  3Eh	; >
		db    4
		db  46h	; F
		db    4
		db  4Eh	; N
		db    4
		db  56h	; V
		db    4
		db  5Eh	; ^
		db    4
		db  66h	; f
		db    4
		db  6Eh	; n
		db    4
		db  76h	; v
		db    4
		db  7Eh	; ~
		db    4
		db  86h	; Ü
		db    4
		db  8Eh	; é
		db    4
		db  96h	; ñ
		db    4
		db  9Eh	; û
		db    4
		db 0A6h	; ¶
		db    4
		db 0AEh	; Æ
		db    4
		db 0B6h	; ∂
		db    4
		db 0BEh	; æ
		db    4
		db 0C6h	; ∆
		db    4
		db 0CEh	; Œ
		db    4
		db 0D6h	; ÷
		db    4
		db 0DEh	; ﬁ
		db    4
		db 0E6h	; Ê
		db    4
		db 0EEh	; Ó
		db    4
		db 0F6h	; ˆ
		db    4
		db 0FEh	; ˛
		db    4
		db    6
		db    5
		db  0Eh
		db    5
		db  16h
		db    5
		db  1Eh
		db    5
		db  26h	; &
		db    5
		db  2Eh	; .
		db    5
		db  36h	; 6
		db    5
		db  3Eh	; >
		db    5
		db  46h	; F
		db    5
		db  4Eh	; N
		db    5
		db  56h	; V
		db    5
		db  5Eh	; ^
		db    5
		db  66h	; f
		db    5
		db  6Eh	; n
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  30h	; 0
		db  78h	; x
		db  78h	; x
		db  30h	; 0
		db  30h	; 0
		db    0
		db  30h	; 0
		db    0
		db  6Ch	; l
		db  6Ch	; l
		db  6Ch	; l
		db    0
		db    0
		db    0
		db    0
		db    0
		db  6Ch	; l
		db  6Ch	; l
		db 0FEh	; ˛
		db  6Ch	; l
		db 0FEh	; ˛
		db  6Ch	; l
		db  6Ch	; l
		db    0
		db  30h	; 0
		db  7Ch	; |
		db 0C0h	; ¿
		db  78h	; x
		db  0Ch
		db 0F8h	; ¯
		db  30h	; 0
		db    0
		db    0
		db 0C6h	; ∆
		db 0CCh	; Ã
		db  18h
		db  30h	; 0
		db  66h	; f
		db 0C6h	; ∆
		db    0
		db  38h	; 8
		db  6Ch	; l
		db  38h	; 8
		db  76h	; v
		db 0DCh	; ‹
		db 0CCh	; Ã
		db  76h	; v
		db    0
		db  60h	; `
		db  60h	; `
		db 0C0h	; ¿
		db    0
		db    0
		db    0
		db    0
		db    0
		db  18h
		db  30h	; 0
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  30h	; 0
		db  18h
		db    0
		db  60h	; `
		db  30h	; 0
		db  18h
		db  18h
		db  18h
		db  30h	; 0
		db  60h	; `
		db    0
		db    0
		db  66h	; f
		db  3Ch	; <
		db 0FFh
		db  3Ch	; <
		db  66h	; f
		db    0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db 0FCh	; ¸
		db  30h	; 0
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db  60h	; `
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db    0
		db    6
		db  0Ch
		db  18h
		db  30h	; 0
		db  60h	; `
		db 0C0h	; ¿
		db  80h	; Ä
		db    0
		db  7Ch	; |
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0C6h	; ∆
		db  7Ch	; |
		db    0
		db  30h	; 0
		db  70h	; p
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db 0FCh	; ¸
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db  0Ch
		db  38h	; 8
		db  60h	; `
		db 0CCh	; Ã
		db 0FCh	; ¸
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db  0Ch
		db  38h	; 8
		db  0Ch
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db  1Ch
		db  3Ch	; <
		db  6Ch	; l
		db 0CCh	; Ã
		db 0FEh	; ˛
		db  0Ch
		db  1Eh
		db    0
		db 0FCh	; ¸
		db 0C0h	; ¿
		db 0F8h	; ¯
		db  0Ch
		db  0Ch
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db  38h	; 8
		db  60h	; `
		db 0C0h	; ¿
		db 0F8h	; ¯
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db 0FCh	; ¸
		db 0CCh	; Ã
		db  0Ch
		db  18h
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  7Ch	; |
		db  0Ch
		db  18h
		db  70h	; p
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db    0
		db    0
		db  30h	; 0
		db  30h	; 0
		db  60h	; `
		db  18h
		db  30h	; 0
		db  60h	; `
		db 0C0h	; ¿
		db  60h	; `
		db  30h	; 0
		db  18h
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db    0
		db    0
		db 0FCh	; ¸
		db    0
		db    0
		db  60h	; `
		db  30h	; 0
		db  18h
		db  0Ch
		db  18h
		db  30h	; 0
		db  60h	; `
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db  0Ch
		db  18h
		db  30h	; 0
		db    0
		db  30h	; 0
		db    0
		db  7Ch	; |
		db 0C6h	; ∆
		db 0DEh	; ﬁ
		db 0DEh	; ﬁ
		db 0DEh	; ﬁ
		db 0C0h	; ¿
		db  78h	; x
		db    0
		db  30h	; 0
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0FCh	; ¸
		db 0CCh	; Ã
		db 0CCh	; Ã
		db    0
		db 0FCh	; ¸
		db  66h	; f
		db  66h	; f
		db  7Ch	; |
		db  66h	; f
		db  66h	; f
		db 0FCh	; ¸
		db    0
		db  3Ch	; <
		db  66h	; f
		db 0C0h	; ¿
		db 0C0h	; ¿
		db 0C0h	; ¿
		db  66h	; f
		db  3Ch	; <
		db    0
		db 0F8h	; ¯
		db  6Ch	; l
		db  66h	; f
		db  66h	; f
		db  66h	; f
		db  6Ch	; l
		db 0F8h	; ¯
		db    0
		db 0FEh	; ˛
		db  62h	; b
		db  68h	; h
		db  78h	; x
		db  68h	; h
		db  62h	; b
		db 0FEh	; ˛
		db    0
		db 0FEh	; ˛
		db  62h	; b
		db  68h	; h
		db  78h	; x
		db  68h	; h
		db  60h	; `
		db 0F0h	; 
		db    0
		db  3Ch	; <
		db  66h	; f
		db 0C0h	; ¿
		db 0C0h	; ¿
		db 0CEh	; Œ
		db  66h	; f
		db  3Eh	; >
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0FCh	; ¸
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db    0
		db  78h	; x
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  78h	; x
		db    0
		db  1Eh
		db  0Ch
		db  0Ch
		db  0Ch
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db 0E6h	; Ê
		db  66h	; f
		db  6Ch	; l
		db  78h	; x
		db  6Ch	; l
		db  66h	; f
		db 0E6h	; Ê
		db    0
		db 0F0h	; 
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  62h	; b
		db  66h	; f
		db 0FEh	; ˛
		db    0
		db 0C6h	; ∆
		db 0EEh	; Ó
		db 0FEh	; ˛
		db 0FEh	; ˛
		db 0D6h	; ÷
		db 0C6h	; ∆
		db 0C6h	; ∆
		db    0
		db 0C6h	; ∆
		db 0E6h	; Ê
		db 0F6h	; ˆ
		db 0DEh	; ﬁ
		db 0CEh	; Œ
		db 0C6h	; ∆
		db 0C6h	; ∆
		db    0
		db  38h	; 8
		db  6Ch	; l
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0C6h	; ∆
		db  6Ch	; l
		db  38h	; 8
		db    0
		db 0FCh	; ¸
		db  66h	; f
		db  66h	; f
		db  7Ch	; |
		db  60h	; `
		db  60h	; `
		db 0F0h	; 
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0DCh	; ‹
		db  78h	; x
		db  1Ch
		db    0
		db 0FCh	; ¸
		db  66h	; f
		db  66h	; f
		db  7Ch	; |
		db  6Ch	; l
		db  66h	; f
		db 0E6h	; Ê
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0E0h	; ‡
		db  70h	; p
		db  1Ch
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db 0FCh	; ¸
		db 0B4h	; ¥
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  78h	; x
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0FCh	; ¸
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db  30h	; 0
		db    0
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0D6h	; ÷
		db 0FEh	; ˛
		db 0EEh	; Ó
		db 0C6h	; ∆
		db    0
		db 0C6h	; ∆
		db 0C6h	; ∆
		db  6Ch	; l
		db  38h	; 8
		db  38h	; 8
		db  6Ch	; l
		db 0C6h	; ∆
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db  30h	; 0
		db  30h	; 0
		db  78h	; x
		db    0
		db 0FEh	; ˛
		db 0C6h	; ∆
		db  8Ch	; å
		db  18h
		db  32h	; 2
		db  66h	; f
		db 0FEh	; ˛
		db    0
		db  78h	; x
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  78h	; x
		db    0
		db 0C0h	; ¿
		db  60h	; `
		db  30h	; 0
		db  18h
		db  0Ch
		db    6
		db    2
		db    0
		db  78h	; x
		db  18h
		db  18h
		db  18h
		db  18h
		db  18h
		db  78h	; x
		db    0
		db  10h
		db  38h	; 8
		db  6Ch	; l
		db 0C6h	; ∆
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db  30h	; 0
		db  30h	; 0
		db  18h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db  0Ch
		db  7Ch	; |
		db 0CCh	; Ã
		db  76h	; v
		db    0
		db 0E0h	; ‡
		db  60h	; `
		db  60h	; `
		db  7Ch	; |
		db  66h	; f
		db  66h	; f
		db 0DCh	; ‹
		db    0
		db    0
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0C0h	; ¿
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db  1Ch
		db  0Ch
		db  0Ch
		db  7Ch	; |
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  76h	; v
		db    0
		db    0
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0FCh	; ¸
		db 0C0h	; ¿
		db  78h	; x
		db    0
		db  38h	; 8
		db  6Ch	; l
		db  60h	; `
		db 0F0h	; 
		db  60h	; `
		db  60h	; `
		db 0F0h	; 
		db    0
		db    0
		db    0
		db  76h	; v
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  7Ch	; |
		db  0Ch
		db 0F8h	; ¯
		db 0E0h	; ‡
		db  60h	; `
		db  6Ch	; l
		db  76h	; v
		db  66h	; f
		db  66h	; f
		db 0E6h	; Ê
		db    0
		db  30h	; 0
		db    0
		db  70h	; p
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  78h	; x
		db    0
		db  0Ch
		db    0
		db  0Ch
		db  0Ch
		db  0Ch
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db 0E0h	; ‡
		db  60h	; `
		db  66h	; f
		db  6Ch	; l
		db  78h	; x
		db  6Ch	; l
		db 0E6h	; Ê
		db    0
		db  70h	; p
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  78h	; x
		db    0
		db    0
		db    0
		db 0CCh	; Ã
		db 0FEh	; ˛
		db 0FEh	; ˛
		db 0D6h	; ÷
		db 0C6h	; ∆
		db    0
		db    0
		db    0
		db 0F8h	; ¯
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db    0
		db    0
		db    0
		db  78h	; x
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db    0
		db    0
		db    0
		db 0DCh	; ‹
		db  66h	; f
		db  66h	; f
		db  7Ch	; |
		db  60h	; `
		db 0F0h	; 
		db    0
		db    0
		db  76h	; v
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  7Ch	; |
		db  0Ch
		db  1Eh
		db    0
		db    0
		db 0DCh	; ‹
		db  76h	; v
		db  66h	; f
		db  60h	; `
		db 0F0h	; 
		db    0
		db    0
		db    0
		db  7Ch	; |
		db 0C0h	; ¿
		db  78h	; x
		db  0Ch
		db 0F8h	; ¯
		db    0
		db  10h
		db  30h	; 0
		db  7Ch	; |
		db  30h	; 0
		db  30h	; 0
		db  34h	; 4
		db  18h
		db    0
		db    0
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  76h	; v
		db    0
		db    0
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  78h	; x
		db  30h	; 0
		db    0
		db    0
		db    0
		db 0C6h	; ∆
		db 0D6h	; ÷
		db 0FEh	; ˛
		db 0FEh	; ˛
		db  6Ch	; l
		db    0
		db    0
		db    0
		db 0C6h	; ∆
		db  6Ch	; l
		db  38h	; 8
		db  6Ch	; l
		db 0C6h	; ∆
		db    0
		db    0
		db    0
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  7Ch	; |
		db  0Ch
		db 0F8h	; ¯
		db    0
		db    0
		db 0FCh	; ¸
		db  98h	; ò
		db  30h	; 0
		db  64h	; d
		db 0FCh	; ¸
		db    0
		db  1Ch
		db  30h	; 0
		db  30h	; 0
		db 0E0h	; ‡
		db  30h	; 0
		db  30h	; 0
		db  1Ch
		db    0
		db  18h
		db  18h
		db  18h
		db    0
		db  18h
		db  18h
		db  18h
		db    0
		db 0E0h	; ‡
		db  30h	; 0
		db  30h	; 0
		db  1Ch
		db  30h	; 0
		db  30h	; 0
		db 0E0h	; ‡
		db    0
		db  76h	; v
		db 0DCh	; ‹
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  10h
		db  38h	; 8
		db  6Ch	; l
		db 0C6h	; ∆
		db 0C6h	; ∆
		db 0FEh	; ˛
		db    0
		db    0
		db    2
		db    4
		db  48h	; H
		db  50h	; P
		db  20h
		db    0
		db    0
		db  18h
		db  30h	; 0
		db  60h	; `
		db 0FEh	; ˛
		db  60h	; `
		db  30h	; 0
		db  18h
		db    0
		db  30h	; 0
		db  18h
		db  0Ch
		db 0FEh	; ˛
		db  0Ch
		db  18h
		db  30h	; 0
		db    0
		db  10h
		db  38h	; 8
		db  7Ch	; |
		db 0D6h	; ÷
		db  10h
		db  10h
		db  10h
		db    0
		db  10h
		db  10h
		db  10h
		db 0D6h	; ÷
		db  7Ch	; |
		db  38h	; 8
		db  10h
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db    8
		db  24h	; $
		db  92h	; í
		db  92h	; í
		db  24h	; $
		db    8
		db    0
		db    0
		db  7Ch	; |
		db  66h	; f
		db  92h	; í
		db  92h	; í
		db 0C6h	; ∆
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    2
		db    4
		db  48h	; H
		db  50h	; P
		db  20h
		db    0
		db    0
		db    0
		db  20h
		db  60h	; `
		db 0FEh	; ˛
		db 0FEh	; ˛
		db  60h	; `
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db  18h
		db  18h
		db  18h
		db  18h
		db  18h
		db  18h
		db  18h
		db  18h
		db    0
		db    0
seg039		ends

; ===========================================================================

; Segment type:	Pure data
dseg		segment	para public 'DATA' use16
		assume cs:dseg
byte_3B770	db 0			; DATA XREF: sub_33742:loc_337CEr
					; sub_345BC:loc_34647r
		db    0
word_3B772	dw 0			; DATA XREF: start+54w	sub_33742+8Fr ...
word_3B774	dw 0			; DATA XREF: sub_33742:loc_33797r
					; sub_345BC:loc_34610r
		db    0
		db    0
word_3B778	dw 534Dh		; DATA XREF: sub_33742+10w
					; sub_33742+58w ...
word_3B77A	dw 5220h		; DATA XREF: sub_33742+16w
					; sub_33742+5Ew ...
byte_3B77C	db 75h			; DATA XREF: sub_33742+89w
					; sub_33742+ABr ...
		db  6Eh	; n
word_3B77E	dw 542Dh		; DATA XREF: sub_33742+93r
					; sub_345BC+92r
word_3B780	dw 6D69h		; DATA XREF: sub_33742+7Dw
					; sub_33742+CAr ...
word_3B782	dw 2065h		; DATA XREF: sub_33742+5Br
					; sub_345BC+5Ar
byte_3B784	db 4Ch			; DATA XREF: sub_33742+71r
					; sub_345BC+70r
		db  69h	; i
		db  62h	; b
		db  72h	; r
		db  61h	; a
		db  72h	; r
		db  79h	; y
		db  20h
		db  2Dh	; -
		db  20h
		db  43h	; C
		db  6Fh	; o
		db  70h	; p
		db  79h	; y
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  74h	; t
		db  20h
		db  28h	; (
		db  63h	; c
		db  29h	; )
		db  20h
word_3B79C	dw 3931h		; DATA XREF: __setenvp+11r
		db  38h	; 8
		db  38h	; 8
		db  2Ch	; ,
		db  20h
		db  4Dh	; M
		db  69h	; i
		db  63h	; c
		db  72h	; r
		db  6Fh	; o
		db  73h	; s
		db  6Fh	; o
		db  66h	; f
		db  74h	; t
		db  20h
		db  43h	; C
		db  6Fh	; o
		db  72h	; r
		db  70h	; p
		db  11h
		db    0
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  64h	; d
		db  65h	; e
		db  66h	; f
		db  2Eh	; .
		db  66h	; f
		db  6Eh	; n
		db  74h	; t
		db    0
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  6Eh	; n
		db  2Eh	; .
		db  66h	; f
		db  6Eh	; n
		db  74h	; t
		db    0
		db  74h	; t
		db  72h	; r
		db  61h	; a
		db  6Bh	; k
		db  64h	; d
		db  61h	; a
		db  74h	; t
		db  61h	; a
		db    0
		db  44h	; D
		db  45h	; E
		db  46h	; F
		db  41h	; A
		db  55h	; U
		db  4Ch	; L
		db  54h	; T
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  53h	; S
		db  4Ch	; L
		db  43h	; C
		db  54h	; T
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  6Dh	; m
		db  73h	; s
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  73h	; s
		db  6Ch	; l
		db  63h	; c
		db  74h	; t
		db    0
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  69h	; i
		db  74h	; t
		db  2Eh	; .
		db  2Ah	; *
		db    0
		db  63h	; c
		db  76h	; v
		db  78h	; x
		db    0
		db  64h	; d
		db  6Fh	; o
		db  73h	; s
		db    0
word_3B808	dw 0			; DATA XREF: sub_1A0F4+20w
					; sub_1A0F4+34w ...
word_3B80A	dw 0			; DATA XREF: sub_1A0F4+26w
					; sub_1A0F4:loc_1A122w	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3B870	dw 0			; DATA XREF: seg012:73AEo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db  45h	; E
		db  46h	; F
		db  41h	; A
		db  55h	; U
		db  4Ch	; L
		db  54h	; T
		db    0
		db    0
		db    0
		db  64h	; d
		db  65h	; e
		db  73h	; s
		db  65h	; e
		db  72h	; r
		db  74h	; t
		db    0
		db    0
		db    0
		db  74h	; t
		db  72h	; r
		db  6Fh	; o
		db  70h	; p
		db  69h	; i
		db  63h	; c
		db  61h	; a
		db  6Ch	; l
		db    0
		db  61h	; a
		db  6Ch	; l
		db  70h	; p
		db  69h	; i
		db  6Eh	; n
		db  65h	; e
		db    0
		db    0
		db    0
		db  63h	; c
		db  69h	; i
		db  74h	; t
		db  79h	; y
		db    0
		db    0
		db    0
		db    0
		db    0
		db  63h	; c
		db  6Fh	; o
		db  75h	; u
		db  6Eh	; n
		db  74h	; t
		db  72h	; r
		db  79h	; y
		db    0
		db    0
		db    0
		db    0
		db    0
word_3B8EA	dw 1C2h			; DATA XREF: sub_18D60+1D2r
					; sub_1A0F4+DDFr ...
word_3B8EC	dw 0D2h			; DATA XREF: sub_1A0F4+1B2r
					; sub_23B4C:loc_24288r	...
word_3B8EE	dw 1D0h			; DATA XREF: sub_1A0F4+1BEr
					; sub_23B4C:loc_2422Aw	...
word_3B8F0	dw 50h			; DATA XREF: sub_1A0F4+1C3r
					; sub_23B4C:loc_24242r	...
byte_3B8F2	db 0			; DATA XREF: sub_12F4A:loc_1304Er
					; sub_21B7A+135r ...
byte_3B8F3	db 0			; DATA XREF: _main+44Cr sub_297FC+52w	...
byte_3B8F4	db 0			; DATA XREF: sub_223FA:loc_22456w
byte_3B8F5	db 0			; DATA XREF: sub_188A4:loc_18A31r
					; sub_1A0F4+127r ...
byte_3B8F6	db 0			; DATA XREF: sub_1D7A2:loc_1D7B6r
					; sub_1D7A2+30w ...
byte_3B8F7	db 0			; DATA XREF: sub_287C4+12Br sub_28D9Ew ...
byte_3B8F8	db 0			; DATA XREF: _main+2A3w
					; sub_21B7A:loc_21C24w	...
byte_3B8F9	db 0			; DATA XREF: sub_287C4+132r
					; sub_287C4+165r ...
byte_3B8FA	db 0			; DATA XREF: sub_19F14+38r
					; sub_1A0F4:loc_1A585r	...
byte_3B8FB	db 0			; DATA XREF: sub_11588+45w
					; sub_11588+68w ...
byte_3B8FC	db 0			; DATA XREF: sub_274B0+74r
					; sub_274B0+86r ...
		db    0
aKevin		db 'kevin',0
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
byte_3B907	db 31h			; DATA XREF: sub_1293C+B9w
					; sub_13178+33w ...
		db    0
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
byte_3B90D	db 63h			; DATA XREF: sub_11C42+3BAw
					; sub_23702+2Dw ...
byte_3B90E	db 6Fh			; DATA XREF: sub_11C42+3C1w
					; sub_23702+33w ...
byte_3B90F	db 75h			; DATA XREF: sub_11C42+3C8w
					; sub_23702+39w ...
byte_3B910	db 6Eh			; DATA XREF: sub_11C42+3CFw
					; sub_23702+3Fw ...
		db    0
aTitl		db 'TITL',0
aSkidms		db 'skidms',0
aSkidtitl	db 'skidtitl',0
aSdtitl		db 'sdtitl',0
aSdcred		db 'sdcred',0
aProd		db 'prod',0
aProd_0		db 'prod',0
aTitl_0		db 'titl',0
aCred		db 'cred',0
aArowarrwarw1ar	db 'arowarrwarw1arw2arw3arw4arw5arw6arw7arw8type',0
aCre		db 'cre',0
aGds0		db 'gds0',0
aGds1		db 'gds1',0
aDes		db 'des',0
aGdon		db 'gdon',0
aGkev		db 'gkev',0
aGbra		db 'gbra',0
aGrob		db 'grob',0
aGsta		db 'gsta',0
aMus		db 'mus',0
aGmsy		db 'gmsy',0
aGkri		db 'gkri',0
aGbri		db 'gbri',0
aPro		db 'pro',0
aGkev_0		db 'gkev',0
aOpr		db 'opr',0
aGbra_0		db 'gbra',0
aGric		db 'gric',0
aArt		db 'art',0
aGmsm		db 'gmsm',0
aGdav		db 'gdav',0
aGnic		db 'gnic',0
aGkev_1		db 'gkev',0
aSdmsel		db 'sdmsel',0
aScrn		db 'scrn',0
		db    0
		db    1
		db    2
		db    4
		db    0
		db    3
		db    0
		db    3
		db    0
		db    1
		db    4
		db    2
		db    0
		db  69h	; i
		db    0
		db  42h	; B
		db    0
		db    5
		db    0
		db 0BEh	; æ
		db    0
		db 0FFh
		db    0
		db 0D0h	; –
		db    0
		db  6Bh	; k
		db    0
		db  43h	; C
		db    0
		db 0FDh	; ˝
		db    0
		db  38h	; 8
		db    1
		db  77h	; w
		db    0
		db  4Dh	; M
		db    0
		db  72h	; r
		db    0
		db  4Ch	; L
		db    0
		db  74h	; t
		db    0
		db 0C5h	; ≈
		db    0
		db  78h	; x
		db    0
		db 0AAh	; ™
		db    0
		db  7Ah	; z
		db    0
		db 0A6h	; ¶
		db    0
		db  27h	; '
		db    0
		db  27h	; '
		db    0
		db  68h	; h
		db  73h	; s
		db  30h	; 0
		db    0
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  69h	; i
		db  74h	; t
		db    0
		db  62h	; b
		db  6Dh	; m
		db  74h	; t
		db    0
		db  62h	; b
		db  65h	; e
		db  74h	; t
		db    0
		db  62h	; b
		db  6Dh	; m
		db  6Dh	; m
		db    0
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  10h
		db    0
		db  70h	; p
		db    0
		db 0D0h	; –
		db    0
		db  70h	; p
		db    0
		db 0D0h	; –
		db    0
		db  30h	; 0
		db    1
		db 0ABh	; ´
		db    0
		db 0ABh	; ´
		db    0
		db 0ABh	; ´
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db  2Eh	; .
		db  68h	; h
		db  69h	; i
		db  67h	; g
		db    0
a______________	db '....................',0
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
a_____________0	db '...................',0
a______		db '../....',0
aHs1		db 'hs1',0
		db ' ',27h,0
		db 27h,0
aHs2		db 'hs2',0
aHs3		db 'hs3',0
aHs5		db 'hs5',0
aHs4		db 'hs4',0
		db '(',0
		db ')',0
		db ' ',0
a_hig		db '.hig',0
a_res_0		db '.res',0
aCar		db 'car*',0
		db  73h	; s
		db  64h	; d
aCsel		db 'csel',0
aMisc_0		db 'misc',0
aGrap		db 'grap',0
a150		db '150',0
a100		db '100',0
a50		db ' 50',0
a0		db '  0',0
a02040		db '0  20  40',0
aBdo_0		db 'bdo',0
aBnx_0		db 'bnx',0
aBla_0		db 'bla',0
aBau		db 'bau',0
aBma		db 'bma',0
aBco		db 'bco',0
aDes_1		db 'des',0
aStop_1		db 'stop',0
aBau_0		db 'bau',0
aBma_0		db 'bma',0
		db    0
		db    0
		db  40h	; @
		db    1
		db    0
		db    0
		db  5Fh	; _
		db    0
word_3BB28	dw 0E5h			; DATA XREF: sub_11C42+536r
					; sub_11C42+575r ...
		db 0E5h	; Â
		db    0
		db 0E5h	; Â
		db    0
		db 0E5h	; Â
		db    0
		db 0E5h	; Â
		db    0
word_3BB32	dw 13Ch			; DATA XREF: sub_11C42+8B8r
		db  3Ch	; <
		db    1
		db  3Ch	; <
		db    1
		db  3Ch	; <
		db    1
		db  3Ch	; <
		db    1
word_3BB3C	dw 6Bh			; DATA XREF: sub_11C42+531r
					; sub_11C42+8B4r
word_3BB3E	dw 7Dh			; DATA XREF: sub_11C42+570r
word_3BB40	dw 8Fh			; DATA XREF: sub_11C42+5AFr
word_3BB42	dw 0A1h			; DATA XREF: sub_11C42+615r
					; sub_11C42+C6Br ...
word_3BB44	dw 0B3h			; DATA XREF: sub_11C42+642r
		db  7Ch	; |
		db    0
		db  8Eh	; é
		db    0
		db 0A0h	; †
		db    0
		db 0B2h	; ≤
		db    0
word_3BB4E	dw 0C4h			; DATA XREF: sub_11C42+8AFr
aLnam		db 'lnam',0
		db    0
		db    0
		db    0
word_3BB58	dw 140h			; DATA XREF: sub_11C42:loc_11EABw
					; sub_11C42:loc_11F4Aw
		db    0
		db    0
word_3BB5C	dw 0			; DATA XREF: sub_11C42+85Bw
					; sub_11C42:loc_124A6w
		db    0
		db    0
word_3BB60	dw 0FCB8h		; DATA XREF: sub_11C42+7E5r
word_3BB62	dw 0B40h		; DATA XREF: sub_11C42:loc_12423r
aMisc		db 'misc',0
aSdosel		db 'sdosel',0
aOpp0opp1opp2op	db 'opp0opp1opp2opp3opp4opp5opp6',0
aScrn_0		db 'scrn',0
aBla		db 'bla',0
aBnx		db 'bnx',0
aBcl		db 'bcl',0
aBca		db 'bca',0
aBdo		db 'bdo',0
aClip		db 'clip',0
aDes_0		db 'des',0
aRac		db 'rac',0
		db    0
		db  14h
		db    0
		db  4Ch	; L
		db    0
		db  84h	; Ñ
		db    0
		db 0BCh	; º
		db    0
		db 0F4h	; Ù
		db    0
		db  4Ch	; L
		db    0
		db  84h	; Ñ
		db    0
		db 0BCh	; º
		db    0
		db 0F4h	; Ù
		db    0
		db  2Ch	; ,
		db    1
word_3BBC8	dw 0B1h			; DATA XREF: sub_1293C+165r
					; sub_1293C+1A3r ...
		db 0B1h	; ±
		db    0
		db 0B1h	; ±
		db    0
		db 0B1h	; ±
		db    0
		db 0B1h	; ±
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db  6Dh	; m
		db  69h	; i
		db  73h	; s
		db  63h	; c
		db    0
		db  67h	; g
		db  73h	; s
		db  74h	; t
		db  75h	; u
		db    0
		db  67h	; g
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db    0
		db  6Dh	; m
		db  6Fh	; o
		db  70h	; p
		db    0
		db  6Dh	; m
		db  69h	; i
		db  64h	; d
		db    0
		db  72h	; r
		db  65h	; e
		db  70h	; p
		db    0
		db  2Eh	; .
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db    0
		db  6Dh	; m
		db  69h	; i
		db  73h	; s
		db  63h	; c
		db    0
		db  65h	; e
		db  6Ch	; l
		db  74h	; t
		db    0
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db    0
		db  70h	; p
		db  70h	; p
		db  74h	; t
		db    0
		db  64h	; d
		db  6Eh	; n
		db  66h	; f
		db    0
		db  6Fh	; o
		db  6Ch	; l
		db  74h	; t
		db    0
		db  64h	; d
		db  6Eh	; n
		db  66h	; f
		db    0
		db  6Fh	; o
		db  77h	; w
		db  74h	; t
		db    0
		db  6Fh	; o
		db  6Ch	; l
		db  74h	; t
		db    0
		db  56h	; V
		db  49h	; I
		db  43h	; C
		db  54h	; T
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  6Dh	; m
		db  73h	; s
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  76h	; v
		db  69h	; i
		db  63h	; c
		db  74h	; t
		db    0
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  6Dh	; m
		db  73h	; s
		db    0
		db  73h	; s
		db  6Bh	; k
		db  69h	; i
		db  64h	; d
		db  6Fh	; o
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db    0
		db  61h	; a
		db  76h	; v
		db  73h	; s
		db    0
		db  6Dh	; m
		db  70h	; p
		db  68h	; h
		db    0
		db  69h	; i
		db  6Dh	; m
		db  70h	; p
		db    0
		db  6Dh	; m
		db  70h	; p
		db  68h	; h
		db    0
		db  74h	; t
		db  6Fh	; o
		db  70h	; p
		db    0
		db  6Dh	; m
		db  70h	; p
		db  68h	; h
		db    0
		db  6Ah	; j
		db  75h	; u
		db  6Dh	; m
		db    0
		db  77h	; w
		db  69h	; i
		db  6Eh	; n
		db  6Eh	; n
		db    0
		db  6Ch	; l
		db  6Fh	; o
		db  73h	; s
		db  65h	; e
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  69h	; i
		db  68h	; h
		db  64h	; d
		db    0
		db  64h	; d
		db  34h	; 4
		db  61h	; a
		db    0
		db  62h	; b
		db  63h	; c
		db  74h	; t
		db    0
		db  69h	; i
		db  6Eh	; n
		db  68h	; h
		db    0
		db  69h	; i
		db  6Eh	; n
		db  68h	; h
		db    0
		db  68h	; h
		db  6Eh	; n
		db  61h	; a
		db    0
		db  62h	; b
		db  65h	; e
		db  76h	; v
		db    0
		db  62h	; b
		db  68h	; h
		db  69h	; i
		db    0
		db  62h	; b
		db  72h	; r
		db  70h	; p
		db    0
		db  62h	; b
		db  72h	; r
		db  61h	; a
		db    0
		db  62h	; b
		db  64h	; d
		db  72h	; r
		db    0
		db  62h	; b
		db  6Dh	; m
		db  6Dh	; m
		db    0
		db    2
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    4
		db    0
		db    1
		db    0
		db    4
		db    0
		db    0
		db    0
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db    5
		db    0
		db    6
		db    0
		db    5
		db    0
		db    1
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    0
		db    0
		db    6
		db    0
		db    2
		db    0
		db    3
		db    0
		db    4
		db    0
		db    4
		db    0
		db    0
		db    0
		db    6
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    0
		db    0
		db    3
		db    0
		db    2
		db    0
word_3BCEC	dw 4			; DATA XREF: sub_13178+ECFr
word_3BCEE	dw 54h			; DATA XREF: sub_13178+EFFr
word_3BCF0	dw 0A4h			; DATA XREF: sub_13178+F63r
word_3BCF2	dw 0F4h			; DATA XREF: sub_13178+F94r
		db  80h	; Ä
		db    0
		db  4Bh	; K
		db    0
		db  9Bh	; õ
		db    0
		db 0EBh	; Î
		db    0
		db  3Bh	; ;
		db    1
		db 0C7h	; «
		db    0
word_3BD00	dw 0AEh			; DATA XREF: sub_13178+D84r
					; sub_13178+102Ar
		db 0AEh	; Æ
		db    0
		db 0AEh	; Æ
		db    0
		db 0AEh	; Æ
		db    0
		db 0AEh	; Æ
		db    0
word_3BD0A	dw 0C5h			; DATA XREF: sub_13178+D7Fr
					; sub_13178+1025r
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db 0C5h	; ≈
		db    0
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
byte_3BD17	db 32h			; DATA XREF: sub_13178+6DEw
		db  77h	; w
		db  69h	; i
		db  6Eh	; n
		db    0
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
byte_3BD1F	db 32h			; DATA XREF: sub_13178+743w
aLose		db 'lose',0
		db    0
		db  6Fh	; o
		db  70h	; p
		db  30h	; 0
byte_3BD29	db 31h			; DATA XREF: sub_13178:loc_13A4Bw
					; sub_13178+958w ...
		db    0
		db  6Dh	; m
		db  69h	; i
		db  73h	; s
		db  63h	; c
		db    0
		db  63h	; c
		db  6Fh	; o
		db  70h	; p
		db    0
		db  30h	; 0
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  61h	; a
		db  62h	; b
		db  63h	; c
		db  64h	; d
		db  65h	; e
		db  66h	; f
		db  67h	; g
		db  68h	; h
		db  69h	; i
		db  6Ah	; j
		db    0
		db    0
		db  71h	; q
		db  30h	; 0
byte_3BD4C	db 30h			; DATA XREF: sub_144CF+Fw
		db    0
		db  61h	; a
		db  30h	; 0
byte_3BD50	db 30h			; DATA XREF: sub_144CF+16w
		db    0
		db  0Ah
		db    0
		db  32h	; 2
		db    0
		db  0Ah
		db    0
		db  14h
		db    0
		db    5
		db    0
		db  28h	; (
		db    0
		db    5
		db    0
		db  0Ah
		db    0
		db    6
		db    0
		db  79h	; y
		db    0
		db    6
		db    0
		db    9
		db    0
		db    1
		db    0
		db  0Ah
		db    0
		db    1
		db    0
		db  0Ah
		db    0
		db  15h
		db    0
		db  15h
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db    0
		db    8
		db 0F8h	; ¯
		db    0
		db    0
		db    7
		db 0F9h	; ˘
		db    0
		db    0
		db    6
		db 0FAh	; ˙
		db    0
		db    0
		db    5
		db 0FBh	; ˚
		db    0
		db    0
		db    4
		db 0FCh	; ¸
		db    0
		db    0
		db    4
		db 0FCh	; ¸
		db    0
		db    0
		db    3
		db 0FDh	; ˝
		db    0
		db    0
		db    3
		db 0FDh	; ˝
		db    0
		db    0
		db    2
		db 0FEh	; ˛
		db    0
		db    0
		db    2
		db 0FEh	; ˛
		db    0
		db    0
		db    2
		db 0FEh	; ˛
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db  10h
		db 0F0h	; 
		db    0
		db    0
		db  0Eh
		db 0F2h	; Ú
		db    0
		db    0
		db  0Ch
		db 0F4h	; Ù
		db    0
		db    0
		db  0Ah
		db 0F6h	; ˆ
		db    0
		db    0
		db    8
		db 0F8h	; ¯
		db    0
		db    0
		db    8
		db 0F8h	; ¯
		db    0
		db    0
		db    6
		db 0FAh	; ˙
		db    0
		db    0
		db    6
		db 0FAh	; ˙
		db    0
		db    0
		db    4
		db 0FCh	; ¸
		db    0
		db    0
		db    4
		db 0FCh	; ¸
		db    0
		db    0
		db    4
		db 0FCh	; ¸
		db    0
		db    0
		db    2
		db 0FEh	; ˛
		db    0
		db    0
		db    2
		db 0FEh	; ˛
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db    1
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  40h	; @
		db    0
byte_3BE02	db 0FFh			; DATA XREF: sub_188A4:loc_18925r
					; sub_188A4+42Bw
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
word_3BE14	dw 270Fh		; DATA XREF: sub_19794+135r
					; sub_19794+153w
word_3BE16	dw 270Fh		; DATA XREF: sub_19794+B7r
					; sub_19794+CEw
aSimd		db 'simd',0
aGnam		db 'gnam',0
aSimd_0		db 'simd',0
aGsna		db 'gsna',0
dword_3BE2C	dd 0			; DATA XREF: sub_19EE8+Bw sub_19EE8+7w
word_3BE30	dw 0			; DATA XREF: seg002:0115w
word_3BE32	dw 0			; DATA XREF: seg002:011Bw
		db  1Eh
		db    0
		db 0C8h	; »
		db    0
		db  40h	; @
		db    1
		db  90h	; ê
		db    1
		db  12h
		db    2
		db 0BCh	; º
		db    2
		db  70h	; p
		db    3
		db 0C0h	; ¿
		db    3
		db  6Ch	; l
		db  7Ah	; z
		db  56h	; V
		db  7Ah	; z
		db  40h	; @
		db  7Ah	; z
		db  6Ch	; l
		db  7Ah	; z
		db  56h	; V
		db  7Ah	; z
		db  40h	; @
		db  7Ah	; z
		db  6Ch	; l
		db  7Ah	; z
		db  56h	; V
		db  7Ah	; z
		db 0FEh	; ˛
		db 0FCh	; ¸
		db    2
		db 0FFh
		db 0FCh	; ¸
		db    2
		db    0
		db 0FCh	; ¸
		db    2
		db    1
		db 0FCh	; ¸
		db    2
		db    2
		db 0FCh	; ¸
		db    2
		db 0FEh	; ˛
		db 0FDh	; ˝
		db    1
		db 0FFh
		db 0FDh	; ˝
		db    1
		db    0
		db 0FDh	; ˝
		db    1
		db    1
		db 0FDh	; ˝
		db    1
		db    2
		db 0FDh	; ˝
		db    1
		db 0FEh	; ˛
		db 0FEh	; ˛
		db    1
		db 0FFh
		db 0FEh	; ˛
		db    0
		db    0
		db 0FEh	; ˛
		db    0
		db    1
		db 0FEh	; ˛
		db    0
		db    2
		db 0FEh	; ˛
		db    1
		db 0FEh	; ˛
		db 0FFh
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0FFh
		db    0
		db    1
		db 0FFh
		db    0
		db    2
		db 0FFh
		db    0
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0FCh	; ¸
		db    2
		db    1
		db 0FCh	; ¸
		db    2
		db    0
		db 0FCh	; ¸
		db    2
		db 0FFh
		db 0FCh	; ¸
		db    2
		db 0FEh	; ˛
		db 0FCh	; ¸
		db    2
		db    2
		db 0FDh	; ˝
		db    1
		db    1
		db 0FDh	; ˝
		db    1
		db    0
		db 0FDh	; ˝
		db    1
		db 0FFh
		db 0FDh	; ˝
		db    1
		db 0FEh	; ˛
		db 0FDh	; ˝
		db    1
		db    2
		db 0FEh	; ˛
		db    1
		db    1
		db 0FEh	; ˛
		db    0
		db    0
		db 0FEh	; ˛
		db    0
		db 0FFh
		db 0FEh	; ˛
		db    0
		db 0FEh	; ˛
		db 0FEh	; ˛
		db    1
		db    2
		db 0FFh
		db    0
		db    1
		db 0FFh
		db    0
		db    0
		db 0FFh
		db    0
		db 0FFh
		db 0FFh
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    1
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db 0FEh	; ˛
		db    2
		db    4
		db 0FFh
		db    2
		db    4
		db    0
		db    2
		db    4
		db    1
		db    2
		db    4
		db    2
		db    2
		db    3
		db 0FEh	; ˛
		db    1
		db    3
		db 0FFh
		db    1
		db    3
		db    0
		db    1
		db    3
		db    1
		db    1
		db    3
		db    2
		db    1
		db    2
		db 0FEh	; ˛
		db    1
		db    2
		db 0FFh
		db    0
		db    2
		db    0
		db    0
		db    2
		db    1
		db    0
		db    2
		db    2
		db    1
		db    1
		db 0FEh	; ˛
		db    0
		db    1
		db 0FFh
		db    0
		db    1
		db    0
		db    0
		db    1
		db    1
		db    0
		db    2
		db    2
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    2
		db    2
		db    4
		db    1
		db    2
		db    4
		db    0
		db    2
		db    4
		db 0FFh
		db    2
		db    4
		db 0FEh	; ˛
		db    2
		db    3
		db    2
		db    1
		db    3
		db    1
		db    1
		db    3
		db    0
		db    1
		db    3
		db 0FFh
		db    1
		db    3
		db 0FEh	; ˛
		db    1
		db    2
		db    2
		db    1
		db    2
		db    1
		db    0
		db    2
		db    0
		db    0
		db    2
		db 0FFh
		db    0
		db    2
		db 0FEh	; ˛
		db    1
		db    1
		db    2
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db    0
		db    1
		db 0FFh
		db    0
		db    1
		db 0FEh	; ˛
		db    0
		db    0
		db    1
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    4
		db    2
		db    1
		db    4
		db    2
		db    0
		db    4
		db    2
		db 0FFh
		db    4
		db    2
		db 0FEh	; ˛
		db    4
		db    2
		db    2
		db    3
		db    1
		db    1
		db    3
		db    1
		db    0
		db    3
		db    1
		db 0FFh
		db    3
		db    1
		db 0FEh	; ˛
		db    3
		db    1
		db    2
		db    2
		db    0
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db 0FFh
		db    2
		db    0
		db 0FEh	; ˛
		db    2
		db    1
		db    2
		db    1
		db    0
		db    1
		db    1
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    1
		db    0
		db 0FEh	; ˛
		db    1
		db    0
		db    1
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db    4
		db    2
		db 0FFh
		db    4
		db    2
		db    0
		db    4
		db    2
		db    1
		db    4
		db    2
		db    2
		db    4
		db    2
		db 0FEh	; ˛
		db    3
		db    1
		db 0FFh
		db    3
		db    1
		db    0
		db    3
		db    1
		db    1
		db    3
		db    1
		db    2
		db    3
		db    1
		db 0FEh	; ˛
		db    2
		db    1
		db 0FFh
		db    2
		db    0
		db    0
		db    2
		db    0
		db    1
		db    2
		db    0
		db    2
		db    2
		db    1
		db 0FEh	; ˛
		db    1
		db    0
		db 0FFh
		db    1
		db    0
		db    0
		db    1
		db    0
		db    1
		db    1
		db    0
		db    2
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db    2
		db    2
		db 0FCh	; ¸
		db    1
		db    2
		db 0FCh	; ¸
		db    0
		db    2
		db 0FCh	; ¸
		db 0FFh
		db    2
		db 0FCh	; ¸
		db 0FEh	; ˛
		db    2
		db 0FDh	; ˝
		db    2
		db    1
		db 0FDh	; ˝
		db    1
		db    1
		db 0FDh	; ˝
		db    0
		db    1
		db 0FDh	; ˝
		db 0FFh
		db    1
		db 0FDh	; ˝
		db 0FEh	; ˛
		db    1
		db 0FEh	; ˛
		db    2
		db    1
		db 0FEh	; ˛
		db    1
		db    0
		db 0FEh	; ˛
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db 0FEh	; ˛
		db 0FEh	; ˛
		db    1
		db 0FFh
		db    2
		db    0
		db 0FFh
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db 0FFh
		db 0FFh
		db    0
		db 0FFh
		db 0FEh	; ˛
		db    0
		db    0
		db    1
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FEh	; ˛
		db    2
		db 0FCh	; ¸
		db 0FFh
		db    2
		db 0FCh	; ¸
		db    0
		db    2
		db 0FCh	; ¸
		db    1
		db    2
		db 0FCh	; ¸
		db    2
		db    2
		db 0FDh	; ˝
		db 0FEh	; ˛
		db    1
		db 0FDh	; ˝
		db 0FFh
		db    1
		db 0FDh	; ˝
		db    0
		db    1
		db 0FDh	; ˝
		db    1
		db    1
		db 0FDh	; ˝
		db    2
		db    1
		db 0FEh	; ˛
		db 0FEh	; ˛
		db    1
		db 0FEh	; ˛
		db 0FFh
		db    0
		db 0FEh	; ˛
		db    0
		db    0
		db 0FEh	; ˛
		db    1
		db    0
		db 0FEh	; ˛
		db    2
		db    1
		db 0FFh
		db 0FEh	; ˛
		db    0
		db 0FFh
		db 0FFh
		db    0
		db 0FFh
		db    0
		db    0
		db 0FFh
		db    1
		db    0
		db 0FFh
		db    2
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Ah	; *
		db    7
		db  70h	; p
		db    7
		db 0B6h	; ∂
		db    7
		db 0FCh	; ¸
		db    7
		db  42h	; B
		db    8
		db  88h	; à
		db    8
		db 0CEh	; Œ
		db    8
		db 0E4h	; ‰
		db    6
		db    0
		db    0
		db  40h	; @
		db    1
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    2
		db    2
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db    0
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db    0
		db    2
		db    0
		db 0FEh	; ˛
		db    0
		db 0FEh	; ˛
		db    0
		db    2
		db    0
		db    2
		db    0
		db    2
		db    0
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    1
		db    1
		db    2
		db    2
		db    2
		db    2
		db    3
		db    3
		db    3
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    2
		db    0
		db    2
		db    0
		db    3
		db    0
		db    3
		db 0D6h	; ÷
		db 0D7h	; ◊
		db 0D6h	; ÷
		db 0D7h	; ◊
		db 0D6h	; ÷
		db 0D7h	; ◊
		db 0D6h	; ÷
		db 0D7h	; ◊
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    1
		db    1
		db    1
		db  80h	; Ä
		db    0
		db  80h	; Ä
		db    1
		db  80h	; Ä
		db    2
		db  80h	; Ä
		db    3
word_3C108	dw 3C00h		; DATA XREF: sub_1CBDC+13r
					; sub_1CBDC+1A8r ...
word_3C10A	dw 4EE8h		; DATA XREF: sub_1CBDC+27r
					; sub_1CBDC+1B3r ...
word_3C10C	dw 0F510h		; DATA XREF: sub_1CBDC+Br
					; sub_1CBDC+1C8r ...
word_3C10E	dw 3C00h		; DATA XREF: sub_1CBDC+10r
word_3C110	dw 0AF0h		; DATA XREF: sub_1CBDC+24r
word_3C112	dw 2AD0h		; DATA XREF: sub_1CBDC+8r
		db    0
		db    0
		db  8Ch	; å
		db 0D8h	; ÿ
		db  78h	; x
		db  41h	; A
		db    0
		db    0
		db  40h	; @
		db    1
		db    0
		db    0
		db 0C8h	; »
		db    0
		db  64h	; d
		db  6Dh	; m
		db  31h	; 1
		db    0
		db  64h	; d
		db  6Dh	; m
		db  32h	; 2
		db    0
		db  70h	; p
		db  72h	; r
		db  65h	; e
		db    0
		db  73h	; s
		db  65h	; e
		db  31h	; 1
		db    0
		db  73h	; s
		db  65h	; e
		db  32h	; 2
		db    0
		db  77h	; w
		db  77h	; w
		db  77h	; w
		db    0
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
		db    0
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
		db    0
		db  70h	; p
		db  65h	; e
		db  6Eh	; n
		db    0
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db    0
		db  94h	; î
		db    0
		db 0ACh	; ¨
		db    0
		db  5Dh	; ]
		db    0
		db  6Ch	; l
		db    0
		db  44h	; D
		db    0
		db  5Ch	; \
		db    0
		db  71h	; q
		db    0
		db  80h	; Ä
		db    0
		db 0E4h	; ‰
		db    0
		db 0FCh	; ¸
		db    0
		db  71h	; q
		db    0
		db  80h	; Ä
		db    0
		db  63h	; c
		db  72h	; r
		db  61h	; a
		db  6Bh	; k
		db    0
		db  63h	; c
		db  69h	; i
		db  6Eh	; n
		db  66h	; f
		db    0
		db  73h	; s
		db  63h	; c
		db  65h	; e
		db  6Eh	; n
		db  73h	; s
		db  63h	; c
		db  65h	; e
		db  32h	; 2
		db  73h	; s
		db  63h	; c
		db  65h	; e
		db  33h	; 3
		db  73h	; s
		db  63h	; c
		db  65h	; e
		db  34h	; 4
		db    0
		db  73h	; s
		db  64h	; d
		db  67h	; g
		db  61h	; a
		db  6Dh	; m
		db  65h	; e
		db  32h	; 2
		db    0
		db  65h	; e
		db  78h	; x
		db  30h	; 0
		db  31h	; 1
		db  65h	; e
		db  78h	; x
		db  30h	; 0
		db  32h	; 2
		db  65h	; e
		db  78h	; x
		db  30h	; 0
		db  33h	; 3
		db  6Ch	; l
		db  65h	; e
		db  66h	; f
		db  74h	; t
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db    0
		db  74h	; t
		db  69h	; i
		db  74h	; t
		db  6Ch	; l
		db  65h	; e
		db    0
		db  6Ch	; l
		db  6Fh	; o
		db  67h	; g
		db  6Fh	; o
		db  6Ch	; l
		db  6Fh	; o
		db  67h	; g
		db  32h	; 2
		db  62h	; b
		db  72h	; r
		db  61h	; a
		db  76h	; v
		db    0
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  63h	; c
		db  6Fh	; o
		db  75h	; u
		db  6Eh	; n
		db    0
word_3C1B6	dw 0			; DATA XREF: sub_1DEA6+1D2r
					; sub_1DEA6+1F5r
word_3C1B8	dw 140h			; DATA XREF: sub_1DEA6+1CEr
					; sub_1DEA6+1F1r
word_3C1BA	dw 0			; DATA XREF: sub_1DEA6+1CAr
					; sub_1DEA6+1EDr
word_3C1BC	dw 0C8h			; DATA XREF: sub_1DEA6:loc_1E06Cr
					; sub_1DEA6:loc_1E08Fr
word_3C1BE	dw 1			; DATA XREF: sub_1DEA6+25Er
					; sub_1DEA6:loc_1E144w	...
aBarn		db 'barn',0
aZbrn		db 'zbrn',0
aBrid		db 'brid',0
aZbri		db 'zbri',0
aBtur		db 'btur',0
aZbtu		db 'zbtu',0
aChi1		db 'chi1',0
aZch1		db 'zch1',0
aChi2		db 'chi2',0
aZch2		db 'zch2',0
aElrd		db 'elrd',0
aZelr		db 'zelr',0
aFini		db 'fini',0
aZfin		db 'zfin',0
aGass		db 'gass',0
aZgas		db 'zgas',0
aLban		db 'lban',0
aZlba		db 'zlba',0
aLoop		db 'loop',0
aZloo		db 'zloo',0
aOffi		db 'offi',0
aZoff		db 'zoff',0
aPipe		db 'pipe',0
aZpip		db 'zpip',0
aRamp		db 'ramp',0
aZram		db 'zram',0
aRban		db 'rban',0
aZrba		db 'zrba',0
aRdup		db 'rdup',0
aZrdu		db 'zrdu',0
aRoad		db 'road',0
aZroa		db 'zroa',0
aStur		db 'stur',0
aZstu		db 'zstu',0
aTenn		db 'tenn',0
aZten		db 'zten',0
aTunn		db 'tunn',0
aZtun		db 'ztun',0
aTurn		db 'turn',0
aZtur		db 'ztur',0
aGoui		db 'goui',0
aGouo		db 'gouo',0
aGoup		db 'goup',0
aHigh		db 'high',0
aLakc		db 'lakc',0
aLake		db 'lake',0
aCld1		db 'cld1',0
aCld2		db 'cld2',0
aCld3		db 'cld3',0
aSigl		db 'sigl',0
aSigr		db 'sigr',0
aTree		db 'tree',0
aInte		db 'inte',0
aZint		db 'zint',0
aOffl		db 'offl',0
aZofl		db 'zofl',0
aOffr		db 'offr',0
aZofr		db 'zofr',0
aPalm		db 'palm',0
aZpal		db 'zpal',0
aBank		db 'bank',0
aZban		db 'zban',0
aSofl		db 'sofl',0
aZsol		db 'zsol',0
aSofr		db 'sofr',0
aZsor		db 'zsor',0
aSram		db 'sram',0
aZsra		db 'zsra',0
aSelr		db 'selr',0
aZser		db 'zser',0
aElsp		db 'elsp',0
aZesp		db 'zesp',0
aCact		db 'cact',0
aCact_0		db 'cact',0
aSpip		db 'spip',0
aZspi		db 'zspi',0
aSest		db 'sest',0
aZses		db 'zses',0
aWroa		db 'wroa',0
aZwro		db 'zwro',0
aBarr		db 'barr',0
aZbar		db 'zbar',0
aLco0		db 'lco0',0
aZlco		db 'zlco',0
aRco0		db 'rco0',0
aZrco		db 'zrco',0
aGwro		db 'gwro',0
aZgwr		db 'zgwr',0
aLco1		db 'lco1',0
aRco1		db 'rco1',0
aLoo1		db 'loo1',0
aHig1		db 'hig1',0
aHig2		db 'hig2',0
aHig3		db 'hig3',0
aWind		db 'wind',0
aZwin		db 'zwin',0
aBoat		db 'boat',0
aZboa		db 'zboa',0
aRest		db 'rest',0
aZres		db 'zres',0
aHpip		db 'hpip',0
aZhpi		db 'zhpi',0
aVcor		db 'vcor',0
aZvco		db 'zvco',0
aTun2		db 'tun2',0
aPip2		db 'pip2',0
aFenc		db 'fenc',0
aZfen		db 'zfen',0
aCfen		db 'cfen',0
aZcfe		db 'zcfe',0
aFlag		db 'flag',0
aTruk		db 'truk',0
aExp0		db 'exp0',0
aExp1		db 'exp1',0
aExp2		db 'exp2',0
aExp3		db 'exp3',0
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db 0C8h	; »
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  80h	; Ä
		db    0
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  80h	; Ä
		db    0
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db 0C8h	; »
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0A5h	; •
		db    0
		db    0
		db    0
		db 0ACh	; ¨
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  54h	; T
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db 0ACh	; ¨
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  54h	; T
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  73h	; s
		db    0
		db 0B4h	; ¥
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db 0ACh	; ¨
		db 0FFh
		db  23h	; #
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db 0ACh	; ¨
		db 0FFh
		db  23h	; #
		db    0
		db  4Eh	; N
		db    1
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db  4Eh	; N
		db    1
		db  73h	; s
		db    0
		db 0B4h	; ¥
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db    1
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FDh	; ˝
		db  78h	; x
		db    2
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FDh	; ˝
		db  88h	; à
		db    1
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  78h	; x
		db    2
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  88h	; à
		db    1
		db 0FFh
		db 0FFh
		db  9Ch	; ú
		db    2
		db  78h	; x
		db    2
		db 0FFh
		db 0FFh
		db  9Ch	; ú
		db    2
		db  2Ch	; ,
		db    1
		db    0
		db    0
		db 0C8h	; »
		db    0
		db 0C8h	; »
		db    2
		db    0
		db    0
		db  64h	; d
		db 0FDh	; ˝
		db 0C8h	; »
		db 0FEh	; ˛
		db    0
		db    0
		db  9Ch	; ú
		db    2
		db  88h	; à
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FDh	; ˝
		db  78h	; x
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FDh	; ˝
		db  88h	; à
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  78h	; x
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  88h	; à
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  9Ch	; ú
		db    2
		db  78h	; x
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  9Ch	; ú
		db    2
		db 0D4h	; ‘
		db 0FEh	; ˛
		db    0
		db    0
		db 0C8h	; »
		db    0
		db 0C8h	; »
		db 0FEh	; ˛
		db    0
		db    0
		db  64h	; d
		db 0FDh	; ˝
		db  38h	; 8
		db 0FDh	; ˝
		db    0
		db    0
		db  9Ch	; ú
		db    2
		db  7Bh	; {
		db 0FFh
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FEh	; ˛
		db  63h	; c
		db    0
		db 0FFh
		db 0FFh
		db 0A1h	; °
		db 0FEh	; ˛
		db  54h	; T
		db 0FFh
		db 0FFh
		db 0FFh
		db 0C3h	; √
		db 0FEh	; ˛
		db  24h	; $
		db    0
		db 0FFh
		db 0FFh
		db  3Bh	; ;
		db 0FFh
		db  15h
		db 0FFh
		db 0FFh
		db 0FFh
		db  15h
		db 0FFh
		db 0BFh	; ø
		db 0FFh
		db 0FFh
		db 0FFh
		db 0BFh	; ø
		db 0FFh
		db 0C5h	; ≈
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  53h	; S
		db 0FFh
		db  3Eh	; >
		db 0FFh
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db  66h	; f
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FFh
		db 0A5h	; •
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  62h	; b
		db    0
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db 0C8h	; »
		db    0
		db  9Dh	; ù
		db 0FFh
		db 0FFh
		db 0FFh
		db 0A1h	; °
		db 0FEh	; ˛
		db  85h	; Ö
		db    0
		db 0FFh
		db 0FFh
		db  64h	; d
		db 0FEh	; ˛
		db 0DCh	; ‹
		db 0FFh
		db 0FFh
		db 0FFh
		db  3Bh	; ;
		db 0FFh
		db 0ACh	; ¨
		db    0
		db 0FFh
		db 0FFh
		db 0C3h	; √
		db 0FEh	; ˛
		db  41h	; A
		db    0
		db 0FFh
		db 0FFh
		db 0BFh	; ø
		db 0FFh
		db 0EBh	; Î
		db    0
		db 0FFh
		db 0FFh
		db  15h
		db 0FFh
		db 0C2h	; ¬
		db    0
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db  3Bh	; ;
		db    1
		db 0FFh
		db 0FFh
		db  53h	; S
		db 0FFh
		db  5Bh	; [
		db    1
		db 0FFh
		db 0FFh
		db  62h	; b
		db    0
		db  9Ah	; ö
		db    1
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FFh
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db  83h	; É
		db    1
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FCh	; ¸
		db  72h	; r
		db    2
		db 0FFh
		db 0FFh
		db  8Eh	; é
		db 0FCh	; ¸
		db  73h	; s
		db    1
		db 0FFh
		db 0FFh
		db 0F2h	; Ú
		db 0FCh	; ¸
		db  60h	; `
		db    2
		db 0FFh
		db 0FFh
		db  1Bh
		db 0FDh	; ˝
		db  59h	; Y
		db    1
		db 0FFh
		db 0FFh
		db  69h	; i
		db 0FDh	; ˝
		db  41h	; A
		db    2
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db  35h	; 5
		db    1
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FDh	; ˝
		db  17h
		db    2
		db 0FFh
		db 0FFh
		db  2Eh	; .
		db 0FEh	; ˛
		db    4
		db    1
		db 0FFh
		db 0FFh
		db  56h	; V
		db 0FEh	; ˛
		db 0DDh	; ›
		db    1
		db 0FFh
		db 0FFh
		db 0BBh	; ª
		db 0FEh	; ˛
		db 0CCh	; Ã
		db    0
		db 0FFh
		db 0FFh
		db 0C1h	; ¡
		db 0FEh	; ˛
		db  9Ch	; ú
		db    1
		db 0FFh
		db 0FFh
		db  39h	; 9
		db 0FFh
		db  8Bh	; ã
		db    0
		db 0FFh
		db 0FFh
		db  28h	; (
		db 0FFh
		db  50h	; P
		db    1
		db 0FFh
		db 0FFh
		db 0B1h	; ±
		db 0FFh
		db  41h	; A
		db    0
		db 0FFh
		db 0FFh
		db  89h	; â
		db 0FFh
		db 0FAh	; ˙
		db    0
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db 0E9h	; È
		db 0FFh
		db 0FFh
		db 0FFh
		db 0E9h	; È
		db 0FFh
		db  93h	; ì
		db    0
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    0
		db  90h	; ê
		db 0FFh
		db 0FFh
		db 0FFh
		db  3Ch	; <
		db    0
		db  2Ah	; *
		db    0
		db 0FFh
		db 0FFh
		db 0F3h	; Û
		db    0
		db  2Fh	; /
		db 0FFh
		db 0FFh
		db 0FFh
		db  86h	; Ü
		db    0
		db 0BAh	; ∫
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Ah	; J
		db    1
		db 0C9h	; …
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0C7h	; «
		db    0
		db  42h	; B
		db 0FFh
		db 0FFh
		db 0FFh
		db  97h	; ó
		db    1
		db  5Dh	; ]
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db    0
		db    1
		db 0C4h	; ƒ
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0D9h	; Ÿ
		db    1
		db 0E5h	; Â
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  32h	; 2
		db    1
		db  37h	; 7
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  14h
		db    2
		db  71h	; q
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  57h	; W
		db    1
		db 0B0h	; ∞
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  3Fh	; ?
		db    2
		db 0FBh	; ˚
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  72h	; r
		db    1
		db  25h	; %
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  5Eh	; ^
		db    2
		db  82h	; Ç
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    1
		db  98h	; ò
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  71h	; q
		db    2
		db  2Ch	; ,
		db    1
		db    0
		db    0
		db 0C8h	; »
		db    0
		db  8Eh	; é
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  8Eh	; é
		db 0FCh	; ¸
		db  7Dh	; }
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FCh	; ¸
		db 0A0h	; †
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  1Bh
		db 0FDh	; ˝
		db  8Dh	; ç
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0F2h	; Ú
		db 0FCh	; ¸
		db 0BFh	; ø
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db 0A7h	; ß
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  69h	; i
		db 0FDh	; ˝
		db 0E9h	; È
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  2Eh	; .
		db 0FEh	; ˛
		db 0CBh	; À
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FDh	; ˝
		db  23h	; #
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0BBh	; ª
		db 0FEh	; ˛
		db 0FCh	; ¸
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  56h	; V
		db 0FEh	; ˛
		db  64h	; d
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  39h	; 9
		db 0FFh
		db  34h	; 4
		db 0FFh
		db 0FFh
		db 0FFh
		db 0C1h	; ¡
		db 0FEh	; ˛
		db 0B0h	; ∞
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0B1h	; ±
		db 0FFh
		db  75h	; u
		db 0FFh
		db 0FFh
		db 0FFh
		db  28h	; (
		db 0FFh
		db    6
		db 0FFh
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db 0BFh	; ø
		db 0FFh
		db 0FFh
		db 0FFh
		db  89h	; â
		db 0FFh
		db  6Dh	; m
		db 0FFh
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    0
		db  17h
		db    0
		db 0FFh
		db 0FFh
		db 0E9h	; È
		db 0FFh
		db 0D6h	; ÷
		db 0FFh
		db 0FFh
		db 0FFh
		db 0F3h	; Û
		db    0
		db  70h	; p
		db    0
		db 0FFh
		db 0FFh
		db  3Ch	; <
		db    0
		db  46h	; F
		db    0
		db 0FFh
		db 0FFh
		db  4Ah	; J
		db    1
		db 0D1h	; —
		db    0
		db 0FFh
		db 0FFh
		db  86h	; Ü
		db    0
		db 0BEh	; æ
		db    0
		db 0FFh
		db 0FFh
		db  97h	; ó
		db    1
		db  37h	; 7
		db    1
		db 0FFh
		db 0FFh
		db 0C7h	; «
		db    0
		db  3Ch	; <
		db    1
		db 0FFh
		db 0FFh
		db 0D9h	; Ÿ
		db    1
		db 0A3h	; £
		db    1
		db 0FFh
		db 0FFh
		db    0
		db    1
		db 0C9h	; …
		db    1
		db 0FFh
		db 0FFh
		db  14h
		db    2
		db  1Bh
		db    2
		db 0FFh
		db 0FFh
		db  32h	; 2
		db    1
		db  50h	; P
		db    2
		db 0FFh
		db 0FFh
		db  3Fh	; ?
		db    2
		db  8Fh	; è
		db    2
		db 0FFh
		db 0FFh
		db  57h	; W
		db    1
		db 0DBh	; €
		db    2
		db 0FFh
		db 0FFh
		db  5Eh	; ^
		db    2
		db    5
		db    3
		db 0FFh
		db 0FFh
		db  72h	; r
		db    1
		db  68h	; h
		db    3
		db 0FFh
		db 0FFh
		db  71h	; q
		db    2
		db  7Eh	; ~
		db    3
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    1
		db 0D4h	; ‘
		db 0FEh	; ˛
		db    0
		db    0
		db 0C8h	; »
		db    0
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  8Ch	; å
		db    0
		db 0C2h	; ¬
		db    1
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  74h	; t
		db 0FFh
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0C2h	; ¬
		db    1
		db 0C8h	; »
		db    0
		db  8Ch	; å
		db    0
		db 0C2h	; ¬
		db    1
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  74h	; t
		db 0FFh
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  83h	; É
		db    1
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FCh	; ¸
		db  72h	; r
		db    2
		db 0FFh
		db 0FFh
		db  8Eh	; é
		db 0FCh	; ¸
		db  73h	; s
		db    1
		db 0FFh
		db 0FFh
		db 0F2h	; Ú
		db 0FCh	; ¸
		db  60h	; `
		db    2
		db 0FFh
		db 0FFh
		db  1Bh
		db 0FDh	; ˝
		db  59h	; Y
		db    1
		db 0FFh
		db 0FFh
		db  69h	; i
		db 0FDh	; ˝
		db  41h	; A
		db    2
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db  35h	; 5
		db    1
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FDh	; ˝
		db  17h
		db    2
		db 0FFh
		db 0FFh
		db  2Eh	; .
		db 0FEh	; ˛
		db    4
		db    1
		db 0FFh
		db 0FFh
		db  56h	; V
		db 0FEh	; ˛
		db 0DDh	; ›
		db    1
		db 0FFh
		db 0FFh
		db 0BBh	; ª
		db 0FEh	; ˛
		db 0CCh	; Ã
		db    0
		db 0FFh
		db 0FFh
		db 0C1h	; ¡
		db 0FEh	; ˛
		db  9Ch	; ú
		db    1
		db 0FFh
		db 0FFh
		db  39h	; 9
		db 0FFh
		db  8Bh	; ã
		db    0
		db 0FFh
		db 0FFh
		db  28h	; (
		db 0FFh
		db  50h	; P
		db    1
		db 0FFh
		db 0FFh
		db 0B1h	; ±
		db 0FFh
		db  41h	; A
		db    0
		db 0FFh
		db 0FFh
		db  89h	; â
		db 0FFh
		db 0FAh	; ˙
		db    0
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db 0E9h	; È
		db 0FFh
		db 0FFh
		db 0FFh
		db 0E9h	; È
		db 0FFh
		db  93h	; ì
		db    0
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    0
		db  90h	; ê
		db 0FFh
		db 0FFh
		db 0FFh
		db  3Ch	; <
		db    0
		db  2Ah	; *
		db    0
		db 0FFh
		db 0FFh
		db 0F3h	; Û
		db    0
		db  2Fh	; /
		db 0FFh
		db 0FFh
		db 0FFh
		db  86h	; Ü
		db    0
		db 0BAh	; ∫
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Ah	; J
		db    1
		db 0C9h	; …
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0C7h	; «
		db    0
		db  42h	; B
		db 0FFh
		db 0FFh
		db 0FFh
		db  97h	; ó
		db    1
		db  5Dh	; ]
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db    0
		db    1
		db 0C4h	; ƒ
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0D9h	; Ÿ
		db    1
		db 0E5h	; Â
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  32h	; 2
		db    1
		db  37h	; 7
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  14h
		db    2
		db  71h	; q
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  57h	; W
		db    1
		db 0B0h	; ∞
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  3Fh	; ?
		db    2
		db 0FBh	; ˚
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  72h	; r
		db    1
		db  25h	; %
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  5Eh	; ^
		db    2
		db  82h	; Ç
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    1
		db  98h	; ò
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  71h	; q
		db    2
		db 0A0h	; †
		db    0
		db 0C2h	; ¬
		db    1
		db 0A0h	; †
		db    0
		db  6Fh	; o
		db    1
		db 0FFh
		db 0FFh
		db  6Dh	; m
		db 0FCh	; ¸
		db  58h	; X
		db    2
		db 0FFh
		db 0FFh
		db  7Eh	; ~
		db 0FCh	; ¸
		db  55h	; U
		db    1
		db 0FFh
		db 0FFh
		db 0D8h	; ÿ
		db 0FCh	; ¸
		db  37h	; 7
		db    2
		db 0FFh
		db 0FFh
		db 0FAh	; ˙
		db 0FCh	; ¸
		db  37h	; 7
		db    1
		db 0FFh
		db 0FFh
		db  41h	; A
		db 0FDh	; ˝
		db  12h
		db    2
		db 0FFh
		db 0FFh
		db  74h	; t
		db 0FDh	; ˝
		db  13h
		db    1
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db 0E8h	; Ë
		db    1
		db 0FFh
		db 0FFh
		db 0EAh	; Í
		db 0FDh	; ˝
		db 0E8h	; Ë
		db    0
		db 0FFh
		db 0FFh
		db    6
		db 0FEh	; ˛
		db 0B6h	; ∂
		db    1
		db 0FFh
		db 0FFh
		db  5Bh	; [
		db 0FEh	; ˛
		db 0A5h	; •
		db    0
		db 0FFh
		db 0FFh
		db  78h	; x
		db 0FEh	; ˛
		db  6Ah	; j
		db    1
		db 0FFh
		db 0FFh
		db 0E2h	; ‚
		db 0FEh	; ˛
		db  58h	; X
		db    0
		db 0FFh
		db 0FFh
		db 0E2h	; ‚
		db 0FEh	; ˛
		db  14h
		db    1
		db 0FFh
		db 0FFh
		db  62h	; b
		db 0FFh
		db    3
		db    0
		db 0FFh
		db 0FFh
		db  48h	; H
		db 0FFh
		db 0B6h	; ∂
		db    0
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FFh
		db 0ABh	; ´
		db 0FFh
		db 0FFh
		db 0FFh
		db 0ABh	; ´
		db 0FFh
		db  55h	; U
		db    0
		db 0FFh
		db 0FFh
		db  55h	; U
		db    0
		db  4Ah	; J
		db 0FFh
		db 0FFh
		db 0FFh
		db  23h	; #
		db    0
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B8h	; ∏
		db    0
		db 0ECh	; Ï
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  9Eh	; û
		db    0
		db 0A8h	; ®
		db 0FFh
		db 0FFh
		db 0FFh
		db  1Eh
		db    1
		db  96h	; ñ
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  1Eh
		db    1
		db  5Bh	; [
		db 0FFh
		db 0FFh
		db 0FFh
		db  88h	; à
		db    1
		db  4Ah	; J
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0A5h	; •
		db    1
		db  18h
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FAh	; ˙
		db    1
		db  18h
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  16h
		db    2
		db 0EDh	; Ì
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  5Ah	; Z
		db    2
		db 0EEh	; Ó
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  8Ch	; å
		db    2
		db 0C9h	; …
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0BFh	; ø
		db    2
		db 0C9h	; …
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db    6
		db    3
		db 0ABh	; ´
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  28h	; (
		db    3
		db 0A8h	; ®
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    3
		db  91h	; ë
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    3
		db  7Dh	; }
		db    0
		db    0
		db    0
		db  7Dh	; }
		db    0
		db 0A8h	; ®
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  7Eh	; ~
		db 0FCh	; ¸
		db  91h	; ë
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  6Dh	; m
		db 0FCh	; ¸
		db 0C9h	; …
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db 0FAh	; ˙
		db 0FCh	; ¸
		db 0ABh	; ´
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0D8h	; ÿ
		db 0FCh	; ¸
		db 0EEh	; Ó
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  74h	; t
		db 0FDh	; ˝
		db 0C9h	; …
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  41h	; A
		db 0FDh	; ˝
		db  18h
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0EAh	; Í
		db 0FDh	; ˝
		db 0EDh	; Ì
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db  4Ah	; J
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  5Bh	; [
		db 0FEh	; ˛
		db  18h
		db 0FFh
		db 0FFh
		db 0FFh
		db    6
		db 0FEh	; ˛
		db  96h	; ñ
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0E2h	; ‚
		db 0FEh	; ˛
		db  5Bh	; [
		db 0FFh
		db 0FFh
		db 0FFh
		db  78h	; x
		db 0FEh	; ˛
		db 0ECh	; Ï
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  62h	; b
		db 0FFh
		db 0A8h	; ®
		db 0FFh
		db 0FFh
		db 0FFh
		db 0E2h	; ‚
		db 0FEh	; ˛
		db  4Ah	; J
		db 0FFh
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FFh
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db 0FFh
		db  48h	; H
		db 0FFh
		db 0ABh	; ´
		db 0FFh
		db 0FFh
		db 0FFh
		db  55h	; U
		db    0
		db  55h	; U
		db    0
		db 0FFh
		db 0FFh
		db 0ABh	; ´
		db 0FFh
		db    3
		db    0
		db 0FFh
		db 0FFh
		db 0B8h	; ∏
		db    0
		db 0B6h	; ∂
		db    0
		db 0FFh
		db 0FFh
		db  23h	; #
		db    0
		db  58h	; X
		db    0
		db 0FFh
		db 0FFh
		db  1Eh
		db    1
		db  14h
		db    1
		db 0FFh
		db 0FFh
		db  9Eh	; û
		db    0
		db 0A5h	; •
		db    0
		db 0FFh
		db 0FFh
		db  88h	; à
		db    1
		db  6Ah	; j
		db    1
		db 0FFh
		db 0FFh
		db  1Eh
		db    1
		db 0E8h	; Ë
		db    0
		db 0FFh
		db 0FFh
		db 0FAh	; ˙
		db    1
		db 0B6h	; ∂
		db    1
		db 0FFh
		db 0FFh
		db 0A5h	; •
		db    1
		db  13h
		db    1
		db 0FFh
		db 0FFh
		db  5Ah	; Z
		db    2
		db 0E8h	; Ë
		db    1
		db 0FFh
		db 0FFh
		db  16h
		db    2
		db  37h	; 7
		db    1
		db 0FFh
		db 0FFh
		db 0BFh	; ø
		db    2
		db  12h
		db    2
		db 0FFh
		db 0FFh
		db  8Ch	; å
		db    2
		db  55h	; U
		db    1
		db 0FFh
		db 0FFh
		db  28h	; (
		db    3
		db  37h	; 7
		db    2
		db 0FFh
		db 0FFh
		db    6
		db    3
		db  6Fh	; o
		db    1
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    3
		db  58h	; X
		db    2
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    3
		db  7Dh	; }
		db    0
		db    0
		db    0
		db  83h	; É
		db 0FFh
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0C2h	; ¬
		db    1
		db 0F4h	; Ù
		db    1
		db  8Ch	; å
		db    0
		db  51h	; Q
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  74h	; t
		db 0FFh
		db  77h	; w
		db    1
		db  4Eh	; N
		db    1
		db  52h	; R
		db 0FFh
		db    0
		db    0
		db  9Ch	; ú
		db 0FCh	; ¸
		db  64h	; d
		db    0
		db    0
		db    0
		db  9Ch	; ú
		db 0FCh	; ¸
		db  1Eh
		db 0FFh
		db    0
		db    0
		db  40h	; @
		db 0FDh	; ˝
		db  50h	; P
		db    0
		db    0
		db    0
		db  40h	; @
		db 0FDh	; ˝
		db 0ECh	; Ï
		db 0FEh	; ˛
		db    0
		db    0
		db 0E8h	; Ë
		db 0FDh	; ˝
		db  3Ch	; <
		db    0
		db    0
		db    0
		db 0E8h	; Ë
		db 0FDh	; ˝
		db 0C0h	; ¿
		db 0FEh	; ˛
		db    0
		db    0
		db  98h	; ò
		db 0FEh	; ˛
		db  28h	; (
		db    0
		db    0
		db    0
		db  98h	; ò
		db 0FEh	; ˛
		db  97h	; ó
		db 0FEh	; ˛
		db    0
		db    0
		db  4Eh	; N
		db 0FFh
		db  14h
		db    0
		db    0
		db    0
		db  4Eh	; N
		db 0FFh
		db  70h	; p
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  70h	; p
		db 0FEh	; ˛
		db  87h	; á
		db    0
		db 0E0h	; ‡
		db    0
		db    0
		db    0
		db  87h	; á
		db    0
		db 0E0h	; ‡
		db    0
		db 0A0h	; †
		db 0FEh	; ˛
		db  2Bh	; +
		db    1
		db  85h	; Ö
		db    1
		db  2Eh	; .
		db    0
		db  2Bh	; +
		db    1
		db  85h	; Ö
		db    1
		db 0D0h	; –
		db 0FEh	; ˛
		db  0Ch
		db    2
		db 0C1h	; ¡
		db    1
		db  5Fh	; _
		db    0
		db  0Ch
		db    2
		db 0C1h	; ¡
		db    1
		db 0F2h	; Ú
		db 0FEh	; ˛
		db 0EDh	; Ì
		db    2
		db  85h	; Ö
		db    1
		db  81h	; Å
		db    0
		db 0EDh	; Ì
		db    2
		db  85h	; Ö
		db    1
		db  15h
		db 0FFh
		db  92h	; í
		db    3
		db 0E1h	; ·
		db    0
		db 0A4h	; §
		db    0
		db  92h	; í
		db    3
		db 0E1h	; ·
		db    0
		db  38h	; 8
		db 0FFh
		db 0CFh	; œ
		db    3
		db    0
		db    0
		db 0C8h	; »
		db    0
		db 0CFh	; œ
		db    3
		db    0
		db    0
		db  5Ch	; \
		db 0FFh
		db  92h	; í
		db    3
		db  1Fh
		db 0FFh
		db 0EBh	; Î
		db    0
		db  92h	; í
		db    3
		db  1Fh
		db 0FFh
		db  7Fh	; 
		db 0FFh
		db 0EDh	; Ì
		db    2
		db  7Bh	; {
		db 0FEh	; ˛
		db  0Eh
		db    1
		db 0EDh	; Ì
		db    2
		db  7Bh	; {
		db 0FEh	; ˛
		db 0A1h	; °
		db 0FFh
		db  0Ch
		db    2
		db  3Fh	; ?
		db 0FEh	; ˛
		db  30h	; 0
		db    1
		db  0Ch
		db    2
		db  3Fh	; ?
		db 0FEh	; ˛
		db 0D2h	; “
		db 0FFh
		db  2Bh	; +
		db    1
		db  7Bh	; {
		db 0FEh	; ˛
		db  60h	; `
		db    1
		db  2Bh	; +
		db    1
		db  7Bh	; {
		db 0FEh	; ˛
		db    0
		db    0
		db  87h	; á
		db    0
		db  20h
		db 0FFh
		db  90h	; ê
		db    1
		db  87h	; á
		db    0
		db  20h
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  90h	; ê
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0ECh	; Ï
		db 0FFh
		db    0
		db    0
		db 0B2h	; ≤
		db    0
		db  69h	; i
		db    1
		db    0
		db    0
		db 0B2h	; ≤
		db    0
		db 0D8h	; ÿ
		db 0FFh
		db    0
		db    0
		db  68h	; h
		db    1
		db  40h	; @
		db    1
		db    0
		db    0
		db  68h	; h
		db    1
		db 0C4h	; ƒ
		db 0FFh
		db    0
		db    0
		db  18h
		db    2
		db  14h
		db    1
		db    0
		db    0
		db  18h
		db    2
		db 0B0h	; ∞
		db 0FFh
		db    0
		db    0
		db 0C0h	; ¿
		db    2
		db 0E2h	; ‚
		db    0
		db    0
		db    0
		db 0C0h	; ¿
		db    2
		db  9Ch	; ú
		db 0FFh
		db    0
		db    0
		db  64h	; d
		db    3
		db 0AEh	; Æ
		db    0
		db    0
		db    0
		db  64h	; d
		db    3
		db 0E0h	; ‡
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db  64h	; d
		db 0FDh	; ˝
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  9Ch	; ú
		db    2
		db 0E1h	; ·
		db 0FFh
		db    0
		db    0
		db  7Eh	; ~
		db 0FCh	; ¸
		db  1Fh
		db    0
		db    0
		db    0
		db  7Eh	; ~
		db 0FCh	; ¸
		db  1Fh
		db    0
		db    0
		db    0
		db  13h
		db 0FDh	; ˝
		db  54h	; T
		db    0
		db  23h	; #
		db    0
		db  13h
		db 0FDh	; ˝
		db  54h	; T
		db    0
		db  23h	; #
		db    0
		db 0A8h	; ®
		db 0FDh	; ˝
		db  73h	; s
		db    0
		db  58h	; X
		db    0
		db 0A8h	; ®
		db 0FDh	; ˝
		db  73h	; s
		db    0
		db  58h	; X
		db    0
		db  3Dh	; =
		db 0FEh	; ˛
		db  73h	; s
		db    0
		db  97h	; ó
		db    0
		db  3Dh	; =
		db 0FEh	; ˛
		db  73h	; s
		db    0
		db  97h	; ó
		db    0
		db 0D4h	; ‘
		db 0FEh	; ˛
		db  54h	; T
		db    0
		db 0CCh	; Ã
		db    0
		db 0D4h	; ‘
		db 0FEh	; ˛
		db  54h	; T
		db    0
		db 0CCh	; Ã
		db    0
		db  67h	; g
		db 0FFh
		db  1Fh
		db    0
		db 0EBh	; Î
		db    0
		db  67h	; g
		db 0FFh
		db  1Fh
		db    0
		db 0EBh	; Î
		db    0
		db    0
		db    0
		db 0E1h	; ·
		db 0FFh
		db 0EBh	; Î
		db    0
		db    0
		db    0
		db 0E1h	; ·
		db 0FFh
		db 0EBh	; Î
		db    0
		db  99h	; ô
		db    0
		db 0ACh	; ¨
		db 0FFh
		db 0CCh	; Ã
		db    0
		db  99h	; ô
		db    0
		db 0ACh	; ¨
		db 0FFh
		db 0CCh	; Ã
		db    0
		db  2Ch	; ,
		db    1
		db  8Dh	; ç
		db 0FFh
		db  97h	; ó
		db    0
		db  2Ch	; ,
		db    1
		db  8Dh	; ç
		db 0FFh
		db  97h	; ó
		db    0
		db 0C3h	; √
		db    1
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db 0C3h	; √
		db    1
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db  58h	; X
		db    2
		db 0ACh	; ¨
		db 0FFh
		db  23h	; #
		db    0
		db  58h	; X
		db    2
		db 0ACh	; ¨
		db 0FFh
		db  23h	; #
		db    0
		db 0EDh	; Ì
		db    2
		db 0E1h	; ·
		db 0FFh
		db    0
		db    0
		db 0EDh	; Ì
		db    2
		db 0E1h	; ·
		db 0FFh
		db    0
		db    0
		db  82h	; Ç
		db    3
		db  1Fh
		db    0
		db    0
		db    0
		db  82h	; Ç
		db    3
		db 0E0h	; ‡
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db  64h	; d
		db 0FDh	; ˝
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  9Ch	; ú
		db    2
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db    0
		db  82h	; Ç
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  74h	; t
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db    0
		db  82h	; Ç
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  74h	; t
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db 0C8h	; »
		db    0
		db    0
		db    0
		db    0
		db    0
		db  8Ch	; å
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db  7Bh	; {
		db    0
		db  4Eh	; N
		db    1
		db  83h	; É
		db    1
		db 0FFh
		db 0FFh
		db  7Ah	; z
		db 0FCh	; ¸
		db  72h	; r
		db    2
		db 0FFh
		db 0FFh
		db  8Eh	; é
		db 0FCh	; ¸
		db  73h	; s
		db    1
		db 0FFh
		db 0FFh
		db 0F2h	; Ú
		db 0FCh	; ¸
		db  60h	; `
		db    2
		db 0FFh
		db 0FFh
		db  1Bh
		db 0FDh	; ˝
		db  59h	; Y
		db    1
		db 0FFh
		db 0FFh
		db  69h	; i
		db 0FDh	; ˝
		db  41h	; A
		db    2
		db 0FFh
		db 0FFh
		db 0A6h	; ¶
		db 0FDh	; ˝
		db  35h	; 5
		db    1
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db 0FDh	; ˝
		db  17h
		db    2
		db 0FFh
		db 0FFh
		db  2Eh	; .
		db 0FEh	; ˛
		db    4
		db    1
		db 0FFh
		db 0FFh
		db  56h	; V
		db 0FEh	; ˛
		db 0DDh	; ›
		db    1
		db 0FFh
		db 0FFh
		db 0BBh	; ª
		db 0FEh	; ˛
		db 0CCh	; Ã
		db    0
		db 0FFh
		db 0FFh
		db 0C1h	; ¡
		db 0FEh	; ˛
		db  9Ch	; ú
		db    1
		db 0FFh
		db 0FFh
		db  39h	; 9
		db 0FFh
		db  8Bh	; ã
		db    0
		db 0FFh
		db 0FFh
		db  28h	; (
		db 0FFh
		db  50h	; P
		db    1
		db 0FFh
		db 0FFh
		db 0B1h	; ±
		db 0FFh
		db  41h	; A
		db    0
		db 0FFh
		db 0FFh
		db  89h	; â
		db 0FFh
		db 0FAh	; ˙
		db    0
		db 0FFh
		db 0FFh
		db  22h	; "
		db    0
		db 0E9h	; È
		db 0FFh
		db 0FFh
		db 0FFh
		db 0E9h	; È
		db 0FFh
		db  93h	; ì
		db    0
		db 0FFh
		db 0FFh
		db  93h	; ì
		db    0
		db  90h	; ê
		db 0FFh
		db 0FFh
		db 0FFh
		db  3Ch	; <
		db    0
		db  2Ah	; *
		db    0
		db 0FFh
		db 0FFh
		db 0F3h	; Û
		db    0
		db  2Fh	; /
		db 0FFh
		db 0FFh
		db 0FFh
		db  86h	; Ü
		db    0
		db 0BAh	; ∫
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Ah	; J
		db    1
		db 0C9h	; …
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0C7h	; «
		db    0
		db  42h	; B
		db 0FFh
		db 0FFh
		db 0FFh
		db  97h	; ó
		db    1
		db  5Dh	; ]
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db    0
		db    1
		db 0C4h	; ƒ
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0D9h	; Ÿ
		db    1
		db 0E5h	; Â
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  32h	; 2
		db    1
		db  37h	; 7
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  14h
		db    2
		db  71h	; q
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  57h	; W
		db    1
		db 0B0h	; ∞
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  3Fh	; ?
		db    2
		db 0FBh	; ˚
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  72h	; r
		db    1
		db  25h	; %
		db 0FDh	; ˝
		db 0FFh
		db 0FFh
		db  5Eh	; ^
		db    2
		db  82h	; Ç
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  82h	; Ç
		db    1
		db  98h	; ò
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db  71h	; q
		db    2
		db 0D4h	; ‘
		db 0FEh	; ˛
		db    0
		db    0
		db  38h	; 8
		db 0FFh
		db  88h	; à
		db 0FDh	; ˝
		db    0
		db    0
		db 0B2h	; ≤
		db 0FCh	; ¸
		db  78h	; x
		db 0FEh	; ˛
		db    0
		db    0
		db 0B2h	; ≤
		db 0FCh	; ¸
		db  88h	; à
		db 0FDh	; ˝
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db 0FEh	; ˛
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FDh	; ˝
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db    0
		db  9Dh	; ù
		db 0FDh	; ˝
		db  13h
		db    0
		db 0A1h	; °
		db    0
		db  85h	; Ö
		db 0FEh	; ˛
		db  13h
		db    0
		db  64h	; d
		db    0
		db 0DCh	; ‹
		db 0FDh	; ˝
		db  26h	; &
		db    0
		db  3Bh	; ;
		db    1
		db 0ACh	; ¨
		db 0FEh	; ˛
		db  26h	; &
		db    0
		db 0C3h	; √
		db    0
		db  41h	; A
		db 0FEh	; ˛
		db  39h	; 9
		db    0
		db 0BFh	; ø
		db    1
		db 0EBh	; Î
		db 0FEh	; ˛
		db  39h	; 9
		db    0
		db  15h
		db    1
		db 0C2h	; ¬
		db 0FEh	; ˛
		db  4Ch	; L
		db    0
		db  22h	; "
		db    2
		db  3Bh	; ;
		db 0FFh
		db  4Ch	; L
		db    0
		db  53h	; S
		db    1
		db  5Bh	; [
		db 0FFh
		db  5Fh	; _
		db    0
		db  62h	; b
		db    2
		db  9Ah	; ö
		db 0FFh
		db  5Fh	; _
		db    0
		db  7Ah	; z
		db    1
		db    0
		db    0
		db  72h	; r
		db    0
		db  78h	; x
		db    2
		db    0
		db    0
		db  72h	; r
		db    0
		db  88h	; à
		db    1
		db 0A1h	; °
		db    0
		db  85h	; Ö
		db    0
		db  63h	; c
		db    2
		db  64h	; d
		db    0
		db  85h	; Ö
		db    0
		db  7Bh	; {
		db    1
		db  3Bh	; ;
		db    1
		db  98h	; ò
		db    0
		db  24h	; $
		db    2
		db 0C3h	; √
		db    0
		db  98h	; ò
		db    0
		db  54h	; T
		db    1
		db 0BFh	; ø
		db    1
		db 0ABh	; ´
		db    0
		db 0BFh	; ø
		db    1
		db  15h
		db    1
		db 0ABh	; ´
		db    0
		db  15h
		db    1
		db  22h	; "
		db    2
		db 0BEh	; æ
		db    0
		db  3Eh	; >
		db    1
		db  53h	; S
		db    1
		db 0BEh	; æ
		db    0
		db 0C5h	; ≈
		db    0
		db  62h	; b
		db    2
		db 0D1h	; —
		db    0
		db 0A5h	; •
		db    0
		db  7Ah	; z
		db    1
		db 0D1h	; —
		db    0
		db  66h	; f
		db    0
		db  78h	; x
		db    2
		db 0E4h	; ‰
		db    0
		db    0
		db    0
		db  88h	; à
		db    1
		db 0E4h	; ‰
		db    0
		db    0
		db    0
		db  63h	; c
		db    2
		db 0F7h	; ˜
		db    0
		db  5Fh	; _
		db 0FFh
		db  7Bh	; {
		db    1
		db 0F7h	; ˜
		db    0
		db  9Ch	; ú
		db 0FFh
		db  24h	; $
		db    2
		db  0Ah
		db    1
		db 0C5h	; ≈
		db 0FEh	; ˛
		db  54h	; T
		db    1
		db  0Ah
		db    1
		db  3Dh	; =
		db 0FFh
		db 0BFh	; ø
		db    1
		db  1Dh
		db    1
		db  41h	; A
		db 0FEh	; ˛
		db  15h
		db    1
		db  1Dh
		db    1
		db 0EBh	; Î
		db 0FEh	; ˛
		db  3Eh	; >
		db    1
		db  30h	; 0
		db    1
		db 0DEh	; ﬁ
		db 0FDh	; ˝
		db 0C5h	; ≈
		db    0
		db  30h	; 0
		db    1
		db 0ADh	; ≠
		db 0FEh	; ˛
		db 0A5h	; •
		db    0
		db  43h	; C
		db    1
		db  9Eh	; û
		db 0FDh	; ˝
		db  66h	; f
		db    0
		db  43h	; C
		db    1
		db  86h	; Ü
		db 0FEh	; ˛
		db    0
		db    0
		db  56h	; V
		db    1
		db  88h	; à
		db 0FDh	; ˝
		db    0
		db    0
		db  56h	; V
		db    1
		db  78h	; x
		db 0FEh	; ˛
		db  5Fh	; _
		db 0FFh
		db  69h	; i
		db    1
		db  9Dh	; ù
		db 0FDh	; ˝
		db  9Ch	; ú
		db 0FFh
		db  69h	; i
		db    1
		db  85h	; Ö
		db 0FEh	; ˛
		db 0C5h	; ≈
		db 0FEh	; ˛
		db  7Ch	; |
		db    1
		db 0DCh	; ‹
		db 0FDh	; ˝
		db  3Dh	; =
		db 0FFh
		db  7Ch	; |
		db    1
		db 0ACh	; ¨
		db 0FEh	; ˛
		db  41h	; A
		db 0FEh	; ˛
		db  8Fh	; è
		db    1
		db  41h	; A
		db 0FEh	; ˛
		db 0EBh	; Î
		db 0FEh	; ˛
		db  8Fh	; è
		db    1
		db 0EBh	; Î
		db 0FEh	; ˛
		db 0DEh	; ﬁ
		db 0FDh	; ˝
		db 0A2h	; ¢
		db    1
		db 0C2h	; ¬
		db 0FEh	; ˛
		db 0ADh	; ≠
		db 0FEh	; ˛
		db 0A2h	; ¢
		db    1
		db  3Bh	; ;
		db 0FFh
		db  9Eh	; û
		db 0FDh	; ˝
		db 0B5h	; µ
		db    1
		db  5Bh	; [
		db 0FFh
		db  86h	; Ü
		db 0FEh	; ˛
		db 0B5h	; µ
		db    1
		db  9Ah	; ö
		db 0FFh
		db  88h	; à
		db 0FDh	; ˝
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  78h	; x
		db 0FEh	; ˛
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  88h	; à
		db 0FDh	; ˝
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  78h	; x
		db 0FEh	; ˛
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FDh	; ˝
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    3
		db  78h	; x
		db 0FEh	; ˛
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    3
		db    0
		db    0
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  88h	; à
		db    1
		db    0
		db    0
		db 0B2h	; ≤
		db 0FCh	; ¸
		db  78h	; x
		db    2
		db    0
		db    0
		db 0B2h	; ≤
		db 0FCh	; ¸
		db  88h	; à
		db    1
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    2
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db    1
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db    2
		db    0
		db    0
		db    0
		db    0
		db  7Bh	; {
		db    1
		db  13h
		db    0
		db  64h	; d
		db    0
		db  63h	; c
		db    2
		db  13h
		db    0
		db 0A1h	; °
		db    0
		db  54h	; T
		db    1
		db  26h	; &
		db    0
		db 0C3h	; √
		db    0
		db  24h	; $
		db    2
		db  26h	; &
		db    0
		db  3Bh	; ;
		db    1
		db  15h
		db    1
		db  39h	; 9
		db    0
		db  15h
		db    1
		db 0BFh	; ø
		db    1
		db  39h	; 9
		db    0
		db 0BFh	; ø
		db    1
		db 0C5h	; ≈
		db    0
		db  4Ch	; L
		db    0
		db  53h	; S
		db    1
		db  3Eh	; >
		db    1
		db  4Ch	; L
		db    0
		db  22h	; "
		db    2
		db  66h	; f
		db    0
		db  5Fh	; _
		db    0
		db  7Ah	; z
		db    1
		db 0A5h	; •
		db    0
		db  5Fh	; _
		db    0
		db  62h	; b
		db    2
		db    0
		db    0
		db  72h	; r
		db    0
		db  88h	; à
		db    1
		db    0
		db    0
		db  72h	; r
		db    0
		db  78h	; x
		db    2
		db  9Ch	; ú
		db 0FFh
		db  85h	; Ö
		db    0
		db  7Bh	; {
		db    1
		db  5Fh	; _
		db 0FFh
		db  85h	; Ö
		db    0
		db  63h	; c
		db    2
		db  3Dh	; =
		db 0FFh
		db  98h	; ò
		db    0
		db  54h	; T
		db    1
		db 0C5h	; ≈
		db 0FEh	; ˛
		db  98h	; ò
		db    0
		db  24h	; $
		db    2
		db 0EBh	; Î
		db 0FEh	; ˛
		db 0ABh	; ´
		db    0
		db  15h
		db    1
		db  41h	; A
		db 0FEh	; ˛
		db 0ABh	; ´
		db    0
		db 0BFh	; ø
		db    1
		db 0ADh	; ≠
		db 0FEh	; ˛
		db 0BEh	; æ
		db    0
		db 0C5h	; ≈
		db    0
		db 0DEh	; ﬁ
		db 0FDh	; ˝
		db 0BEh	; æ
		db    0
		db  3Eh	; >
		db    1
		db  86h	; Ü
		db 0FEh	; ˛
		db 0D1h	; —
		db    0
		db  66h	; f
		db    0
		db  9Eh	; û
		db 0FDh	; ˝
		db 0D1h	; —
		db    0
		db 0A5h	; •
		db    0
		db  78h	; x
		db 0FEh	; ˛
		db 0E4h	; ‰
		db    0
		db    0
		db    0
		db  88h	; à
		db 0FDh	; ˝
		db 0E4h	; ‰
		db    0
		db    0
		db    0
		db  85h	; Ö
		db 0FEh	; ˛
		db 0F7h	; ˜
		db    0
		db  9Ch	; ú
		db 0FFh
		db  9Dh	; ù
		db 0FDh	; ˝
		db 0F7h	; ˜
		db    0
		db  5Fh	; _
		db 0FFh
		db 0ACh	; ¨
		db 0FEh	; ˛
		db  0Ah
		db    1
		db  3Dh	; =
		db 0FFh
		db 0DCh	; ‹
		db 0FDh	; ˝
		db  0Ah
		db    1
		db 0C5h	; ≈
		db 0FEh	; ˛
		db 0EBh	; Î
		db 0FEh	; ˛
		db  1Dh
		db    1
		db 0EBh	; Î
		db 0FEh	; ˛
		db  41h	; A
		db 0FEh	; ˛
		db  1Dh
		db    1
		db  41h	; A
		db 0FEh	; ˛
		db  3Bh	; ;
		db 0FFh
		db  30h	; 0
		db    1
		db 0ADh	; ≠
		db 0FEh	; ˛
		db 0C2h	; ¬
		db 0FEh	; ˛
		db  30h	; 0
		db    1
		db 0DEh	; ﬁ
		db 0FDh	; ˝
		db  9Ah	; ö
		db 0FFh
		db  43h	; C
		db    1
		db  86h	; Ü
		db 0FEh	; ˛
		db  5Bh	; [
		db 0FFh
		db  43h	; C
		db    1
		db  9Eh	; û
		db 0FDh	; ˝
		db    0
		db    0
		db  56h	; V
		db    1
		db  78h	; x
		db 0FEh	; ˛
		db    0
		db    0
		db  56h	; V
		db    1
		db  88h	; à
		db 0FDh	; ˝
		db  64h	; d
		db    0
		db  69h	; i
		db    1
		db  85h	; Ö
		db 0FEh	; ˛
		db 0A1h	; °
		db    0
		db  69h	; i
		db    1
		db  9Dh	; ù
		db 0FDh	; ˝
		db 0C3h	; √
		db    0
		db  7Ch	; |
		db    1
		db 0ACh	; ¨
		db 0FEh	; ˛
		db  3Bh	; ;
		db    1
		db  7Ch	; |
		db    1
		db 0DCh	; ‹
		db 0FDh	; ˝
		db  15h
		db    1
		db  8Fh	; è
		db    1
		db 0EBh	; Î
		db 0FEh	; ˛
		db 0BFh	; ø
		db    1
		db  8Fh	; è
		db    1
		db  41h	; A
		db 0FEh	; ˛
		db  53h	; S
		db    1
		db 0A2h	; ¢
		db    1
		db  3Bh	; ;
		db 0FFh
		db  22h	; "
		db    2
		db 0A2h	; ¢
		db    1
		db 0C2h	; ¬
		db 0FEh	; ˛
		db  7Ah	; z
		db    1
		db 0B5h	; µ
		db    1
		db  9Ah	; ö
		db 0FFh
		db  62h	; b
		db    2
		db 0B5h	; µ
		db    1
		db  5Bh	; [
		db 0FFh
		db  88h	; à
		db    1
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  78h	; x
		db    2
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db  88h	; à
		db    1
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  78h	; x
		db    2
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    1
		db  88h	; à
		db    1
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    3
		db  78h	; x
		db    2
		db 0C2h	; ¬
		db    1
		db  4Eh	; N
		db    3
		db    0
		db    0
		db 0C2h	; ¬
		db    1
		db    0
		db    0
		db 0B8h	; ∏
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db 0A8h	; ®
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0A8h	; ®
		db    0
		db  38h	; 8
		db    1
		db 0FFh
		db 0FFh
		db 0A8h	; ®
		db    0
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  68h	; h
		db    1
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0B4h	; ¥
		db    0
		db  48h	; H
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  58h	; X
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0A8h	; ®
		db    0
		db 0C8h	; »
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0A8h	; ®
		db    0
		db  98h	; ò
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0B4h	; ¥
		db    0
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  68h	; h
		db    1
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  68h	; h
		db    1
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  90h	; ê
		db    1
		db    0
		db    0
		db    0
		db    0
		db  90h	; ê
		db    1
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  90h	; ê
		db    1
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  98h	; ò
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  98h	; ò
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db  4Eh	; N
		db    1
		db  70h	; p
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db    0
		db  70h	; p
		db 0FEh	; ˛
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  70h	; p
		db 0FEh	; ˛
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FBh	; ˚
		db 0FEh	; ˛
		db  17h
		db    0
		db 0FFh
		db 0FFh
		db 0FBh	; ˚
		db 0FEh	; ˛
		db 0C4h	; ƒ
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  3Ch	; <
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0E9h	; È
		db 0FFh
		db 0FFh
		db 0FFh
		db    5
		db    1
		db  78h	; x
		db    0
		db 0FFh
		db 0FFh
		db    5
		db    1
		db 0C8h	; »
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  8Dh	; ç
		db 0FFh
		db  97h	; ó
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db 0FFh
		db  97h	; ó
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db 0FFh
		db  58h	; X
		db    0
		db  4Eh	; N
		db    1
		db  8Dh	; ç
		db 0FFh
		db  97h	; ó
		db    0
		db  4Eh	; N
		db    1
		db  73h	; s
		db    0
		db 0B4h	; ¥
		db    0
		db    0
		db    0
		db 0C8h	; »
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  4Eh	; N
		db    1
		db    1
		db  0Bh
		db    1
		db    0
		db    0
		db  0Dh
		db    0
		db    0
		db  32h	; 2
		db  14h
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    4
		db    8
		db    0
		db    0
		db  0Dh
		db    0
		db    1
		db  32h	; 2
		db  14h
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
unk_3D19B	db    0			; DATA XREF: __sigentry+3o
		db 0BEh	; æ
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    3
		db    0
		db    0
		db    2
		db    0
		db    1
		db 0BEh	; æ
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db 0BEh	; æ
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db 0BEh	; æ
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db 0E8h	; Ë
		db  0Ch
		db    0
		db    0
		db 0FFh
		db    0
		db    1
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db 0E8h	; Ë
		db  0Ch
		db    0
		db    0
		db 0FFh
		db    0
		db    2
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db  5Ah	; Z
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db  5Ah	; Z
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    2
		db    0
		db    0
		db    5
		db    0
		db    3
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    1
		db    2
		db    4
		db    0
		db    0
		db    5
		db    0
		db    0
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    1
		db    1
		db    3
		db    0
		db    0
		db    5
		db    0
		db    2
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    1
		db    4
		db    1
		db    0
		db    0
		db    5
		db    0
		db    1
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    1
		db    8
		db  0Bh
		db    0
		db    0
		db  11h
		db    0
		db    3
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    1
		db  0Ch
		db    4
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    1
		db    1
		db    9
		db    0
		db    0
		db  11h
		db    0
		db    2
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    1
		db    6
		db    5
		db    0
		db    0
		db  11h
		db    0
		db    1
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    1
		db    1
		db    2
		db    1
		db    1
		db    2
		db    0
		db    2
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    1
		db    1
		db    2
		db    0
		db    3
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    2
		db    1
		db    2
		db    1
		db    1
		db    2
		db    0
		db    2
		db  42h	; B
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db  5Ah	; Z
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    2
		db    3
		db    4
		db    1
		db    1
		db    2
		db    0
		db    3
		db  42h	; B
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db  5Ah	; Z
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    1
		db    8
		db  0Bh
		db    1
		db    1
		db  11h
		db    0
		db    3
		db  6Ch	; l
		db  10h
		db    0
		db    0
		db 0FFh
		db    6
		db    1
		db  0Ch
		db    4
		db    1
		db    1
		db  11h
		db    0
		db    0
		db  6Ch	; l
		db  10h
		db    0
		db    0
		db 0FFh
		db    6
		db    1
		db    1
		db    9
		db    1
		db    1
		db  11h
		db    0
		db    2
		db  6Ch	; l
		db  10h
		db    0
		db    0
		db 0FFh
		db    6
		db    1
		db    6
		db    5
		db    1
		db    1
		db  11h
		db    0
		db    1
		db  6Ch	; l
		db  10h
		db    0
		db    0
		db 0FFh
		db    6
		db    1
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    3
		db    0
		db    0
		db    2
		db    0
		db    1
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    2
		db    0
		db    1
		db    2
		db    0
		db    2
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    2
		db    1
		db    0
		db    1
		db    2
		db    0
		db    0
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    3
		db    4
		db    0
		db    1
		db    2
		db    0
		db    3
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    4
		db    3
		db    0
		db    1
		db    2
		db    0
		db    1
		db 0E2h	; ‚
		db  12h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    1
		db    2
		db    0
		db    1
		db    2
		db    0
		db    2
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    2
		db    1
		db    0
		db    1
		db    2
		db    0
		db    0
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    3
		db    4
		db    0
		db    1
		db    2
		db    0
		db    3
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    4
		db    3
		db    0
		db    1
		db    2
		db    0
		db    1
		db  18h
		db  10h
		db    0
		db    0
		db    0
		db  0Ah
		db    1
		db    1
		db    2
		db    0
		db    2
		db    2
		db    0
		db    2
		db  34h	; 4
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db    3
		db    2
		db    0
		db    3
		db  34h	; 4
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    0
		db    3
		db    2
		db    0
		db    0
		db  34h	; 4
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    3
		db    0
		db    2
		db    2
		db    0
		db    1
		db  34h	; 4
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    2
		db    0
		db    3
		db    2
		db    0
		db    2
		db  0Ah
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db    2
		db    2
		db    0
		db    3
		db  0Ah
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    0
		db    2
		db    2
		db    0
		db    0
		db  0Ah
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    3
		db    0
		db    3
		db    2
		db    0
		db    1
		db  0Ah
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    2
		db    2
		db    2
		db    0
		db    0
		db 0E0h	; ‡
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    3
		db    3
		db    3
		db    2
		db    0
		db    1
		db 0E0h	; ‡
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    2
		db    3
		db    3
		db    2
		db    0
		db    2
		db 0E0h	; ‡
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    4
		db    2
		db    2
		db    2
		db    0
		db    3
		db 0E0h	; ‡
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    8
		db  0Bh
		db    2
		db    3
		db  11h
		db    0
		db    3
		db  5Eh	; ^
		db  15h
		db    0
		db    0
		db 0FFh
		db    9
		db    1
		db  0Ch
		db    4
		db    2
		db    2
		db  11h
		db    0
		db    0
		db  5Eh	; ^
		db  15h
		db    0
		db    0
		db 0FFh
		db    9
		db    1
		db    1
		db    9
		db    3
		db    3
		db  11h
		db    0
		db    2
		db  5Eh	; ^
		db  15h
		db    0
		db    0
		db 0FFh
		db    9
		db    1
		db    6
		db    5
		db    3
		db    2
		db  11h
		db    0
		db    1
		db  5Eh	; ^
		db  15h
		db    0
		db    0
		db 0FFh
		db    9
		db    1
		db  0Bh
		db    1
		db    0
		db    0
		db  17h
		db    0
		db    0
		db  0Ch
		db  13h
		db    0
		db    0
		db    0
		db  0Eh
		db    1
		db    4
		db    8
		db    0
		db    0
		db  17h
		db    0
		db    1
		db  0Ch
		db  13h
		db    0
		db    0
		db    0
		db  0Eh
		db    1
		db    2
		db    1
		db    4
		db    4
		db    2
		db    0
		db    0
		db  30h	; 0
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    3
		db    4
		db    4
		db    4
		db    2
		db    0
		db    3
		db  30h	; 0
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    2
		db    1
		db    4
		db    4
		db    3
		db    0
		db    0
		db 0D2h	; “
		db  19h
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    3
		db    4
		db    4
		db    4
		db    3
		db    0
		db    3
		db 0D2h	; “
		db  19h
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    1
		db    2
		db    0
		db    4
		db    2
		db    0
		db    2
		db    6
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    2
		db    1
		db    0
		db    4
		db    2
		db    0
		db    0
		db    6
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    3
		db    4
		db    0
		db    4
		db    2
		db    0
		db    3
		db    6
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db    4
		db    3
		db    0
		db    4
		db    2
		db    0
		db    1
		db    6
		db  0Dh
		db    0
		db    0
		db    0
		db  0Fh
		db    1
		db  0Bh
		db    5
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  10h
		db  12h
		db    0
		db    0
		db 0FFh
		db  0Dh
		db    1
		db    6
		db    8
		db    0
		db    0
		db  11h
		db    0
		db    1
		db  3Eh	; >
		db  11h
		db    0
		db    0
		db 0FFh
		db  0Dh
		db    1
		db  0Ch
		db    1
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  3Eh	; >
		db  11h
		db    0
		db    0
		db 0FFh
		db  0Dh
		db    1
		db    4
		db    9
		db    0
		db    0
		db  11h
		db    0
		db    1
		db  10h
		db  12h
		db    0
		db    0
		db 0FFh
		db  0Dh
		db    2
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    4
		db    0
		db    0
		db    5
		db    0
		db    0
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    2
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    2
		db    0
		db    0
		db    5
		db    0
		db    3
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    2
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db    0
		db    0
		db    5
		db    0
		db    2
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    2
		db    4
		db    3
		db    0
		db    0
		db    2
		db    0
		db    1
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    1
		db    0
		db    0
		db    5
		db    0
		db    1
		db 0F0h	; 
		db  0Dh
		db    0
		db    0
		db    1
		db    3
		db    2
		db    2
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    3
		db    0
		db    0
		db    5
		db    0
		db    0
		db  32h	; 2
		db  0Eh
		db    0
		db    0
		db    2
		db    3
		db    2
		db    3
		db    4
		db    0
		db    0
		db    2
		db    0
		db    3
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    1
		db    0
		db    0
		db    5
		db    0
		db    3
		db  32h	; 2
		db  0Eh
		db    0
		db    0
		db    2
		db    3
		db    2
		db    1
		db    2
		db    0
		db    0
		db    2
		db    0
		db    2
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db    0
		db    0
		db    5
		db    0
		db    2
		db  32h	; 2
		db  0Eh
		db    0
		db    0
		db    2
		db    3
		db    2
		db    4
		db    3
		db    0
		db    0
		db    2
		db    0
		db    1
		db  94h	; î
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    2
		db    0
		db    0
		db    5
		db    0
		db    1
		db  32h	; 2
		db  0Eh
		db    0
		db    0
		db    2
		db    3
		db    2
		db  0Ch
		db    5
		db    0
		db    0
		db    3
		db    0
		db    0
		db  84h	; Ñ
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ch
		db    4
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    2
		db    8
		db    4
		db    0
		db    0
		db    3
		db    0
		db    3
		db  84h	; Ñ
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  0Bh
		db    0
		db    0
		db  11h
		db    0
		db    3
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    2
		db    1
		db  0Bh
		db    0
		db    0
		db    3
		db    0
		db    2
		db  84h	; Ñ
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    9
		db    0
		db    0
		db  11h
		db    0
		db    2
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    2
		db    6
		db    9
		db    0
		db    0
		db    3
		db    0
		db    1
		db  84h	; Ñ
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db    5
		db    0
		db    0
		db  11h
		db    0
		db    1
		db  74h	; t
		db  0Eh
		db    0
		db    0
		db    1
		db    6
		db    2
		db  0Bh
		db    1
		db    0
		db    0
		db    3
		db    0
		db    0
		db 0BAh	; ∫
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    8
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  46h	; F
		db  0Fh
		db    0
		db    0
		db    2
		db    6
		db    2
		db    9
		db    6
		db    0
		db    0
		db    3
		db    0
		db    3
		db 0BAh	; ∫
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db    1
		db    0
		db    0
		db  11h
		db    0
		db    3
		db  46h	; F
		db  0Fh
		db    0
		db    0
		db    2
		db    6
		db    2
		db    5
		db  0Ch
		db    0
		db    0
		db    3
		db    0
		db    2
		db 0BAh	; ∫
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db    6
		db    0
		db    0
		db  11h
		db    0
		db    2
		db  46h	; F
		db  0Fh
		db    0
		db    0
		db    2
		db    6
		db    2
		db    4
		db    8
		db    0
		db    0
		db    3
		db    0
		db    1
		db 0BAh	; ∫
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  0Ch
		db    0
		db    0
		db  11h
		db    0
		db    1
		db  46h	; F
		db  0Fh
		db    0
		db    0
		db    2
		db    6
		db    1
		db    2
		db    1
		db    5
		db    5
		db    2
		db    0
		db    0
		db  48h	; H
		db  19h
		db  72h	; r
		db  19h
		db    0
		db    0
		db    1
		db    3
		db    4
		db    5
		db    5
		db    2
		db    0
		db    3
		db  48h	; H
		db  19h
		db  72h	; r
		db  19h
		db    0
		db    0
		db    1
		db    1
		db    2
		db    0
		db    5
		db    3
		db    0
		db    2
		db 0F4h	; Ù
		db  18h
		db  1Eh
		db  19h
		db    0
		db  0Dh
		db    1
		db    2
		db    1
		db    0
		db    5
		db    3
		db    0
		db    0
		db 0F4h	; Ù
		db  18h
		db  1Eh
		db  19h
		db    0
		db  0Dh
		db    1
		db    3
		db    4
		db    0
		db    5
		db    3
		db    0
		db    3
		db 0F4h	; Ù
		db  18h
		db  1Eh
		db  19h
		db    0
		db  0Dh
		db    1
		db    4
		db    3
		db    0
		db    5
		db    3
		db    0
		db    1
		db 0F4h	; Ù
		db  18h
		db  1Eh
		db  19h
		db    0
		db  0Dh
		db    1
		db    2
		db    1
		db    0
		db    0
		db    3
		db    0
		db    0
		db  9Ch	; ú
		db  19h
		db    0
		db    0
		db    0
		db  0Bh
		db    1
		db    3
		db    4
		db    0
		db    0
		db    3
		db    0
		db    3
		db  9Ch	; ú
		db  19h
		db    0
		db    0
		db    0
		db  0Bh
		db    1
		db  0Bh
		db    1
		db    0
		db    1
		db  1Dh
		db    0
		db    0
		db  30h	; 0
		db  16h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    9
		db    6
		db    0
		db    1
		db  1Dh
		db    0
		db    3
		db  30h	; 0
		db  16h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    5
		db  0Ch
		db    0
		db    1
		db  1Dh
		db    0
		db    2
		db  30h	; 0
		db  16h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    4
		db    8
		db    0
		db    1
		db  1Dh
		db    0
		db    1
		db  30h	; 0
		db  16h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db  0Ch
		db    5
		db    0
		db    1
		db  1Dh
		db    0
		db    0
		db  92h	; í
		db  17h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    8
		db    4
		db    0
		db    1
		db  1Dh
		db    0
		db    3
		db  92h	; í
		db  17h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    1
		db  0Bh
		db    0
		db    1
		db  1Dh
		db    0
		db    2
		db  92h	; í
		db  17h
		db    0
		db    0
		db    0
		db  0Ch
		db    1
		db    6
		db    9
		db    0
		db    1
		db  1Dh
		db    0
		db    1
		db  92h	; í
		db  17h
		db    0
		db    0
		db    0
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db 0E0h	; ‡
		db  78h	; x
		db 0E0h	; ‡
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db  24h	; $
		db  1Ah
		db    0
		db    0
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  81h	; Å
		db  4Ch	; L
		db  81h	; Å
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db    0
		db    0
		db    0
		db    0
		db  36h	; 6
		db  81h	; Å
		db  62h	; b
		db  81h	; Å
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db  5Ch	; \
		db  1Ah
		db    0
		db    0
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db  6Ah	; j
		db  1Ah
		db    0
		db    1
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db 0B0h	; ∞
		db  1Ah
		db    0
		db    3
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db 0BEh	; æ
		db  1Ah
		db    0
		db    0
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db 0CCh	; Ã
		db  1Ah
		db    0
		db    2
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db 0DAh	; ⁄
		db  1Ah
		db    0
		db    1
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db 0E8h	; Ë
		db  1Ah
		db    0
		db    3
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    0
		db    1
		db    3
		db    3
		db    0
		db 0F6h	; ˆ
		db  1Ah
		db    0
		db    0
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    0
		db    1
		db    3
		db    3
		db    0
		db    4
		db  1Bh
		db    0
		db    2
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    0
		db    1
		db    3
		db    3
		db    0
		db  12h
		db  1Bh
		db    0
		db    1
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    0
		db    1
		db    3
		db    3
		db    0
		db  5Ch	; \
		db  1Ah
		db    0
		db    0
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db  6Ah	; j
		db  1Ah
		db    0
		db    1
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db 0B0h	; ∞
		db  1Ah
		db    0
		db    3
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    1
		db    1
		db    0
		db    2
		db    0
		db 0BEh	; æ
		db  1Ah
		db    0
		db    0
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    1
		db    1
		db    0
		db    2
		db    0
		db 0CCh	; Ã
		db  1Ah
		db    0
		db    2
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    1
		db    1
		db    0
		db    2
		db    0
		db 0DAh	; ⁄
		db  1Ah
		db    0
		db    1
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    1
		db    1
		db    0
		db    2
		db    0
		db 0E8h	; Ë
		db  1Ah
		db    0
		db    3
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    1
		db    1
		db    3
		db    3
		db    0
		db 0F6h	; ˆ
		db  1Ah
		db    0
		db    0
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    1
		db    1
		db    3
		db    3
		db    0
		db    4
		db  1Bh
		db    0
		db    2
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    1
		db    1
		db    3
		db    3
		db    0
		db  12h
		db  1Bh
		db    0
		db    1
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    1
		db    1
		db    3
		db    3
		db    0
		db  5Ch	; \
		db  1Ah
		db    0
		db    0
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db  6Ah	; j
		db  1Ah
		db    0
		db    1
		db 0E0h	; ‡
		db  78h	; x
		db 0F6h	; ˆ
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db 0B0h	; ∞
		db  1Ah
		db    0
		db    3
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    2
		db    1
		db    0
		db    2
		db    0
		db 0BEh	; æ
		db  1Ah
		db    0
		db    0
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    2
		db    1
		db    0
		db    2
		db    0
		db 0CCh	; Ã
		db  1Ah
		db    0
		db    2
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    2
		db    1
		db    0
		db    2
		db    0
		db 0DAh	; ⁄
		db  1Ah
		db    0
		db    1
		db  90h	; ê
		db  79h	; y
		db 0A6h	; ¶
		db  79h	; y
		db    0
		db    2
		db    1
		db    0
		db    2
		db    0
		db 0E8h	; Ë
		db  1Ah
		db    0
		db    3
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    2
		db    1
		db    3
		db    3
		db    0
		db 0F6h	; ˆ
		db  1Ah
		db    0
		db    0
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    2
		db    1
		db    3
		db    3
		db    0
		db    4
		db  1Bh
		db    0
		db    2
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    2
		db    1
		db    3
		db    3
		db    0
		db  12h
		db  1Bh
		db    0
		db    1
		db  0Ch
		db  79h	; y
		db  22h	; "
		db  79h	; y
		db    0
		db    2
		db    1
		db    3
		db    3
		db    0
		db  20h
		db  1Bh
		db    0
		db    0
		db  28h	; (
		db  77h	; w
		db  3Eh	; >
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db  2Eh	; .
		db  1Bh
		db    0
		db    3
		db  28h	; (
		db  77h	; w
		db  3Eh	; >
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db  0Eh
		db  1Ch
		db    0
		db    1
		db  5Ch	; \
		db  78h	; x
		db  72h	; r
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db  1Ch
		db    0
		db    3
		db  5Ch	; \
		db  78h	; x
		db  72h	; r
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db 0F2h	; Ú
		db  1Bh
		db    0
		db    0
		db  5Ch	; \
		db  78h	; x
		db  72h	; r
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db 0E4h	; ‰
		db  1Bh
		db    0
		db    2
		db  5Ch	; \
		db  78h	; x
		db  72h	; r
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db  70h	; p
		db  1Ch
		db    0
		db    0
		db  88h	; à
		db  78h	; x
		db  9Eh	; û
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  18h
		db    0
		db  7Eh	; ~
		db  1Ch
		db    0
		db    1
		db  88h	; à
		db  78h	; x
		db  9Eh	; û
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  18h
		db    0
		db  54h	; T
		db  1Ch
		db    0
		db    2
		db  88h	; à
		db  78h	; x
		db  9Eh	; û
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  18h
		db    0
		db  62h	; b
		db  1Ch
		db    0
		db    3
		db  88h	; à
		db  78h	; x
		db  9Eh	; û
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  18h
		db    0
		db 0A8h	; ®
		db  1Ch
		db    0
		db    0
		db 0ACh	; ¨
		db  77h	; w
		db 0C2h	; ¬
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db 0B6h	; ∂
		db  1Ch
		db    0
		db    1
		db 0ACh	; ¨
		db  77h	; w
		db 0C2h	; ¬
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db  8Ch	; å
		db  1Ch
		db    0
		db    2
		db 0ACh	; ¨
		db  77h	; w
		db 0C2h	; ¬
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db  9Ah	; ö
		db  1Ch
		db    0
		db    3
		db 0ACh	; ¨
		db  77h	; w
		db 0C2h	; ¬
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db 0E0h	; ‡
		db  1Ch
		db    0
		db    2
		db  74h	; t
		db  7Bh	; {
		db  8Ah	; ä
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db  19h
		db    0
		db 0C4h	; ƒ
		db  1Ch
		db    0
		db    0
		db  74h	; t
		db  7Bh	; {
		db  8Ah	; ä
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db  19h
		db    0
		db 0EEh	; Ó
		db  1Ch
		db    0
		db    3
		db  74h	; t
		db  7Bh	; {
		db  8Ah	; ä
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db  19h
		db    0
		db 0D2h	; “
		db  1Ch
		db    0
		db    1
		db  74h	; t
		db  7Bh	; {
		db  8Ah	; ä
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db  19h
		db    0
		db 0FCh	; ¸
		db  1Ch
		db    0
		db    3
		db 0A4h	; §
		db  76h	; v
		db 0BAh	; ∫
		db  76h	; v
		db    0
		db    0
		db    0
		db    3
		db  1Ah
		db    0
		db  0Ah
		db  1Dh
		db    0
		db    0
		db 0A4h	; §
		db  76h	; v
		db 0BAh	; ∫
		db  76h	; v
		db    0
		db    0
		db    0
		db    3
		db  1Ah
		db    0
		db  18h
		db  1Dh
		db    0
		db    2
		db 0A4h	; §
		db  76h	; v
		db 0BAh	; ∫
		db  76h	; v
		db    0
		db    0
		db    0
		db    3
		db  1Ah
		db    0
		db  26h	; &
		db  1Dh
		db    0
		db    1
		db 0A4h	; §
		db  76h	; v
		db 0BAh	; ∫
		db  76h	; v
		db    0
		db    0
		db    0
		db    3
		db  1Ah
		db    0
		db  0Eh
		db  1Ch
		db    0
		db    1
		db  78h	; x
		db  76h	; v
		db  8Eh	; é
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db  1Ch
		db    0
		db    3
		db  78h	; x
		db  76h	; v
		db  8Eh	; é
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db 0F2h	; Ú
		db  1Bh
		db    0
		db    0
		db  78h	; x
		db  76h	; v
		db  8Eh	; é
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db 0E4h	; ‰
		db  1Bh
		db    0
		db    2
		db  78h	; x
		db  76h	; v
		db  8Eh	; é
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  10h
		db    0
		db 0C0h	; ¿
		db  1Dh
		db    0
		db    0
		db 0FCh	; ¸
		db  76h	; v
		db  12h
		db  77h	; w
		db    0
		db    0
		db    1
		db    3
		db    5
		db    0
		db 0CEh	; Œ
		db  1Dh
		db    0
		db    1
		db 0D0h	; –
		db  76h	; v
		db 0E6h	; Ê
		db  76h	; v
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db 0DCh	; ‹
		db  1Dh
		db    0
		db    0
		db 0D0h	; –
		db  76h	; v
		db 0E6h	; Ê
		db  76h	; v
		db    0
		db    0
		db    1
		db    3
		db    4
		db    0
		db 0EAh	; Í
		db  1Dh
		db    0
		db    1
		db 0FCh	; ¸
		db  76h	; v
		db  12h
		db  77h	; w
		db    0
		db    0
		db    1
		db    3
		db    5
		db    0
		db  34h	; 4
		db  1Dh
		db    0
		db    0
		db 0D8h	; ÿ
		db  77h	; w
		db 0EEh	; Ó
		db  77h	; w
		db 0CEh	; Œ
		db    0
		db    0
		db    1
		db  1Bh
		db    0
		db  42h	; B
		db  1Dh
		db    0
		db    1
		db 0D8h	; ÿ
		db  77h	; w
		db 0EEh	; Ó
		db  77h	; w
		db 0CFh	; œ
		db    0
		db    0
		db    2
		db  1Bh
		db    0
		db  78h	; x
		db  1Ah
		db    0
		db    0
		db  64h	; d
		db  79h	; y
		db  7Ah	; z
		db  79h	; y
		db 0D0h	; –
		db    0
		db    0
		db    0
		db  1Ch
		db    0
		db  86h	; Ü
		db  1Ah
		db    0
		db    3
		db  64h	; d
		db  79h	; y
		db  7Ah	; z
		db  79h	; y
		db 0D1h	; —
		db    0
		db    0
		db    0
		db  1Ch
		db    0
		db  50h	; P
		db  1Dh
		db    0
		db    0
		db  30h	; 0
		db  78h	; x
		db  46h	; F
		db  78h	; x
		db 0D2h	; “
		db    0
		db    0
		db    0
		db  1Eh
		db    0
		db  5Eh	; ^
		db  1Dh
		db    0
		db    1
		db  30h	; 0
		db  78h	; x
		db  46h	; F
		db  78h	; x
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db  1Eh
		db    0
		db  96h	; ñ
		db  1Dh
		db    0
		db    0
		db 0A8h	; ®
		db  7Ch	; |
		db 0BEh	; æ
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db  88h	; à
		db  1Dh
		db    0
		db    2
		db 0A8h	; ®
		db  7Ch	; |
		db 0BEh	; æ
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db 0A4h	; §
		db  1Dh
		db    0
		db    3
		db 0A8h	; ®
		db  7Ch	; |
		db 0BEh	; æ
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db 0B2h	; ≤
		db  1Dh
		db    0
		db    1
		db 0A8h	; ®
		db  7Ch	; |
		db 0BEh	; æ
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db  94h	; î
		db  1Ah
		db    0
		db    0
		db 0C4h	; ƒ
		db  7Ah	; z
		db 0DAh	; ⁄
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db  0Ch
		db    0
		db 0F8h	; ¯
		db  1Dh
		db    0
		db    0
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db  14h
		db  1Eh
		db    0
		db    3
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db  30h	; 0
		db  1Eh
		db    0
		db    2
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db  4Ch	; L
		db  1Eh
		db    0
		db    1
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db  68h	; h
		db  1Eh
		db    0
		db    0
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db  84h	; Ñ
		db  1Eh
		db    0
		db    3
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db 0A0h	; †
		db  1Eh
		db    0
		db    2
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db 0BCh	; º
		db  1Eh
		db    0
		db    1
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db  6Ch	; l
		db  1Dh
		db    0
		db    0
		db 0E4h	; ‰
		db  7Eh	; ~
		db 0FAh	; ˙
		db  7Eh	; ~
		db 0D2h	; “
		db    0
		db    0
		db    0
		db  1Fh
		db    0
		db  7Ah	; z
		db  1Dh
		db    0
		db    1
		db 0E4h	; ‰
		db  7Eh	; ~
		db 0FAh	; ˙
		db  7Eh	; ~
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db  1Fh
		db    0
		db    8
		db  1Ah
		db    0
		db    0
		db  10h
		db  7Fh	; 
		db  26h	; &
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    1
		db  23h	; #
		db    0
		db  16h
		db  1Ah
		db    0
		db    1
		db  10h
		db  7Fh	; 
		db  26h	; &
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    2
		db  23h	; #
		db    0
		db 0D8h	; ÿ
		db  1Eh
		db    0
		db    0
		db 0A0h	; †
		db  7Bh	; {
		db 0B6h	; ∂
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    8
		db    0
		db 0F4h	; Ù
		db  1Eh
		db    0
		db    3
		db 0A0h	; †
		db  7Bh	; {
		db 0B6h	; ∂
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    8
		db    0
		db  10h
		db  1Fh
		db    0
		db    2
		db 0A0h	; †
		db  7Bh	; {
		db 0B6h	; ∂
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    8
		db    0
		db  2Ch	; ,
		db  1Fh
		db    0
		db    1
		db 0A0h	; †
		db  7Bh	; {
		db 0B6h	; ∂
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    8
		db    0
		db  48h	; H
		db  1Fh
		db    0
		db    0
		db 0CCh	; Ã
		db  7Bh	; {
		db 0E2h	; ‚
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    9
		db    0
		db  64h	; d
		db  1Fh
		db    0
		db    3
		db 0CCh	; Ã
		db  7Bh	; {
		db 0E2h	; ‚
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    9
		db    0
		db  80h	; Ä
		db  1Fh
		db    0
		db    2
		db 0CCh	; Ã
		db  7Bh	; {
		db 0E2h	; ‚
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    9
		db    0
		db  9Ch	; ú
		db  1Fh
		db    0
		db    1
		db 0CCh	; Ã
		db  7Bh	; {
		db 0E2h	; ‚
		db  7Bh	; {
		db    0
		db    0
		db    1
		db    3
		db    9
		db    0
		db  0Eh
		db  1Ch
		db    0
		db    1
		db 0F8h	; ¯
		db  7Bh	; {
		db  0Eh
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db  1Ch
		db    0
		db    3
		db 0F8h	; ¯
		db  7Bh	; {
		db  0Eh
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db 0F2h	; Ú
		db  1Bh
		db    0
		db    0
		db 0F8h	; ¯
		db  7Bh	; {
		db  0Eh
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db 0E4h	; ‰
		db  1Bh
		db    0
		db    2
		db 0F8h	; ¯
		db  7Bh	; {
		db  0Eh
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db  20h
		db  1Bh
		db    0
		db    0
		db  24h	; $
		db  7Ch	; |
		db  3Ah	; :
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  14h
		db    0
		db  2Eh	; .
		db  1Bh
		db    0
		db    3
		db  24h	; $
		db  7Ch	; |
		db  3Ah	; :
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  14h
		db    0
		db  3Ch	; <
		db  1Bh
		db    0
		db    0
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db    5
		db    0
		db    0
		db    0
		db  16h
		db    0
		db  58h	; X
		db  1Bh
		db    0
		db    3
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db    4
		db    0
		db    0
		db    0
		db  16h
		db    0
		db  20h
		db  1Bh
		db    0
		db    0
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  13h
		db    0
		db  2Eh	; .
		db  1Bh
		db    0
		db    3
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  13h
		db    0
		db  74h	; t
		db  1Bh
		db    0
		db    3
		db 0D4h	; ‘
		db  7Ch	; |
		db 0EAh	; Í
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    3
		db  15h
		db    0
		db  82h	; Ç
		db  1Bh
		db    0
		db    0
		db 0D4h	; ‘
		db  7Ch	; |
		db 0EAh	; Í
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    3
		db  15h
		db    0
		db  90h	; ê
		db  1Bh
		db    0
		db    2
		db 0D4h	; ‘
		db  7Ch	; |
		db 0EAh	; Í
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    3
		db  15h
		db    0
		db  9Eh	; û
		db  1Bh
		db    0
		db    1
		db 0D4h	; ‘
		db  7Ch	; |
		db 0EAh	; Í
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    3
		db  15h
		db    0
		db 0B8h	; ∏
		db  1Fh
		db    0
		db    0
		db    0
		db  7Dh	; }
		db  16h
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db 0C6h	; ∆
		db  1Fh
		db    0
		db    3
		db    0
		db  7Dh	; }
		db  16h
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db 0E2h	; ‚
		db  1Fh
		db    0
		db    0
		db 0B0h	; ∞
		db  7Dh	; }
		db 0C6h	; ∆
		db  7Dh	; }
		db    0
		db 0FFh
		db    0
		db    0
		db  0Ah
		db    0
		db 0FEh	; ˛
		db  1Fh
		db    0
		db    1
		db 0B0h	; ∞
		db  7Dh	; }
		db 0C6h	; ∆
		db  7Dh	; }
		db    0
		db 0FFh
		db    0
		db    0
		db  0Ah
		db    0
		db 0D4h	; ‘
		db  1Fh
		db    0
		db    2
		db 0B0h	; ∞
		db  7Dh	; }
		db 0C6h	; ∆
		db  7Dh	; }
		db    0
		db 0FFh
		db    0
		db    0
		db  0Ah
		db    0
		db 0F0h	; 
		db  1Fh
		db    0
		db    3
		db 0B0h	; ∞
		db  7Dh	; }
		db 0C6h	; ∆
		db  7Dh	; }
		db    0
		db 0FFh
		db    0
		db    0
		db  0Ah
		db    0
		db  0Ch
		db  20h
		db    0
		db    0
		db  2Ch	; ,
		db  7Dh	; }
		db  42h	; B
		db  7Dh	; }
		db    4
		db    0
		db    0
		db    0
		db  22h	; "
		db    0
		db  1Ah
		db  20h
		db    0
		db    3
		db  2Ch	; ,
		db  7Dh	; }
		db  42h	; B
		db  7Dh	; }
		db    5
		db    0
		db    0
		db    0
		db  22h	; "
		db    0
		db  28h	; (
		db  20h
		db    0
		db    0
		db  58h	; X
		db  7Dh	; }
		db  6Eh	; n
		db  7Dh	; }
		db 0C6h	; ∆
		db    0
		db    0
		db    3
		db  20h
		db    0
		db  36h	; 6
		db  20h
		db    0
		db    3
		db  58h	; X
		db  7Dh	; }
		db  6Eh	; n
		db  7Dh	; }
		db 0C7h	; «
		db    0
		db    0
		db    3
		db  20h
		db    0
		db  44h	; D
		db  20h
		db    0
		db    2
		db  58h	; X
		db  7Dh	; }
		db  6Eh	; n
		db  7Dh	; }
		db 0C8h	; »
		db    0
		db    0
		db    3
		db  20h
		db    0
		db  52h	; R
		db  20h
		db    0
		db    1
		db  58h	; X
		db  7Dh	; }
		db  6Eh	; n
		db  7Dh	; }
		db 0C9h	; …
		db    0
		db    0
		db    3
		db  20h
		db    0
		db  60h	; `
		db  20h
		db    0
		db    0
		db  84h	; Ñ
		db  7Dh	; }
		db  9Ah	; ö
		db  7Dh	; }
		db 0CAh	;  
		db    0
		db    0
		db    3
		db  21h	; !
		db    0
		db  6Eh	; n
		db  20h
		db    0
		db    3
		db  84h	; Ñ
		db  7Dh	; }
		db  9Ah	; ö
		db  7Dh	; }
		db 0CBh	; À
		db    0
		db    0
		db    3
		db  21h	; !
		db    0
		db  7Ch	; |
		db  20h
		db    0
		db    2
		db  84h	; Ñ
		db  7Dh	; }
		db  9Ah	; ö
		db  7Dh	; }
		db 0CCh	; Ã
		db    0
		db    0
		db    3
		db  21h	; !
		db    0
		db  8Ah	; ä
		db  20h
		db    0
		db    1
		db  84h	; Ñ
		db  7Dh	; }
		db  9Ah	; ö
		db  7Dh	; }
		db 0CDh	; Õ
		db    0
		db    0
		db    3
		db  21h	; !
		db    0
		db  94h	; î
		db  1Ah
		db    0
		db    0
		db 0C4h	; ƒ
		db  7Ah	; z
		db 0DAh	; ⁄
		db  7Ah	; z
		db    0
		db    1
		db    1
		db    0
		db  0Ch
		db    0
		db 0F8h	; ¯
		db  1Dh
		db    0
		db    0
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    6
		db    0
		db  14h
		db  1Eh
		db    0
		db    3
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    6
		db    0
		db  30h	; 0
		db  1Eh
		db    0
		db    2
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    6
		db    0
		db  4Ch	; L
		db  1Eh
		db    0
		db    1
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    6
		db    0
		db  68h	; h
		db  1Eh
		db    0
		db    0
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    7
		db    0
		db  84h	; Ñ
		db  1Eh
		db    0
		db    3
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    7
		db    0
		db 0A0h	; †
		db  1Eh
		db    0
		db    2
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    7
		db    0
		db 0BCh	; º
		db  1Eh
		db    0
		db    1
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    1
		db    1
		db    0
		db    7
		db    0
		db  24h	; $
		db  1Ah
		db    0
		db    0
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  0Eh
		db    1
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db  1Ah
		db    0
		db    2
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  0Eh
		db    1
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  1Ah
		db    0
		db    1
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  0Fh
		db    1
		db    0
		db    0
		db    0
		db    0
		db  4Eh	; N
		db  1Ah
		db    0
		db    3
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  0Fh
		db    1
		db    0
		db    0
		db    0
		db    0
		db  94h	; î
		db  1Ah
		db    0
		db    0
		db 0C4h	; ƒ
		db  7Ah	; z
		db 0DAh	; ⁄
		db  7Ah	; z
		db    0
		db    2
		db    1
		db    0
		db  0Ch
		db    0
		db 0F8h	; ¯
		db  1Dh
		db    0
		db    0
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    6
		db    0
		db  14h
		db  1Eh
		db    0
		db    3
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    6
		db    0
		db  30h	; 0
		db  1Eh
		db    0
		db    2
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    6
		db    0
		db  4Ch	; L
		db  1Eh
		db    0
		db    1
		db 0F0h	; 
		db  7Ah	; z
		db    6
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    6
		db    0
		db  68h	; h
		db  1Eh
		db    0
		db    0
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    7
		db    0
		db  84h	; Ñ
		db  1Eh
		db    0
		db    3
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    7
		db    0
		db 0A0h	; †
		db  1Eh
		db    0
		db    2
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    7
		db    0
		db 0BCh	; º
		db  1Eh
		db    0
		db    1
		db  1Ch
		db  7Bh	; {
		db  32h	; 2
		db  7Bh	; {
		db    0
		db    2
		db    1
		db    0
		db    7
		db    0
		db  24h	; $
		db  1Ah
		db    0
		db    0
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  18h
		db    2
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db  1Ah
		db    0
		db    2
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  18h
		db    2
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  1Ah
		db    0
		db    1
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  19h
		db    2
		db    0
		db    0
		db    0
		db    0
		db  4Eh	; N
		db  1Ah
		db    0
		db    3
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db  19h
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  7Bh	; {
		db  5Eh	; ^
		db  7Bh	; {
		db    0
		db    0
		db    0
		db    0
		db  4Ah	; J
		db    0
		db    0
		db    0
		db    0
		db    0
		db  7Ch	; |
		db  7Ch	; |
		db  92h	; í
		db  7Ch	; |
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0AEh	; Æ
		db  7Ah	; z
		db 0AEh	; Æ
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db  47h	; G
		db    0
		db    0
		db    0
		db    0
		db    0
		db  38h	; 8
		db  79h	; y
		db  4Eh	; N
		db  79h	; y
		db    0
		db    0
		db    0
		db    0
		db  49h	; I
		db    0
		db    0
		db    0
		db    0
		db    0
		db  80h	; Ä
		db  77h	; w
		db  96h	; ñ
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  42h	; B
		db    0
		db    0
		db    0
		db    0
		db    2
		db  80h	; Ä
		db  77h	; w
		db  96h	; ñ
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  42h	; B
		db    0
		db    0
		db    0
		db    0
		db    3
		db  80h	; Ä
		db  77h	; w
		db  96h	; ñ
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  42h	; B
		db    0
		db    0
		db    0
		db    0
		db    1
		db  80h	; Ä
		db  77h	; w
		db  96h	; ñ
		db  77h	; w
		db    0
		db    0
		db    0
		db    0
		db  42h	; B
		db    0
		db    0
		db    0
		db    0
		db    0
		db  4Ch	; L
		db  76h	; v
		db  62h	; b
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  41h	; A
		db    0
		db    0
		db    0
		db    0
		db    2
		db  4Ch	; L
		db  76h	; v
		db  62h	; b
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  41h	; A
		db    0
		db    0
		db    0
		db    0
		db    3
		db  4Ch	; L
		db  76h	; v
		db  62h	; b
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  41h	; A
		db    0
		db    0
		db    0
		db    0
		db    1
		db  4Ch	; L
		db  76h	; v
		db  62h	; b
		db  76h	; v
		db    0
		db    0
		db    0
		db    0
		db  41h	; A
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  78h	; x
		db  1Ah
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db    0
		db    0
		db    0
		db    0
		db    2
		db    4
		db  78h	; x
		db  1Ah
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db    0
		db    0
		db    0
		db    0
		db    3
		db    4
		db  78h	; x
		db  1Ah
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db    0
		db    0
		db    0
		db    0
		db    1
		db    4
		db  78h	; x
		db  1Ah
		db  78h	; x
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db    0
		db    0
		db    0
		db    0
		db    0
		db  60h	; `
		db  7Eh	; ~
		db  76h	; v
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  45h	; E
		db    0
		db    0
		db    0
		db    0
		db    2
		db  60h	; `
		db  7Eh	; ~
		db  76h	; v
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  45h	; E
		db    0
		db    0
		db    0
		db    0
		db    3
		db  60h	; `
		db  7Eh	; ~
		db  76h	; v
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  45h	; E
		db    0
		db    0
		db    0
		db    0
		db    1
		db  60h	; `
		db  7Eh	; ~
		db  76h	; v
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  45h	; E
		db    0
		db    0
		db    0
		db    0
		db    0
		db  8Ch	; å
		db  7Eh	; ~
		db 0A2h	; ¢
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db  46h	; F
		db    0
		db    0
		db    0
		db    0
		db    2
		db  8Ch	; å
		db  7Eh	; ~
		db 0A2h	; ¢
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db  46h	; F
		db    0
		db    0
		db    0
		db    0
		db    3
		db  8Ch	; å
		db  7Eh	; ~
		db 0A2h	; ¢
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db  46h	; F
		db    0
		db    0
		db    0
		db    0
		db    1
		db  8Ch	; å
		db  7Eh	; ~
		db 0A2h	; ¢
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db  46h	; F
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0B8h	; ∏
		db  7Eh	; ~
		db 0CEh	; Œ
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  43h	; C
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0B8h	; ∏
		db  7Eh	; ~
		db 0CEh	; Œ
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  43h	; C
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0B8h	; ∏
		db  7Eh	; ~
		db 0CEh	; Œ
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  43h	; C
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0B8h	; ∏
		db  7Eh	; ~
		db 0CEh	; Œ
		db  7Eh	; ~
		db    0
		db 0FFh
		db    0
		db    0
		db  43h	; C
		db    0
		db  40h	; @
		db  1Ah
		db    0
		db    2
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  1Ah
		db    0
		db    1
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db  4Eh	; N
		db  1Ah
		db    0
		db    3
		db  54h	; T
		db  77h	; w
		db  6Ah	; j
		db  77h	; w
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db  1Bh
		db    0
		db    0
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db 0BAh	; ∫
		db  1Bh
		db    0
		db    3
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db 0ACh	; ¨
		db  1Bh
		db    0
		db    2
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db 0D6h	; ÷
		db  1Bh
		db    0
		db    1
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db 0C8h	; »
		db  1Bh
		db    0
		db    0
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db 0BAh	; ∫
		db  1Bh
		db    0
		db    3
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db 0ACh	; ¨
		db  1Bh
		db    0
		db    2
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db 0D6h	; ÷
		db  1Bh
		db    0
		db    1
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    1
		db    1
		db    0
		db    1
		db    0
		db 0C8h	; »
		db  1Bh
		db    0
		db    0
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db 0BAh	; ∫
		db  1Bh
		db    0
		db    3
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db 0ACh	; ¨
		db  1Bh
		db    0
		db    2
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db 0D6h	; ÷
		db  1Bh
		db    0
		db    1
		db 0B4h	; ¥
		db  78h	; x
		db 0CAh	;  
		db  78h	; x
		db    0
		db    2
		db    1
		db    0
		db    1
		db    0
		db  1Ch
		db  1Ch
		db    0
		db    0
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db 0DEh	; ﬁ
		db    0
		db    0
		db    0
		db  13h
		db    0
		db  46h	; F
		db  1Ch
		db    0
		db    3
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db 0DFh	; ﬂ
		db    0
		db    0
		db    0
		db  13h
		db    0
		db  2Ah	; *
		db  1Ch
		db    0
		db    2
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db 0E0h	; ‡
		db    0
		db    0
		db    0
		db  13h
		db    0
		db  38h	; 8
		db  1Ch
		db    0
		db    1
		db  50h	; P
		db  7Ch	; |
		db  66h	; f
		db  7Ch	; |
		db 0E1h	; ·
		db    0
		db    0
		db    0
		db  13h
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0DCh	; ‹
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0DCh	; ‹
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0DCh	; ‹
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0DCh	; ‹
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0F2h	; Ú
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  21h	; !
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0F2h	; Ú
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  21h	; !
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0F2h	; Ú
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  21h	; !
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0F2h	; Ú
		db  7Dh	; }
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  21h	; !
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db  1Bh
		db    0
		db    0
		db    0
		db    0
		db    1
		db    8
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db  1Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  3Ch	; <
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		db    0
		db    1
		db  3Ch	; <
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db  52h	; R
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Eh
		db    0
		db    0
		db    0
		db    0
		db    1
		db  52h	; R
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Eh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  82h	; Ç
		db  7Ah	; z
		db  82h	; Ç
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  98h	; ò
		db  7Ah	; z
		db  98h	; ò
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  68h	; h
		db  7Fh	; 
		db  7Eh	; ~
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  94h	; î
		db  7Fh	; 
		db 0AAh	; ™
		db  7Fh	; 
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Ah	; *
		db  7Ah	; z
		db  2Ah	; *
		db  7Ah	; z
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  14h
		db  7Ah	; z
		db  14h
		db  7Ah	; z
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    3
		db  14h
		db  7Ah	; z
		db  14h
		db  7Ah	; z
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db  14h
		db  7Ah	; z
		db  14h
		db  7Ah	; z
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    1
		db  14h
		db  7Ah	; z
		db  14h
		db  7Ah	; z
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db  79h	; y
		db 0FEh	; ˛
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0E8h	; Ë
		db  79h	; y
		db 0E8h	; Ë
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0E8h	; Ë
		db  79h	; y
		db 0E8h	; Ë
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0E8h	; Ë
		db  79h	; y
		db 0E8h	; Ë
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0E8h	; Ë
		db  79h	; y
		db 0E8h	; Ë
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0D2h	; “
		db  79h	; y
		db 0D2h	; “
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0D2h	; “
		db  79h	; y
		db 0D2h	; “
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0D2h	; “
		db  79h	; y
		db 0D2h	; “
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0D2h	; “
		db  79h	; y
		db 0D2h	; “
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0BCh	; º
		db  79h	; y
		db 0BCh	; º
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    3
		db 0BCh	; º
		db  79h	; y
		db 0BCh	; º
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db 0BCh	; º
		db  79h	; y
		db 0BCh	; º
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    1
		db 0BCh	; º
		db  79h	; y
		db 0BCh	; º
		db  79h	; y
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0ECh	; Ï
		db  7Fh	; 
		db 0ECh	; Ï
		db  7Fh	; 
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  80h	; Ä
		db    2
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  18h
		db  80h	; Ä
		db  18h
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Eh	; .
		db  80h	; Ä
		db  2Eh	; .
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  44h	; D
		db  80h	; Ä
		db  44h	; D
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  5Ah	; Z
		db  80h	; Ä
		db  5Ah	; Z
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  70h	; p
		db  80h	; Ä
		db  70h	; p
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  86h	; Ü
		db  80h	; Ä
		db  86h	; Ü
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  9Ch	; ú
		db  80h	; Ä
		db  9Ch	; ú
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0B2h	; ≤
		db  80h	; Ä
		db 0B2h	; ≤
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db  80h	; Ä
		db 0C8h	; »
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0DEh	; ﬁ
		db  80h	; Ä
		db 0DEh	; ﬁ
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C0h	; ¿
		db  7Fh	; 
		db 0C0h	; ¿
		db  7Fh	; 
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db 0E0h	; ‡
		db    0
		db  85h	; Ö
		db    1
word_3E590	dw 1C1h			; DATA XREF: sub_1E1A0+A7Br
					; sub_1E1A0+A84r ...
		db  85h	; Ö
		db    1
		db 0E0h	; ‡
		db    0
		db    0
		db    0
		db  70h	; p
		db 0FEh	; ˛
		db  70h	; p
		db 0FEh	; ˛
		db 0A0h	; †
		db 0FEh	; ˛
		db 0D0h	; –
		db 0FEh	; ˛
		db 0F2h	; Ú
		db 0FEh	; ˛
		db  15h
		db 0FFh
		db  38h	; 8
		db 0FFh
		db    0
		db    0
		db  87h	; á
		db    0
		db  2Bh	; +
		db    1
		db  0Ch
		db    2
		db 0EDh	; Ì
		db    2
		db  92h	; í
		db    3
		db 0CFh	; œ
		db    3
		db    0
		db    0
		db 0B2h	; ≤
		db    0
		db  68h	; h
		db    1
		db  18h
		db    2
		db 0C0h	; ¿
		db    2
		db  64h	; d
		db    3
		db 0D0h	; –
		db    7
		db    0
		db    0
		db 0ECh	; Ï
		db 0FFh
		db 0D8h	; ÿ
		db 0FFh
		db 0C4h	; ƒ
		db 0FFh
		db 0B0h	; ∞
		db 0FFh
		db  9Ch	; ú
		db 0FFh
		db  88h	; à
		db 0FFh
		db  90h	; ê
		db    1
		db  69h	; i
		db    1
		db  40h	; @
		db    1
		db  14h
		db    1
		db 0E2h	; ‚
		db    0
		db 0AEh	; Æ
		db    0
		db  78h	; x
		db    0
		db    5
		db 0FFh
		db 0ACh	; ¨
		db 0FFh
		db  54h	; T
		db    0
		db 0FBh	; ˚
		db    0
		db    0
		db    0
		db 0A2h	; ¢
		db 0FFh
		db  45h	; E
		db 0FFh
		db 0E8h	; Ë
		db 0FEh	; ˛
		db  8Bh	; ã
		db 0FEh	; ˛
		db  2Eh	; .
		db 0FEh	; ˛
		db 0D1h	; —
		db 0FDh	; ˝
		db  74h	; t
		db 0FDh	; ˝
		db  17h
		db 0FDh	; ˝
		db 0BAh	; ∫
		db 0FCh	; ¸
		db  5Dh	; ]
		db 0FCh	; ¸
		db    0
		db 0FCh	; ¸
		db    0
		db    0
		db    0
		db    4
		db 0A3h	; £
		db    3
		db  46h	; F
		db    3
		db 0E9h	; È
		db    2
		db  8Ch	; å
		db    2
		db  2Fh	; /
		db    2
		db 0D2h	; “
		db    1
		db  75h	; u
		db    1
		db  18h
		db    1
		db 0BBh	; ª
		db    0
		db  5Eh	; ^
		db    0
		db    0
		db 0FEh	; ˛
		db 0B2h	; ≤
		db 0FEh	; ˛
		db  58h	; X
		db 0FFh
		db    0
		db    0
		db 0A8h	; ®
		db    0
		db  4Eh	; N
		db    1
		db 0E8h	; Ë
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db    0
		db  78h	; x
		db    0
		db  78h	; x
		db    0
		db 0A8h	; ®
		db    0
		db 0D8h	; ÿ
		db    0
		db    8
		db    1
		db  38h	; 8
		db    1
		db  68h	; h
		db    1
		db  68h	; h
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  88h	; à
		db 0FFh
		db    0
		db    0
		db 0E7h	; Á
		db 0FEh	; ˛
		db  88h	; à
		db 0FFh
		db    0
		db    0
		db  19h
		db 0FFh
		db  88h	; à
		db 0FFh
		db    0
		db    0
		db  19h
		db    1
		db  88h	; à
		db 0FFh
		db    0
		db    0
		db 0E7h	; Á
		db    0
		db  78h	; x
		db    0
		db    0
		db    0
		db 0E7h	; Á
		db 0FEh	; ˛
		db  78h	; x
		db    0
		db    0
		db    0
		db  19h
		db 0FFh
		db  78h	; x
		db    0
		db    0
		db    0
		db  19h
		db    1
		db  78h	; x
		db    0
		db    0
		db    0
		db 0E7h	; Á
		db    0
		db 0C4h	; ƒ
		db 0FFh
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db  3Ch	; <
		db    0
		db    0
		db    0
		db    0
		db    2
		db  78h	; x
		db 0FEh	; ˛
		db    0
		db    0
		db    0
		db    0
		db  88h	; à
		db 0FDh	; ˝
		db    0
		db    0
		db    0
		db    0
		db  88h	; à
		db    1
		db    0
		db    0
		db    0
		db    0
		db  78h	; x
		db    2
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db    0
		db    0
		db    1
		db 0FFh
		db  61h	; a
		db    0
		db    0
		db    0
		db    1
		db 0FFh
		db  9Fh	; ü
		db 0FFh
		db    0
		db    0
		db 0FFh
		db    0
		db 0E9h	; È
		db 0FFh
		db    0
		db    0
		db 0FFh
		db    0
		db  67h	; g
		db  61h	; a
		db  6Dh	; m
		db  65h	; e
		db  31h	; 1
		db    0
		db  67h	; g
		db  61h	; a
		db  6Dh	; m
		db  65h	; e
		db  32h	; 2
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  30h	; 0
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  31h	; 1
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  32h	; 2
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  30h	; 0
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  31h	; 1
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  32h	; 2
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  33h	; 3
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  32h	; 2
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  30h	; 0
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  31h	; 1
		db    0
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  32h	; 2
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  30h	; 0
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  31h	; 1
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  32h	; 2
		db    0
		db  65h	; e
		db  78h	; x
		db  70h	; p
		db  33h	; 3
		db    0
		db    0
		db  73h	; s
		db  74h	; t
byte_3E70C	db 78h			; DATA XREF: sub_1FF92+Dw
					; sub_1FF92+29Dw
byte_3E70D	db 78h			; DATA XREF: sub_1FF92+13w
					; sub_1FF92+2A3w
byte_3E70E	db 78h			; DATA XREF: sub_1FF92+19w
					; sub_1FF92+2A9w
byte_3E70F	db 0			; DATA XREF: sub_1FF92+1Fw
					; sub_1FF92+2AFw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  74h	; t
		db  63h	; c
		db  6Fh	; o
		db  6Dh	; m
		db  70h	; p
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    0
		db    1
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    1
		db    3
		db    0
		db    2
		db    3
		db    0
		db    0
		db    1
		db    1
		db    3
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    0
		db    3
		db    1
		db    0
		db    0
		db    3
		db    2
		db    2
		db    3
		db    1
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    5
		db    0
		db    4
		db    5
		db    0
		db    0
		db    4
		db    1
		db    5
		db    4
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    5
		db    1
		db    4
		db    0
		db    5
		db    4
		db    0
		db    5
		db    1
		db    1
		db    4
		db  6Eh	; n
		db  61h	; a
		db  6Dh	; m
		db    0
		db  70h	; p
		db  61h	; a
		db  74h	; t
		db  68h	; h
		db    0
		db  73h	; s
		db  70h	; p
		db  65h	; e
		db  64h	; d
		db    0
		db    0
aEngi		db 'ENGI',0             ; DATA XREF: dseg:3094o
aEngi_0		db 'ENGI',0             ; DATA XREF: dseg:3098o
aStar		db 'STAR',0             ; DATA XREF: dseg:309Co
aStop		db 'STOP',0             ; DATA XREF: dseg:30A0o
aBlow		db 'BLOW',0             ; DATA XREF: dseg:30A4o
aCras		db 'CRAS',0             ; DATA XREF: dseg:30A8o
aSkid		db 'SKID',0             ; DATA XREF: dseg:30ACo
aSki2		db 'SKI2',0             ; DATA XREF: dseg:30B0o
aBump		db 'BUMP',0             ; DATA XREF: dseg:30B4o
aScra		db 'SCRA',0             ; DATA XREF: dseg:30B8o
aEngi_1		db 'ENGI',0             ; DATA XREF: dseg:30C4o
aEngi_2		db 'ENGI',0             ; DATA XREF: dseg:30C8o
aStar_0		db 'STAR',0             ; DATA XREF: dseg:30CCo
aStop_0		db 'STOP',0             ; DATA XREF: dseg:30D0o
aBlow_0		db 'BLOW',0             ; DATA XREF: dseg:30D4o
aCras_0		db 'CRAS',0             ; DATA XREF: dseg:30D8o
aSkid_0		db 'SKID',0             ; DATA XREF: dseg:30DCo
aSki2_0		db 'SKI2',0             ; DATA XREF: dseg:30E0o
aBump_0		db 'BUMP',0             ; DATA XREF: dseg:30E4o
aScra_0		db 'SCRA',0             ; DATA XREF: dseg:30E8o
aDefault	db 'default',0
aRbf		db 'rbf',0
aCop		db 'cop',0
		db 0F4h	; Ù
		db    1
		db  10h
		db  27h	; '
		db  28h	; (
		db  23h	; #
		db    0
		db    0
		dd aEngi		; "ENGI"
		dd aEngi_0		; "ENGI"
		dd aStar		; "STAR"
		dd aStop		; "STOP"
		dd aBlow		; "BLOW"
		dd aCras		; "CRAS"
		dd aSkid		; "SKID"
		dd aSki2		; "SKI2"
		dd aBump		; "BUMP"
		dd aScra		; "SCRA"
		db 0F4h	; Ù
		db    1
		db  10h
		db  27h	; '
		db  28h	; (
		db  23h	; #
		db    0
		db    0
		dd aEngi_1		; "ENGI"
		dd aEngi_2		; "ENGI"
		dd aStar_0		; "STAR"
		dd aStop_0		; "STOP"
		dd aBlow_0		; "BLOW"
		dd aCras_0		; "CRAS"
		dd aSkid_0		; "SKID"
		dd aSki2_0		; "SKI2"
		dd aBump_0		; "BUMP"
		dd aScra_0		; "SCRA"
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    8
		db  0Ch
		db  10h
		db  14h
		db  18h
		db  1Ch
		db  20h
		db  24h	; $
		db  28h	; (
		db  2Ch	; ,
		db  30h	; 0
		db  34h	; 4
		db  38h	; 8
		db  3Ch	; <
		db  40h	; @
		db  44h	; D
		db  48h	; H
		db  4Ch	; L
		db  54h	; T
		db  5Ah	; Z
		db  62h	; b
		db  6Ah	; j
		db  72h	; r
		db  79h	; y
		db  7Fh	; 
		db  7Fh	; 
		db  7Fh	; 
		db  2Eh	; .
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db    0
		db  77h	; w
		db  68h	; h
		db  6Ch	; l
		db  31h	; 1
		db  77h	; w
		db  68h	; h
		db  6Ch	; l
		db  32h	; 2
		db  77h	; w
		db  68h	; h
		db  6Ch	; l
		db  33h	; 3
		db  69h	; i
		db  6Eh	; n
		db  73h	; s
		db  32h	; 2
		db  67h	; g
		db  62h	; b
		db  6Fh	; o
		db  78h	; x
		db  69h	; i
		db  6Eh	; n
		db  73h	; s
		db  31h	; 1
		db  69h	; i
		db  6Eh	; n
		db  73h	; s
		db  33h	; 3
		db  69h	; i
		db  6Eh	; n
		db  6Dh	; m
		db  31h	; 1
		db  69h	; i
		db  6Eh	; n
		db  6Dh	; m
		db  33h	; 3
		db    0
		db  67h	; g
		db  6Eh	; n
		db  6Fh	; o
		db  62h	; b
		db  67h	; g
		db  6Eh	; n
		db  61h	; a
		db  62h	; b
		db  64h	; d
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  64h	; d
		db  6Fh	; o
		db  74h	; t
		db  61h	; a
		db  64h	; d
		db  6Fh	; o
		db  74h	; t
		db  31h	; 1
		db  64h	; d
		db  6Fh	; o
		db  74h	; t
		db  32h	; 2
		db    0
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  30h	; 0
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  31h	; 1
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  32h	; 2
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  33h	; 3
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  34h	; 4
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  35h	; 5
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  36h	; 6
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  37h	; 7
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  38h	; 8
		db  64h	; d
		db  69h	; i
		db  67h	; g
		db  39h	; 9
		db    0
		db  64h	; d
		db  61h	; a
		db  73h	; s
		db  68h	; h
		db    0
		db  72h	; r
		db  6Fh	; o
		db  6Fh	; o
		db  66h	; f
		db    0
		db  72h	; r
		db  6Fh	; o
		db  6Fh	; o
		db  66h	; f
		db    0
		db  64h	; d
		db  61h	; a
		db  73h	; s
		db  74h	; t
		db    0
		db  64h	; d
		db  61h	; a
		db  73h	; s
		db  6Dh	; m
		db    0
		db  72h	; r
		db  6Fh	; o
		db  6Fh	; o
		db  66h	; f
		db    0
		db  72h	; r
		db  6Fh	; o
		db  6Fh	; o
		db  66h	; f
		db    0
		db  64h	; d
		db  61h	; a
		db  73h	; s
		db  68h	; h
		db    0
		db  73h	; s
		db  74h	; t
		db  64h	; d
		db  61h	; a
byte_3E916	db 78h			; DATA XREF: sub_22D2E+31w
byte_3E917	db 78h			; DATA XREF: sub_22D2E+37w
byte_3E918	db 78h			; DATA XREF: sub_22D2E+3Dw
byte_3E919	db 78h			; DATA XREF: sub_22D2E+43w
		db    0
		db    0
		db  73h	; s
		db  74h	; t
		db  64h	; d
		db  62h	; b
byte_3E920	db 78h			; DATA XREF: sub_22D2E+49w
byte_3E921	db 78h			; DATA XREF: sub_22D2E+4Fw
byte_3E922	db 78h			; DATA XREF: sub_22D2E+55w
byte_3E923	db 78h			; DATA XREF: sub_22D2E+5Bw
		db    0
		db  65h	; e
		db  6Eh	; n
		db  67h	; g
		db  31h	; 1
		db    0
		db  65h	; e
		db  6Eh	; n
		db  67h	; g
		db    0
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  65h	; e
		db  64h	; d
		db  2Eh	; .
		db  66h	; f
		db  6Eh	; n
		db  74h	; t
		db    0
		db  73h	; s
		db  64h	; d
		db  67h	; g
		db  61h	; a
		db  6Dh	; m
		db  65h	; e
		db    0
		db  67h	; g
		db  61h	; a
		db  6Dh	; m
		db  65h	; e
		db    0
		db  70h	; p
		db  6Ch	; l
		db  61h	; a
		db  6Eh	; n
		db    0
		db  77h	; w
		db  61h	; a
		db  6Ch	; l
		db  6Ch	; l
		db    0
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db  79h	; y
		db  72h	; r
		db  70h	; p
		db  69h	; i
		db  63h	; c
		db  72h	; r
		db  70h	; p
		db  61h	; a
		db  63h	; c
		db  72h	; r
		db  70h	; p
		db  6Dh	; m
		db  63h	; c
		db  72h	; r
		db  70h	; p
		db  74h	; t
		db  63h	; c
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  36h	; 6
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  35h	; 5
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  34h	; 4
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  33h	; 3
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  32h	; 2
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  31h	; 1
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  30h	; 0
		db  7Ah	; z
		db  6Fh	; o
		db  6Fh	; o
		db  6Dh	; m
		db  70h	; p
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  36h	; 6
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  35h	; 5
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  34h	; 4
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  33h	; 3
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  32h	; 2
		db  62h	; b
		db  6Fh	; o
		db  6Eh	; n
		db  31h	; 1
		db  62h	; b
		db  6Fh	; o
		db  66h	; f
		db  30h	; 0
		db  7Ah	; z
		db  6Fh	; o
		db  6Fh	; o
		db  6Dh	; m
		db  70h	; p
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db    0
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db    0
		db  63h	; c
		db  6Fh	; o
		db  6Eh	; n
		db    0
		db  72h	; r
		db  65h	; e
		db  70h	; p
		db    0
		db  2Eh	; .
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db    0
		db  72h	; r
		db  65h	; e
		db  70h	; p
		db    0
		db  2Eh	; .
		db  72h	; r
		db  70h	; p
		db  6Ch	; l
		db    0
		db  66h	; f
		db  65h	; e
		db  78h	; x
		db    0
		db  73h	; s
		db  65h	; e
		db  72h	; r
		db    0
		db  6Dh	; m
		db  64h	; d
		db  6Fh	; o
		db    0
		db  77h	; w
		db  61h	; a
		db  69h	; i
		db    0
		db  77h	; w
		db  61h	; a
		db  69h	; i
		db    0
byte_3E9DB	db 6			; DATA XREF: sub_23B4C+1D8r
					; sub_23B4C+1E3w ...
		db    1
		db    7
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    8
		db    0
		db    0
		db    0
		db    2
		db    2
		db    3
		db    4
		db    5
		db    1
		db    7
		db    0
		db    2
		db    6
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    0
		db    0
		db    1
		db    0
		db    0
		db    1
		db    1
		db    1
		db    7
		db    8
		db    0
		db    6
		db    6
		db    8
		db    7
		db  10h
		db    1
		db  6Dh	; m
		db    0
		db  12h
		db    1
		db 0E8h	; Ë
		db    0
		db 0BEh	; æ
		db    0
		db  97h	; ó
		db    0
		db  6Ch	; l
		db    0
		db  42h	; B
		db    0
word_3EA18	dw 0Ah			; DATA XREF: sub_23B4C+547r
		db  3Ah	; :
		db    1
		db  97h	; ó
		db    0
		db  3Ah	; :
		db    1
		db  12h
		db    1
		db 0E8h	; Ë
		db    0
		db 0BEh	; æ
		db    0
		db  97h	; ó
		db    0
		db  5Bh	; [
		db    0
word_3EA2A	dw 2Fh			; DATA XREF: sub_23B4C+54Br
		db 0B0h	; ∞
		db    0
		db 0B0h	; ∞
		db    0
		db  9Ch	; ú
		db    0
		db  9Ch	; ú
		db    0
		db  9Ch	; ú
		db    0
		db  9Ch	; ú
		db    0
		db  9Ch	; ú
		db    0
word_3EA3A	dw 9Ch			; DATA XREF: sub_23B4C+516r
word_3EA3C	dw 9Ch			; DATA XREF: sub_23B4C:loc_24082r
		db 0C1h	; ¡
		db    0
		db 0C1h	; ¡
		db    0
		db 0ADh	; ≠
		db    0
		db 0ADh	; ≠
		db    0
		db 0ADh	; ≠
		db    0
		db 0ADh	; ≠
		db    0
		db 0ADh	; ≠
		db    0
word_3EA4C	dw 0C1h			; DATA XREF: sub_23B4C+519r
word_3EA4E	dw 0C1h			; DATA XREF: sub_23B4C+539r
		db    0
		db    0
		db  68h	; h
		db    0
		db  97h	; ó
		db    0
		db 0C8h	; »
		db    0
		db  70h	; p
		db  6Fh	; o
		db  6Ch	; l
		db  79h	; y
		db  69h	; i
		db  6Eh	; n
		db  66h	; f
		db  6Fh	; o
		db    0
		db    0
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db    2
		db    6
		db    3
		db    0
		db    0
		db    0
		db    5
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    3
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db  80h	; Ä
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db  80h	; Ä
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db  80h	; Ä
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db  80h	; Ä
		db    0
		db    0
		db    0
		db  40h	; @
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db  10h
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
word_3EB02	dw 0FFFFh		; DATA XREF: sub_261FA+4Dr
					; sub_261FA+82w
		db  0Fh
		db  27h	; '
		db 0FFh
		db 0FFh
		db  0Fh
		db  27h	; '
		db 0FFh
		db 0FFh
		db  49h	; I
		db  6Eh	; n
		db  69h	; i
		db  74h	; t
		db  45h	; E
		db  6Eh	; n
		db  67h	; g
		db  69h	; i
		db  6Eh	; n
		db  65h	; e
		db  3Ah	; :
		db  20h
		db  41h	; A
		db  6Ch	; l
		db  6Ch	; l
		db  20h
		db  68h	; h
		db  61h	; a
		db  6Eh	; n
		db  64h	; d
		db  6Ch	; l
		db  65h	; e
		db  73h	; s
		db  20h
		db  75h	; u
		db  73h	; s
		db  65h	; e
		db  64h	; d
		db  2Eh	; .
		db    0
word_3EB2A	dw 0			; DATA XREF: seg007:loc_26FB7w
					; seg007:041Br	...
aStartengineNew	db 'startengine() - new handle = %d',0Ah,0
		db    0
aId1		db 'id1',0
aId2		db 'id2',0
aId3		db 'id3',0
aId4		db 'id4',0
aSetup_exe	db 'setup.exe',0
aSdtitl_	db 'sdtitl.*',0
aTedit_		db 'tedit.*',0
aOpp1_		db 'opp1.*',0
		db 0DEh	; ﬁ
		db  33h	; 3
		db 0E2h	; ‚
		db  33h	; 3
		db 0E6h	; Ê
		db  33h	; 3
		db 0EAh	; Í
		db  33h	; 3
		db 0EEh	; Ó
		db  33h	; 3
		db 0F8h	; ¯
		db  33h	; 3
		db    1
		db  34h	; 4
		db    9
		db  34h	; 4
word_3EB90	dw 0			; DATA XREF: sub_27686+1D2w
					; sub_27686+61Br ...
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db    0
		db  2Ah	; *
		db    0
		db  6Ch	; l
		db  73h	; s
		db  75h	; u
		db    0
		db  6Ch	; l
		db  73h	; s
		db  64h	; d
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db  5Ch	; \
		db    0
		db  73h	; s
		db  61h	; a
		db  76h	; v
		db    0
		db    0
word_3EBB0	dw 0			; DATA XREF: sub_287C4+1Dw
					; sub_287C4+1ADw ...
word_3EBB2	dw 0			; DATA XREF: sub_287C4+23w
					; sub_287C4+C7w ...
word_3EBB4	dw 0			; DATA XREF: sub_287C4+48r
					; sub_287C4:loc_28815r	...
word_3EBB6	dw 0			; DATA XREF: sub_287C4+58w
					; sub_287C4:loc_28823r	...
word_3EBB8	dw 0			; DATA XREF: sub_287C4+FCr
					; sub_287C4+117w
word_3EBBA	dw 0			; DATA XREF: sub_287C4+105r
					; sub_287C4+11Dw
word_3EBBC	dw 0			; DATA XREF: sub_287C4+10Er
					; sub_287C4+177r ...
word_3EBBE	dw 0			; DATA XREF: sub_287C4+125w
					; sub_287C4+14Ew ...
word_3EBC0	dw 0			; DATA XREF: sub_287C4+66w
					; sub_287C4+77w ...
word_3EBC2	dw 0			; DATA XREF: sub_287C4+18Dw
					; sub_287C4+19Dw ...
word_3EBC4	dw 0			; DATA XREF: sub_287C4+Bw sub_287C4+Fr ...
a_res		db '.res',0
a_pre		db '.pre',0
aWai		db 'wai',0
		db ':',0
a_		db '.',0
byte_3EBD8	db 0			; DATA XREF: sub_29AEC+1r
					; sub_29AEC+15w ...
		db  6Ah	; j
		db  6Fh	; o
		db  79h	; y
		db    0
		db  6Ah	; j
		db  6Fh	; o
		db  78h	; x
		db    0
		db  6Bh	; k
		db  65h	; e
		db  79h	; y
		db    0
		db  6Dh	; m
		db  6Fh	; o
		db  75h	; u
		db    0
		db  70h	; p
		db  61h	; a
		db  75h	; u
		db    0
		db  6Dh	; m
		db  6Fh	; o
		db  6Eh	; n
		db    0
		db  6Dh	; m
		db  6Fh	; o
		db  66h	; f
		db    0
		db  73h	; s
		db  6Fh	; o
		db  6Eh	; n
		db    0
		db  73h	; s
		db  6Fh	; o
		db  66h	; f
		db    0
		db  64h	; d
		db  6Fh	; o
		db  73h	; s
		db    0
		db  6Dh	; m
		db  72h	; r
		db  6Ch	; l
		db    0
		db  6Dh	; m
		db  72h	; r
		db  73h	; s
		db    0
		db  64h	; d
		db  65h	; e
		db  61h	; a
		db    0
		db  64h	; d
		db  65h	; e
		db  72h	; r
		db    0
		db  6Dh	; m
		db  65h	; e
		db  72h	; r
		db    0
		db  2Eh	; .
		db  70h	; p
		db  33h	; 3
		db  73h	; s
		db    0
		db  2Eh	; .
		db  33h	; 3
		db  73h	; s
		db  68h	; h
		db    0
		db    0
		db  73h	; s
		db  64h	; d
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  69h	; i
		db  74h	; t
		db    0
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  69h	; i
		db  74h	; t
		db    0
		db  70h	; p
		db  62h	; b
		db  6Fh	; o
		db  78h	; x
		db    0
		db  73h	; s
		db  6Eh	; n
		db  61h	; a
		db  6Dh	; m
		db    0
		db  6Dh	; m
		db  6Eh	; n
		db  61h	; a
		db  6Dh	; m
		db    0
		db  74h	; t
		db  6Eh	; n
		db  61h	; a
		db  6Dh	; m
		db    0
		db  62h	; b
		db  74h	; t
		db  69h	; i
		db    0
		db  62h	; b
		db  73h	; s
		db  63h	; c
		db    0
		db  62h	; b
		db  6Ch	; l
		db  6Fh	; o
		db    0
		db  62h	; b
		db  73h	; s
		db  61h	; a
		db    0
		db  62h	; b
		db  63h	; c
		db  6Ch	; l
		db    0
		db  62h	; b
		db  65h	; e
		db  78h	; x
		db    0
		db  6Dh	; m
		db  73h	; s
		db  73h	; s
		db    0
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db    0
		db  63h	; c
		db  68h	; h
		db  6Ch	; l
		db    0
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  2Eh	; .
		db  74h	; t
		db  72h	; r
		db  6Bh	; k
		db    0
		db  66h	; f
		db  65h	; e
		db  78h	; x
		db    0
		db  73h	; s
		db  65h	; e
		db  72h	; r
		db    0
		db  63h	; c
		db  68h	; h
		db  78h	; x
		db    0
		db    0
		db  65h	; e
		db  6Fh	; o
		db  6Bh	; k
		db  65h	; e
		db  6Eh	; n
		db  73h	; s
		db  65h	; e
		db  69h	; i
		db  65h	; e
		db  65h	; e
		db  6Dh	; m
		db  73h	; s
		db  65h	; e
		db  65h	; e
		db  64h	; d
		db  65h	; e
		db  77h	; w
		db  77h	; w
		db  65h	; e
		db  66h	; f
		db  75h	; u
		db  65h	; e
		db  6Eh	; n
		db  70h	; p
		db  65h	; e
		db  73h	; s
		db  74h	; t
		db  65h	; e
		db  6Ah	; j
		db  73h	; s
		db  65h	; e
		db  6Ah	; j
		db  64h	; d
		db  65h	; e
		db  74h	; t
		db  65h	; e
		db  65h	; e
		db  77h	; w
		db  61h	; a
		db  65h	; e
		db  66h	; f
		db  74h	; t
		db  65h	; e
		db  61h	; a
		db  74h	; t
		db    0
		db  74h	; t
		db  65h	; e
		db  72h	; r
byte_3ECBB	db 30h			; DATA XREF: sub_2A2BC+1376w
		db    0
		db    0
		db    0
		db  3Bh	; ;
		db    0
		db  3Ch	; <
		db    0
		db  3Dh	; =
		db    0
		db  3Eh	; >
		db    0
		db  3Fh	; ?
		db    0
		db  40h	; @
		db    0
		db  41h	; A
		db    0
		db  42h	; B
		db    0
		db  43h	; C
		db    0
		db  44h	; D
		db    0
		db    0
		db    0
		db    0
		db    9
		db    0
		db 0CAh	;  
		db    0
		db 0DCh	; ‹
		db    0
		db    8
		db    0
		db 0DCh	; ‹
		db    0
		db 0C7h	; «
		db    0
		db 0CEh	; Œ
		db    0
		db  3Bh	; ;
		db    1
		db 0C7h	; «
		db    0
		db  3Bh	; ;
		db    1
		db 0B5h	; µ
		db    0
		db    4
		db    0
		db  84h	; Ñ
		db    0
		db    4
		db    0
		db  24h	; $
		db    0
		db 0BBh	; ª
		db    0
		db 0B3h	; ≥
		db    0
		db  8Bh	; ã
		db    0
		db 0B3h	; ≥
		db    0
		db 0BBh	; ª
		db    0
		db  1Eh
		db    6
		db  1Dh
		db    9
		db  66h	; f
		db  6Ch	; l
		db  61h	; a
		db  74h	; t
		db  6Ch	; l
		db  61h	; a
		db  6Bh	; k
		db  65h	; e
		db  6Ch	; l
		db  61h	; a
		db  6Bh	; k
		db  31h	; 1
		db  6Ch	; l
		db  61h	; a
		db  6Bh	; k
		db  32h	; 2
		db  6Ch	; l
		db  61h	; a
		db  6Bh	; k
		db  33h	; 3
		db  6Ch	; l
		db  61h	; a
		db  6Bh	; k
		db  34h	; 4
		db  68h	; h
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  6Eh	; n
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  77h	; w
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  73h	; s
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  65h	; e
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  31h	; 1
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  32h	; 2
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  33h	; 3
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  34h	; 4
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  35h	; 5
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  36h	; 6
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  37h	; 7
		db  67h	; g
		db  6Fh	; o
		db  75h	; u
		db  38h	; 8
		db    0
		db    0
		db  63h	; c
		db  72h	; r
		db  73h	; s
		db  30h	; 0
		db  63h	; c
		db  72h	; r
		db  73h	; s
		db  31h	; 1
		db  63h	; c
		db  72h	; r
		db  73h	; s
		db  32h	; 2
		db  63h	; c
		db  72h	; r
		db  73h	; s
		db  33h	; 3
		db    0
		db    0
		db  75h	; u
		db  63h	; c
		db  72h	; r
		db  30h	; 0
		db  75h	; u
		db  63h	; c
		db  72h	; r
		db  31h	; 1
		db  75h	; u
		db  63h	; c
		db  72h	; r
		db  32h	; 2
		db  75h	; u
		db  63h	; c
		db  72h	; r
		db  33h	; 3
		db    0
		db    0
word_3ED74	dw 0			; DATA XREF: start+4Ew	__myalloc+8r ...
word_3ED76	dw 0			; DATA XREF: start+42w
off_3ED78	dw offset sub_2CE03	; DATA XREF: start+AAw	start+C1r
word_3ED7A	dw 0			; DATA XREF: start+3Dw	__myalloc+2r ...
		dw seg dseg
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3EDCA	dw 360Ah		; DATA XREF: _brkctl:loc_2E241r
					; _brkctl+61w
aC_file_info	db ';C_FILE_INFO',0
dword_3EDD9	dd 0			; DATA XREF: seg010:00E4w sub_2CE4A+Er ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3EDE5	dw 0			; DATA XREF: sub_2D1BC+26w
		db    0
		db    0
		db    0
		db    0
word_3EDEB	dw 0			; DATA XREF: start+62w	seg010:00FEr ...
byte_3EDED	db 0			; DATA XREF: __setargv+Br sub_2D1BC+7r
		db    0
		db    0
byte_3EDF0	db 0			; DATA XREF: sub_2D1BCw
		db    0
word_3EDF2	dw 14h			; DATA XREF: _lseek+9r	_write+9r ...
		db  81h	; Å
		db  81h	; Å
		db  81h	; Å
		db    1
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
; int argc
argc		dw 0			; DATA XREF: start+93r	__setargv+C2w
; char **argv
argv		dw 0			; DATA XREF: start+8Fr	__setargv+D4w
word_3EE0C	dw 0			; DATA XREF: start+8Br	__setenvp+44w
word_3EE0E	dw 36A2h		; DATA XREF: __setargv+2Dw
					; __setargv+E2r
seg_3EE10	dw seg dseg		; DATA XREF: __setargv+1Aw
		db  43h	; C
		db    0
word_3EE14	dw 0			; DATA XREF: seg010:1B01r
byte_3EE16	db 0			; DATA XREF: sub_2CE4A+18r
byte_3EE17	db 0			; DATA XREF: sub_2CE4A+20r
dword_3EE18	dd 0			; DATA XREF: sub_2CE4A+23r
unk_3EE1C	db    0			; DATA XREF: __FF_MSGBANNER+13r
		db    0
word_3EE1E	dw 0			; DATA XREF: __FF_MSGBANNER+Cr
dword_3EE20	dd 0FFFFFFFFh		; DATA XREF: __chkstk:loc_2CEC7r
					; __chkstk+20r
word_3EE24	dw 0AE20h		; DATA XREF: __chkstk+8r
					; _stackavail+2r
dword_3EE26	dd 0			; DATA XREF: __setargvw __setargv+18Er ...
		db    0
		db  16h
		db    2
		db    2
		db  18h
		db  0Dh
		db    9
		db  0Ch
		db  0Ch
		db  0Ch
		db    7
		db    8
		db  16h
		db  16h
		db 0FFh
		db  12h
		db  0Dh
		db  12h
		db    2
		db 0FFh
word_3EE3E	dw 0			; DATA XREF: __flsbuf+92w __stbuf+Aw
		db  76h	; v
		db  93h	; ì
		db    0
		db    0
		db  76h	; v
		db  93h	; ì
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  84h	; Ñ
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3EF58	dw 3768h		; DATA XREF: _flushall:loc_2D210r
aNull		db '(null)',0
aNull_0		db '(null)',0
		db '+- #',0
		db    0
word_3EF6E	dw 0			; DATA XREF: unknown_libname_2+1Fw
word_3EF70	dw 0			; DATA XREF: unknown_libname_2+22w
		db    0
		db    0
word_3EF74	dw 0			; DATA XREF: unknown_libname_2+32w
		db    0
		db    0
word_3EF78	dw 0			; DATA XREF: __amalloc+A2r
		db    0
		db    0
word_3EF7C	dw 0			; DATA XREF: __amalloc+4Fw
					; __amalloc+D6w
word_3EF7E	dw 2000h		; DATA XREF: __amexpand:loc_2E1B4r
		db    0
		db    0
byte_3EF82	db 0			; DATA XREF: __amalloc:loc_2E119w
					; __amalloc:loc_2E154w
		db    0
off_3EF84	dd __fptrap		; DATA XREF: fprint+53r
off_3EF88	dd __fptrap		; DATA XREF: seg010:0F2Br
		dd __fptrap
off_3EF90	dd __fptrap		; DATA XREF: seg010:0F44r
off_3EF94	dd __fptrap		; DATA XREF: seg010:0F62r
word_3EF98	dw 0			; DATA XREF: _signal:loc_2E6C8r
					; _signal+5Aw ...
word_3EF9A	dw 0			; DATA XREF: _signal+5Ew seg010:1B35r
		db    1
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  48h	; H
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  84h	; Ñ
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  81h	; Å
		db  81h	; Å
		db  81h	; Å
		db  81h	; Å
		db  81h	; Å
		db  81h	; Å
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  10h
		db  82h	; Ç
		db  82h	; Ç
		db  82h	; Ç
		db  82h	; Ç
		db  82h	; Ç
		db  82h	; Ç
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db  10h
		db  10h
		db  10h
		db  10h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3F0A0	dw 1			; DATA XREF: _srand+6w	_rand+Cr ...
word_3F0A2	dw 0			; DATA XREF: _srand+9w	_rand+8r ...
word_3F0A4	dw 0			; DATA XREF: __sigentry+1Do
					; seg010:1B08r	...
word_3F0A6	dw 0			; DATA XREF: seg010:1B0Br seg010:1B5Bw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
dword_3F0BC	dd 0			; DATA XREF: seg010:loc_2E799w
					; seg010:1B63r	...
		db    0
		db    1
		db    1
		db    2
		db    3
		db    3
		db    4
		db    4
		db    5
		db    6
		db    6
		db    7
		db    8
		db    8
		db    9
		db  0Ah
		db  0Ah
		db  0Bh
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Dh
		db  0Eh
		db  0Fh
		db  0Fh
		db  10h
		db  10h
		db  11h
		db  12h
		db  12h
		db  13h
		db  14h
		db  14h
		db  15h
		db  16h
		db  16h
		db  17h
		db  17h
		db  18h
		db  19h
		db  19h
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Ch
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Fh
		db  1Fh
		db  20h
		db  21h	; !
		db  21h	; !
		db  22h	; "
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  27h	; '
		db  28h	; (
		db  29h	; )
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Dh	; -
		db  2Dh	; -
		db  2Eh	; .
		db  2Eh	; .
		db  2Fh	; /
		db  30h	; 0
		db  30h	; 0
		db  31h	; 1
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  33h	; 3
		db  34h	; 4
		db  34h	; 4
		db  35h	; 5
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  37h	; 7
		db  38h	; 8
		db  38h	; 8
		db  39h	; 9
		db  39h	; 9
		db  3Ah	; :
		db  3Ah	; :
		db  3Bh	; ;
		db  3Ch	; <
		db  3Ch	; <
		db  3Dh	; =
		db  3Dh	; =
		db  3Eh	; >
		db  3Eh	; >
		db  3Fh	; ?
		db  3Fh	; ?
		db  40h	; @
		db  41h	; A
		db  41h	; A
		db  42h	; B
		db  42h	; B
		db  43h	; C
		db  43h	; C
		db  44h	; D
		db  44h	; D
		db  45h	; E
		db  45h	; E
		db  46h	; F
		db  46h	; F
		db  47h	; G
		db  47h	; G
		db  48h	; H
		db  48h	; H
		db  49h	; I
		db  4Ah	; J
		db  4Ah	; J
		db  4Bh	; K
		db  4Bh	; K
		db  4Ch	; L
		db  4Ch	; L
		db  4Dh	; M
		db  4Dh	; M
		db  4Eh	; N
		db  4Eh	; N
		db  4Fh	; O
		db  4Fh	; O
		db  50h	; P
		db  50h	; P
		db  51h	; Q
		db  51h	; Q
		db  52h	; R
		db  52h	; R
		db  53h	; S
		db  53h	; S
		db  54h	; T
		db  54h	; T
		db  54h	; T
		db  55h	; U
		db  55h	; U
		db  56h	; V
		db  56h	; V
		db  57h	; W
		db  57h	; W
		db  58h	; X
		db  58h	; X
		db  59h	; Y
		db  59h	; Y
		db  5Ah	; Z
		db  5Ah	; Z
		db  5Bh	; [
		db  5Bh	; [
		db  5Bh	; [
		db  5Ch	; \
		db  5Ch	; \
		db  5Dh	; ]
		db  5Dh	; ]
		db  5Eh	; ^
		db  5Eh	; ^
		db  5Fh	; _
		db  5Fh	; _
		db  60h	; `
		db  60h	; `
		db  60h	; `
		db  61h	; a
		db  61h	; a
		db  62h	; b
		db  62h	; b
		db  63h	; c
		db  63h	; c
		db  63h	; c
		db  64h	; d
		db  64h	; d
		db  65h	; e
		db  65h	; e
		db  66h	; f
		db  66h	; f
		db  66h	; f
		db  67h	; g
		db  67h	; g
		db  68h	; h
		db  68h	; h
		db  68h	; h
		db  69h	; i
		db  69h	; i
		db  6Ah	; j
		db  6Ah	; j
		db  6Ah	; j
		db  6Bh	; k
		db  6Bh	; k
		db  6Ch	; l
		db  6Ch	; l
		db  6Ch	; l
		db  6Dh	; m
		db  6Dh	; m
		db  6Eh	; n
		db  6Eh	; n
		db  6Eh	; n
		db  6Fh	; o
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
		db  70h	; p
		db  71h	; q
		db  71h	; q
		db  71h	; q
		db  72h	; r
		db  72h	; r
		db  73h	; s
		db  73h	; s
		db  73h	; s
		db  74h	; t
		db  74h	; t
		db  74h	; t
		db  75h	; u
		db  75h	; u
		db  76h	; v
		db  76h	; v
		db  76h	; v
		db  77h	; w
		db  77h	; w
		db  77h	; w
		db  78h	; x
		db  78h	; x
		db  78h	; x
		db  79h	; y
		db  79h	; y
		db  79h	; y
		db  7Ah	; z
		db  7Ah	; z
		db  7Ah	; z
		db  7Bh	; {
		db  7Bh	; {
		db  7Bh	; {
		db  7Ch	; |
		db  7Ch	; |
		db  7Ch	; |
		db  7Dh	; }
		db  7Dh	; }
		db  7Dh	; }
		db  7Eh	; ~
		db  7Eh	; ~
		db  7Eh	; ~
		db  7Fh	; 
		db  7Fh	; 
		db  7Fh	; 
		db  80h	; Ä
		db  80h	; Ä
		db    0
word_3F1C2	dw 0			; DATA XREF: sub_2EADE+Ew seg012:00E0r ...
word_3F1C4	dw 0			; DATA XREF: sub_2EADE+11w
					; seg012:00DAr	...
		db    0
		db    0
		db    3
		db    0
		db  0Ch
		db    0
		db  0Fh
		db    0
		db  30h	; 0
		db    0
		db  33h	; 3
		db    0
		db  3Ch	; <
		db    0
		db  3Fh	; ?
		db    0
		db 0C0h	; ¿
		db    0
		db 0C3h	; √
		db    0
		db 0CCh	; Ã
		db    0
		db 0CFh	; œ
		db    0
		db 0F0h	; 
		db    0
		db 0F3h	; Û
		db    0
		db 0FCh	; ¸
		db    0
		db 0FFh
		db    0
		db    0
		db    3
		db    3
		db    3
		db  0Ch
		db    3
		db  0Fh
		db    3
		db  30h	; 0
		db    3
		db  33h	; 3
		db    3
		db  3Ch	; <
		db    3
		db  3Fh	; ?
		db    3
		db 0C0h	; ¿
		db    3
		db 0C3h	; √
		db    3
		db 0CCh	; Ã
		db    3
		db 0CFh	; œ
		db    3
		db 0F0h	; 
		db    3
		db 0F3h	; Û
		db    3
		db 0FCh	; ¸
		db    3
		db 0FFh
		db    3
		db    0
		db  0Ch
		db    3
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Fh
		db  0Ch
		db  30h	; 0
		db  0Ch
		db  33h	; 3
		db  0Ch
		db  3Ch	; <
		db  0Ch
		db  3Fh	; ?
		db  0Ch
		db 0C0h	; ¿
		db  0Ch
		db 0C3h	; √
		db  0Ch
		db 0CCh	; Ã
		db  0Ch
		db 0CFh	; œ
		db  0Ch
		db 0F0h	; 
		db  0Ch
		db 0F3h	; Û
		db  0Ch
		db 0FCh	; ¸
		db  0Ch
		db 0FFh
		db  0Ch
		db    0
		db  0Fh
		db    3
		db  0Fh
		db  0Ch
		db  0Fh
		db  0Fh
		db  0Fh
		db  30h	; 0
		db  0Fh
		db  33h	; 3
		db  0Fh
		db  3Ch	; <
		db  0Fh
		db  3Fh	; ?
		db  0Fh
		db 0C0h	; ¿
		db  0Fh
		db 0C3h	; √
		db  0Fh
		db 0CCh	; Ã
		db  0Fh
		db 0CFh	; œ
		db  0Fh
		db 0F0h	; 
		db  0Fh
		db 0F3h	; Û
		db  0Fh
		db 0FCh	; ¸
		db  0Fh
		db 0FFh
		db  0Fh
		db    0
		db  30h	; 0
		db    3
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db  0Fh
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  33h	; 3
		db  30h	; 0
		db  3Ch	; <
		db  30h	; 0
		db  3Fh	; ?
		db  30h	; 0
		db 0C0h	; ¿
		db  30h	; 0
		db 0C3h	; √
		db  30h	; 0
		db 0CCh	; Ã
		db  30h	; 0
		db 0CFh	; œ
		db  30h	; 0
		db 0F0h	; 
		db  30h	; 0
		db 0F3h	; Û
		db  30h	; 0
		db 0FCh	; ¸
		db  30h	; 0
		db 0FFh
		db  30h	; 0
		db    0
		db  33h	; 3
		db    3
		db  33h	; 3
		db  0Ch
		db  33h	; 3
		db  0Fh
		db  33h	; 3
		db  30h	; 0
		db  33h	; 3
		db  33h	; 3
		db  33h	; 3
		db  3Ch	; <
		db  33h	; 3
		db  3Fh	; ?
		db  33h	; 3
		db 0C0h	; ¿
		db  33h	; 3
		db 0C3h	; √
		db  33h	; 3
		db 0CCh	; Ã
		db  33h	; 3
		db 0CFh	; œ
		db  33h	; 3
		db 0F0h	; 
		db  33h	; 3
		db 0F3h	; Û
		db  33h	; 3
		db 0FCh	; ¸
		db  33h	; 3
		db 0FFh
		db  33h	; 3
		db    0
		db  3Ch	; <
		db    3
		db  3Ch	; <
		db  0Ch
		db  3Ch	; <
		db  0Fh
		db  3Ch	; <
		db  30h	; 0
		db  3Ch	; <
		db  33h	; 3
		db  3Ch	; <
		db  3Ch	; <
		db  3Ch	; <
		db  3Fh	; ?
		db  3Ch	; <
		db 0C0h	; ¿
		db  3Ch	; <
		db 0C3h	; √
		db  3Ch	; <
		db 0CCh	; Ã
		db  3Ch	; <
		db 0CFh	; œ
		db  3Ch	; <
		db 0F0h	; 
		db  3Ch	; <
		db 0F3h	; Û
		db  3Ch	; <
		db 0FCh	; ¸
		db  3Ch	; <
		db 0FFh
		db  3Ch	; <
		db    0
		db  3Fh	; ?
		db    3
		db  3Fh	; ?
		db  0Ch
		db  3Fh	; ?
		db  0Fh
		db  3Fh	; ?
		db  30h	; 0
		db  3Fh	; ?
		db  33h	; 3
		db  3Fh	; ?
		db  3Ch	; <
		db  3Fh	; ?
		db  3Fh	; ?
		db  3Fh	; ?
		db 0C0h	; ¿
		db  3Fh	; ?
		db 0C3h	; √
		db  3Fh	; ?
		db 0CCh	; Ã
		db  3Fh	; ?
		db 0CFh	; œ
		db  3Fh	; ?
		db 0F0h	; 
		db  3Fh	; ?
		db 0F3h	; Û
		db  3Fh	; ?
		db 0FCh	; ¸
		db  3Fh	; ?
		db 0FFh
		db  3Fh	; ?
		db    0
		db 0C0h	; ¿
		db    3
		db 0C0h	; ¿
		db  0Ch
		db 0C0h	; ¿
		db  0Fh
		db 0C0h	; ¿
		db  30h	; 0
		db 0C0h	; ¿
		db  33h	; 3
		db 0C0h	; ¿
		db  3Ch	; <
		db 0C0h	; ¿
		db  3Fh	; ?
		db 0C0h	; ¿
		db 0C0h	; ¿
		db 0C0h	; ¿
		db 0C3h	; √
		db 0C0h	; ¿
		db 0CCh	; Ã
		db 0C0h	; ¿
		db 0CFh	; œ
		db 0C0h	; ¿
		db 0F0h	; 
		db 0C0h	; ¿
		db 0F3h	; Û
		db 0C0h	; ¿
		db 0FCh	; ¸
		db 0C0h	; ¿
		db 0FFh
		db 0C0h	; ¿
		db    0
		db 0C3h	; √
		db    3
		db 0C3h	; √
		db  0Ch
		db 0C3h	; √
		db  0Fh
		db 0C3h	; √
		db  30h	; 0
		db 0C3h	; √
		db  33h	; 3
		db 0C3h	; √
		db  3Ch	; <
		db 0C3h	; √
		db  3Fh	; ?
		db 0C3h	; √
		db 0C0h	; ¿
		db 0C3h	; √
		db 0C3h	; √
		db 0C3h	; √
		db 0CCh	; Ã
		db 0C3h	; √
		db 0CFh	; œ
		db 0C3h	; √
		db 0F0h	; 
		db 0C3h	; √
		db 0F3h	; Û
		db 0C3h	; √
		db 0FCh	; ¸
		db 0C3h	; √
		db 0FFh
		db 0C3h	; √
		db    0
		db 0CCh	; Ã
		db    3
		db 0CCh	; Ã
		db  0Ch
		db 0CCh	; Ã
		db  0Fh
		db 0CCh	; Ã
		db  30h	; 0
		db 0CCh	; Ã
		db  33h	; 3
		db 0CCh	; Ã
		db  3Ch	; <
		db 0CCh	; Ã
		db  3Fh	; ?
		db 0CCh	; Ã
		db 0C0h	; ¿
		db 0CCh	; Ã
		db 0C3h	; √
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CCh	; Ã
		db 0CFh	; œ
		db 0CCh	; Ã
		db 0F0h	; 
		db 0CCh	; Ã
		db 0F3h	; Û
		db 0CCh	; Ã
		db 0FCh	; ¸
		db 0CCh	; Ã
		db 0FFh
		db 0CCh	; Ã
		db    0
		db 0CFh	; œ
		db    3
		db 0CFh	; œ
		db  0Ch
		db 0CFh	; œ
		db  0Fh
		db 0CFh	; œ
		db  30h	; 0
		db 0CFh	; œ
		db  33h	; 3
		db 0CFh	; œ
		db  3Ch	; <
		db 0CFh	; œ
		db  3Fh	; ?
		db 0CFh	; œ
		db 0C0h	; ¿
		db 0CFh	; œ
		db 0C3h	; √
		db 0CFh	; œ
		db 0CCh	; Ã
		db 0CFh	; œ
		db 0CFh	; œ
		db 0CFh	; œ
		db 0F0h	; 
		db 0CFh	; œ
		db 0F3h	; Û
		db 0CFh	; œ
		db 0FCh	; ¸
		db 0CFh	; œ
		db 0FFh
		db 0CFh	; œ
		db    0
		db 0F0h	; 
		db    3
		db 0F0h	; 
		db  0Ch
		db 0F0h	; 
		db  0Fh
		db 0F0h	; 
		db  30h	; 0
		db 0F0h	; 
		db  33h	; 3
		db 0F0h	; 
		db  3Ch	; <
		db 0F0h	; 
		db  3Fh	; ?
		db 0F0h	; 
		db 0C0h	; ¿
		db 0F0h	; 
		db 0C3h	; √
		db 0F0h	; 
		db 0CCh	; Ã
		db 0F0h	; 
		db 0CFh	; œ
		db 0F0h	; 
		db 0F0h	; 
		db 0F0h	; 
		db 0F3h	; Û
		db 0F0h	; 
		db 0FCh	; ¸
		db 0F0h	; 
		db 0FFh
		db 0F0h	; 
		db    0
		db 0F3h	; Û
		db    3
		db 0F3h	; Û
		db  0Ch
		db 0F3h	; Û
		db  0Fh
		db 0F3h	; Û
		db  30h	; 0
		db 0F3h	; Û
		db  33h	; 3
		db 0F3h	; Û
		db  3Ch	; <
		db 0F3h	; Û
		db  3Fh	; ?
		db 0F3h	; Û
		db 0C0h	; ¿
		db 0F3h	; Û
		db 0C3h	; √
		db 0F3h	; Û
		db 0CCh	; Ã
		db 0F3h	; Û
		db 0CFh	; œ
		db 0F3h	; Û
		db 0F0h	; 
		db 0F3h	; Û
		db 0F3h	; Û
		db 0F3h	; Û
		db 0FCh	; ¸
		db 0F3h	; Û
		db 0FFh
		db 0F3h	; Û
		db    0
		db 0FCh	; ¸
		db    3
		db 0FCh	; ¸
		db  0Ch
		db 0FCh	; ¸
		db  0Fh
		db 0FCh	; ¸
		db  30h	; 0
		db 0FCh	; ¸
		db  33h	; 3
		db 0FCh	; ¸
		db  3Ch	; <
		db 0FCh	; ¸
		db  3Fh	; ?
		db 0FCh	; ¸
		db 0C0h	; ¿
		db 0FCh	; ¸
		db 0C3h	; √
		db 0FCh	; ¸
		db 0CCh	; Ã
		db 0FCh	; ¸
		db 0CFh	; œ
		db 0FCh	; ¸
		db 0F0h	; 
		db 0FCh	; ¸
		db 0F3h	; Û
		db 0FCh	; ¸
		db 0FCh	; ¸
		db 0FCh	; ¸
		db 0FFh
		db 0FCh	; ¸
		db    0
		db 0FFh
		db    3
		db 0FFh
		db  0Ch
		db 0FFh
		db  0Fh
		db 0FFh
		db  30h	; 0
		db 0FFh
		db  33h	; 3
		db 0FFh
		db  3Ch	; <
		db 0FFh
		db  3Fh	; ?
		db 0FFh
		db 0C0h	; ¿
		db 0FFh
		db 0C3h	; √
		db 0FFh
		db 0CCh	; Ã
		db 0FFh
		db 0CFh	; œ
		db 0FFh
		db 0F0h	; 
		db 0FFh
		db 0F3h	; Û
		db 0FFh
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db 0FFh
		db  28h	; (
		db    0
		db 0A8h	; ®
		db  3Ch	; <
		db 0A8h	; ®
		db  3Ch	; <
		db 0A9h	; ©
		db  3Ch	; <
		db 0ABh	; ´
		db  3Ch	; <
		db 0AEh	; Æ
		db  3Ch	; <
		db 0B2h	; ≤
		db  3Ch	; <
		db 0B7h	; ∑
		db  3Ch	; <
		db 0BDh	; Ω
		db  3Ch	; <
		db 0C4h	; ƒ
		db  3Ch	; <
		db 0CCh	; Ã
		db  3Ch	; <
		db 0D5h	; ’
		db  3Ch	; <
		db 0DFh	; ﬂ
		db  3Ch	; <
		db 0EAh	; Í
		db  3Ch	; <
		db 0F6h	; ˆ
		db  3Ch	; <
		db    3
		db  3Dh	; =
		db  11h
		db  3Dh	; =
		db  20h
		db  3Dh	; =
		db  30h	; 0
		db  3Dh	; =
		db  41h	; A
		db  3Dh	; =
		db  53h	; S
		db  3Dh	; =
		db  66h	; f
		db  3Dh	; =
		db  7Ah	; z
		db  3Dh	; =
		db  8Fh	; è
		db  3Dh	; =
		db 0A5h	; •
		db  3Dh	; =
		db 0BCh	; º
		db  3Dh	; =
		db 0D4h	; ‘
		db  3Dh	; =
		db 0EDh	; Ì
		db  3Dh	; =
		db    7
		db  3Eh	; >
		db  22h	; "
		db  3Eh	; >
		db  3Eh	; >
		db  3Eh	; >
		db  5Bh	; [
		db  3Eh	; >
		db  79h	; y
		db  3Eh	; >
		db  98h	; ò
		db  3Eh	; >
		db 0B8h	; ∏
		db  3Eh	; >
		db 0D9h	; Ÿ
		db  3Eh	; >
		db 0FBh	; ˚
		db  3Eh	; >
		db  1Eh
		db  3Fh	; ?
		db  42h	; B
		db  3Fh	; ?
		db  67h	; g
		db  3Fh	; ?
		db  8Dh	; ç
		db  3Fh	; ?
		db    1
		db    2
		db    3
		db    3
		db    4
		db    4
		db    3
		db    4
		db    5
		db    5
		db    4
		db    5
		db    6
		db    6
		db    6
		db    4
		db    6
		db    6
		db    7
		db    7
		db    8
		db    5
		db    6
		db    7
		db    8
		db    8
		db    9
		db    9
		db    5
		db    7
		db    8
		db    9
		db    9
		db  0Ah
		db  0Ah
		db  0Ah
		db    5
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db    5
		db    8
		db    9
		db  0Ah
		db  0Bh
		db  0Bh
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Dh
		db    6
		db    8
		db    9
		db  0Bh
		db  0Ch
		db  0Ch
		db  0Dh
		db  0Dh
		db  0Eh
		db  0Eh
		db  0Eh
		db    6
		db    8
		db  0Ah
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Eh
		db  0Fh
		db  0Fh
		db  0Fh
		db  0Fh
		db    6
		db    9
		db  0Ah
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Eh
		db  0Fh
		db  0Fh
		db  10h
		db  10h
		db  10h
		db  10h
		db    6
		db    9
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db  10h
		db  11h
		db  11h
		db  11h
		db  11h
		db  12h
		db    7
		db    9
		db  0Bh
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db  11h
		db  11h
		db  12h
		db  12h
		db  12h
		db  13h
		db  13h
		db  13h
		db    7
		db  0Ah
		db  0Ch
		db  0Dh
		db  0Fh
		db  10h
		db  11h
		db  11h
		db  12h
		db  13h
		db  13h
		db  13h
		db  14h
		db  14h
		db  14h
		db  14h
		db    7
		db  0Ah
		db  0Ch
		db  0Eh
		db  0Fh
		db  10h
		db  11h
		db  12h
		db  13h
		db  13h
		db  14h
		db  14h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db    7
		db  0Ah
		db  0Ch
		db  0Eh
		db  10h
		db  11h
		db  12h
		db  13h
		db  13h
		db  14h
		db  15h
		db  15h
		db  16h
		db  16h
		db  16h
		db  16h
		db  16h
		db  17h
		db    8
		db  0Bh
		db  0Dh
		db  0Fh
		db  10h
		db  11h
		db  12h
		db  13h
		db  14h
		db  15h
		db  16h
		db  16h
		db  17h
		db  17h
		db  17h
		db  17h
		db  18h
		db  18h
		db  18h
		db    8
		db  0Bh
		db  0Dh
		db  0Fh
		db  11h
		db  12h
		db  13h
		db  14h
		db  15h
		db  16h
		db  16h
		db  17h
		db  17h
		db  18h
		db  18h
		db  18h
		db  19h
		db  19h
		db  19h
		db  19h
		db    8
		db  0Bh
		db  0Eh
		db  0Fh
		db  11h
		db  12h
		db  14h
		db  15h
		db  16h
		db  16h
		db  17h
		db  18h
		db  18h
		db  19h
		db  19h
		db  19h
		db  1Ah
		db  1Ah
		db  1Ah
		db  1Ah
		db  1Ah
		db    8
		db  0Bh
		db  0Eh
		db  10h
		db  11h
		db  13h
		db  14h
		db  15h
		db  16h
		db  17h
		db  18h
		db  18h
		db  19h
		db  1Ah
		db  1Ah
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Bh
		db  1Bh
		db  1Bh
		db  1Ch
		db    8
		db  0Ch
		db  0Eh
		db  10h
		db  12h
		db  13h
		db  15h
		db  16h
		db  17h
		db  18h
		db  19h
		db  19h
		db  1Ah
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Ch
		db  1Ch
		db  1Ch
		db  1Dh
		db  1Dh
		db  1Dh
		db  1Dh
		db    9
		db  0Ch
		db  0Fh
		db  11h
		db  12h
		db  14h
		db  15h
		db  16h
		db  17h
		db  18h
		db  19h
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Ch
		db  1Ch
		db  1Dh
		db  1Dh
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Eh
		db  1Eh
		db  1Eh
		db    9
		db  0Ch
		db  0Fh
		db  11h
		db  13h
		db  14h
		db  16h
		db  17h
		db  18h
		db  19h
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Eh
		db  1Fh
		db  1Fh
		db  1Fh
		db  1Fh
		db  1Fh
		db  1Fh
		db    9
		db  0Dh
		db  0Fh
		db  11h
		db  13h
		db  15h
		db  16h
		db  17h
		db  19h
		db  1Ah
		db  1Bh
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Fh
		db  1Fh
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  21h	; !
		db    9
		db  0Dh
		db  0Fh
		db  12h
		db  14h
		db  15h
		db  17h
		db  18h
		db  19h
		db  1Ah
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Fh
		db  1Fh
		db  20h
		db  20h
		db  21h	; !
		db  21h	; !
		db  21h	; !
		db  21h	; !
		db  22h	; "
		db  22h	; "
		db  22h	; "
		db  22h	; "
		db    9
		db  0Dh
		db  10h
		db  12h
		db  14h
		db  16h
		db  17h
		db  18h
		db  1Ah
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Eh
		db  1Fh
		db  20h
		db  20h
		db  21h	; !
		db  21h	; !
		db  22h	; "
		db  22h	; "
		db  22h	; "
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db    9
		db  0Dh
		db  10h
		db  12h
		db  14h
		db  16h
		db  18h
		db  19h
		db  1Ah
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  20h
		db  21h	; !
		db  22h	; "
		db  22h	; "
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db  0Ah
		db  0Dh
		db  10h
		db  13h
		db  15h
		db  17h
		db  18h
		db  19h
		db  1Bh
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  20h
		db  21h	; !
		db  22h	; "
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  26h	; &
		db  0Ah
		db  0Eh
		db  11h
		db  13h
		db  15h
		db  17h
		db  19h
		db  1Ah
		db  1Bh
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db  24h	; $
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  0Ah
		db  0Eh
		db  11h
		db  13h
		db  15h
		db  17h
		db  19h
		db  1Ah
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  0Ah
		db  0Eh
		db  11h
		db  14h
		db  16h
		db  18h
		db  19h
		db  1Bh
		db  1Ch
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  0Ah
		db  0Eh
		db  11h
		db  14h
		db  16h
		db  18h
		db  1Ah
		db  1Bh
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  29h	; )
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  0Ah
		db  0Fh
		db  12h
		db  14h
		db  17h
		db  18h
		db  1Ah
		db  1Ch
		db  1Dh
		db  1Fh
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  2Bh	; +
		db  2Bh	; +
		db  2Bh	; +
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Ch	; ,
		db  0Bh
		db  0Fh
		db  12h
		db  15h
		db  17h
		db  19h
		db  1Bh
		db  1Ch
		db  1Eh
		db  1Fh
		db  20h
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  25h	; %
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  0Bh
		db  0Fh
		db  12h
		db  15h
		db  17h
		db  19h
		db  1Bh
		db  1Dh
		db  1Eh
		db  20h
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  0Bh
		db  0Fh
		db  12h
		db  15h
		db  18h
		db  1Ah
		db  1Bh
		db  1Dh
		db  1Fh
		db  20h
		db  21h	; !
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  28h	; (
		db  29h	; )
		db  2Ah	; *
		db  2Ah	; *
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Dh	; -
		db  2Dh	; -
		db  2Dh	; -
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  30h	; 0
		db  0Bh
		db  0Fh
		db  13h
		db  16h
		db  18h
		db  1Ah
		db  1Ch
		db  1Eh
		db  1Fh
		db  21h	; !
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  26h	; &
		db  27h	; '
		db  28h	; (
		db  29h	; )
		db  2Ah	; *
		db  2Bh	; +
		db  2Bh	; +
		db  2Ch	; ,
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  30h	; 0
		db  31h	; 1
		db  31h	; 1
		db  31h	; 1
		db  31h	; 1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  45h	; E
		db  58h	; X
		db  49h	; I
		db  54h	; T
		db  20h
		db  4Ch	; L
		db  49h	; I
		db  53h	; S
		db  54h	; T
		db  20h
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db  46h	; F
		db  4Ch	; L
		db  4Fh	; O
		db  57h	; W
		db  0Dh
		db  0Ah
		db    0
		db    0
		db  25h	; %
		db  73h	; s
		db  20h
		db  46h	; F
		db  49h	; I
		db  4Ch	; L
		db  45h	; E
		db  20h
		db  45h	; E
		db  52h	; R
		db  52h	; R
		db  4Fh	; O
		db  52h	; R
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3F7D8	dw 0			; DATA XREF: sub_2FFD4+1Bw
					; sub_2FFD4:loc_3000Bw	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_3F85A	db 0			; DATA XREF: sub_3005E+1w sub_30120+1r
		db    0
		db  35h	; 5
		db  28h	; (
		db  2Ch	; ,
		db    7
		db  79h	; y
		db    2
		db  64h	; d
		db  6Eh	; n
		db    2
		db    2
		db    0
		db    0
		db  61h	; a
		db  50h	; P
		db  52h	; R
		db  0Fh
		db  19h
		db    6
		db  19h
		db  19h
		db    2
		db  0Dh
		db  0Bh
		db  0Ch
dword_3F874	dd 0			; DATA XREF: sub_301A0+8Ew
					; sub_30268+20r ...
word_3F878	dw 0			; DATA XREF: seg012:1947w sub_32778+1r ...
word_3F87A	dw 0			; DATA XREF: seg012:194Dw sub_32778+4r ...
word_3F87C	dw 0			; DATA XREF: sub_2EAD4+1r seg012:191Fw
word_3F87E	dw 0			; DATA XREF: sub_2EAD4+4r seg012:1925w
byte_3F880	db 0			; DATA XREF: seg012:1778w
					; sub_301A0+10w ...
byte_3F881	db 0			; DATA XREF: sub_301A0+15w
					; sub_301A0+36w ...
word_3F882	dw 0			; DATA XREF: seg012:1772w
					; sub_301A0+52w ...
word_3F884	dw 0			; DATA XREF: seg012:1766w sub_301A0+4w ...
word_3F886	dw 0			; DATA XREF: seg012:176Cw sub_301A0+Aw ...
word_3F888	dw 0			; DATA XREF: seg012:1979r seg012:197Fw
word_3F88A	dw 0			; DATA XREF: seg012:loc_30392w
					; seg012:1976r	...
byte_3F88C	db 0			; DATA XREF: sub_301A0+5Ew
					; seg012:1954r	...
		db    3
word_3F88E	dw 0			; DATA XREF: sub_21B7A+2D4w
					; sub_29B32+Cw	...
word_3F890	dw 0			; DATA XREF: sub_301A0+63w
word_3F892	dw 0			; DATA XREF: sub_301A0+69w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  4Eh	; N
		db  4Fh	; O
		db  20h
		db  52h	; R
		db  4Fh	; O
		db  4Fh	; O
		db  4Dh	; M
		db  20h
		db  4Ch	; L
		db  45h	; E
		db  46h	; F
		db  54h	; T
		db  20h
		db  4Fh	; O
		db  4Eh	; N
		db  20h
		db  54h	; T
		db  49h	; I
		db  4Dh	; M
		db  45h	; E
		db  52h	; R
		db  20h
		db  49h	; I
		db  4Eh	; N
		db  54h	; T
		db  45h	; E
		db  52h	; R
		db  52h	; R
		db  55h	; U
		db  50h	; P
		db  54h	; T
		db  20h
		db  52h	; R
		db  4Fh	; O
		db  55h	; U
		db  54h	; T
		db  49h	; I
		db  4Eh	; N
		db  45h	; E
		db  20h
		db  4Ch	; L
		db  49h	; I
		db  53h	; S
		db  54h	; T
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_3F9CC	db    0			; DATA XREF: sub_32D7C+39o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_3F9E0	db 0			; DATA XREF: sub_30404+4r
					; sub_30404:loc_30412w	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db    0
		db  50h	; P
		db    0
		db    0
		db    0
		db  4Dh	; M
		db    0
		db  49h	; I
		db    0
		db  51h	; Q
		db    0
		db    0
		db    0
		db  4Bh	; K
		db    0
		db  47h	; G
		db    0
		db  4Fh	; O
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3FB02	dw 0			; DATA XREF: seg012:loc_304F6r
					; seg012:1AEBw
word_3FB04	dw 0			; DATA XREF: seg012:loc_304FFr
					; seg012:1AF4w
byte_3FB06	db 0			; DATA XREF: seg012:1AE5w
					; seg012:loc_3050Fw
		db    0
byte_3FB08	db 39h			; DATA XREF: sub_30538+4r seg012:1BACr
byte_3FB09	db 1Ch			; DATA XREF: sub_30538:loc_30549r
					; seg012:loc_305DAr
byte_3FB0A	db 47h			; DATA XREF: sub_30538:loc_30556r
byte_3FB0B	db 48h			; DATA XREF: sub_30538:loc_30563r
byte_3FB0C	db 49h			; DATA XREF: sub_30538:loc_30570r
byte_3FB0D	db 4Dh			; DATA XREF: sub_30538:loc_3057Dr
byte_3FB0E	db 51h			; DATA XREF: sub_30538:loc_3058Ar
byte_3FB0F	db 50h			; DATA XREF: sub_30538:loc_30597r
byte_3FB10	db 4Fh			; DATA XREF: sub_30538:loc_305A4r
byte_3FB11	db 4Bh			; DATA XREF: sub_30538:loc_305B1r
word_3FB12	dw 0			; DATA XREF: sub_305FC+18w
					; sub_305FC:loc_3064Fw	...
word_3FB14	dw 0			; DATA XREF: sub_305FC+1Ew
					; sub_305FC+47w ...
byte_3FB16	db 0			; DATA XREF: sub_305FC+13w
					; sub_305FC+19Fr
byte_3FB17	db 0			; DATA XREF: sub_305FC:loc_30606w
					; sub_305FC+F5w ...
word_3FB18	dw 50h			; DATA XREF: sub_305FC+60r
					; sub_305FC+7Cw ...
word_3FB1A	dw 0			; DATA XREF: sub_305FC+6Cr
					; sub_305FC+72w ...
word_3FB1C	dw 0			; DATA XREF: sub_305FC+80r
					; sub_305FC:loc_306B1r	...
word_3FB1E	dw 0			; DATA XREF: sub_305FC+C1r
					; sub_305FC+C7w ...
word_3FB20	dw 14h			; DATA XREF: sub_305FC+66w
					; sub_305FC+BBw ...
word_3FB22	dw 0			; DATA XREF: sub_305FC+ACw
					; sub_305FC:loc_306E5r
word_3FB24	dw 0			; DATA XREF: sub_305FC+A5w
					; sub_305FC+EFr
word_3FB26	dw 50h			; DATA XREF: sub_305FC+FDr
					; sub_305FC+119w ...
word_3FB28	dw 0			; DATA XREF: sub_305FC+109r
					; sub_305FC+10Fw ...
word_3FB2A	dw 0			; DATA XREF: sub_305FC+11Dr
					; sub_305FC:loc_30755r	...
word_3FB2C	dw 0			; DATA XREF: sub_305FC+165r
					; sub_305FC+16Bw ...
word_3FB2E	dw 14h			; DATA XREF: sub_305FC+103w
					; sub_305FC+15Fw ...
word_3FB30	dw 0			; DATA XREF: sub_305FC+149w
					; sub_305FC:loc_30789r
word_3FB32	dw 0			; DATA XREF: sub_305FC+142w
					; sub_305FC+193r
word_3FB34	dw 0			; DATA XREF: sub_305FC+91w
					; sub_307E3:loc_307EEr
word_3FB36	dw 0			; DATA XREF: sub_305FC+12Ew
					; seg012:loc_30805r
		db    0
		db    1
		db    5
		db    0
		db    3
		db    2
		db    4
		db    3
		db    7
		db    8
		db    6
		db    7
		db    0
		db    1
		db    5
		db    0
word_3FB48	dw 0			; DATA XREF: sub_30812+18w
					; sub_30883+Cr
word_3FB4A	dw 0			; DATA XREF: sub_30812+21w
					; sub_30883+19r
word_3FB4C	dw 0			; DATA XREF: sub_30812+36w
					; sub_30883+22r
word_3FB4E	dw 0			; DATA XREF: sub_30812+3Fw
					; sub_30883+2Br
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3FBD0	dw 0			; DATA XREF: seg012:loc_30935r
					; seg012:loc_30949w ...
word_3FBD2	dw 0			; DATA XREF: seg012:1F41w seg012:1FABr ...
word_3FBD4	dw 2			; DATA XREF: seg012:1F21r seg012:1F34r ...
word_3FBD6	dw 0			; DATA XREF: seg012:1F2Dr
					; seg012:loc_30964w ...
word_3FBD8	dw 0			; DATA XREF: seg012:loc_308FFw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_3FBF7	db 0			; DATA XREF: seg012:1EEFr
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_3FC04	db 0			; DATA XREF: seg012:1EF6r
					; seg012:loc_30A04r
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_3FC10	db 0			; DATA XREF: seg012:1EFDr seg012:1FE7r
		db    0
byte_3FC12	db 0			; DATA XREF: seg012:1EE8r
		db    0
byte_3FC14	db 0			; DATA XREF: seg012:1F04r
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  30h	; 0
		db  2Dh	; -
		db  3Dh	; =
		db    8
		db    9
		db  71h	; q
		db  77h	; w
		db  65h	; e
		db  72h	; r
		db  74h	; t
		db  79h	; y
		db  75h	; u
		db  69h	; i
		db  6Fh	; o
		db  70h	; p
		db  5Bh	; [
		db  5Dh	; ]
		db  0Dh
		db    0
		db  61h	; a
		db  73h	; s
		db  64h	; d
		db  66h	; f
		db  67h	; g
		db  68h	; h
		db  6Ah	; j
		db  6Bh	; k
		db  6Ch	; l
		db  3Bh	; ;
		db  27h	; '
		db  60h	; `
		db    0
		db  5Ch	; \
		db  7Ah	; z
		db  78h	; x
		db  63h	; c
		db  76h	; v
		db  62h	; b
		db  6Eh	; n
		db  6Dh	; m
		db  2Ch	; ,
		db  2Eh	; .
		db  2Fh	; /
		db    0
		db  2Ah	; *
		db    0
		db  20h
		db    0
		db 0BBh	; ª
		db 0BCh	; º
		db 0BDh	; Ω
		db 0BEh	; æ
		db 0BFh	; ø
		db 0C0h	; ¿
		db 0C1h	; ¡
		db 0C2h	; ¬
		db 0C3h	; √
		db 0C4h	; ƒ
		db    0
		db    0
		db 0C7h	; «
		db 0C8h	; »
		db 0C9h	; …
		db  2Dh	; -
		db 0CBh	; À
		db 0CCh	; Ã
		db 0CDh	; Õ
		db  2Bh	; +
		db 0CFh	; œ
		db 0D0h	; –
		db 0D1h	; —
		db 0D2h	; “
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  21h	; !
		db  40h	; @
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  5Eh	; ^
		db  26h	; &
		db  2Ah	; *
		db  28h	; (
		db  29h	; )
		db  5Fh	; _
		db  2Bh	; +
		db    8
		db  8Fh	; è
		db  51h	; Q
		db  57h	; W
		db  45h	; E
		db  52h	; R
		db  54h	; T
		db  59h	; Y
		db  55h	; U
		db  49h	; I
		db  4Fh	; O
		db  50h	; P
		db  7Bh	; {
		db  7Dh	; }
		db  0Dh
		db    0
		db  41h	; A
		db  53h	; S
		db  44h	; D
		db  46h	; F
		db  47h	; G
		db  48h	; H
		db  4Ah	; J
		db  4Bh	; K
		db  4Ch	; L
		db  3Ah	; :
		db  22h	; "
		db  7Eh	; ~
		db    0
		db  7Ch	; |
		db  5Ah	; Z
		db  58h	; X
		db  43h	; C
		db  56h	; V
		db  42h	; B
		db  4Eh	; N
		db  4Dh	; M
		db  3Ch	; <
		db  3Eh	; >
		db  3Fh	; ?
		db    0
		db    0
		db    0
		db  20h
		db    0
		db 0D4h	; ‘
		db 0D5h	; ’
		db 0D6h	; ÷
		db 0D7h	; ◊
		db 0D8h	; ÿ
		db 0D9h	; Ÿ
		db 0DAh	; ⁄
		db 0DBh	; €
		db 0DCh	; ‹
		db 0DDh	; ›
		db    0
		db    0
		db 0C7h	; «
		db 0C8h	; »
		db 0C9h	; …
		db  2Dh	; -
		db 0CBh	; À
		db 0CCh	; Ã
		db 0CDh	; Õ
		db  2Bh	; +
		db 0CFh	; œ
		db 0D0h	; –
		db 0D1h	; —
		db 0D2h	; “
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  30h	; 0
		db  2Dh	; -
		db  3Dh	; =
		db    8
		db  8Fh	; è
		db  51h	; Q
		db  57h	; W
		db  45h	; E
		db  52h	; R
		db  54h	; T
		db  59h	; Y
		db  55h	; U
		db  49h	; I
		db  4Fh	; O
		db  50h	; P
		db  5Bh	; [
		db  5Dh	; ]
		db  0Dh
		db    0
		db  41h	; A
		db  53h	; S
		db  44h	; D
		db  46h	; F
		db  47h	; G
		db  48h	; H
		db  4Ah	; J
		db  4Bh	; K
		db  4Ch	; L
		db  3Bh	; ;
		db  27h	; '
		db  60h	; `
		db    0
		db  5Ch	; \
		db  5Ah	; Z
		db  58h	; X
		db  43h	; C
		db  56h	; V
		db  42h	; B
		db  4Eh	; N
		db  4Dh	; M
		db  2Ch	; ,
		db  2Eh	; .
		db  2Fh	; /
		db    0
		db    0
		db    0
		db  20h
		db    0
		db 0D4h	; ‘
		db 0D5h	; ’
		db 0D6h	; ÷
		db 0D7h	; ◊
		db 0D8h	; ÿ
		db 0D9h	; Ÿ
		db 0DAh	; ⁄
		db 0DBh	; €
		db 0DCh	; ‹
		db 0DDh	; ›
		db    0
		db    0
		db 0C7h	; «
		db 0C8h	; »
		db 0C9h	; …
		db  2Dh	; -
		db 0CBh	; À
		db 0CCh	; Ã
		db 0CDh	; Õ
		db  2Bh	; +
		db 0CFh	; œ
		db 0D0h	; –
		db 0D1h	; —
		db 0D2h	; “
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  21h	; !
		db    0
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  1Eh
		db  26h	; &
		db  2Ah	; *
		db  28h	; (
		db  29h	; )
		db  1Fh
		db  2Bh	; +
		db  7Fh	; 
		db    9
		db  11h
		db  17h
		db    5
		db  12h
		db  14h
		db  19h
		db  15h
		db    9
		db  0Fh
		db  10h
		db  1Bh
		db  1Dh
		db  0Dh
		db    0
		db    1
		db  13h
		db    4
		db    6
		db    7
		db    8
		db  0Ah
		db  0Bh
		db  0Ch
		db  3Bh	; ;
		db  2Ch	; ,
		db  60h	; `
		db    0
		db  1Ch
		db  1Ah
		db  18h
		db    3
		db  16h
		db    2
		db  0Eh
		db 0B2h	; ≤
		db  3Ch	; <
		db  3Eh	; >
		db  3Fh	; ?
		db    0
		db    0
		db    0
		db  20h
		db    0
		db 0DEh	; ﬁ
		db 0DFh	; ﬂ
		db 0E0h	; ‡
		db 0E1h	; ·
		db 0E2h	; ‚
		db 0E3h	; „
		db 0E4h	; ‰
		db 0E5h	; Â
		db 0E6h	; Ê
		db 0E7h	; Á
		db    0
		db    0
		db 0C7h	; «
		db 0C8h	; »
		db 0C9h	; …
		db  2Dh	; -
		db 0CBh	; À
		db 0CCh	; Ã
		db 0CDh	; Õ
		db  2Bh	; +
		db 0CFh	; œ
		db 0D0h	; –
		db 0D1h	; —
		db 0D2h	; “
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  21h	; !
		db  40h	; @
		db  23h	; #
		db  24h	; $
		db  25h	; %
		db  5Eh	; ^
		db  26h	; &
		db  2Ah	; *
		db  28h	; (
		db  29h	; )
		db  5Fh	; _
		db  2Bh	; +
		db    8
		db  8Fh	; è
		db  90h	; ê
		db  91h	; ë
		db  92h	; í
		db  93h	; ì
		db  94h	; î
		db  95h	; ï
		db  96h	; ñ
		db  97h	; ó
		db  98h	; ò
		db  99h	; ô
		db  7Bh	; {
		db  7Dh	; }
		db  0Dh
		db    0
		db  9Eh	; û
		db  9Fh	; ü
		db 0A0h	; †
		db 0A1h	; °
		db 0A2h	; ¢
		db 0A3h	; £
		db 0A4h	; §
		db 0A5h	; •
		db 0A6h	; ¶
		db  3Ah	; :
		db  22h	; "
		db  7Eh	; ~
		db    0
		db  7Ch	; |
		db 0ACh	; ¨
		db 0ADh	; ≠
		db 0AEh	; Æ
		db 0AFh	; Ø
		db 0B0h	; ∞
		db 0B1h	; ±
		db 0B2h	; ≤
		db  3Ch	; <
		db  3Eh	; >
		db  3Fh	; ?
		db    0
		db    0
		db    0
		db  20h
		db    0
		db 0F8h	; ¯
		db 0F9h	; ˘
		db 0FAh	; ˙
		db 0FBh	; ˚
		db 0FCh	; ¸
		db 0FDh	; ˝
		db 0FEh	; ˛
		db 0FFh
		db  80h	; Ä
		db  81h	; Å
		db    0
		db    0
		db 0C7h	; «
		db 0C8h	; »
		db 0C9h	; …
		db  2Dh	; -
		db 0CBh	; À
		db 0CCh	; Ã
		db 0CDh	; Õ
		db  2Bh	; +
		db 0CFh	; œ
		db 0D0h	; –
		db 0D1h	; —
		db 0D2h	; “
		db 0D3h	; ”
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_3FDFC	dw 2001h		; DATA XREF: sub_30A1Cr seg012:202Aw ...
seg_3FDFE	dw seg seg012		; DATA XREF: seg012:2030w seg012:2038r
byte_3FE00	db 0			; DATA XREF: sub_12F4A:loc_1305Cr
					; sub_21B7A+211r ...
		db    0
aSFileError	db '%s FILE ERROR',0Dh,0
aSNotPackedFile	db '%s NOT PACKED FILE',0Dh,0
aSInvalidPackTy	db '%s INVALID PACK TYPE',0Dh,0
		db    0
aLocateshape4_4	db 'locateshape - %-4.4s SHAPE NOT FOUND',0Dh,0Ah
		db 'locatesound - %-4.4s SOUND NOT FOUND',0Dh,0Ah
		db 'reservememory - OUT OF MEMORY RESERVING %s P=%x HW=%x',0Dh,0Ah,0
aReservememoryO	db 'reservememory - OUT OF MEMORY SLOTS RESERVING %s',0Dh,0Ah,0
aMemoryManagerB	db 'memory manager - BLOCK NOT FOUND at SEG= %x',0Dh,0Ah,0
aResizememoryCa	db 'resizememory - CANNOT EXPAND BLOCK NOT AT TOP',0Dh,0Ah,0
aResizememoryNo	db 'resizememory - NO MEMORY LEFT TO EXPAND HW=%x',0Dh,0Ah,0
		db    0
word_3FF82	dw 0			; DATA XREF: sub_3107A+1Cr
					; sub_3107A+50w ...
word_3FF84	dw 0			; DATA XREF: sub_3107A+31w
					; sub_3107A+44r ...
word_3FF86	dw 0			; DATA XREF: sub_31248+4Br
					; sub_31248+51w ...
word_3FF88	dw 0			; DATA XREF: sub_3107A:loc_3108Ew
					; seg012:2702w
word_3FF8A	dw 0			; DATA XREF: sub_3107A+18w
					; seg012:2706w
		db '            ',0
		db    0
		db    0
		db    0
		db    2
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		dw 2020h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db '            ',0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db  20h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
word_40310	dw 481Ch		; DATA XREF: sub_3107A+2Ar
					; sub_3107A+5Br ...
word_40312	dw 481Ch		; DATA XREF: sub_3107A+5Fw
					; seg012:273Er	...
word_40314	dw 4B8Eh		; DATA XREF: sub_3107A+57w
					; seg012:2737r	...
word_40316	dw 4B8Eh		; DATA XREF: sub_3107A+49r
					; sub_3107A:loc_310CDr	...
word_40318	dw 0			; DATA XREF: sub_368D2+7Dw
word_4031A	dw 0			; DATA XREF: sub_368D2+4Dw
					; sub_368D2:loc_36928w	...
word_4031C	dw 0			; DATA XREF: seg017:0144w seg017:0148r ...
word_4031E	dw 0			; DATA XREF: sub_2F3DA+26w
					; sub_32886+25w ...
word_40320	dw 0			; DATA XREF: sub_2F3DA+2Cw
					; seg012:491Ew	...
off_40322	dd 2EA20000h		; DATA XREF: sub_2F3DA+3Ew
					; sub_317C1+10w ...
off_40326	dd 2EA20000h		; DATA XREF: sub_2F3DA+44w
					; sub_317C1+16w ...
byte_4032A	db 0			; DATA XREF: sub_3216C+3r
					; sub_3216C+15r ...
byte_4032B	db 0			; DATA XREF: sub_3219D+14w
					; sub_3219D:loc_321FDr	...
byte_4032C	db 7			; DATA XREF: sub_3219D+30r
					; seg012:389Aw
		db    0
word_4032E	dw 0F00h		; DATA XREF: sub_3219D+19r
					; sub_3219D+6Aw
word_40330	dw 0			; DATA XREF: sub_3219D+1Cw
					; sub_3219D+40r ...
word_40332	dw 0			; DATA XREF: sub_3219D+1w
					; sub_3219D+23r ...
word_40334	dw 0			; DATA XREF: sub_3219D+5w
					; sub_3219D:loc_321BCr	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_403AE	dw 0A0h			; DATA XREF: seg012:38A9r
					; sub_322F3+46w ...
word_403B0	dw 64h			; DATA XREF: seg012:38B6r
					; sub_322F3+55w ...
word_403B2	dw 0			; DATA XREF: seg012:38A6w
					; sub_322F3+49r
word_403B4	dw 0			; DATA XREF: seg012:38B3w
					; sub_322F3+58r
word_403B6	dw 0A0h			; DATA XREF: seg012:38ADw
					; sub_322F3+4Dw ...
word_403B8	dw 64h			; DATA XREF: seg012:38BAw
					; sub_322F3+5Cw ...
word_403BA	dw 0			; DATA XREF: sub_322F3+87w
					; sub_323D9+18r ...
word_403BC	dw 0			; DATA XREF: sub_322F3+BAw
					; sub_322F3+CFw ...
word_403BE	dw 0			; DATA XREF: seg012:38C7w
					; sub_322F3+20w ...
word_403C0	dw 0			; DATA XREF: seg012:38CDw
					; sub_322F3+3Ew ...
aWindowReleased	db 'Window Released Out of Order',0Dh,0Ah,0 ; DATA XREF: sub_324AA+46o
		db    0
aSFileError_0	db '%s FILE ERROR',0Dh,0
		db    0
byte_403F2	db 0			; DATA XREF: sub_325AEr sub_325AE+Bw
byte_403F3	db 0			; DATA XREF: sub_325AE+17w
		db    0
		db    0
		db  65h	; e
		db    0
		db 0C9h	; …
		db    0
		db  2Eh	; .
		db    1
		db  92h	; í
		db    1
		db 0F7h	; ˜
		db    1
		db  5Bh	; [
		db    2
		db 0C0h	; ¿
		db    2
		db  24h	; $
		db    3
		db  88h	; à
		db    3
		db 0EDh	; Ì
		db    3
		db  51h	; Q
		db    4
		db 0B5h	; µ
		db    4
		db  1Ah
		db    5
		db  7Eh	; ~
		db    5
		db 0E2h	; ‚
		db    5
		db  46h	; F
		db    6
		db 0AAh	; ™
		db    6
		db  0Eh
		db    7
		db  72h	; r
		db    7
		db 0D6h	; ÷
		db    7
		db  39h	; 9
		db    8
		db  9Dh	; ù
		db    8
		db    1
		db    9
		db  64h	; d
		db    9
		db 0C7h	; «
		db    9
		db  2Bh	; +
		db  0Ah
		db  8Eh	; é
		db  0Ah
		db 0F1h	; Ò
		db  0Ah
		db  54h	; T
		db  0Bh
		db 0B7h	; ∑
		db  0Bh
		db  1Ah
		db  0Ch
		db  7Ch	; |
		db  0Ch
		db 0DFh	; ﬂ
		db  0Ch
		db  41h	; A
		db  0Dh
		db 0A4h	; §
		db  0Dh
		db    6
		db  0Eh
		db  68h	; h
		db  0Eh
		db 0CAh	;  
		db  0Eh
		db  2Bh	; +
		db  0Fh
		db  8Dh	; ç
		db  0Fh
		db 0EEh	; Ó
		db  0Fh
		db  50h	; P
		db  10h
		db 0B1h	; ±
		db  10h
		db  12h
		db  11h
		db  73h	; s
		db  11h
		db 0D3h	; ”
		db  11h
		db  34h	; 4
		db  12h
		db  94h	; î
		db  12h
		db 0F4h	; Ù
		db  12h
		db  54h	; T
		db  13h
		db 0B4h	; ¥
		db  13h
		db  13h
		db  14h
		db  73h	; s
		db  14h
		db 0D2h	; “
		db  14h
		db  31h	; 1
		db  15h
		db  90h	; ê
		db  15h
		db 0EEh	; Ó
		db  15h
		db  4Ch	; L
		db  16h
		db 0ABh	; ´
		db  16h
		db    9
		db  17h
		db  66h	; f
		db  17h
		db 0C4h	; ƒ
		db  17h
		db  21h	; !
		db  18h
		db  7Eh	; ~
		db  18h
		db 0DBh	; €
		db  18h
		db  37h	; 7
		db  19h
		db  93h	; ì
		db  19h
		db 0EFh	; Ô
		db  19h
		db  4Bh	; K
		db  1Ah
		db 0A7h	; ß
		db  1Ah
		db    2
		db  1Bh
		db  5Dh	; ]
		db  1Bh
		db 0B8h	; ∏
		db  1Bh
		db  12h
		db  1Ch
		db  6Ch	; l
		db  1Ch
		db 0C6h	; ∆
		db  1Ch
		db  20h
		db  1Dh
		db  79h	; y
		db  1Dh
		db 0D3h	; ”
		db  1Dh
		db  2Bh	; +
		db  1Eh
		db  84h	; Ñ
		db  1Eh
		db 0DCh	; ‹
		db  1Eh
		db  34h	; 4
		db  1Fh
		db  8Ch	; å
		db  1Fh
		db 0E3h	; „
		db  1Fh
		db  3Ah	; :
		db  20h
		db  91h	; ë
		db  20h
		db 0E7h	; Á
		db  20h
		db  3Dh	; =
		db  21h	; !
		db  93h	; ì
		db  21h	; !
		db 0E8h	; Ë
		db  21h	; !
		db  3Dh	; =
		db  22h	; "
		db  92h	; í
		db  22h	; "
		db 0E7h	; Á
		db  22h	; "
		db  3Bh	; ;
		db  23h	; #
		db  8Eh	; é
		db  23h	; #
		db 0E2h	; ‚
		db  23h	; #
		db  35h	; 5
		db  24h	; $
		db  88h	; à
		db  24h	; $
		db 0DAh	; ⁄
		db  24h	; $
		db  2Ch	; ,
		db  25h	; %
		db  7Eh	; ~
		db  25h	; %
		db 0CFh	; œ
		db  25h	; %
		db  20h
		db  26h	; &
		db  71h	; q
		db  26h	; &
		db 0C1h	; ¡
		db  26h	; &
		db  11h
		db  27h	; '
		db  60h	; `
		db  27h	; '
		db 0AFh	; Ø
		db  27h	; '
		db 0FEh	; ˛
		db  27h	; '
		db  4Ch	; L
		db  28h	; (
		db  9Ah	; ö
		db  28h	; (
		db 0E7h	; Á
		db  28h	; (
		db  35h	; 5
		db  29h	; )
		db  81h	; Å
		db  29h	; )
		db 0CEh	; Œ
		db  29h	; )
		db  1Ah
		db  2Ah	; *
		db  65h	; e
		db  2Ah	; *
		db 0B0h	; ∞
		db  2Ah	; *
		db 0FBh	; ˚
		db  2Ah	; *
		db  45h	; E
		db  2Bh	; +
		db  8Fh	; è
		db  2Bh	; +
		db 0D8h	; ÿ
		db  2Bh	; +
		db  21h	; !
		db  2Ch	; ,
		db  6Ah	; j
		db  2Ch	; ,
		db 0B2h	; ≤
		db  2Ch	; ,
		db 0FAh	; ˙
		db  2Ch	; ,
		db  41h	; A
		db  2Dh	; -
		db  88h	; à
		db  2Dh	; -
		db 0CFh	; œ
		db  2Dh	; -
		db  15h
		db  2Eh	; .
		db  5Ah	; Z
		db  2Eh	; .
		db  9Fh	; ü
		db  2Eh	; .
		db 0E4h	; ‰
		db  2Eh	; .
		db  28h	; (
		db  2Fh	; /
		db  6Ch	; l
		db  2Fh	; /
		db 0AFh	; Ø
		db  2Fh	; /
		db 0F2h	; Ú
		db  2Fh	; /
		db  34h	; 4
		db  30h	; 0
		db  76h	; v
		db  30h	; 0
		db 0B8h	; ∏
		db  30h	; 0
		db 0F9h	; ˘
		db  30h	; 0
		db  39h	; 9
		db  31h	; 1
		db  79h	; y
		db  31h	; 1
		db 0B9h	; π
		db  31h	; 1
		db 0F8h	; ¯
		db  31h	; 1
		db  36h	; 6
		db  32h	; 2
		db  74h	; t
		db  32h	; 2
		db 0B2h	; ≤
		db  32h	; 2
		db 0EFh	; Ô
		db  32h	; 2
		db  2Ch	; ,
		db  33h	; 3
		db  68h	; h
		db  33h	; 3
		db 0A3h	; £
		db  33h	; 3
		db 0DFh	; ﬂ
		db  33h	; 3
		db  19h
		db  34h	; 4
		db  53h	; S
		db  34h	; 4
		db  8Dh	; ç
		db  34h	; 4
		db 0C6h	; ∆
		db  34h	; 4
		db 0FFh
		db  34h	; 4
		db  37h	; 7
		db  35h	; 5
		db  6Eh	; n
		db  35h	; 5
		db 0A5h	; •
		db  35h	; 5
		db 0DCh	; ‹
		db  35h	; 5
		db  12h
		db  36h	; 6
		db  48h	; H
		db  36h	; 6
		db  7Dh	; }
		db  36h	; 6
		db 0B1h	; ±
		db  36h	; 6
		db 0E5h	; Â
		db  36h	; 6
		db  18h
		db  37h	; 7
		db  4Bh	; K
		db  37h	; 7
		db  7Eh	; ~
		db  37h	; 7
		db 0B0h	; ∞
		db  37h	; 7
		db 0E1h	; ·
		db  37h	; 7
		db  12h
		db  38h	; 8
		db  42h	; B
		db  38h	; 8
		db  71h	; q
		db  38h	; 8
		db 0A1h	; °
		db  38h	; 8
		db 0CFh	; œ
		db  38h	; 8
		db 0FDh	; ˝
		db  38h	; 8
		db  2Bh	; +
		db  39h	; 9
		db  58h	; X
		db  39h	; 9
		db  84h	; Ñ
		db  39h	; 9
		db 0B0h	; ∞
		db  39h	; 9
		db 0DBh	; €
		db  39h	; 9
		db    6
		db  3Ah	; :
		db  30h	; 0
		db  3Ah	; :
		db  59h	; Y
		db  3Ah	; :
		db  82h	; Ç
		db  3Ah	; :
		db 0ABh	; ´
		db  3Ah	; :
		db 0D3h	; ”
		db  3Ah	; :
		db 0FAh	; ˙
		db  3Ah	; :
		db  21h	; !
		db  3Bh	; ;
		db  47h	; G
		db  3Bh	; ;
		db  6Dh	; m
		db  3Bh	; ;
		db  92h	; í
		db  3Bh	; ;
		db 0B6h	; ∂
		db  3Bh	; ;
		db 0DAh	; ⁄
		db  3Bh	; ;
		db 0FDh	; ˝
		db  3Bh	; ;
		db  20h
		db  3Ch	; <
		db  42h	; B
		db  3Ch	; <
		db  64h	; d
		db  3Ch	; <
		db  85h	; Ö
		db  3Ch	; <
		db 0A5h	; •
		db  3Ch	; <
		db 0C5h	; ≈
		db  3Ch	; <
		db 0E4h	; ‰
		db  3Ch	; <
		db    3
		db  3Dh	; =
		db  21h	; !
		db  3Dh	; =
		db  3Fh	; ?
		db  3Dh	; =
		db  5Bh	; [
		db  3Dh	; =
		db  78h	; x
		db  3Dh	; =
		db  93h	; ì
		db  3Dh	; =
		db 0AFh	; Ø
		db  3Dh	; =
		db 0C9h	; …
		db  3Dh	; =
		db 0E3h	; „
		db  3Dh	; =
		db 0FCh	; ¸
		db  3Dh	; =
		db  15h
		db  3Eh	; >
		db  2Dh	; -
		db  3Eh	; >
		db  45h	; E
		db  3Eh	; >
		db  5Ch	; \
		db  3Eh	; >
		db  72h	; r
		db  3Eh	; >
		db  88h	; à
		db  3Eh	; >
		db  9Dh	; ù
		db  3Eh	; >
		db 0B1h	; ±
		db  3Eh	; >
		db 0C5h	; ≈
		db  3Eh	; >
		db 0D8h	; ÿ
		db  3Eh	; >
		db 0EBh	; Î
		db  3Eh	; >
		db 0FDh	; ˝
		db  3Eh	; >
		db  0Fh
		db  3Fh	; ?
		db  20h
		db  3Fh	; ?
		db  30h	; 0
		db  3Fh	; ?
		db  40h	; @
		db  3Fh	; ?
		db  4Fh	; O
		db  3Fh	; ?
		db  5Dh	; ]
		db  3Fh	; ?
		db  6Bh	; k
		db  3Fh	; ?
		db  78h	; x
		db  3Fh	; ?
		db  85h	; Ö
		db  3Fh	; ?
		db  91h	; ë
		db  3Fh	; ?
		db  9Ch	; ú
		db  3Fh	; ?
		db 0A7h	; ß
		db  3Fh	; ?
		db 0B1h	; ±
		db  3Fh	; ?
		db 0BBh	; ª
		db  3Fh	; ?
		db 0C4h	; ƒ
		db  3Fh	; ?
		db 0CCh	; Ã
		db  3Fh	; ?
		db 0D4h	; ‘
		db  3Fh	; ?
		db 0DBh	; €
		db  3Fh	; ?
		db 0E1h	; ·
		db  3Fh	; ?
		db 0E7h	; Á
		db  3Fh	; ?
		db 0ECh	; Ï
		db  3Fh	; ?
		db 0F1h	; Ò
		db  3Fh	; ?
		db 0F5h	; ı
		db  3Fh	; ?
		db 0F8h	; ¯
		db  3Fh	; ?
		db 0FBh	; ˚
		db  3Fh	; ?
		db 0FDh	; ˝
		db  3Fh	; ?
		db 0FFh
		db  3Fh	; ?
		db    0
		db  40h	; @
		db    0
		db  40h	; @
word_405F6	dw 0			; DATA XREF: seg012:206Er sub_327C0+Ew ...
word_405F8	dw 0			; DATA XREF: seg012:2066r
					; sub_327C0+11w ...
word_405FA	dw 0			; DATA XREF: sub_3279Ar sub_3279A+11w
word_405FC	dw 0			; DATA XREF: sub_3279A+4r
					; sub_3279A+14w
off_405FE	dd word_3B1F0		; DATA XREF: sub_3A7F6+72r
					; sub_3A896+9Cr ...
		db  0Ah
		db    0
		db  68h	; h
		db  64h	; d
		db  72h	; r
		db  31h	; 1
		db    0
		db    0
dword_4060A	dd 0			; DATA XREF: sub_3717C+2Ar
					; sub_37216+5Ar ...
		db    1
		db    0
		db    2
		db    0
		db    4
		db    0
		db    8
		db    0
		db  10h
		db    0
		db  20h
		db    0
		db  40h	; @
		db    0
		db  80h	; Ä
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    4
		db    0
		db    8
		db    0
		db  10h
		db    0
		db  20h
		db    0
		db  40h	; @
		db    0
		db  80h	; Ä
		db    0
		db    0
byte_40630	db 0			; DATA XREF: sub_37216+8w sub_372F4+7w ...
byte_40631	db 1			; DATA XREF: sub_373B2w sub_373B8w ...
byte_40632	db 0			; DATA XREF: sub_3717C+88w
					; sub_3736A+6w	...
byte_40633	db 1			; DATA XREF: seg007:loc_26FDCr
					; sub_37216:loc_37235r	...
byte_40634	db 0			; DATA XREF: seg007:0422r
					; sub_37216+13r ...
byte_40635	db 0			; DATA XREF: sub_378CA+Fw
					; sub_378CA+E9w ...
		db  10h
		db    0
		db  16h
byte_40639	db 0			; DATA XREF: sub_37216:loc_37262w
					; sub_372F4:loc_37336w	...
word_4063A	dw 1			; DATA XREF: sub_3717C+7w
					; sub_3717C+8Dw ...
word_4063C	dw 0			; DATA XREF: seg027:0B6Ew
					; sub_37C44+55r ...
		db    0
		db  64h	; d
		db  72h	; r
		db  76h	; v
		db    0
		db  6Dh	; m
		db  74h	; t
		db  33h	; 3
		db  32h	; 2
		db  2Eh	; .
		db  70h	; p
		db  6Ch	; l
		db  62h	; b
		db    0
		db  43h	; C
		db  61h	; a
		db  6Eh	; n
		db  27h	; '
		db  74h	; t
		db  20h
		db  66h	; f
		db  69h	; i
		db  6Eh	; n
		db  64h	; d
		db  20h
		db  64h	; d
		db  72h	; r
		db  69h	; i
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db  21h	; !
		db  0Ah
		db    0
		db  67h	; g
		db  65h	; e
		db    0
		db  67h	; g
		db  65h	; e
		db    0
		db    0
		db    0
		db  64h	; d
		db  73h	; s
		db  66h	; f
		db    0
		db  73h	; s
		db  66h	; f
		db  78h	; x
		db    0
		db  63h	; c
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h
		db  73h	; s
		db  66h	; f
		db  78h	; x
		db  20h
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h
		db  25h	; %
		db  73h	; s
		db    0
		db  6Bh	; k
		db  6Dh	; m
		db  73h	; s
		db    0
		db  63h	; c
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h
		db  73h	; s
		db  6Fh	; o
		db  6Eh	; n
		db  67h	; g
		db  20h
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h
		db  25h	; %
		db  73h	; s
		db    0
		db  64h	; d
		db  76h	; v
		db  63h	; c
		db    0
		db  76h	; v
		db  63h	; c
		db  65h	; e
		db    0
		db  63h	; c
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h
		db  76h	; v
		db  6Fh	; o
		db  69h	; i
		db  63h	; c
		db  65h	; e
		db  20h
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h
		db  25h	; %
		db  73h	; s
		db    0
		db  73h	; s
		db  6Ch	; l
		db  62h	; b
		db    0
		db  63h	; c
		db  61h	; a
		db  6Eh	; n
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h
		db  73h	; s
		db  61h	; a
		db  6Dh	; m
		db  70h	; p
		db  6Ch	; l
		db  65h	; e
		db  20h
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h
		db  25h	; %
		db  73h	; s
		db    0
		db  68h	; h
		db  64h	; d
		db  72h	; r
		db  31h	; 1
		db    0
		db  42h	; B
		db  41h	; A
		db  53h	; S
		db  44h	; D
		db    0
		db  53h	; S
		db  4Eh	; N
		db  41h	; A
		db  52h	; R
		db    0
		db  54h	; T
		db  4Fh	; O
		db  4Dh	; M
		db  4Dh	; M
		db    0
		db  52h	; R
		db  49h	; I
		db  44h	; D
		db  45h	; E
		db    0
		db  43h	; C
		db  52h	; R
		db  53h	; S
		db  48h	; H
		db    0
		db  43h	; C
		db  48h	; H
		db  48h	; H
		db  54h	; T
		db    0
		db  4Fh	; O
		db  48h	; H
		db  48h	; H
		db  54h	; T
		db    0
		db  68h	; h
		db  64h	; d
		db  72h	; r
		db  31h	; 1
		db    0
		db  73h	; s
		db  77h	; w
		db  50h	; P
		db  61h	; a
		db  75h	; u
		db  73h	; s
		db  65h	; e
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  2Ch	; ,
		db  20h
		db  73h	; s
		db  77h	; w
		db  53h	; S
		db  6Fh	; o
		db  6Eh	; n
		db  67h	; g
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  2Ch	; ,
		db  20h
		db  62h	; b
		db  53h	; S
		db  6Fh	; o
		db  6Eh	; n
		db  67h	; g
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  2Ch	; ,
		db  73h	; s
		db  77h	; w
		db  53h	; S
		db  46h	; F
		db  58h	; X
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  0Ah
		db    0
		db  75h	; u
		db  62h	; b
		db  4Dh	; M
		db  75h	; u
		db  73h	; s
		db  69h	; i
		db  63h	; c
		db  56h	; V
		db  6Fh	; o
		db  6Ch	; l
		db  75h	; u
		db  6Dh	; m
		db  65h	; e
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  2Ch	; ,
		db  20h
		db  75h	; u
		db  62h	; b
		db  53h	; S
		db  66h	; f
		db  78h	; x
		db  56h	; V
		db  6Fh	; o
		db  6Ch	; l
		db  75h	; u
		db  6Dh	; m
		db  65h	; e
		db  20h
		db  3Dh	; =
		db  20h
		db  25h	; %
		db  64h	; d
		db  0Ah
		db    0
		db  54h	; T
		db  25h	; %
		db  30h	; 0
		db  32h	; 2
		db  78h	; x
		db  2Dh	; -
		db  4Eh	; N
		db  44h	; D
		db  3Dh	; =
		db  25h	; %
		db  6Ch	; l
		db  78h	; x
		db  2Ch	; ,
		db  44h	; D
		db  4Ch	; L
		db  3Dh	; =
		db  25h	; %
		db  6Ch	; l
		db  64h	; d
		db  0Ah
		db    0
		db  50h	; P
		db  72h	; r
		db  65h	; e
		db  73h	; s
		db  73h	; s
		db  20h
		db  61h	; a
		db  20h
		db  4Bh	; K
		db  65h	; e
		db  79h	; y
		db  0Ah
		db    0
		db  48h	; H
		db  25h	; %
		db  30h	; 0
		db  32h	; 2
		db  78h	; x
		db  20h
		db  2Dh	; -
		db  20h
		db  53h	; S
		db  54h	; T
		db  3Dh	; =
		db  25h	; %
		db  64h	; d
		db  2Ch	; ,
		db  54h	; T
		db  50h	; P
		db  3Dh	; =
		db  25h	; %
		db  6Ch	; l
		db  78h	; x
		db  2Ch	; ,
		db  54h	; T
		db  4Ch	; L
		db  3Dh	; =
		db  25h	; %
		db  6Ch	; l
		db  78h	; x
		db  0Ah
		db    0
word_407AA	dw 0			; DATA XREF: seg028:0022r seg028:0029w ...
		db  2Eh	; .
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    4
		db    0
		db    5
		db    0
		db    6
		db    0
		db    7
		db    0
		db    8
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Ch
		db    0
		db  0Dh
		db    0
		db  0Eh
		db    0
word_407CA	dw 0Fh			; DATA XREF: sub_110D0+F7r
					; sub_110D0+165r ...
word_407CC	dw 10h			; DATA XREF: sub_1DEA6+2A2r
word_407CE	dw 5			; DATA XREF: sub_10F3C+B7r
					; sub_110D0+319r ...
word_407D0	dw 0Eh			; DATA XREF: sub_10F3C:loc_10FEFr
					; sub_110D0:loc_113E5r	...
word_407D2	dw 8			; DATA XREF: sub_13178+914r
word_407D4	dw 0Fh			; DATA XREF: sub_10786+BEr
					; sub_10786+FAr ...
word_407D6	dw 8			; DATA XREF: sub_10786+BAr
					; sub_10786+F6r ...
word_407D8	dw 0Bh			; DATA XREF: sub_10786+83r
word_407DA	dw 3			; DATA XREF: sub_10786+7Fr
word_407DC	dw 0Ch			; DATA XREF: sub_10786+136r
word_407DE	dw 4			; DATA XREF: sub_10786+132r
word_407E0	dw 9			; DATA XREF: sub_10786+38Er
					; sub_10786+406r
word_407E2	dw 1			; DATA XREF: sub_10786+38Ar
					; sub_10786+402r
word_407E4	dw 0Ah			; DATA XREF: sub_10786+4BAr
word_407E6	dw 2			; DATA XREF: sub_10786+4B6r
word_407E8	dw 0Dh			; DATA XREF: sub_10786+29Er
word_407EA	dw 5			; DATA XREF: sub_10786+29Ar
word_407EC	dw 0Bh			; DATA XREF: sub_2A2BC+2FEr
					; sub_2A2BC+321r
word_407EE	dw 9			; DATA XREF: sub_2A2BC+2FAr
					; sub_2A2BC+31Dr
word_407F0	dw 1			; DATA XREF: sub_2A2BC+2F6r
					; sub_2A2BC+319r
word_407F2	dw 0Ch			; DATA XREF: sub_2A2BC:loc_2AED6r
					; sub_2A2BC:loc_2B2A6r
word_407F4	dw 0Fh			; DATA XREF: sub_110D0+232r
					; sub_110D0+26Br ...
word_407F6	dw 8			; DATA XREF: sub_110D0+22Er
					; sub_110D0+267r ...
word_407F8	dw 7			; DATA XREF: sub_110D0+22Ar
					; sub_110D0+263r ...
word_407FA	dw 9			; DATA XREF: sub_12F4A+1Er
word_407FC	dw 1			; DATA XREF: sub_23B4C+27Ar
word_407FE	dw 4			; DATA XREF: sub_23B4C+2B0r
					; sub_23B4C+446r
word_40800	dw 1			; DATA XREF: sub_11C42+6E8r
					; sub_12F4A+12Cr ...
word_40802	dw 4			; DATA XREF: _main+53Er
					; sub_1168E:loc_118C1r	...
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    4
		db    0
		db    5
		db    0
		db    6
		db    0
		db    7
		db    0
		db    8
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Ch
		db    0
		db  0Dh
		db    0
		db  0Eh
		db    0
		db  0Fh
		db    0
		db  6Ch	; l
		db    0
		db  74h	; t
		db    0
		db  0Fh
		db    0
		db  1Ch
		db    0
		db  1Dh
		db    0
		db  0Eh
		db    0
		db  1Ch
		db    0
		db  1Fh
		db    0
		db  0Eh
		db    0
		db 0C8h	; »
		db    0
		db 0C6h	; ∆
		db    0
		db 0C4h	; ƒ
		db    0
		db  70h	; p
		db    0
		db  72h	; r
		db    0
		db  74h	; t
		db    0
		db 0C2h	; ¬
		db    0
		db 0C5h	; ≈
		db    0
		db 0C8h	; »
		db    0
		db  92h	; í
		db    0
		db  25h	; %
		db    0
		db  23h	; #
		db    0
		db 0B5h	; µ
		db    0
		db  1Dh
		db    0
		db  1Fh
		db    0
		db  13h
		db    0
		db    3
		db    0
		db  0Bh
		db    0
		db  1Bh
		db    0
		db    0
		db    0
		db    4
		db    0
		db    4
		db    0
		db  0Ch
		db    0
		db  9Ch	; ú
		db    0
		db  9Ah	; ö
		db    0
		db  98h	; ò
		db    0
		db  96h	; ñ
		db    0
		db  2Ah	; *
		db    0
		db  28h	; (
		db    0
		db  26h	; &
		db    0
		db  25h	; %
		db    0
		db  1Bh
		db    0
		db  1Ah
		db    0
		db  19h
		db    0
		db  18h
		db    0
		db  48h	; H
		db    0
		db  46h	; F
		db    0
		db  44h	; D
		db    0
		db  42h	; B
		db    0
		db  7Bh	; {
		db    0
		db  79h	; y
		db    0
		db  78h	; x
		db    0
		db  75h	; u
		db    0
		db  5Ch	; \
		db    0
		db  5Ah	; Z
		db    0
		db  58h	; X
		db    0
		db  57h	; W
		db    0
		db 0ADh	; ≠
		db    0
		db 0ABh	; ´
		db    0
		db 0A9h	; ©
		db    0
		db 0A7h	; ß
		db    0
		db  14h
		db    0
		db  13h
		db    0
		db  12h
		db    0
		db  11h
		db    0
		db  4Dh	; M
		db    0
		db  4Ch	; L
		db    0
		db  4Ah	; J
		db    0
		db  49h	; I
		db    0
		db  2Dh	; -
		db    0
		db  2Ch	; ,
		db    0
		db  2Ah	; *
		db    0
		db  29h	; )
		db    0
		db  9Fh	; ü
		db    0
		db 0AFh	; Ø
		db    0
		db 0AEh	; Æ
		db    0
		db 0ACh	; ¨
		db    0
		db  1Dh
		db    0
		db  1Ch
		db    0
		db  12h
		db    0
		db  5Ah	; Z
		db    0
		db  0Fh
		db    0
		db    7
		db    0
		db 0C8h	; »
		db    0
		db 0DBh	; €
		db    0
		db  88h	; à
		db    0
		db  63h	; c
		db    0
		db  65h	; e
		db    0
		db  67h	; g
		db    0
		db  68h	; h
		db    0
		db  6Ah	; j
		db    0
		db  11h
		db    0
		db  14h
		db    0
		db  3Ch	; <
		db    0
		db  4Dh	; M
		db    0
		db  2Eh	; .
		db    0
		db  3Dh	; =
		db    0
		db  2Dh	; -
		db    0
		db 0CAh	;  
		db    0
		db 0BEh	; æ
		db    0
		db 0BAh	; ∫
		db    0
		db 0B7h	; ∑
		db    0
		db 0B4h	; ¥
		db    0
		db    0
		db    0
		db  1Ch
		db    0
		db  1Eh
		db    0
		db  10h
		db    0
		db  14h
		db    0
		db  44h	; D
		db    0
		db  36h	; 6
		db    0
		db  27h	; '
		db    0
		db  2Bh	; +
		db    0
		db  0Ch
		db    0
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db  77h	; w
		db  77h	; w
		db 0DDh	; ›
		db 0DDh	; ›
		db  77h	; w
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0DDh	; ›
		db  77h	; w
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0DDh	; ›
		db  77h	; w
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  33h	; 3
		db 0CCh	; Ã
		db 0CCh	; Ã
		db  33h	; 3
		db  6Dh	; m
		db 0B6h	; ∂
		db  92h	; í
		db  49h	; I
		db  6Dh	; m
		db 0B6h	; ∂
		db  92h	; í
		db  49h	; I
		db  6Dh	; m
		db 0B6h	; ∂
		db  92h	; í
		db  49h	; I
		db    0
		db    0
		db    0
		db    0
word_40B0A	dw 5094h		; DATA XREF: sub_1D7A2:loc_1D88Er
					; sub_39E56+3F4r
word_40B0C	dw 5094h		; DATA XREF: sub_39E56+3F0r
word_40B0E	dw 5196h		; DATA XREF: sub_39E56+3ECr
word_40B10	dw 5298h		; DATA XREF: sub_39E56+3E8r
byte_40B12	db 70h			; DATA XREF: sub_39E56+1BEw
					; sub_39E56+1DFw
byte_40B13	db 63h			; DATA XREF: sub_39E56+1C3w
					; sub_39E56+1EAw
		db  31h	; 1
		db  35h	; 5
		db    0
		db  73h	; s
		db  64h	; d
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0
		db  21h	; !
		db  70h	; p
		db  61h	; a
		db  6Ch	; l
		db    0
		db  73h	; s
		db  6Dh	; m
		db  6Fh	; o
		db  75h	; u
		db    0
		db  73h	; s
		db  64h	; d
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0
		db  73h	; s
		db  6Dh	; m
		db  6Fh	; o
		db  75h	; u
		db    0
		db  6Dh	; m
		db  6Dh	; m
		db  6Fh	; o
		db  75h	; u
		db    0
		db    0
		db  20h
		db    0
		db    3
		db    0
		db    0
		db    0
		db  43h	; C
		db  6Fh	; o
		db  70h	; p
		db  79h	; y
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  74h	; t
		db  20h
		db  28h	; (
		db  43h	; C
		db  29h	; )
		db  20h
		db  55h	; U
		db  6Eh	; n
		db  6Ch	; l
		db  69h	; i
		db  6Dh	; m
		db  69h	; i
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  20h
		db  53h	; S
		db  6Fh	; o
		db  66h	; f
		db  74h	; t
		db  77h	; w
		db  61h	; a
		db  72h	; r
		db  65h	; e
		db  20h
		db  49h	; I
		db  6Eh	; n
		db  63h	; c
		db  2Eh	; .
		db  20h
		db  31h	; 1
		db  39h	; 9
		db  38h	; 8
		db  39h	; 9
		db  2Ch	; ,
		db  31h	; 1
		db  39h	; 9
		db  39h	; 9
		db  30h	; 0
		db  2Eh	; .
		db  20h
		db  20h
		db  41h	; A
		db  6Ch	; l
		db  6Ch	; l
		db  20h
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  74h	; t
		db  73h	; s
		db  20h
		db  72h	; r
		db  65h	; e
		db  73h	; s
		db  65h	; e
		db  72h	; r
		db  76h	; v
		db  65h	; e
		db  64h	; d
		db  2Eh	; .
byte_40B86	db 0			; DATA XREF: seg012:5B80w
		db    0
		db    0
		db    0
		db    0
		db    0
		db  4Dh	; M
		db  43h	; C
		db  47h	; G
		db  41h	; A
		db  20h
		db  57h	; W
		db  49h	; I
		db  4Eh	; N
		db  44h	; D
		db  4Fh	; O
		db  57h	; W
		db    0
		db  77h	; w
		db  69h	; i
		db  6Eh	; n
		db  64h	; d
		db  6Fh	; o
		db  77h	; w
		db  64h	; d
		db  65h	; e
		db  66h	; f
		db  20h
		db  2Dh	; -
		db  20h
		db  4Fh	; O
		db  55h	; U
		db  54h	; T
		db  20h
		db  4Fh	; O
		db  46h	; F
		db  20h
		db  52h	; R
		db  4Fh	; O
		db  57h	; W
		db  20h
		db  54h	; T
		db  41h	; A
		db  42h	; B
		db  4Ch	; L
		db  45h	; E
		db  20h
		db  53h	; S
		db  50h	; P
		db  41h	; A
		db  43h	; C
		db  45h	; E
		db  0Dh
		db    0
		db  2Eh	; .
		db  50h	; P
		db  56h	; V
		db  53h	; S
		db    0
		db  2Eh	; .
		db  58h	; X
		db  56h	; V
		db  53h	; S
		db    0
		db  2Eh	; .
		db  56h	; V
		db  53h	; S
		db  48h	; H
		db    0
		db  2Eh	; .
		db  50h	; P
		db  45h	; E
		db  53h	; S
		db    0
		db  2Eh	; .
		db  45h	; E
		db  53h	; S
		db  48h	; H
		db    0
		db    0
		db  4Ch	; L
		db  54h	; T
		db  51h	; Q
		db  54h	; T
		db  56h	; V
		db  54h	; T
		db  5Bh	; [
		db  54h	; T
		db  60h	; `
		db  54h	; T
		db  65h	; e
		db  54h	; T
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  2Eh	; .
		db  50h	; P
		db  56h	; V
		db  53h	; S
		db    0
		db  55h	; U
		db  4Eh	; N
		db  46h	; F
		db  4Ch	; L
		db  49h	; I
		db  50h	; P
		db    0
		db  2Eh	; .
		db  58h	; X
		db  56h	; V
		db  53h	; S
		db    0
		db  2Eh	; .
		db  50h	; P
		db  45h	; E
		db  53h	; S
		db    0
		db  55h	; U
		db  4Eh	; N
		db  46h	; F
		db  4Ch	; L
		db  49h	; I
		db  50h	; P
		db    0
		db  2Eh	; .
		db  45h	; E
		db  53h	; S
		db  48h	; H
		db    0
		db  21h	; !
		db  4Dh	; M
		db  47h	; G
		db  41h	; A
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
dword_40C1E	dd 0			; DATA XREF: seg010:010Fr seg010:0125r ...
dword_40C22	dd 0			; DATA XREF: seg010:0107r
dword_40C26	dd 0			; DATA XREF: seg010:loc_2CD6Br
					; _raise+77r ...
		dd _flushall
aNmsg		db '<<NMSG>>',0
		db    0
aR6000StackOver	db 'R6000',0Dh,0Ah
		db '- stack overflow',0Dh,0Ah,0
		db    3
		db    0
		db  52h	; R
		db  36h	; 6
		db  30h	; 0
		db  30h	; 0
		db  33h	; 3
		db  0Dh
		db  0Ah
		db  2Dh	; -
		db  20h
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  67h	; g
		db  65h	; e
		db  72h	; r
		db  20h
		db  64h	; d
		db  69h	; i
		db  76h	; v
		db  69h	; i
		db  64h	; d
		db  65h	; e
		db  20h
		db  62h	; b
		db  79h	; y
		db  20h
		db  30h	; 0
		db  0Dh
		db  0Ah
		db    0
		db    9
		db    0
		db  52h	; R
		db  36h	; 6
		db  30h	; 0
		db  30h	; 0
		db  39h	; 9
		db  0Dh
		db  0Ah
		db  2Dh	; -
		db  20h
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  65h	; e
		db  6Eh	; n
		db  6Fh	; o
		db  75h	; u
		db  67h	; g
		db  68h	; h
		db  20h
		db  73h	; s
		db  70h	; p
		db  61h	; a
		db  63h	; c
		db  65h	; e
		db  20h
		db  66h	; f
		db  6Fh	; o
		db  72h	; r
		db  20h
		db  65h	; e
		db  6Eh	; n
		db  76h	; v
		db  69h	; i
		db  72h	; r
		db  6Fh	; o
		db  6Eh	; n
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db  0Dh
		db  0Ah
		db    0
		db 0FCh	; ¸
		db    0
		db  0Dh
		db  0Ah
		db    0
		db 0FFh
		db    0
		db  72h	; r
		db  75h	; u
		db  6Eh	; n
		db  2Dh	; -
		db  74h	; t
		db  69h	; i
		db  6Dh	; m
		db  65h	; e
		db  20h
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  20h
		db    0
		db    2
		db    0
		db  52h	; R
		db  36h	; 6
		db  30h	; 0
		db  30h	; 0
		db  32h	; 2
		db  0Dh
		db  0Ah
		db  2Dh	; -
		db  20h
		db  66h	; f
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  74h	; t
		db  69h	; i
		db  6Eh	; n
		db  67h	; g
		db  20h
		db  70h	; p
		db  6Fh	; o
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  20h
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  65h	; e
		db  64h	; d
		db  0Dh
		db  0Ah
		db    0
		db    1
		db    0
		db  52h	; R
		db  36h	; 6
		db  30h	; 0
		db  30h	; 0
		db  31h	; 1
		db  0Dh
		db  0Ah
		db  2Dh	; -
		db  20h
		db  6Eh	; n
		db  75h	; u
		db  6Ch	; l
		db  6Ch	; l
		db  20h
		db  70h	; p
		db  6Fh	; o
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  20h
		db  61h	; a
		db  73h	; s
		db  73h	; s
		db  69h	; i
		db  67h	; g
		db  6Eh	; n
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db  0Dh
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Ah
		db  41h	; A
		db  62h	; b
		db  6Eh	; n
		db  6Fh	; o
		db  72h	; r
		db  6Dh	; m
		db  61h	; a
		db  6Ch	; l
		db  20h
		db  70h	; p
		db  72h	; r
		db  6Fh	; o
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  6Dh	; m
		db  20h
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  6Dh	; m
		db  69h	; i
		db  6Eh	; n
		db  61h	; a
		db  74h	; t
		db  69h	; i
		db  6Fh	; o
		db  6Eh	; n
		db  0Ah
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
word_40D3A	dw 0			; DATA XREF: sub_13178+638w
					; sub_13178+656r
word_40D3C	dw 0			; DATA XREF: sub_13178+63Ew
					; sub_13178+6C1r
word_40D3E	dw 0			; DATA XREF: sub_13178+644w
					; sub_13178+677r
word_40D40	dw ?			; DATA XREF: sub_13178:loc_137ADr
					; sub_13178+652w ...
word_40D42	dw ?			; DATA XREF: sub_13178+63Br
					; sub_13178:loc_13835w	...
word_40D44	dw ?			; DATA XREF: sub_13178+641r
					; sub_13178+673w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_40D6A	db ?			; DATA XREF: sub_22698+E3w
					; sub_22698+107w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_40D7C	dw ?			; DATA XREF: sub_22D2E+6Ew
					; sub_22D2E+98r ...
word_40D7E	dw ?			; DATA XREF: sub_22D2E+71w
					; sub_22D2E+94r ...
dword_40D80	dd ?			; DATA XREF: sub_22D2E+F7w
					; sub_22D2E+61Fr ...
word_40D84	dw ?			; DATA XREF: sub_22D2E+85w
					; sub_22D2E+B0r ...
word_40D86	dw ?			; DATA XREF: sub_22D2E+88w
					; sub_22D2E+ACr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_40DB0	dw ?			; DATA XREF: sub_22D2E+524r
word_40DB2	dw ?			; DATA XREF: sub_22D2E:loc_2324Er
word_40DB4	dw ?			; DATA XREF: sub_22D2E+2A5r
					; sub_22D2E+548r
word_40DB6	dw ?			; DATA XREF: sub_22D2E+2A1r
					; sub_22D2E:loc_23272r
word_40DB8	dw ?			; DATA XREF: sub_22D2E+552r
word_40DBA	dw ?			; DATA XREF: sub_22D2E:loc_2327Cr
dword_40DBC	dd ?			; DATA XREF: sub_22D2E+DFr
					; sub_22D2E+633r ...
dword_40DC0	dd ?			; DATA XREF: sub_22D2E+102r
					; sub_22D2E+125r ...
word_40DC4	dw ?			; DATA XREF: sub_22D2E+7A4r
word_40DC6	dw ?			; DATA XREF: sub_22D2E+7A0r
word_40DC8	dw ?			; DATA XREF: sub_22D2E+7D2r
word_40DCA	dw ?			; DATA XREF: sub_22D2E+7CEr
word_40DCC	dw ?			; DATA XREF: sub_22D2E+794r
word_40DCE	dw ?			; DATA XREF: sub_22D2E:loc_234BEr
word_40DD0	dw ?			; DATA XREF: sub_22D2E+7C2r
word_40DD2	dw ?			; DATA XREF: sub_22D2E:loc_234ECr
word_40DD4	dw ?			; DATA XREF: sub_22D2E+415r
word_40DD6	dw ?			; DATA XREF: sub_22D2E+411r
word_40DD8	dw ?			; DATA XREF: sub_22D2E+403r
word_40DDA	dw ?			; DATA XREF: sub_22D2E+3FFr
dword_40DDC	dd ?			; DATA XREF: sub_22D2E+8D9r
					; sub_22D2E+8F1r ...
word_40DE0	dw ?			; DATA XREF: sub_22D2E+93Dr
word_40DE2	dw ?			; DATA XREF: sub_22D2E+939r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_40DEC	dd ?			; DATA XREF: sub_22D2E+11Aw
					; sub_22D2E+3B4r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_40DFC	dd ?			; DATA XREF: sub_22D2E+13Dw
					; sub_22D2E+162r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_40E0E	dw ?			; DATA XREF: sub_23B4C+A4r
word_40E10	dw ?			; DATA XREF: sub_23B4C+A0r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_40E6C	db ?			; DATA XREF: sub_23B4C+62Er
byte_40E6D	db ?			; DATA XREF: sub_23B4C+627r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_40EB0	dw ?			; DATA XREF: sub_25EE2:loc_25F0Cr
word_40EB2	dw ?			; DATA XREF: sub_25EE2:loc_25F1Ar
word_40EB4	dw ?			; DATA XREF: sub_25EE2+Ar
word_40EB6	dw ?			; DATA XREF: sub_25EE2:loc_25EFAr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_40ECA	dd ?			; DATA XREF: sub_24E9E+40Cw
					; sub_24E9E:loc_25470r	...
word_40ECE	dw ?			; DATA XREF: sub_24DE6+Cw sub_24E9E+9r ...
word_40ED0	dw ?			; DATA XREF: sub_24E06+3Dw
					; sub_24E9E+2E5r ...
word_40ED2	dw ?			; DATA XREF: sub_24D64+12w
					; sub_24E9E+404r
word_40ED4	dw ?			; DATA XREF: sub_24D64+15w
					; sub_24E9E+408r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_411F6	dw ?			; DATA XREF: sub_24DE6+12w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
unk_41690	db    ?	;		; DATA XREF: sub_3260E+6o sub_3262E+Do
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_41850	dw ?			; DATA XREF: sub_24DE6+6w
					; sub_24E9E+401r ...
word_41852	dw ?			; DATA XREF: sub_24E9E+55w
					; sub_24E9E+89r ...
word_41854	dw ?			; DATA XREF: sub_24E9E+A96r
					; sub_24E9E+ACBr ...
word_41856	dw ?			; DATA XREF: sub_24E9E+AABr
					; sub_24E9E+ADAr ...
word_41858	dw ?			; DATA XREF: sub_24E9E+B23r
word_4185A	dw ?			; DATA XREF: sub_24E9E+B38r
					; sub_24E9E+B64r
word_4185C	dw ?			; DATA XREF: sub_24E9E+B79r
word_4185E	dw ?			; DATA XREF: sub_24E9E+B8Er
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4186A	dw ?			; DATA XREF: sub_24E9E+3B1w
					; sub_24E9E:loc_25801r
word_4186C	dw ?			; DATA XREF: sub_24E9E+3B4w
					; sub_24E9E+966r
byte_4186E	db ?			; DATA XREF: sub_24E9E+97w
					; sub_24E9E+9Ar ...
		db    ?	;
dword_41870	dd ?			; DATA XREF: sub_24E9E+31w
					; sub_24E9E+38Ew ...
word_41874	dw ?			; DATA XREF: sub_24E9E+457w
					; sub_24E9E:loc_25335r	...
word_41876	dw ?			; DATA XREF: sub_24E9E+45Aw
					; sub_24E9E+49Fr ...
word_41878	dw ?			; DATA XREF: sub_24E9E+A4w
					; sub_24E9E+90Ar ...
byte_4187A	db ?			; DATA XREF: sub_24E9E+86w
					; sub_24E9E+8Fw ...
		db    ?	;
word_4187C	dw ?			; DATA XREF: sub_24E9E+22w
					; sub_24E9E+B4r ...
dword_4187E	dd ?			; DATA XREF: sub_24E9E+44w
					; sub_24E9E+235r ...
byte_41882	db ?			; DATA XREF: sub_24E9E+435w
					; sub_24E9E+EB8r ...
		db    ?	;
word_41884	dw ?			; DATA XREF: sub_263C6+51r
					; sub_263C6+8Br ...
word_41886	dw ?			; DATA XREF: sub_263C6+57r
					; sub_263C6+87r ...
word_41888	dw ?			; DATA XREF: sub_263C6+4Ar
					; sub_263C6+78r ...
word_4188A	dw ?			; DATA XREF: sub_263C6+4Dr
					; sub_263C6:loc_2643Ar	...
word_4188C	dw ?			; DATA XREF: sub_26500+49w
word_4188E	dw ?			; DATA XREF: sub_26500+4Cw
word_41890	dw ?			; DATA XREF: sub_26500+35w
word_41892	dw ?			; DATA XREF: sub_26500+38w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42240	dw ?			; DATA XREF: sub_26BAE+11w
word_42242	dw ?			; DATA XREF: sub_26C06+Ew
word_42244	dw ?			; DATA XREF: sub_26C06+11w
byte_42246	db ?			; DATA XREF: sub_26C06+15w
		db    ?	;
word_42248	dw ?			; DATA XREF: sub_28F98+14w
word_4224A	dw ?			; DATA XREF: sub_28F98+26w
word_4224C	dw ?			; DATA XREF: sub_28F98+6w
word_4224E	dw ?			; DATA XREF: sub_28F98+Ew
word_42250	dw ?			; DATA XREF: sub_29008+19w
word_42252	dw ?			; DATA XREF: sub_29008+2Bw
word_42254	dw ?			; DATA XREF: sub_29008+7w
word_42256	dw ?			; DATA XREF: sub_29008+12w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42540	dw ?			; DATA XREF: sub_2A2BC+12Aw
					; sub_2A2BC+5D8r ...
word_42542	dw ?			; DATA XREF: sub_2A2BC+12Dw
					; sub_2A2BC+5DCr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4282C	dd ?			; DATA XREF: sub_2A2BC+5Fr
dword_42830	dd ?			; DATA XREF: sub_2A2BC+83r
dword_42834	dd ?			; DATA XREF: sub_2A2BC+A7r
dword_42838	dd ?			; DATA XREF: sub_2A2BC+CBr
word_4283C	dw ?			; DATA XREF: sub_2BEB6+33r
					; sub_2BEB6+88r ...
word_4283E	dw ?			; DATA XREF: sub_2BEB6+2Fr
					; sub_2BEB6+84r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42898	dw ?			; DATA XREF: __output+57w
					; __output:loc_2D654w ...
; FILE *off_4289A
off_4289A	dw ?			; DATA XREF: __output+20w
					; __output+2C8r ...
word_4289C	dw ?			; DATA XREF: __output+54w
					; __output:loc_2D770w ...
word_4289E	dw ?			; DATA XREF: __output+45w
					; __output:loc_2D71Ew ...
word_428A0	dw ?			; DATA XREF: __output+4Bw
					; __output+116w ...
word_428A2	dw ?			; DATA XREF: __output+42w __output+77w ...
word_428A4	dw ?			; DATA XREF: __output+5Aw __output+A1w ...
word_428A6	dw ?			; DATA XREF: __output+1Aw
					; __output:loc_2D73Er ...
word_428A8	dw ?			; DATA XREF: __output+51w __output+7Bw ...
word_428AA	dw ?			; DATA XREF: __output+4Ew __output+DBw ...
word_428AC	dw ?			; DATA XREF: __output+48w
					; __output:loc_2D752w ...
word_428AE	dw ?			; DATA XREF: __output+29w
					; __output+186r ...
word_428B0	dw ?			; DATA XREF: __output+23w
					; __output:loc_2D8C2r ...
word_428B2	dw ?			; DATA XREF: __output:loc_2D5F8w
					; __output+EEr	...
word_428B4	dw ?			; DATA XREF: __output+1C1w
					; __output:loc_2D788w ...
; char *off_428B6
off_428B6	dw ?			; DATA XREF: __output+14w iprint+79r ...
word_428B8	dw ?			; DATA XREF: __output+C3r __output+CEr ...
word_428BA	dw ?			; DATA XREF: iprint:loc_2D960w
					; seg010:0F50w	...
; int word_428BC
word_428BC	dw ?			; DATA XREF: __output+5Dw __output+6Aw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_429F2	dw ?			; DATA XREF: sub_38702+385r
word_429F4	dw ?			; DATA XREF: sub_38702+388r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_42A02	db ?			; DATA XREF: sub_38702+64r
					; sub_38702+74r ...
byte_42A03	db ?			; DATA XREF: sub_38702:loc_38770r
					; sub_38702+34Fw
word_42A04	dw ?			; DATA XREF: sub_38702+136r
					; sub_38702:loc_38962r	...
word_42A06	dw ?			; DATA XREF: sub_38702+139r
byte_42A08	db ?			; DATA XREF: sub_38702+5Dr
					; sub_38702+ECr
		db    ?	;
word_42A0A	dw ?			; DATA XREF: sub_39050+11w
word_42A0C	dw ?			; DATA XREF: sub_39050+14w
byte_42A0E	db ?			; DATA XREF: sub_39050+9w
		db    ?	;
word_42A10	dw ?			; DATA XREF: sub_39050+1Aw
word_42A12	dw ?			; DATA XREF: sub_39050+20w
		db    ?	;
		db    ?	;
word_42A16	dw ?			; DATA XREF: sub_3A4B6+7Cw
					; sub_3A4B6+1F4w ...
word_42A18	dw ?			; DATA XREF: sub_3A4B6+Fw
					; sub_3A7F6+6Br ...
word_42A1A	dw ?			; DATA XREF: sub_3A4B6+15w
					; sub_3A7F6+7Ar ...
word_42A1C	dw ?			; DATA XREF: sub_3A4B6+82w
					; sub_3A4B6+F7r ...
; char *off_42A1E
off_42A1E	dw ?			; DATA XREF: sub_3A4B6+1Bw
					; sub_3A7F6:loc_3A806r	...
word_42A20	dw ?			; DATA XREF: sub_3A4B6+21w
					; sub_3A896+7r	...
word_42A22	dw ?			; DATA XREF: sub_3A4B6+3Ew
					; sub_3A4B6+51w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_42A30	dd ?			; DATA XREF: _main+196w
					; sub_14DA2+18E0r ...
word_42A34	dw ?			; DATA XREF: sub_37EC0+D9w
					; sub_38DE6:loc_38E32r
word_42A36	dw ?			; DATA XREF: sub_37EC0+DCw
					; sub_38DE6+4Fr
byte_42A38	db ?			; DATA XREF: sub_21B7A+339r
					; sub_21B7A+360w
		db    ?	;
word_42A3A	dw ?			; DATA XREF: sub_1A0F4+D1Bw
					; sub_1A0F4+E2Bw ...
word_42A3C	dw ?			; DATA XREF: sub_1A0F4+D23w
					; sub_1A0F4+E34w ...
word_42A3E	dw ?			; DATA XREF: sub_1A0F4+540r
					; sub_1A0F4+D36w ...
word_42A40	dw ?			; DATA XREF: sub_1A0F4+551w
					; sub_1A0F4:loc_1ADFCw	...
word_42A42	dw ?			; DATA XREF: sub_1A0F4:loc_1A58Fw
					; sub_1A0F4+D39w ...
word_42A44	dw ?			; DATA XREF: sub_1A0F4+4AAw
					; sub_1A0F4+D48w ...
word_42A46	dw ?			; DATA XREF: sub_1A0F4+4B0w
					; sub_1A0F4+D4Ew ...
word_42A48	dw ?			; DATA XREF: sub_1A0F4+559w
					; sub_1A0F4+D5Cw ...
word_42A4A	dw ?			; DATA XREF: sub_1A0F4+4B6w
					; sub_1A0F4+D5Fw ...
byte_42A4C	db ?			; DATA XREF: sub_1A0F4+4A7w
					; sub_1A0F4+D45w ...
byte_42A4D	db ?			; DATA XREF: sub_1A0F4+4BCw
					; sub_1A0F4+D65w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42A54	dw ?			; DATA XREF: sub_1A0F4:loc_1B2E6w
word_42A56	dw ?			; DATA XREF: sub_1A0F4+1258w
					; sub_1A0F4:loc_1B36Aw
word_42A58	dw ?			; DATA XREF: sub_1A0F4+120Bw
word_42A5A	dw ?			; DATA XREF: sub_1A0F4+1211w
word_42A5C	dw ?			; DATA XREF: sub_1A0F4+121Aw
word_42A5E	dw ?			; DATA XREF: sub_1A0F4+1223w
					; sub_1A0F4:loc_1B320w
byte_42A60	db ?			; DATA XREF: sub_1A0F4+124Ew
					; sub_1A0F4+1251r
byte_42A61	db ?			; DATA XREF: sub_1A0F4:loc_1B336w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42CBA	dw ?			; DATA XREF: sub_1FF92+99w
					; sub_1FF92+BEr
		db    ?	;
		db    ?	;
word_42CBE	dw ?			; DATA XREF: sub_1FF92+8Dw
					; sub_1FF92+CEr
word_42CC0	dw ?			; DATA XREF: sub_1FF92+ADw
					; sub_1FF92+E7r
		db    ?	;
		db    ?	;
word_42CC4	dw ?			; DATA XREF: sub_1FF92+A0w
					; sub_1FF92+F5r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42D02	dw ?			; DATA XREF: sub_16F3A+B8w
					; sub_1A0F4+20ECr ...
word_42D04	dw ?			; DATA XREF: sub_1FF92+32Cw
					; sub_1FF92+351r
		db    ?	;
		db    ?	;
word_42D08	dw ?			; DATA XREF: sub_1FF92+320w
					; sub_1FF92+361r
word_42D0A	dw ?			; DATA XREF: sub_1FF92+340w
					; sub_1FF92+37Ar
		db    ?	;
		db    ?	;
word_42D0E	dw ?			; DATA XREF: sub_1FF92+333w
					; sub_1FF92+388r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_42D20	dw ?			; DATA XREF: sub_14DA2+4EFr
					; sub_14DA2+51Br ...
dword_42D22	dd ?			; DATA XREF: _main+110w sub_171E8+14Cr ...
byte_42D26	db ?			; DATA XREF: sub_188A4+1Fr
					; sub_188A4:loc_188D6r	...
		db    ?	;
word_42D28	dw ?			; DATA XREF: sub_1A0F4+4D2r
					; sub_21B7A+2Cw
byte_42D2A	db ?			; DATA XREF: sub_188A4+4Cr
					; sub_188A4:loc_18903r	...
		db    ?	;
word_42D2C	dw ?			; DATA XREF: sub_14DA2+500r
					; sub_14DA2+53Dr ...
byte_42D2E	db ?			; DATA XREF: sub_39CCE:loc_39D16w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_42DAE	db ?			; DATA XREF: sub_378CA+79w
byte_42DAF	db ?			; DATA XREF: sub_378CA+7Fw
byte_42DB0	db ?			; DATA XREF: sub_378CA+82w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_43748	dw ?			; DATA XREF: sub_1A0F4+1BFFr
word_4374A	dw ?			; DATA XREF: sub_1A0F4+1C02r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_4386C	db ?			; DATA XREF: sub_11C42+82Er
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_43892	dw ?			; DATA XREF: sub_1A0F4+1842r
					; sub_1FF92+76r ...
word_43894	dw ?			; DATA XREF: sub_1A0F4+1845r
					; sub_1FF92+79r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_438A8	dw ?			; DATA XREF: sub_1A0F4+1AEEr
					; sub_1FF92+309r ...
word_438AA	dw ?			; DATA XREF: sub_1A0F4+1AF1r
					; sub_1FF92+30Cr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_438E8	dd ?			; DATA XREF: _main+11Fw sub_171E8+158r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_43924	dw ?			; DATA XREF: sub_193E0+1A3r
		db    ?	;
		db    ?	;
word_43928	dw ?			; DATA XREF: sub_37EC0+156w
					; sub_38DE6:loc_38E60r
word_4392A	dw ?			; DATA XREF: sub_37EC0+159w
					; sub_38DE6+7Dr
byte_4392C	db ?			; DATA XREF: sub_14DA2+AA9r
					; sub_14DA2+B4Cw ...
		db    ?	;
dword_4392E	dd ?			; DATA XREF: sub_3A958r sub_3A958+1Dw	...
word_43932	dw ?			; DATA XREF: sub_1C302+18r
					; sub_1CBDC+82r ...
word_43934	dw ?			; DATA XREF: sub_21B7A+Cw
word_43936	dw ?			; DATA XREF: sub_21B7A+12w
word_43938	dw ?			; DATA XREF: sub_21B7A+3E5w
word_4393A	dw ?			; DATA XREF: sub_21B7A+3EBw
byte_4393C	db ?			; DATA XREF: sub_17008+FCr
					; sub_17008:loc_1711Br	...
byte_4393D	db ?			; DATA XREF: sub_24E9E+1E5w
word_4393E	dw ?			; DATA XREF: sub_37EC0+F2w
					; sub_38DE6:loc_38E42r
word_43940	dw ?			; DATA XREF: sub_37EC0+F5w
					; sub_38DE6+5Fr
dword_43942	dd ?			; DATA XREF: _main+12Ew sub_14712+16Cr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4394A	dw ?			; DATA XREF: sub_37EC0+10Bw
					; sub_38DE6:loc_38E74r
word_4394C	dw ?			; DATA XREF: sub_37EC0+10Ew
					; sub_38DE6+91r
word_4394E	dw ?			; DATA XREF: sub_24E9E+208w
					; sub_25E24:loc_25E3Er
byte_43950	db ?			; DATA XREF: sub_21B7A+D1w
					; sub_21B7A+103w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_43964	dw ?			; DATA XREF: sub_14DA2:loc_1624Ar
					; sub_188A4+26r ...
byte_43966	db ?			; DATA XREF: _main:loc_103D1w
					; _main:loc_1049Ew ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4408C	dw ?			; DATA XREF: sub_14DA2+14A1r
					; sub_188A4+53r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4428E	dw ?			; DATA XREF: sub_14DA2+4B8r
					; sub_14DA2:loc_15D94w	...
byte_44290	db ?			; DATA XREF: sub_3717C+67w
					; sub_3717C+79r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_442E4	db ?			; DATA XREF: sub_2255A+16w
					; seg005:loc_225A2r ...
		db    ?	;
word_442E6	dw ?			; DATA XREF: sub_24DE6w sub_24E9E+413r ...
word_442E8	dw ?			; DATA XREF: sub_21B7A+6F1r
					; sub_22698+E6r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_4432A	db ?			; DATA XREF: sub_21B7A+C7w
					; sub_21B7A+30Bw ...
		db    ?	;
word_4432C	dw ?			; DATA XREF: sub_37EC0+13Dw
					; sub_38DE6:loc_38E56r
word_4432E	dw ?			; DATA XREF: sub_37EC0+140w
					; sub_38DE6+73r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_44346	db ?			; DATA XREF: sub_21B7A+C2w
					; sub_21B7A+308r ...
		db    ?	;
word_44348	dw ?			; DATA XREF: sub_13178+3DDr
word_4434A	dw ?			; DATA XREF: sub_13178+3D9r
word_4434C	dw ?			; DATA XREF: sub_13178+71Br
					; sub_13178+72Dr ...
word_4434E	dw ?			; DATA XREF: sub_13178+FFr
					; sub_13178+10Dr ...
word_44350	dw ?			; DATA XREF: sub_13178:loc_133B5r
					; sub_13178+29Er ...
word_44352	dw ?			; DATA XREF: sub_13178+398r
					; sub_13178+3C5r ...
word_44354	dw ?			; DATA XREF: sub_13178+39Br
word_44356	dw ?			; DATA XREF: sub_13178+110r
					; sub_13178+18Br ...
word_44358	dw ?			; DATA XREF: sub_13178+46Br
					; sub_13178+49Cr
word_4435A	dw ?			; DATA XREF: sub_13178+53Ar
word_4435C	dw ?			; DATA XREF: sub_13178+5B1r
					; sub_13178+5DFr
word_4435E	dw ?			; DATA XREF: sub_14DA2+62w
					; sub_14DA2+B7r ...
word_44360	dw ?			; DATA XREF: sub_297FC+29w
					; sub_29858+10r
word_44362	dw ?			; DATA XREF: sub_297FC+2Cw
					; sub_29858+Cr
dword_44364	dd ?			; DATA XREF: sub_28E04+47r
					; sub_3A2C0+E3w ...
word_44368	dw ?			; DATA XREF: sub_37EC0+16Fw
					; sub_38DE6:loc_38E6Ar
word_4436A	dw ?			; DATA XREF: sub_37EC0+172w
					; sub_38DE6+87r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44382	dw ?			; DATA XREF: sub_1069C+3Aw
					; sub_1069C:loc_106DEw	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_443F2	dw ?			; DATA XREF: sub_24DE6+18w
					; sub_24E9E:loc_250A3r	...
word_443F4	dw ?			; DATA XREF: seg005:loc_225BAw
					; seg005:0A51r	...
dword_443F6	dd ?			; DATA XREF: _main+22Bw _main+336r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_445B4	dw ?			; DATA XREF: sub_16B02+115w
word_445B6	dw ?			; DATA XREF: sub_16B02+128w
word_445B8	dw ?			; DATA XREF: sub_16B02+178w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_445CC	dw ?			; DATA XREF: sub_16B02+98w
					; sub_17008+7Fr ...
word_445CE	dw ?			; DATA XREF: sub_16B02+8Aw
					; sub_17008+7Cr ...
word_445D0	dw ?			; DATA XREF: sub_16B02+1AAw
					; sub_171E8+B6w
word_445D2	dw ?			; DATA XREF: sub_16B02+1A7w
					; sub_171E8+BAw
word_445D4	dw ?			; DATA XREF: sub_16B02+1ADw
					; sub_16F3A:loc_16F6Br	...
word_445D6	dw ?			; DATA XREF: sub_16B02+1B1w
					; sub_195E6+163w
word_445D8	dw ?			; DATA XREF: sub_16B02+1B5w
					; sub_195E6+173w
word_445DA	dw ?			; DATA XREF: sub_16B02+1B9w
					; sub_195E6+17Dw ...
word_445DC	dw ?			; DATA XREF: sub_16B02+1BDw
					; sub_195E6+8Aw ...
word_445DE	dw ?			; DATA XREF: sub_16B02+1C1w
					; sub_171E8+1C1w ...
word_445E0	dw ?			; DATA XREF: sub_16B02+1C5w
					; sub_195E6+C0w ...
word_445E2	dw ?			; DATA XREF: sub_16B02+1C9w
					; sub_17A78+54Ar ...
word_445E4	dw ?			; DATA XREF: sub_14DA2+16A6w
					; sub_16B02+1CDw
word_445E6	dw ?			; DATA XREF: sub_14712+7Ar
					; sub_17008+176r ...
word_445E8	dw ?			; DATA XREF: sub_14712+7Dr
					; sub_17008+17Ar ...
word_445EA	dw ?			; DATA XREF: sub_14712+8Er
					; sub_171E8+278r ...
word_445EC	dw ?			; DATA XREF: sub_14712+91r
					; sub_171E8+27Cr ...
word_445EE	dw ?			; DATA XREF: sub_14712+A2r
					; sub_17008+13Cr ...
word_445F0	dw ?			; DATA XREF: sub_14712+A5r
					; sub_17008+140r ...
word_445F2	dw ?			; DATA XREF: sub_188A4:loc_1893Ar
word_445F4	dw ?			; DATA XREF: sub_188A4+99r
word_445F6	dw ?			; DATA XREF: sub_188A4+AAr
word_445F8	dw ?			; DATA XREF: sub_188A4+ADr
word_445FA	dw ?			; DATA XREF: sub_188A4+BEr
word_445FC	dw ?			; DATA XREF: sub_188A4+C1r
word_445FE	dw ?			; DATA XREF: sub_171E8+1DEr
					; sub_171E8+433r ...
word_44600	dw ?			; DATA XREF: sub_171E8+1E2r
					; sub_171E8+524r ...
word_44602	dw ?			; DATA XREF: sub_171E8+1E6r
					; sub_171E8+528r ...
		db    ?	;
		db    ?	;
word_44606	dw ?			; DATA XREF: sub_187B2+8r
					; sub_187B2:loc_1882Er	...
word_44608	dw ?			; DATA XREF: sub_188A4+235r
					; sub_22D2E:loc_232BCr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44610	dw ?			; DATA XREF: sub_11C42+6A3r
					; sub_17008+1AAr ...
word_44612	dw ?			; DATA XREF: sub_17008+9Dr
					; sub_171E8+28r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4461A	dw ?			; DATA XREF: sub_22D2E+387r
					; sub_22D2E+3DFr
		db    ?	;
		db    ?	;
word_4461E	dw ?			; DATA XREF: sub_22D2E+390r
					; sub_22D2E+3E3r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4462E	dw ?			; DATA XREF: sub_171E8+55Ew
word_44630	dw ?			; DATA XREF: sub_16B02+2FDr
					; sub_171E8:loc_173F6r	...
word_44632	dw ?			; DATA XREF: sub_171E8+3Br
word_44634	dw ?			; DATA XREF: sub_171E8+42r
word_44636	dw ?			; DATA XREF: sub_171E8+49r
word_44638	dw ?			; DATA XREF: sub_171E8+50r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4468A	dw ?			; DATA XREF: sub_171E8:loc_1743Ar
word_4468C	dw ?			; DATA XREF: sub_171E8+26Er
					; sub_171E8+275r
word_4468E	dw ?			; DATA XREF: sub_171E8:loc_17481r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4469C	dw ?			; DATA XREF: sub_171E8:loc_1779Er
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_446A2	db ?			; DATA XREF: sub_1A0F4:loc_1BED8r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_446A8	db ?			; DATA XREF: sub_1A0F4+A05r
byte_446A9	db ?			; DATA XREF: sub_1A0F4+A0Cr
byte_446AA	db ?			; DATA XREF: sub_1A0F4+A13r
byte_446AB	db ?			; DATA XREF: sub_1A0F4+A1Ar
		db    ?	;
		db    ?	;
		db    ?	;
byte_446AF	db ?			; DATA XREF: sub_14712:loc_149EBr
					; sub_14712:loc_14A5Br	...
byte_446B0	db ?			; DATA XREF: sub_22D2E+308r
					; sub_22D2E+375r
byte_446B1	db ?			; DATA XREF: sub_22D2E:loc_23030r
					; sub_22D2E+399r
byte_446B2	db ?			; DATA XREF: sub_11C42+682w
byte_446B3	db ?			; DATA XREF: sub_171E8+118w
					; sub_171E8:loc_17771r
byte_446B4	db ?			; DATA XREF: sub_16B02+2EFr
					; sub_16B02+2F2w ...
byte_446B5	db ?			; DATA XREF: sub_171E8:loc_171FBw
					; sub_171E8+2Fw
word_446B6	dw ?			; DATA XREF: sub_14712:loc_14750r
					; sub_14712+544r ...
word_446B8	dw ?			; DATA XREF: sub_14712+41r
					; sub_14712+547r ...
word_446BA	dw ?			; DATA XREF: sub_14712+52r
					; sub_14712+558r ...
word_446BC	dw ?			; DATA XREF: sub_14712+55r
					; sub_14712+55Br ...
word_446BE	dw ?			; DATA XREF: sub_14712+66r
					; sub_14712+56Cr ...
word_446C0	dw ?			; DATA XREF: sub_14712+69r
					; sub_14712+56Fr ...
word_446C2	dw ?			; DATA XREF: sub_188A4+115r
word_446C4	dw ?			; DATA XREF: sub_188A4+118r
word_446C6	dw ?			; DATA XREF: sub_188A4+129r
word_446C8	dw ?			; DATA XREF: sub_188A4+12Cr
word_446CA	dw ?			; DATA XREF: sub_188A4+13Dr
word_446CC	dw ?			; DATA XREF: sub_188A4+140r
word_446CE	dw ?			; DATA XREF: sub_14712+C4r
					; sub_14712+584r ...
word_446D0	dw ?			; DATA XREF: sub_14712+C8r
					; sub_14712+588r ...
word_446D2	dw ?			; DATA XREF: sub_14712+CCr
					; sub_14712+58Cr ...
		db    ?	;
		db    ?	;
word_446D6	dw ?			; DATA XREF: sub_14712+42Cr
					; sub_14712+43Fr ...
word_446D8	dw ?			; DATA XREF: sub_188A4+290r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_446E0	dw ?			; DATA XREF: sub_14712+4CBr
					; sub_14712+4DEr
word_446E2	dw ?			; DATA XREF: sub_14712+E7r
					; sub_14712+480r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_446EC	dw ?			; DATA XREF: sub_14712:loc_14738r
					; sub_14712+472r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_446FA	dw ?			; DATA XREF: sub_14712+4A7r
word_446FC	dw ?			; DATA XREF: sub_14712:loc_14BB6r
word_446FE	dw ?			; DATA XREF: sub_14712+5C2w
word_44700	dw ?			; DATA XREF: sub_14712+166r
					; sub_14712+17Ew ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4475A	dw ?			; DATA XREF: sub_14712+23Br
					; sub_14712+283r ...
word_4475C	dw ?			; DATA XREF: sub_14712+242r
					; sub_14712+253r ...
word_4475E	dw ?			; DATA XREF: sub_14712+25Dr
					; sub_14712+2BFr ...
word_44760	dw ?			; DATA XREF: sub_14712:loc_149FEr
word_44762	dw ?			; DATA XREF: sub_14712:loc_14A24r
word_44764	dw ?			; DATA XREF: sub_14712:loc_14A3Br
word_44766	dw ?			; DATA XREF: sub_14712+27Dr
word_44768	dw ?			; DATA XREF: sub_14712:loc_149B4r
word_4476A	dw ?			; DATA XREF: sub_14712:loc_149CBr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_44772	db ?			; DATA XREF: sub_1A0F4:loc_1BF02r
		db    ?	;
		db    ?	;
byte_44775	db ?			; DATA XREF: sub_14712:loc_14B2Fr
byte_44776	db ?			; DATA XREF: sub_14712+464r
		db    ?	;
byte_44778	db ?			; DATA XREF: sub_1A0F4+BADr
byte_44779	db ?			; DATA XREF: sub_1A0F4+BB4r
byte_4477A	db ?			; DATA XREF: sub_1A0F4+BBBr
byte_4477B	db ?			; DATA XREF: sub_1A0F4+BC2r
		db    ?	;
byte_4477D	db ?			; DATA XREF: sub_14712+38Cr
		db    ?	;
byte_4477F	db ?			; DATA XREF: sub_14712+E0r
					; sub_14712+46Br ...
		db    ?	;
		db    ?	;
		db    ?	;
byte_44783	db ?			; DATA XREF: sub_14712+192w
					; sub_14712+3E2w ...
byte_44784	db ?			; DATA XREF: sub_14712+158r
					; sub_14712+15Bw ...
byte_44785	db ?			; DATA XREF: sub_14712+B6w
					; sub_14712+DBw ...
word_44786	dw ?			; DATA XREF: sub_16B02+2C0w
					; sub_171E8+C4r ...
word_44788	dw ?			; DATA XREF: sub_16B02+9Cw
					; sub_171E8+111r ...
word_4478A	dw ?			; DATA XREF: sub_16B02+2D6w
					; sub_17816+20r ...
word_4478C	dw ?			; DATA XREF: sub_16B02+2D9w
					; sub_17816+29r ...
word_4478E	dw ?			; DATA XREF: sub_16B02+2E0w
					; sub_17816+3Ar ...
word_44790	dw ?			; DATA XREF: sub_16B02+2E3w
					; sub_17816+43r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_44888	db ?			; DATA XREF: sub_16B02+85w
byte_44889	db ?			; DATA XREF: sub_14712+2Dr
					; sub_14712:loc_148B3r	...
byte_4488A	db ?			; DATA XREF: sub_16B02+95w
					; sub_17008+75r ...
byte_4488B	db ?			; DATA XREF: sub_16B02+A0w
byte_4488C	db ?			; DATA XREF: sub_16B02+A3w
byte_4488D	db ?			; DATA XREF: sub_14712:loc_14BCEr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_448BE	db ?			; DATA XREF: sub_16B02+42Fw
					; sub_17008+D9r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_448EF	db ?			; DATA XREF: sub_16B02+2CCw
					; sub_171E8+BEr ...
byte_448F0	db ?			; DATA XREF: sub_16B02+2CFw
					; sub_171E8:loc_172E4w	...
byte_448F1	db ?			; DATA XREF: sub_16B02+2C6w
					; sub_171E8+1Fw ...
byte_448F2	db ?			; DATA XREF: sub_14712+BBw
					; sub_14712:loc_149F5w	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44984	dw ?			; DATA XREF: sub_11C42+2Dw
					; sub_11C42+7F5r ...
word_44986	dw ?			; DATA XREF: sub_14DA2+59w
					; sub_14DA2+BDr ...
word_44988	dw ?			; DATA XREF: sub_14DA2:loc_15264r
					; sub_1E1A0+1Aw ...
word_4498A	dw ?			; DATA XREF: sub_368AA+3w sub_368D2+6w ...
word_4498C	dw ?			; DATA XREF: sub_368D2+3Ar
					; seg017:0127r	...
word_4498E	dw ?			; DATA XREF: sub_368AA+Cw
					; sub_3695C+12w ...
word_44990	dw ?			; DATA XREF: sub_368AA+12w
					; sub_3695C+1Aw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44998	dw ?			; DATA XREF: sub_14DA2+50w
					; sub_14DA2+C3r ...
byte_4499A	db ?			; DATA XREF: sub_14712+609r
					; sub_14DA2:loc_16710r	...
byte_4499B	db ?			; DATA XREF: sub_14DA2+19B4r
					; sub_16B02+119r ...
word_4499C	dw ?			; DATA XREF: sub_16B02+74w
					; sub_1D93C:loc_1DAEEr	...
byte_4499E	db ?			; DATA XREF: sub_14712:loc_14CE1r
					; sub_14DA2:loc_1671Fr	...
byte_4499F	db ?			; DATA XREF: sub_171E8+8r sub_171E8+Fw ...
word_449A0	dw ?			; DATA XREF: sub_1D12E+28r
					; sub_1D12E+7Fr ...
word_449A2	dw ?			; DATA XREF: sub_1D12E+24r
					; sub_1D12E+7Br ...
byte_449A4	db ?			; DATA XREF: sub_1293C+53Cr sub_146E4w ...
byte_449A5	db ?			; DATA XREF: sub_1293C+542r
					; sub_146E4+5w	...
byte_449A6	db ?			; DATA XREF: sub_1293C+548r
					; sub_146E4+Aw	...
byte_449A7	db ?			; DATA XREF: sub_1293C+54Er
					; sub_146E4+Fw	...
byte_449A8	db ?			; DATA XREF: sub_1293C+554r
					; sub_146E4+14w ...
byte_449A9	db ?			; DATA XREF: sub_146E4+23w
					; sub_16B02+2ACr
byte_449AA	db ?			; DATA XREF: sub_11A1C+A5r
					; sub_1293C:loc_129A8r	...
byte_449AB	db ?			; DATA XREF: sub_1293C+535r
					; sub_1293C+53Fw ...
byte_449AC	db ?			; DATA XREF: sub_1293C+545w
					; sub_23702+7Er ...
byte_449AD	db ?			; DATA XREF: sub_1293C+54Bw
					; sub_23702+84r ...
byte_449AE	db ?			; DATA XREF: sub_1293C+551w
					; sub_23702+8Ar ...
byte_449AF	db ?			; DATA XREF: sub_1293C+55Bw
					; sub_146E4+1Ew ...
byte_449B0	db ?			; DATA XREF: sub_1293C+55Ew
byte_449B1	db ?			; DATA XREF: sub_2A2BC+13A7w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_449BA	db ?			; DATA XREF: sub_21B7A+DDr
					; sub_21B7A+116w ...
		db    ?	;
word_449BC	dw ?			; DATA XREF: _main:loc_104A6w
					; sub_21B7A:loc_21BECr	...
word_449BE	dw ?			; DATA XREF: sub_14DA2+11w
					; sub_14DA2+2F0r ...
word_449C0	dw ?			; DATA XREF: sub_14DA2+14w
					; sub_14DA2+2F4r ...
dword_449C2	dd ?			; DATA XREF: sub_28E04+62r
					; sub_3A2C0+C8w ...
word_449C6	dw ?			; DATA XREF: sub_14DA2+27w
					; sub_14DA2+306r ...
word_449C8	dw ?			; DATA XREF: sub_14DA2+2Aw
					; sub_14DA2+30Ar ...
word_449CA	dw ?			; DATA XREF: sub_14DA2+3Dw
					; sub_14DA2+31Dr ...
word_449CC	dw ?			; DATA XREF: sub_14DA2+40w
					; sub_14DA2+321r ...
byte_449CE	db ?			; DATA XREF: sub_11588+8w
					; sub_1168E+228r ...
		db    ?	;
word_449D0	dw ?			; DATA XREF: sub_118D4+F0r
					; sub_118D4+F6w ...
		db    ?	;
		db    ?	;
dword_449D4	dd ?			; DATA XREF: _main+1FEw sub_17816+140r ...
		db    ?	;
		db    ?	;
byte_449DA	db ?			; DATA XREF: sub_17008+8Fr
					; sub_17008+B1w ...
		db    ?	;
word_449DC	dw ?			; DATA XREF: _main+187w sub_188A4+2DDr ...
word_449DE	dw ?			; DATA XREF: _main+18Aw sub_188A4+2E1r ...
word_449E0	dw ?			; DATA XREF: sub_14DA2+984r
					; sub_19926+4Dr ...
byte_449E2	db ?			; DATA XREF: sub_21B7A+369w
					; sub_21B7A+415r ...
		db    ?	;
word_449E4	dw ?			; DATA XREF: sub_188A4+19r
					; sub_188A4+1E1r ...
byte_449E6	db ?			; DATA XREF: sub_21B7A+AFw
					; seg005:0AE5r	...
		db    ?	;
word_449E8	dw ?			; DATA XREF: sub_16B02+52w
					; sub_16B02:loc_16B5Cw	...
word_449EA	dw ?			; DATA XREF: sub_21B7A+1Dw
					; sub_21B7A+3ADr ...
word_449EC	dw ?			; DATA XREF: sub_14DA2+990r
					; sub_19926+33r ...
dword_449EE	dd ?			; DATA XREF: _main+1B4w sub_274B0+B1r	...
word_449F2	dw ?			; DATA XREF: sub_10F3C+110w
					; sub_10F3C+114r ...
byte_449F4	db ?			; DATA XREF: sub_24E9E+221w
					; sub_24E9E+22Bw ...
		db    ?	;
word_449F6	dw ?			; DATA XREF: sub_14DA2+99Cr
					; sub_19926+58r ...
word_449F8	dw ?			; DATA XREF: sub_1FE94+74w
					; sub_1FE94+9Dw ...
word_449FA	dw ?			; DATA XREF: sub_1FE94+77w
					; sub_1FE94+A0w ...
		db    ?	;
		db    ?	;
word_449FE	dw ?			; DATA XREF: sub_19F14+42w
					; sub_19F14+48r ...
word_44A00	dw ?			; DATA XREF: sub_11C42+2C8r
					; sub_11C42+A4Dr ...
word_44A02	dw ?			; DATA XREF: sub_11C42+2C4r
					; sub_11C42+A49r ...
word_44A04	dw ?			; DATA XREF: sub_1D93C+16Aw
word_44A06	dw ?			; DATA XREF: sub_1D93C+170w
word_44A08	dw ?			; DATA XREF: sub_1D93C+176w
word_44A0A	dw ?			; DATA XREF: sub_1D93C+17Cw
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44A2C	dw ?			; DATA XREF: sub_1C474+1C1w
					; sub_1C474+52Ew ...
word_44A2E	dw ?			; DATA XREF: sub_1C474+1CCw
					; sub_1C474+534w ...
word_44A30	dw ?			; DATA XREF: sub_1C474+1DFw
					; sub_1C474+1FEw ...
word_44A32	dw ?			; DATA XREF: sub_1C474+1E5w
					; sub_1C474:loc_1C691w	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44A7C	dw ?			; DATA XREF: sub_297FC+14w
					; sub_297FC+37r ...
word_44A7E	dw ?			; DATA XREF: sub_297FC+17w
					; sub_297FC+33r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44A88	dw ?			; DATA XREF: sub_110D0+8Er
					; sub_1C302+15Fr ...
byte_44A8A	db ?			; DATA XREF: sub_22532+7w
					; seg005:loc_2263Ew ...
		db    ?	;
word_44A8C	dw ?			; DATA XREF: sub_14DA2:loc_15270r
					; sub_1E1A0+14w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_44AE2	db ?			; DATA XREF: _main+366r
					; _main:loc_1042Dw ...
		db    ?	;
word_44AE4	dw ?			; DATA XREF: sub_10786+51r
					; sub_13178+8F6r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_44CE6	dd ?			; DATA XREF: _main+1A5w sub_110D0+132r ...
word_44CEA	dw ?			; DATA XREF: sub_11C42+2Ar
					; sub_1D93C+164r ...
word_44CEC	dw ?			; DATA XREF: _main+B9w	_main+54Fr ...
word_44CEE	dw ?			; DATA XREF: _main+BCw	_main+54Br ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44D1E	dw ?			; DATA XREF: sub_188A4+1Cw
					; seg005:0A5Ar	...
word_44D20	dw ?			; DATA XREF: sub_188A4+2F8r
					; sub_1A0F4+3CBr ...
word_44D22	dw ?			; DATA XREF: _main+E5w	sub_110D0+18Ar	...
word_44D24	dw ?			; DATA XREF: _main+E8w	sub_110D0+186r	...
dword_44D26	dd ?			; DATA XREF: sub_1059A+46w
					; sub_1059A+57r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44D3C	dw ?			; DATA XREF: seg017:0136w sub_36A2C+Cw
dword_44D3E	dd ?			; DATA XREF: _main+13Dw sub_19CA2+35r	...
dword_44D42	dd ?			; DATA XREF: _main+1D1w
					; _main:loc_1032Fr ...
byte_44D46	db ?			; DATA XREF: sub_1E1A0+20w
					; sub_1E1A0+1132w ...
byte_44D47	db ?			; DATA XREF: sub_14DA2+443r
					; sub_14DA2+FF8w ...
word_44D48	dw ?			; DATA XREF: sub_3717C+3Dw
					; sub_3868A+Cw	...
dword_44D4A	dd ?			; DATA XREF: _main+14Cw sub_19CA2+B8r	...
word_44D4E	dw ?			; DATA XREF: sub_21B7A+10Dr
					; sub_21B7A+113r ...
byte_44D50	db ?			; DATA XREF: sub_17A78+3FEr
					; sub_193E0+19Bw
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44D60	dw ?			; DATA XREF: sub_1D7A2+10Aw
					; sub_22D2E+735r ...
word_44D62	dw ?			; DATA XREF: seg017:013Cw
					; sub_36A2C+1Ew
word_44D64	dw ?			; DATA XREF: sub_14DA2+B45w
					; sub_14DA2+100Aw ...
word_44D66	dw ?			; DATA XREF: sub_14DA2+B48w
					; sub_14DA2+100Dw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44DC6	dw ?			; DATA XREF: sub_14DA2+4AAr
					; sub_14DA2+929r ...
word_44DC8	dw ?			; DATA XREF: sub_11C42+8BBr
					; sub_26572+5Cr ...
word_44DCA	dw ?			; DATA XREF: sub_17008:loc_1710Er
					; sub_17008+10Ew ...
word_44DCC	dw ?			; DATA XREF: sub_1D93C+1AAw
					; sub_1D93C+1B5w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_44F36	dw ?			; DATA XREF: sub_14DA2:loc_14F7Cw
					; sub_14DA2:loc_15882w	...
word_44F38	dw ?			; DATA XREF: sub_14DA2+1E0w
					; sub_14DA2+AE6w ...
word_44F3A	dw ?			; DATA XREF: sub_14DA2+377w
					; sub_14DA2+AECw ...
word_44F3C	dw ?			; DATA XREF: sub_14DA2+221r
					; sub_14DA2+B0Cr ...
word_44F3E	dw ?			; DATA XREF: sub_14DA2+22Er
					; sub_14DA2+B19r ...
word_44F40	dw ?			; DATA XREF: sub_14DA2+23Cr
					; sub_14DA2+B27r ...
word_44F42	dw ?			; DATA XREF: sub_14DA2+53w
					; sub_19794+33r ...
word_44F44	dw ?			; DATA XREF: sub_14DA2+5Cw
					; sub_19794+2Ar ...
word_44F46	dw ?			; DATA XREF: sub_14DA2+65w
					; sub_19794+3Br ...
word_44F48	dw ?			; DATA XREF: sub_14DA2:loc_14FACw
					; sub_14DA2+216r ...
word_44F4A	dw ?			; DATA XREF: sub_14DA2+1E6w
					; sub_14DA2+AF5w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4549C	dw ?			; DATA XREF: sub_21B7A+555r
					; sub_22D2E+214w
word_4549E	dw ?			; DATA XREF: sub_21B7A+551r
					; sub_22D2E+217w
word_454A0	dw ?			; DATA XREF: sub_21B7A+545r
					; sub_22D2E+22Fw
word_454A2	dw ?			; DATA XREF: sub_21B7A:loc_220BBr
					; sub_22D2E+232w
byte_454A4	db ?			; DATA XREF: sub_19F14+17r
					; sub_1C474+1D2r ...
		db    ?	;
word_454A6	dw ?			; DATA XREF: sub_23702+EDw
					; sub_23702+11Cr ...
word_454A8	dw ?			; DATA XREF: sub_23702+F0w
					; sub_23702+118r ...
dword_454AA	dd ?			; DATA XREF: sub_1FF92+2Ew
					; sub_1FF92+3Er ...
word_454AE	dw ?			; DATA XREF: sub_21B7A:loc_21F19w
					; sub_21B7A+3B0r ...
dword_454B0	dd ?			; DATA XREF: sub_1FF92+256w
					; sub_1FF92+28Er ...
word_454B4	dw ?			; DATA XREF: _main+16Aw sub_206D4+E7Cr ...
word_454B6	dw ?			; DATA XREF: _main+16Dw sub_206D4+E80r ...
byte_454B8	db ?			; DATA XREF: sub_14DA2:loc_16236r
					; sub_188A4+8r	...
		db    ?	;
word_454BA	dw ?			; DATA XREF: sub_3717C+43w
					; sub_3868A:loc_386B6r	...
dword_454BC	dd ?			; DATA XREF: _main+1E0w sub_18D60+1C8r ...
word_454C0	dw ?			; DATA XREF: sub_23B4C+675r
					; sub_23B4C:loc_248F4r	...
word_454C2	dw ?			; DATA XREF: sub_14DA2+96Fr
					; sub_14DA2+B3Er ...
word_454C4	dw ?			; DATA XREF: sub_14DA2+973r
					; sub_14DA2+B41r ...
word_454C6	dw ?			; DATA XREF: _main+CFw	sub_298A8+4r
word_454C8	dw ?			; DATA XREF: _main+D2w	sub_298A8r
word_454CA	dw ?			; DATA XREF: sub_37EC0+124w
					; sub_38DE6:loc_38E4Cr
word_454CC	dw ?			; DATA XREF: sub_37EC0+127w
					; sub_38DE6+69r
word_454CE	dw ?			; DATA XREF: sub_1C302:loc_1C386r
					; sub_1C474:loc_1C66Er	...
word_454D0	dw ?			; DATA XREF: _main+15Bw sub_206D4+ED5r
word_454D2	dw ?			; DATA XREF: _main+15Ew sub_206D4+ED9r
word_454D4	dw ?			; DATA XREF: sub_11C42+8BFr
					; sub_1C474+3A7r ...
dword_454D6	dd ?			; DATA XREF: _main+20Dw sub_18D60+15r	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_45514	db ?			; DATA XREF: sub_11C42+230w
					; sub_1A0F4:loc_1BEDFw	...
		db    ?	;
word_45516	dw ?			; DATA XREF: sub_14712+5F2r
					; sub_14712+62Cr ...
word_45518	dw ?			; DATA XREF: sub_1C302+A6r
					; sub_1C302+116r ...
word_4551A	dw ?			; DATA XREF: sub_1C302+BFr
					; sub_1D7A2+7Bw ...
word_4551C	dw ?			; DATA XREF: sub_1C302+DCr
					; sub_1CBDC+BEr ...
word_4551E	dw ?			; DATA XREF: sub_1C302+F9r
					; sub_1CBDC+D9r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_45525	db ?			; DATA XREF: sub_19F14+72w
					; sub_1C474+22Dw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_4552F	db ?			; DATA XREF: sub_22532+Cw
					; seg005:loc_22666w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4554A	dw ?			; DATA XREF: sub_24E9E+20Ew
					; sub_25E24+28r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45574	dw ?			; DATA XREF: sub_19F14+51r
word_45576	dw ?			; DATA XREF: sub_19F14+5Ar
word_45578	dw ?			; DATA XREF: sub_19F14+63r
word_4557A	dw ?			; DATA XREF: sub_19F14+6Cr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_455C8	dd ?			; DATA XREF: sub_28DC8+17r
					; sub_28E04+2Cr ...
word_455CC	dw ?			; DATA XREF: sub_11C42+259w
					; sub_11C42+543r ...
word_455CE	dw ?			; DATA XREF: sub_11C42+25Cw
					; sub_11C42+53Fr ...
word_455D0	dw ?			; DATA XREF: sub_1C302+51r
					; sub_1C474:loc_1C4FCr	...
byte_455D2	db ?			; DATA XREF: sub_21B7A+327r
					; sub_21B7A+354w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4562E	dd ?			; DATA XREF: _main+1EFw sub_17008+Cr ...
word_45632	dw ?			; DATA XREF: sub_24DC2+6w
					; sub_25FF6+EDr ...
byte_45634	db ?			; DATA XREF: sub_21B7A+330r
					; sub_21B7A+35Aw ...
byte_45635	db ?			; DATA XREF: sub_206D4+2ADw
					; sub_206D4:loc_21094r	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_4563C	dd ?			; DATA XREF: _main+23Aw sub_17816+17Ar ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45678	dw ?			; DATA XREF: sub_19CA2+D0r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45944	dw ?			; DATA XREF: sub_19CA2+BFw
word_45946	dw ?			; DATA XREF: sub_19CA2+C2w
byte_45948	db ?			; DATA XREF: sub_374FA+3r
					; sub_3751A+2Ar ...
		db    ?	;
byte_4594A	db ?			; DATA XREF: sub_19E21+9w sub_19E4E+7r ...
byte_4594B	db ?			; DATA XREF: sub_19E21+Fw sub_19E4E+Cr ...
byte_4594C	db ?			; DATA XREF: sub_19E21+15w
					; sub_19E4E+12r ...
byte_4594D	db ?			; DATA XREF: sub_19E21+1Bw
					; sub_19E4E+18r ...
byte_4594E	db ?			; DATA XREF: sub_19E21+21w
					; sub_19E4E+1Er ...
byte_4594F	db ?			; DATA XREF: sub_19E21+27w
					; sub_19E4E+24r ...
byte_45950	db ?			; DATA XREF: sub_3717C+6Er
					; sub_3736A+1Dr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45982	dw ?			; DATA XREF: sub_19F14+4Er
word_45984	dw ?			; DATA XREF: sub_19F14+57r
word_45986	dw ?			; DATA XREF: sub_19F14+60r
word_45988	dw ?			; DATA XREF: sub_19F14+69r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_459D2	db ?			; DATA XREF: sub_378CA+C2w
					; sub_378CA:loc_379A2r	...
		db    ?	;
word_459D4	dw ?			; DATA XREF: sub_21B7A+3B6r
					; sub_21B7A+3FAr ...
word_459D6	dw ?			; DATA XREF: sub_24DC2+Cw
					; sub_25FF6+137r
byte_459D8	db ?			; DATA XREF: sub_188A4:loc_188B6r
					; sub_188A4:loc_18916w	...
		db    ?	;
dword_459DA	dd ?			; DATA XREF: _main+249w sub_17816+12Fr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_459F1	db ?			; DATA XREF: sub_21B7A:loc_21F38r
					; sub_23B4C:loc_243C4r	...
word_459F2	dw ?			; DATA XREF: sub_11C42+774r
					; sub_1293C+39Br ...
word_459F4	dw ?			; DATA XREF: sub_1A0F4+2101r
					; sub_23702+18Fw ...
word_459F6	dw ?			; DATA XREF: sub_1A0F4+20FDr
					; sub_23702+192w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_459FC	dw ?			; DATA XREF: sub_24DC2+1Ew
word_459FE	dw ?			; DATA XREF: sub_14DA2:loc_15257w
					; sub_14DA2+4C5r ...
word_45A00	dw ?			; DATA XREF: sub_16B02+67w
					; sub_16F3A+23r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45A20	dw ?			; DATA XREF: _main+3B5w _main+520r ...
word_45A22	dw ?			; DATA XREF: _main+3B8w _main+51Cr ...
word_45A24	dw ?			; DATA XREF: sub_13178+3C8r
					; sub_13178+3D1r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45D06	dw ?			; DATA XREF: sub_29772+6w
					; sub_29786:loc_297B5r	...
word_45D08	dw ?			; DATA XREF: sub_23702+1C9w
					; sub_239B4+4Ar ...
word_45D0A	dw ?			; DATA XREF: sub_23702+1CCw
					; sub_239B4+46r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45D1C	dw ?			; DATA XREF: sub_29772w sub_29786+Ew ...
word_45D1E	dw ?			; DATA XREF: sub_24DC2+12w
					; sub_25FF6+60r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_45D3E	db ?			; DATA XREF: sub_21B7A+12Bw
					; sub_21B7A+7C3w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45D7C	dw ?			; DATA XREF: sub_368D2+3Dw
					; seg017:012Aw	...
byte_45D7E	db ?			; DATA XREF: sub_1A0F4:loc_1B11Cw
					; sub_1A0F4:loc_1BEAAr	...
		db    ?	;
dword_45D80	dd ?			; DATA XREF: sub_1C302+B0r
					; sub_1C302+124r ...
dword_45D84	dd ?			; DATA XREF: sub_1C302+CDr
					; sub_1D7A2+73r ...
dword_45D88	dd ?			; DATA XREF: sub_1C302+EAr
					; sub_1CBDC+CAr ...
dword_45D8C	dd ?			; DATA XREF: sub_1C302+107r
					; sub_1CBDC+E6r ...
byte_45D90	db ?			; DATA XREF: sub_206D4+85Fw
					; sub_206D4+10D0w ...
		db    ?	;
word_45D92	dw ?			; DATA XREF: sub_24DC2+18w
					; sub_25FF6+93r ...
word_45D94	dw ?			; DATA XREF: sub_21B7A+125w
word_45D96	dw ?			; DATA XREF: sub_14DA2+545r
					; sub_14DA2+66Fr ...
word_45D98	dw ?			; DATA XREF: sub_24E9E+20Bw
					; sub_25E24+Er	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_45DB2	db ?			; DATA XREF: sub_14DA2+153Dr
					; sub_17008:loc_170B2r	...
		db    ?	;
word_45DB4	dw ?			; DATA XREF: _main+179w
					; sub_1A0F4+15FAr ...
word_45DB6	dw ?			; DATA XREF: _main+17Cw
					; sub_1A0F4+15FEr ...
word_45DB8	dw ?			; DATA XREF: sub_21B7A+363w
					; sub_21B7A:loc_21F1Fr	...
word_45DBA	dw ?			; DATA XREF: sub_21B7A+4B1r
					; sub_22D2E+1A8w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45DC8	dw ?			; DATA XREF: sub_1D12E+1D0r
					; sub_1D12E+276r
word_45DCA	dw ?			; DATA XREF: sub_1D12E+1CCr
					; sub_1D12E+272r
word_45DCC	dw ?			; DATA XREF: sub_1D12E+216r
					; sub_1D12E+35Cr
word_45DCE	dw ?			; DATA XREF: sub_1D12E+212r
					; sub_1D12E+358r
word_45DD0	dw ?			; DATA XREF: sub_17816:loc_178AEr
					; sub_206D4+49w ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45E0E	dw ?			; DATA XREF: sub_23702+104w
					; sub_23702+114r ...
word_45E10	dw ?			; DATA XREF: sub_23702+107w
					; sub_23702+110r ...
word_45E12	dw ?			; DATA XREF: sub_1059A+2Bw
					; sub_1059A+67r ...
word_45E14	dw ?			; DATA XREF: sub_1059A+2Ew
					; sub_1059A+63r ...
byte_45E16	db ?			; DATA XREF: sub_206D4+865w
					; sub_206D4+10D7w ...
		db    ?	;
		db    ?	;
		db    ?	;
byte_45E1A	db ?			; DATA XREF: _main+2A8w _main+381r ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dword_45E56	dd ?			; DATA XREF: _main+21Cw
					; sub_14DA2+18BCr ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45E92	dw ?			; DATA XREF: sub_19CA2+4Dr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45F2A	dw ?			; DATA XREF: sub_1A0F4+38Cr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_45F44	db ?			; DATA XREF: sub_22D2E+8C2r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_45F82	dw ?			; DATA XREF: sub_22D2E+74Br
word_45F84	dw ?			; DATA XREF: sub_22D2E+BCr
					; sub_22D2E:loc_2328Ar	...
word_45F86	dw ?			; DATA XREF: sub_22D2E+57Br
					; sub_22D2E+581r
byte_45F88	db ?			; DATA XREF: sub_22D2E+69Dr
byte_45F89	db ?			; DATA XREF: sub_22D2E+697r
byte_45F8A	db ?			; DATA XREF: sub_22D2E+6D7r
byte_45F8B	db ?			; DATA XREF: sub_22D2E:loc_233FFr
byte_45F8C	db ?			; DATA XREF: sub_22D2E+70Br
byte_45F8D	db ?			; DATA XREF: sub_22D2E:loc_23433r
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_46058	dw ?			; DATA XREF: sub_22D2E+774r
word_4605A	dw ?			; DATA XREF: sub_22D2E+770r
word_4605C	dw ?			; DATA XREF: sub_22D2E+597r
					; sub_22D2E+59Dr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4615E	dw ?			; DATA XREF: sub_19CA2+3Cw
word_46160	dw ?			; DATA XREF: sub_19CA2+3Fw
dword_46162	dd ?			; DATA XREF: _main+1C3w sub_22C92+24r	...
byte_46166	db ?			; DATA XREF: sub_19F14:loc_19F8Bw
					; sub_19F14+9Fr ...
byte_46167	db ?			; DATA XREF: sub_1D7A2+1Br
					; sub_1D7A2+2Dw
word_46168	dw ?			; DATA XREF: sub_1D7A2+4Cw
					; sub_1D7A2+5Cr ...
word_4616A	dw ?			; DATA XREF: sub_1D7A2+4Fw
					; sub_1D8B4+7r
word_4616C	dw ?			; DATA XREF: sub_22698+B9r
					; sub_23B4C+544r ...
byte_4616E	db ?			; DATA XREF: sub_206D4+2B2w
					; sub_206D4+87Dw ...
byte_4616F	db ?			; DATA XREF: sub_21B7A+2Fw
					; sub_21B7A+32Ar ...
word_46170	dw ?			; DATA XREF: sub_110D0+12Cr
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_4617E	dw ?			; DATA XREF: sub_1D534+3Cw
word_46180	dw ?			; DATA XREF: sub_1D534+42w
word_46182	dw ?			; DATA XREF: sub_1D534+52w
word_46184	dw ?			; DATA XREF: sub_1D534+55w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_461C2	dw ?			; DATA XREF: sub_21B7A+4FBr
					; sub_21B7A+51Ar ...
word_461C4	dw ?			; DATA XREF: sub_1FE94+Cw
					; sub_1FE94+3Aw ...
word_461C6	dw ?			; DATA XREF: sub_1FE94+9w
					; sub_1FE94+3Dw ...
byte_461C8	db ?			; DATA XREF: sub_21B7A+BDw
					; sub_21B7A:loc_21E8Fr	...
		db    ?	;
word_461CA	dw ?			; DATA XREF: sub_171E8+1B1w
					; sub_171E8+1BEr ...
word_461CC	dw ?			; DATA XREF: sub_1A0F4+2120r
					; sub_1A0F4+214Br ...
word_461CE	dw ?			; DATA XREF: sub_23B4C+51Fr
					; sub_23B4C+53Fr ...
word_461D0	dw ?			; DATA XREF: sub_23702+256r
					; sub_274B0+Br	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_463D2	dw ?			; DATA XREF: sub_1FE94+12w
					; sub_1FE94+4Dw ...
word_463D4	dw ?			; DATA XREF: sub_1FE94+Fw
					; sub_1FE94+50w ...
word_463D6	dw ?			; DATA XREF: sub_19F14+3Fr
					; sub_19F14:loc_19F59r	...
word_463D8	dw ?			; DATA XREF: sub_1D8D2+18w
					; sub_1D8D2+28r ...
word_463DA	dw ?			; DATA XREF: sub_1D8D2+1Bw sub_1D92Ar
word_463DC	dw ?			; DATA XREF: _main+258w
					; sub_1A0F4+1538r ...
word_463DE	dw ?			; DATA XREF: _main+25Bw
					; sub_1A0F4+153Cr ...
byte_463E0	db ?			; DATA XREF: sub_188A4:loc_18A52r
					; sub_188A4:loc_18B42r	...
		db    ?	;
word_463E2	dw ?			; DATA XREF: sub_1D534+6Ar
					; sub_1D7A2+104w
byte_463E4	db ?			; DATA XREF: sub_144CF+C3w
					; sub_144CF+E5w ...
byte_463E5	db ?			; DATA XREF: sub_144CF+CAw
					; sub_144CF+ECw ...
byte_463E6	db ?			; DATA XREF: sub_144CF+BAw
					; sub_2A2BC+1C6w ...
byte_463E7	db ?			; DATA XREF: sub_2A2BC+1CDw
					; sub_2A2BC+226w
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
word_46434	dw ?			; DATA XREF: sub_1A0F4+102Dw
					; sub_1A0F4+1433r ...
byte_46436	db ?			; DATA XREF: sub_11C42+26Fr
					; sub_11C42+A3Br ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_4644A	db ?			; DATA XREF: sub_21B7A+31Er
					; sub_21B7A+34Ew
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_4645E	db ?			; DATA XREF: sub_28AA2+6r
					; sub_39E56+F2w
		db    ?	;
dword_46460	dd ?			; DATA XREF: sub_1E1A0+184Fr
					; sub_1E1A0+188Br ...
		db    ?	;
		db    ?	;
		db    ?	;
byte_46467	db ?			; DATA XREF: sub_21B7A+CCw
					; sub_21B7A:loc_21DFCr	...
word_46468	dw ?			; DATA XREF: sub_1A0F4+3E9r sub_2255Aw ...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
byte_46484	db ?			; DATA XREF: sub_21B7A:loc_21F0Aw
					; sub_21B7A:loc_21FB8r	...
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
		db    ?	;
dseg		ends

; ===========================================================================

; Segment type:	Uninitialized
seg041		segment	byte stack 'STACK' use16
		assume cs:seg041
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 1F40h dup(?)
seg041		ends


		end start
