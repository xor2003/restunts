//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("metapc", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 1);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 16);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0xFF);
	add_default_til("ms16win");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	;
	add_segm_ex(0X10000,0X14712,0X1000,0,1,2,ADDSEG_NOSREG);
	SegRename(0X10000,"seg000");
	SegClass (0X10000,"CODE");
	SegDefReg(0x10000,"ds",0x3B77);
	set_segm_type(0X10000,2);
	add_segm_ex(0X14712,0X19DC5,0X1471,0,1,2,ADDSEG_NOSREG);
	SegRename(0X14712,"seg001");
	SegClass (0X14712,"CODE");
	SegDefReg(0x14712,"ds",0x3B77);
	set_segm_type(0X14712,2);
	add_segm_ex(0X19DC5,0X19F12,0X19DC,0,1,2,ADDSEG_NOSREG);
	SegRename(0X19DC5,"seg002");
	SegClass (0X19DC5,"CODE");
	SegDefReg(0x19DC5,"ds",0x3B77);
	set_segm_type(0X19DC5,2);
	add_segm_ex(0X19F12,0X1E1A0,0X19F1,0,1,2,ADDSEG_NOSREG);
	SegRename(0X19F12,"seg003");
	SegClass (0X19F12,"CODE");
	SegDefReg(0x19F12,"ds",0x3B77);
	set_segm_type(0X19F12,2);
	add_segm_ex(0X1E1A0,0X21B79,0X1E1A,0,1,2,ADDSEG_NOSREG);
	SegRename(0X1E1A0,"seg004");
	SegClass (0X1E1A0,"CODE");
	SegDefReg(0x1E1A0,"ds",0x3B77);
	set_segm_type(0X1E1A0,2);
	add_segm_ex(0X21B79,0X24D64,0X21B7,0,1,2,ADDSEG_NOSREG);
	SegRename(0X21B79,"seg005");
	SegClass (0X21B79,"CODE");
	SegDefReg(0x21B79,"ds",0x3B77);
	set_segm_type(0X21B79,2);
	add_segm_ex(0X24D64,0X26BAD,0X24D6,0,1,2,ADDSEG_NOSREG);
	SegRename(0X24D64,"seg006");
	SegClass (0X24D64,"CODE");
	SegDefReg(0x24D64,"ds",0x3B77);
	set_segm_type(0X24D64,2);
	add_segm_ex(0X26BAD,0X274B0,0X26BA,0,1,2,ADDSEG_NOSREG);
	SegRename(0X26BAD,"seg007");
	SegClass (0X26BAD,"CODE");
	SegDefReg(0x26BAD,"ds",0x3B77);
	set_segm_type(0X26BAD,2);
	add_segm_ex(0X274B0,0X2A2BC,0X274B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X274B0,"seg008");
	SegClass (0X274B0,"CODE");
	SegDefReg(0x274B0,"ds",0x3B77);
	set_segm_type(0X274B0,2);
	add_segm_ex(0X2A2BC,0X2CC52,0X2A2B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X2A2BC,"seg009");
	SegClass (0X2A2BC,"CODE");
	SegDefReg(0x2A2BC,"ds",0x3B77);
	set_segm_type(0X2A2BC,2);
	add_segm_ex(0X2CC52,0X2EA07,0X2CC5,0,1,2,ADDSEG_NOSREG);
	SegRename(0X2CC52,"seg010");
	SegClass (0X2CC52,"CODE");
	SegDefReg(0x2CC52,"ds",0x3B77);
	set_segm_type(0X2CC52,2);
	add_segm_ex(0X2EA07,0X2EA29,0X2EA0,0,1,2,ADDSEG_NOSREG);
	SegRename(0X2EA07,"seg011");
	SegClass (0X2EA07,"CODE");
	SegDefReg(0x2EA07,"ds",0x3B77);
	set_segm_type(0X2EA07,2);
	add_segm_ex(0X2EA29,0X361BC,0X2EA2,0,1,2,ADDSEG_NOSREG);
	SegRename(0X2EA29,"seg012");
	SegClass (0X2EA29,"CODE");
	SegDefReg(0x2EA29,"ds",0x3B77);
	set_segm_type(0X2EA29,2);
	add_segm_ex(0X361BC,0X36245,0X361B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X361BC,"seg013");
	SegClass (0X361BC,"CODE");
	SegDefReg(0x361BC,"ds",0x3B77);
	set_segm_type(0X361BC,2);
	add_segm_ex(0X36245,0X36412,0X3624,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36245,"seg014");
	SegClass (0X36245,"CODE");
	SegDefReg(0x36245,"ds",0x3B77);
	set_segm_type(0X36245,2);
	add_segm_ex(0X36412,0X367B1,0X3641,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36412,"seg015");
	SegClass (0X36412,"CODE");
	SegDefReg(0x36412,"ds",0x3B77);
	set_segm_type(0X36412,2);
	add_segm_ex(0X367B1,0X368AA,0X367B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X367B1,"seg016");
	SegClass (0X367B1,"CODE");
	SegDefReg(0x367B1,"ds",0x3B77);
	set_segm_type(0X367B1,2);
	add_segm_ex(0X368AA,0X36AF2,0X368A,0,1,2,ADDSEG_NOSREG);
	SegRename(0X368AA,"seg017");
	SegClass (0X368AA,"CODE");
	SegDefReg(0x368AA,"ds",0x3B77);
	set_segm_type(0X368AA,2);
	add_segm_ex(0X36AF2,0X36B16,0X36AF,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36AF2,"seg018");
	SegClass (0X36AF2,"CODE");
	SegDefReg(0x36AF2,"ds",0x3B77);
	set_segm_type(0X36AF2,2);
	add_segm_ex(0X36B16,0X36BBD,0X36B1,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36B16,"seg019");
	SegClass (0X36B16,"CODE");
	SegDefReg(0x36B16,"ds",0x3B77);
	set_segm_type(0X36B16,2);
	add_segm_ex(0X36BBD,0X36BE8,0X36BB,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36BBD,"seg020");
	SegClass (0X36BBD,"CODE");
	SegDefReg(0x36BBD,"ds",0x3B77);
	set_segm_type(0X36BBD,2);
	add_segm_ex(0X36BE8,0X36C7E,0X36BE,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36BE8,"seg021");
	SegClass (0X36BE8,"CODE");
	SegDefReg(0x36BE8,"ds",0x3B77);
	set_segm_type(0X36BE8,2);
	add_segm_ex(0X36C7E,0X36EC0,0X36C7,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36C7E,"seg022");
	SegClass (0X36C7E,"CODE");
	SegDefReg(0x36C7E,"ds",0x3B77);
	set_segm_type(0X36C7E,2);
	add_segm_ex(0X36EC0,0X36F29,0X36EC,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36EC0,"seg023");
	SegClass (0X36EC0,"CODE");
	SegDefReg(0x36EC0,"ds",0x3B77);
	set_segm_type(0X36EC0,2);
	add_segm_ex(0X36F29,0X3702D,0X36F2,0,1,2,ADDSEG_NOSREG);
	SegRename(0X36F29,"seg024");
	SegClass (0X36F29,"CODE");
	SegDefReg(0x36F29,"ds",0x3B77);
	set_segm_type(0X36F29,2);
	add_segm_ex(0X3702D,0X370BA,0X3702,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3702D,"seg025");
	SegClass (0X3702D,"CODE");
	SegDefReg(0x3702D,"ds",0x3B77);
	set_segm_type(0X3702D,2);
	add_segm_ex(0X370BA,0X370D2,0X370B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X370BA,"seg026");
	SegClass (0X370BA,"CODE");
	SegDefReg(0x370BA,"ds",0x3B77);
	set_segm_type(0X370BA,2);
	add_segm_ex(0X370D2,0X3863C,0X370D,0,1,2,ADDSEG_NOSREG);
	SegRename(0X370D2,"seg027");
	SegClass (0X370D2,"CODE");
	SegDefReg(0x370D2,"ds",0x3B77);
	set_segm_type(0X370D2,2);
	add_segm_ex(0X3863C,0X39AD1,0X3863,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3863C,"seg028");
	SegClass (0X3863C,"CODE");
	SegDefReg(0x3863C,"ds",0x3B77);
	set_segm_type(0X3863C,2);
	add_segm_ex(0X39AD1,0X39CCA,0X39AD,0,1,2,ADDSEG_NOSREG);
	SegRename(0X39AD1,"seg029");
	SegClass (0X39AD1,"CODE");
	SegDefReg(0x39AD1,"ds",0x3B77);
	set_segm_type(0X39AD1,2);
	add_segm_ex(0X39CCA,0X39E14,0X39CC,0,1,2,ADDSEG_NOSREG);
	SegRename(0X39CCA,"seg030");
	SegClass (0X39CCA,"CODE");
	SegDefReg(0x39CCA,"ds",0x3B77);
	set_segm_type(0X39CCA,2);
	add_segm_ex(0X39E14,0X3A4B5,0X39E1,0,1,2,ADDSEG_NOSREG);
	SegRename(0X39E14,"seg031");
	SegClass (0X39E14,"CODE");
	SegDefReg(0x39E14,"ds",0x3B77);
	set_segm_type(0X39E14,2);
	add_segm_ex(0X3A4B5,0X3A958,0X3A4B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3A4B5,"seg032");
	SegClass (0X3A4B5,"CODE");
	SegDefReg(0x3A4B5,"ds",0x3B77);
	set_segm_type(0X3A4B5,2);
	add_segm_ex(0X3A958,0X3A9D5,0X3A95,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3A958,"seg033");
	SegClass (0X3A958,"CODE");
	SegDefReg(0x3A958,"ds",0x3B77);
	set_segm_type(0X3A958,2);
	add_segm_ex(0X3A9D5,0X3ACD7,0X3A9D,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3A9D5,"seg034");
	SegClass (0X3A9D5,"CODE");
	SegDefReg(0x3A9D5,"ds",0x3B77);
	set_segm_type(0X3A9D5,2);
	add_segm_ex(0X3ACD7,0X3B0BA,0X3ACD,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3ACD7,"seg035");
	SegClass (0X3ACD7,"CODE");
	SegDefReg(0x3ACD7,"ds",0x3B77);
	set_segm_type(0X3ACD7,2);
	add_segm_ex(0X3B0BA,0X3B12A,0X3B0B,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3B0BA,"seg036");
	SegClass (0X3B0BA,"CODE");
	SegDefReg(0x3B0BA,"ds",0x3B77);
	set_segm_type(0X3B0BA,2);
	add_segm_ex(0X3B12A,0X3B1C0,0X3B12,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3B12A,"seg037");
	SegClass (0X3B12A,"CODE");
	SegDefReg(0x3B12A,"ds",0x3B77);
	set_segm_type(0X3B12A,2);
	add_segm_ex(0X3B1C0,0X3B1F0,0X3B1C,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3B1C0,"seg038");
	SegClass (0X3B1C0,"UNK");
	SegDefReg(0x3B1C0,"ds",0x3B77);
	add_segm_ex(0X3B1F0,0X3B770,0X3B1F,0,1,2,ADDSEG_NOSREG);
	SegRename(0X3B1F0,"seg039");
	SegClass (0X3B1F0,"UNK");
	SegDefReg(0x3B1F0,"ds",0x3B77);
	add_segm_ex(0X3B770,0X46490,0X3B77,0,3,2,ADDSEG_NOSREG);
	SegRename(0X3B770,"dseg");
	SegClass (0X3B770,"DATA");
	SegDefReg(0x3B770,"ds",0x3B77);
	set_segm_type(0X3B770,3);
	add_segm_ex(0X46490,0X483D0,0X4649,0,1,5,ADDSEG_NOSREG);
	SegRename(0X46490,"seg041");
	SegClass (0X46490,"STACK");
	SegDefReg(0x46490,"ds",0x3B77);
	set_segm_type(0X46490,9);
	set_inf_attr(INF_LOW_OFF, 0x20);
	set_inf_attr(INF_HIGH_OFF, 0x1B780);
}

static Enums_0(id) {

	id = add_enum(-1,"enum_surface_type",0x1100000);
	add_enum_member(id,"tarmac",	0X1,	-1);
	add_enum_member(id,"dirt",	0X2,	-1);
	add_enum_member(id,"ice",	0X3,	-1);
	add_enum_member(id,"grass",	0X4,	-1);
	add_enum_member(id,"water",	0X5,	-1);
	id = add_enum(-1,"enum_track_errors",0x1100000);
	add_enum_member(id,"ok",	0,	-1);
	add_enum_member(id,"no_sf",	0X1,	-1);
	add_enum_member(id,"int_err",	0X2,	-1);
	add_enum_member(id,"many_sf",	0X3,	-1);
	add_enum_member(id,"elem_mism",	0X4,	-1);
	add_enum_member(id,"wrong_way",	0X5,	-1);
	add_enum_member(id,"many_elem",	0X6,	-1);
	add_enum_member(id,"no_path",	0X7,	-1);
	add_enum_member(id,"many_path",	0X8,	-1);
	add_enum_member(id,"no_runway",	0X9,	-1);
	add_enum_member(id,"long_jump",	0XA,	-1);
	add_enum_member(id,"terr_mism",	0XB,	-1);
	add_enum_member(id,"elem_wat",	0XC,	-1);
	add_enum_member(id,"elem_stsl",	0XD,	-1);
	add_enum_member(id,"elem_ansl",	0XE,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("BYTEREGS");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	SetType(get_member_id(id, 0x5), "unsigned __int8");
	SetType(get_member_id(id, 0x6), "unsigned __int8");
	SetType(get_member_id(id, 0x7), "unsigned __int8");
	id = get_struc_id("WORDREGS");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x2), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x6), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xA), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("REGS");
	SetType(get_member_id(id, 0x0), "struct BYTEREGS");
	id = get_struc_id("FILE");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x6), "char *");
	SetType(get_member_id(id, 0xA), "char");
	SetType(get_member_id(id, 0xB), "char");
	id = get_struc_id("MATRIX");
	id = get_struc_id("VECTOR");
	id = get_struc_id("MEMCHUNK");
	id = get_struc_id("VECTORLONG");
	id = get_struc_id("PLANE");
	id = get_struc_id("POINT2D");
	id = get_struc_id("SIMD");
	id = get_struc_id("SHAPE3DHEADER");
	id = get_struc_id("CARSTATE");
	id = get_struc_id("SHAPE3D");
	id = get_struc_id("PRIMITIVE");
	id = get_struc_id("TRACKOBJECT");
	id = get_struc_id("TRANSFORMEDSHAPE");
	id = get_struc_id("TRKOBJINFO");
	id = get_struc_id("SHAPE2D");
	id = get_struc_id("GAMESTATE");
	id = get_struc_id("GAMEINFO");
	id = get_struc_id("SPRITE");
	id = get_struc_id("RECTANGLE");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"BYTEREGS",0);
	id = add_struc(-1,"WORDREGS",0);
	id = add_struc(-1,"REGS",1);
	id = add_struc(-1,"FILE",0);
	id = add_struc(-1,"MATRIX",0);
	id = add_struc(-1,"VECTOR",0);
	id = add_struc(-1,"MEMCHUNK",0);
	id = add_struc(-1,"VECTORLONG",0);
	id = add_struc(-1,"PLANE",0);
	id = add_struc(-1,"POINT2D",0);
	id = add_struc(-1,"SIMD",0);
	id = add_struc(-1,"SHAPE3DHEADER",0);
	id = add_struc(-1,"CARSTATE",0);
	id = add_struc(-1,"SHAPE3D",0);
	id = add_struc(-1,"PRIMITIVE",0);
	id = add_struc(-1,"TRACKOBJECT",0);
	id = add_struc(-1,"TRANSFORMEDSHAPE",0);
	id = add_struc(-1,"TRKOBJINFO",0);
	id = add_struc(-1,"SHAPE2D",0);
	id = add_struc(-1,"GAMESTATE",0);
	id = add_struc(-1,"GAMEINFO",0);
	id = add_struc(-1,"SPRITE",0);
	id = add_struc(-1,"RECTANGLE",0);
	
	id = get_struc_id("BYTEREGS");
	mid = add_struc_member(id,"_al",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_ah",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_bl",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_bh",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_cl",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_ch",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_dl",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_dh",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("WORDREGS");
	mid = add_struc_member(id,"_ax",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_bx",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_cx",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_dx",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_si",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_di",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cflag",	0XC,	0x10000400,	-1,	2);
	
	id = get_struc_id("REGS");
	mid = add_struc_member(id,"x",	0,	0x60000400,	get_struc_id("WORDREGS"),	14);
	mid = add_struc_member(id,"h",	0,	0x60000400,	get_struc_id("BYTEREGS"),	8);
	
	id = get_struc_id("FILE");
	mid = add_struc_member(id,"_ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_cnt",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_base",	0X6,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_flag",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_file",	0XB,	0x000400,	-1,	1);
	
	id = get_struc_id("MEMCHUNK");
	mid = add_struc_member(id,"resname",	0,	0x50000400,	0,	12);
	mid = add_struc_member(id,"ressize",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"resofs",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"resunk",	0X10,	0x10000400,	-1,	2);
	
	id = get_struc_id("MATRIX");
	mid = add_struc_member(id,"_11",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_21",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_31",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_12",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_22",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_32",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_13",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_23",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_33",	0X10,	0x10000400,	-1,	2);
	
	id = get_struc_id("VECTOR");
	mid = add_struc_member(id,"vx",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vy",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vz",	0X4,	0x10000400,	-1,	2);
	
	id = get_struc_id("PLANE");
	mid = add_struc_member(id,"plane_yz",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"plane_xy",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"plane_origin",	0X4,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"plane_normal",	0XA,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"plane_rotation",	0X10,	0x60000400,	get_struc_id("MATRIX"),	18);
	
	id = get_struc_id("POINT2D");
	mid = add_struc_member(id,"x2",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"y2",	0X2,	0x10000400,	-1,	2);
	
	id = get_struc_id("SIMD");
	mid = add_struc_member(id,"num_gears",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"simd_unk",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_mass",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"braking_eff",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"idle_rpm",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"downshift_rpm",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"upshift_rpm",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"max_rpm",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"gear_ratios",	0XE,	0x10000400,	-1,	14);
	mid = add_struc_member(id,"knob_points",	0X1C,	0x60000400,	get_struc_id("POINT2D"),	28);
	mid = add_struc_member(id,"aero_resistance",	0X38,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"idle_torque",	0X3A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"torque_curve",	0X3B,	0x000400,	-1,	104);
	mid = add_struc_member(id,"field_A3",	0XA3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"grip",	0XA4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A6",	0XA6,	0x10000400,	-1,	14);
	mid = add_struc_member(id,"sliding",	0XB4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"surface_grip",	0XB6,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"simd_unk3",	0XBE,	0x000400,	-1,	10);
	mid = add_struc_member(id,"collide_points",	0XC8,	0x60000400,	get_struc_id("POINT2D"),	8);
	mid = add_struc_member(id,"car_height",	0XD0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wheel_coords",	0XD2,	0x60000400,	get_struc_id("VECTOR"),	24);
	mid = add_struc_member(id,"steeringdots",	0XEA,	0x000400,	-1,	62);
	mid = add_struc_member(id,"spdcenter",	0X128,	0x60000400,	get_struc_id("POINT2D"),	4);
	mid = add_struc_member(id,"spdnumpoints",	0X12C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"spdpoints",	0X12E,	0x000400,	-1,	208);
	mid = add_struc_member(id,"revcenter",	0X1FE,	0x60000400,	get_struc_id("POINT2D"),	4);
	mid = add_struc_member(id,"revnumpoints",	0X202,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"revpoints",	0X204,	0x000400,	-1,	256);
	mid = add_struc_member(id,"aerorestable",	0X304,	0x20000400,	-1,	4);
	
	id = get_struc_id("SHAPE3DHEADER");
	mid = add_struc_member(id,"header_numverts",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"header_numprimitives",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"header_numpaints",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"header_reserved",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("SHAPE3D");
	mid = add_struc_member(id,"shape3d_numverts",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"shape3d_verts",	0X2,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"shape3d_numprimitives",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"shape3d_numpaints",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"shape3d_primitives",	0XA,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"shape3d_cull1",	0XE,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"shape3d_cull2",	0X12,	0x20000400,	-1,	4);
	
	id = get_struc_id("PRIMITIVE");
	mid = add_struc_member(id,"primitive_type",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"primitive_flags",	0X1,	0x000400,	-1,	1);
	
	id = get_struc_id("TRACKOBJECT");
	mid = add_struc_member(id,"ss_trkObjInfoPtr",	0,	0x10500400,	0X3B770,	2,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ss_rotY",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"Horizontal orientation of the element.",	0);
	mid = add_struc_member(id,"ss_shapePtr",	0X4,	0x10500400,	0X3B770,	2,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ss_loShapePtr",	0X6,	0x10500400,	0X3B770,	2,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ss_ssOvelay",	0X8,	0x000400,	-1,	1);
	set_member_cmt(id,	0X8,	"Renders additional sceneShapes over the current one.",	0);
	mid = add_struc_member(id,"ss_surfaceType",	0X9,	0x000400,	-1,	1);
	set_member_cmt(id,	0X9,	"Paintjob. FF will induce alternating paintjobs.",	0);
	mid = add_struc_member(id,"ss_ignoreZBias",	0XA,	0x000400,	-1,	1);
	set_member_cmt(id,	0XA,	"Appears to be Z-bias override flag, mostly used for roads and corners.",	0);
	mid = add_struc_member(id,"ss_multiTileFlag",	0XB,	0x000400,	-1,	1);
	set_member_cmt(id,	0XB,	"0 = one-tile, 1 = two-tile vertical, 2 = two-tile horizontal, 3 = four-tile.",	0);
	mid = add_struc_member(id,"ss_physicalModel",	0XC,	0x000400,	-1,	1);
	set_member_cmt(id,	0XC,	"sets the physical model in build_track_object",	0);
	mid = add_struc_member(id,"scene_unk5",	0XD,	0x000400,	-1,	1);
	set_member_cmt(id,	0XD,	"always zero.",	0);
	
	id = get_struc_id("TRANSFORMEDSHAPE");
	mid = add_struc_member(id,"ts_pos",	0,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"ts_shapeptr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ts_rectptr",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ts_rotvec",	0XA,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"ts_unk",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ts_flags",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ts_material",	0X13,	0x000400,	-1,	1);
	
	id = get_struc_id("TRKOBJINFO");
	mid = add_struc_member(id,"si_noOfBlocks",	0,	0x000400,	-1,	1);
	set_member_cmt(id,	0,	"How many shapeInfo pieces compose the element. Arbitrary for the first piece, 0 for the following ones.",	0);
	mid = add_struc_member(id,"si_entryPoint",	0X1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1,	"Connectivity of the track element regarding tiles.",	0);
	mid = add_struc_member(id,"si_exitPoint",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"si_entryType",	0X3,	0x000400,	-1,	1);
	set_member_cmt(id,	0X3,	"Connectivity of the track element regarding element types.",	0);
	mid = add_struc_member(id,"si_exitType",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"si_arrowType",	0X5,	0x000400,	-1,	1);
	set_member_cmt(id,	0X5,	"Type of the element for determining penalty-arrow behaviour.",	0);
	mid = add_struc_member(id,"si_arrowOrient",	0X6,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X6,	"Orientation angle for penalty-arrow purposes",	0);
	mid = add_struc_member(id,"si_cameraDataOffset",	0X8,	0x10500400,	0X3B770,	2,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"si_opp1",	0XA,	0x000400,	-1,	1);
	set_member_cmt(id,	0XA,	"Appears to affect how the opponent AI approaches an element.",	0);
	mid = add_struc_member(id,"si_opp2",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"si_opp3",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"si_oppSpedCode",	0XD,	0x000400,	-1,	1);
	
	id = get_struc_id("SHAPE2D");
	mid = add_struc_member(id,"s2d_width",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_height",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_unk1",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_unk2",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_pos_x",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_pos_y",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"s2d_unk3",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s2d_unk4",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s2d_unk5",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"s2d_unk6",	0XF,	0x000400,	-1,	1);
	
	id = get_struc_id("VECTORLONG");
	mid = add_struc_member(id,"lx",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ly",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lz",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("CARSTATE");
	mid = add_struc_member(id,"car_posWorld1",	0,	0x60000400,	get_struc_id("VECTORLONG"),	12);
	mid = add_struc_member(id,"car_posWorld2",	0XC,	0x60000400,	get_struc_id("VECTORLONG"),	12);
	mid = add_struc_member(id,"car_rotate",	0X18,	0x60000400,	get_struc_id("VECTOR"),	6);
	set_member_cmt(id,	0X18,	"applying the (x, y, z) vector notation to rotation\nangles is a source of confusion.",	0);
	mid = add_struc_member(id,"car_pseudoGravity",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_steeringAngle",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_currpm",	0X22,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_lastrpm",	0X24,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_idlerpm2",	0X26,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_speeddiff",	0X28,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X28,	"former gripdiff",	0);
	mid = add_struc_member(id,"car_speed",	0X2A,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2A,	"former trackgrip\nvalue is 2^8*(mph value) and unsigned",	0);
	mid = add_struc_member(id,"car_speed2",	0X2C,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2C,	"former trackgrip2\nspeed is the rev-coupled speed, while speed2 is\nthe actual car speed. They are different, for\ninstance, during jumps (where accelerating increases\nrevs without making the car go faster).",	0);
	mid = add_struc_member(id,"car_lastspeed",	0X2E,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2E,	"former lasttrackgrip",	0);
	mid = add_struc_member(id,"car_gearratio",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_gearratioshr8",	0X32,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_knob_x",	0X34,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_36MwhlAngle",	0X36,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_knob_y",	0X38,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_knob_x2",	0X3A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_knob_y2",	0X3C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_angle_z",	0X3E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_40MfrontWhlAngle",	0X40,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_42",	0X42,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_demandedGrip",	0X44,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_surfacegrip_sum",	0X46,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_48",	0X48,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_trackdata3_index",	0X4A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_rc1",	0X4C,	0x10000400,	-1,	8);
	set_member_cmt(id,	0X4C,	"four words, one for each wheel.",	0);
	mid = add_struc_member(id,"car_rc2",	0X54,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"car_rc3",	0X5C,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"car_rc4",	0X64,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"car_rc5",	0X6C,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"car_whlWorldCrds1",	0X74,	0x60000400,	get_struc_id("VECTOR"),	24);
	mid = add_struc_member(id,"car_whlWorldCrds2",	0X8C,	0x60000400,	get_struc_id("VECTOR"),	24);
	mid = add_struc_member(id,"car_vec_unk3",	0XA4,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"car_vec_unk4",	0XAA,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"car_vec_unk5",	0XB0,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"field_B6",	0XB6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_BA",	0XBA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"car_is_braking",	0XBC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_is_accelerating",	0XBD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_current_gear",	0XBE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_sumSurfFrontWheels",	0XBF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_sumSurfRearWheels",	0XC0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_sumSurfAllWheels",	0XC1,	0x000400,	-1,	1);
	set_member_cmt(id,	0XC1,	"used as jump flag.",	0);
	mid = add_struc_member(id,"car_surfaceWhl",	0XC2,	0x000400,	-1,	4);
	set_member_cmt(id,	0XC2,	"surface types for each of the wheels, it seems.",	0);
	mid = add_struc_member(id,"car_engineLimiterTimer",	0XC6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_slidingFlag",	0XC7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_crashBmpFlag",	0XC9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_changing_gear",	0XCA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_fpsmul2",	0XCB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"car_transmission",	0XCC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_CD",	0XCD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_CE",	0XCE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_CF",	0XCF,	0x000400,	-1,	1);
	
	id = get_struc_id("GAMESTATE");
	mid = add_struc_member(id,"game_longs1",	0,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"game_longs2",	0X60,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"game_longs3",	0XC0,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"game_vec1",	0X120,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"game_vec2",	0X126,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"game_vec3",	0X12C,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"game_vec4",	0X132,	0x60000400,	get_struc_id("VECTOR"),	6);
	mid = add_struc_member(id,"game_frame_in_sec",	0X138,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_frames_per_sec",	0X13A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_travDist",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"game_frame",	0X140,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_total_finish",	0X142,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X142,	"finish time + penalty when crossed finish line",	1);
	mid = add_struc_member(id,"field_144",	0X144,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_pEndFrame",	0X146,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_oEndFrame",	0X148,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X148,	"former game_frame2",	0);
	mid = add_struc_member(id,"game_penalty",	0X14A,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X14A,	"probably penalty counter",	0);
	mid = add_struc_member(id,"game_impactSpeed",	0X14C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_topSpeed",	0X14E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_jumpCount",	0X150,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"playerstate",	0X152,	0x60000400,	get_struc_id("CARSTATE"),	208);
	mid = add_struc_member(id,"opponentstate",	0X222,	0x60000400,	get_struc_id("CARSTATE"),	208);
	mid = add_struc_member(id,"field_2F2",	0X2F2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2F4",	0X2F4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_startcol",	0X2F6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_startcol2",	0X2F8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_startrow",	0X2FA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_startrow2",	0X2FC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2FE",	0X2FE,	0x10000400,	-1,	48);
	set_member_cmt(id,	0X2FE,	"populated by kevinrandom",	0);
	mid = add_struc_member(id,"field_32E",	0X32E,	0x10000400,	-1,	48);
	set_member_cmt(id,	0X32E,	"populated by kevinrandom",	0);
	mid = add_struc_member(id,"field_35E",	0X35E,	0x10000400,	-1,	48);
	mid = add_struc_member(id,"field_38E",	0X38E,	0x000400,	-1,	48);
	set_member_cmt(id,	0X38E,	"populated by kevinrandom",	0);
	mid = add_struc_member(id,"field_3BE",	0X3BE,	0x000400,	-1,	48);
	set_member_cmt(id,	0X3BE,	"populated with the same as field_38E, but multiplied by 1 or 6",	0);
	mid = add_struc_member(id,"kevinseed",	0X3EE,	0x000400,	-1,	6);
	mid = add_struc_member(id,"field_3F4",	0X3F4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_inputmode",	0X3F5,	0x000400,	-1,	1);
	set_member_cmt(id,	0X3F5,	"0 = waiting for input, 1 = input active, 2 = no input (during the intro)",	0);
	mid = add_struc_member(id,"game_3F6autoLoadEvalFlag",	0X3F6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3F7",	0X3F7,	0x000400,	-1,	2);
	set_member_cmt(id,	0X3F7,	"indexed by \"followOpponentFlag\", which is 0 or 1",	0);
	mid = add_struc_member(id,"field_3F9",	0X3F9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3FA",	0X3FA,	0x000400,	-1,	48);
	mid = add_struc_member(id,"field_42A",	0X42A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42B",	0X42B,	0x000400,	-1,	24);
	mid = add_struc_member(id,"field_443",	0X443,	0x000400,	-1,	24);
	mid = add_struc_member(id,"field_45B",	0X45B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45C",	0X45C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45D",	0X45D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45E",	0X45E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_45F",	0X45F,	0x000400,	-1,	1);
	
	id = get_struc_id("GAMEINFO");
	mid = add_struc_member(id,"game_playercarid",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"game_playermaterial",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_playertransmission",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_opponenttype",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_opponentcarid",	0X7,	0x000400,	-1,	4);
	mid = add_struc_member(id,"game_opponentmaterial",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_opponenttransmission",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"game_trackname",	0XD,	0x000400,	-1,	9);
	mid = add_struc_member(id,"game_framespersec",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"game_recordedframes",	0X18,	0x10000400,	-1,	2);
	
	id = get_struc_id("SPRITE");
	mid = add_struc_member(id,"sprite_bitmapptr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sprite_unk1",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_unk2",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_unk3",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_lineofs",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_left",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_right",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_top",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_height",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_pitch",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_unk4",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_width2",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_left2",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sprite_widthsum",	0X1C,	0x10000400,	-1,	2);
	
	id = get_struc_id("RECTANGLE");
	mid = add_struc_member(id,"rc_left",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"rc_right",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"rc_top",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"rc_bottom",	0X6,	0x10000400,	-1,	2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X10000,	E_PREV + 0,	"; File Name   : C:\\stunts2\\game.exe");
	update_extra_cmt		(0X10000,	E_PREV + 1,	"; Format      : MS-DOS executable (EXE)");
	update_extra_cmt		(0X10000,	E_PREV + 2,	"; Base Address: 1000h Range: 10000h-483D0h Loaded length: 30D40h");
	update_extra_cmt		(0X10000,	E_PREV + 3,	"; Entry Point : 2CC5:12");
	update_extra_cmt		(0X10000,	E_PREV + 4,	"; OS type         :  MS DOS");
	update_extra_cmt		(0X10000,	E_PREV + 5,	"; Application type:  Executable 16bit");
	create_insn	(0X10000);
	set_name	(0X10000,	"stuntsmain");
	create_insn	(x=0X10003);
	op_hex		(x,	1);
	create_insn	(x=0X10008);
	op_stkvar	(x,	0);
	create_insn	(x=0X1000B);
	op_stkvar	(x,	0);
	create_insn	(x=0X10013);
	op_hex		(x,	1);
	create_insn	(x=0X1001F);
	op_hex		(x,	1);
	create_insn	(x=0X10021);
	op_stkvar	(x,	0);
	create_insn	(x=0X10029);
	op_stkvar	(x,	0);
	create_insn	(x=0X1002F);
	op_stkvar	(x,	1);
	create_insn	(x=0X10032);
	op_stkvar	(x,	1);
	create_insn	(x=0X10035);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1003E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10041);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10045);
	op_stkvar	(x,	1);
	set_cmt	(0X1004A,	"*1024, or tile length",	0);
	create_insn	(x=0X1004C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1004F);
	op_stkvar	(x,	1);
	create_insn	(x=0X10052);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10056);
	op_stkvar	(x,	1);
	create_insn	(x=0X10059);
	op_stkvar	(x,	1);
	create_insn	(x=0X1005F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10067);
	op_stkvar	(x,	0);
	create_insn	(x=0X1006A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1006D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10071);
	op_stkvar	(x,	1);
	create_insn	(x=0X10074);
	op_stkvar	(x,	1);
	create_insn	(x=0X1007A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10088);
	op_hex		(x,	1);
	create_insn	(x=0X1008A);
	op_stkvar	(x,	0);
	create_insn	(x=0X10095);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10099);
	op_stkvar	(x,	1);
	create_insn	(x=0X100A3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X100AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X100B6);
	op_hex		(x,	1);
	create_insn	(x=0X100C0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X100C3,	"char *",	0);
	set_cmt	(0X100C6,	"int",	0);
	set_cmt	(0X100C7,	"type 0 = binary file",	1);
	create_insn	(x=0X100CC);
	op_hex		(x,	1);
	create_insn	(x=0X100D6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X100D9,	"char *",	0);
	set_cmt	(0X100DC,	"int",	0);
	create_insn	(x=0X100E2);
	op_hex		(x,	1);
	set_cmt	(0X100F6,	"bytes to allocate",	0);
	create_insn	(x=0X100F6);
	op_hex		(x,	1);
	create_insn	(x=0X100FE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10107);
	op_hex		(x,	1);
	create_insn	(x=0X1010A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1010D);
	op_stkvar	(x,	0);
	create_insn	(x=0X10113);
	op_seg		(x,	0);
	set_cmt	(0X10117,	"1802, size of a track file",	0);
	create_insn	(x=0X10117);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1011C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10126);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1012B);
	op_stkvar	(x,	1);
	create_insn	(x=0X10135);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1013A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10144);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10149);
	op_stkvar	(x,	1);
	create_insn	(x=0X10153);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10158);
	op_stkvar	(x,	1);
	create_insn	(x=0X10162);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10167);
	op_stkvar	(x,	1);
	create_insn	(x=0X10171);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10176);
	op_stkvar	(x,	1);
	create_insn	(x=0X10180);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10184);
	op_stkvar	(x,	1);
	create_insn	(x=0X1018E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10193);
	op_stkvar	(x,	1);
	create_insn	(x=0X1019D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X101AC);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X101BB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X101CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X101CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X101D8);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X101E7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X101F6);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X101FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X10205);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1020A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10214);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10219);
	op_stkvar	(x,	1);
	create_insn	(x=0X10223);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10228);
	op_stkvar	(x,	1);
	create_insn	(x=0X10232);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10237);
	op_stkvar	(x,	1);
	create_insn	(x=0X10241);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10246);
	op_stkvar	(x,	1);
	create_insn	(x=0X10250);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X10255);
	op_stkvar	(x,	1);
	create_insn	(x=0X1025F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	update_extra_cmt		(0X10263,	E_PREV + 0,	"; done setting trackdata pointers");
	update_extra_cmt		(0X10263,	E_PREV + 1,	"");
	create_insn	(x=0X10268);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10271);
	op_hex		(x,	1);
	create_insn	(x=0X10274);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10278);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1027B,	"char *",	0);
	create_insn	(x=0X10281);
	op_hex		(x,	1);
	create_insn	(x=0X1028F);
	op_hex		(x,	1);
	create_insn	(x=0X1029B);
	op_hex		(x,	1);
	set_cmt	(0X102A8,	"originally set to 0 - bypasses the copy protection",	0);
	create_insn	(x=0X102AE);
	op_hex		(x,	0);
	create_insn	(0X102B7);
	create_insn	(x=0X102BF);
	op_hex		(x,	1);
	create_insn	(0X102C5);
	create_insn	(0X102D7);
	create_insn	(x=0X102ED);
	op_stkvar	(x,	0);
	create_insn	(0X102F3);
	create_insn	(x=0X10301);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10305);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10309);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10311);
	op_hex		(x,	1);
	create_insn	(0X10317);
	create_insn	(x=0X10318);
	op_stkvar	(x,	0);
	create_insn	(x=0X1031E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10321);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1034A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10357);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1037C);
	create_insn	(x=0X1039B);
	op_hex		(x,	1);
	set_cmt	(0X103A3,	"size to allocate, 20*1120",	0);
	create_insn	(x=0X103A3);
	op_hex		(x,	1);
	create_insn	(x=0X103A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X103B2);
	op_hex		(x,	1);
	create_insn	(x=0X103C5);
	op_hex		(x,	1);
	create_insn	(x=0X103C8);
	op_stkvar	(x,	0);
	create_insn	(0X103D1);
	create_insn	(0X103D9);
	create_insn	(x=0X103DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X103E3);
	op_hex		(x,	1);
	create_insn	(x=0X103EA);
	op_hex		(x,	0);
	create_insn	(x=0X103FA);
	op_hex		(x,	1);
	create_insn	(x=0X10401);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X10404,	"char *",	0);
	create_insn	(x=0X10405);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X10408,	"int",	0);
	create_insn	(x=0X10409);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1040D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X10410,	"char *",	0);
	create_insn	(x=0X10416);
	op_hex		(x,	1);
	create_insn	(x=0X10421);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1042A);
	op_hex		(x,	1);
	create_insn	(0X10440);
	create_insn	(x=0X10449);
	op_hex		(x,	1);
	create_insn	(x=0X10453);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10457);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1045B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1045E,	"char *",	0);
	create_insn	(x=0X10464);
	op_hex		(x,	1);
	create_insn	(0X10474);
	create_insn	(0X1047B);
	create_insn	(0X10483);
	create_insn	(0X1048B);
	create_insn	(0X10493);
	create_insn	(0X1049B);
	create_insn	(0X1049D);
	create_insn	(0X104A5);
	create_insn	(x=0X104D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X104D7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10505);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10512);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X10529);
	op_hex		(x,	1);
	create_insn	(0X10536);
	create_insn	(0X10539);
	create_insn	(x=0X10547);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10558);
	op_hex		(x,	1);
	create_insn	(x=0X1056A);
	op_hex		(x,	1);
	create_insn	(0X10575);
	create_insn	(0X10599);
	create_insn	(0X1059A);
	set_name	(0X1059A,	"run_intro_looped");
	create_insn	(x=0X1059D);
	op_hex		(x,	1);
	create_insn	(x=0X105A1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X105A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X105A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X105AC,	"char *",	0);
	create_insn	(x=0X105B2);
	op_hex		(x,	1);
	create_insn	(x=0X105B5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X105B8,	"char *",	0);
	set_cmt	(0X105BC,	"int",	0);
	create_insn	(x=0X105C2);
	op_hex		(x,	1);
	create_insn	(x=0X105DD);
	op_hex		(x,	1);
	create_insn	(x=0X105FA);
	op_hex		(x,	1);
	create_insn	(x=0X1060A);
	op_hex		(x,	1);
	create_insn	(x=0X1061D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X10620,	"char *",	0);
	set_cmt	(0X10624,	"int",	0);
	create_insn	(x=0X1062A);
	op_hex		(x,	1);
	create_insn	(x=0X10645);
	op_hex		(x,	1);
	create_insn	(x=0X10664);
	op_hex		(x,	1);
	create_insn	(x=0X1067B);
	op_hex		(x,	1);
	create_insn	(x=0X1068B);
	op_hex		(x,	1);
	make_array	(0X1069A,	0X2);
	create_insn	(0X1069C);
	set_name	(0X1069C,	"run_intro");
	create_insn	(x=0X1069F);
	op_hex		(x,	1);
	create_insn	(x=0X106B7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X106C8);
	op_hex		(x,	1);
	create_insn	(0X106DE);
	create_insn	(x=0X106E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X106F5);
	op_hex		(x,	1);
	create_insn	(x=0X106FF);
	op_hex		(x,	1);
	create_insn	(x=0X10713);
	op_hex		(x,	1);
	create_insn	(x=0X10725);
	op_hex		(x,	1);
	create_insn	(x=0X10739);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1074A);
	op_hex		(x,	1);
	create_insn	(x=0X10754);
	op_hex		(x,	1);
	create_insn	(x=0X10768);
	op_hex		(x,	1);
	create_insn	(x=0X1077A);
	op_hex		(x,	1);
	create_insn	(0X10786);
	set_name	(0X10786,	"load_intro_resources");
	create_insn	(x=0X10789);
	op_hex		(x,	1);
	create_insn	(x=0X1078E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10797);
	op_hex		(x,	1);
	create_insn	(x=0X1079A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1079D);
	op_stkvar	(x,	0);
	create_insn	(x=0X107A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X107A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X107B5);
	op_hex		(x,	1);
	create_insn	(x=0X107C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X107CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X107D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X107DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X107E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X107E5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X107E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X107EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X107F4);
	op_hex		(x,	1);
	create_insn	(x=0X107F9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10802);
	op_hex		(x,	1);
	create_insn	(x=0X10814);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1081D);
	op_hex		(x,	1);
	create_insn	(x=0X10820);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10824);
	op_stkvar	(x,	0);
	create_insn	(x=0X10827);
	op_stkvar	(x,	0);
	create_insn	(x=0X1082F);
	op_hex		(x,	1);
	create_insn	(x=0X10834);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1083D);
	op_hex		(x,	1);
	create_insn	(x=0X10850);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10859);
	op_hex		(x,	1);
	create_insn	(x=0X1085C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10860);
	op_stkvar	(x,	0);
	create_insn	(x=0X10863);
	op_stkvar	(x,	0);
	create_insn	(x=0X1086B);
	op_hex		(x,	1);
	create_insn	(x=0X10870);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10879);
	op_hex		(x,	1);
	create_insn	(x=0X1088C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10895);
	op_hex		(x,	1);
	create_insn	(x=0X10898);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1089C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1089F);
	op_stkvar	(x,	0);
	create_insn	(x=0X108A7);
	op_hex		(x,	1);
	create_insn	(x=0X108AC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X108B5);
	op_hex		(x,	1);
	create_insn	(x=0X108C8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X108D1);
	op_hex		(x,	1);
	create_insn	(x=0X108D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X108D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X108DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X108E3);
	op_hex		(x,	1);
	create_insn	(x=0X108E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X108F1);
	op_hex		(x,	1);
	create_insn	(x=0X10904);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1090D);
	op_hex		(x,	1);
	create_insn	(x=0X10910);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10914);
	op_stkvar	(x,	0);
	create_insn	(x=0X10917);
	op_stkvar	(x,	0);
	create_insn	(x=0X1091F);
	op_hex		(x,	1);
	create_insn	(x=0X10924);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1092D);
	op_hex		(x,	1);
	create_insn	(x=0X10940);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10949);
	op_hex		(x,	1);
	create_insn	(x=0X1094C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10950);
	op_stkvar	(x,	0);
	create_insn	(x=0X10953);
	op_stkvar	(x,	0);
	create_insn	(x=0X1095B);
	op_hex		(x,	1);
	create_insn	(x=0X10960);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10969);
	op_hex		(x,	1);
	create_insn	(x=0X1097C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10985);
	op_hex		(x,	1);
	create_insn	(x=0X10988);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1098C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1098F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10997);
	op_hex		(x,	1);
	create_insn	(x=0X1099C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X109A5);
	op_hex		(x,	1);
	create_insn	(x=0X109B8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X109C1);
	op_hex		(x,	1);
	create_insn	(x=0X109C4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X109C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X109CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X109D3);
	op_hex		(x,	1);
	create_insn	(x=0X109E1);
	op_hex		(x,	1);
	create_insn	(x=0X109F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X109FD);
	op_hex		(x,	1);
	create_insn	(x=0X10A00);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A04);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A07);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A0F);
	op_hex		(x,	1);
	create_insn	(x=0X10A14);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A1D);
	op_hex		(x,	1);
	create_insn	(x=0X10A30);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A39);
	op_hex		(x,	1);
	create_insn	(x=0X10A3C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A40);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A43);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A4B);
	op_hex		(x,	1);
	create_insn	(x=0X10A50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A59);
	op_hex		(x,	1);
	create_insn	(x=0X10A6C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A75);
	op_hex		(x,	1);
	create_insn	(x=0X10A78);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10A87);
	op_hex		(x,	1);
	create_insn	(x=0X10A8C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10A95);
	op_hex		(x,	1);
	create_insn	(x=0X10AA8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10AB1);
	op_hex		(x,	1);
	create_insn	(x=0X10AB4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10AB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X10ABB);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AC3);
	op_hex		(x,	1);
	create_insn	(x=0X10AC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10AD1);
	op_hex		(x,	1);
	create_insn	(x=0X10AE4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10AED);
	op_hex		(x,	1);
	create_insn	(x=0X10AF0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10AF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10AFF);
	op_hex		(x,	1);
	create_insn	(x=0X10B04);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B0D);
	op_hex		(x,	1);
	create_insn	(x=0X10B20);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B29);
	op_hex		(x,	1);
	create_insn	(x=0X10B2C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B30);
	op_stkvar	(x,	0);
	create_insn	(x=0X10B33);
	op_stkvar	(x,	0);
	create_insn	(x=0X10B3B);
	op_hex		(x,	1);
	create_insn	(x=0X10B40);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B49);
	op_hex		(x,	1);
	create_insn	(x=0X10B5C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B65);
	op_hex		(x,	1);
	create_insn	(x=0X10B68);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10B6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10B77);
	op_hex		(x,	1);
	create_insn	(x=0X10B7C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10B85);
	op_hex		(x,	1);
	create_insn	(x=0X10B98);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BA1);
	op_hex		(x,	1);
	create_insn	(x=0X10BA4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BB3);
	op_hex		(x,	1);
	create_insn	(x=0X10BB8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BC1);
	op_hex		(x,	1);
	create_insn	(x=0X10BD4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BDD);
	op_hex		(x,	1);
	create_insn	(x=0X10BE0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10BEF);
	op_hex		(x,	1);
	create_insn	(x=0X10BF4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10BFD);
	op_hex		(x,	1);
	create_insn	(x=0X10C10);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C19);
	op_hex		(x,	1);
	create_insn	(x=0X10C1C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C20);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C23);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C2B);
	op_hex		(x,	1);
	create_insn	(x=0X10C30);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C39);
	op_hex		(x,	1);
	create_insn	(x=0X10C4C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C55);
	op_hex		(x,	1);
	create_insn	(x=0X10C58);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C67);
	op_hex		(x,	1);
	create_insn	(x=0X10C6C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C75);
	op_hex		(x,	1);
	create_insn	(x=0X10C88);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C91);
	op_hex		(x,	1);
	create_insn	(x=0X10C94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10C98);
	op_stkvar	(x,	0);
	create_insn	(x=0X10C9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X10CA3);
	op_hex		(x,	1);
	create_insn	(x=0X10CA8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10CB1);
	op_hex		(x,	1);
	create_insn	(x=0X10CC4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10CCD);
	op_hex		(x,	1);
	create_insn	(x=0X10CD0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10CD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10CD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10CDF);
	op_hex		(x,	1);
	create_insn	(x=0X10CE4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10CED);
	op_hex		(x,	1);
	create_insn	(x=0X10D00);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10D09);
	op_hex		(x,	1);
	create_insn	(x=0X10D0C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10D10);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D13);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D1B);
	op_hex		(x,	1);
	create_insn	(x=0X10D20);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10D29);
	op_hex		(x,	1);
	create_insn	(x=0X10D3C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10D45);
	op_hex		(x,	1);
	create_insn	(x=0X10D48);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D53);
	op_hex		(x,	1);
	create_insn	(x=0X10D67);
	op_hex		(x,	1);
	create_insn	(x=0X10D7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D7F);
	op_hex		(x,	1);
	create_insn	(x=0X10D83);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X10D92);
	op_stkvar	(x,	0);
	create_insn	(0X10DA0);
	create_insn	(x=0X10DA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DB4);
	op_hex		(x,	1);
	create_insn	(x=0X10DBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DCF);
	op_hex		(x,	1);
	create_insn	(x=0X10DD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X10DDF);
	op_hex		(x,	1);
	create_insn	(x=0X10DE2);
	op_stkvar	(x,	0);
	create_insn	(0X10DEC);
	create_insn	(x=0X10DF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X10E04);
	op_hex		(x,	1);
	create_insn	(x=0X10E0F);
	op_hex		(x,	1);
	create_insn	(x=0X10E14);
	op_hex		(x,	1);
	create_insn	(x=0X10E16);
	op_hex		(x,	1);
	create_insn	(x=0X10E25);
	op_hex		(x,	1);
	create_insn	(x=0X10E31);
	op_stkvar	(x,	0);
	create_insn	(x=0X10E40);
	op_hex		(x,	1);
	create_insn	(x=0X10E58);
	op_hex		(x,	1);
	create_insn	(x=0X10E60);
	op_stkvar	(x,	0);
	create_insn	(0X10E66);
	create_insn	(x=0X10E6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X10E74);
	op_hex		(x,	1);
	create_insn	(x=0X10E77);
	op_stkvar	(x,	0);
	create_insn	(x=0X10E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X10E88);
	op_stkvar	(x,	0);
	create_insn	(0X10E91);
	create_insn	(x=0X10EA4);
	op_hex		(x,	1);
	create_insn	(x=0X10EBC);
	op_hex		(x,	1);
	create_insn	(x=0X10EC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X10ED7);
	op_hex		(x,	1);
	create_insn	(x=0X10EE2);
	op_hex		(x,	1);
	create_insn	(x=0X10EE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EF0);
	op_hex		(x,	1);
	create_insn	(x=0X10EF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X10EFE);
	op_hex		(x,	1);
	create_insn	(x=0X10F11);
	op_hex		(x,	1);
	create_insn	(x=0X10F14);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F24);
	op_hex		(x,	1);
	create_insn	(0X10F34);
	create_insn	(0X10F3C);
	set_name	(0X10F3C,	"run_menu");
	create_insn	(x=0X10F3F);
	op_hex		(x,	1);
	create_insn	(x=0X10F42);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F46);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F6A);
	op_hex		(x,	1);
	create_insn	(x=0X10F74);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X10F77,	"char *",	0);
	set_cmt	(0X10F7B,	"int",	0);
	create_insn	(x=0X10F81);
	op_hex		(x,	1);
	create_insn	(x=0X10F84);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F87);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F8F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10F93);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F96);
	op_stkvar	(x,	0);
	create_insn	(x=0X10F9E);
	op_hex		(x,	1);
	create_insn	(x=0X10FA8);
	op_hex		(x,	1);
	create_insn	(x=0X10FAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X10FAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X10FB6);
	op_hex		(x,	1);
	create_insn	(x=0X10FB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X10FC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X10FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FDE);
	op_hex		(x,	1);
	create_insn	(x=0X10FE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X10FF7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10FFB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X10FFF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11003);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11007);
	op_stkvar	(x,	1);
	create_insn	(x=0X11011);
	op_hex		(x,	1);
	create_insn	(x=0X11014);
	op_stkvar	(x,	0);
	create_insn	(x=0X1101D);
	op_hex		(x,	1);
	create_insn	(x=0X11020);
	op_stkvar	(x,	0);
	create_insn	(x=0X11023);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11027);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1102B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1102F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1103C);
	op_hex		(x,	1);
	create_insn	(x=0X1103F);
	op_stkvar	(x,	0);
	create_insn	(x=0X11046);
	op_stkvar	(x,	0);
	create_insn	(x=0X11049);
	op_stkvar	(x,	1);
	set_cmt	(0X11069,	"idle expired -> select menu 0 and keycode for enter",	0);
	create_insn	(x=0X11069);
	op_stkvar	(x,	0);
	create_insn	(x=0X1106D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11072);
	op_stkvar	(x,	0);
	create_insn	(x=0X1107B);
	op_stkvar	(x,	1);
	set_cmt	(0X1107E,	"enter",	0);
	set_cmt	(0X11083,	"esc",	0);
	set_cmt	(0X11088,	"space",	0);
	set_cmt	(0X1108D,	"arrow",	0);
	set_cmt	(0X11092,	"arrow opposite direction",	0);
	create_insn	(x=0X1109A);
	op_stkvar	(x,	1);
	create_insn	(x=0X110A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X110AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X110B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X110C7);
	op_stkvar	(x,	1);
	create_insn	(0X110D0);
	set_name	(0X110D0,	"run_tracks_menu");
	create_insn	(x=0X110D3);
	op_hex		(x,	1);
	create_insn	(x=0X110E1);
	op_hex		(x,	1);
	create_insn	(x=0X110E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X110ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X110F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X110F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X11115);
	op_hex		(x,	1);
	create_insn	(x=0X11130);
	op_hex		(x,	1);
	create_insn	(x=0X1114A);
	op_hex		(x,	1);
	create_insn	(x=0X11156);
	op_hex		(x,	1);
	create_insn	(x=0X11167);
	op_hex		(x,	1);
	create_insn	(x=0X1117D);
	op_hex		(x,	1);
	create_insn	(x=0X11194);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11198);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1119B,	"char *",	0);
	create_insn	(x=0X111A1);
	op_hex		(x,	1);
	create_insn	(x=0X111A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X111A8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X111AB,	"char *",	0);
	create_insn	(x=0X111B1);
	op_hex		(x,	1);
	create_insn	(x=0X111B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X111B8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X111BB,	"char *",	0);
	create_insn	(x=0X111C1);
	op_hex		(x,	1);
	create_insn	(x=0X111CF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X111D8);
	op_hex		(x,	1);
	create_insn	(x=0X111DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X111E5);
	op_hex		(x,	1);
	create_insn	(x=0X111EF);
	op_hex		(x,	1);
	create_insn	(0X111F9);
	create_insn	(x=0X11210);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11221);
	op_hex		(x,	1);
	create_insn	(x=0X11226);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1122F);
	op_hex		(x,	1);
	create_insn	(x=0X1123D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11246);
	op_hex		(x,	1);
	create_insn	(x=0X1124A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11253);
	op_hex		(x,	1);
	create_insn	(x=0X11263);
	op_hex		(x,	1);
	create_insn	(x=0X11266);
	op_stkvar	(x,	1);
	create_insn	(x=0X11271);
	op_hex		(x,	1);
	create_insn	(x=0X1127D);
	op_hex		(x,	1);
	create_insn	(x=0X11288);
	op_stkvar	(x,	1);
	create_insn	(x=0X1128C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11295);
	op_hex		(x,	1);
	create_insn	(x=0X112A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X112A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X112AD);
	op_hex		(x,	1);
	create_insn	(x=0X112B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X112C5);
	op_hex		(x,	1);
	create_insn	(x=0X112D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X112D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X112DD);
	op_hex		(x,	1);
	create_insn	(x=0X112E5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X112EE);
	op_hex		(x,	1);
	create_insn	(x=0X112F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X112F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X11316);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1131B);
	op_stkvar	(x,	0);
	create_insn	(x=0X11323);
	op_hex		(x,	1);
	create_insn	(x=0X1132D);
	op_hex		(x,	1);
	create_insn	(x=0X1134F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11353);
	op_stkvar	(x,	0);
	create_insn	(x=0X11356);
	op_stkvar	(x,	0);
	create_insn	(x=0X1135E);
	op_hex		(x,	1);
	create_insn	(x=0X11368);
	op_hex		(x,	1);
	create_insn	(x=0X1138A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1138E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11391);
	op_stkvar	(x,	0);
	create_insn	(x=0X11399);
	op_hex		(x,	1);
	create_insn	(x=0X113A3);
	op_hex		(x,	1);
	create_insn	(x=0X113A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X113A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X113B1);
	op_hex		(x,	1);
	create_insn	(x=0X113B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X113B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X113BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X113BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X113C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X113D4);
	op_hex		(x,	1);
	create_insn	(x=0X113D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X113ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X113F1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X113F5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X113F9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X113FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X11407);
	op_hex		(x,	1);
	create_insn	(x=0X1140A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11423);
	op_stkvar	(x,	0);
	create_insn	(x=0X1142B);
	op_hex		(x,	1);
	create_insn	(x=0X1142E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11431);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11435);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11439);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1143D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1144A);
	op_hex		(x,	1);
	create_insn	(x=0X1144D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11454);
	op_stkvar	(x,	0);
	create_insn	(x=0X1145E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11462);
	op_stkvar	(x,	0);
	create_insn	(x=0X11467);
	op_stkvar	(x,	0);
	create_insn	(x=0X11470);
	op_stkvar	(x,	1);
	create_insn	(x=0X11490);
	op_stkvar	(x,	0);
	create_insn	(x=0X11496);
	op_stkvar	(x,	0);
	create_insn	(x=0X1149C);
	op_stkvar	(x,	0);
	create_insn	(x=0X114A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X114AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X114B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X114B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X114BC);
	op_stkvar	(x,	1);
	create_insn	(0X114CC);
	create_insn	(x=0X114D9);
	op_hex		(x,	1);
	create_insn	(x=0X114E2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X114F3);
	op_hex		(x,	1);
	set_cmt	(0X114F6,	"int",	0);
	set_cmt	(0X114F7,	"int",	0);
	create_insn	(x=0X114F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X114FB,	"int",	0);
	create_insn	(x=0X114FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11503,	"char *",	0);
	create_insn	(x=0X11509);
	op_hex		(x,	1);
	create_insn	(x=0X1150F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11512,	"char *",	0);
	create_insn	(x=0X11513);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11516,	"int",	0);
	create_insn	(x=0X11517);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1151E,	"char *",	0);
	create_insn	(x=0X11524);
	op_hex		(x,	1);
	create_insn	(x=0X1153C);
	op_hex		(x,	1);
	create_insn	(x=0X1154C);
	op_hex		(x,	1);
	create_insn	(x=0X11552);
	op_stkvar	(x,	0);
	create_insn	(0X1155A);
	create_insn	(x=0X11567);
	op_hex		(x,	1);
	create_insn	(0X11588);
	set_name	(0X11588,	"highscore_write_a");
	create_insn	(x=0X1158B);
	op_hex		(x,	1);
	create_insn	(x=0X11595);
	op_stkvar	(x,	0);
	create_insn	(x=0X1159A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1159D);
	op_hex		(x,	1);
	create_insn	(x=0X1159F);
	op_stkvar	(x,	1);
	create_insn	(x=0X115A2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X115A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X115A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X115AF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X115B2,	"char *",	0);
	create_insn	(x=0X115B3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X115B6,	"int",	0);
	create_insn	(x=0X115B7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X115BE,	"char *",	0);
	create_insn	(x=0X115C4);
	op_hex		(x,	1);
	create_insn	(x=0X115C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X115DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X115E7);
	op_hex		(x,	1);
	create_insn	(x=0X115EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X115ED);
	op_stkvar	(x,	0);
	create_insn	(0X11602);
	create_insn	(x=0X1160A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1160E);
	op_stkvar	(x,	1);
	set_cmt	(0X11611,	"char *",	0);
	create_insn	(x=0X11617);
	op_hex		(x,	1);
	create_insn	(x=0X1161A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1161E);
	op_stkvar	(x,	1);
	set_cmt	(0X11621,	"char *",	0);
	create_insn	(x=0X11627);
	op_hex		(x,	1);
	create_insn	(x=0X1162A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1162E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11632);
	op_stkvar	(x,	1);
	set_cmt	(0X11635,	"char *",	0);
	create_insn	(x=0X1163B);
	op_hex		(x,	1);
	create_insn	(x=0X1163E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11643);
	op_stkvar	(x,	0);
	create_insn	(x=0X1164B);
	op_stkvar	(x,	1);
	create_insn	(x=0X11656);
	op_stkvar	(x,	1);
	create_insn	(x=0X1165E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11661);
	op_stkvar	(x,	0);
	create_insn	(x=0X11675);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1167E);
	op_hex		(x,	1);
	create_insn	(x=0X11681);
	op_stkvar	(x,	0);
	create_insn	(0X1168B);
	create_insn	(0X1168E);
	set_name	(0X1168E,	"highscore_text_unk");
	create_insn	(x=0X11691);
	op_hex		(x,	1);
	create_insn	(x=0X11699);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116AA);
	op_hex		(x,	1);
	create_insn	(x=0X116AF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116B8);
	op_hex		(x,	1);
	create_insn	(x=0X116BB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X116C2,	"char *",	0);
	create_insn	(x=0X116C8);
	op_hex		(x,	1);
	create_insn	(x=0X116CB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116CF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X116D2,	"char *",	0);
	create_insn	(x=0X116D8);
	op_hex		(x,	1);
	create_insn	(x=0X116DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X116E2,	"char *",	0);
	create_insn	(x=0X116E8);
	op_hex		(x,	1);
	create_insn	(x=0X116F6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X116FF);
	op_hex		(x,	1);
	create_insn	(x=0X1170C);
	op_hex		(x,	1);
	create_insn	(x=0X1170F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11720);
	op_hex		(x,	1);
	create_insn	(x=0X11725);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1172E);
	op_hex		(x,	1);
	create_insn	(x=0X11740);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11749);
	op_hex		(x,	1);
	create_insn	(x=0X1174C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1175D);
	op_hex		(x,	1);
	create_insn	(x=0X11762);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1176B);
	op_hex		(x,	1);
	create_insn	(x=0X1177D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11786);
	op_hex		(x,	1);
	create_insn	(x=0X11789);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1179A);
	op_hex		(x,	1);
	create_insn	(x=0X1179F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X117A8);
	op_hex		(x,	1);
	create_insn	(x=0X117BA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X117C3);
	op_hex		(x,	1);
	create_insn	(x=0X117C6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X117D7);
	op_hex		(x,	1);
	create_insn	(x=0X117DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X117E5);
	op_hex		(x,	1);
	create_insn	(x=0X117F7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11800);
	op_hex		(x,	1);
	create_insn	(x=0X11810);
	op_hex		(x,	1);
	create_insn	(x=0X11813);
	op_stkvar	(x,	0);
	create_insn	(x=0X1181A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1181F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11825);
	op_hex		(x,	1);
	create_insn	(x=0X11827);
	op_hex		(x,	1);
	create_insn	(x=0X1182B);
	op_hex		(x,	1);
	create_insn	(x=0X11830);
	op_stkvar	(x,	0);
	create_insn	(x=0X11836);
	op_stkvar	(x,	0);
	create_insn	(x=0X1183E);
	op_hex		(x,	1);
	create_insn	(x=0X11841);
	op_stkvar	(x,	0);
	create_insn	(x=0X11848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1184C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11855);
	op_hex		(x,	1);
	create_insn	(x=0X11858);
	op_stkvar	(x,	0);
	create_insn	(x=0X1185F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11863);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1186C);
	op_hex		(x,	1);
	create_insn	(x=0X1186F);
	op_stkvar	(x,	0);
	create_insn	(x=0X11876);
	op_stkvar	(x,	1);
	create_insn	(x=0X1187A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11883);
	op_hex		(x,	1);
	create_insn	(x=0X11886);
	op_stkvar	(x,	0);
	create_insn	(x=0X1188D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11891);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1189A);
	op_hex		(x,	1);
	create_insn	(x=0X1189D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X118A0,	E_PREV + 0,	"7 times: no. of scoreboard");
	update_extra_cmt		(0X118A0,	E_PREV + 1,	"entries...");
	create_insn	(x=0X118A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X118A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X118AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X118B3);
	op_hex		(x,	1);
	create_insn	(x=0X118B9);
	op_stkvar	(x,	0);
	create_insn	(0X118C1);
	create_insn	(x=0X118C4);
	op_stkvar	(x,	0);
	create_insn	(0X118CA);
	create_insn	(0X118D4);
	set_name	(0X118D4,	"print_highscore_entry");
	create_insn	(x=0X118D7);
	op_hex		(x,	1);
	create_insn	(x=0X118DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X118DF);
	op_hex		(x,	1);
	create_insn	(x=0X118E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X118F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X11902);
	op_stkvar	(x,	1);
	create_insn	(x=0X11908);
	op_stkvar	(x,	1);
	create_insn	(x=0X1190C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1190F,	"char *",	0);
	create_insn	(x=0X11915);
	op_hex		(x,	1);
	create_insn	(x=0X11918);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1191B,	"char *",	0);
	create_insn	(x=0X11921);
	op_hex		(x,	1);
	create_insn	(x=0X11926);
	op_stkvar	(x,	0);
	create_insn	(x=0X11929);
	op_stkvar	(x,	1);
	create_insn	(x=0X1192F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11933);
	op_stkvar	(x,	1);
	create_insn	(x=0X11937);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1193A,	"char *",	0);
	create_insn	(x=0X11940);
	op_hex		(x,	1);
	create_insn	(x=0X11943);
	op_stkvar	(x,	1);
	create_insn	(x=0X11947);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1194A,	"char *",	0);
	create_insn	(x=0X11950);
	op_hex		(x,	1);
	create_insn	(x=0X11955);
	op_stkvar	(x,	0);
	create_insn	(x=0X11958);
	op_stkvar	(x,	1);
	create_insn	(x=0X1195B);
	op_stkvar	(x,	1);
	create_insn	(x=0X11961);
	op_stkvar	(x,	1);
	create_insn	(x=0X11967);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1196E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11974);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11978,	"char *",	0);
	create_insn	(x=0X1197E);
	op_hex		(x,	1);
	create_insn	(x=0X11981);
	op_stkvar	(x,	1);
	create_insn	(x=0X11985);
	op_stkvar	(x,	1);
	create_insn	(x=0X11989);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1198C,	"char *",	0);
	create_insn	(x=0X11992);
	op_hex		(x,	1);
	create_insn	(x=0X11995);
	op_stkvar	(x,	0);
	create_insn	(x=0X1199B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1199F);
	op_stkvar	(x,	1);
	create_insn	(x=0X119A3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X119A6,	"char *",	0);
	create_insn	(x=0X119AC);
	op_hex		(x,	1);
	create_insn	(x=0X119AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X119B3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X119B6,	"char *",	0);
	create_insn	(x=0X119BC);
	op_hex		(x,	1);
	create_insn	(x=0X119C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X119C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X119D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X119DA);
	op_stkvar	(x,	0);
	create_insn	(0X119E0);
	set_cmt	(0X119E3,	"int",	0);
	create_insn	(x=0X119E7);
	op_stkvar	(x,	1);
	set_cmt	(0X119EA,	"char *",	0);
	create_insn	(x=0X119F0);
	op_hex		(x,	1);
	create_insn	(x=0X119F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X119F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X119FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A04);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11A07,	"char *",	0);
	create_insn	(x=0X11A0D);
	op_hex		(x,	1);
	create_insn	(x=0X11A10);
	op_stkvar	(x,	1);
	create_insn	(0X11A1C);
	set_name	(0X11A1C,	"enter_hiscore");
	create_insn	(x=0X11A1F);
	op_hex		(x,	1);
	create_insn	(x=0X11A2B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X11A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A46);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A54);
	op_hex		(x,	1);
	create_insn	(x=0X11A56);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X11A5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A71);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A74);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A84);
	op_hex		(x,	1);
	create_insn	(x=0X11A86);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X11A8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A99);
	op_hex		(x,	1);
	create_insn	(x=0X11A9B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X11AA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X11AA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X11AAB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11AAF);
	op_stkvar	(x,	1);
	set_cmt	(0X11AB2,	"char *",	0);
	create_insn	(x=0X11AB8);
	op_hex		(x,	1);
	create_insn	(x=0X11ABB);
	op_stkvar	(x,	1);
	create_insn	(x=0X11ABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X11AC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11ACC);
	op_stkvar	(x,	1);
	set_cmt	(0X11ACF,	"char *",	0);
	create_insn	(x=0X11AD5);
	op_hex		(x,	1);
	create_insn	(x=0X11AD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X11ADC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AE6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11AEA);
	op_stkvar	(x,	1);
	set_cmt	(0X11AED,	"char *",	0);
	create_insn	(x=0X11AF3);
	op_hex		(x,	1);
	create_insn	(x=0X11AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B20);
	op_hex		(x,	1);
	create_insn	(x=0X11B26);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B33);
	op_stkvar	(x,	0);
	create_insn	(x=0X11B36);
	op_stkvar	(x,	0);
	create_insn	(x=0X11B45);
	op_hex		(x,	1);
	create_insn	(x=0X11B4D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11B51,	"int",	0);
	set_cmt	(0X11B52,	"int",	0);
	set_cmt	(0X11B53,	"int",	0);
	create_insn	(x=0X11B53);
	op_stkvar	(x,	0);
	set_cmt	(0X11B56,	"int",	0);
	create_insn	(x=0X11B56);
	op_stkvar	(x,	0);
	create_insn	(x=0X11B5D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11B60,	"char *",	0);
	create_insn	(x=0X11B66);
	op_hex		(x,	1);
	create_insn	(x=0X11B69);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11B6D);
	op_stkvar	(x,	1);
	set_cmt	(0X11B70,	"char *",	0);
	create_insn	(x=0X11B76);
	op_hex		(x,	1);
	create_insn	(x=0X11B81);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BA3);
	op_hex		(x,	1);
	create_insn	(0X11BB4);
	set_name	(0X11BB4,	"highscore_write_b");
	create_insn	(x=0X11BB7);
	op_hex		(x,	1);
	create_insn	(x=0X11BBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X11BC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BC7);
	op_hex		(x,	1);
	create_insn	(x=0X11BCC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11BDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X11BFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C01);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11C04,	"char *",	0);
	create_insn	(x=0X11C05);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11C08,	"int",	0);
	create_insn	(x=0X11C09);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11C10,	"char *",	0);
	create_insn	(x=0X11C16);
	op_hex		(x,	1);
	create_insn	(x=0X11C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C33);
	op_hex		(x,	1);
	create_insn	(0X11C42);
	set_name	(0X11C42,	"run_car_menu");
	create_insn	(x=0X11C45);
	op_hex		(x,	1);
	create_insn	(x=0X11C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C4F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11C58);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11C5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C62);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C67);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C76);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C79);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C82);
	op_stkvar	(x,	0);
	create_insn	(x=0X11C8F);
	op_hex		(x,	1);
	create_insn	(x=0X11C92);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11C95,	"int",	0);
	create_insn	(x=0X11C96);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11C9C,	"char *",	0);
	create_insn	(x=0X11CA2);
	op_hex		(x,	1);
	create_insn	(x=0X11CA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X11CEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CF4);
	op_hex		(x,	1);
	create_insn	(x=0X11CF6);
	op_hex		(x,	1);
	create_insn	(x=0X11CFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D05);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D09);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D10);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D26);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D30);
	op_hex		(x,	1);
	create_insn	(x=0X11D32);
	op_hex		(x,	1);
	create_insn	(x=0X11D36);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D49);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D52);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X11D5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D61);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D69);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D6E);
	op_hex		(x,	1);
	create_insn	(x=0X11D70);
	op_hex		(x,	1);
	create_insn	(x=0X11D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D79);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D7E);
	op_hex		(x,	1);
	create_insn	(x=0X11D80);
	op_hex		(x,	1);
	create_insn	(x=0X11D84);
	op_stkvar	(x,	1);
	set_cmt	(0X11D88,	"char *",	0);
	create_insn	(x=0X11D8E);
	op_hex		(x,	1);
	create_insn	(x=0X11D95);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D9A);
	op_hex		(x,	1);
	create_insn	(x=0X11D9C);
	op_hex		(x,	1);
	create_insn	(x=0X11DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DA5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X11DA8,	"char *",	0);
	create_insn	(x=0X11DAE);
	op_hex		(x,	1);
	create_insn	(x=0X11DB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DB6);
	op_hex		(x,	1);
	create_insn	(x=0X11DB8);
	op_hex		(x,	1);
	create_insn	(x=0X11DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DC6);
	op_hex		(x,	1);
	create_insn	(x=0X11DC8);
	op_hex		(x,	1);
	create_insn	(x=0X11DCC);
	op_stkvar	(x,	1);
	set_cmt	(0X11DD0,	"char *",	0);
	create_insn	(x=0X11DD6);
	op_hex		(x,	1);
	create_insn	(x=0X11DD9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11DDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DE2);
	op_hex		(x,	1);
	create_insn	(x=0X11DE4);
	op_hex		(x,	1);
	create_insn	(x=0X11DE8);
	op_stkvar	(x,	1);
	set_cmt	(0X11DEC,	"char *",	0);
	create_insn	(x=0X11DF2);
	op_hex		(x,	1);
	create_insn	(x=0X11DF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X11DFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E05);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E09);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E10);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E15);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E23);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E29);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E30);
	op_hex		(x,	1);
	create_insn	(x=0X11E32);
	op_hex		(x,	1);
	create_insn	(x=0X11E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E45);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E57);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E64);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E6E);
	op_stkvar	(x,	0);
	set_cmt	(0X11E72,	"default backlights paintjob 2Dh",	0);
	create_insn	(x=0X11E77);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11E80);
	op_hex		(x,	1);
	create_insn	(x=0X11E83);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E86);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E89);
	op_stkvar	(x,	0);
	create_insn	(x=0X11E8F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11E98);
	op_hex		(x,	1);
	create_insn	(x=0X11EA2);
	op_stkvar	(x,	0);
	create_insn	(0X11EAB);
	create_insn	(x=0X11EBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EBE);
	op_hex		(x,	1);
	create_insn	(x=0X11EC0);
	op_hex		(x,	1);
	create_insn	(x=0X11EC2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11EC6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11ECA);
	op_stkvar	(x,	0);
	create_insn	(x=0X11ECE);
	op_stkvar	(x,	0);
	create_insn	(x=0X11ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EE6);
	op_hex		(x,	1);
	create_insn	(x=0X11EE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X11EEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X11EFC);
	op_hex		(x,	1);
	create_insn	(x=0X11EFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F13);
	op_hex		(x,	1);
	create_insn	(x=0X11F1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F1D);
	op_hex		(x,	1);
	create_insn	(x=0X11F1F);
	op_hex		(x,	1);
	create_insn	(x=0X11F21);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X11F25);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X11F2E);
	op_hex		(x,	1);
	create_insn	(x=0X11F35);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F44);
	op_hex		(x,	1);
	create_insn	(0X11F4A);
	create_insn	(x=0X11F50);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F54);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F59);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F63);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F68);
	op_stkvar	(x,	0);
	create_insn	(x=0X11F82);
	op_hex		(x,	1);
	create_insn	(x=0X11F9B);
	op_hex		(x,	1);
	create_insn	(x=0X11FA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FA8);
	op_stkvar	(x,	0);
	create_insn	(0X11FB1);
	create_insn	(x=0X11FB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X11FB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X11FC0);
	op_hex		(x,	1);
	create_insn	(x=0X11FC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X11FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FD3);
	op_hex		(x,	1);
	create_insn	(x=0X11FD5);
	op_hex		(x,	1);
	set_cmt	(0X11FDB,	"var_EE = var_carids",	0);
	create_insn	(x=0X11FE4);
	op_hex		(x,	1);
	create_insn	(x=0X11FE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FEE);
	op_hex		(x,	1);
	create_insn	(x=0X11FF0);
	op_hex		(x,	1);
	create_insn	(x=0X11FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X12006);
	op_stkvar	(x,	1);
	create_insn	(x=0X1200D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12014);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1201D);
	op_hex		(x,	1);
	create_insn	(x=0X12020);
	op_stkvar	(x,	0);
	create_insn	(x=0X12023);
	op_stkvar	(x,	0);
	create_insn	(x=0X1202A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12032);
	op_hex		(x,	1);
	set_cmt	(0X1203D,	"7",	0);
	set_cmt	(0X12041,	"8",	0);
	set_cmt	(0X12045,	"F",	0);
	create_insn	(x=0X1205F);
	op_hex		(x,	1);
	create_insn	(x=0X1208A);
	op_hex		(x,	1);
	create_insn	(x=0X120B5);
	op_hex		(x,	1);
	create_insn	(x=0X120B8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X120BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X120BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X120C7);
	op_hex		(x,	1);
	create_insn	(x=0X120D1);
	op_hex		(x,	1);
	create_insn	(x=0X120E1);
	op_hex		(x,	1);
	set_cmt	(0X120E4,	"the graph",	0);
	create_insn	(x=0X120F0);
	op_hex		(x,	1);
	create_insn	(x=0X120FB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12104);
	op_hex		(x,	1);
	create_insn	(x=0X1210F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12118);
	op_hex		(x,	1);
	create_insn	(x=0X12123);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1212C);
	op_hex		(x,	1);
	create_insn	(x=0X12137);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12140);
	op_hex		(x,	1);
	create_insn	(x=0X1214B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12154);
	op_hex		(x,	1);
	create_insn	(x=0X1217D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1218E);
	op_hex		(x,	1);
	create_insn	(x=0X12198);
	op_hex		(x,	1);
	create_insn	(x=0X121BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X121CD);
	op_hex		(x,	1);
	create_insn	(x=0X121D7);
	op_hex		(x,	1);
	create_insn	(x=0X121FB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1220C);
	op_hex		(x,	1);
	create_insn	(x=0X12216);
	op_hex		(x,	1);
	create_insn	(x=0X12219);
	op_stkvar	(x,	1);
	create_insn	(x=0X12221);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12226);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12237);
	op_hex		(x,	1);
	create_insn	(x=0X1223A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1223D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12262);
	op_stkvar	(x,	0);
	create_insn	(x=0X1226A);
	op_hex		(x,	1);
	create_insn	(x=0X1228E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1229F);
	op_hex		(x,	1);
	create_insn	(x=0X122A9);
	op_hex		(x,	1);
	create_insn	(x=0X122AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X122C1);
	op_hex		(x,	1);
	create_insn	(x=0X122C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X122CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X122D2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X122E2);
	op_hex		(x,	1);
	create_insn	(x=0X122EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X122F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X122FB);
	op_hex		(x,	1);
	create_insn	(x=0X122FD);
	op_hex		(x,	1);
	create_insn	(x=0X1230F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1231A);
	op_stkvar	(x,	1);
	create_insn	(x=0X12327);
	op_stkvar	(x,	0);
	create_insn	(x=0X1232E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12337);
	op_hex		(x,	1);
	create_insn	(x=0X1233A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1233D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X12342,	E_NEXT + 0,	"320h = 20 * 40 iterations.");
	update_extra_cmt		(0X12342,	E_NEXT + 1,	"That is the number of");
	update_extra_cmt		(0X12342,	E_NEXT + 2,	"timesteps needed to draw");
	update_extra_cmt		(0X12342,	E_NEXT + 3,	"the graph on car selection");
	update_extra_cmt		(0X12342,	E_NEXT + 4,	"menu.");
	update_extra_cmt		(0X12342,	E_NEXT + 5,	"");
	create_insn	(x=0X12344);
	op_stkvar	(x,	1);
	create_insn	(x=0X12357);
	op_hex		(x,	1);
	create_insn	(x=0X1235A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1235E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12361);
	op_stkvar	(x,	0);
	create_insn	(x=0X12369);
	op_hex		(x,	1);
	create_insn	(x=0X1236C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12370);
	op_stkvar	(x,	0);
	create_insn	(x=0X12374);
	op_stkvar	(x,	0);
	create_insn	(x=0X12379);
	op_stkvar	(x,	0);
	create_insn	(x=0X1237E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12382);
	op_stkvar	(x,	0);
	create_insn	(x=0X12389);
	op_stkvar	(x,	0);
	create_insn	(x=0X12390);
	op_stkvar	(x,	0);
	create_insn	(x=0X12396);
	op_stkvar	(x,	1);
	create_insn	(x=0X12399);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1239E);
	op_stkvar	(x,	0);
	create_insn	(x=0X123A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X123AE);
	op_hex		(x,	1);
	create_insn	(x=0X123B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X123B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X123BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X123C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X123C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X123C7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X123CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X123DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X123E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X123EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X123F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X123F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X123FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X12401);
	op_stkvar	(x,	0);
	create_insn	(x=0X12405);
	op_stkvar	(x,	1);
	create_insn	(x=0X12408);
	op_stkvar	(x,	0);
	create_insn	(x=0X1240B);
	op_stkvar	(x,	1);
	create_insn	(0X1241B);
	create_insn	(0X12423);
	create_insn	(x=0X12430);
	op_hex		(x,	1);
	create_insn	(x=0X12433);
	op_stkvar	(x,	0);
	create_insn	(x=0X1243F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12442);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X12448);
	create_insn	(x=0X12449);
	op_stkvar	(x,	1);
	create_insn	(x=0X1244C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12459);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12460);
	op_stkvar	(x,	0);
	create_insn	(x=0X1246A);
	op_hex		(x,	1);
	create_insn	(x=0X1246D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1247A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1247D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12480);
	op_stkvar	(x,	1);
	create_insn	(x=0X12485);
	op_stkvar	(x,	0);
	create_insn	(x=0X12488);
	op_stkvar	(x,	1);
	create_insn	(x=0X12491);
	op_hex		(x,	1);
	create_insn	(x=0X12494);
	op_stkvar	(x,	1);
	create_insn	(x=0X12497);
	op_stkvar	(x,	0);
	create_insn	(0X124A6);
	create_insn	(x=0X124AC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X124B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X124B9);
	op_hex		(x,	1);
	create_insn	(x=0X124BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X124C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X124C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X124CE);
	op_hex		(x,	1);
	create_insn	(x=0X124D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X124DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X124DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X124E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1250F);
	op_hex		(x,	1);
	create_insn	(x=0X12527);
	op_hex		(x,	1);
	create_insn	(x=0X12539);
	op_stkvar	(x,	1);
	create_insn	(x=0X1253D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1254E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12552);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12556);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1255A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1255E);
	op_stkvar	(x,	1);
	create_insn	(x=0X12569);
	op_hex		(x,	1);
	create_insn	(x=0X1256C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12585);
	op_stkvar	(x,	0);
	create_insn	(x=0X1258D);
	op_hex		(x,	1);
	create_insn	(x=0X12592);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12596);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1259A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1259E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X125AB);
	op_hex		(x,	1);
	create_insn	(x=0X125AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X125B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X125C1);
	op_stkvar	(x,	0);
	create_insn	(0X125D0);
	create_insn	(0X125DA);
	create_insn	(0X125E2);
	create_insn	(0X125EA);
	create_insn	(0X125F2);
	create_insn	(0X125FA);
	create_insn	(x=0X125FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X12602);
	op_stkvar	(x,	0);
	create_insn	(x=0X1260C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1260F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12612);
	op_stkvar	(x,	0);
	create_insn	(x=0X12615);
	op_stkvar	(x,	0);
	create_insn	(x=0X1261D);
	op_hex		(x,	1);
	create_insn	(x=0X12620);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12624);
	op_stkvar	(x,	0);
	create_insn	(x=0X12627);
	op_stkvar	(x,	0);
	create_insn	(x=0X1262F);
	op_hex		(x,	1);
	create_insn	(x=0X12639);
	op_hex		(x,	1);
	create_insn	(x=0X12646);
	op_stkvar	(x,	0);
	create_insn	(x=0X12649);
	op_stkvar	(x,	0);
	create_insn	(x=0X1264C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1264F);
	op_stkvar	(x,	0);
	create_insn	(x=0X12657);
	op_hex		(x,	1);
	create_insn	(x=0X1265B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1265F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12669);
	op_stkvar	(x,	0);
	create_insn	(x=0X1266F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12672);
	op_stkvar	(x,	0);
	create_insn	(x=0X12684);
	op_stkvar	(x,	1);
	create_insn	(x=0X12698);
	op_hex		(x,	1);
	create_insn	(x=0X126A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X126A5);
	op_hex		(x,	1);
	create_insn	(x=0X126A7);
	op_hex		(x,	1);
	create_insn	(x=0X126A9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X126AD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X126B8);
	create_insn	(x=0X126BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X126CE);
	op_hex		(x,	1);
	create_insn	(x=0X126D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X126D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X126DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X126DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X126E7);
	op_hex		(x,	1);
	create_insn	(x=0X126EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X126F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X12707);
	op_hex		(x,	1);
	create_insn	(x=0X1270A);
	op_stkvar	(x,	0);
	create_insn	(0X12710);
	create_insn	(x=0X12720);
	op_hex		(x,	1);
	create_insn	(x=0X12728);
	op_stkvar	(x,	1);
	create_insn	(x=0X1272C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12732);
	op_stkvar	(x,	1);
	create_insn	(0X12743);
	create_insn	(0X1274B);
	create_insn	(0X12753);
	create_insn	(0X1275B);
	create_insn	(x=0X1275E);
	op_stkvar	(x,	0);
	create_insn	(0X12768);
	create_insn	(x=0X12775);
	op_hex		(x,	1);
	create_insn	(x=0X12778);
	op_stkvar	(x,	0);
	create_insn	(x=0X1277B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12783);
	op_hex		(x,	1);
	create_insn	(x=0X1278B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12798);
	op_stkvar	(x,	0);
	create_insn	(x=0X1279B);
	op_stkvar	(x,	0);
	create_insn	(x=0X127A3);
	op_hex		(x,	1);
	create_insn	(x=0X127A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X127B9);
	op_hex		(x,	1);
	create_insn	(x=0X127BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X127BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X127C7);
	op_hex		(x,	1);
	create_insn	(x=0X127CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X127D6);
	op_hex		(x,	1);
	create_insn	(x=0X127D8);
	op_hex		(x,	1);
	create_insn	(x=0X127DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X127E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X127E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X127EC);
	op_hex		(x,	1);
	create_insn	(x=0X127EE);
	op_hex		(x,	1);
	create_insn	(x=0X127F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X127F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X127FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12803);
	op_hex		(x,	1);
	create_insn	(x=0X12805);
	op_hex		(x,	1);
	create_insn	(x=0X12809);
	op_stkvar	(x,	1);
	create_insn	(x=0X1280D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12813);
	op_stkvar	(x,	1);
	create_insn	(x=0X1281A);
	op_hex		(x,	1);
	create_insn	(x=0X1281C);
	op_hex		(x,	1);
	create_insn	(x=0X12820);
	op_stkvar	(x,	1);
	create_insn	(x=0X12824);
	op_stkvar	(x,	1);
	create_insn	(x=0X12836);
	op_stkvar	(x,	0);
	create_insn	(x=0X1283A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1283D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12846);
	op_stkvar	(x,	0);
	create_insn	(x=0X1284E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12857);
	op_stkvar	(x,	1);
	create_insn	(x=0X1285C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12864);
	op_stkvar	(x,	1);
	create_insn	(x=0X12867);
	op_hex		(x,	1);
	create_insn	(x=0X1286F);
	op_stkvar	(x,	1);
	create_insn	(x=0X12877);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1287C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1288D);
	op_hex		(x,	1);
	create_insn	(x=0X12890);
	op_stkvar	(x,	0);
	create_insn	(x=0X12893);
	op_stkvar	(x,	0);
	create_insn	(x=0X128B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X128C0);
	op_hex		(x,	1);
	create_insn	(x=0X128EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X128F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X128F9);
	op_hex		(x,	1);
	create_insn	(x=0X12904);
	op_stkvar	(x,	1);
	set_cmt	(0X12907,	"change color/material",	0);
	create_insn	(x=0X12909);
	op_stkvar	(x,	0);
	create_insn	(x=0X12910);
	op_stkvar	(x,	0);
	create_insn	(x=0X12917);
	op_stkvar	(x,	0);
	create_insn	(x=0X1291E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12926);
	op_stkvar	(x,	0);
	create_insn	(x=0X1292D);
	op_stkvar	(x,	0);
	create_insn	(x=0X12934);
	op_stkvar	(x,	0);
	create_insn	(0X1293C);
	set_name	(0X1293C,	"run_opponent_menu");
	create_insn	(x=0X1293F);
	op_hex		(x,	1);
	create_insn	(x=0X1294C);
	op_hex		(x,	1);
	create_insn	(x=0X1294F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12958);
	op_hex		(x,	1);
	create_insn	(x=0X12962);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X12965,	"char *",	0);
	set_cmt	(0X12969,	"int",	0);
	create_insn	(x=0X1296F);
	op_hex		(x,	1);
	create_insn	(x=0X12979);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1297D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1298B);
	op_hex		(x,	1);
	create_insn	(x=0X1298E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12992);
	op_stkvar	(x,	0);
	create_insn	(x=0X12996);
	op_stkvar	(x,	0);
	create_insn	(x=0X1299A);
	op_stkvar	(x,	0);
	create_insn	(x=0X129AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X129B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X129C6);
	op_hex		(x,	1);
	create_insn	(x=0X129C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X129CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X129D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X129DA);
	op_hex		(x,	1);
	create_insn	(x=0X129E6);
	op_hex		(x,	1);
	create_insn	(x=0X129F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12A01);
	op_hex		(x,	1);
	create_insn	(x=0X12A04);
	op_stkvar	(x,	0);
	create_insn	(x=0X12A07);
	op_stkvar	(x,	0);
	create_insn	(x=0X12A0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12A10);
	op_stkvar	(x,	0);
	create_insn	(x=0X12A25);
	op_hex		(x,	1);
	create_insn	(x=0X12A32);
	op_stkvar	(x,	0);
	create_insn	(x=0X12A35);
	op_stkvar	(x,	0);
	create_insn	(0X12A48);
	create_insn	(x=0X12A55);
	op_hex		(x,	1);
	create_insn	(x=0X12A69);
	op_hex		(x,	1);
	create_insn	(x=0X12A6C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12A7D);
	op_hex		(x,	1);
	create_insn	(x=0X12A87);
	op_hex		(x,	1);
	create_insn	(x=0X12AAA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12ABB);
	op_hex		(x,	1);
	create_insn	(x=0X12AC5);
	op_hex		(x,	1);
	create_insn	(x=0X12AE8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12AF9);
	op_hex		(x,	1);
	create_insn	(x=0X12B03);
	op_hex		(x,	1);
	create_insn	(x=0X12B26);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12B37);
	op_hex		(x,	1);
	create_insn	(x=0X12B41);
	op_hex		(x,	1);
	create_insn	(x=0X12B64);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12B75);
	op_hex		(x,	1);
	create_insn	(x=0X12B7F);
	op_hex		(x,	1);
	create_insn	(x=0X12BA2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12BB3);
	op_hex		(x,	1);
	create_insn	(x=0X12BBD);
	op_hex		(x,	1);
	create_insn	(x=0X12BD4);
	op_hex		(x,	1);
	create_insn	(x=0X12BDD);
	op_hex		(x,	1);
	create_insn	(x=0X12BDF);
	op_hex		(x,	1);
	create_insn	(x=0X12BE1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X12BE5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X12BEE);
	op_hex		(x,	1);
	create_insn	(x=0X12C02);
	op_hex		(x,	1);
	create_insn	(x=0X12C05);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12C16);
	op_hex		(x,	1);
	create_insn	(x=0X12C20);
	op_hex		(x,	1);
	create_insn	(x=0X12C3E);
	op_hex		(x,	1);
	create_insn	(x=0X12C4D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12C51);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C54);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C5A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12C6B);
	op_hex		(x,	1);
	create_insn	(x=0X12C6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C71);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C81);
	op_hex		(x,	1);
	create_insn	(x=0X12C90);
	op_hex		(x,	1);
	create_insn	(x=0X12C93);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C98);
	op_stkvar	(x,	0);
	create_insn	(x=0X12C9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CB6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X12CBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CCF);
	op_hex		(x,	1);
	create_insn	(x=0X12CD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X12CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CE9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X12CED);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D03);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D09);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D1B);
	op_hex		(x,	1);
	create_insn	(x=0X12D1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D4E);
	op_hex		(x,	1);
	create_insn	(x=0X12D51);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D5A);
	op_hex		(x,	1);
	create_insn	(x=0X12D5F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12D63);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12D67);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12D6B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12D78);
	op_hex		(x,	1);
	create_insn	(x=0X12D7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12D8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D90);
	op_stkvar	(x,	0);
	create_insn	(0X12D9A);
	create_insn	(0X12DB3);
	create_insn	(0X12DBB);
	create_insn	(x=0X12DBE);
	op_stkvar	(x,	1);
	create_insn	(0X12DDD);
	create_insn	(0X12DE0);
	create_insn	(0X12DEE);
	create_insn	(0X12DF6);
	create_insn	(0X12E04);
	create_insn	(0X12E0C);
	create_insn	(0X12E14);
	create_insn	(0X12E1E);
	create_insn	(x=0X12E35);
	op_hex		(x,	1);
	create_insn	(x=0X12E38);
	op_stkvar	(x,	0);
	create_insn	(x=0X12E3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X12E43);
	op_hex		(x,	1);
	create_insn	(x=0X12E50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12E54);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12E58);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12E60);
	op_hex		(x,	1);
	create_insn	(x=0X12E63);
	op_stkvar	(x,	0);
	create_insn	(0X12E6A);
	create_insn	(x=0X12E93);
	op_hex		(x,	1);
	create_insn	(x=0X12E95);
	op_hex		(x,	1);
	create_insn	(0X12EA2);
	create_insn	(x=0X12EB4);
	op_hex		(x,	1);
	create_insn	(x=0X12EB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X12EBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X12EC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X12EC8);
	op_hex		(x,	1);
	create_insn	(x=0X12ED8);
	op_hex		(x,	1);
	create_insn	(x=0X12EE8);
	op_hex		(x,	1);
	create_insn	(x=0X12EF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X12EFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F02);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F10);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F19);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F20);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F26);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X12F43);
	op_stkvar	(x,	0);
	create_insn	(0X12F4A);
	set_name	(0X12F4A,	"run_option_menu");
	create_insn	(x=0X12F4D);
	op_hex		(x,	1);
	create_insn	(x=0X12F50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12F59);
	op_hex		(x,	1);
	create_insn	(x=0X12F71);
	op_hex		(x,	1);
	create_insn	(x=0X12F74);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12F85);
	op_hex		(x,	1);
	create_insn	(x=0X12F8A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12F93);
	op_hex		(x,	1);
	create_insn	(x=0X12FA1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FAA);
	op_hex		(x,	1);
	create_insn	(x=0X12FAE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FB7);
	op_hex		(x,	1);
	create_insn	(x=0X12FBA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FCB);
	op_hex		(x,	1);
	create_insn	(x=0X12FD0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FD9);
	op_hex		(x,	1);
	create_insn	(x=0X12FE7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FF0);
	op_hex		(x,	1);
	create_insn	(x=0X12FF4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X12FFD);
	op_hex		(x,	1);
	create_insn	(x=0X13000);
	op_stkvar	(x,	0);
	create_insn	(x=0X13011);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13022);
	op_hex		(x,	1);
	create_insn	(x=0X13034);
	op_hex		(x,	1);
	create_insn	(x=0X13037);
	op_stkvar	(x,	0);
	create_insn	(0X13046);
	create_insn	(x=0X13049);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_insn	(x=0X13055);
	op_stkvar	(x,	0);
	create_insn	(0X1305C);
	create_insn	(x=0X13063);
	op_stkvar	(x,	0);
	create_insn	(x=0X1306A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1306E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1307F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13090);
	op_hex		(x,	1);
	create_insn	(x=0X130A2);
	op_hex		(x,	1);
	create_insn	(x=0X130A5);
	op_stkvar	(x,	0);
	create_insn	(0X130BA);
	create_insn	(0X130C2);
	create_insn	(0X130CA);
	create_insn	(0X130D2);
	create_insn	(0X130DA);
	create_insn	(x=0X130E2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X130F3);
	op_hex		(x,	1);
	set_cmt	(0X130F6,	"int",	0);
	set_cmt	(0X130F7,	"int",	0);
	create_insn	(x=0X130F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X130FB,	"int",	0);
	create_insn	(x=0X130FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13100);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13103,	"char *",	0);
	create_insn	(x=0X13109);
	op_hex		(x,	1);
	create_insn	(x=0X1310C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1311E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13122);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13125,	"char *",	0);
	create_insn	(x=0X1312B);
	op_hex		(x,	1);
	create_insn	(x=0X1312E);
	op_stkvar	(x,	0);
	create_insn	(0X13134);
	create_insn	(0X1313C);
	create_insn	(x=0X13144);
	op_stkvar	(x,	0);
	create_word	(x=0X1314A);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X1314C);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X1314E);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X13150);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X13152);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X13154);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X13156);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_word	(x=0X13158);
	op_plain_offset	(x,	0,	0X10000);
	op_plain_offset	(x,	128,	0X10000);
	create_insn	(x=0X1315A);
	op_stkvar	(x,	0);
	create_insn	(0X13163);
	create_insn	(x=0X13170);
	op_stkvar	(x,	1);
	create_insn	(0X13178);
	set_name	(0X13178,	"end_hiscore");
	create_insn	(x=0X1317B);
	op_hex		(x,	1);
	create_insn	(x=0X1318A);
	op_hex		(x,	1);
	create_insn	(x=0X1318D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13196);
	op_hex		(x,	1);
	create_insn	(x=0X13199);
	op_stkvar	(x,	0);
	create_insn	(x=0X1319C);
	op_stkvar	(x,	0);
	create_insn	(x=0X131AE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X131B7);
	op_hex		(x,	1);
	create_insn	(x=0X131BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X131BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X131D1);
	op_hex		(x,	1);
	create_insn	(x=0X131F3);
	op_hex		(x,	1);
	create_insn	(x=0X131F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X131F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X131FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X13227);
	op_hex		(x,	1);
	create_insn	(x=0X1324F);
	op_hex		(x,	1);
	create_insn	(x=0X13252);
	op_stkvar	(x,	0);
	create_insn	(x=0X13257);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1325B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1325E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13266);
	op_hex		(x,	1);
	create_insn	(x=0X1326B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13274);
	op_hex		(x,	1);
	create_insn	(0X13281);
	set_cmt	(0X13284,	"int",	0);
	create_insn	(x=0X1328D);
	op_stkvar	(x,	1);
	set_cmt	(0X13290,	"char *",	0);
	create_insn	(x=0X13296);
	op_hex		(x,	1);
	create_insn	(x=0X13299);
	op_stkvar	(x,	1);
	create_insn	(x=0X1329D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X132A0,	"char *",	0);
	create_insn	(x=0X132A6);
	op_hex		(x,	1);
	create_insn	(x=0X132A9);
	op_hex		(x,	1);
	create_insn	(x=0X132B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X132B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X132B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X132BF);
	op_hex		(x,	1);
	create_insn	(x=0X132C4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X132C7,	"char *",	0);
	create_insn	(x=0X132CD);
	op_hex		(x,	1);
	create_insn	(x=0X132D0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X132D9);
	op_hex		(x,	1);
	create_insn	(x=0X132E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X132E6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X132EF);
	op_hex		(x,	1);
	create_insn	(x=0X132F3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X132FC);
	op_hex		(x,	1);
	create_insn	(x=0X132FF);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1330D,	E_PREV + 0,	"Penalty time:");
	create_insn	(x=0X1330D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13311);
	op_stkvar	(x,	0);
	create_insn	(x=0X13314);
	op_stkvar	(x,	0);
	create_insn	(x=0X1331C);
	op_hex		(x,	1);
	create_insn	(x=0X13321);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1332A);
	op_hex		(x,	1);
	set_cmt	(0X13330,	"int",	0);
	create_insn	(x=0X13335);
	op_stkvar	(x,	1);
	set_cmt	(0X13338,	"char *",	0);
	create_insn	(x=0X1333E);
	op_hex		(x,	1);
	create_insn	(x=0X13341);
	op_stkvar	(x,	1);
	create_insn	(x=0X13345);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13348,	"char *",	0);
	create_insn	(x=0X1334E);
	op_hex		(x,	1);
	create_insn	(x=0X13354);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13358);
	op_stkvar	(x,	0);
	create_insn	(x=0X1335B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13363);
	op_hex		(x,	1);
	create_insn	(x=0X13368);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1336B,	"char *",	0);
	create_insn	(x=0X13371);
	op_hex		(x,	1);
	create_insn	(x=0X13374);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1337D);
	op_hex		(x,	1);
	create_insn	(x=0X13387);
	op_stkvar	(x,	0);
	create_insn	(x=0X1338A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13393);
	op_hex		(x,	1);
	create_insn	(x=0X13397);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X133A0);
	op_hex		(x,	1);
	create_insn	(x=0X133A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X133A7);
	op_stkvar	(x,	0);
	create_insn	(0X133B5);
	create_insn	(x=0X133BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X133C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X133C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X133CB);
	op_hex		(x,	1);
	create_insn	(x=0X133D0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X133D9);
	op_hex		(x,	1);
	create_insn	(x=0X133DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X133E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X133E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X133EB);
	op_hex		(x,	1);
	create_insn	(x=0X133F0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X133F3,	"char *",	0);
	create_insn	(x=0X133F9);
	op_hex		(x,	1);
	create_insn	(x=0X133FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13405);
	op_hex		(x,	1);
	create_insn	(0X1340C);
	create_insn	(x=0X1341C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13420);
	op_stkvar	(x,	0);
	create_insn	(x=0X13423);
	op_stkvar	(x,	0);
	create_insn	(x=0X1342B);
	op_hex		(x,	1);
	create_insn	(x=0X13430);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13439);
	op_hex		(x,	1);
	set_cmt	(0X1343F,	"int",	0);
	create_insn	(x=0X13444);
	op_stkvar	(x,	1);
	set_cmt	(0X13447,	"char *",	0);
	create_insn	(x=0X1344D);
	op_hex		(x,	1);
	create_insn	(x=0X13450);
	op_stkvar	(x,	1);
	create_insn	(x=0X13454);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13457,	"char *",	0);
	create_insn	(x=0X1345D);
	op_hex		(x,	1);
	create_insn	(x=0X13460);
	op_stkvar	(x,	0);
	create_insn	(x=0X13466);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1346A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1346D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13475);
	op_hex		(x,	1);
	create_insn	(x=0X1347A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13483);
	op_hex		(x,	1);
	set_cmt	(0X13489,	"int",	0);
	create_insn	(x=0X1348E);
	op_stkvar	(x,	1);
	set_cmt	(0X13491,	"char *",	0);
	create_insn	(x=0X13497);
	op_hex		(x,	1);
	create_insn	(x=0X1349A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1349E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X134A1,	"char *",	0);
	create_insn	(x=0X134A7);
	op_hex		(x,	1);
	create_insn	(x=0X134B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X134BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X134BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134C8);
	op_hex		(x,	1);
	create_insn	(x=0X134CC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134D5);
	op_hex		(x,	1);
	create_insn	(x=0X134D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X134DC);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X134E2,	E_PREV + 0,	"Loading endrace music...");
	create_insn	(x=0X134E2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134E6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134EA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134F0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X134F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X134FB,	"char *",	0);
	create_insn	(x=0X13501);
	op_hex		(x,	1);
	create_insn	(x=0X13507);
	op_stkvar	(x,	0);
	create_insn	(x=0X1350A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13519);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1351D,	E_PREV + 0,	"This is a very useful function for");
	update_extra_cmt		(0X1351D,	E_PREV + 1,	"analysis - it is now printing the");
	update_extra_cmt		(0X1351D,	E_PREV + 2,	"replays stats at the eval screen.");
	create_insn	(x=0X1351D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13521);
	op_stkvar	(x,	0);
	create_insn	(x=0X13524);
	op_stkvar	(x,	0);
	create_insn	(x=0X1352C);
	op_hex		(x,	1);
	create_insn	(x=0X13531);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1353A);
	op_hex		(x,	1);
	create_insn	(0X1356A);
	set_cmt	(0X1356F,	"int",	0);
	set_cmt	(0X13572,	"int",	0);
	create_insn	(x=0X13574);
	op_stkvar	(x,	1);
	set_cmt	(0X13577,	"char *",	0);
	create_insn	(x=0X1357D);
	op_hex		(x,	1);
	create_insn	(x=0X13580);
	op_stkvar	(x,	1);
	create_insn	(x=0X13584);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13587,	"char *",	0);
	create_insn	(x=0X1358D);
	op_hex		(x,	1);
	create_insn	(x=0X13590);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13594);
	op_stkvar	(x,	0);
	create_insn	(x=0X13597);
	op_stkvar	(x,	0);
	create_insn	(x=0X1359F);
	op_hex		(x,	1);
	create_insn	(x=0X135A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X135A7,	"char *",	0);
	create_insn	(x=0X135AD);
	op_hex		(x,	1);
	create_insn	(x=0X135B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X135B9);
	op_hex		(x,	1);
	create_insn	(x=0X135C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X135C6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X135CF);
	op_hex		(x,	1);
	create_insn	(x=0X135D3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X135DC);
	op_hex		(x,	1);
	create_insn	(x=0X135DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X135ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X135F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X135F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X135FC);
	op_hex		(x,	1);
	create_insn	(x=0X13601);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1360A);
	op_hex		(x,	1);
	set_cmt	(0X13610,	"int",	0);
	set_cmt	(0X13613,	"int",	0);
	create_insn	(x=0X1361C);
	op_stkvar	(x,	1);
	set_cmt	(0X1361F,	"char *",	0);
	create_insn	(x=0X13625);
	op_hex		(x,	1);
	create_insn	(x=0X13628);
	op_stkvar	(x,	1);
	create_insn	(x=0X1362C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1362F,	"char *",	0);
	create_insn	(x=0X13635);
	op_hex		(x,	1);
	create_insn	(x=0X13638);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1363C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1363F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13647);
	op_hex		(x,	1);
	create_insn	(x=0X1364C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1364F,	"char *",	0);
	create_insn	(x=0X13655);
	op_hex		(x,	1);
	create_insn	(x=0X13658);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13661);
	op_hex		(x,	1);
	create_insn	(x=0X1366B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1366E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13677);
	op_hex		(x,	1);
	create_insn	(x=0X1367B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13684);
	op_hex		(x,	1);
	create_insn	(x=0X13687);
	op_stkvar	(x,	0);
	create_insn	(x=0X1368B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1368F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13692);
	op_stkvar	(x,	0);
	create_insn	(x=0X1369A);
	op_hex		(x,	1);
	create_insn	(x=0X1369F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X136A8);
	op_hex		(x,	1);
	set_cmt	(0X136AE,	"int",	0);
	set_cmt	(0X136B1,	"int",	0);
	create_insn	(x=0X136BA);
	op_stkvar	(x,	1);
	set_cmt	(0X136BD,	"char *",	0);
	create_insn	(x=0X136C3);
	op_hex		(x,	1);
	create_insn	(x=0X136C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X136CA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X136CD,	"char *",	0);
	create_insn	(x=0X136D3);
	op_hex		(x,	1);
	create_insn	(x=0X136D6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X136DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X136DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X136E5);
	op_hex		(x,	1);
	create_insn	(x=0X136EA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X136ED,	"char *",	0);
	create_insn	(x=0X136F3);
	op_hex		(x,	1);
	create_insn	(x=0X136F6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X136FF);
	op_hex		(x,	1);
	create_insn	(x=0X13709);
	op_stkvar	(x,	0);
	create_insn	(x=0X1370C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13715);
	op_hex		(x,	1);
	create_insn	(x=0X13719);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13722);
	op_hex		(x,	1);
	create_insn	(x=0X13725);
	op_stkvar	(x,	0);
	create_insn	(x=0X13730);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13734);
	op_stkvar	(x,	0);
	create_insn	(x=0X13737);
	op_stkvar	(x,	0);
	create_insn	(x=0X1373F);
	op_hex		(x,	1);
	create_insn	(x=0X13744);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1374D);
	op_hex		(x,	1);
	set_cmt	(0X13753,	"int",	0);
	set_cmt	(0X13756,	"int",	0);
	create_insn	(x=0X1375B);
	op_stkvar	(x,	1);
	set_cmt	(0X1375E,	"char *",	0);
	create_insn	(x=0X13764);
	op_hex		(x,	1);
	create_insn	(x=0X13767);
	op_stkvar	(x,	1);
	create_insn	(x=0X1376B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1376E,	"char *",	0);
	create_insn	(x=0X13774);
	op_hex		(x,	1);
	create_insn	(x=0X1377E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13781);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1378A);
	op_hex		(x,	1);
	create_insn	(x=0X1378E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13797);
	op_hex		(x,	1);
	create_insn	(x=0X1379A);
	op_stkvar	(x,	0);
	create_insn	(x=0X137A3);
	op_hex		(x,	1);
	create_insn	(0X137AD);
	create_insn	(x=0X137D7);
	op_hex		(x,	1);
	create_insn	(x=0X137D9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X137F8);
	op_hex		(x,	1);
	create_insn	(x=0X137FA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13801);
	op_stkvar	(x,	0);
	create_insn	(0X1381E);
	create_insn	(0X1382A);
	create_insn	(x=0X13842);
	op_hex		(x,	1);
	create_insn	(x=0X13844);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1384B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13859);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1385C,	"char *",	0);
	set_cmt	(0X13860,	"int",	0);
	create_insn	(x=0X13866);
	op_hex		(x,	1);
	create_insn	(x=0X13869);
	op_stkvar	(x,	0);
	create_insn	(x=0X1386C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1386F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13873);
	op_stkvar	(x,	0);
	create_insn	(x=0X13876);
	op_stkvar	(x,	0);
	create_insn	(x=0X1387E);
	op_hex		(x,	1);
	create_insn	(x=0X13881);
	op_stkvar	(x,	0);
	create_insn	(x=0X13884);
	op_stkvar	(x,	0);
	create_insn	(x=0X13897);
	op_hex		(x,	1);
	create_insn	(0X138A0);
	create_insn	(x=0X138A9);
	op_hex		(x,	1);
	create_insn	(x=0X138AF);
	op_stkvar	(x,	0);
	create_insn	(0X138B6);
	create_insn	(x=0X138BE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X138C1,	"char *",	0);
	set_cmt	(0X138C5,	"int",	0);
	create_insn	(x=0X138CB);
	op_hex		(x,	1);
	create_insn	(x=0X138CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X138D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X138D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X138D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X138DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X138E3);
	op_hex		(x,	1);
	create_insn	(x=0X138E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X138E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X138F5);
	op_hex		(x,	1);
	create_insn	(x=0X138FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X138FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X13903);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13906,	"char *",	0);
	create_insn	(x=0X13907);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1390A,	"int",	0);
	create_insn	(x=0X1390B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1390F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X13912,	"char *",	0);
	create_insn	(x=0X13918);
	op_hex		(x,	1);
	create_insn	(x=0X1391B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1391E,	"char *",	0);
	set_cmt	(0X13922,	"int",	0);
	create_insn	(x=0X13928);
	op_hex		(x,	1);
	create_insn	(x=0X1392B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1392E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13942);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13953);
	op_hex		(x,	1);
	create_insn	(x=0X13962);
	op_hex		(x,	1);
	create_insn	(x=0X13969);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1396C,	"char *",	0);
	set_cmt	(0X13970,	"int",	0);
	create_insn	(x=0X13976);
	op_hex		(x,	1);
	create_insn	(x=0X13979);
	op_stkvar	(x,	0);
	create_insn	(x=0X1397C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1397F);
	op_stkvar	(x,	1);
	create_insn	(x=0X13982);
	op_stkvar	(x,	1);
	create_insn	(0X1398C);
	create_insn	(x=0X1399A);
	op_stkvar	(x,	1);
	create_insn	(x=0X139A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X139A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X139A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X139B1);
	op_hex		(x,	1);
	create_insn	(x=0X139B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X139BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X139C7);
	op_hex		(x,	1);
	create_insn	(x=0X139D6);
	op_hex		(x,	1);
	create_insn	(x=0X139DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X139E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X139F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X139F5);
	op_hex		(x,	1);
	create_insn	(x=0X13A0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A14);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A19);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A23);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A29);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A36);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A42);
	op_stkvar	(x,	0);
	create_insn	(0X13A4B);
	create_insn	(x=0X13A50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13A54);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A57);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A5F);
	op_hex		(x,	1);
	create_insn	(x=0X13A62);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A65);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A72);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A86);
	op_hex		(x,	1);
	create_insn	(x=0X13A88);
	op_stkvar	(x,	0);
	create_insn	(x=0X13A9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AAE);
	op_stkvar	(x,	1);
	set_cmt	(0X13AB6,	"border around opponent animation on eval screen",	0);
	create_insn	(x=0X13ABB);
	op_hex		(x,	1);
	create_insn	(x=0X13ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13AD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X13ADB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13ADF);
	op_stkvar	(x,	0);
	create_insn	(x=0X13AE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X13AEA);
	op_hex		(x,	1);
	create_insn	(x=0X13AF4);
	op_hex		(x,	1);
	create_insn	(x=0X13AF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B07);
	op_hex		(x,	1);
	create_insn	(x=0X13B0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B14);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B19);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B24);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B36);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B3C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13B42);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B45);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B48);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B51);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B58);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B63);
	op_hex		(x,	1);
	create_insn	(x=0X13B66);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B7B);
	op_hex		(x,	1);
	create_insn	(x=0X13B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B82);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B89);
	op_stkvar	(x,	0);
	create_insn	(x=0X13B97);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BA9);
	op_hex		(x,	1);
	create_insn	(x=0X13BAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X13BFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C03);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C06);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C09);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X13C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C14);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C1D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X13C22);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C32);
	op_hex		(x,	1);
	create_insn	(x=0X13C35);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C39);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C46);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C60);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X13C64);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C67);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C72);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X13C80);
	op_hex		(x,	1);
	create_insn	(x=0X13C83);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C86);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C95);
	op_stkvar	(x,	0);
	create_insn	(x=0X13C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CA0);
	op_stkvar	(x,	0);
	create_insn	(0X13CA9);
	create_insn	(x=0X13CAF);
	op_stkvar	(x,	0);
	create_insn	(0X13CBD);
	create_insn	(0X13CC5);
	create_insn	(0X13CCD);
	create_insn	(x=0X13CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X13CE3);
	op_hex		(x,	1);
	create_insn	(x=0X13CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CE9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X13CEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X13CF5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13CFE);
	op_hex		(x,	1);
	create_insn	(x=0X13D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D13);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D17);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D3A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13D3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D41);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D49);
	op_hex		(x,	1);
	create_insn	(x=0X13D53);
	op_hex		(x,	1);
	create_insn	(x=0X13D56);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D68);
	op_hex		(x,	1);
	create_insn	(x=0X13D6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13D79);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DA4);
	op_hex		(x,	1);
	create_insn	(x=0X13DA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13DE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DFC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13E00);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E03);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E0B);
	op_hex		(x,	1);
	create_insn	(x=0X13E0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E11);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E26);
	op_hex		(x,	1);
	create_insn	(x=0X13E2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E30);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E38);
	op_hex		(x,	1);
	create_insn	(x=0X13E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E47);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E57);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E65);
	op_hex		(x,	1);
	create_insn	(x=0X13E68);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E7F);
	op_hex		(x,	1);
	create_insn	(x=0X13E8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E92);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E95);
	op_stkvar	(x,	0);
	create_insn	(x=0X13E9D);
	op_hex		(x,	1);
	create_insn	(x=0X13EAB);
	op_hex		(x,	1);
	create_insn	(x=0X13EBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X13EC4);
	op_stkvar	(x,	0);
	create_insn	(0X13ECD);
	create_insn	(x=0X13EF4);
	op_hex		(x,	1);
	create_insn	(x=0X13F0D);
	op_hex		(x,	1);
	create_insn	(x=0X13F19);
	op_hex		(x,	1);
	create_insn	(x=0X13F21);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F26);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13F2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F35);
	op_hex		(x,	1);
	create_insn	(x=0X13F3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F42);
	op_hex		(x,	1);
	create_insn	(x=0X13F48);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F5B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F62);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F6A);
	op_hex		(x,	1);
	create_insn	(x=0X13F6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F77);
	op_hex		(x,	1);
	create_insn	(x=0X13F7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F7E);
	op_stkvar	(x,	0);
	create_insn	(0X13F84);
	create_insn	(x=0X13F89);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F8F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X13F93);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F96);
	op_stkvar	(x,	0);
	create_insn	(x=0X13F9E);
	op_hex		(x,	1);
	create_insn	(x=0X13FAC);
	op_hex		(x,	1);
	create_insn	(x=0X13FC3);
	op_hex		(x,	1);
	create_insn	(x=0X13FD0);
	op_hex		(x,	1);
	create_insn	(0X13FD6);
	create_insn	(x=0X13FDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X13FDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X13FED);
	op_stkvar	(x,	0);
	create_insn	(x=0X13FF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X13FF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X14002);
	op_stkvar	(x,	0);
	create_insn	(x=0X14008);
	op_stkvar	(x,	0);
	create_insn	(x=0X1400E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14014);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14018);
	op_stkvar	(x,	0);
	create_insn	(x=0X1401B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14023);
	op_hex		(x,	1);
	create_insn	(x=0X14026);
	op_stkvar	(x,	0);
	create_insn	(x=0X14029);
	op_stkvar	(x,	0);
	create_insn	(x=0X1404D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14055);
	op_hex		(x,	1);
	create_insn	(x=0X14073);
	op_stkvar	(x,	1);
	create_insn	(x=0X1407D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14081);
	op_stkvar	(x,	0);
	create_insn	(x=0X14084);
	op_stkvar	(x,	0);
	create_insn	(x=0X1408C);
	op_hex		(x,	1);
	create_insn	(x=0X14096);
	op_hex		(x,	1);
	create_insn	(x=0X14099);
	op_stkvar	(x,	0);
	create_insn	(x=0X1409F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X140A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X140A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X140AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X140B3);
	op_hex		(x,	1);
	create_insn	(x=0X140B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X140B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X140D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X140E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X140EA);
	op_hex		(x,	1);
	create_insn	(x=0X14108);
	op_stkvar	(x,	1);
	create_insn	(x=0X14112);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14116);
	op_stkvar	(x,	0);
	create_insn	(x=0X14119);
	op_stkvar	(x,	0);
	create_insn	(x=0X14121);
	op_hex		(x,	1);
	create_insn	(x=0X1412B);
	op_hex		(x,	1);
	create_insn	(x=0X14132);
	op_hex		(x,	1);
	create_insn	(x=0X14134);
	op_stkvar	(x,	0);
	create_insn	(x=0X1413A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1413E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14149);
	op_hex		(x,	1);
	create_insn	(x=0X1414B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14151);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14155);
	op_stkvar	(x,	1);
	create_insn	(x=0X1416A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1417C);
	op_hex		(x,	1);
	create_insn	(x=0X1417F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14188);
	op_stkvar	(x,	1);
	create_insn	(x=0X1418B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14191);
	op_stkvar	(x,	1);
	create_insn	(x=0X14195);
	op_stkvar	(x,	0);
	create_insn	(x=0X141B2);
	op_hex		(x,	1);
	create_insn	(x=0X141CA);
	op_hex		(x,	1);
	create_insn	(x=0X141E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X141E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X141EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X141F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X141F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X14200);
	op_hex		(x,	1);
	create_insn	(x=0X14203);
	op_stkvar	(x,	0);
	create_insn	(x=0X14206);
	op_stkvar	(x,	0);
	create_insn	(x=0X1420F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14218);
	op_stkvar	(x,	0);
	create_insn	(x=0X1421B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14221);
	op_stkvar	(x,	0);
	create_insn	(x=0X14225);
	op_stkvar	(x,	0);
	create_insn	(x=0X14229);
	op_stkvar	(x,	1);
	create_insn	(x=0X14230);
	op_stkvar	(x,	1);
	create_insn	(x=0X14233);
	op_stkvar	(x,	1);
	create_insn	(x=0X1423C);
	op_stkvar	(x,	0);
	create_insn	(x=0X14241);
	op_stkvar	(x,	1);
	create_insn	(x=0X14244);
	op_stkvar	(x,	0);
	create_insn	(x=0X1424D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14251);
	op_stkvar	(x,	0);
	create_insn	(x=0X14257);
	op_stkvar	(x,	1);
	create_insn	(x=0X1425A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1426A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1426E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14271);
	op_stkvar	(x,	0);
	create_insn	(x=0X14279);
	op_hex		(x,	1);
	create_insn	(x=0X1427C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1427F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14289);
	op_stkvar	(x,	0);
	create_insn	(x=0X1428C);
	op_stkvar	(x,	0);
	create_insn	(x=0X14294);
	op_hex		(x,	1);
	create_insn	(x=0X1429B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1429E);
	op_stkvar	(x,	0);
	create_insn	(x=0X142A6);
	op_hex		(x,	1);
	create_insn	(x=0X142AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X142B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X142BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X142C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X142CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X142D3);
	op_hex		(x,	1);
	create_insn	(x=0X142D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X142DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X142DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X142ED);
	op_hex		(x,	1);
	create_insn	(x=0X142F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X142FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X14300);
	op_stkvar	(x,	0);
	create_insn	(x=0X14303);
	op_stkvar	(x,	0);
	create_insn	(x=0X1430B);
	op_hex		(x,	1);
	create_insn	(x=0X1430E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14312);
	op_stkvar	(x,	0);
	create_insn	(x=0X14316);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1431A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1431D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14325);
	op_hex		(x,	1);
	create_insn	(x=0X1432F);
	op_hex		(x,	1);
	create_insn	(x=0X14337);
	op_stkvar	(x,	0);
	create_insn	(x=0X1433D);
	op_stkvar	(x,	0);
	set_cmt	(0X14343,	"references the last three y pos in the array",	0);
	create_insn	(x=0X14343);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X14347,	"ditto",	0);
	create_insn	(x=0X14347);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1434B);
	op_stkvar	(x,	1);
	create_insn	(x=0X14350);
	op_stkvar	(x,	1);
	create_insn	(x=0X1435D);
	op_hex		(x,	1);
	create_insn	(x=0X14360);
	op_stkvar	(x,	0);
	create_insn	(x=0X1436C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14370);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14374);
	op_stkvar	(x,	1);
	create_insn	(x=0X14379);
	op_stkvar	(x,	1);
	create_insn	(x=0X14386);
	op_hex		(x,	1);
	create_insn	(x=0X14389);
	op_stkvar	(x,	0);
	create_insn	(x=0X14391);
	op_stkvar	(x,	0);
	create_insn	(x=0X14395);
	op_stkvar	(x,	0);
	create_insn	(x=0X1439D);
	op_hex		(x,	1);
	set_cmt	(0X143A9,	"enter",	0);
	create_insn	(0X143A9);
	set_cmt	(0X143AE,	"space",	0);
	create_insn	(0X143BB);
	create_insn	(0X143C3);
	create_insn	(x=0X143C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X143F4);
	op_hex		(x,	1);
	create_insn	(x=0X143F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X143FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X14404);
	op_stkvar	(x,	0);
	create_insn	(0X1440C);
	create_insn	(x=0X14411);
	op_stkvar	(x,	0);
	create_insn	(x=0X14417);
	op_stkvar	(x,	0);
	create_insn	(x=0X1441A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14422);
	op_hex		(x,	1);
	create_insn	(x=0X1442C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1442F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14437);
	op_hex		(x,	1);
	create_insn	(x=0X14447);
	op_hex		(x,	1);
	create_insn	(x=0X14451);
	op_stkvar	(x,	0);
	create_insn	(x=0X14454);
	op_stkvar	(x,	0);
	create_insn	(x=0X1445C);
	op_hex		(x,	1);
	create_insn	(x=0X1445F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14462);
	op_stkvar	(x,	0);
	create_insn	(x=0X1446A);
	op_hex		(x,	1);
	create_insn	(x=0X1446D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1447A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14480);
	op_stkvar	(x,	0);
	create_insn	(x=0X14486);
	op_stkvar	(x,	0);
	create_insn	(x=0X1448D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14496);
	op_stkvar	(x,	0);
	create_insn	(x=0X1449D);
	op_stkvar	(x,	0);
	create_insn	(x=0X144A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X144AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X144B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X144B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X144BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X144C6);
	op_stkvar	(x,	0);
	create_insn	(0X144CE);
	create_insn	(0X144CF);
	set_name	(0X144CF,	"security_check");
	create_insn	(x=0X144D2);
	op_hex		(x,	1);
	create_insn	(x=0X144D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X144DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X144E1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X144E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X144F1);
	op_hex		(x,	1);
	create_insn	(x=0X144F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X144F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X144FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14501);
	op_stkvar	(x,	0);
	create_insn	(x=0X1450A);
	op_hex		(x,	1);
	create_insn	(x=0X1450F);
	op_stkvar	(x,	1);
	create_insn	(x=0X14519);
	op_hex		(x,	1);
	create_insn	(x=0X1451C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14520);
	op_stkvar	(x,	0);
	create_insn	(x=0X14524);
	op_stkvar	(x,	0);
	create_insn	(x=0X1452D);
	op_hex		(x,	1);
	create_insn	(x=0X14532);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1453B);
	op_hex		(x,	1);
	create_insn	(x=0X1453E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14542);
	op_stkvar	(x,	1);
	set_cmt	(0X14546,	"char *",	0);
	create_insn	(x=0X1454C);
	op_hex		(x,	1);
	create_insn	(x=0X14551);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14555);
	op_stkvar	(x,	0);
	create_insn	(x=0X14562);
	op_stkvar	(x,	1);
	create_insn	(x=0X14573);
	op_stkvar	(x,	1);
	create_insn	(x=0X14586);
	op_hex		(x,	1);
	create_insn	(x=0X1458E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14595);
	op_stkvar	(x,	1);
	create_insn	(x=0X1459C);
	op_stkvar	(x,	0);
	create_insn	(x=0X145A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X145A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X145AD);
	op_hex		(x,	1);
	create_insn	(x=0X145B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X145B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X145BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X145C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X145C6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X145CF);
	op_hex		(x,	1);
	create_insn	(x=0X145D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X145D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X145E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X145E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X145E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X145F1);
	op_hex		(x,	1);
	create_insn	(x=0X145F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X145F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X145FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X14605);
	op_hex		(x,	1);
	create_insn	(x=0X1460A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14613);
	op_hex		(x,	1);
	create_insn	(x=0X14616);
	op_stkvar	(x,	1);
	create_insn	(x=0X1461A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1461E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14622);
	op_stkvar	(x,	0);
	create_insn	(x=0X14626);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X14629,	"char *",	0);
	create_insn	(x=0X1462F);
	op_hex		(x,	1);
	create_insn	(x=0X14632);
	op_stkvar	(x,	0);
	create_insn	(x=0X14636);
	op_stkvar	(x,	0);
	create_insn	(x=0X1463B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14641);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X14645,	"int",	0);
	set_cmt	(0X14646,	"int",	0);
	set_cmt	(0X14647,	"int",	0);
	create_insn	(x=0X14647);
	op_stkvar	(x,	0);
	set_cmt	(0X1464B,	"int",	0);
	create_insn	(x=0X1464B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1464F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14653);
	op_stkvar	(x,	1);
	set_cmt	(0X14657,	"char *",	0);
	create_insn	(x=0X1465D);
	op_hex		(x,	1);
	create_insn	(x=0X14664);
	op_stkvar	(x,	1);
	create_insn	(x=0X1466B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1466F);
	op_hex		(x,	1);
	create_insn	(x=0X14671);
	op_stkvar	(x,	0);
	create_insn	(x=0X1467B);
	op_stkvar	(x,	1);
	create_insn	(x=0X14684);
	op_stkvar	(x,	1);
	create_insn	(x=0X14688);
	op_stkvar	(x,	0);
	create_insn	(x=0X1468D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14694);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14698);
	op_stkvar	(x,	1);
	set_cmt	(0X1469C,	"char *",	0);
	create_insn	(x=0X146A2);
	op_hex		(x,	1);
	create_insn	(x=0X146B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X146BB);
	op_stkvar	(x,	0);
	create_insn	(0X146C5);
	create_insn	(x=0X146CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X146D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X146DC);
	op_hex		(x,	1);
	create_insn	(0X146E4);
	set_name	(0X146E4,	"set_default_car");
	create_insn	(0X14712);
	set_name	(0X14712,	"opponent_op");
	create_insn	(x=0X14715);
	op_hex		(x,	1);
	create_insn	(x=0X14721);
	op_stkvar	(x,	0);
	create_insn	(x=0X14726);
	op_stkvar	(x,	0);
	create_insn	(x=0X1472E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14733);
	op_stkvar	(x,	0);
	create_insn	(x=0X14746);
	op_stkvar	(x,	0);
	create_insn	(x=0X1474C);
	op_stkvar	(x,	0);
	create_insn	(x=0X14759);
	op_hex		(x,	1);
	create_insn	(x=0X1475B);
	op_hex		(x,	1);
	create_insn	(x=0X14761);
	op_stkvar	(x,	0);
	create_insn	(x=0X1476D);
	op_hex		(x,	1);
	create_insn	(x=0X1476F);
	op_hex		(x,	1);
	create_insn	(x=0X14775);
	op_stkvar	(x,	0);
	create_insn	(x=0X14781);
	op_hex		(x,	1);
	create_insn	(x=0X14783);
	op_hex		(x,	1);
	create_insn	(x=0X14789);
	op_stkvar	(x,	0);
	create_insn	(x=0X14795);
	op_hex		(x,	1);
	create_insn	(x=0X14797);
	op_hex		(x,	1);
	create_insn	(x=0X1479D);
	op_stkvar	(x,	0);
	create_insn	(x=0X147A9);
	op_hex		(x,	1);
	create_insn	(x=0X147AB);
	op_hex		(x,	1);
	create_insn	(x=0X147B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X147BD);
	op_hex		(x,	1);
	create_insn	(x=0X147BF);
	op_hex		(x,	1);
	create_insn	(x=0X147C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X147E7);
	op_hex		(x,	1);
	create_insn	(x=0X147EA);
	op_stkvar	(x,	0);
	create_insn	(0X14803);
	create_insn	(0X1480C);
	create_insn	(x=0X1480D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14810);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14819);
	op_stkvar	(x,	0);
	create_insn	(x=0X1481F);
	op_stkvar	(x,	1);
	create_insn	(x=0X14822);
	op_stkvar	(x,	1);
	create_insn	(x=0X14825);
	op_stkvar	(x,	0);
	create_insn	(x=0X14828);
	op_stkvar	(x,	1);
	create_insn	(x=0X1482B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1482E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14831);
	op_stkvar	(x,	1);
	create_insn	(x=0X14834);
	op_stkvar	(x,	1);
	create_insn	(x=0X14837);
	op_stkvar	(x,	0);
	create_insn	(x=0X1483A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14843);
	op_hex		(x,	1);
	create_insn	(x=0X14848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1484B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1484F);
	op_stkvar	(x,	1);
	create_insn	(x=0X14852);
	op_stkvar	(x,	1);
	create_insn	(x=0X1485B);
	op_hex		(x,	1);
	create_insn	(x=0X14866);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14874);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1487C);
	op_hex		(x,	1);
	create_insn	(x=0X14889);
	op_hex		(x,	1);
	create_insn	(x=0X14898);
	op_hex		(x,	1);
	create_insn	(x=0X148BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X148BE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X148C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X148CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X148D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X148D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X148DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X148E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X148EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X148EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X148F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X148F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X148F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X148FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X148FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14901);
	op_stkvar	(x,	1);
	create_insn	(x=0X14904);
	op_stkvar	(x,	0);
	create_insn	(x=0X14907);
	op_stkvar	(x,	1);
	create_insn	(x=0X1490B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1490E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14917);
	op_hex		(x,	1);
	create_insn	(x=0X1491A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14920);
	op_stkvar	(x,	0);
	create_insn	(x=0X14926);
	op_stkvar	(x,	1);
	create_insn	(x=0X1492E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14936);
	op_stkvar	(x,	0);
	create_insn	(x=0X14940);
	op_stkvar	(x,	0);
	create_insn	(x=0X1494A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14951);
	op_stkvar	(x,	0);
	create_insn	(x=0X1495B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14962);
	op_stkvar	(x,	1);
	create_insn	(x=0X14969);
	op_stkvar	(x,	0);
	create_insn	(x=0X1496C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14973);
	op_stkvar	(x,	0);
	create_insn	(x=0X14976);
	op_stkvar	(x,	1);
	create_insn	(x=0X1497A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1497D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14986);
	op_hex		(x,	1);
	create_insn	(x=0X14989);
	op_stkvar	(x,	0);
	create_insn	(x=0X1499F);
	op_hex		(x,	1);
	create_insn	(x=0X149A1);
	op_hex		(x,	1);
	create_insn	(x=0X149A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X149AD);
	op_stkvar	(x,	0);
	create_insn	(0X149B4);
	create_insn	(x=0X149C4);
	op_hex		(x,	1);
	create_insn	(x=0X149C6);
	op_hex		(x,	1);
	create_insn	(x=0X149C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X149DB);
	op_hex		(x,	1);
	create_insn	(x=0X149DD);
	op_hex		(x,	1);
	create_insn	(x=0X149DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X149E2);
	op_stkvar	(x,	0);
	create_insn	(0X149EB);
	create_insn	(0X149F5);
	create_insn	(0X149FE);
	create_insn	(x=0X14A0E);
	op_hex		(x,	1);
	create_insn	(x=0X14A10);
	op_hex		(x,	1);
	create_insn	(x=0X14A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A1C);
	op_stkvar	(x,	0);
	create_insn	(0X14A24);
	create_insn	(x=0X14A34);
	op_hex		(x,	1);
	create_insn	(x=0X14A36);
	op_hex		(x,	1);
	create_insn	(x=0X14A38);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A4B);
	op_hex		(x,	1);
	create_insn	(x=0X14A4D);
	op_hex		(x,	1);
	create_insn	(x=0X14A4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A52);
	op_stkvar	(x,	0);
	create_insn	(0X14A5B);
	create_insn	(0X14A65);
	create_insn	(x=0X14A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A71);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A77);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A81);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A8A);
	op_hex		(x,	1);
	create_insn	(x=0X14A8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A90);
	op_stkvar	(x,	0);
	create_insn	(x=0X14A98);
	op_hex		(x,	1);
	create_insn	(x=0X14A9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AB6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14AC4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14ACC);
	op_hex		(x,	1);
	create_insn	(x=0X14AD9);
	op_hex		(x,	1);
	create_insn	(x=0X14AE8);
	op_hex		(x,	1);
	create_insn	(x=0X14B03);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B09);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B16);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B24);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B36);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B3B);
	op_stkvar	(x,	1);
	create_insn	(0X14B4A);
	create_insn	(x=0X14B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B54);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B59);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B72);
	op_stkvar	(x,	0);
	create_insn	(x=0X14B8B);
	op_stkvar	(x,	1);
	make_array	(0X14BA6,	0X2);
	create_insn	(x=0X14BA8);
	op_stkvar	(x,	1);
	create_insn	(0X14BB6);
	create_insn	(x=0X14BC6);
	op_stkvar	(x,	0);
	create_insn	(0X14BCE);
	create_insn	(x=0X14BD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X14BD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X14BEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X14BFA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14BFE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C06);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C0F);
	op_hex		(x,	1);
	create_insn	(x=0X14C15);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C19);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C21);
	op_hex		(x,	1);
	create_insn	(x=0X14C28);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C2C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C30);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C34);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C3C);
	op_hex		(x,	1);
	create_insn	(0X14C49);
	create_insn	(x=0X14C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C4D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14C5F);
	op_hex		(x,	1);
	create_insn	(x=0X14C61);
	op_hex		(x,	1);
	create_insn	(x=0X14C67);
	op_stkvar	(x,	0);
	create_insn	(x=0X14C73);
	op_hex		(x,	1);
	create_insn	(x=0X14C75);
	op_hex		(x,	1);
	create_insn	(x=0X14C7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14C87);
	op_hex		(x,	1);
	create_insn	(x=0X14C89);
	op_hex		(x,	1);
	create_insn	(x=0X14C8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14CA7);
	op_hex		(x,	1);
	create_insn	(x=0X14CAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X14CAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X14CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CBD);
	op_hex		(x,	1);
	create_insn	(x=0X14CC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X14CC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CCE);
	op_hex		(x,	1);
	create_insn	(x=0X14CD1);
	op_hex		(x,	1);
	create_insn	(0X14CE1);
	create_insn	(x=0X14CE7);
	op_hex		(x,	1);
	create_insn	(x=0X14CE9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14CF9);
	op_hex		(x,	1);
	create_insn	(x=0X14CFB);
	op_hex		(x,	1);
	create_insn	(x=0X14D0D);
	op_hex		(x,	1);
	create_insn	(x=0X14D16);
	op_hex		(x,	1);
	create_insn	(x=0X14D21);
	op_hex		(x,	1);
	create_insn	(x=0X14D23);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14D33);
	op_hex		(x,	1);
	create_insn	(x=0X14D35);
	op_hex		(x,	1);
	create_insn	(x=0X14D47);
	op_hex		(x,	1);
	create_insn	(x=0X14D50);
	op_hex		(x,	1);
	create_insn	(x=0X14D63);
	op_hex		(x,	1);
	create_insn	(0X14D6C);
	set_name	(0X14D6C,	"mat_mul_vector2");
	create_insn	(x=0X14D6F);
	op_hex		(x,	1);
	create_insn	(x=0X14D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D77);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14D8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D91);
	op_stkvar	(x,	0);
	create_insn	(x=0X14D99);
	op_hex		(x,	1);
	create_insn	(0X14DA2);
	set_name	(0X14DA2,	"update_player_state");
	create_insn	(x=0X14DA5);
	op_hex		(x,	1);
	create_insn	(x=0X14DAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DAE);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DB0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DBA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DBD);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DC3);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DC6);
	create_insn	(x=0X14DD0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DD3);
	create_insn	(x=0X14DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DD9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DDC);
	create_insn	(x=0X14DE6);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DE9);
	create_insn	(x=0X14DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DEF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14DF8);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14E01);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14E0A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14E11);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14E14);
	op_hex		(x,	1);
	create_insn	(x=0X14E16);
	op_hex		(x,	1);
	create_insn	(x=0X14E18);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E1E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X14E2E,	E_PREV + 0,	"full grid length/4");
	set_cmt	(0X14E30,	"full trk grid length/2",	0);
	create_insn	(0X14E30);
	set_cmt	(0X14E37,	"11*128",	0);
	create_insn	(x=0X14E3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E43);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X14E4B,	E_PREV + 0,	"Returns speed2 * 11 * 128");
	update_extra_cmt		(0X14E52,	E_PREV + 0,	"Assuming 20fps, returns speed2 * 11 / 4");
	create_insn	(x=0X14E52);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E70);
	op_hex		(x,	1);
	create_insn	(x=0X14E74);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	update_extra_cmt		(0X14E77,	E_PREV + 0,	"mat_unk is a rotation matrix which");
	update_extra_cmt		(0X14E77,	E_PREV + 1,	"applies the rotation angles of the car.");
	update_extra_cmt		(0X14E77,	E_PREV + 2,	"Note all angles are supplied after a");
	update_extra_cmt		(0X14E77,	E_PREV + 3,	"neg, indicating the carstate variables");
	update_extra_cmt		(0X14E77,	E_PREV + 4,	"actually store the opposite of the");
	update_extra_cmt		(0X14E77,	E_PREV + 5,	"angles.");
	update_extra_cmt		(0X14E8F,	E_PREV + 0,	"\"Gravity\" acceleration is modeled through");
	update_extra_cmt		(0X14E8F,	E_PREV + 1,	"the negative of the y component of the");
	update_extra_cmt		(0X14E8F,	E_PREV + 2,	"(0,0,82h) vector after it is rotated.");
	create_insn	(x=0X14E8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14E95);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X14E9B,	E_PREV + 0,	"82h = 130");
	create_insn	(x=0X14E9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14EA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EA6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EB4);
	op_hex		(x,	1);
	create_insn	(x=0X14EB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EC0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EC9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14ECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14ED1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X14ED8);
	op_stkvar	(x,	0);
	create_insn	(x=0X14EE0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14EEF);
	op_hex		(x,	1);
	create_insn	(x=0X14EF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F04);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X14F09,	E_PREV + 0,	"The resulting vector here is normal to the car.");
	create_insn	(x=0X14F09);
	op_stkvar	(x,	0);
	set_cmt	(0X14F0F,	"30000",	0);
	create_insn	(x=0X14F0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F15);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F20);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F2E);
	op_hex		(x,	1);
	create_insn	(x=0X14F31);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F34);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14F3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F42);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14F49);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F55);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F5A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X14F5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F68);
	op_hex		(x,	1);
	create_insn	(x=0X14F6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F76);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F92);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F96);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X14F9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X14FA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FA9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X14FAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FB6);
	op_hex		(x,	1);
	create_insn	(x=0X14FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X14FC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FCB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X14FCD);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X14FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FD8);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X14FDB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X14FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FE6);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	update_extra_cmt		(0X14FE9,	E_NEXT + 0,	"Important to realize we have an add");
	update_extra_cmt		(0X14FE9,	E_NEXT + 1,	"here, not a replacement. This supports");
	update_extra_cmt		(0X14FE9,	E_NEXT + 2,	"the following interpretation: _1C0");
	update_extra_cmt		(0X14FE9,	E_NEXT + 3,	"contains the projected position at");
	update_extra_cmt		(0X14FE9,	E_NEXT + 4,	"the next timestep in global coordinates.");
	update_extra_cmt		(0X14FE9,	E_NEXT + 5,	"");
	create_insn	(x=0X14FE9);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	update_extra_cmt		(0X14FEC,	E_PREV + 0,	"Remember these are pointers, so");
	update_extra_cmt		(0X14FEC,	E_PREV + 1,	"the additions are dislocating");
	update_extra_cmt		(0X14FEC,	E_PREV + 2,	"the vectors. Expected, since we");
	update_extra_cmt		(0X14FEC,	E_PREV + 3,	"are changing wheels. :)");
	update_extra_cmt		(0X14FEC,	E_PREV + 4,	"Net result: _1C0 will have the");
	update_extra_cmt		(0X14FEC,	E_PREV + 5,	"global projected wheel coords");
	update_extra_cmt		(0X14FEC,	E_PREV + 6,	"and _146 will have the global");
	update_extra_cmt		(0X14FEC,	E_PREV + 7,	"wheel coordinates.");
	create_insn	(x=0X14FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X14FF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X14FF6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X14FFA,	E_PREV + 0,	"The loop is on the *left*.");
	update_extra_cmt		(0X14FFA,	E_PREV + 1,	"It runs over wheel indices.");
	create_insn	(x=0X14FFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X15004);
	op_stkvar	(x,	1);
	create_insn	(x=0X1500B);
	op_hex		(x,	1);
	set_cmt	(0X1500F,	"*6",	0);
	create_insn	(x=0X1500F);
	op_hex		(x,	1);
	create_insn	(x=0X15011);
	op_stkvar	(x,	1);
	create_insn	(x=0X15015);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X15019);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X15023,	E_PREV + 0,	"Wheel coordinates are now on _1C6 vector.");
	create_insn	(x=0X15023);
	op_stkvar	(x,	1);
	create_insn	(x=0X1502A);
	op_hex		(x,	1);
	create_insn	(x=0X1502C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1502F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X15032,	"384 = 24*16",	0);
	set_cmt	(0X15037,	"adjusting wheel heights?",	0);
	create_insn	(x=0X15037);
	op_stkvar	(x,	0);
	create_insn	(x=0X1503B);
	op_stkvar	(x,	0);
	create_insn	(x=0X15042);
	op_stkvar	(x,	1);
	create_insn	(x=0X15046);
	op_stkvar	(x,	0);
	create_insn	(x=0X1504A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15051);
	op_stkvar	(x,	1);
	create_insn	(x=0X15056);
	op_stkvar	(x,	1);
	create_insn	(x=0X1505B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15065);
	op_hex		(x,	1);
	create_insn	(x=0X15069);
	op_stkvar	(x,	1);
	create_insn	(x=0X1506D);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X15076,	E_NEXT + 0,	"Rotating wheel coordinates with");
	update_extra_cmt		(0X15076,	E_NEXT + 1,	"the \"AngleZ\" matrix.");
	create_insn	(x=0X15077);
	op_stkvar	(x,	1);
	create_insn	(x=0X1507C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X15080);
	op_stkvar	(x,	1);
	create_insn	(x=0X1508A);
	op_hex		(x,	1);
	create_insn	(x=0X1508D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1509A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1509E);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150A0);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X150B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X150B4);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150B7);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X150C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X150CB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150CE);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	update_extra_cmt		(0X150D1,	E_PREV + 0,	"Net result: wheels are rotated");
	update_extra_cmt		(0X150D1,	E_PREV + 1,	"with mat_unk (normal rotation");
	update_extra_cmt		(0X150D1,	E_PREV + 2,	"matrix, I'd call it) and the");
	update_extra_cmt		(0X150D1,	E_PREV + 3,	"new coordinates are added to");
	update_extra_cmt		(0X150D1,	E_PREV + 4,	"the car global coordinates and,");
	update_extra_cmt		(0X150D1,	E_PREV + 5,	"using the pointers, saved as a");
	update_extra_cmt		(0X150D1,	E_PREV + 6,	"double word vector starting at");
	update_extra_cmt		(0X150D1,	E_PREV + 7,	"_1C0. Phew!");
	create_insn	(x=0X150D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X150D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X150D9);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150DB);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150DE);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150E0);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X150E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X150EB);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150EE);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150F1);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150F4);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X150F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X150FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X150FF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15102);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15105);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15108);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	update_extra_cmt		(0X1510B,	E_PREV + 0,	"Indirect copy of _1C0 longvec");
	update_extra_cmt		(0X1510B,	E_PREV + 1,	"to _146.");
	create_insn	(x=0X1510B);
	op_stkvar	(x,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	update_extra_cmt		(0X15112,	E_PREV + 0,	"Does nothing if the");
	update_extra_cmt		(0X15112,	E_PREV + 1,	"car is stopped.");
	create_insn	(x=0X15115);
	op_stkvar	(x,	1);
	create_insn	(x=0X1511C);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X15126,	E_PREV + 0,	"If is a front wheel...");
	create_insn	(x=0X15126);
	op_stkvar	(x,	0);
	create_insn	(x=0X15130);
	op_stkvar	(x,	1);
	create_insn	(x=0X15133);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15136);
	op_stkvar	(x,	1);
	create_insn	(x=0X1513E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X15142,	E_PREV + 0,	"loop from 1 to 4.");
	create_insn	(x=0X15142);
	op_stkvar	(x,	0);
	create_insn	(x=0X15145);
	op_stkvar	(x,	0);
	create_insn	(x=0X1514B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1514E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15153);
	op_stkvar	(x,	1);
	create_insn	(x=0X15160);
	op_hex		(x,	1);
	set_cmt	(0X15163,	"grip data...",	0);
	create_insn	(x=0X15163);
	op_stkvar	(x,	1);
	create_insn	(x=0X15166);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1516D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15174);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1517B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X15182,	E_PREV + 0,	"All wheels on water...");
	create_insn	(x=0X15182);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1518C,	E_NEXT + 0,	"...to sound effect. Skidding??");
	create_insn	(x=0X1518F);
	op_hex		(x,	1);
	create_insn	(x=0X15192);
	op_stkvar	(x,	1);
	create_insn	(x=0X15196);
	op_stkvar	(x,	0);
	create_insn	(x=0X1519A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X151A2,	E_PREV + 0,	"Pointer re-setting...");
	create_insn	(x=0X151A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X151A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X151AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X151AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X151B2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X151BA,	E_PREV + 0,	"_1C6 contains \"future\" coordinates.");
	create_insn	(x=0X151BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X151C1);
	op_hex		(x,	1);
	create_insn	(x=0X151C5);
	op_hex		(x,	1);
	create_insn	(x=0X151C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X151CA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X151CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X151D8);
	op_hex		(x,	1);
	create_insn	(x=0X151DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X151E2);
	op_stkvar	(x,	1);
	set_cmt	(0X151E8,	"a CARSTATE field",	0);
	create_insn	(x=0X151E8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X151EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X151F0);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X151F2);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X151F7);
	op_hex		(x,	1);
	create_insn	(x=0X151F9);
	op_hex		(x,	1);
	create_insn	(x=0X151FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X15203);
	op_stkvar	(x,	1);
	create_insn	(x=0X15207);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1520A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1520F);
	op_hex		(x,	1);
	create_insn	(x=0X15211);
	op_hex		(x,	1);
	create_insn	(x=0X15217);
	op_stkvar	(x,	0);
	create_insn	(x=0X1521B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1521F);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15222);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15227);
	op_hex		(x,	1);
	create_insn	(x=0X15229);
	op_hex		(x,	1);
	create_insn	(x=0X1522F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1523A);
	op_stkvar	(x,	1);
	create_insn	(x=0X15240);
	op_stkvar	(x,	0);
	create_insn	(x=0X15244);
	op_stkvar	(x,	0);
	create_insn	(x=0X15248);
	op_stkvar	(x,	0);
	create_insn	(x=0X15254);
	op_hex		(x,	1);
	update_extra_cmt		(0X15257,	E_PREV + 0,	"Some wall procedure...");
	create_insn	(0X15264);
	create_insn	(0X15270);
	update_extra_cmt		(0X1527C,	E_PREV + 0,	"Vector _182 = whlWorld - wallStart");
	create_insn	(x=0X1527C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15283);
	op_hex		(x,	1);
	create_insn	(x=0X15287);
	op_hex		(x,	1);
	create_insn	(x=0X1528B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1528E);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15295);
	op_stkvar	(x,	0);
	create_insn	(x=0X15299);
	op_stkvar	(x,	0);
	create_insn	(x=0X1529F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X152A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X152AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X152AE);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X152B0);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X152B5);
	op_hex		(x,	1);
	create_insn	(x=0X152B7);
	op_hex		(x,	1);
	create_insn	(x=0X152C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X152C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X152CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X152CF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X152D2);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X152D7);
	op_hex		(x,	1);
	create_insn	(x=0X152D9);
	op_hex		(x,	1);
	create_insn	(x=0X152E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X152F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X152FA);
	op_hex		(x,	1);
	create_insn	(x=0X152FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X15301);
	op_stkvar	(x,	1);
	create_insn	(x=0X15306);
	op_stkvar	(x,	1);
	create_insn	(x=0X15310);
	op_hex		(x,	1);
	create_insn	(x=0X15313);
	op_stkvar	(x,	1);
	create_insn	(x=0X15317);
	op_stkvar	(x,	1);
	create_insn	(x=0X1531C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15326);
	op_hex		(x,	1);
	create_insn	(x=0X15329);
	op_stkvar	(x,	0);
	create_insn	(x=0X1532F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15338);
	op_stkvar	(x,	0);
	create_insn	(x=0X1533E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15347);
	op_stkvar	(x,	1);
	create_insn	(x=0X1534A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1534F,	E_PREV + 0,	"Vector swap :rolleyes:");
	create_insn	(x=0X1534F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15355);
	op_stkvar	(x,	1);
	create_insn	(x=0X15359);
	op_stkvar	(x,	1);
	create_insn	(x=0X15363);
	op_stkvar	(x,	1);
	create_insn	(x=0X15366);
	op_stkvar	(x,	1);
	create_insn	(x=0X1536E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15371);
	op_stkvar	(x,	1);
	create_insn	(x=0X1537C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15381);
	op_stkvar	(x,	0);
	create_insn	(x=0X15387);
	op_stkvar	(x,	1);
	create_insn	(x=0X1538B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1538F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15398);
	op_stkvar	(x,	0);
	create_insn	(x=0X1539E);
	op_stkvar	(x,	0);
	create_insn	(x=0X153A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X153A8);
	op_stkvar	(x,	0);
	create_insn	(0X153AE);
	create_insn	(x=0X153B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X153B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X153BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X153C3);
	op_hex		(x,	1);
	create_insn	(x=0X153C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X153C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X153D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X153D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X153D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X153DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X153E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X153E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X153EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X153EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X153F9);
	op_hex		(x,	1);
	update_extra_cmt		(0X153FC,	E_PREV + 0,	"Distance to the wall, maybe?");
	create_insn	(x=0X153FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X15400);
	op_stkvar	(x,	1);
	create_insn	(x=0X15404);
	op_stkvar	(x,	1);
	create_insn	(x=0X15408);
	op_stkvar	(x,	0);
	create_insn	(x=0X15415);
	op_hex		(x,	1);
	create_insn	(x=0X15418);
	op_stkvar	(x,	0);
	create_insn	(x=0X1541C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15420);
	op_stkvar	(x,	0);
	create_insn	(x=0X15424);
	op_stkvar	(x,	0);
	create_insn	(x=0X1542A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15432);
	op_stkvar	(x,	0);
	create_insn	(x=0X1543D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15441);
	op_stkvar	(x,	0);
	create_insn	(0X1544A);
	create_insn	(x=0X15450);
	op_hex		(x,	1);
	create_insn	(x=0X15453);
	op_stkvar	(x,	0);
	create_insn	(x=0X15457);
	op_stkvar	(x,	0);
	create_insn	(x=0X1545D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1546A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15471);
	op_stkvar	(x,	0);
	create_insn	(x=0X15486);
	op_hex		(x,	1);
	create_insn	(x=0X15489);
	op_stkvar	(x,	0);
	create_insn	(x=0X1548D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15491);
	op_stkvar	(x,	0);
	create_insn	(x=0X15495);
	op_stkvar	(x,	1);
	create_insn	(x=0X1549F);
	op_hex		(x,	1);
	create_insn	(x=0X154A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X154AD);
	op_hex		(x,	1);
	create_insn	(x=0X154B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X154C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X154DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X154E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X154E5);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X154EA);
	op_stkvar	(x,	0);
	create_insn	(0X154F8);
	create_insn	(x=0X154FA);
	op_hex		(x,	1);
	create_insn	(x=0X154FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X15500);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15503);
	op_stkvar	(x,	1);
	create_insn	(x=0X15510);
	op_hex		(x,	1);
	create_insn	(x=0X15513);
	op_stkvar	(x,	1);
	create_insn	(x=0X15516);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X1551B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1551F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15523);
	op_stkvar	(x,	1);
	create_insn	(x=0X15527);
	op_stkvar	(x,	0);
	create_insn	(x=0X15530);
	op_stkvar	(x,	0);
	create_insn	(x=0X15535);
	op_stkvar	(x,	0);
	create_insn	(x=0X1553A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1553F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15542);
	op_stkvar	(x,	1);
	create_insn	(x=0X15546);
	op_stkvar	(x,	1);
	create_insn	(x=0X1554A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1554C);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1554F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15553);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15555);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15558);
	op_stkvar	(x,	1);
	create_insn	(x=0X1555B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1555F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15563);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15566);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15569);
	op_stkvar	(x,	1);
	create_insn	(x=0X1556D);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15570);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15573);
	op_stkvar	(x,	1);
	create_insn	(x=0X15576);
	op_stkvar	(x,	1);
	create_insn	(x=0X1557A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1557E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15581);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15584);
	op_stkvar	(x,	1);
	create_insn	(x=0X15588);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1558B);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1558E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15593);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1559E,	E_PREV + 0,	"This cycles one of the main loops ");
	update_extra_cmt		(0X1559E,	E_PREV + 1,	"which, on exit, goes to the part");
	update_extra_cmt		(0X1559E,	E_PREV + 2,	"with the old \"grip data to sound\"");
	update_extra_cmt		(0X1559E,	E_PREV + 3,	"comments.");
	create_insn	(x=0X155A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X155A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X155AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X155B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X155BA);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155BC);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X155C3);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155C5);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X155D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X155E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X155E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X155EB);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155EE);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X155F5);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X155F8);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15609);
	op_stkvar	(x,	0);
	create_insn	(x=0X1560C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15613);
	op_stkvar	(x,	1);
	create_insn	(x=0X1561A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1561E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15621);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15624);
	op_stkvar	(x,	1);
	create_insn	(x=0X15628);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1562B);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1563C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15642);
	op_stkvar	(x,	1);
	create_insn	(x=0X15649);
	op_hex		(x,	1);
	create_insn	(x=0X1564B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1564E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X15652);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15655);
	op_stkvar	(x,	1);
	create_insn	(x=0X1565C);
	op_hex		(x,	1);
	create_insn	(x=0X1565E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15661);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15665);
	op_stkvar	(x,	1);
	create_insn	(x=0X15669);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1566C);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15676);
	op_stkvar	(x,	1);
	create_insn	(x=0X1567D);
	op_hex		(x,	1);
	create_insn	(x=0X1567F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15682);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X15686);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15689);
	op_stkvar	(x,	1);
	create_insn	(x=0X15690);
	op_hex		(x,	1);
	create_insn	(x=0X15692);
	op_stkvar	(x,	1);
	create_insn	(x=0X15695);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15699);
	op_stkvar	(x,	1);
	create_insn	(x=0X1569D);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X156A0);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X156A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X156A7);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X156AA);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X156AF);
	op_hex		(x,	1);
	create_insn	(x=0X156B1);
	op_hex		(x,	1);
	create_insn	(x=0X156B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X156C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X156C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X156D3);
	op_hex		(x,	1);
	create_insn	(x=0X156DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X156E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X156E8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X156ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X156F4);
	op_hex		(x,	1);
	create_insn	(x=0X156F9);
	op_stkvar	(x,	0);
	create_insn	(0X15703);
	create_insn	(0X1570A);
	create_insn	(x=0X15719);
	op_stkvar	(x,	0);
	create_insn	(x=0X1571C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1571F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15722);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X1572A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1572E);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X15736);
	op_stkvar	(x,	0);
	create_insn	(x=0X1573A);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X15742);
	op_stkvar	(x,	0);
	create_insn	(x=0X15746);
	op_stkvar	(x,	1);
	create_insn	(x=0X1574A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1574C);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15751);
	op_hex		(x,	1);
	create_insn	(x=0X15753);
	op_hex		(x,	1);
	create_insn	(x=0X15759);
	op_stkvar	(x,	1);
	create_insn	(x=0X1575D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15761);
	op_stkvar	(x,	1);
	create_insn	(x=0X15765);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15768);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1576D);
	op_hex		(x,	1);
	create_insn	(x=0X1576F);
	op_hex		(x,	1);
	create_insn	(x=0X15775);
	op_stkvar	(x,	1);
	create_insn	(x=0X15779);
	op_stkvar	(x,	0);
	create_insn	(x=0X1577D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15781);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15784);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15789);
	op_hex		(x,	1);
	create_insn	(x=0X1578B);
	op_hex		(x,	1);
	create_insn	(x=0X15791);
	op_stkvar	(x,	1);
	create_insn	(x=0X15795);
	op_stkvar	(x,	0);
	create_insn	(x=0X15799);
	op_stkvar	(x,	1);
	create_insn	(x=0X1579D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1579F);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X157A4);
	op_hex		(x,	1);
	create_insn	(x=0X157A6);
	op_hex		(x,	1);
	create_insn	(x=0X157AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X157B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X157B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X157B8);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X157BB);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X157C0);
	op_hex		(x,	1);
	create_insn	(x=0X157C2);
	op_hex		(x,	1);
	create_insn	(x=0X157C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X157CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X157D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X157D4);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X157D7);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X157DC);
	op_hex		(x,	1);
	create_insn	(x=0X157DE);
	op_hex		(x,	1);
	create_insn	(x=0X157E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X157E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X157EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X157EF);
	op_stkvar	(x,	1);
	set_cmt	(0X157F2,	"plane rotation matrix",	0);
	create_insn	(x=0X157F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15808);
	op_stkvar	(x,	1);
	create_insn	(x=0X1580D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15817);
	op_hex		(x,	1);
	create_insn	(x=0X1581A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1581E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15823);
	op_stkvar	(x,	1);
	create_insn	(x=0X1582D);
	op_hex		(x,	1);
	create_insn	(x=0X15830);
	op_stkvar	(x,	1);
	create_insn	(x=0X15834);
	op_stkvar	(x,	1);
	create_insn	(x=0X15839);
	op_stkvar	(x,	1);
	create_insn	(x=0X15843);
	op_hex		(x,	1);
	create_insn	(x=0X15846);
	op_stkvar	(x,	0);
	create_insn	(x=0X15852);
	op_stkvar	(x,	0);
	create_insn	(x=0X15858);
	op_stkvar	(x,	0);
	create_insn	(x=0X1585E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15864);
	op_stkvar	(x,	1);
	create_insn	(x=0X15871);
	op_hex		(x,	1);
	create_insn	(x=0X15874);
	op_stkvar	(x,	0);
	create_insn	(x=0X15879);
	op_stkvar	(x,	0);
	create_insn	(0X15882);
	create_insn	(x=0X1589A);
	op_stkvar	(x,	1);
	create_insn	(x=0X158A1);
	op_hex		(x,	1);
	create_insn	(x=0X158A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X158B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X158B6);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158B8);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X158C3);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158C6);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X158D1);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158D4);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(0X158DA);
	create_insn	(x=0X158F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X158F7);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158F9);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X158FE);
	op_hex		(x,	1);
	create_insn	(x=0X15900);
	op_hex		(x,	1);
	create_insn	(x=0X15906);
	op_stkvar	(x,	0);
	create_insn	(x=0X1590A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1590E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15911);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15916);
	op_hex		(x,	1);
	create_insn	(x=0X15918);
	op_hex		(x,	1);
	create_insn	(x=0X1591E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15922);
	op_stkvar	(x,	1);
	create_insn	(x=0X15926);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15929);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1592E);
	op_hex		(x,	1);
	create_insn	(x=0X15930);
	op_hex		(x,	1);
	create_insn	(x=0X15936);
	op_stkvar	(x,	0);
	create_insn	(x=0X1593B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1593F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1594A);
	op_hex		(x,	1);
	create_insn	(x=0X1595A);
	op_stkvar	(x,	0);
	create_insn	(0X15964);
	create_insn	(x=0X1596E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15973);
	op_stkvar	(x,	1);
	create_insn	(x=0X15977);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15979);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1597C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15981);
	op_stkvar	(x,	1);
	create_insn	(x=0X15985);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15988);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1598B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15990);
	op_stkvar	(x,	1);
	create_insn	(x=0X15994);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15997);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X1599E);
	op_stkvar	(x,	0);
	create_insn	(x=0X159A4);
	op_stkvar	(x,	0);
	create_insn	(0X159AD);
	create_insn	(x=0X159B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X159C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X159CD);
	op_hex		(x,	1);
	create_insn	(x=0X159CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X159DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X159E2);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X159E4);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X159EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X159EF);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X159F1);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X159F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X159FC);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X159FF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A0A);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A0D);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A18);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A1B);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A22);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A26);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A29);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A33);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A37);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A43);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A46);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A49);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A52);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A55);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A59);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A71);
	op_hex		(x,	1);
	create_insn	(x=0X15A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A77);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A83);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A99);
	op_stkvar	(x,	0);
	create_insn	(x=0X15A9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AA7);
	op_hex		(x,	1);
	create_insn	(x=0X15AAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X15AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AB5);
	op_hex		(x,	1);
	create_insn	(x=0X15AB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ABA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15ABD);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X15AC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X15ACD);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ADB);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ADF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15AE1);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AE8);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15AEA);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15AFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X15AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B05);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B10);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B13);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B16);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B1A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B1D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15B31);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B43);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B46);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B49);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B4D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B50);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B61);
	op_stkvar	(x,	0);
	create_insn	(x=0X15B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B8C);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B8E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15B93);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BAB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BAD);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BB4);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BB7);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BD4);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BD7);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BDE);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BE1);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BFE);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C01);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C08);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C0A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C0F);
	op_hex		(x,	1);
	create_insn	(x=0X15C11);
	op_hex		(x,	1);
	create_insn	(x=0X15C17);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C1F);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C22);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C27);
	op_hex		(x,	1);
	create_insn	(x=0X15C29);
	op_hex		(x,	1);
	create_insn	(x=0X15C2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C33);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C37);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C3A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15C3F);
	op_hex		(x,	1);
	create_insn	(x=0X15C41);
	op_hex		(x,	1);
	create_insn	(x=0X15C47);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C50);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C5C);
	op_hex		(x,	1);
	create_insn	(x=0X15C66);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C75);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X15C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CB0);
	op_hex		(x,	1);
	create_insn	(x=0X15CB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CBC);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CBE);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CCA);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CCD);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CD9);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CDC);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15CDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CE6);
	op_hex		(x,	1);
	create_insn	(x=0X15CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CEB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15CF2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X15CF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CFE);
	op_hex		(x,	1);
	create_insn	(x=0X15D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D03);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D17);
	op_hex		(x,	1);
	create_insn	(x=0X15D1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D21);
	op_hex		(x,	1);
	create_insn	(x=0X15D23);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D26);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15D2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X15D30);
	op_stkvar	(x,	0);
	create_insn	(x=0X15D35);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X15D39,	E_PREV + 0,	"Another loop on wheels?");
	create_insn	(x=0X15D39);
	op_stkvar	(x,	0);
	create_insn	(x=0X15D43);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D47);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D49);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D4E);
	op_hex		(x,	1);
	create_insn	(x=0X15D50);
	op_hex		(x,	1);
	create_insn	(x=0X15D56);
	op_stkvar	(x,	0);
	create_insn	(x=0X15D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D5E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D61);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D66);
	op_hex		(x,	1);
	create_insn	(x=0X15D68);
	op_hex		(x,	1);
	create_insn	(x=0X15D6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X15D72);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D76);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D79);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15D7E);
	op_hex		(x,	1);
	create_insn	(x=0X15D80);
	op_hex		(x,	1);
	update_extra_cmt		(0X15D84,	E_NEXT + 0,	"Net result: dividing");
	update_extra_cmt		(0X15D84,	E_NEXT + 1,	"_1C0 by 2^6 to make");
	update_extra_cmt		(0X15D84,	E_NEXT + 2,	"a word vector and");
	update_extra_cmt		(0X15D84,	E_NEXT + 3,	"storing it at _1C6");
	create_insn	(x=0X15D86);
	op_stkvar	(x,	0);
	create_insn	(0X15D94);
	create_insn	(x=0X15D9A);
	op_enum		(x,	1,	GetEnum("enum_surface_type"),0);
	create_insn	(x=0X15DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DC2);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15DC5);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15DC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X15DCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X15DD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X15DDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DDF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15DE1);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15DE6);
	op_hex		(x,	1);
	create_insn	(x=0X15DE8);
	op_hex		(x,	1);
	create_insn	(x=0X15DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DF7);
	op_hex		(x,	1);
	create_insn	(x=0X15DFB);
	op_hex		(x,	1);
	create_insn	(x=0X15DFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E00);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15E03);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E07);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15E0A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15E0F);
	op_hex		(x,	1);
	create_insn	(x=0X15E11);
	op_hex		(x,	1);
	create_insn	(x=0X15E19);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E20);
	op_hex		(x,	1);
	create_insn	(x=0X15E24);
	op_hex		(x,	1);
	create_insn	(x=0X15E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E29);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E30);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15E33);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15E38);
	op_hex		(x,	1);
	create_insn	(x=0X15E3A);
	op_hex		(x,	1);
	create_insn	(x=0X15E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E49);
	op_hex		(x,	1);
	create_insn	(x=0X15E4D);
	op_hex		(x,	1);
	create_insn	(x=0X15E4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E52);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X15E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E5F);
	op_hex		(x,	1);
	set_cmt	(0X15E63,	"var_(16-2*wheelIndex)",	0);
	create_insn	(x=0X15E63);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E66);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E6D);
	op_hex		(x,	1);
	create_insn	(x=0X15E70);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E85);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E91);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E98);
	op_stkvar	(x,	0);
	create_insn	(x=0X15E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EA1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X15EA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EAF);
	op_hex		(x,	1);
	create_insn	(x=0X15EB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EBB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15EBD);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EC9);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15ECC);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15ECF);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ED8);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15EDB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F04);
	op_hex		(x,	1);
	create_insn	(x=0X15F06);
	op_hex		(x,	1);
	update_extra_cmt		(0X15F0C,	E_PREV + 0,	"Average wheel positions are");
	update_extra_cmt		(0X15F0C,	E_PREV + 1,	"used to update global coords.");
	create_insn	(x=0X15F13);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F17);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F23);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F27);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F35);
	op_hex		(x,	1);
	create_insn	(x=0X15F37);
	op_hex		(x,	1);
	create_insn	(x=0X15F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F66);
	op_hex		(x,	1);
	create_insn	(x=0X15F68);
	op_hex		(x,	1);
	update_extra_cmt		(0X15F75,	E_PREV + 0,	"Pointer reset");
	create_insn	(x=0X15F75);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F79);
	op_stkvar	(x,	0);
	create_insn	(x=0X15F7D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X15F82,	E_PREV + 0,	"Here starts a long branch");
	update_extra_cmt		(0X15F82,	E_PREV + 1,	"in which the rotational");
	update_extra_cmt		(0X15F82,	E_PREV + 2,	"coordinates will be updated");
	update_extra_cmt		(0X15F82,	E_PREV + 3,	"according to the wheel");
	update_extra_cmt		(0X15F82,	E_PREV + 4,	"positions.");
	create_insn	(x=0X15F82);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F89);
	op_hex		(x,	1);
	create_insn	(x=0X15F8D);
	op_hex		(x,	1);
	create_insn	(x=0X15F93);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F97);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15F9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X15FA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FA5);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15FAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X15FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FB4);
	op_stroff	(x,	1,	GetStrucIdByName("VECTORLONG"),	0);
	create_insn	(x=0X15FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X15FBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X15FC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X15FC8);
	op_stkvar	(x,	0);
	create_insn	(0X15FFE);
	create_insn	(0X1603A);
	create_insn	(x=0X16057);
	op_stkvar	(x,	1);
	create_insn	(x=0X1605B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1605F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16063);
	op_stkvar	(x,	1);
	create_insn	(x=0X16067);
	op_stkvar	(x,	0);
	create_insn	(x=0X1606B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1606F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16073);
	op_stkvar	(x,	1);
	create_insn	(x=0X16077);
	op_stkvar	(x,	1);
	create_insn	(x=0X1607B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16082);
	op_stkvar	(x,	0);
	create_insn	(x=0X1608B);
	op_hex		(x,	1);
	create_insn	(x=0X1608E);
	op_hex		(x,	1);
	create_insn	(x=0X16095);
	op_stkvar	(x,	1);
	create_insn	(x=0X1609F);
	op_hex		(x,	1);
	create_insn	(x=0X160A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X160A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X160AE);
	op_hex		(x,	1);
	create_insn	(x=0X160B2);
	op_hex		(x,	1);
	create_insn	(x=0X160C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X160CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X160D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X160DB);
	op_hex		(x,	1);
	create_insn	(x=0X160DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X160E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X160E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X160ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X160F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X160F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X160F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X160FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X16101);
	op_stkvar	(x,	1);
	create_insn	(x=0X16105);
	op_stkvar	(x,	1);
	create_insn	(x=0X16109);
	op_stkvar	(x,	1);
	create_insn	(x=0X1610D);
	op_stkvar	(x,	0);
	create_insn	(x=0X16115);
	op_stkvar	(x,	0);
	create_insn	(x=0X1611C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16120);
	op_stkvar	(x,	1);
	create_insn	(x=0X1612C);
	op_hex		(x,	1);
	create_insn	(0X1613E);
	create_insn	(x=0X16157);
	op_stkvar	(x,	1);
	create_insn	(x=0X16161);
	op_hex		(x,	1);
	create_insn	(x=0X16164);
	op_stkvar	(x,	0);
	create_insn	(x=0X16169);
	op_stkvar	(x,	1);
	create_insn	(x=0X16170);
	op_hex		(x,	1);
	create_insn	(x=0X16174);
	op_hex		(x,	1);
	create_insn	(x=0X16182);
	op_stkvar	(x,	1);
	create_insn	(x=0X1618E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16193);
	op_stkvar	(x,	1);
	create_insn	(x=0X1619D);
	op_hex		(x,	1);
	create_insn	(x=0X161A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X161A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X161AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X161AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X161B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X161B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X161BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X161BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X161C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X161C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X161CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X161CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X161D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X161DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X161E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X161EB);
	op_hex		(x,	1);
	create_insn	(0X161FC);
	update_extra_cmt		(0X1620A,	E_PREV + 0,	"Combined axle surface indices.");
	create_insn	(x=0X1620A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1620F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16213);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16217);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1621B);
	op_stkvar	(x,	1);
	create_insn	(x=0X16220);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16224);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16228);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X16236);
	create_insn	(x=0X1623D);
	op_stkvar	(x,	0);
	create_insn	(0X1624A);
	create_insn	(x=0X1624E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16251);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1625C);
	op_hex		(x,	1);
	create_insn	(x=0X16279);
	op_hex		(x,	1);
	create_insn	(x=0X1627C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16280);
	op_stkvar	(x,	0);
	create_insn	(0X16288);
	create_insn	(x=0X1628B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1628E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16295);
	op_hex		(x,	1);
	create_insn	(x=0X16299);
	op_hex		(x,	1);
	create_insn	(x=0X1629B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1629F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X162A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X162AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X162B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X162BC);
	op_hex		(x,	1);
	create_insn	(x=0X162C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X162C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X162CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X162CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X162D8);
	op_hex		(x,	1);
	create_insn	(x=0X162DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X162F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X162F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X16306);
	op_hex		(x,	1);
	create_insn	(x=0X16309);
	op_stkvar	(x,	1);
	create_insn	(x=0X16310);
	op_hex		(x,	1);
	create_insn	(x=0X16314);
	op_hex		(x,	1);
	create_insn	(x=0X16316);
	op_stkvar	(x,	1);
	create_insn	(x=0X1631A);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1631E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16328);
	op_stkvar	(x,	0);
	create_insn	(x=0X1632C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16336);
	op_stkvar	(x,	1);
	create_insn	(x=0X1633D);
	op_hex		(x,	1);
	create_insn	(x=0X16341);
	op_hex		(x,	1);
	create_insn	(x=0X16343);
	op_stkvar	(x,	1);
	create_insn	(x=0X16347);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X1634B);
	op_stkvar	(x,	1);
	create_insn	(x=0X16355);
	op_stkvar	(x,	1);
	create_insn	(x=0X16358);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X16360);
	op_stkvar	(x,	0);
	create_insn	(x=0X16364);
	op_stkvar	(x,	1);
	create_insn	(x=0X16369);
	op_stkvar	(x,	0);
	create_insn	(x=0X1636D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16377);
	op_hex		(x,	1);
	create_insn	(x=0X1637A);
	op_stkvar	(x,	1);
	create_insn	(x=0X16389);
	op_hex		(x,	1);
	create_insn	(x=0X1638B);
	op_hex		(x,	1);
	create_insn	(x=0X16391);
	op_stkvar	(x,	0);
	create_insn	(x=0X16395);
	op_stkvar	(x,	1);
	create_insn	(x=0X163A4);
	op_hex		(x,	1);
	create_insn	(x=0X163A6);
	op_hex		(x,	1);
	create_insn	(x=0X163AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X163B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X163BF);
	op_hex		(x,	1);
	create_insn	(x=0X163C1);
	op_hex		(x,	1);
	create_insn	(x=0X163C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X163CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X163D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X163DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X163E1);
	op_hex		(x,	1);
	create_insn	(x=0X163E5);
	op_hex		(x,	1);
	create_insn	(x=0X163E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X163EA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X163EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X163F8);
	op_hex		(x,	1);
	create_insn	(x=0X163FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X163FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X16403);
	op_stkvar	(x,	0);
	create_insn	(x=0X1640F);
	op_hex		(x,	1);
	create_insn	(0X1641E);
	create_insn	(0X16425);
	create_insn	(x=0X16428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1642B);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1642F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16433);
	op_stkvar	(x,	0);
	create_insn	(x=0X16437);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1643D,	E_PREV + 0,	"If al = 0 no wheels are");
	update_extra_cmt		(0X1643D,	E_PREV + 1,	"on the ground.");
	update_extra_cmt		(0X16441,	E_PREV + 0,	"If the car is jumping do not count");
	update_extra_cmt		(0X16441,	E_PREV + 1,	"as another jump.");
	create_insn	(x=0X16441);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X16448,	E_PREV + 0,	"jumpCount increased...");
	create_insn	(x=0X1644C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16450);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1645D);
	op_hex		(x,	1);
	create_insn	(x=0X1645F);
	op_hex		(x,	1);
	create_insn	(x=0X16465);
	op_stkvar	(x,	0);
	create_insn	(x=0X16472);
	op_hex		(x,	1);
	create_insn	(x=0X16474);
	op_hex		(x,	1);
	create_insn	(x=0X1647A);
	op_stkvar	(x,	0);
	create_insn	(x=0X16487);
	op_hex		(x,	1);
	create_insn	(x=0X16489);
	op_hex		(x,	1);
	create_insn	(x=0X1648F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16496);
	op_stkvar	(x,	0);
	create_insn	(x=0X1649D);
	op_stkvar	(x,	0);
	create_insn	(x=0X164A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X164B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X164B5);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X164B7);
	create_insn	(x=0X164BC);
	op_hex		(x,	1);
	create_insn	(x=0X164BE);
	op_hex		(x,	1);
	create_insn	(x=0X164C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X164C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X164CB);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X164CE);
	create_insn	(x=0X164D3);
	op_hex		(x,	1);
	create_insn	(x=0X164D5);
	op_hex		(x,	1);
	create_insn	(x=0X164DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X164DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X164E2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X164E5);
	create_insn	(x=0X164EA);
	op_hex		(x,	1);
	create_insn	(x=0X164EC);
	op_hex		(x,	1);
	create_insn	(x=0X164F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X164F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X164F9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X164FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X16500);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16503);
	op_stkvar	(x,	0);
	create_insn	(x=0X16507);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1650A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1650E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16513);
	op_stkvar	(x,	1);
	create_insn	(x=0X16516);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X1651A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1651F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16522);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	update_extra_cmt		(0X1652A,	E_NEXT + 0,	"It seems the function returns zero if there");
	update_extra_cmt		(0X1652A,	E_NEXT + 1,	"is no collision...");
	create_insn	(x=0X1652A);
	op_hex		(x,	1);
	create_insn	(x=0X16531);
	op_stkvar	(x,	1);
	create_insn	(x=0X16534);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X1653E,	E_PREV + 0,	"This is called when cars make contact.");
	create_insn	(x=0X1653E);
	op_stkvar	(x,	0);
	create_insn	(x=0X16546);
	op_hex		(x,	1);
	create_insn	(x=0X16550);
	op_stkvar	(x,	1);
	create_insn	(x=0X1655D);
	op_hex		(x,	1);
	create_insn	(x=0X16560);
	op_stkvar	(x,	1);
	create_insn	(x=0X16564);
	op_hex		(x,	1);
	create_insn	(x=0X1656F);
	op_hex		(x,	1);
	create_insn	(x=0X16578);
	op_stkvar	(x,	1);
	create_insn	(x=0X16580);
	op_stkvar	(x,	0);
	create_insn	(x=0X16584);
	op_stkvar	(x,	1);
	set_cmt	(0X16588,	"/2^10 : scale to tile index.",	0);
	create_insn	(x=0X1658F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16593);
	op_stkvar	(x,	0);
	create_insn	(x=0X16599);
	op_stkvar	(x,	0);
	create_insn	(x=0X1659F);
	op_stkvar	(x,	0);
	create_insn	(x=0X165A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X165AF);
	op_stkvar	(x,	0);
	create_insn	(0X165B9);
	create_insn	(0X165C0);
	create_insn	(x=0X165C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X165CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X165D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X165DA);
	op_hex		(x,	1);
	create_insn	(x=0X165DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X165EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X165F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X165FE);
	op_hex		(x,	1);
	create_insn	(x=0X16602);
	op_hex		(x,	1);
	create_insn	(x=0X1660C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16614);
	op_stkvar	(x,	0);
	create_insn	(x=0X1661C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16620);
	op_stkvar	(x,	1);
	create_insn	(x=0X16625);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16629);
	op_stkvar	(x,	1);
	create_insn	(x=0X1662E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16631);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X16639);
	op_hex		(x,	1);
	create_insn	(x=0X16640);
	op_stkvar	(x,	1);
	create_insn	(x=0X16643);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16648);
	op_stkvar	(x,	1);
	create_insn	(x=0X16650);
	op_stkvar	(x,	1);
	create_insn	(x=0X16654);
	op_hex		(x,	1);
	create_insn	(x=0X16656);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1665A);
	op_stkvar	(x,	1);
	create_insn	(x=0X16670);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X1667A);
	create_insn	(x=0X1667C);
	op_hex		(x,	1);
	create_insn	(x=0X16680);
	op_hex		(x,	1);
	create_insn	(x=0X16689);
	op_stkvar	(x,	0);
	create_insn	(x=0X16691);
	op_hex		(x,	1);
	create_insn	(x=0X16695);
	op_hex		(x,	1);
	create_insn	(x=0X1669F);
	op_stkvar	(x,	0);
	create_insn	(x=0X166A7);
	op_hex		(x,	1);
	create_insn	(x=0X166AB);
	op_hex		(x,	1);
	create_insn	(x=0X166B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X166B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X166BA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X166BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X166C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X166C6);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X166CE);
	op_hex		(x,	1);
	create_insn	(x=0X166D5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X166DA,	"15360 = track grid length / 2",	0);
	set_cmt	(0X166E0,	"1408",	0);
	create_insn	(x=0X166E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X166EC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X166F6,	"*11/120",	0);
	update_extra_cmt		(0X166FB,	E_PREV + 0,	"11/120 converts from the \"internal\" carstate units");
	update_extra_cmt		(0X166FB,	E_PREV + 1,	"to tiles per timestep (0.05s).");
	create_insn	(x=0X166FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X166FF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1670D);
	op_hex		(x,	1);
	create_insn	(x=0X16716);
	op_stkvar	(x,	0);
	create_insn	(0X1671F);
	create_insn	(x=0X16723);
	op_stkvar	(x,	0);
	create_insn	(0X1672C);
	create_insn	(x=0X1673C);
	op_hex		(x,	1);
	create_insn	(x=0X16745);
	op_hex		(x,	1);
	create_insn	(x=0X1674A);
	op_hex		(x,	1);
	create_insn	(x=0X1674C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16752);
	op_stkvar	(x,	0);
	create_insn	(x=0X1675C);
	op_hex		(x,	1);
	create_insn	(x=0X1675E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16762);
	op_stkvar	(x,	0);
	create_insn	(x=0X16776);
	op_hex		(x,	1);
	create_insn	(x=0X1677F);
	op_hex		(x,	1);
	create_insn	(x=0X1678A);
	op_hex		(x,	1);
	create_insn	(x=0X1678C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16790);
	op_stkvar	(x,	0);
	create_insn	(x=0X16794);
	op_stkvar	(x,	1);
	create_insn	(x=0X16799);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1679D);
	op_stkvar	(x,	1);
	create_insn	(x=0X167A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X167A5);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X167AD);
	op_hex		(x,	1);
	create_insn	(x=0X167B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X167C9);
	op_hex		(x,	1);
	create_insn	(x=0X167D2);
	op_hex		(x,	1);
	create_insn	(x=0X167DD);
	op_hex		(x,	1);
	create_insn	(x=0X167DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X167E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X167F7);
	op_hex		(x,	1);
	create_insn	(x=0X16800);
	op_hex		(x,	1);
	create_insn	(x=0X1680B);
	op_hex		(x,	1);
	create_insn	(x=0X1680D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16811);
	op_stkvar	(x,	0);
	create_insn	(x=0X16815);
	op_stkvar	(x,	1);
	create_insn	(x=0X1681A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1681E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16823);
	op_stkvar	(x,	1);
	create_insn	(x=0X16826);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X1682E);
	op_hex		(x,	1);
	create_insn	(x=0X16832);
	op_stkvar	(x,	0);
	create_insn	(x=0X16836);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X16840,	E_PREV + 0,	"Storing the position updates.");
	create_insn	(x=0X16840);
	op_stkvar	(x,	1);
	create_insn	(x=0X1684A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1684C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1684F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16859);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1685C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1685F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16869);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1686C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1686F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16875);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16878);
	op_stkvar	(x,	1);
	create_insn	(x=0X1687E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16881);
	op_stkvar	(x,	1);
	create_insn	(x=0X16887);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1688A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1688D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X16898);
	set_name	(0X16898,	"init_carstate_from_simd");
	create_insn	(x=0X1689B);
	op_hex		(x,	1);
	create_insn	(x=0X168A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X168A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X168A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X168AB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168AD);
	create_insn	(x=0X168B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X168B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X168B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X168B9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168BC);
	create_insn	(x=0X168BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X168C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X168C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X168CD);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168D0);
	create_insn	(x=0X168D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X168D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X168D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X168DC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168DF);
	create_insn	(x=0X168E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X168E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X168E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X168EB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168EE);
	create_insn	(x=0X168F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X168F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X168F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X168FA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X168FD);
	create_insn	(x=0X16900);
	op_stkvar	(x,	1);
	create_insn	(x=0X16903);
	op_stkvar	(x,	1);
	create_insn	(x=0X16906);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16909);
	op_stkvar	(x,	1);
	create_insn	(x=0X1690C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1690F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16912);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16915);
	op_stkvar	(x,	1);
	create_insn	(x=0X16918);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1691B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1691E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16921);
	op_stkvar	(x,	1);
	create_insn	(x=0X16924);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16927);
	op_stkvar	(x,	1);
	create_insn	(x=0X1692C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16930);
	op_stkvar	(x,	1);
	create_insn	(x=0X16933);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16937);
	op_stkvar	(x,	1);
	create_insn	(x=0X1693A);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X1693D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16940);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16943);
	op_stkvar	(x,	1);
	create_insn	(x=0X16946);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16949);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1694C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1694F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16952);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16955);
	op_stkvar	(x,	1);
	create_insn	(x=0X16958);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1695D);
	op_stkvar	(x,	1);
	create_insn	(x=0X16960);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16963);
	op_stkvar	(x,	1);
	create_insn	(x=0X16966);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16969);
	op_stkvar	(x,	1);
	create_insn	(x=0X1696C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1696F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16972);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16975);
	op_stkvar	(x,	1);
	create_insn	(x=0X16978);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X1697B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1697E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16981);
	op_stkvar	(x,	1);
	create_insn	(x=0X16984);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1698B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1698E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16991);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X16994);
	op_stkvar	(x,	1);
	create_insn	(x=0X16997);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1699A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1699D);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169A0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X169A6);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X169A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X169AC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X169B2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169B5);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X169BB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X169C1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X169C7);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X169CD);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X169D3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X169D9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X169E1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X169E9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X169F1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X169F7);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X169FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X169FF);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X16A04,	E_PREV + 0,	"Undoing the 6x shl double");
	update_extra_cmt		(0X16A04,	E_PREV + 1,	"conversion done on setting");
	update_extra_cmt		(0X16A04,	E_PREV + 2,	"the arguments...");
	create_insn	(x=0X16A04);
	op_hex		(x,	1);
	create_insn	(x=0X16A06);
	op_hex		(x,	1);
	create_insn	(x=0X16A0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A17);
	op_hex		(x,	1);
	create_insn	(x=0X16A19);
	op_hex		(x,	1);
	create_insn	(x=0X16A1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A22);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A25);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A2A);
	op_hex		(x,	1);
	create_insn	(x=0X16A2C);
	op_hex		(x,	1);
	create_insn	(x=0X16A32);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A37);
	op_stkvar	(x,	1);
	set_cmt	(0X16A3A,	"initial surface = tarmac",	0);
	create_insn	(x=0X16A3A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A41);
	op_hex		(x,	1);
	create_insn	(x=0X16A43);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A46);
	op_stkvar	(x,	1);
	set_cmt	(0X16A4B,	".rc1",	0);
	create_insn	(x=0X16A4B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A51);
	op_stkvar	(x,	1);
	set_cmt	(0X16A54,	"rc2",	0);
	create_insn	(x=0X16A54);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A57);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A5A);
	op_stkvar	(x,	1);
	set_cmt	(0X16A5D,	"rc3",	0);
	create_insn	(x=0X16A5D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A63);
	op_stkvar	(x,	1);
	set_cmt	(0X16A66,	"rc4",	0);
	create_insn	(x=0X16A66);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A69);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A6C);
	op_stkvar	(x,	1);
	set_cmt	(0X16A6F,	"rc5",	0);
	create_insn	(x=0X16A6F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A76);
	op_hex		(x,	1);
	set_cmt	(0X16A7A,	"*6",	0);
	create_insn	(x=0X16A7A);
	op_hex		(x,	1);
	create_insn	(x=0X16A7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X16A7F);
	op_stkvar	(x,	1);
	set_cmt	(0X16A86,	"ax is added into the offset",	0);
	create_insn	(x=0X16A86);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16A89);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A9B);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X16A9F,	"moves x, y and z.",	0);
	create_insn	(x=0X16A9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AB2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AB9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16ABD);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AC0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AC7);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16ACB);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ACE);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AD5);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ADF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AE8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AEF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X16AF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AF6);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X16B02);
	set_name	(0X16B02,	"init_game_state");
	create_insn	(x=0X16B05);
	op_hex		(x,	1);
	create_insn	(x=0X16B0C);
	op_stkvar	(x,	0);
	set_cmt	(0X16B18,	"sizeof(struct GAMESTATE)",	1);
	create_insn	(x=0X16B18);
	op_dec		(x,	1);
	create_insn	(x=0X16B28);
	op_stroff	(x,	1,	GetStrucIdByName("GAMESTATE"),	0);
	create_insn	(x=0X16B48);
	op_dec		(x,	1);
	create_insn	(x=0X16B4D);
	op_dec		(x,	1);
	create_insn	(x=0X16B54);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16B5C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16B62);
	op_dec		(x,	1);
	create_insn	(x=0X16B6C);
	op_dec		(x,	1);
	create_insn	(x=0X16B79);
	op_stkvar	(x,	0);
	create_insn	(0X16B82);
	create_insn	(0X16BAC);
	create_insn	(x=0X16BAE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X16BB3);
	op_dec		(x,	1);
	create_insn	(0X16BBC);
	create_insn	(x=0X16BBE);
	op_hex		(x,	1);
	create_insn	(x=0X16BC0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X16BC5);
	op_dec		(x,	1);
	create_insn	(x=0X16BDA);
	op_hex		(x,	1);
	create_insn	(x=0X16BE3);
	op_hex		(x,	1);
	create_insn	(x=0X16BF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X16BFA);
	op_hex		(x,	1);
	create_insn	(x=0X16C03);
	op_hex		(x,	1);
	create_insn	(x=0X16C06);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C21);
	op_hex		(x,	1);
	create_insn	(x=0X16C23);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C3D);
	op_hex		(x,	1);
	create_insn	(x=0X16C46);
	op_hex		(x,	1);
	create_insn	(x=0X16C55);
	op_stkvar	(x,	0);
	create_insn	(x=0X16C5D);
	op_hex		(x,	1);
	create_insn	(x=0X16C66);
	op_hex		(x,	1);
	create_insn	(x=0X16C71);
	op_hex		(x,	1);
	create_insn	(x=0X16C73);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C77);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C80);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C83);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C8F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C92);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C9C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16C9F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16CE3);
	op_hex		(x,	1);
	create_insn	(x=0X16CEC);
	op_hex		(x,	1);
	create_insn	(x=0X16CFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D03);
	op_hex		(x,	1);
	create_insn	(x=0X16D0C);
	op_hex		(x,	1);
	create_insn	(x=0X16D0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D12);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D25);
	op_hex		(x,	1);
	create_insn	(x=0X16D2E);
	op_hex		(x,	1);
	create_insn	(x=0X16D3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D45);
	op_hex		(x,	1);
	create_insn	(x=0X16D4E);
	op_hex		(x,	1);
	create_insn	(x=0X16D51);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D54);
	op_stkvar	(x,	0);
	create_insn	(x=0X16D63);
	op_hex		(x,	1);
	create_insn	(x=0X16D65);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16D69);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D6F);
	op_hex		(x,	1);
	create_insn	(x=0X16D71);
	op_hex		(x,	1);
	create_insn	(x=0X16D7F);
	op_hex		(x,	1);
	create_insn	(x=0X16D81);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16D88);
	op_hex		(x,	1);
	create_insn	(x=0X16D8A);
	op_hex		(x,	1);
	create_insn	(x=0X16D98);
	op_hex		(x,	1);
	create_insn	(x=0X16D9A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DA4);
	op_hex		(x,	1);
	create_insn	(x=0X16DA6);
	op_hex		(x,	1);
	set_cmt	(0X16DB3,	"dseg: simd_copy",	0);
	create_insn	(x=0X16DB3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X16DB7,	"dseg: state.playerstate",	0);
	create_insn	(x=0X16DB7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16DBF);
	op_hex		(x,	1);
	create_insn	(x=0X16DE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X16DFB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16E07);
	op_hex		(x,	1);
	create_insn	(x=0X16E1A);
	op_hex		(x,	1);
	create_insn	(x=0X16E23);
	op_hex		(x,	1);
	create_insn	(x=0X16E32);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E3A);
	op_hex		(x,	1);
	create_insn	(x=0X16E43);
	op_hex		(x,	1);
	create_insn	(x=0X16E46);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E49);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E5C);
	op_hex		(x,	1);
	create_insn	(x=0X16E65);
	op_hex		(x,	1);
	create_insn	(x=0X16E74);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E7C);
	op_hex		(x,	1);
	create_insn	(x=0X16E85);
	op_hex		(x,	1);
	create_insn	(x=0X16E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X16E9A);
	op_hex		(x,	1);
	create_insn	(x=0X16E9C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EA6);
	op_hex		(x,	1);
	create_insn	(x=0X16EA8);
	op_hex		(x,	1);
	create_insn	(x=0X16EB6);
	op_hex		(x,	1);
	create_insn	(x=0X16EB8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16EBF);
	op_hex		(x,	1);
	create_insn	(x=0X16EC1);
	op_hex		(x,	1);
	create_insn	(x=0X16ECF);
	op_hex		(x,	1);
	create_insn	(x=0X16ED1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16ED5);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EDB);
	op_hex		(x,	1);
	create_insn	(x=0X16EDD);
	op_hex		(x,	1);
	create_insn	(x=0X16EE9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16EED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16EF5);
	op_hex		(x,	1);
	create_insn	(x=0X16EFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X16F05);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16F13);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16F1B);
	op_hex		(x,	1);
	create_insn	(x=0X16F2C);
	op_hex		(x,	1);
	create_insn	(0X16F3A);
	set_name	(0X16F3A,	"restore_gamestate");
	create_insn	(x=0X16F3D);
	op_hex		(x,	1);
	create_insn	(x=0X16F42);
	op_stkvar	(x,	0);
	create_insn	(x=0X16F56);
	op_hex		(x,	1);
	create_insn	(x=0X16F59);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F6E);
	op_stkvar	(x,	0);
	create_insn	(0X16F81);
	create_insn	(x=0X16F91);
	op_stroff	(x,	1,	GetStrucIdByName("GAMESTATE"),	0);
	create_insn	(x=0X16FD2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16FE3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X16FEC);
	op_hex		(x,	1);
	create_byte	(0X16FFB);
	make_array	(0X16FFB,	0X3);
	create_insn	(0X16FFE);
	create_insn	(0X17002);
	create_insn	(0X17008);
	set_name	(0X17008,	"update_gamestate");
	create_insn	(x=0X1700B);
	op_hex		(x,	1);
	update_extra_cmt		(0X1701B,	E_PREV + 0,	"The variable might be called");
	update_extra_cmt		(0X1701B,	E_PREV + 1,	"rplBufferByte, but it seems its");
	update_extra_cmt		(0X1701B,	E_PREV + 2,	"use is more general.");
	create_insn	(x=0X1701B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1703D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17046);
	op_hex		(x,	1);
	create_insn	(x=0X17070);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X170B2);
	create_insn	(x=0X170C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X170CE);
	op_hex		(x,	1);
	create_insn	(0X170F6);
	create_insn	(0X17100);
	create_insn	(0X1710E);
	create_insn	(0X17138);
	create_insn	(x=0X1713E);
	op_hex		(x,	1);
	create_insn	(x=0X17140);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17150);
	op_hex		(x,	1);
	create_insn	(x=0X17152);
	op_hex		(x,	1);
	create_insn	(x=0X17164);
	op_hex		(x,	1);
	create_insn	(x=0X1716D);
	op_hex		(x,	1);
	create_insn	(x=0X17178);
	op_hex		(x,	1);
	create_insn	(x=0X1717A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1718A);
	op_hex		(x,	1);
	create_insn	(x=0X1718C);
	op_hex		(x,	1);
	create_insn	(x=0X1719E);
	op_hex		(x,	1);
	create_insn	(x=0X171A7);
	op_hex		(x,	1);
	create_insn	(x=0X171C2);
	op_hex		(x,	1);
	create_insn	(0X171CC);
	create_insn	(0X171D0);
	create_insn	(0X171DC);
	create_insn	(0X171E8);
	set_name	(0X171E8,	"player_op");
	create_insn	(x=0X171EB);
	op_hex		(x,	1);
	create_insn	(x=0X1720C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1722A);
	op_chr		(x,	0);
	create_insn	(x=0X1722F);
	op_chr		(x,	0);
	create_insn	(x=0X17242);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17246);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1724D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17256);
	op_hex		(x,	1);
	create_insn	(x=0X17259);
	op_stkvar	(x,	1);
	create_insn	(x=0X1725D);
	op_hex		(x,	1);
	create_insn	(x=0X1725F);
	op_hex		(x,	1);
	set_cmt	(0X17261,	"masks all keys but the steering ones.",	0);
	create_insn	(x=0X17261);
	op_hex		(x,	1);
	create_insn	(x=0X17269);
	op_hex		(x,	1);
	create_insn	(x=0X17270);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17274);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1727C);
	op_hex		(x,	1);
	set_cmt	(0X17282,	"simd2",	0);
	create_insn	(x=0X17282);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X17286,	"opp CARSTATE",	0);
	create_insn	(x=0X17286);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1728A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1728E,	"player CARSTATE",	0);
	create_insn	(x=0X1728E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17296);
	op_hex		(x,	1);
	create_insn	(x=0X172A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X172AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X172B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X172B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X172BE);
	op_hex		(x,	1);
	create_insn	(x=0X172CB);
	op_stkvar	(x,	0);
	create_insn	(0X172D8);
	create_insn	(x=0X172F3);
	op_stkvar	(x,	0);
	make_array	(0X17306,	0X2);
	create_insn	(x=0X17308);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1730E,	E_PREV + 0,	"<2 skipped elements...");
	create_insn	(x=0X1730E);
	op_stkvar	(x,	0);
	create_insn	(x=0X17319);
	op_stkvar	(x,	1);
	create_insn	(x=0X17322);
	op_stkvar	(x,	0);
	create_insn	(x=0X17328);
	op_stkvar	(x,	0);
	create_insn	(x=0X17332);
	op_hex		(x,	1);
	create_insn	(x=0X17338);
	op_stkvar	(x,	1);
	create_insn	(x=0X17350);
	op_stkvar	(x,	1);
	create_insn	(x=0X17353);
	op_hex		(x,	1);
	create_insn	(x=0X1737B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17386);
	op_stkvar	(x,	0);
	create_insn	(x=0X1738C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17395);
	op_hex		(x,	1);
	create_insn	(x=0X1739F);
	op_hex		(x,	1);
	create_insn	(x=0X173A1);
	op_hex		(x,	1);
	create_insn	(x=0X173AD);
	op_stkvar	(x,	1);
	create_insn	(0X173C2);
	create_insn	(x=0X173D7);
	op_hex		(x,	1);
	create_insn	(x=0X173DA);
	op_stkvar	(x,	0);
	create_insn	(0X173F6);
	create_insn	(x=0X17402);
	op_stkvar	(x,	0);
	create_insn	(x=0X1741A);
	op_hex		(x,	1);
	create_insn	(0X1743A);
	create_insn	(x=0X17449);
	op_hex		(x,	1);
	create_insn	(x=0X1744B);
	op_hex		(x,	1);
	create_insn	(x=0X17453);
	op_stkvar	(x,	0);
	create_insn	(x=0X1746C);
	op_hex		(x,	1);
	create_insn	(x=0X1746E);
	op_hex		(x,	1);
	create_insn	(x=0X17476);
	op_stkvar	(x,	0);
	create_insn	(x=0X1747C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17490);
	op_hex		(x,	1);
	create_insn	(x=0X17492);
	op_hex		(x,	1);
	create_insn	(x=0X1749A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1749D);
	op_stkvar	(x,	1);
	create_insn	(x=0X174A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X174A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X174AD);
	op_hex		(x,	1);
	create_insn	(x=0X174B0);
	op_stkvar	(x,	1);
	create_insn	(0X174BC);
	create_insn	(0X174C6);
	create_insn	(x=0X174C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X174CE);
	op_hex		(x,	1);
	create_insn	(x=0X174DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X174E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X174E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X174EE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X174F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X174F9);
	op_hex		(x,	1);
	create_insn	(x=0X174FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X17500);
	op_stkvar	(x,	1);
	create_insn	(x=0X17503);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17515);
	op_hex		(x,	1);
	create_insn	(x=0X17517);
	op_hex		(x,	1);
	create_insn	(x=0X1751D);
	op_stkvar	(x,	0);
	create_insn	(x=0X17520);
	op_stkvar	(x,	0);
	create_insn	(x=0X1752F);
	op_hex		(x,	1);
	create_insn	(x=0X17531);
	op_hex		(x,	1);
	create_insn	(x=0X17539);
	op_stkvar	(x,	0);
	create_insn	(0X1753E);
	create_insn	(x=0X17547);
	op_hex		(x,	1);
	create_insn	(x=0X17549);
	op_hex		(x,	1);
	create_insn	(x=0X1754F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1755B);
	op_hex		(x,	1);
	create_insn	(x=0X1755D);
	op_hex		(x,	1);
	create_insn	(x=0X17563);
	op_stkvar	(x,	0);
	create_insn	(x=0X17566);
	op_stkvar	(x,	1);
	create_insn	(x=0X1756A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1756D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17576);
	op_hex		(x,	1);
	create_insn	(x=0X17579);
	op_stkvar	(x,	0);
	create_insn	(x=0X1757F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17582);
	op_stkvar	(x,	0);
	create_insn	(x=0X17587);
	op_stkvar	(x,	0);
	create_insn	(x=0X1758D);
	op_stkvar	(x,	1);
	create_insn	(x=0X17590);
	op_stkvar	(x,	0);
	create_insn	(x=0X17593);
	op_stkvar	(x,	1);
	create_insn	(x=0X17596);
	op_stkvar	(x,	0);
	create_insn	(x=0X17599);
	op_stkvar	(x,	0);
	create_insn	(x=0X1759C);
	op_stkvar	(x,	0);
	create_insn	(0X175A5);
	create_insn	(x=0X175AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X175B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X175BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X175C4);
	op_hex		(x,	1);
	create_insn	(0X175D0);
	create_insn	(x=0X175D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X175DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X175DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X175E5);
	op_hex		(x,	1);
	create_insn	(x=0X175EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X175F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X175F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X175FC);
	op_hex		(x,	1);
	create_insn	(x=0X175FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X17602);
	op_stkvar	(x,	1);
	create_insn	(x=0X17606);
	op_stkvar	(x,	1);
	create_insn	(x=0X17609);
	op_stkvar	(x,	1);
	create_insn	(x=0X17612);
	op_hex		(x,	1);
	create_insn	(x=0X17617);
	op_hex		(x,	1);
	create_insn	(x=0X17620);
	op_hex		(x,	1);
	create_insn	(x=0X1763B);
	op_stkvar	(x,	1);
	create_insn	(0X17640);
	create_insn	(x=0X17646);
	op_stkvar	(x,	1);
	create_insn	(x=0X17659);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17665);
	op_hex		(x,	1);
	create_insn	(x=0X17670);
	op_hex		(x,	1);
	create_insn	(0X17684);
	create_insn	(x=0X17688);
	op_hex		(x,	1);
	create_insn	(x=0X1769A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1769D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X176B0);
	create_insn	(0X176BA);
	create_insn	(x=0X176C3);
	op_hex		(x,	1);
	create_insn	(x=0X176C5);
	op_hex		(x,	1);
	create_insn	(x=0X176CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X176CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X176D4);
	op_stkvar	(x,	0);
	create_insn	(0X176DC);
	create_insn	(x=0X176E5);
	op_hex		(x,	1);
	create_insn	(x=0X176E7);
	op_hex		(x,	1);
	create_insn	(x=0X176ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X176F9);
	op_hex		(x,	1);
	create_insn	(x=0X176FB);
	op_hex		(x,	1);
	create_insn	(x=0X17701);
	op_stkvar	(x,	0);
	create_insn	(x=0X17719);
	op_hex		(x,	1);
	create_insn	(x=0X1771C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1771F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17723);
	op_stkvar	(x,	0);
	create_insn	(x=0X17726);
	op_stkvar	(x,	1);
	create_insn	(x=0X1772F);
	op_hex		(x,	1);
	create_insn	(x=0X17732);
	op_stkvar	(x,	0);
	create_insn	(x=0X17735);
	op_stkvar	(x,	1);
	create_insn	(x=0X17740);
	op_hex		(x,	1);
	create_insn	(x=0X17743);
	op_hex		(x,	1);
	create_insn	(x=0X17753);
	op_hex		(x,	1);
	create_insn	(0X1776C);
	create_insn	(0X1777B);
	create_insn	(x=0X17781);
	op_hex		(x,	1);
	create_insn	(x=0X17783);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17793);
	op_hex		(x,	1);
	create_insn	(x=0X17795);
	op_hex		(x,	1);
	create_insn	(0X1779E);
	create_insn	(0X177AC);
	create_insn	(x=0X177B8);
	op_hex		(x,	1);
	create_insn	(x=0X177C1);
	op_hex		(x,	1);
	create_insn	(x=0X177CC);
	op_hex		(x,	1);
	create_insn	(x=0X177CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X177DE);
	op_hex		(x,	1);
	create_insn	(x=0X177E0);
	op_hex		(x,	1);
	create_insn	(x=0X177F2);
	op_hex		(x,	1);
	create_insn	(x=0X177FB);
	op_hex		(x,	1);
	create_insn	(x=0X1780D);
	op_hex		(x,	1);
	create_insn	(0X17816);
	set_name	(0X17816,	"detect_penalty");
	create_insn	(x=0X17819);
	op_hex		(x,	1);
	create_insn	(x=0X17822);
	op_stkvar	(x,	0);
	create_insn	(x=0X1782B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1782E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17832);
	op_stkvar	(x,	0);
	create_insn	(x=0X17839);
	op_stkvar	(x,	0);
	create_insn	(x=0X17842);
	op_stkvar	(x,	0);
	create_insn	(x=0X17848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1784C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17853);
	op_stkvar	(x,	0);
	create_insn	(x=0X1785C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17862);
	op_stkvar	(x,	1);
	create_insn	(x=0X17872);
	op_stkvar	(x,	0);
	create_insn	(x=0X1787B);
	op_stkvar	(x,	0);
	create_insn	(x=0X17884);
	op_stkvar	(x,	0);
	create_insn	(x=0X1788D);
	op_stkvar	(x,	0);
	create_insn	(x=0X17896);
	op_stkvar	(x,	0);
	create_insn	(x=0X1789B);
	op_stkvar	(x,	0);
	create_insn	(x=0X178A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X178B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X178BB);
	op_hex		(x,	1);
	create_insn	(x=0X178C8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X178CF,	E_PREV + 0,	"var_5A2h is actually an array of potentially");
	update_extra_cmt		(0X178CF,	E_PREV + 1,	"385h elements.");
	create_insn	(x=0X178D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X178DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X178E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X178E5);
	op_hex		(x,	1);
	create_insn	(x=0X178E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X178FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X17900);
	op_stkvar	(x,	1);
	create_insn	(x=0X17903);
	op_stkvar	(x,	1);
	create_insn	(x=0X17909);
	op_stkvar	(x,	1);
	create_insn	(x=0X1790C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1791A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17924);
	op_stkvar	(x,	1);
	create_insn	(x=0X1792E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1793D);
	op_hex		(x,	0);
	create_insn	(x=0X17942);
	op_stkvar	(x,	1);
	create_insn	(x=0X17950);
	op_stkvar	(x,	0);
	create_insn	(x=0X17953);
	op_stkvar	(x,	1);
	create_insn	(x=0X17965);
	op_hex		(x,	1);
	create_insn	(x=0X17969);
	op_hex		(x,	1);
	create_insn	(x=0X1796D);
	op_hex		(x,	1);
	create_insn	(x=0X1796F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X17973);
	op_stkvar	(x,	0);
	create_insn	(x=0X17977);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1797E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17986);
	op_stkvar	(x,	1);
	create_insn	(x=0X17989);
	op_stkvar	(x,	0);
	create_insn	(x=0X1798D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1799B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1799E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X179AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X179AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X179B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X179B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X179B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X179BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X179C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X179C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X179CF);
	op_hex		(x,	1);
	create_insn	(x=0X179DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X179E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X179E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X179F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X179F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A04);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A16);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A1B);
	op_hex		(x,	1);
	create_insn	(x=0X17A28);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A34);
	op_hex		(x,	1);
	create_insn	(x=0X17A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A40);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A44);
	op_hex		(x,	1);
	create_insn	(x=0X17A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A61);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A66);
	op_stkvar	(x,	1);
	create_insn	(0X17A6E);
	create_insn	(x=0X17A71);
	op_stkvar	(x,	1);
	set_cmt	(0X17A78,	"former update_car_state",	0);
	create_insn	(0X17A78);
	set_name	(0X17A78,	"update_car_speed");
	create_insn	(x=0X17A7B);
	op_hex		(x,	1);
	create_insn	(x=0X17A87);
	op_stkvar	(x,	0);
	create_insn	(x=0X17A8E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17A93,	E_PREV + 0,	"fC6 looks like an");
	update_extra_cmt		(0X17A93,	E_PREV + 1,	"externally-stored counter.");
	create_insn	(x=0X17A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A96);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17A9D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AA6);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AA9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AAC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AB4);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AB7);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17ABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ABF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AC2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AC8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17ACF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17AD6,	E_PREV + 0,	"Shift up key.");
	create_insn	(x=0X17AD6);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	update_extra_cmt		(0X17ADC,	E_PREV + 0,	"Shift down key.");
	create_insn	(x=0X17ADC);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X17AE6);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AF0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17AFA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B07);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17B0A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B12);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17B14);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B1A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B23);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B26);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17B29);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B2E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B35);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B39);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B3C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B45);
	op_hex		(x,	1);
	create_insn	(x=0X17B4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B4E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B52);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B55);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B5C);
	op_hex		(x,	1);
	create_insn	(x=0X17B5E);
	op_hex		(x,	1);
	create_insn	(x=0X17B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B63);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B69);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B6F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B76);
	op_hex		(x,	1);
	create_insn	(x=0X17B78);
	op_hex		(x,	1);
	create_insn	(x=0X17B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B7D);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B83);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B89);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X17B93);
	create_insn	(x=0X17B95);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B98);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17B9D);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BA0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BA3);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17BAA,	E_PREV + 0,	"Probably it goes here when the knob movement is done.");
	create_insn	(x=0X17BAA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BB2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BB9);
	op_hex		(x,	1);
	create_insn	(x=0X17BBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BBE);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17BC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BC4);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BCC);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BD3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X17BDA,	"int",	0);
	create_insn	(x=0X17BDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BE2);
	op_hex		(x,	1);
	create_insn	(x=0X17BE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BEF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17BF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X17BFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C05);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C12);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C15);
	op_stroff	(x,	0,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17C1C);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C1F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C22);
	op_stkvar	(x,	0);
	set_cmt	(0X17C25,	"int",	0);
	create_insn	(x=0X17C2B);
	op_hex		(x,	1);
	create_insn	(x=0X17C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C33);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C38);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C3B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C40);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C49);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C4C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C55);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C58);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C61);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C67);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C6A);
	op_stkvar	(x,	0);
	set_cmt	(0X17C6D,	"int",	0);
	create_insn	(x=0X17C73);
	op_hex		(x,	1);
	create_insn	(x=0X17C76);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C81);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17C84);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X17C93);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C96);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C99);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CA1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17CA8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CAF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17CB2);
	op_stkvar	(x,	0);
	set_cmt	(0X17CBB,	"this is NOT part of the calculations *LOL*",	0);
	create_insn	(x=0X17CBB);
	op_hex		(x,	1);
	create_insn	(x=0X17CBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CC0);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CC7);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17CCD,	E_PREV + 0,	"Something really important here. si is being used as");
	update_extra_cmt		(0X17CCD,	E_PREV + 1,	"index to access the aerotable, whose array indices");
	update_extra_cmt		(0X17CCD,	E_PREV + 2,	"are car speeds normalized to the 0h...39h. This ");
	update_extra_cmt		(0X17CCD,	E_PREV + 3,	"should prove beyond doubts the variable in question");
	update_extra_cmt		(0X17CCD,	E_PREV + 4,	"(formerly called trackgrip) is the scalar car speed.");
	update_extra_cmt		(0X17CCD,	E_PREV + 5,	"Also note we have a sub above, not an add.");
	create_insn	(x=0X17CCD);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17CD0,	E_PREV + 0,	"Aero drag is active at all times, including midair,");
	update_extra_cmt		(0X17CD0,	E_PREV + 1,	"so it is computed before any key checking is done.");
	create_insn	(x=0X17CD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CD5);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17CD8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17CDD,	E_PREV + 0,	"Current rpm is set to max and then");
	update_extra_cmt		(0X17CDD,	E_PREV + 1,	"brakes are applied.");
	create_insn	(x=0X17CDE);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17CE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CE4);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	update_extra_cmt		(0X17CEA,	E_PREV + 0,	"and ax, 3 masks out all bits but");
	update_extra_cmt		(0X17CEA,	E_PREV + 1,	"accelerate and brake.");
	create_insn	(x=0X17CEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CED);
	op_hex		(x,	1);
	create_insn	(0X17CF8);
	update_extra_cmt		(0X17CFD,	E_PREV + 0,	"Neither key being pressed, or both.");
	create_insn	(x=0X17CFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D00);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D05);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D08);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17D10,	E_PREV + 0,	"Brake key being pressed.");
	create_insn	(x=0X17D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D13);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D1B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D23);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D28);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17D2E,	E_PREV + 0,	"Weird.");
	create_insn	(x=0X17D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D31);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17D34);
	op_hex		(x,	1);
	update_extra_cmt		(0X17D36,	E_PREV + 0,	"There is no division by mass, so");
	update_extra_cmt		(0X17D36,	E_PREV + 1,	"the brakes are applied as");
	update_extra_cmt		(0X17D36,	E_PREV + 2,	"acceleration.");
	create_insn	(x=0X17D36);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17D40,	E_PREV + 0,	"Doubles acceleration at 10fps.");
	create_insn	(x=0X17D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D43);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D46);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17D4C,	E_PREV + 0,	"Deceleration.");
	update_extra_cmt		(0X17D4F,	E_PREV + 0,	"Acceleration.");
	update_extra_cmt		(0X17D4F,	E_PREV + 1,	"Keep in mind that at this point");
	update_extra_cmt		(0X17D4F,	E_PREV + 2,	"the speed was not updated yet.");
	update_extra_cmt		(0X17D4F,	E_PREV + 3,	"8000h = 128mph");
	create_insn	(x=0X17D4F);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17D59,	E_PREV + 0,	"Modifies speed.");
	create_insn	(x=0X17D59);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17D5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D62);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D6C);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D72);
	op_stkvar	(x,	0);
	create_insn	(0X17D7C);
	update_extra_cmt		(0X17D82,	E_PREV + 0,	"Accelerate key being pressed.");
	create_insn	(x=0X17D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D85);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D8D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D92);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D95);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17D9C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DAB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DB5);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DBF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DC9);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17DCC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17DD4,	E_PREV + 0,	"250mph, that is, always.");
	create_insn	(x=0X17DD4);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17DDE,	E_PREV + 0,	"Extra 3mph per TS... airtime speed boost.");
	create_insn	(x=0X17DDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X17DE6);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17DED,	E_PREV + 0,	"0A28h is the limit for idle rpm usage");
	update_extra_cmt		(0X17DED,	E_PREV + 1,	"at first gear.");
	create_insn	(x=0X17DED);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X17DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DF7);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DFF);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X17E04,	"divide rpm by 2^7 to find offset.",	0);
	create_insn	(x=0X17E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E09);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17E0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E12);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17E19);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	update_extra_cmt		(0X17E20,	E_PREV + 0,	"Averaging idle and current torque.");
	create_insn	(x=0X17E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E23);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E2F);
	op_hex		(x,	1);
	create_insn	(x=0X17E31);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E3E);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X17E45,	"torque * ratio / 4096",	0);
	create_insn	(x=0X17E47);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E4A);
	op_stkvar	(x,	1);
	set_cmt	(0X17E50,	"push cwd(MASS)",	0);
	create_insn	(x=0X17E50);
	op_stroff	(x,	0,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17E59);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X17E66,	E_NEXT + 0,	"Fuldiv is designed to take a dword divisor");
	update_extra_cmt		(0X17E66,	E_NEXT + 1,	"Given that mass is a word value, there is no");
	update_extra_cmt		(0X17E66,	E_NEXT + 2,	"clear reason to use that here...");
	create_insn	(x=0X17E6B);
	op_hex		(x,	1);
	create_insn	(x=0X17E6D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17E70,	E_PREV + 0,	"ovrForce = ovrForce * 25 / (2 * mass)");
	update_extra_cmt		(0X17E70,	E_PREV + 1,	"This is a convertion to acceleration.");
	create_insn	(x=0X17E70);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17E76,	E_PREV + 0,	"This seems to be a correction");
	update_extra_cmt		(0X17E76,	E_PREV + 1,	"for opponent maximum speeds.");
	create_insn	(x=0X17E76);
	op_hex		(x,	1);
	create_insn	(x=0X17E80);
	op_hex		(x,	1);
	create_insn	(x=0X17E82);
	op_stkvar	(x,	0);
	create_insn	(x=0X17E8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E95);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EAA);
	op_stkvar	(x,	0);
	set_cmt	(0X17EAD,	"(37/32)mph, a quite large value",	0);
	create_insn	(x=0X17EAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EBA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17EC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EC8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17ECD,	E_PREV + 0,	"This jump to _17ED9 would make for a");
	update_extra_cmt		(0X17ECD,	E_PREV + 1,	"colossal bug, but the condition is");
	update_extra_cmt		(0X17ECD,	E_PREV + 2,	"impossible to meet xD.");
	create_insn	(x=0X17ECF);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17ED9,	E_PREV + 0,	"F500h = 245mph = speed limit.");
	create_insn	(x=0X17ED9);
	op_stkvar	(x,	0);
	create_insn	(x=0X17EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EE7);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X17EEF,	E_PREV + 0,	"Car stops.");
	create_insn	(x=0X17EEF);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X17EF8,	E_PREV + 0,	"; everything from here just flows to the end");
	create_insn	(x=0X17EF8);
	op_stkvar	(x,	1);
	set_cmt	(0X17EFB,	"abs.delta = 20mph: a lot",	0);
	update_extra_cmt		(0X17F00,	E_PREV + 0,	"Likely this is here to adjust speeds after");
	update_extra_cmt		(0X17F00,	E_PREV + 1,	"landing from a jump, when speed and speed2");
	update_extra_cmt		(0X17F00,	E_PREV + 2,	"diverge.");
	create_insn	(x=0X17F02);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F07);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F0C);
	op_hex		(x,	1);
	set_cmt	(0X17F0E,	"an average",	0);
	create_insn	(x=0X17F0E);
	op_hex		(x,	1);
	create_insn	(x=0X17F10);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F13);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F18);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F1B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F21);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F2E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F31);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F37);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17F3C,	E_PREV + 0,	"Note that speed2 is NOT updated");
	update_extra_cmt		(0X17F3C,	E_PREV + 1,	"if the car is airborne.");
	create_insn	(x=0X17F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F42);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F45);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F48);
	op_stroff	(x,	0,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17F4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F4E);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F54);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F57);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F5A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F62);
	op_hex		(x,	1);
	create_insn	(x=0X17F65);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F68);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F6E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F77);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F7A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F7F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F82);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X17F85,	"2000rpm",	0);
	create_insn	(x=0X17F85);
	op_hex		(x,	1);
	create_insn	(x=0X17F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F8D);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X17F94);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17F97);
	op_hex		(x,	1);
	create_insn	(x=0X17F9C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FA7);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FAA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	set_cmt	(0X17FAD,	"2000rpm",	0);
	create_insn	(x=0X17FAD);
	op_hex		(x,	1);
	create_insn	(x=0X17FB2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FB7);
	op_stkvar	(x,	1);
	set_cmt	(0X17FBA,	"5mph",	0);
	create_insn	(x=0X17FBA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FC5);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FCA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17FD6,	E_PREV + 0,	"");
	update_extra_cmt		(0X17FD6,	E_PREV + 1,	"update_grip:");
	update_extra_cmt		(0X17FD6,	E_PREV + 2,	"");
	update_extra_cmt		(0X17FD6,	E_PREV + 3,	"former update_player_carstate");
	create_insn	(0X17FD6);
	set_name	(0X17FD6,	"update_grip");
	create_insn	(x=0X17FD9);
	op_hex		(x,	1);
	create_insn	(x=0X17FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FE1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17FE6,	E_PREV + 0,	"If the car is flying the whole subroutine");
	update_extra_cmt		(0X17FE6,	E_PREV + 1,	"is skipped.");
	create_insn	(x=0X17FE8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X17FED);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FF0);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	update_extra_cmt		(0X17FFC,	E_PREV + 0,	"Wheels on grass...");
	create_insn	(x=0X17FFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X18001);
	op_stkvar	(x,	1);
	create_insn	(x=0X18004);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1800B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1800E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18015);
	op_stkvar	(x,	0);
	create_insn	(x=0X18018);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1801F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18022);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18029);
	op_stkvar	(x,	0);
	create_insn	(x=0X1802C);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X18032,	E_PREV + 0,	"Grass slowdown!");
	create_insn	(x=0X18032);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18037);
	op_stkvar	(x,	1);
	create_insn	(x=0X1803A);
	op_hex		(x,	1);
	create_insn	(x=0X1803C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18040);
	op_stkvar	(x,	1);
	create_insn	(x=0X18043);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18046);
	op_stkvar	(x,	1);
	create_insn	(x=0X1804B);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1804E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18051);
	op_stkvar	(x,	1);
	create_insn	(x=0X18054);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18057);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1805A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1805D);
	op_stkvar	(x,	0);
	create_insn	(x=0X18060);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18067);
	op_stkvar	(x,	0);
	create_insn	(x=0X1806A);
	op_stkvar	(x,	0);
	create_insn	(x=0X18070);
	op_stkvar	(x,	1);
	create_insn	(x=0X18078);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1807B,	E_PREV + 0,	"Grip modifiers...");
	create_insn	(x=0X1807F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18082);
	op_stkvar	(x,	1);
	create_insn	(x=0X1808B);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1808E,	E_NEXT + 0,	"var_4 = speedshr8^2 * var_C_angleConstant / 2^9");
	create_insn	(x=0X1808E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18091);
	op_stkvar	(x,	1);
	create_insn	(x=0X18094);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X18098);
	op_hex		(x,	1);
	create_insn	(x=0X1809A);
	op_stkvar	(x,	0);
	create_insn	(x=0X180A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X180A3);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X180AA);
	op_hex		(x,	1);
	create_insn	(x=0X180AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X180AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X180B2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X180B9);
	op_hex		(x,	1);
	create_insn	(x=0X180BB);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X180BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X180C4);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X180CB);
	op_hex		(x,	1);
	create_insn	(x=0X180CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X180D0);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X180D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X180D9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X180E0);
	op_hex		(x,	1);
	create_insn	(x=0X180E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X180E5);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	create_insn	(x=0X180EB);
	op_stroff	(x,	1,	GetStrucIdByName("SIMD"),	0);
	update_extra_cmt		(0X180F9,	E_PREV + 0,	"Returns 2 * (baseGrip * sumWhlSurfGrip)");
	create_insn	(x=0X180FB);
	op_hex		(x,	1);
	create_insn	(x=0X180FD);
	op_hex		(x,	1);
	create_insn	(x=0X18103);
	op_stkvar	(x,	0);
	create_insn	(x=0X18106);
	op_stkvar	(x,	1);
	create_insn	(x=0X18109);
	op_stkvar	(x,	1);
	create_insn	(x=0X1810C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1810F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18112);
	op_stkvar	(x,	1);
	create_insn	(x=0X18115);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18118);
	op_stkvar	(x,	0);
	create_insn	(x=0X18121);
	op_stkvar	(x,	1);
	create_insn	(x=0X18124);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1812A);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1812F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18137);
	op_stkvar	(x,	0);
	create_insn	(x=0X1813C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18144);
	op_stkvar	(x,	1);
	create_insn	(x=0X1814C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18154);
	op_stkvar	(x,	0);
	create_insn	(x=0X1815A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1815D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18162);
	op_stkvar	(x,	1);
	create_insn	(x=0X18165);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18168);
	op_stkvar	(x,	1);
	create_insn	(x=0X1816B);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X18170,	E_PREV + 0,	"This must have something to do");
	update_extra_cmt		(0X18170,	E_PREV + 1,	"with spinning / sliding.");
	create_insn	(x=0X18170);
	op_stkvar	(x,	1);
	create_insn	(x=0X18173);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18178);
	op_stkvar	(x,	1);
	create_insn	(x=0X18188);
	op_stkvar	(x,	1);
	set_cmt	(0X18192,	"*2^8",	0);
	create_insn	(x=0X1819B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1819E);
	op_stkvar	(x,	0);
	create_insn	(x=0X181A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X181AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X181AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X181B2);
	op_hex		(x,	1);
	create_insn	(x=0X181B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X181B9);
	op_hex		(x,	1);
	create_insn	(x=0X181BB);
	op_hex		(x,	1);
	create_insn	(x=0X181BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X181C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X181C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X181C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X181C9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X181D1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X181D9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181E1);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181E8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X181EE);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181F4);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X181FC);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18204);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X18207);
	op_stkvar	(x,	1);
	create_insn	(x=0X1820A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18210);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18217);
	op_stkvar	(x,	1);
	create_insn	(x=0X1821A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18220);
	op_stkvar	(x,	1);
	create_insn	(x=0X18223);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18228);
	op_stkvar	(x,	1);
	create_insn	(x=0X1822B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X18234);
	create_insn	(x=0X18236);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1823E);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18246);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18249);
	op_stkvar	(x,	0);
	create_insn	(x=0X1824C);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1824F);
	op_stkvar	(x,	0);
	set_cmt	(0X18252,	"hi-word > word : div by 2^8",	0);
	create_insn	(x=0X18256);
	op_hex		(x,	1);
	create_insn	(x=0X18258);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1825C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1827C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1827F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18282);
	op_stkvar	(x,	1);
	create_insn	(x=0X18287);
	op_hex		(x,	1);
	create_insn	(x=0X18289);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1828D);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1829B,	E_PREV + 0,	"Test for banked corners...!");
	create_insn	(x=0X182A8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X182AE,	E_PREV + 0,	"That's what a banked corner does: it makes");
	update_extra_cmt		(0X182AE,	E_PREV + 1,	"the car turn by itself by an ammount");
	update_extra_cmt		(0X182AE,	E_PREV + 2,	"proportional to the banking slope (tested");
	update_extra_cmt		(0X182AE,	E_PREV + 3,	"and confirmed).");
	create_insn	(x=0X182AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X182B1);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X182BA);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X182BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X182C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X182C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X182CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X182D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X182D7);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X182DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X182E0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X182EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X182ED);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X182F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X182F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X18302);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18305);
	op_stkvar	(x,	1);
	create_insn	(x=0X1830B);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18311);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18314);
	op_stkvar	(x,	1);
	create_insn	(x=0X18317);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1831D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18320);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18328);
	op_hex		(x,	1);
	create_insn	(x=0X18331);
	op_hex		(x,	1);
	create_insn	(x=0X18334);
	op_stkvar	(x,	1);
	create_insn	(x=0X18337);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1833A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1833D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18345);
	op_hex		(x,	1);
	create_insn	(x=0X1834C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1834F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18354);
	op_stkvar	(x,	1);
	create_insn	(x=0X18357);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1835E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18363);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18366);
	op_hex		(x,	1);
	create_insn	(x=0X18368);
	op_hex		(x,	1);
	create_insn	(x=0X1836A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1836D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18370);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18378);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1837D);
	op_hex		(x,	1);
	create_insn	(x=0X1837F);
	op_hex		(x,	1);
	create_insn	(x=0X18381);
	op_hex		(x,	1);
	create_insn	(x=0X18383);
	op_hex		(x,	1);
	create_insn	(x=0X1838B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1838E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18391);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18397);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1839F);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183A4);
	op_hex		(x,	1);
	create_insn	(x=0X183A6);
	op_hex		(x,	1);
	create_insn	(x=0X183A8);
	op_hex		(x,	1);
	create_insn	(x=0X183AA);
	op_hex		(x,	1);
	create_insn	(x=0X183B2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X183B8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183C0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183C3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X183C9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183D3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183D9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183E0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183E3);
	op_hex		(x,	1);
	create_insn	(x=0X183E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X183E8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183ED);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183F2);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X183F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X183F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X183FB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18400);
	op_stkvar	(x,	1);
	create_insn	(x=0X18403);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18408);
	op_stkvar	(x,	1);
	create_insn	(x=0X1840B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18410);
	op_stkvar	(x,	1);
	create_insn	(x=0X18413);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1841A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18421);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18428);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1842F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18436);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X1843E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18441);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X18448);
	op_stkvar	(x,	1);
	create_insn	(x=0X1844B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18450);
	op_stkvar	(x,	1);
	create_insn	(x=0X18453);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18458);
	op_stkvar	(x,	1);
	create_insn	(x=0X1845B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(0X18466);
	set_name	(0X18466,	"car_car_speed_adjust_maybe");
	create_insn	(x=0X18469);
	op_hex		(x,	1);
	create_insn	(x=0X1846D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18470);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18475);
	op_stkvar	(x,	1);
	create_insn	(x=0X18478);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1847D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18480);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18483);
	op_stkvar	(x,	0);
	create_insn	(x=0X18486);
	op_stkvar	(x,	1);
	create_insn	(x=0X18489);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1848C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1848F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18492);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18495);
	op_stkvar	(x,	0);
	create_insn	(x=0X18498);
	op_stkvar	(x,	1);
	create_insn	(x=0X1849B);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1849E);
	op_stkvar	(x,	0);
	create_insn	(x=0X184A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X184A9);
	op_hex		(x,	1);
	create_insn	(x=0X184AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X184BA);
	op_hex		(x,	1);
	create_insn	(x=0X184BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X184C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X184C8);
	op_hex		(x,	1);
	create_insn	(x=0X184CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X184D9);
	op_hex		(x,	1);
	create_insn	(x=0X184DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X184DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X184E7);
	op_hex		(x,	1);
	create_insn	(x=0X184EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X184F8);
	op_hex		(x,	1);
	create_insn	(x=0X184FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X184FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X18506);
	op_hex		(x,	1);
	create_insn	(x=0X1850A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18517);
	op_hex		(x,	1);
	create_insn	(x=0X1851A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1851D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18521);
	op_stkvar	(x,	1);
	create_insn	(x=0X18524);
	op_stkvar	(x,	1);
	create_insn	(x=0X1852D);
	op_hex		(x,	1);
	create_insn	(x=0X18530);
	op_stkvar	(x,	0);
	create_insn	(x=0X18538);
	op_stkvar	(x,	0);
	create_insn	(x=0X1853D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18540);
	op_stkvar	(x,	1);
	create_insn	(x=0X18543);
	op_hex		(x,	1);
	create_insn	(x=0X18546);
	op_stkvar	(x,	0);
	create_insn	(x=0X18549);
	op_stkvar	(x,	1);
	create_insn	(x=0X1854E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18554);
	op_stkvar	(x,	1);
	create_insn	(x=0X18557);
	op_hex		(x,	1);
	create_insn	(x=0X18559);
	op_hex		(x,	1);
	create_insn	(x=0X1855B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1855E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18561);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18566);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1856E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18571);
	op_stkvar	(x,	1);
	create_insn	(x=0X18574);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18577);
	op_stkvar	(x,	1);
	create_insn	(x=0X1857A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1857D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18580);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18583);
	op_stkvar	(x,	1);
	create_insn	(x=0X18586);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1858D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18592);
	op_stkvar	(x,	1);
	create_insn	(x=0X18595);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1859C);
	create_insn	(x=0X185A0);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X185A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X185A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X185A9);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X185AF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185B6);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X185C5);
	create_insn	(x=0X185C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X185CE);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185D1);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X185D9);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185DC);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X185DF);
	op_stkvar	(x,	0);
	create_insn	(0X185EE);
	create_insn	(0X185F6);
	set_name	(0X185F6,	"carState_rc_op");
	create_insn	(x=0X185F9);
	op_hex		(x,	1);
	create_insn	(x=0X185FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X18601);
	op_hex		(x,	1);
	create_insn	(x=0X18603);
	op_stkvar	(x,	1);
	set_cmt	(0X18606,	"rc accesses are offset by the wheel index.",	0);
	create_insn	(x=0X18606);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18609);
	op_stkvar	(x,	0);
	create_insn	(x=0X1860C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18611);
	op_stkvar	(x,	0);
	create_insn	(x=0X18616);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1861E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18622);
	op_stkvar	(x,	1);
	create_insn	(x=0X18625);
	op_hex		(x,	1);
	create_insn	(x=0X18627);
	op_stkvar	(x,	1);
	create_insn	(x=0X1862A);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1862F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18636);
	op_stkvar	(x,	1);
	create_insn	(x=0X18639);
	op_hex		(x,	1);
	create_insn	(x=0X1863B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1863E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18642);
	op_stkvar	(x,	1);
	create_insn	(x=0X18645);
	op_hex		(x,	1);
	create_insn	(x=0X18647);
	op_stkvar	(x,	1);
	create_insn	(x=0X1864A);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1864F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18654);
	op_stkvar	(x,	1);
	create_insn	(x=0X18659);
	op_stkvar	(x,	1);
	create_insn	(x=0X1865C);
	op_hex		(x,	1);
	create_insn	(x=0X1865E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18661);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18664);
	op_stkvar	(x,	1);
	create_insn	(x=0X18667);
	op_hex		(x,	1);
	create_insn	(x=0X18669);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1866C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18672);
	op_stkvar	(x,	1);
	create_insn	(x=0X18675);
	op_hex		(x,	1);
	create_insn	(x=0X18677);
	op_stkvar	(x,	1);
	create_insn	(x=0X1867A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1867F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18684);
	op_stkvar	(x,	0);
	create_insn	(x=0X18689);
	op_stkvar	(x,	0);
	create_insn	(x=0X1868F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18692);
	op_hex		(x,	1);
	create_insn	(x=0X18694);
	op_stkvar	(x,	1);
	create_insn	(x=0X18697);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1869A);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1869F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X186A7);
	op_hex		(x,	1);
	create_insn	(x=0X186A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X186AC);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186AF);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186B4);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X186BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X186BD);
	op_hex		(x,	1);
	create_insn	(x=0X186BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X186C2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X186CB);
	op_hex		(x,	1);
	create_insn	(x=0X186CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X186D0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186D3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186DB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X186E3);
	op_hex		(x,	1);
	create_insn	(x=0X186E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X186E8);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186EB);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186F3);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X186FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X18700);
	op_stkvar	(x,	0);
	create_insn	(x=0X18707);
	op_stkvar	(x,	1);
	create_insn	(x=0X1870A);
	op_hex		(x,	1);
	create_insn	(x=0X1870C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1870F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18716);
	op_stkvar	(x,	1);
	create_insn	(x=0X18719);
	op_hex		(x,	1);
	create_insn	(x=0X1871B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1871E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18721);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18724);
	op_stkvar	(x,	1);
	create_insn	(x=0X18727);
	op_hex		(x,	1);
	create_insn	(x=0X18729);
	op_stkvar	(x,	1);
	set_cmt	(0X1872C,	"54 = car_rc2",	0);
	create_insn	(x=0X18739);
	op_stkvar	(x,	1);
	create_insn	(x=0X1873C);
	op_hex		(x,	1);
	create_insn	(x=0X1873E);
	op_stkvar	(x,	1);
	set_cmt	(0X18741,	"64 = car_rc4",	0);
	create_insn	(x=0X18748);
	op_stkvar	(x,	1);
	create_insn	(x=0X1874B);
	op_hex		(x,	1);
	create_insn	(x=0X1874D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18750);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18753);
	op_stkvar	(x,	1);
	create_insn	(x=0X1875D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18764);
	op_stkvar	(x,	1);
	create_insn	(x=0X18767);
	op_hex		(x,	1);
	create_insn	(x=0X18769);
	op_stkvar	(x,	1);
	create_insn	(x=0X1876C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18771);
	op_hex		(x,	1);
	create_insn	(x=0X18775);
	op_hex		(x,	1);
	create_insn	(x=0X18777);
	op_hex		(x,	1);
	create_insn	(x=0X18779);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1877C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1877F);
	op_hex		(x,	1);
	create_insn	(x=0X18781);
	op_stkvar	(x,	1);
	create_insn	(x=0X18784);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18791);
	op_stkvar	(x,	1);
	create_insn	(x=0X18794);
	op_stkvar	(x,	1);
	create_insn	(x=0X18797);
	op_hex		(x,	1);
	create_insn	(x=0X18799);
	op_stkvar	(x,	1);
	create_insn	(x=0X1879F);
	op_stkvar	(x,	1);
	create_insn	(x=0X187A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X187A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X187A8);
	op_stkvar	(x,	1);
	create_insn	(0X187B2);
	set_name	(0X187B2,	"upd_statef20_from_steer_input");
	create_insn	(x=0X187B5);
	op_hex		(x,	1);
	create_insn	(x=0X187C5);
	op_hex		(x,	1);
	create_insn	(x=0X187C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X187CD);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X187D3,	E_PREV + 0,	"After (add bx, ax) it seems the low bx byte contains");
	update_extra_cmt		(0X187D3,	E_PREV + 1,	"speed2 / 4096 on the middle 4 bits and the");
	update_extra_cmt		(0X187D3,	E_PREV + 2,	"steering input on the lowest-significant two.");
	update_extra_cmt		(0X187D3,	E_NEXT + 0,	"That means there are 64 possible values for it,");
	update_extra_cmt		(0X187D3,	E_NEXT + 1,	"which makes sense considering how it is used...");
	create_insn	(0X187E8);
	update_extra_cmt		(0X187F9,	E_PREV + 0,	"This parenthetical block seems to be a");
	update_extra_cmt		(0X187F9,	E_PREV + 1,	"corrective procedure for low speeds.");
	update_extra_cmt		(0X18800,	E_PREV + 0,	"di = field20");
	create_insn	(x=0X18804);
	op_stkvar	(x,	1);
	set_cmt	(0X1880E,	"tables?! With 40h values!!",	0);
	create_insn	(x=0X18814);
	op_hex		(x,	1);
	create_insn	(0X18820);
	create_insn	(0X1882E);
	create_insn	(0X18850);
	create_insn	(x=0X18874);
	op_stkvar	(x,	1);
	create_insn	(x=0X1887A);
	op_stkvar	(x,	1);
	set_cmt	(0X18889,	"int",	0);
	create_insn	(x=0X1888F);
	op_hex		(x,	1);
	create_insn	(0X188A4);
	set_name	(0X188A4,	"audio_carstate");
	create_insn	(x=0X188A7);
	op_hex		(x,	1);
	create_insn	(0X188B6);
	create_insn	(x=0X188C3);
	op_hex		(x,	1);
	create_insn	(x=0X188D3);
	op_hex		(x,	1);
	create_insn	(x=0X188D6);
	op_hex		(x,	1);
	create_insn	(x=0X188E6);
	op_hex		(x,	1);
	create_insn	(x=0X188F0);
	op_hex		(x,	1);
	create_insn	(x=0X18900);
	op_hex		(x,	1);
	create_insn	(x=0X18903);
	op_hex		(x,	1);
	create_insn	(x=0X18913);
	op_hex		(x,	1);
	create_insn	(0X18931);
	create_insn	(0X1893A);
	create_insn	(x=0X18943);
	op_hex		(x,	1);
	create_insn	(x=0X18945);
	op_hex		(x,	1);
	create_insn	(x=0X1894B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18957);
	op_hex		(x,	1);
	create_insn	(x=0X18959);
	op_hex		(x,	1);
	create_insn	(x=0X1895F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1896B);
	op_hex		(x,	1);
	create_insn	(x=0X1896D);
	op_hex		(x,	1);
	create_insn	(x=0X18973);
	op_stkvar	(x,	0);
	create_insn	(x=0X1897F);
	op_hex		(x,	1);
	create_insn	(x=0X18981);
	op_hex		(x,	1);
	create_insn	(x=0X18987);
	op_stkvar	(x,	0);
	create_insn	(x=0X18993);
	op_hex		(x,	1);
	create_insn	(x=0X18995);
	op_hex		(x,	1);
	create_insn	(x=0X1899B);
	op_stkvar	(x,	0);
	create_insn	(x=0X189A7);
	op_hex		(x,	1);
	create_insn	(x=0X189A9);
	op_hex		(x,	1);
	create_insn	(x=0X189AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X189C2);
	op_hex		(x,	1);
	create_insn	(x=0X189C4);
	op_hex		(x,	1);
	create_insn	(x=0X189CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X189D6);
	op_hex		(x,	1);
	create_insn	(x=0X189D8);
	op_hex		(x,	1);
	create_insn	(x=0X189DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X189EA);
	op_hex		(x,	1);
	create_insn	(x=0X189EC);
	op_hex		(x,	1);
	create_insn	(x=0X189F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X189FE);
	op_hex		(x,	1);
	create_insn	(x=0X18A00);
	op_hex		(x,	1);
	create_insn	(x=0X18A06);
	op_stkvar	(x,	0);
	create_insn	(x=0X18A12);
	op_hex		(x,	1);
	create_insn	(x=0X18A14);
	op_hex		(x,	1);
	create_insn	(x=0X18A1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X18A26);
	op_hex		(x,	1);
	create_insn	(x=0X18A28);
	op_hex		(x,	1);
	create_insn	(x=0X18A2E);
	op_stkvar	(x,	0);
	create_insn	(0X18A41);
	create_insn	(0X18A4E);
	create_byte	(0X18A50);
	make_array	(0X18A50,	0X2);
	create_insn	(0X18A52);
	create_insn	(x=0X18A59);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A67);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A71);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A79);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A7C);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X18A82,	E_PREV + 0,	"Copying car data to dseg...");
	create_insn	(x=0X18A89);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18A91);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ACA);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ACD);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B01);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B07);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B13);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B19);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B25);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B31);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B3A);
	op_stkvar	(x,	0);
	create_insn	(0X18B42);
	create_insn	(x=0X18B48);
	op_hex		(x,	1);
	create_insn	(x=0X18B4C);
	op_hex		(x,	1);
	create_insn	(x=0X18B51);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B54);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18B5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B62);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X18B6E);
	create_insn	(x=0X18B74);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18B7B);
	op_hex		(x,	1);
	create_insn	(x=0X18B7F);
	op_hex		(x,	1);
	create_insn	(x=0X18B89);
	op_stkvar	(x,	0);
	create_insn	(x=0X18B8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18B8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B95);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BC4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18BCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BD8);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X18BDF);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18BE5);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18BE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BF4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18BFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X18BFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C05);
	op_hex		(x,	1);
	create_insn	(x=0X18C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C0B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C15);
	op_hex		(x,	1);
	create_insn	(x=0X18C17);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C1A);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X18C1E);
	op_hex		(x,	1);
	create_insn	(x=0X18C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C25);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C2B);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C32);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C3A);
	op_hex		(x,	1);
	create_insn	(x=0X18C3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C44);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C4C);
	op_hex		(x,	1);
	create_insn	(x=0X18C4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C56);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C5C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C62);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C66);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18C6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C70);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C78);
	op_hex		(x,	1);
	create_insn	(x=0X18C7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C81);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C90);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C93);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C96);
	op_stkvar	(x,	0);
	create_insn	(x=0X18C9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18CA4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18CAC);
	op_stkvar	(x,	0);
	create_insn	(0X18CB6);
	create_insn	(0X18CD8);
	set_name	(0X18CD8,	"audio_unk3");
	create_insn	(x=0X18CE2);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18CE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X18CF0);
	op_hex		(x,	1);
	create_insn	(x=0X18CF3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X18CF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D01);
	op_hex		(x,	1);
	create_insn	(0X18D06);
	create_insn	(x=0X18D09);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D2D);
	op_hex		(x,	1);
	create_insn	(x=0X18D37);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D5B);
	op_hex		(x,	1);
	create_insn	(0X18D60);
	create_insn	(x=0X18D63);
	op_hex		(x,	1);
	create_insn	(x=0X18D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D72);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D7C);
	op_hex		(x,	1);
	create_insn	(x=0X18D7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D84);
	op_hex		(x,	1);
	create_insn	(x=0X18D86);
	op_stkvar	(x,	0);
	create_insn	(x=0X18D89);
	op_stkvar	(x,	1);
	set_cmt	(0X18D8E,	"* sizeof(struct TRACKOBJECT)",	1);
	create_insn	(x=0X18D90);
	op_hex		(x,	1);
	create_insn	(x=0X18D94);
	op_hex		(x,	1);
	create_insn	(x=0X18D98);
	op_hex		(x,	1);
	create_insn	(x=0X18D9A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18D9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DAA);
	op_stkvar	(x,	1);
	set_cmt	(0X18DAF,	"* sizeof(struct TRKOBJINFO)",	1);
	create_insn	(x=0X18DB1);
	op_hex		(x,	1);
	create_insn	(x=0X18DB5);
	op_hex		(x,	1);
	create_insn	(x=0X18DB9);
	op_hex		(x,	1);
	create_insn	(x=0X18DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DCE);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X18DD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DDE);
	op_hex		(x,	1);
	create_insn	(x=0X18DE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DE8);
	op_hex		(x,	1);
	create_insn	(x=0X18DEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DF5);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X18DF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X18DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DFF);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X18E02);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E05);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E08);
	op_hex		(x,	1);
	create_insn	(x=0X18E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E11);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18E15);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E1D);
	op_stroff	(x,	0,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X18E24);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E29);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E35);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X18E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E43);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E46);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E49);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E50);
	op_hex		(x,	1);
	create_insn	(x=0X18E54);
	op_hex		(x,	1);
	create_insn	(x=0X18E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E79);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X18E7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E80);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E83);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E8A);
	op_hex		(x,	1);
	create_insn	(x=0X18E8E);
	op_hex		(x,	1);
	create_insn	(x=0X18E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E95);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E98);
	op_stkvar	(x,	0);
	create_insn	(x=0X18E9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EB6);
	op_stkvar	(x,	1);
	create_insn	(0X18EC5);
	create_insn	(0X18ECD);
	create_insn	(x=0X18ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ED5);
	op_stkvar	(x,	0);
	create_insn	(x=0X18ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X18EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X18EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X18EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X18EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X18EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F04);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F11);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F1B);
	op_hex		(x,	1);
	create_insn	(x=0X18F1D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18F21);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F35);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F38);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F3E);
	op_hex		(x,	1);
	create_insn	(x=0X18F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F49);
	op_hex		(x,	1);
	create_insn	(x=0X18F4B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18F52);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F57);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F67);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F77);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F85);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F91);
	op_stkvar	(x,	0);
	create_insn	(x=0X18F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FA1);
	op_hex		(x,	1);
	create_insn	(x=0X18FA3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18FA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FB0);
	op_hex		(x,	1);
	create_insn	(x=0X18FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FBB);
	op_hex		(x,	1);
	create_insn	(x=0X18FBD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FC9);
	op_hex		(x,	1);
	create_insn	(x=0X18FCB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X18FCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FE5);
	op_hex		(x,	1);
	create_insn	(x=0X18FE7);
	op_hex		(x,	1);
	create_insn	(x=0X18FE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FEC);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X18FEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X18FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FF7);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X18FFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X19004);
	op_stkvar	(x,	1);
	create_insn	(x=0X1900E);
	op_hex		(x,	1);
	create_insn	(x=0X19010);
	op_hex		(x,	1);
	create_insn	(x=0X19012);
	op_stkvar	(x,	1);
	create_insn	(x=0X19015);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X19018);
	op_stkvar	(x,	1);
	create_insn	(x=0X1901E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19028);
	op_hex		(x,	1);
	create_insn	(x=0X1902A);
	op_hex		(x,	1);
	create_insn	(x=0X1902C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1902F);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X19032);
	op_stkvar	(x,	1);
	create_insn	(x=0X19038);
	op_stkvar	(x,	1);
	create_insn	(x=0X19040);
	op_stkvar	(x,	1);
	create_insn	(x=0X19046);
	op_stkvar	(x,	1);
	create_insn	(x=0X1904C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1904F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19055);
	op_stkvar	(x,	1);
	create_insn	(x=0X19059);
	op_stkvar	(x,	1);
	create_insn	(0X1906C);
	create_insn	(0X19074);
	set_name	(0X19074,	"car_car_coll_detect_maybe");
	create_insn	(x=0X19077);
	op_hex		(x,	1);
	create_insn	(x=0X1907C);
	op_stkvar	(x,	1);
	set_cmt	(0X1907F,	"the 4th field of collPoints",	0);
	create_insn	(x=0X19082);
	op_stkvar	(x,	1);
	create_insn	(x=0X19088);
	op_stkvar	(x,	1);
	create_insn	(x=0X1908B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1909E);
	op_stkvar	(x,	1);
	create_insn	(x=0X190A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X190B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190BB);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X190DA,	E_PREV + 0,	"The output of polarRadius3D is");
	update_extra_cmt		(0X190DA,	E_PREV + 1,	"the distance between the cars.");
	update_extra_cmt		(0X190DA,	E_PREV + 2,	"If the cars are furhter apart");
	update_extra_cmt		(0X190DA,	E_PREV + 3,	"than si, the function returns.");
	create_insn	(x=0X190DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X190DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X190E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X190E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X190ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X190F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X190F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X190FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19102);
	op_stkvar	(x,	0);
	create_insn	(x=0X19105);
	op_stkvar	(x,	1);
	create_insn	(x=0X1910E);
	op_hex		(x,	1);
	create_insn	(x=0X19118);
	op_stkvar	(x,	1);
	create_insn	(x=0X19132);
	op_hex		(x,	1);
	create_insn	(x=0X19135);
	op_stkvar	(x,	0);
	create_insn	(x=0X19138);
	op_stkvar	(x,	0);
	create_insn	(x=0X1913E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19145);
	op_stkvar	(x,	0);
	create_insn	(x=0X19148);
	op_stkvar	(x,	0);
	create_insn	(x=0X1914D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19153);
	op_hex		(x,	1);
	create_insn	(x=0X19155);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1915C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1916C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1916F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19173);
	op_stkvar	(x,	0);
	create_insn	(x=0X19176);
	op_stkvar	(x,	1);
	create_insn	(x=0X1917F);
	op_hex		(x,	1);
	create_insn	(x=0X19182);
	op_stkvar	(x,	1);
	create_insn	(x=0X19187);
	op_stkvar	(x,	0);
	create_insn	(x=0X1918D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19193);
	op_stkvar	(x,	0);
	create_insn	(x=0X19196);
	op_stkvar	(x,	1);
	create_insn	(x=0X1919C);
	op_hex		(x,	1);
	create_insn	(x=0X191A0);
	op_hex		(x,	1);
	create_insn	(x=0X191A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X191A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X191AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X191B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X191B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X191BE);
	op_hex		(x,	1);
	create_insn	(x=0X191C0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X191CA);
	op_stkvar	(x,	1);
	create_insn	(0X191D2);
	create_insn	(x=0X191D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X191E7);
	op_hex		(x,	1);
	create_insn	(x=0X191EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X191ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X191F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X191F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X191FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X19203);
	op_hex		(x,	1);
	create_insn	(x=0X19207);
	op_hex		(x,	1);
	create_insn	(x=0X1920D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19215);
	op_stkvar	(x,	0);
	create_insn	(x=0X1921E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19227);
	op_stkvar	(x,	0);
	create_insn	(x=0X1922A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1922E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19231);
	op_stkvar	(x,	1);
	create_insn	(x=0X1923A);
	op_hex		(x,	1);
	create_insn	(x=0X1923D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19243);
	op_stkvar	(x,	1);
	create_insn	(x=0X19246);
	op_stkvar	(x,	1);
	create_insn	(x=0X19254);
	op_stkvar	(x,	0);
	create_insn	(x=0X19259);
	op_stkvar	(x,	0);
	create_insn	(x=0X19263);
	op_stkvar	(x,	1);
	create_insn	(x=0X19268);
	op_stkvar	(x,	1);
	create_insn	(0X1927A);
	create_insn	(x=0X1927D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19297);
	op_hex		(x,	1);
	create_insn	(x=0X1929A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1929D);
	op_stkvar	(x,	0);
	create_insn	(x=0X192A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X192AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X192AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X192B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X192B9);
	op_hex		(x,	1);
	create_insn	(x=0X192BB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X192C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X192CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X192D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X192D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X192D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X192DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X192E5);
	op_hex		(x,	1);
	create_insn	(x=0X192E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X192ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X192F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X192F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X192FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19302);
	op_hex		(x,	1);
	create_insn	(x=0X19306);
	op_hex		(x,	1);
	create_insn	(x=0X19309);
	op_stkvar	(x,	1);
	create_insn	(x=0X1930C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19315);
	op_stkvar	(x,	0);
	create_insn	(x=0X19318);
	op_stkvar	(x,	0);
	create_insn	(x=0X1931E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19324);
	op_hex		(x,	1);
	create_insn	(x=0X19326);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19330);
	op_stkvar	(x,	1);
	create_insn	(0X19338);
	create_insn	(x=0X1933C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1934D);
	op_hex		(x,	1);
	create_insn	(x=0X19350);
	op_stkvar	(x,	0);
	create_insn	(x=0X19353);
	op_stkvar	(x,	0);
	create_insn	(x=0X1935A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1935D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19366);
	op_stkvar	(x,	1);
	create_insn	(x=0X1936C);
	op_hex		(x,	1);
	create_insn	(x=0X19370);
	op_hex		(x,	1);
	create_insn	(x=0X19376);
	op_stkvar	(x,	1);
	create_insn	(x=0X1937E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19387);
	op_stkvar	(x,	0);
	create_insn	(x=0X19390);
	op_stkvar	(x,	0);
	create_insn	(x=0X19393);
	op_stkvar	(x,	1);
	create_insn	(x=0X19397);
	op_stkvar	(x,	0);
	create_insn	(x=0X1939A);
	op_stkvar	(x,	1);
	create_insn	(x=0X193A3);
	op_hex		(x,	1);
	create_insn	(x=0X193A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X193AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X193AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X193BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X193C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X193CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X193D1);
	op_stkvar	(x,	1);
	create_insn	(0X193DC);
	create_insn	(0X193E0);
	set_name	(0X193E0,	"init_plantrak");
	create_insn	(x=0X193E3);
	op_hex		(x,	1);
	create_insn	(x=0X193F0);
	op_hex		(x,	1);
	create_insn	(x=0X193FA);
	op_plain_offset	(x,	1,	0X3B1C0);
	op_plain_offset	(x,	129,	0X3B1C0);
	create_insn	(x=0X19400);
	op_seg		(x,	1);
	create_insn	(x=0X1958C);
	op_hex		(x,	1);
	create_insn	(x=0X1958E);
	op_hex		(x,	1);
	create_insn	(x=0X195A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X195A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X195B1);
	op_hex		(x,	1);
	create_insn	(x=0X195B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X195C2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X195CA);
	op_hex		(x,	1);
	create_insn	(x=0X195D7);
	op_hex		(x,	1);
	create_insn	(0X195E0);
	set_name	(0X195E0,	"do_opponent_op");
	update_extra_cmt		(0X195E6,	E_PREV + 0,	"former audio_engine_unk / set_AV_event_triggers");
	update_extra_cmt		(0X195E6,	E_PREV + 1,	"Sets a player as crashed.");
	update_extra_cmt		(0X195E6,	E_PREV + 2,	"Events include special sounds, bitmaps and animations");
	update_extra_cmt		(0X195E6,	E_PREV + 3,	"and game screens triggered by game events such as");
	update_extra_cmt		(0X195E6,	E_PREV + 4,	"crashes.");
	create_insn	(0X195E6);
	set_name	(0X195E6,	"update_crash_state");
	create_insn	(x=0X195E9);
	op_hex		(x,	1);
	create_insn	(x=0X195EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X195FC);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19601);
	op_stkvar	(x,	1);
	create_insn	(x=0X19604);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X19612);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1961A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1961E);
	op_stkvar	(x,	1);
	create_insn	(0X1962E);
	create_insn	(0X19636);
	create_insn	(0X19642);
	create_insn	(x=0X1964E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19654);
	op_stkvar	(x,	1);
	create_insn	(x=0X19657);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1965C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1965F);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X19664);
	op_stkvar	(x,	0);
	create_insn	(0X1966D);
	create_insn	(x=0X19676);
	op_stkvar	(x,	0);
	create_insn	(x=0X1967B);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1967F,	E_PREV + 0,	"Is field C9 is the death flag?");
	create_insn	(x=0X1967F);
	op_stkvar	(x,	1);
	create_insn	(x=0X19682);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1968A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1968D);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X19690);
	op_stkvar	(x,	0);
	create_insn	(x=0X19697);
	op_hex		(x,	1);
	create_insn	(x=0X1969A);
	op_stkvar	(x,	0);
	create_insn	(x=0X196A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X196A3);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X196AC);
	op_hex		(x,	1);
	create_insn	(x=0X196AE);
	op_hex		(x,	1);
	create_insn	(x=0X196C1);
	op_stkvar	(x,	0);
	create_insn	(0X196CE);
	create_insn	(x=0X196D7);
	op_hex		(x,	1);
	create_insn	(0X196DE);
	create_insn	(x=0X196EC);
	op_stkvar	(x,	0);
	create_insn	(0X196F8);
	create_insn	(x=0X19701);
	op_hex		(x,	1);
	create_insn	(x=0X19704);
	op_stkvar	(x,	1);
	create_insn	(x=0X19707);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1970C);
	op_stkvar	(x,	0);
	create_insn	(x=0X19710);
	op_stkvar	(x,	0);
	create_insn	(x=0X19719);
	op_stkvar	(x,	1);
	create_insn	(x=0X1971C);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X19725);
	op_hex		(x,	1);
	create_insn	(x=0X19727);
	op_hex		(x,	1);
	create_insn	(x=0X19730);
	op_stkvar	(x,	1);
	create_insn	(x=0X19733);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X19738);
	op_stkvar	(x,	0);
	create_insn	(0X19752);
	create_insn	(0X19760);
	create_insn	(x=0X1976D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19773);
	op_stkvar	(x,	1);
	create_insn	(x=0X19779);
	op_hex		(x,	1);
	update_extra_cmt		(0X19780,	E_PREV + 0,	"This seems to be very very important!");
	update_extra_cmt		(0X19780,	E_PREV + 1,	"It seems these copied variables are");
	update_extra_cmt		(0X19780,	E_PREV + 2,	"used in the evaluation screen.");
	create_insn	(x=0X19780);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19783);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	update_extra_cmt		(0X19794,	E_PREV + 0,	"");
	update_extra_cmt		(0X19794,	E_PREV + 1,	"This function appears to be used to rotate the");
	update_extra_cmt		(0X19794,	E_PREV + 2,	"velocity vector to its correct orientation according");
	update_extra_cmt		(0X19794,	E_PREV + 3,	"to both car direction and plane inclination.");
	create_insn	(0X19794);
	set_name	(0X19794,	"plane_rotate_op");
	create_insn	(x=0X19797);
	op_hex		(x,	1);
	create_insn	(0X197A6);
	create_insn	(x=0X197B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X197B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X197BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X197C1);
	op_stroff	(x,	0,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X197CA);
	op_stroff	(x,	0,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X197D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X197DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X197DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X197E7);
	op_hex		(x,	1);
	set_cmt	(0X197F9,	"plane rotation matrix",	0);
	create_insn	(x=0X197FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1980E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19812);
	op_stkvar	(x,	1);
	create_insn	(x=0X1981B);
	op_hex		(x,	1);
	create_insn	(x=0X1981E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19822);
	op_stkvar	(x,	1);
	create_insn	(x=0X19826);
	op_stkvar	(x,	1);
	create_insn	(x=0X1982F);
	op_hex		(x,	1);
	create_insn	(x=0X19832);
	op_stkvar	(x,	0);
	create_insn	(x=0X19835);
	op_stkvar	(x,	1);
	create_insn	(x=0X19840);
	op_hex		(x,	1);
	update_extra_cmt		(0X19845,	E_PREV + 0,	"Hey...pState_f36Mminf40sar2 is an angle!");
	create_insn	(x=0X19856);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1985F);
	op_hex		(x,	1);
	create_insn	(x=0X19866);
	op_stkvar	(x,	1);
	create_insn	(x=0X1986A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1986E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19877);
	op_hex		(x,	1);
	create_insn	(x=0X1987A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1988D,	"plane rotation matrix.",	0);
	create_insn	(x=0X19892);
	op_stkvar	(x,	1);
	create_insn	(x=0X1989A);
	op_hex		(x,	1);
	create_insn	(x=0X198A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X198A8,	"sizeof plane",	0);
	create_insn	(x=0X198A8);
	op_hex		(x,	1);
	create_insn	(x=0X198BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X198C2);
	create_insn	(x=0X198D8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X198E1);
	op_hex		(x,	1);
	create_insn	(x=0X198EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X198EE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X198F2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X198FB);
	op_hex		(x,	1);
	create_insn	(x=0X198FE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19902);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19906);
	op_stkvar	(x,	1);
	create_insn	(x=0X1990C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19910);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19914);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1991D);
	op_hex		(x,	1);
	update_extra_cmt		(0X19926,	E_PREV + 0,	"");
	update_extra_cmt		(0X19926,	E_PREV + 1,	"plane_origin_op:");
	update_extra_cmt		(0X19926,	E_PREV + 2,	"Given a global coordinates vector and a");
	update_extra_cmt		(0X19926,	E_PREV + 3,	"planindex, calculates the inner product");
	update_extra_cmt		(0X19926,	E_PREV + 4,	"between the corresponding vector in");
	update_extra_cmt		(0X19926,	E_PREV + 5,	"coordinates relative to the plane origin");
	update_extra_cmt		(0X19926,	E_PREV + 6,	"and the plane normal. Obvious use is to");
	update_extra_cmt		(0X19926,	E_PREV + 7,	"find on which side of a plane we are.");
	update_extra_cmt		(0X19926,	E_PREV + 8,	"");
	create_insn	(0X19926);
	set_name	(0X19926,	"plane_origin_op");
	create_insn	(x=0X19929);
	op_hex		(x,	1);
	create_insn	(x=0X1992F);
	op_stkvar	(x,	0);
	set_cmt	(0X1993E,	"sizeof PLANE",	1);
	create_insn	(x=0X1993E);
	op_hex		(x,	1);
	create_insn	(x=0X19941);
	op_stkvar	(x,	1);
	create_insn	(x=0X1994C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1994F);
	op_stkvar	(x,	0);
	create_insn	(x=0X19952);
	op_stkvar	(x,	1);
	create_insn	(x=0X19955);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X1995D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19960);
	op_stkvar	(x,	1);
	create_insn	(x=0X19963);
	op_stkvar	(x,	1);
	set_cmt	(0X19966,	"y",	0);
	create_insn	(x=0X19966);
	op_stkvar	(x,	0);
	create_insn	(x=0X19969);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1996F,	E_PREV + 0,	"So this eventually becomes an inner product");
	update_extra_cmt		(0X1996F,	E_PREV + 1,	"between the plane normal and the projected");
	update_extra_cmt		(0X1996F,	E_PREV + 2,	"position vector in tile coordinates.");
	create_insn	(x=0X1996F);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X19977);
	op_stkvar	(x,	0);
	create_insn	(x=0X1997A);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X19982);
	op_stkvar	(x,	0);
	create_insn	(x=0X19985);
	op_stkvar	(x,	1);
	create_insn	(x=0X19988);
	op_stkvar	(x,	1);
	set_cmt	(0X1998B,	"x",	0);
	create_insn	(x=0X1998B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1998E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19991);
	op_stkvar	(x,	1);
	set_cmt	(0X19994,	"z",	0);
	create_insn	(x=0X19994);
	op_stkvar	(x,	0);
	create_insn	(x=0X19999);
	op_stroff	(x,	1,	GetStrucIdByName("PLANE"),	0);
	create_insn	(x=0X1999E);
	op_stkvar	(x,	0);
	create_insn	(x=0X199A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X199A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X199AB);
	op_hex		(x,	1);
	create_insn	(0X199B2);
	set_name	(0X199B2,	"vec_normalInnerProduct");
	create_insn	(x=0X199B5);
	op_hex		(x,	1);
	set_cmt	(0X199BA,	"length of normal vector => normalization",	0);
	create_insn	(x=0X199C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X199C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X199D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X199DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X199F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X199FD);
	op_stkvar	(x,	1);
	set_cmt	(0X19A06,	"1st multiplication lo-byte",	0);
	create_insn	(x=0X19A06);
	op_stkvar	(x,	0);
	set_cmt	(0X19A09,	"1st multiplication hi-byte",	0);
	create_insn	(x=0X19A09);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A17);
	op_stkvar	(x,	1);
	set_cmt	(0X19A20,	"/2000h",	0);
	create_insn	(0X19A2C);
	set_name	(0X19A2C,	"state_op_unk");
	create_insn	(x=0X19A2F);
	op_hex		(x,	1);
	create_insn	(x=0X19A34);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A40);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A45);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A4D);
	op_hex		(x,	1);
	create_insn	(x=0X19A4F);
	op_hex		(x,	1);
	create_insn	(x=0X19A54);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A57);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A64);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A67);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A71);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A76);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A80);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A89);
	op_hex		(x,	1);
	create_insn	(x=0X19A8B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19A92);
	op_stkvar	(x,	0);
	create_insn	(x=0X19A9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AA6);
	op_stkvar	(x,	0);
	create_insn	(0X19AB0);
	create_insn	(0X19AB9);
	create_insn	(x=0X19ABB);
	op_hex		(x,	1);
	create_insn	(x=0X19ABD);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AC2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X19ACC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AD3);
	op_hex		(x,	1);
	create_insn	(x=0X19AD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AD8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19ADE);
	op_hex		(x,	1);
	create_insn	(x=0X19AE0);
	op_hex		(x,	1);
	create_insn	(x=0X19AE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X19AE9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AED);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AF4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AF8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AFF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B03);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B0C);
	op_hex		(x,	1);
	create_insn	(x=0X19B0E);
	op_hex		(x,	1);
	create_insn	(x=0X19B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B13);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B1C);
	op_hex		(x,	1);
	create_insn	(x=0X19B1E);
	op_hex		(x,	1);
	create_insn	(x=0X19B22);
	op_hex		(x,	1);
	create_insn	(x=0X19B24);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B49);
	op_hex		(x,	1);
	create_insn	(x=0X19B4E);
	op_hex		(x,	1);
	create_insn	(x=0X19B50);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B5B);
	op_hex		(x,	1);
	create_insn	(x=0X19B5F);
	op_hex		(x,	1);
	create_insn	(x=0X19B67);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B70);
	op_hex		(x,	1);
	create_insn	(x=0X19B72);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B77);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B80);
	op_hex		(x,	1);
	create_insn	(x=0X19B82);
	op_hex		(x,	1);
	create_insn	(x=0X19B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B87);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19B8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X19B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B91);
	op_stkvar	(x,	0);
	create_insn	(0X19B99);
	create_insn	(0X19BA0);
	create_insn	(x=0X19BA3);
	op_hex		(x,	1);
	create_insn	(x=0X19BA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BB6);
	op_hex		(x,	1);
	create_insn	(x=0X19BB8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19BBD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X19BCB);
	create_insn	(x=0X19BCD);
	op_hex		(x,	1);
	create_insn	(x=0X19BCF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19BDA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19BE7);
	op_hex		(x,	1);
	create_insn	(x=0X19BEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BED);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X19BF9);
	op_hex		(x,	1);
	create_insn	(x=0X19BFB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19BFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C06);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C09);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C12);
	op_hex		(x,	1);
	create_insn	(x=0X19C1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C1F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C23);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C27);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C2B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C2F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C35);
	op_hex		(x,	1);
	create_insn	(x=0X19C37);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19C3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C48);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C4C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C57);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C63);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C67);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C6D);
	op_hex		(x,	1);
	create_insn	(x=0X19C6F);
	op_hex		(x,	1);
	create_insn	(x=0X19C71);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19C75);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X19C88);
	create_insn	(x=0X19C8A);
	op_hex		(x,	1);
	create_insn	(x=0X19C8C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19C96);
	op_stkvar	(x,	1);
	create_insn	(0X19CA2);
	set_name	(0X19CA2,	"setup_aero_trackdata");
	create_insn	(x=0X19CA5);
	op_hex		(x,	1);
	create_insn	(x=0X19CAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X19CB3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19CB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X19CBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X19CC2);
	op_hex		(x,	1);
	create_insn	(x=0X19CC6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19CD0);
	op_hex		(x,	1);
	update_extra_cmt		(0X19CE7,	E_PREV + 0,	"Looping over scaled car speeds, doing");
	update_extra_cmt		(0X19CE7,	E_PREV + 1,	"FDrag = kAero * speed * speeed.");
	update_extra_cmt		(0X19D03,	E_PREV + 0,	"Division by 2^9.");
	update_extra_cmt		(0X19D03,	E_PREV + 1,	"2^8 shifts one full");
	update_extra_cmt		(0X19D03,	E_PREV + 2,	"byte, and it is");
	update_extra_cmt		(0X19D03,	E_PREV + 3,	"known there is a 1/2");
	update_extra_cmt		(0X19D03,	E_PREV + 4,	"factor in FDrag.");
	create_insn	(x=0X19D03);
	op_hex		(x,	1);
	create_insn	(x=0X19D05);
	op_hex		(x,	1);
	update_extra_cmt		(0X19D0B,	E_PREV + 0,	"Writing the table. Maximum");
	update_extra_cmt		(0X19D0B,	E_PREV + 1,	"speed is 40h.");
	create_insn	(x=0X19D0D);
	op_hex		(x,	1);
	create_insn	(x=0X19D1C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19D20);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D23);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D2B);
	op_hex		(x,	1);
	create_insn	(x=0X19D30);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19D36);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19D3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X19D45);
	op_hex		(x,	1);
	create_insn	(x=0X19D49);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19D53);
	op_hex		(x,	1);
	create_insn	(x=0X19D86);
	op_hex		(x,	1);
	create_insn	(x=0X19D88);
	op_hex		(x,	1);
	create_insn	(x=0X19D90);
	op_hex		(x,	1);
	create_insn	(x=0X19D9F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19DA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X19DAE);
	op_hex		(x,	1);
	create_insn	(x=0X19DB3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19DBC);
	op_hex		(x,	1);
	create_insn	(0X19DC6);
	set_name	(0X19DC6,	"update_rpm_from_speed");
	create_insn	(x=0X19DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DD0);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X19DD6,	E_PREV + 0,	"This makes:");
	update_extra_cmt		(0X19DD6,	E_PREV + 1,	"cx = speed * ratio /2^16");
	create_insn	(x=0X19DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DE0);
	op_stkvar	(x,	1);
	create_insn	(0X19DE8);
	set_name	(0X19DE8,	"nopsub_19DE8");
	create_insn	(x=0X19DEE);
	op_stkvar	(x,	1);
	create_insn	(0X19DFB);
	create_insn	(0X19DFF);
	set_name	(0X19DFF,	"nopsub_19DFF");
	create_insn	(x=0X19E02);
	op_stkvar	(x,	1);
	set_cmt	(0X19E05,	"reserved for user interrupt",	0);
	create_insn	(x=0X19E05);
	op_hex		(x,	0);
	create_insn	(0X19E09);
	set_name	(0X19E09,	"nopsub_19E09");
	create_insn	(x=0X19E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19E0F);
	op_hex		(x,	0);
	create_insn	(0X19E13);
	set_name	(0X19E13,	"nopsub_19E13");
	create_insn	(x=0X19E18);
	op_stkvar	(x,	1);
	set_cmt	(0X19E1B,	"reserved for user interrupt",	0);
	create_insn	(x=0X19E1B);
	op_hex		(x,	0);
	create_insn	(0X19E21);
	set_name	(0X19E21,	"init_kevinrandom");
	create_insn	(x=0X19E25);
	op_stkvar	(x,	1);
	create_insn	(0X19E4E);
	set_name	(0X19E4E,	"get_kevinrandom_seed");
	create_insn	(x=0X19E52);
	op_stkvar	(x,	1);
	create_insn	(0X19E7B);
	set_name	(0X19E7B,	"get_kevinrandom");
	create_insn	(0X19EC9);
	set_name	(0X19EC9,	"intr0_handler");
	create_insn	(x=0X19ECD);
	op_seg		(x,	1);
	create_insn	(0X19EE8);
	set_name	(0X19EE8,	"init_div0");
	set_cmt	(0X19EED,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector",	0);
	create_insn	(x=0X19EED);
	op_hex		(x,	0);
	create_insn	(x=0X19EF7);
	op_seg		(x,	1);
	create_insn	(x=0X19EFC);
	op_plain_offset	(x,	1,	0X19DC0);
	op_plain_offset	(x,	129,	0X19DC0);
	set_cmt	(0X19F03,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X19F03);
	op_hex		(x,	0);
	create_byte	(0X19F07);
	make_array	(0X19F07,	0XB);
	create_insn	(0X19F12);
	create_insn	(0X19F14);
	create_insn	(x=0X19F17);
	op_hex		(x,	1);
	create_insn	(0X19F26);
	create_insn	(0X19F35);
	create_insn	(0X19F3F);
	create_insn	(x=0X19F41);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X19F90);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19F94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19F98);
	op_stkvar	(x,	0);
	create_insn	(x=0X19F9B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19F9F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19FA3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X19FA7,	"number of rects in the array",	0);
	create_insn	(x=0X19FB0);
	op_hex		(x,	1);
	create_insn	(x=0X19FBA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19FBE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19FCC);
	op_hex		(x,	1);
	create_insn	(0X19FD8);
	create_insn	(x=0X19FDA);
	op_hex		(x,	1);
	create_insn	(x=0X19FDC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19FE4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X19FE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X19FEC);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X19FEF);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X19FF2);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X19FF5);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X19FFC);
	op_hex		(x,	1);
	create_insn	(x=0X1A00F);
	op_hex		(x,	1);
	create_insn	(x=0X1A01E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A021);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A024);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A030);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A033);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A036);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A039);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A03C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1A043);
	op_hex		(x,	1);
	create_insn	(x=0X1A05B);
	op_hex		(x,	1);
	create_insn	(x=0X1A07A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A07E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1A096);
	set_name	(0X1A096,	"init_rect_arrays");
	create_insn	(x=0X1A099);
	op_hex		(x,	1);
	create_insn	(x=0X1A0A6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0B7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0CA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A0DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1A0E9,	"there are 15 rects in the array",	0);
	create_insn	(0X1A0F4);
	set_name	(0X1A0F4,	"update_frame");
	create_insn	(x=0X1A0F7);
	op_hex		(x,	1);
	create_insn	(x=0X1A0FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A102);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A10E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A114);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A11A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A122);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A128);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A135);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A13A);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1A144);
	create_insn	(x=0X1A14A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A14D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A155);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A162);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A177);
	op_hex		(x,	1);
	create_insn	(x=0X1A179);
	op_hex		(x,	1);
	create_insn	(x=0X1A17F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A18C);
	op_hex		(x,	1);
	create_insn	(x=0X1A18E);
	op_hex		(x,	1);
	create_insn	(x=0X1A194);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1A1);
	op_hex		(x,	1);
	create_insn	(x=0X1A1A3);
	op_hex		(x,	1);
	create_insn	(x=0X1A1A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1B6);
	op_stkvar	(x,	0);
	create_insn	(0X1A1BE);
	create_insn	(x=0X1A1C7);
	op_hex		(x,	1);
	create_insn	(x=0X1A1C9);
	op_hex		(x,	1);
	create_insn	(x=0X1A1CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1DC);
	op_hex		(x,	1);
	create_insn	(x=0X1A1DE);
	op_hex		(x,	1);
	create_insn	(x=0X1A1E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A1F1);
	op_hex		(x,	1);
	create_insn	(x=0X1A1F3);
	op_hex		(x,	1);
	create_insn	(x=0X1A1F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A200);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A206);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A20C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A210);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A215);
	op_stkvar	(x,	0);
	create_insn	(0X1A226);
	create_insn	(0X1A22E);
	create_insn	(0X1A23B);
	create_insn	(x=0X1A23E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A244);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A24A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A253);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A25A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A260);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A26B);
	op_hex		(x,	1);
	create_insn	(x=0X1A26E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A272);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A277);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A27B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A285);
	op_hex		(x,	1);
	create_insn	(x=0X1A288);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A28C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A295);
	op_hex		(x,	1);
	create_insn	(x=0X1A29A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2C5);
	op_hex		(x,	1);
	create_insn	(x=0X1A2C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2DF);
	op_hex		(x,	1);
	create_insn	(x=0X1A2E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A300);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A303);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A310);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A319);
	op_hex		(x,	1);
	create_insn	(x=0X1A31F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A324);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A32E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A331);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A334);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A340);
	op_hex		(x,	1);
	create_insn	(x=0X1A384);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A38A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A390);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A393);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A397);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A39B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A39F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3A8);
	op_hex		(x,	1);
	create_insn	(x=0X1A3AD);
	op_hex		(x,	1);
	create_insn	(x=0X1A3B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3C8);
	op_hex		(x,	1);
	create_insn	(x=0X1A3CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3DF);
	op_hex		(x,	1);
	create_insn	(x=0X1A3E2);
	op_hex		(x,	1);
	create_insn	(x=0X1A3E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A3FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A402);
	op_stkvar	(x,	0);
	create_insn	(0X1A40A);
	create_insn	(x=0X1A410);
	op_hex		(x,	1);
	create_insn	(x=0X1A414);
	op_hex		(x,	1);
	create_insn	(x=0X1A416);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A41C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A420);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A423);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A427);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A42A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A42E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A434);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A438);
	op_hex		(x,	1);
	create_insn	(x=0X1A43B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A43E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A441);
	op_hex		(x,	1);
	create_insn	(x=0X1A444);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A448);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A44B);
	op_hex		(x,	1);
	create_insn	(x=0X1A44E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A455);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A462);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A46D);
	op_hex		(x,	1);
	create_insn	(x=0X1A470);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A474);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A47A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A486);
	op_stkvar	(x,	0);
	create_insn	(0X1A48E);
	create_insn	(x=0X1A494);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A49B);
	op_hex		(x,	1);
	create_insn	(x=0X1A49F);
	op_hex		(x,	1);
	create_insn	(x=0X1A4A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4D0);
	op_stkvar	(x,	0);
	create_insn	(0X1A4E4);
	create_insn	(x=0X1A4E8);
	op_hex		(x,	1);
	create_insn	(x=0X1A4EB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A4EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A4FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A500);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A509);
	op_hex		(x,	1);
	create_insn	(x=0X1A50C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A50F);
	op_hex		(x,	1);
	create_insn	(x=0X1A51A);
	op_hex		(x,	1);
	create_insn	(x=0X1A51C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A520);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A52A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A52E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A537);
	op_hex		(x,	1);
	create_insn	(x=0X1A53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A54B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A551);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A557);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A55D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A561);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A566);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A570);
	op_hex		(x,	1);
	create_insn	(x=0X1A573);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A579);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A580);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A58F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A595);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A599);
	op_hex		(x,	1);
	create_insn	(x=0X1A5B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A5BD);
	op_hex		(x,	1);
	create_insn	(x=0X1A5BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A5C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A5CA);
	op_hex		(x,	1);
	create_insn	(0X1A5DD);
	create_insn	(x=0X1A5DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A5E8);
	op_hex		(x,	1);
	create_insn	(x=0X1A5EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A5F7);
	op_stkvar	(x,	0);
	set_cmt	(0X1A5FB,	"15000",	0);
	create_insn	(x=0X1A5FB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1A601);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A606);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A60B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A615);
	op_hex		(x,	1);
	set_cmt	(0X1A618,	"15000",	0);
	create_insn	(x=0X1A618);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1A61E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A622);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A627);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A631);
	op_hex		(x,	1);
	create_insn	(x=0X1A63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A63F);
	op_hex		(x,	1);
	create_insn	(x=0X1A641);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A648);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A650);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A659);
	op_hex		(x,	1);
	create_insn	(x=0X1A65D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A661);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A664);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A66D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A674);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A678);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A681);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A68F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A699);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A69F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6AF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A6B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6C3);
	op_hex		(x,	1);
	create_insn	(x=0X1A6C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A6FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A706);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A713);
	op_hex		(x,	1);
	create_insn	(x=0X1A719);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A724);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A729);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A72D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A732);
	op_hex		(x,	1);
	create_insn	(x=0X1A734);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A73A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A73E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A74D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A750);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A754);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A758);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A767);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A76B);
	op_stkvar	(x,	0);
	create_insn	(0X1A774);
	create_insn	(x=0X1A77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A782);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A78C);
	op_hex		(x,	1);
	create_insn	(x=0X1A78F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A792);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A797);
	op_stkvar	(x,	1);
	create_insn	(0X1A7AE);
	create_insn	(x=0X1A7B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7C6);
	op_hex		(x,	1);
	create_insn	(x=0X1A7C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A7D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A7FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A803);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A806);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A80D);
	op_hex		(x,	1);
	create_insn	(x=0X1A816);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A81A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A827);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A82E);
	op_hex		(x,	1);
	create_insn	(x=0X1A832);
	op_hex		(x,	1);
	create_insn	(x=0X1A836);
	op_hex		(x,	1);
	create_insn	(x=0X1A838);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1A83F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A843);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A849);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A84D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A853);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A857);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A85B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A85F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A863);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A867);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A86A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A86E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A877);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A87E);
	op_hex		(x,	1);
	create_insn	(x=0X1A882);
	op_hex		(x,	1);
	create_insn	(x=0X1A886);
	op_hex		(x,	1);
	create_insn	(x=0X1A888);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1A88D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A898);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A8B0);
	op_stkvar	(x,	1);
	create_insn	(0X1A8C6);
	create_insn	(x=0X1A8CA);
	op_stkvar	(x,	0);
	create_insn	(0X1A8D2);
	create_insn	(0X1A8D6);
	create_insn	(x=0X1A8DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8E5);
	op_hex		(x,	1);
	create_insn	(x=0X1A8EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A8F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A90E);
	op_stkvar	(x,	0);
	create_insn	(0X1A914);
	create_insn	(0X1A918);
	create_insn	(x=0X1A920);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A927);
	op_hex		(x,	1);
	create_insn	(x=0X1A92D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A933);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A93E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A942);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A946);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A950);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A959);
	op_stkvar	(x,	0);
	create_insn	(0X1A960);
	create_insn	(0X1A964);
	create_insn	(x=0X1A96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A973);
	op_hex		(x,	1);
	create_insn	(x=0X1A97B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A97F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A983);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A98D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A996);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A99D);
	op_hex		(x,	1);
	create_insn	(x=0X1A9A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A9AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A9C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1A9CC);
	op_stkvar	(x,	0);
	create_insn	(0X1A9E2);
	create_insn	(0X1A9EC);
	create_insn	(x=0X1AA06);
	op_hex		(x,	1);
	create_insn	(x=0X1AA09);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA16);
	op_stkvar	(x,	0);
	create_insn	(0X1AA1E);
	create_insn	(x=0X1AA1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA25);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA32);
	op_hex		(x,	1);
	create_insn	(x=0X1AA38);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA41);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA57);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA66);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA73);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA81);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA88);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1AA8C,	E_PREV + 0,	"A loop around car wheels...");
	create_insn	(x=0X1AA8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AA93);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA99);
	op_hex		(x,	1);
	create_insn	(x=0X1AA9D);
	op_hex		(x,	1);
	create_insn	(x=0X1AAA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAA5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AAB8);
	op_stkvar	(x,	1);
	set_cmt	(0X1AABD,	"rotating car wheels, maybe?",	0);
	create_insn	(x=0X1AAC2);
	op_hex		(x,	1);
	create_insn	(x=0X1AAC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AAD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAE9);
	op_stkvar	(x,	0);
	create_insn	(0X1AAF4);
	create_insn	(x=0X1AB15);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB21);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB27);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB39);
	op_hex		(x,	1);
	create_insn	(x=0X1AB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB41);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AB45);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB4E);
	op_hex		(x,	1);
	create_insn	(x=0X1AB51);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB58);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB60);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB65);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AB69);
	op_stkvar	(x,	0);
	create_insn	(0X1AB79);
	create_insn	(0X1AB8A);
	create_insn	(0X1AB94);
	create_insn	(x=0X1ABAE);
	op_hex		(x,	1);
	create_insn	(x=0X1ABB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABBE);
	op_stkvar	(x,	0);
	create_insn	(0X1ABC6);
	create_insn	(x=0X1ABC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABDA);
	op_hex		(x,	1);
	create_insn	(x=0X1ABE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ABE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC17);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC22);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC25);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC30);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC41);
	op_hex		(x,	1);
	create_insn	(x=0X1AC45);
	op_hex		(x,	1);
	create_insn	(x=0X1AC49);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC4D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC6A);
	op_hex		(x,	1);
	create_insn	(x=0X1AC6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AC7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC91);
	op_stkvar	(x,	0);
	create_insn	(0X1AC9C);
	create_insn	(x=0X1ACBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ACD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACE1);
	op_hex		(x,	1);
	create_insn	(x=0X1ACE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACE9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ACED);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACF6);
	op_hex		(x,	1);
	create_insn	(x=0X1ACF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD00);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD08);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD18);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD1D);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AD26);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD2B);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AD34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD41);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AD4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD4F);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AD55);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AD5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD80);
	op_stkvar	(x,	1);
	create_insn	(0X1AD94);
	set_cmt	(0X1AD9F,	"indices to corner shapes?\nUsing TrkObj offsets and\nthe list of 3Dshape res.\nIDs (aBarn, etc.) to trace\nwhat is being loaded, one\nfinds that these are\nactually the fences.",	0);
	create_insn	(x=0X1AD9F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ADA7);
	op_hex		(x,	1);
	create_insn	(x=0X1ADAB);
	op_hex		(x,	1);
	create_insn	(x=0X1ADAF);
	op_hex		(x,	1);
	create_insn	(x=0X1ADB1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ADB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ADB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ADC0);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1ADC6);
	create_insn	(x=0X1ADCC);
	op_stkvar	(x,	1);
	create_insn	(0X1ADE0);
	create_insn	(0X1ADE6);
	create_insn	(0X1ADEC);
	create_insn	(0X1ADF0);
	create_insn	(x=0X1ADF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADF9);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1ADFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE06);
	op_hex		(x,	1);
	create_insn	(x=0X1AE08);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE12);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE21);
	op_hex		(x,	1);
	create_insn	(x=0X1AE23);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AE27);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE2D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AE33);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE37);
	op_hex		(x,	1);
	create_insn	(x=0X1AE4A);
	op_hex		(x,	1);
	create_insn	(x=0X1AE4C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AE5E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AE67);
	op_hex		(x,	1);
	create_insn	(x=0X1AE6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE76);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE83);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE87);
	op_hex		(x,	1);
	create_insn	(x=0X1AE89);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AE95);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE99);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEC0);
	op_stkvar	(x,	0);
	create_insn	(0X1AEC9);
	create_insn	(x=0X1AECC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AED6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AED9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AEEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEF6);
	op_hex		(x,	1);
	create_insn	(x=0X1AEFA);
	op_hex		(x,	1);
	create_insn	(x=0X1AEFE);
	op_hex		(x,	1);
	create_insn	(x=0X1AF00);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AF03);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF09);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1AF0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF16);
	op_hex		(x,	1);
	create_insn	(x=0X1AF18);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF22);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF25);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF32);
	op_hex		(x,	1);
	create_insn	(x=0X1AF34);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF47);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AF50);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF55);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF67);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF74);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF85);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF89);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF8E);
	op_hex		(x,	1);
	create_insn	(x=0X1AF90);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AF96);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFA9);
	op_stkvar	(x,	0);
	create_insn	(0X1AFB4);
	create_insn	(x=0X1AFB8);
	op_hex		(x,	1);
	create_insn	(x=0X1AFBC);
	op_hex		(x,	1);
	create_insn	(x=0X1AFC0);
	op_hex		(x,	1);
	create_insn	(x=0X1AFC2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AFC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1AFCB);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1AFD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFD5);
	op_hex		(x,	1);
	create_insn	(x=0X1AFD7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AFDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AFF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFF7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1AFFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B001);
	op_hex		(x,	1);
	create_insn	(x=0X1B012);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B016);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B027);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B030);
	op_hex		(x,	1);
	create_insn	(x=0X1B034);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B03C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B03F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B042);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B046);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B04B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B04E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B051);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B05A);
	op_hex		(x,	1);
	create_insn	(x=0X1B05D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B061);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B064);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1B067);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1B076);
	op_hex		(x,	1);
	create_insn	(x=0X1B084);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B08E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B092);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B096);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B0AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B0B6);
	op_stkvar	(x,	1);
	create_insn	(0X1B0C1);
	create_insn	(x=0X1B0D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B0DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0DE);
	op_hex		(x,	1);
	create_insn	(x=0X1B0EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0F3);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B104);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B10D);
	op_hex		(x,	1);
	create_insn	(x=0X1B111);
	op_stkvar	(x,	0);
	create_insn	(0X1B11C);
	create_insn	(x=0X1B121);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B127);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B130);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B137);
	op_hex		(x,	1);
	create_insn	(x=0X1B13B);
	op_hex		(x,	1);
	create_insn	(x=0X1B13F);
	op_hex		(x,	1);
	create_insn	(x=0X1B141);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B144);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B14A);
	op_hex		(x,	1);
	create_insn	(x=0X1B150);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B157);
	op_hex		(x,	1);
	create_insn	(x=0X1B159);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B15D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B160);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B168);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B16F);
	op_hex		(x,	1);
	create_insn	(x=0X1B171);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B175);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B17C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B180);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B184);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X1B18A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B191);
	op_hex		(x,	1);
	create_insn	(x=0X1B193);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B197);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B19A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1A9);
	op_hex		(x,	1);
	create_insn	(x=0X1B1AB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B1AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B1DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1E2);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1B1FC);
	create_insn	(x=0X1B1FF);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B205);
	op_stkvar	(x,	0);
	create_insn	(0X1B20E);
	create_insn	(x=0X1B211);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1B21A);
	create_insn	(x=0X1B21D);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1B226);
	create_insn	(x=0X1B229);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B232);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B236);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B240);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B247);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B24D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B253);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B257);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B25E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B264);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B26A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B270);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B274);
	op_hex		(x,	1);
	create_insn	(x=0X1B296);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B29F);
	op_hex		(x,	1);
	create_insn	(x=0X1B2A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B2B2);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B2BB);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B2C2);
	op_hex		(x,	1);
	create_insn	(x=0X1B2C6);
	op_hex		(x,	1);
	create_insn	(x=0X1B2CA);
	op_hex		(x,	1);
	create_insn	(x=0X1B2CC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B2CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B2DB);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B2E3);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1B2F0);
	create_insn	(x=0X1B2F2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B2F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B30B);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B311);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1B320);
	create_insn	(x=0X1B326);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B32C);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B332);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B339);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B340);
	op_hex		(x,	1);
	create_insn	(x=0X1B345);
	op_hex		(x,	1);
	create_insn	(x=0X1B34C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B352);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B35B);
	op_hex		(x,	1);
	create_insn	(x=0X1B35F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B36A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B370);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B374);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B37B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B37F);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B384);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B388);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B390);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B393);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3A9);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B3AF);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1B3BE);
	create_insn	(x=0X1B3C4);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B3C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3CB);
	op_hex		(x,	1);
	create_insn	(x=0X1B3D0);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B3D6);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3E3);
	op_stroff	(x,	0,	GetStrucIdByName("TRACKOBJECT"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X1B3E9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B3EF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B3F8);
	op_hex		(x,	1);
	create_insn	(x=0X1B3FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B408);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B416);
	op_hex		(x,	1);
	create_insn	(x=0X1B419);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B41F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B42E);
	op_hex		(x,	1);
	create_insn	(x=0X1B431);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B437);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B43C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B443);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B44C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B455);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B45B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B464);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B46A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B471);
	op_hex		(x,	1);
	create_insn	(x=0X1B473);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B477);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B489);
	op_stkvar	(x,	0);
	create_insn	(0X1B493);
	create_insn	(x=0X1B496);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X1B4A0);
	create_insn	(0X1B4AA);
	create_insn	(x=0X1B4AE);
	op_hex		(x,	1);
	create_insn	(x=0X1B4B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B4B6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1B4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B4C7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B4D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B4DC);
	op_hex		(x,	1);
	create_insn	(x=0X1B4E0);
	op_hex		(x,	1);
	create_insn	(x=0X1B4E4);
	op_hex		(x,	1);
	create_insn	(x=0X1B4E6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B4E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B4EF);
	op_hex		(x,	1);
	create_insn	(x=0X1B4F1);
	op_hex		(x,	1);
	create_insn	(x=0X1B4F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B4F9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B4FD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B503);
	op_hex		(x,	1);
	create_insn	(x=0X1B505);
	op_hex		(x,	1);
	create_insn	(x=0X1B50D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B513);
	op_hex		(x,	1);
	create_insn	(x=0X1B517);
	op_hex		(x,	1);
	create_insn	(x=0X1B524);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B52B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B52D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B531);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B535);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B53B);
	op_hex		(x,	1);
	create_insn	(x=0X1B53D);
	op_hex		(x,	1);
	create_insn	(x=0X1B545);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B54B);
	op_hex		(x,	1);
	create_insn	(x=0X1B54F);
	op_hex		(x,	1);
	create_insn	(x=0X1B55D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B564);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B567);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B56B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B56F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B575);
	op_hex		(x,	1);
	create_insn	(x=0X1B577);
	op_hex		(x,	1);
	create_insn	(x=0X1B57F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B585);
	op_hex		(x,	1);
	create_insn	(x=0X1B589);
	op_hex		(x,	1);
	create_insn	(x=0X1B597);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B59E);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B5A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5A5);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B5AC);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B5B3);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5C0);
	op_hex		(x,	1);
	create_insn	(x=0X1B5C2);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B5C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5C9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B5D3);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B5D8);
	op_hex		(x,	1);
	create_insn	(x=0X1B5DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B5E0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B5EA);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B5ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5F1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B5FB);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B602);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B60B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B617);
	op_hex		(x,	1);
	create_insn	(0X1B623);
	create_insn	(x=0X1B626);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B63B);
	op_hex		(x,	1);
	create_insn	(x=0X1B63F);
	op_hex		(x,	1);
	create_insn	(x=0X1B643);
	op_hex		(x,	1);
	create_insn	(x=0X1B645);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B648);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B652);
	op_hex		(x,	1);
	create_insn	(x=0X1B656);
	op_hex		(x,	1);
	create_insn	(x=0X1B663);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B66A);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B672);
	op_hex		(x,	1);
	create_insn	(x=0X1B676);
	op_hex		(x,	1);
	create_insn	(x=0X1B684);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B68B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B68E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B694);
	op_hex		(x,	1);
	create_insn	(x=0X1B698);
	op_hex		(x,	1);
	create_insn	(x=0X1B6A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6AD);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6B4);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B6BB);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B6C2);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B6CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6CF);
	op_hex		(x,	1);
	create_insn	(x=0X1B6D1);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B6D8);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B6E1);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B6E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6EC);
	op_hex		(x,	1);
	create_insn	(x=0X1B6FD);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B704);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B70D);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B719);
	op_hex		(x,	1);
	create_insn	(x=0X1B71E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B722);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B726);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B72A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B72E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B732);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B737);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B743);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B747);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B750);
	op_stkvar	(x,	0);
	create_insn	(0X1B758);
	create_insn	(0X1B762);
	create_insn	(x=0X1B766);
	op_hex		(x,	1);
	create_insn	(x=0X1B768);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B76E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1B778);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1B782);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B78A);
	op_hex		(x,	1);
	create_insn	(x=0X1B78E);
	op_hex		(x,	1);
	create_insn	(x=0X1B792);
	op_hex		(x,	1);
	create_insn	(x=0X1B794);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B797);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B79D);
	op_hex		(x,	1);
	create_insn	(x=0X1B79F);
	op_hex		(x,	1);
	create_insn	(x=0X1B7A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B7A7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B7AB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B7B9);
	op_hex		(x,	1);
	create_insn	(x=0X1B7BB);
	op_hex		(x,	1);
	create_insn	(x=0X1B7C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7C8);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B7D2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B7E0);
	op_hex		(x,	1);
	create_insn	(x=0X1B7E2);
	op_hex		(x,	1);
	create_insn	(x=0X1B7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7EF);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B7F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7F6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B7FA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B808);
	op_hex		(x,	1);
	create_insn	(x=0X1B80A);
	op_hex		(x,	1);
	create_insn	(x=0X1B810);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B817);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B81A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B81E);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B825);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B82C);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B835);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B839);
	op_hex		(x,	1);
	create_insn	(x=0X1B83B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B83E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B842);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B84C);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B84F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B853);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B85D);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B860);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B864);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B86E);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B875);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B881);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B887);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B88A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B893);
	op_hex		(x,	1);
	create_insn	(x=0X1B89F);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B8B2);
	op_hex		(x,	1);
	create_insn	(x=0X1B8B4);
	op_hex		(x,	1);
	create_insn	(x=0X1B8BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8BD);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B8CC);
	op_hex		(x,	1);
	create_insn	(x=0X1B8CE);
	op_hex		(x,	1);
	create_insn	(x=0X1B8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8D7);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B8E7);
	op_hex		(x,	1);
	create_insn	(x=0X1B8E9);
	op_hex		(x,	1);
	create_insn	(x=0X1B8EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8F2);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B8F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B903);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B907);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B90E);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B918);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1B91F);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B922);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B926);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B92A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B92E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B947);
	op_hex		(x,	1);
	create_insn	(x=0X1B955);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B95E);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(0X1B964);
	create_insn	(x=0X1B96D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B970);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1B97F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B982);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(0X1B988);
	create_insn	(x=0X1B98C);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B999);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B9A5);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B9B1);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B9B8);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B9C4);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1B9CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9D7);
	op_hex		(x,	1);
	create_insn	(x=0X1B9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1B9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9FC);
	op_stkvar	(x,	0);
	create_insn	(0X1BA04);
	create_insn	(0X1BA0E);
	create_insn	(x=0X1BA12);
	op_hex		(x,	1);
	create_insn	(x=0X1BA14);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BA1A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1BA24);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1BA2E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA36);
	op_hex		(x,	1);
	create_insn	(x=0X1BA3A);
	op_hex		(x,	1);
	create_insn	(x=0X1BA3E);
	op_hex		(x,	1);
	create_insn	(x=0X1BA40);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA43);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BA49);
	op_hex		(x,	1);
	create_insn	(x=0X1BA4B);
	op_hex		(x,	1);
	create_insn	(x=0X1BA4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BA53);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA57);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA65);
	op_hex		(x,	1);
	create_insn	(x=0X1BA67);
	op_hex		(x,	1);
	create_insn	(x=0X1BA6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA74);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BA76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA7A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA7E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BA8C);
	op_hex		(x,	1);
	create_insn	(x=0X1BA8E);
	op_hex		(x,	1);
	create_insn	(x=0X1BA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA9B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BA9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAA2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BAA6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BAB4);
	op_hex		(x,	1);
	create_insn	(x=0X1BAB6);
	op_hex		(x,	1);
	create_insn	(x=0X1BABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAC3);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BAC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAD1);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BAD8);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BAE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAE5);
	op_hex		(x,	1);
	create_insn	(x=0X1BAE7);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BAEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAEE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BAF8);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BAFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAFF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BB09);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB10);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BB1A);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB21);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB2D);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB33);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB37);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB40);
	op_hex		(x,	1);
	create_insn	(x=0X1BB4C);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BB5F);
	op_hex		(x,	1);
	create_insn	(x=0X1BB61);
	op_hex		(x,	1);
	create_insn	(x=0X1BB67);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB6A);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB79);
	op_hex		(x,	1);
	create_insn	(x=0X1BB7B);
	op_hex		(x,	1);
	create_insn	(x=0X1BB81);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB84);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BB94);
	op_hex		(x,	1);
	create_insn	(x=0X1BB96);
	op_hex		(x,	1);
	create_insn	(x=0X1BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB9F);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BBA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBB4);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1BBBB);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBC4);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1BBCB);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BBCE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BBD2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BBD6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BBDA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BBF3);
	op_hex		(x,	1);
	create_insn	(x=0X1BC01);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BC0A);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(0X1BC10);
	create_insn	(x=0X1BC19);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC1D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC30);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(0X1BC36);
	create_insn	(x=0X1BC3A);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC47);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC53);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC5F);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC66);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC72);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BC79);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC86);
	op_hex		(x,	1);
	create_insn	(0X1BC93);
	create_insn	(x=0X1BC96);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BC9C);
	op_stkvar	(x,	0);
	create_insn	(0X1BCA5);
	create_insn	(x=0X1BCA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BCAE);
	op_stkvar	(x,	0);
	create_insn	(0X1BCB7);
	create_insn	(x=0X1BCC4);
	op_hex		(x,	1);
	create_insn	(x=0X1BCCD);
	op_hex		(x,	1);
	create_insn	(x=0X1BCD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BCE1);
	op_hex		(x,	1);
	create_insn	(x=0X1BCEA);
	op_hex		(x,	1);
	create_insn	(x=0X1BCF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BCFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BD01);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BD05);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD09);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD13);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD17);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD22);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD31);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD61);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD65);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD7C);
	op_hex		(x,	1);
	create_insn	(x=0X1BD85);
	op_hex		(x,	1);
	create_insn	(x=0X1BD94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BD9D);
	op_hex		(x,	1);
	create_insn	(x=0X1BDA6);
	op_hex		(x,	1);
	create_insn	(x=0X1BDB1);
	op_hex		(x,	1);
	create_insn	(x=0X1BDB3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BDB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDC2);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BDCA);
	op_hex		(x,	1);
	create_insn	(x=0X1BDCC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDD7);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BDEA);
	op_hex		(x,	1);
	create_insn	(x=0X1BDF3);
	op_hex		(x,	1);
	create_insn	(x=0X1BE02);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BE0B);
	op_hex		(x,	1);
	create_insn	(x=0X1BE14);
	op_hex		(x,	1);
	create_insn	(x=0X1BE1F);
	op_hex		(x,	1);
	create_insn	(x=0X1BE21);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BE25);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE30);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE37);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BE40);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BE49);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE4D);
	op_hex		(x,	1);
	create_insn	(x=0X1BE4F);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE56);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE5F);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE6B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE72);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BE87);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BE91);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE95);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X1BE9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE9F);
	op_hex		(x,	1);
	create_insn	(x=0X1BEA7);
	op_hex		(x,	1);
	create_insn	(0X1BEB4);
	create_insn	(x=0X1BEBB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BEBF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BECD);
	op_hex		(x,	1);
	create_insn	(x=0X1BED0);
	op_stkvar	(x,	0);
	create_insn	(0X1BED8);
	create_insn	(x=0X1BEE9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BEF2);
	op_hex		(x,	1);
	create_insn	(x=0X1BEF6);
	op_stkvar	(x,	0);
	create_insn	(0X1BF02);
	create_insn	(x=0X1BF10);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF17);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1BF28);
	create_insn	(x=0X1BF2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF42);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF46);
	op_hex		(x,	1);
	create_insn	(x=0X1BF48);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BF4C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1BF5E);
	create_insn	(x=0X1BF65);
	op_stkvar	(x,	0);
	create_insn	(0X1BF6C);
	create_insn	(x=0X1BF75);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF83);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF87);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF92);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF95);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BF99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BFA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BFA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BFB7);
	op_hex		(x,	1);
	create_insn	(x=0X1BFBB);
	op_hex		(x,	1);
	create_insn	(x=0X1BFBF);
	op_hex		(x,	1);
	create_insn	(x=0X1BFC1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1BFC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1BFCA);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(0X1BFD5);
	create_insn	(0X1BFDD);
	create_insn	(0X1BFE5);
	create_insn	(0X1BFED);
	create_insn	(x=0X1BFF0);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1BFF8);
	create_insn	(x=0X1BFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C002);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C006);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C009);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C00C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C014);
	op_hex		(x,	1);
	create_insn	(x=0X1C01E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C021);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C024);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C027);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C02A);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C031);
	op_hex		(x,	1);
	create_insn	(x=0X1C034);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C037);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C03A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C03C);
	op_hex		(x,	1);
	create_insn	(x=0X1C03E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C042);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C045);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C048);
	op_hex		(x,	1);
	create_insn	(x=0X1C04A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C04E);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C051);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C053);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C057);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C05A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C05D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C060);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C064);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C069);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C06C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C073);
	op_hex		(x,	1);
	create_insn	(x=0X1C075);
	op_hex		(x,	1);
	create_insn	(x=0X1C082);
	op_hex		(x,	1);
	set_cmt	(0X1C084,	"lookup width of explotion shape",	0);
	create_insn	(x=0X1C084);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C08B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C09F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C0A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C0A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C0AC);
	op_hex		(x,	1);
	create_insn	(x=0X1C0AE);
	op_hex		(x,	1);
	create_insn	(x=0X1C0B0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X1C0B4,	"loops up one of the three explotion anim shapes",	0);
	create_insn	(x=0X1C0B4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1C0BE);
	op_hex		(x,	1);
	create_insn	(x=0X1C0C7);
	op_stkvar	(x,	0);
	create_insn	(0X1C0D8);
	create_insn	(x=0X1C0DF);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C0EB);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C0EE);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C0FD);
	op_hex		(x,	1);
	create_insn	(0X1C10A);
	create_insn	(x=0X1C111);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C11E);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C128);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C12C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1C13A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C13F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C142);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C145);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C149);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C156);
	op_hex		(x,	1);
	create_insn	(x=0X1C162);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C165);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C168);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C16C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C180);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X1C18E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C193);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C196);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C199);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C19D);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1AF);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C1B2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C1B6);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C1C3);
	op_hex		(x,	1);
	create_insn	(0X1C1D0);
	create_insn	(0X1C1DA);
	set_cmt	(0X1C1DC,	"int",	0);
	create_insn	(x=0X1C1E5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1C1E8,	"char *",	0);
	set_cmt	(0X1C1E9,	"prints elapsed time (unless in pause/replay, or some unknown state)",	0);
	create_insn	(x=0X1C1EE);
	op_hex		(x,	1);
	create_insn	(x=0X1C1FE);
	op_hex		(x,	1);
	create_insn	(x=0X1C208);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C21F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C228);
	op_hex		(x,	1);
	create_insn	(x=0X1C231);
	op_hex		(x,	1);
	make_array	(0X1C236,	0X2);
	create_insn	(0X1C238);
	create_insn	(x=0X1C24A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C253);
	op_hex		(x,	1);
	create_insn	(x=0X1C265);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C274);
	op_hex		(x,	1);
	create_insn	(x=0X1C277);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C27E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C283);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C29B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C29F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C2B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C2BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E2);
	op_hex		(x,	1);
	create_insn	(x=0X1C2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1C2EB);
	op_stkvar	(x,	1);
	create_insn	(0X1C2F8);
	create_insn	(0X1C302);
	set_name	(0X1C302,	"skybox_op_helper2");
	create_insn	(x=0X1C305);
	op_hex		(x,	1);
	create_insn	(x=0X1C311);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C314);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C317);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C320);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C323);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C326);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C329);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C32C);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C333);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C336);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C33D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C343);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C346);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C349);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C350);
	op_hex		(x,	1);
	create_insn	(x=0X1C35C);
	op_hex		(x,	1);
	create_insn	(x=0X1C369);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C370);
	op_hex		(x,	1);
	create_insn	(x=0X1C378);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C37B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C37E);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X1C386);
	create_insn	(x=0X1C38A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C392);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C395);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C398);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C39B);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C3A2);
	op_hex		(x,	1);
	create_insn	(x=0X1C3A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3BB);
	op_hex		(x,	1);
	create_insn	(x=0X1C3BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3D8);
	op_hex		(x,	1);
	create_insn	(x=0X1C3DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3F5);
	op_hex		(x,	1);
	create_insn	(x=0X1C3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C412);
	op_hex		(x,	1);
	create_insn	(x=0X1C415);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C42F);
	op_hex		(x,	1);
	create_insn	(x=0X1C432);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C435);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C438);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C43D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C442);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C445);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C454);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C457);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C45E);
	op_hex		(x,	1);
	create_insn	(x=0X1C46A);
	op_hex		(x,	1);
	create_insn	(0X1C474);
	set_name	(0X1C474,	"skybox_op");
	create_insn	(x=0X1C477);
	op_hex		(x,	1);
	create_insn	(x=0X1C481);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C486);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C489);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C48C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C49B);
	op_hex		(x,	1);
	create_insn	(x=0X1C49E);
	op_stkvar	(x,	0);
	create_insn	(0X1C4A7);
	create_insn	(x=0X1C4AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4D1);
	op_hex		(x,	1);
	create_insn	(x=0X1C4D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4ED);
	op_hex		(x,	1);
	create_insn	(x=0X1C4F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C4F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C500);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C503);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C506);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C515);
	op_hex		(x,	1);
	create_insn	(x=0X1C51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C520);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C529);
	op_hex		(x,	1);
	create_insn	(x=0X1C52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C530);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C539);
	op_hex		(x,	1);
	create_insn	(x=0X1C53C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C543);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C54A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C54D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C558);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C55E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C564);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C567);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C571);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C574);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C579);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C57C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C581);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C584);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C58A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C58D);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C592);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C595);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C59A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C59D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5D4);
	op_hex		(x,	1);
	create_insn	(x=0X1C5DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5DE);
	op_stkvar	(x,	1);
	create_insn	(0X1C5EA);
	create_insn	(x=0X1C5F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C5FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C602);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C609);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C60C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C60F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C612);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C615);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C618);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C61D);
	op_stkvar	(x,	0);
	create_insn	(0X1C626);
	create_insn	(x=0X1C630);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C63B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C64D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C650);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C656);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C660);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C663);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C666);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C66B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C675);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C678);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C67D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C683);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C686);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C689);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C68E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C696);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1C6A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C6AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C6B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6BD);
	op_hex		(x,	1);
	create_insn	(x=0X1C6C9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C6CD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C6D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6D5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C6DD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1C6E1,	"number of rects",	0);
	create_insn	(x=0X1C6EA);
	op_hex		(x,	1);
	create_insn	(0X1C6F2);
	create_insn	(x=0X1C6F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C6FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C700);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C703);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C706);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C709);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C710);
	op_hex		(x,	1);
	create_insn	(x=0X1C71C);
	op_hex		(x,	1);
	create_insn	(x=0X1C72B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C72E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C733);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C736);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C73F);
	op_hex		(x,	1);
	create_insn	(x=0X1C74B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C74F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C753);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C757);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C75F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1C763,	"number of rects",	0);
	create_insn	(x=0X1C76C);
	op_hex		(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_insn	(0X1C774);
	create_insn	(x=0X1C77A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1C77D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C782);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C785);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C788);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C78B);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C792);
	op_hex		(x,	1);
	create_insn	(x=0X1C79E);
	op_hex		(x,	1);
	create_insn	(x=0X1C7AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7DB);
	op_hex		(x,	1);
	create_insn	(x=0X1C7E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C80A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C80D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C81F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C822);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C827);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C82F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C832);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C836);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C839);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C841);
	op_hex		(x,	1);
	create_insn	(x=0X1C844);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C847);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C852);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C855);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C859);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C865);
	op_hex		(x,	1);
	create_insn	(x=0X1C86A);
	op_hex		(x,	1);
	create_insn	(x=0X1C86E);
	op_stkvar	(x,	0);
	create_insn	(0X1C876);
	create_insn	(x=0X1C879);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C87C);
	op_hex		(x,	1);
	create_insn	(x=0X1C88A);
	op_hex		(x,	1);
	create_insn	(x=0X1C897);
	op_hex		(x,	1);
	create_insn	(x=0X1C89C);
	op_hex		(x,	1);
	create_insn	(x=0X1C89E);
	op_hex		(x,	1);
	create_insn	(x=0X1C8A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8AA);
	op_hex		(x,	1);
	create_insn	(x=0X1C8AC);
	op_hex		(x,	1);
	create_insn	(x=0X1C8B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8B6);
	op_hex		(x,	1);
	create_insn	(x=0X1C8C4);
	op_hex		(x,	1);
	create_insn	(x=0X1C8D1);
	op_hex		(x,	1);
	create_insn	(x=0X1C8D6);
	op_hex		(x,	1);
	create_insn	(x=0X1C8D8);
	op_hex		(x,	1);
	create_insn	(x=0X1C8E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8E4);
	op_hex		(x,	1);
	create_insn	(x=0X1C8E6);
	op_hex		(x,	1);
	create_insn	(x=0X1C8ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C8F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C8F6);
	op_stkvar	(x,	0);
	create_insn	(0X1C8FF);
	create_insn	(x=0X1C904);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C907);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C90A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C90D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C910);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C913);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C916);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C919);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C929);
	op_hex		(x,	1);
	create_insn	(x=0X1C92C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C92F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C932);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C935);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C938);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C93B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C93E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C941);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C951);
	op_hex		(x,	1);
	create_insn	(x=0X1C958);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C95D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C962);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C96B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C96E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C972);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C975);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C97E);
	op_hex		(x,	1);
	create_insn	(x=0X1C981);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C990);
	op_hex		(x,	1);
	create_insn	(x=0X1C99D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9B1);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C9B7);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9CD);
	op_hex		(x,	1);
	create_insn	(x=0X1C9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C9D9);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C9DE);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1C9E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1C9E4);
	op_stkvar	(x,	0);
	create_insn	(0X1C9ED);
	create_insn	(x=0X1C9FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA02);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA25);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA32);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CA35);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA38);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CA3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA41);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA4C);
	op_hex		(x,	1);
	create_insn	(0X1CA52);
	create_insn	(x=0X1CA54);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1CA66);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA69);
	op_hex		(x,	1);
	create_insn	(x=0X1CA6E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1CA72);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA75);
	op_hex		(x,	1);
	create_insn	(x=0X1CA77);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CA7A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X1CAAC);
	create_insn	(x=0X1CAB6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CABA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAC1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CAC9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1CACD,	"number of rects",	0);
	create_insn	(x=0X1CAD6);
	op_hex		(x,	1);
	create_insn	(x=0X1CADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CAEA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CAF2);
	op_hex		(x,	1);
	create_insn	(x=0X1CB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB03);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB06);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB09);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB0C);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB13);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB16);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB1D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB23);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB32);
	op_hex		(x,	1);
	create_insn	(x=0X1CB3E);
	op_hex		(x,	1);
	create_insn	(x=0X1CB41);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB44);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X1CB47);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB54);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB63);
	op_hex		(x,	1);
	create_insn	(x=0X1CB6F);
	op_hex		(x,	1);
	create_insn	(x=0X1CB72);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CB77);
	op_stkvar	(x,	1);
	create_insn	(0X1CB80);
	set_name	(0X1CB80,	"transformed_shape_add_for_sort");
	create_insn	(x=0X1CB83);
	op_hex		(x,	1);
	create_insn	(x=0X1CB8D);
	op_stkvar	(x,	1);
	set_cmt	(0X1CB90,	"ax = offset to the first member of curtransshape_ptr, the pos vector",	0);
	create_insn	(x=0X1CB99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB9D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CBA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBAA);
	op_hex		(x,	1);
	create_insn	(x=0X1CBB5);
	op_hex		(x,	1);
	create_insn	(x=0X1CBB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBBD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1CBC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBC4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1CBC8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X1CBDC);
	set_name	(0X1CBDC,	"draw_track_preview");
	create_insn	(x=0X1CBDF);
	op_hex		(x,	1);
	create_insn	(x=0X1CBF9);
	op_hex		(x,	1);
	create_insn	(x=0X1CBFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC0D);
	op_hex		(x,	1);
	create_insn	(x=0X1CC10);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC23);
	op_hex		(x,	1);
	create_insn	(x=0X1CC26);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC30);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CC39);
	op_hex		(x,	1);
	create_insn	(x=0X1CC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC49);
	op_hex		(x,	1);
	create_insn	(x=0X1CC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC56);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CC5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC72);
	op_hex		(x,	1);
	create_insn	(x=0X1CC7E);
	op_hex		(x,	1);
	create_insn	(x=0X1CC94);
	op_hex		(x,	1);
	create_insn	(x=0X1CC97);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCAF);
	op_hex		(x,	1);
	create_insn	(x=0X1CCB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCCB);
	op_hex		(x,	1);
	create_insn	(x=0X1CCD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CCE1);
	op_hex		(x,	1);
	create_insn	(x=0X1CCED);
	op_hex		(x,	1);
	create_insn	(x=0X1CD03);
	op_hex		(x,	1);
	create_insn	(x=0X1CD0A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CD11);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD1A);
	op_hex		(x,	1);
	create_insn	(x=0X1CD1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD22);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD27);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD38);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD3C);
	op_stkvar	(x,	0);
	create_insn	(0X1CD45);
	create_insn	(x=0X1CD49);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD53);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD59);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD60);
	op_hex		(x,	1);
	create_insn	(x=0X1CD64);
	op_hex		(x,	1);
	create_insn	(x=0X1CD68);
	op_hex		(x,	1);
	create_insn	(x=0X1CD6A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CD6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD75);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD7E);
	op_hex		(x,	1);
	create_insn	(x=0X1CD80);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CD88);
	op_hex		(x,	1);
	create_insn	(x=0X1CD8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD93);
	op_hex		(x,	1);
	create_insn	(x=0X1CD95);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD9E);
	op_hex		(x,	1);
	create_insn	(x=0X1CDA0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CDA8);
	op_hex		(x,	1);
	create_insn	(x=0X1CDAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDC7);
	op_hex		(x,	1);
	create_insn	(x=0X1CDCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDDA);
	op_hex		(x,	1);
	create_insn	(x=0X1CDDE);
	op_hex		(x,	1);
	create_insn	(x=0X1CDE2);
	op_hex		(x,	1);
	create_insn	(x=0X1CDE4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CDE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CDEC);
	op_hex		(x,	1);
	create_insn	(x=0X1CDF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDFB);
	op_hex		(x,	1);
	create_insn	(x=0X1CDFD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1CE04);
	create_insn	(x=0X1CE06);
	op_stkvar	(x,	1);
	create_insn	(0X1CE13);
	create_insn	(x=0X1CE1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE22);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE25);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE32);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE35);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE39);
	op_hex		(x,	1);
	create_insn	(x=0X1CE3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE40);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE52);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE5D);
	op_hex		(x,	1);
	create_insn	(x=0X1CE61);
	op_hex		(x,	1);
	create_insn	(x=0X1CE65);
	op_hex		(x,	1);
	create_insn	(x=0X1CE67);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CE6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE72);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE75);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE78);
	op_hex		(x,	1);
	create_insn	(x=0X1CE7A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CE82);
	op_hex		(x,	1);
	create_insn	(x=0X1CE84);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE8C);
	op_hex		(x,	1);
	create_insn	(x=0X1CE8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CE91);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CE9C);
	op_hex		(x,	1);
	create_insn	(x=0X1CE9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CEC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CECA);
	op_hex		(x,	1);
	create_insn	(x=0X1CECD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CED0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CED9);
	op_stkvar	(x,	1);
	create_insn	(0X1CEE3);
	create_insn	(x=0X1CEF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF01);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF1A);
	op_hex		(x,	1);
	create_insn	(x=0X1CF1C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CF20);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF23);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF26);
	op_hex		(x,	1);
	create_insn	(x=0X1CF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF32);
	op_hex		(x,	1);
	create_insn	(x=0X1CF34);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CF3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF40);
	op_hex		(x,	1);
	create_insn	(x=0X1CF42);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CF4C);
	op_hex		(x,	1);
	create_insn	(x=0X1CF4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF57);
	op_hex		(x,	1);
	create_insn	(x=0X1CF59);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF63);
	op_hex		(x,	1);
	create_insn	(x=0X1CF65);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CF6C);
	op_stkvar	(x,	1);
	create_insn	(0X1CF7F);
	create_insn	(0X1CF87);
	create_insn	(0X1CF8F);
	create_insn	(x=0X1CF92);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CF99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFBC);
	op_hex		(x,	1);
	create_insn	(x=0X1CFBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFCF);
	op_hex		(x,	1);
	create_insn	(x=0X1CFD3);
	op_hex		(x,	1);
	create_insn	(x=0X1CFD7);
	op_hex		(x,	1);
	create_insn	(x=0X1CFD9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1CFDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1CFEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D002);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D005);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D009);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D015);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D01A);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D022);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D02A);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D032);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D036);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D03F);
	op_hex		(x,	1);
	create_insn	(x=0X1D042);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D048);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D04D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D050);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D05D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D063);
	op_hex		(x,	1);
	create_insn	(x=0X1D065);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D071);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D076);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D083);
	op_hex		(x,	1);
	create_insn	(x=0X1D08B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D08E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D097);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D09B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0A2);
	op_hex		(x,	1);
	create_insn	(x=0X1D0A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D0AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0C1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D0C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0D6);
	op_stkvar	(x,	0);
	create_insn	(0X1D0DF);
	create_insn	(x=0X1D0E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0F6);
	op_hex		(x,	1);
	create_insn	(x=0X1D0F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D0FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D100);
	op_stkvar	(x,	1);
	create_insn	(0X1D10D);
	create_insn	(0X1D115);
	create_insn	(x=0X1D118);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D11B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D121);
	op_stkvar	(x,	0);
	create_insn	(0X1D128);
	create_insn	(0X1D12E);
	set_name	(0X1D12E,	"draw_ingame_text");
	create_insn	(x=0X1D131);
	op_hex		(x,	1);
	create_insn	(x=0X1D137);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D13A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1D14E,	"\"Professional Driver\"",	0);
	create_insn	(x=0X1D14E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D15F);
	op_hex		(x,	1);
	create_insn	(x=0X1D164);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D16D);
	op_hex		(x,	1);
	create_insn	(x=0X1D170);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D17F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D188);
	op_hex		(x,	1);
	create_insn	(x=0X1D18C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D195);
	op_hex		(x,	1);
	create_insn	(x=0X1D199);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D1A2);
	op_hex		(x,	1);
	set_cmt	(0X1D1A5,	"on Closed Circuit",	0);
	create_insn	(x=0X1D1A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D1B6);
	op_hex		(x,	1);
	create_insn	(x=0X1D1BB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D1C4);
	op_hex		(x,	1);
	create_insn	(x=0X1D1C7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D1D6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D1DF);
	op_hex		(x,	1);
	create_insn	(0X1D1E6);
	create_insn	(0X1D1F0);
	set_cmt	(0X1D1F7,	"Fasten Your Seatbelt",	0);
	create_insn	(x=0X1D1F7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D208);
	op_hex		(x,	1);
	create_insn	(x=0X1D20D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D216);
	op_hex		(x,	1);
	create_insn	(x=0X1D219);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D22A);
	set_cmt	(0X1D234,	"You forgot to disable the",	0);
	create_insn	(x=0X1D234);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D245);
	op_hex		(x,	1);
	create_insn	(x=0X1D24A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D253);
	op_hex		(x,	1);
	create_insn	(x=0X1D256);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D265);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D26E);
	op_hex		(x,	1);
	create_insn	(x=0X1D272);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D27B);
	op_hex		(x,	1);
	create_insn	(x=0X1D27F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D288);
	op_hex		(x,	1);
	set_cmt	(0X1D28B,	"\"Car's security system first\"",	0);
	create_insn	(x=0X1D28B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D29C);
	op_hex		(x,	1);
	create_insn	(x=0X1D2A1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D2AA);
	op_hex		(x,	1);
	create_insn	(x=0X1D2AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D2BE);
	create_insn	(0X1D2C8);
	create_insn	(0X1D2D2);
	create_insn	(0X1D2DC);
	create_insn	(0X1D2F2);
	set_cmt	(0X1D2FA,	"left arrow shape",	0);
	set_cmt	(0X1D2FE,	"left arrow shape",	0);
	create_insn	(x=0X1D307);
	op_hex		(x,	1);
	create_insn	(x=0X1D30A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D30E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D312);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D31B);
	op_hex		(x,	1);
	create_insn	(0X1D334);
	create_insn	(0X1D338);
	set_cmt	(0X1D340,	"right arrow shape",	0);
	set_cmt	(0X1D344,	"right arrow shape",	0);
	set_cmt	(0X1D34A,	"\"Wrong Way\"",	0);
	create_insn	(x=0X1D34A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D35B);
	op_hex		(x,	1);
	create_insn	(x=0X1D360);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D369);
	op_hex		(x,	1);
	create_insn	(x=0X1D36C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D37B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D384);
	op_hex		(x,	1);
	create_insn	(x=0X1D388);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D391);
	op_hex		(x,	1);
	create_insn	(0X1D398);
	set_cmt	(0X1D3A0,	"left arrow shape",	0);
	set_cmt	(0X1D3A4,	"left arrow shape",	0);
	create_insn	(x=0X1D3AD);
	op_hex		(x,	1);
	create_insn	(x=0X1D3B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3B8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3C1);
	op_hex		(x,	1);
	set_cmt	(0X1D3C4,	"\"Opponent Near\"",	0);
	create_insn	(x=0X1D3C4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3D5);
	op_hex		(x,	1);
	create_insn	(x=0X1D3DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3E3);
	op_hex		(x,	1);
	create_insn	(x=0X1D3ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D3FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D405);
	op_hex		(x,	1);
	create_insn	(x=0X1D409);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D412);
	op_hex		(x,	1);
	create_insn	(x=0X1D416);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D41F);
	op_hex		(x,	1);
	create_insn	(x=0X1D42C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D43D);
	op_hex		(x,	1);
	create_insn	(x=0X1D442);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D44B);
	op_hex		(x,	1);
	set_cmt	(0X1D450,	"int",	0);
	create_insn	(x=0X1D455);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1D458,	"char *",	0);
	create_insn	(x=0X1D45E);
	op_hex		(x,	1);
	create_insn	(x=0X1D461);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1D464,	"char *",	0);
	create_insn	(x=0X1D46A);
	op_hex		(x,	1);
	create_insn	(x=0X1D46D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D47E);
	set_cmt	(0X1D486,	"right arrow shape",	0);
	set_cmt	(0X1D48A,	"right arrow shape",	0);
	create_insn	(x=0X1D493);
	op_hex		(x,	1);
	create_insn	(x=0X1D496);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D49A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D49E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D4A7);
	op_hex		(x,	1);
	create_insn	(x=0X1D4AA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D4B0);
	create_insn	(x=0X1D4C5);
	op_hex		(x,	1);
	create_insn	(x=0X1D4CB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D4DC);
	op_hex		(x,	1);
	create_insn	(x=0X1D4E1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D4EA);
	op_hex		(x,	1);
	create_insn	(x=0X1D4ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D4FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1D4FF,	"char *",	0);
	create_insn	(x=0X1D505);
	op_hex		(x,	1);
	create_insn	(x=0X1D512);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D51B);
	op_hex		(x,	1);
	create_insn	(x=0X1D51F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D528);
	op_hex		(x,	1);
	create_insn	(x=0X1D52B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D534);
	set_name	(0X1D534,	"do_sinking");
	create_insn	(x=0X1D537);
	op_hex		(x,	1);
	create_insn	(x=0X1D544);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D549);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D54F);
	op_hex		(x,	1);
	create_insn	(x=0X1D551);
	op_hex		(x,	1);
	create_insn	(x=0X1D556);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D57F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D59B);
	op_hex		(x,	1);
	create_insn	(x=0X1D5A7);
	op_hex		(x,	1);
	create_insn	(0X1D5B4);
	set_name	(0X1D5B4,	"init_crak");
	create_insn	(x=0X1D5B7);
	op_hex		(x,	1);
	create_insn	(x=0X1D5BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D5CD);
	op_hex		(x,	1);
	create_insn	(x=0X1D5D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D5D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D5D6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D5E7);
	op_hex		(x,	1);
	create_insn	(x=0X1D5EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D5ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D5FB);
	op_stkvar	(x,	1);
	set_cmt	(0X1D601,	"var_1A = ax = (framespersec / 7) / framecount",	0);
	create_insn	(x=0X1D601);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D604);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D611);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D614);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D617);
	op_hex		(x,	1);
	create_insn	(x=0X1D619);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D620);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D624);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D627);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D636);
	create_insn	(x=0X1D63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D646);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D649);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D650);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D65B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D65E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D667);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D66D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D67F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D688);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D68E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6C1);
	op_hex		(x,	1);
	create_insn	(x=0X1D6C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6E2);
	op_hex		(x,	1);
	create_insn	(x=0X1D6E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D6F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D702);
	op_hex		(x,	1);
	create_insn	(x=0X1D70F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D712);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D715);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D718);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D71C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D71F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D723);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D72C);
	op_hex		(x,	1);
	create_insn	(x=0X1D72F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D732);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D735);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D738);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D73C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D73F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D743);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D74C);
	op_hex		(x,	1);
	create_insn	(x=0X1D74F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D752);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D755);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D758);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D75C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D75F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D763);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D76C);
	op_hex		(x,	1);
	create_insn	(x=0X1D76F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D772);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D775);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D778);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D77C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D77F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D783);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D78C);
	op_hex		(x,	1);
	create_insn	(x=0X1D790);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D798);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1D7A2);
	set_name	(0X1D7A2,	"load_skybox");
	create_insn	(x=0X1D7A5);
	op_hex		(x,	1);
	create_insn	(x=0X1D7A9);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1D7AF);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X1D7B6);
	create_insn	(x=0X1D7C0);
	op_stkvar	(x,	0);
	create_insn	(0X1D7C8);
	create_insn	(x=0X1D7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D7DA);
	op_hex		(x,	1);
	create_insn	(x=0X1D7DC);
	op_hex		(x,	1);
	create_insn	(x=0X1D7DE);
	op_hex		(x,	1);
	create_insn	(x=0X1D7E2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D7EB);
	op_hex		(x,	1);
	create_insn	(x=0X1D7F5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D7F9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D807);
	op_hex		(x,	1);
	create_insn	(x=0X1D891);
	op_stkvar	(x,	0);
	create_insn	(0X1D8B4);
	set_name	(0X1D8B4,	"unload_skybox");
	create_insn	(x=0X1D8C8);
	op_hex		(x,	1);
	create_insn	(0X1D8D2);
	set_name	(0X1D8D2,	"load_sdgame2_shapes");
	create_insn	(x=0X1D8D5);
	op_hex		(x,	1);
	create_insn	(x=0X1D8DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1D8DD,	"char *",	0);
	set_cmt	(0X1D8E1,	"int",	0);
	create_insn	(x=0X1D8E7);
	op_hex		(x,	1);
	create_insn	(x=0X1D8F1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D8F5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D903);
	op_hex		(x,	1);
	create_insn	(x=0X1D90A);
	op_hex		(x,	1);
	create_insn	(x=0X1D90E);
	op_hex		(x,	1);
	create_insn	(x=0X1D910);
	op_hex		(x,	1);
	create_insn	(x=0X1D912);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D916);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X1D919);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X1D92A);
	set_name	(0X1D92A,	"free_sdgame2");
	create_insn	(x=0X1D937);
	op_hex		(x,	1);
	create_insn	(0X1D93C);
	set_name	(0X1D93C,	"setup_intro");
	create_insn	(x=0X1D93F);
	op_hex		(x,	1);
	create_insn	(x=0X1D945);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D949);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D952);
	op_hex		(x,	1);
	create_insn	(x=0X1D955);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D959);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D95D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D961);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D966);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D96F);
	op_hex		(x,	1);
	create_insn	(x=0X1D972);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D976);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D979);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D981);
	op_hex		(x,	1);
	create_insn	(x=0X1D984);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D988);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D98B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D993);
	op_hex		(x,	1);
	create_insn	(x=0X1D996);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1D99A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D99D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D9A5);
	op_hex		(x,	1);
	create_insn	(x=0X1D9B3);
	op_hex		(x,	1);
	create_insn	(x=0X1D9B7);
	op_hex		(x,	1);
	create_insn	(x=0X1D9C0);
	op_hex		(x,	1);
	create_insn	(x=0X1D9CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D9DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D9E0);
	op_hex		(x,	1);
	create_insn	(x=0X1D9E4);
	op_hex		(x,	1);
	create_insn	(x=0X1D9E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1D9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D9FD);
	op_hex		(x,	1);
	create_insn	(x=0X1DA01);
	op_hex		(x,	1);
	create_insn	(x=0X1DA03);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA13);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DA18);
	op_hex		(x,	1);
	create_insn	(x=0X1DA1C);
	op_hex		(x,	1);
	create_insn	(x=0X1DA1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA22);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA25);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA3D);
	op_hex		(x,	1);
	create_insn	(x=0X1DA40);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA45);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA54);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA5A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DA63);
	op_hex		(x,	1);
	create_insn	(x=0X1DA66);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA69);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA71);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA79);
	op_hex		(x,	1);
	create_insn	(x=0X1DA7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA87);
	op_hex		(x,	1);
	create_insn	(x=0X1DA94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DA9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DABE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DAC1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DACA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DACD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DAD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DAD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DAE3);
	op_stkvar	(x,	0);
	create_insn	(0X1DAEE);
	create_insn	(x=0X1DAFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB04);
	op_hex		(x,	1);
	create_insn	(x=0X1DB06);
	op_hex		(x,	1);
	create_insn	(x=0X1DB0A);
	op_hex		(x,	1);
	create_insn	(x=0X1DB0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB12);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DB18);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB21);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB25);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DB2B);
	op_stkvar	(x,	0);
	make_array	(0X1DB36,	0X2);
	create_insn	(x=0X1DB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DB40);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB48);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB54);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB65);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB71);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB74);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB80);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB87);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DB96);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DBA0);
	op_stkvar	(x,	0);
	create_insn	(0X1DBB4);
	create_insn	(x=0X1DBB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DBBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DBCD);
	op_hex		(x,	1);
	create_insn	(x=0X1DBCF);
	op_hex		(x,	1);
	create_insn	(x=0X1DBD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DBE2);
	op_hex		(x,	1);
	create_insn	(x=0X1DBE4);
	op_hex		(x,	1);
	create_insn	(x=0X1DBEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DBF7);
	op_hex		(x,	1);
	create_insn	(x=0X1DBF9);
	op_hex		(x,	1);
	create_insn	(x=0X1DBFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC08);
	op_hex		(x,	1);
	create_insn	(x=0X1DC0C);
	op_hex		(x,	1);
	create_insn	(x=0X1DC0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC14);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC1D);
	op_hex		(x,	1);
	create_insn	(x=0X1DC20);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC23);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC37);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC3E);
	op_stkvar	(x,	0);
	create_insn	(0X1DC44);
	create_insn	(x=0X1DC49);
	op_hex		(x,	1);
	create_insn	(x=0X1DC4B);
	op_hex		(x,	1);
	create_insn	(x=0X1DC4F);
	op_hex		(x,	1);
	create_insn	(x=0X1DC53);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC59);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC63);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC73);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DC83);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC86);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC96);
	op_hex		(x,	1);
	create_insn	(x=0X1DC9B);
	op_hex		(x,	1);
	create_insn	(x=0X1DC9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCB4);
	op_hex		(x,	1);
	create_insn	(x=0X1DCB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCC7);
	op_hex		(x,	1);
	create_insn	(x=0X1DCCA);
	op_hex		(x,	1);
	create_insn	(x=0X1DCCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD0B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1DD0F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1DD13);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1DD17);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1DD1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD23);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD28);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD33);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD36);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD39);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DD43);
	op_hex		(x,	1);
	create_insn	(x=0X1DD63);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD6A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DD6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD77);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X1DD7E);
	create_insn	(x=0X1DD8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD8E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DD92);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD9B);
	op_hex		(x,	1);
	create_insn	(x=0X1DD9E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DDA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDAB);
	op_hex		(x,	1);
	create_insn	(x=0X1DDB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DDC3);
	op_hex		(x,	1);
	create_insn	(x=0X1DDDB);
	op_hex		(x,	1);
	create_insn	(x=0X1DDE3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DDE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDEF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DDF2);
	op_stkvar	(x,	1);
	create_insn	(0X1DDFC);
	create_insn	(x=0X1DE11);
	op_hex		(x,	1);
	create_insn	(x=0X1DE19);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DE21);
	op_hex		(x,	1);
	create_insn	(x=0X1DE28);
	op_stkvar	(x,	0);
	create_insn	(0X1DE2E);
	create_insn	(x=0X1DE35);
	op_stkvar	(x,	1);
	create_insn	(0X1DE3E);
	create_insn	(x=0X1DE67);
	op_hex		(x,	1);
	create_insn	(0X1DE7C);
	create_insn	(x=0X1DE89);
	op_hex		(x,	1);
	create_insn	(x=0X1DE8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DE90);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DE99);
	op_hex		(x,	1);
	create_insn	(x=0X1DE9C);
	op_stkvar	(x,	1);
	create_insn	(0X1DEA6);
	set_name	(0X1DEA6,	"intro_op");
	create_insn	(x=0X1DEA9);
	op_hex		(x,	1);
	create_insn	(x=0X1DEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEB3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DEC1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DEC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DEC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DED3);
	op_hex		(x,	1);
	create_insn	(x=0X1DED6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DEDC);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DEE4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DEF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DEFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF00);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF10);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF16);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF24);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF29);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF32);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF3B);
	op_hex		(x,	1);
	create_insn	(x=0X1DF3E);
	op_stkvar	(x,	0);
	create_insn	(0X1DF47);
	create_insn	(x=0X1DF50);
	op_hex		(x,	1);
	create_insn	(x=0X1DF52);
	op_hex		(x,	1);
	create_insn	(x=0X1DF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF67);
	op_hex		(x,	1);
	create_insn	(x=0X1DF69);
	op_hex		(x,	1);
	create_insn	(x=0X1DF6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF72);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF7E);
	op_hex		(x,	1);
	create_insn	(x=0X1DF80);
	op_hex		(x,	1);
	create_insn	(x=0X1DF86);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF89);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF8C);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1DF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DF9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DFCC);
	op_hex		(x,	1);
	create_insn	(x=0X1DFD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DFE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DFEB);
	op_hex		(x,	1);
	create_insn	(x=0X1DFED);
	op_hex		(x,	1);
	create_insn	(x=0X1DFF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1DFF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E000);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E008);
	op_hex		(x,	1);
	create_insn	(x=0X1E00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E013);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E017);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E01B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E023);
	op_hex		(x,	1);
	create_insn	(x=0X1E026);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E02A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E033);
	op_hex		(x,	1);
	create_insn	(x=0X1E03A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E03D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E040);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E043);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E04B);
	op_hex		(x,	1);
	create_insn	(x=0X1E056);
	op_hex		(x,	1);
	create_insn	(x=0X1E05B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E05E);
	op_stkvar	(x,	1);
	create_insn	(0X1E06C);
	create_insn	(x=0X1E081);
	op_hex		(x,	1);
	create_insn	(x=0X1E08C);
	op_hex		(x,	1);
	create_insn	(x=0X1E0A4);
	op_hex		(x,	1);
	create_insn	(x=0X1E0AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0B2);
	op_hex		(x,	1);
	create_insn	(x=0X1E0B6);
	op_hex		(x,	1);
	create_insn	(x=0X1E0BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E0C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E0D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E0D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0DD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E0E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0EA);
	op_hex		(x,	1);
	create_insn	(x=0X1E0ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E101);
	op_hex		(x,	1);
	create_insn	(x=0X1E108);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E10B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E113);
	op_hex		(x,	1);
	create_insn	(x=0X1E11D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E123);
	op_hex		(x,	1);
	create_insn	(x=0X1E125);
	op_hex		(x,	1);
	create_insn	(x=0X1E129);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E134);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E141);
	op_hex		(x,	1);
	create_insn	(0X1E160);
	create_insn	(x=0X1E167);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E17F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E18A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E191);
	op_stkvar	(x,	1);
	create_insn	(0X1E1A0);
	set_name	(0X1E1A0,	"build_track_object");
	create_insn	(x=0X1E1A3);
	op_hex		(x,	1);
	set_cmt	(0X1E1BA,	"-1000",	0);
	set_cmt	(0X1E1C5,	"grass is the default surface",	0);
	create_insn	(x=0X1E1C5);
	op_enum		(x,	1,	GetEnum("enum_surface_type"),0);
	create_insn	(x=0X1E1D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E1D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E1DB);
	op_stkvar	(x,	1);
	set_cmt	(0X1E1E2,	"divide by 1024",	0);
	create_insn	(x=0X1E1E4);
	op_stkvar	(x,	0);
	set_cmt	(0X1E1E7,	"2D word vector... world xz coords?",	0);
	create_insn	(x=0X1E1EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E1EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E1F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E1FD);
	op_stkvar	(x,	0);
	create_insn	(0X1E206);
	create_insn	(0X1E20D);
	create_insn	(x=0X1E214);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1E21C,	E_NEXT + 0,	"no way _1A is not a col index");
	create_insn	(x=0X1E21C);
	op_hex		(x,	1);
	create_insn	(x=0X1E21E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E225);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E229);
	op_hex		(x,	1);
	create_insn	(x=0X1E22B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E230);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E237);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X1E246,	"terrain tile",	0);
	create_insn	(x=0X1E246);
	op_stkvar	(x,	0);
	set_cmt	(0X1E257,	"coast",	0);
	update_extra_cmt		(0X1E257,	E_NEXT + 0,	"this is deciding coastline angle");
	create_insn	(0X1E257);
	set_name	(0X1E270,	"code_addHillHeight");
	create_insn	(x=0X1E276);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E27C);
	op_hex		(x,	1);
	create_insn	(x=0X1E27E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E282);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E28F);
	op_stkvar	(x,	0);
	create_insn	(0X1E29A);
	create_insn	(0X1E2A0);
	create_insn	(0X1E2A6);
	create_insn	(0X1E2AC);
	update_extra_cmt		(0X1E2AF,	E_PREV + 0,	"Here, the game makes up an unit");
	update_extra_cmt		(0X1E2AF,	E_PREV + 1,	"vector along the coastline (cos");
	update_extra_cmt		(0X1E2AF,	E_PREV + 2,	"and sin), and find its inner ");
	update_extra_cmt		(0X1E2AF,	E_PREV + 3,	"product (misc22) with the");
	update_extra_cmt		(0X1E2AF,	E_PREV + 4,	"relative position vector.");
	create_insn	(x=0X1E2AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E2B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E2C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E2CC);
	op_hex		(x,	1);
	create_insn	(x=0X1E2D5);
	op_hex		(x,	1);
	create_insn	(x=0X1E2D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E2E3);
	op_hex		(x,	1);
	create_insn	(x=0X1E2EC);
	op_hex		(x,	1);
	create_insn	(x=0X1E2F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E2FB);
	op_enum		(x,	1,	GetEnum("enum_surface_type"),0);
	set_cmt	(0X1E304,	"filler tests",	0);
	create_insn	(x=0X1E304);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E30D);
	op_stkvar	(x,	1);
	create_insn	(0X1E324);
	create_insn	(x=0X1E328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E32E);
	op_hex		(x,	1);
	create_insn	(x=0X1E330);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E336);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E346);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E34D);
	op_hex		(x,	1);
	create_insn	(x=0X1E351);
	op_hex		(x,	1);
	create_insn	(x=0X1E355);
	op_hex		(x,	1);
	create_insn	(x=0X1E357);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1E35E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E365);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E36C);
	op_hex		(x,	1);
	create_insn	(x=0X1E370);
	op_hex		(x,	1);
	create_insn	(x=0X1E374);
	op_hex		(x,	1);
	create_insn	(x=0X1E376);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E386);
	op_hex		(x,	1);
	create_insn	(x=0X1E388);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E390);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E396);
	op_hex		(x,	1);
	create_insn	(x=0X1E398);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E39E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E3AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E3B4);
	op_hex		(x,	1);
	create_insn	(x=0X1E3B8);
	op_hex		(x,	1);
	create_insn	(x=0X1E3BC);
	op_hex		(x,	1);
	create_insn	(x=0X1E3BE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1E3C5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E3D2);
	op_hex		(x,	1);
	create_insn	(x=0X1E3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E3DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E3EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E3F1);
	op_hex		(x,	1);
	create_insn	(x=0X1E3F5);
	op_hex		(x,	1);
	create_insn	(x=0X1E3F9);
	op_hex		(x,	1);
	create_insn	(x=0X1E3FB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1E405);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	update_extra_cmt		(0X1E40C,	E_PREV + 0,	"general case");
	create_insn	(x=0X1E40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E413);
	op_hex		(x,	1);
	create_insn	(x=0X1E417);
	op_hex		(x,	1);
	create_insn	(x=0X1E41B);
	op_hex		(x,	1);
	create_insn	(x=0X1E41D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E421);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E428);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1E42E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E434);
	op_hex		(x,	1);
	create_insn	(x=0X1E436);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E43D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E444);
	op_hex		(x,	1);
	create_insn	(x=0X1E448);
	op_hex		(x,	1);
	create_insn	(x=0X1E44C);
	op_hex		(x,	1);
	create_insn	(x=0X1E44E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1E455);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E45B);
	op_hex		(x,	1);
	create_insn	(x=0X1E45D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E46D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E477);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E47A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E483);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E48D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E490);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E496);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E49C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E4A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E4B0);
	op_hex		(x,	1);
	create_insn	(x=0X1E4B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E4B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E4BD);
	op_hex		(x,	1);
	create_insn	(x=0X1E4C1);
	op_hex		(x,	1);
	create_insn	(x=0X1E4C5);
	op_hex		(x,	1);
	create_insn	(x=0X1E4C7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E4CA);
	op_stkvar	(x,	0);
	set_cmt	(0X1E4CD,	"loading physical model indices!",	1);
	create_insn	(x=0X1E4CF);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1E4D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E4D6);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	update_extra_cmt		(0X1E4D9,	E_NEXT + 0,	"now the posElemCrds will be rotated.");
	create_insn	(x=0X1E4D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E4EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E4F7);
	op_stroff	(x,	1,	GetStrucIdByName("TRACKOBJECT"),	0);
	create_insn	(x=0X1E4FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E503);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E507);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E50D);
	op_stkvar	(x,	1);
	create_byte	(0X1E514);
	make_array	(0X1E514,	0X2);
	create_insn	(x=0X1E516);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E519);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E51F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E522);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E527);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E52A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E52D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E530);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E533);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E536);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E53B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E540);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E545);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E548);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E54D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E550);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E555);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E558);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E55D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E562);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E565);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E568);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E56D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E570);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E573);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E576);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E579);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E581);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E58A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E58D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E590);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E596);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E59E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E5A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5A4);
	op_stkvar	(x,	1);
	create_insn	(0X1E5AF);
	create_insn	(x=0X1E5B2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(0X1E5B8);
	create_insn	(x=0X1E5BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E5F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E5FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E600);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E605);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E608);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1E60E,	E_PREV + 0,	"...and thus fast grass was born.");
	create_insn	(x=0X1E60E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E614,	E_PREV + 0,	"An attempt to mirror half of the");
	update_extra_cmt		(0X1E614,	E_PREV + 1,	"element along both axes. Broken.");
	create_insn	(x=0X1E614);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E619);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E621);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E624,	E_PREV + 0,	"Only difference between small");
	update_extra_cmt		(0X1E624,	E_PREV + 1,	"and large corners is radius.");
	create_insn	(x=0X1E624);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E62B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E637);
	op_hex		(x,	1);
	create_insn	(x=0X1E63A);
	op_stkvar	(x,	0);
	create_insn	(0X1E645);
	create_insn	(x=0X1E64A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E650,	E_PREV + 0,	"Switching origin to bottom-left");
	update_extra_cmt		(0X1E650,	E_PREV + 1,	"of tile before tracing the arc.");
	create_insn	(x=0X1E650);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E657);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E663);
	op_hex		(x,	1);
	create_insn	(x=0X1E666);
	op_stkvar	(x,	0);
	create_insn	(0X1E671);
	create_insn	(x=0X1E678);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E681);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E68B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E690);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E697);
	op_stkvar	(x,	0);
	create_insn	(0X1E6A1);
	create_insn	(x=0X1E6A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E6CC);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1E6CF,	E_NEXT + 0,	"abs. value");
	create_insn	(x=0X1E6D4);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1E6D7,	E_PREV + 0,	"misc1C is abs(x)");
	create_insn	(x=0X1E6D7);
	op_stkvar	(x,	0);
	create_insn	(0X1E6DE);
	create_insn	(x=0X1E6E1);
	op_hex		(x,	1);
	create_insn	(x=0X1E6E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6E6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1E6EE);
	op_hex		(x,	1);
	create_insn	(x=0X1E6F0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E6F4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	update_extra_cmt		(0X1E6FA,	E_PREV + 0,	"This bit implements a line equation");
	update_extra_cmt		(0X1E6FA,	E_PREV + 1,	"in order to find where the wall is.");
	create_insn	(x=0X1E6FC);
	op_hex		(x,	1);
	create_insn	(x=0X1E6FE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E702);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E709);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E70C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E713);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E717);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E72A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	update_extra_cmt		(0X1E72E,	E_PREV + 0,	"misc1E = wall x coord.");
	create_insn	(x=0X1E72E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E733);
	op_hex		(x,	1);
	create_insn	(x=0X1E735);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E739);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	update_extra_cmt		(0X1E73F,	E_PREV + 0,	"Same idea, now with the outer pavement");
	update_extra_cmt		(0X1E73F,	E_PREV + 1,	"limits.");
	create_insn	(x=0X1E741);
	op_hex		(x,	1);
	create_insn	(x=0X1E743);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E747);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E74E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E751);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E758);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E75C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1E76F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	update_extra_cmt		(0X1E773,	E_PREV + 0,	"misc22 = outer pavement");
	update_extra_cmt		(0X1E773,	E_PREV + 1,	"boundary.");
	create_insn	(x=0X1E773);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E776,	E_NEXT + 0,	"misc1C is abs(x)");
	create_insn	(x=0X1E776);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E779);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E77E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E781);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E789,	E_PREV + 0,	"About half of the if/else paths in");
	update_extra_cmt		(0X1E789,	E_PREV + 1,	"this section are useless.");
	create_insn	(x=0X1E789);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E792,	E_NEXT + 0,	"to hig. divider");
	create_insn	(x=0X1E792);
	op_stkvar	(x,	0);
	create_insn	(0X1E79B);
	create_insn	(x=0X1E7A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7AE);
	op_stkvar	(x,	0);
	create_insn	(0X1E7B7);
	create_insn	(x=0X1E7C0);
	op_stkvar	(x,	0);
	create_insn	(0X1E7D0);
	create_insn	(x=0X1E7DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E7E4);
	op_stkvar	(x,	0);
	create_insn	(0X1E7ED);
	create_insn	(x=0X1E7F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E802);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E810);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E81E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E82B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E831);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E838);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E846);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E856);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E85F);
	op_stkvar	(x,	0);
	create_insn	(0X1E868);
	create_insn	(x=0X1E874);
	op_stkvar	(x,	0);
	create_insn	(0X1E87D);
	create_insn	(0X1E886);
	create_insn	(x=0X1E890);
	op_stkvar	(x,	0);
	create_insn	(0X1E899);
	create_insn	(x=0X1E8A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8D8);
	op_stkvar	(x,	0);
	create_insn	(0X1E8E1);
	create_insn	(x=0X1E8E4);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1E8EE,	E_NEXT + 0,	"If <390, ignore bridge");
	create_insn	(0X1E8F6);
	create_insn	(x=0X1E8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E906);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E913);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E922);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E92F);
	op_stkvar	(x,	0);
	create_insn	(0X1E938);
	create_insn	(0X1E942);
	create_insn	(x=0X1E94C);
	op_stkvar	(x,	0);
	create_insn	(0X1E955);
	create_insn	(x=0X1E961);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E966);
	op_stkvar	(x,	0);
	create_insn	(0X1E96F);
	create_insn	(x=0X1E978);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E98A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E991);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E99D);
	op_hex		(x,	1);
	update_extra_cmt		(0X1E9A0,	E_NEXT + 0,	"delta from centerline");
	create_insn	(x=0X1E9A3);
	op_stkvar	(x,	0);
	create_insn	(0X1E9AE);
	create_insn	(x=0X1E9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E9CD);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1E9D6,	E_PREV + 0,	"This code selects from the polar");
	update_extra_cmt		(0X1E9D6,	E_PREV + 1,	"coordinates an adequate wall");
	update_extra_cmt		(0X1E9D6,	E_PREV + 2,	"index for the current elevated");
	update_extra_cmt		(0X1E9D6,	E_PREV + 3,	"corner segment.");
	create_insn	(x=0X1E9D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9E9);
	op_hex		(x,	1);
	create_insn	(x=0X1E9F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1E9FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA26);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA2B);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EA30,	E_PREV + 0,	"si is an angle. Values for");
	update_extra_cmt		(0X1EA30,	E_PREV + 1,	"types A and B are pi apart.");
	create_insn	(x=0X1EA36);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA3B);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EA43,	E_PREV + 0,	"misc1C will be the planindex.");
	update_extra_cmt		(0X1EA43,	E_PREV + 1,	"misc1E is an \"internal\" plan index.");
	create_insn	(x=0X1EA43);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA52);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA58);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA66);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA72);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA83);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA90);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EA97);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EABA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EAEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAF8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EAFD,	E_PREV + 0,	"This block adjusts planindex to");
	update_extra_cmt		(0X1EAFD,	E_PREV + 1,	"choose the correct plane from");
	update_extra_cmt		(0X1EAFD,	E_PREV + 2,	"the triangulated pairs which make");
	update_extra_cmt		(0X1EAFD,	E_PREV + 3,	"up a banked road entrance.");
	create_insn	(x=0X1EAFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB03);
	op_hex		(x,	1);
	create_insn	(x=0X1EB05);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EB10);
	op_hex		(x,	1);
	create_insn	(x=0X1EB19);
	op_hex		(x,	1);
	create_insn	(x=0X1EB1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EB27);
	op_hex		(x,	1);
	create_insn	(x=0X1EB30);
	op_hex		(x,	1);
	create_insn	(x=0X1EB35);
	op_stkvar	(x,	0);
	create_insn	(0X1EB3F);
	create_insn	(x=0X1EB46);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EB4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EB64);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB73);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB7F);
	op_hex		(x,	1);
	create_insn	(x=0X1EB85);
	op_stkvar	(x,	0);
	create_insn	(0X1EB90);
	update_extra_cmt		(0X1EB98,	E_PREV + 0,	"misc1E is the \"internal\" plan and wall");
	update_extra_cmt		(0X1EB98,	E_PREV + 1,	"index.");
	create_insn	(x=0X1EB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBAB);
	op_hex		(x,	1);
	create_insn	(x=0X1EBB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBF0);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EBF6,	E_PREV + 0,	"back leg = x and z mirror");
	update_extra_cmt		(0X1EBF6,	E_PREV + 1,	"of front leg.");
	create_insn	(x=0X1EBF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EBFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC00);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC03);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1EC0A,	E_PREV + 0,	"misc1C = planindex. This code");
	update_extra_cmt		(0X1EC0A,	E_PREV + 1,	"chooses the \"leg\" of the loop.");
	create_insn	(x=0X1EC0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC12);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC15);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC18);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EC2A);
	op_stkvar	(x,	0);
	create_insn	(0X1EC32);
	create_insn	(x=0X1EC38);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1EC3B,	E_PREV + 0,	"misc1E = abs(z)");
	create_insn	(x=0X1EC3B);
	op_stkvar	(x,	0);
	create_insn	(0X1EC42);
	update_extra_cmt		(0X1EC43,	E_PREV + 0,	"Chooses the slice of the loop.");
	create_insn	(x=0X1EC45);
	op_hex		(x,	1);
	create_insn	(x=0X1EC47);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC4A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1EC50);
	op_stkvar	(x,	1);
	set_cmt	(0X1EC5A,	"upside-down limit",	0);
	create_insn	(0X1EC62);
	create_insn	(x=0X1EC6B);
	op_hex		(x,	1);
	create_insn	(x=0X1EC6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC70);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1EC79);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC8B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1EC91);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EC98);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1EC9D,	E_PREV + 0,	"Line equation for loop x bounds, lower");
	update_extra_cmt		(0X1EC9D,	E_PREV + 1,	"half. misc3C gets the x limits.");
	create_insn	(x=0X1EC9F);
	op_hex		(x,	1);
	create_insn	(x=0X1ECA1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECA5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECAC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECB6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECBA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ECD0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ECD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ECDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ECE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECFB);
	op_stkvar	(x,	1);
	create_insn	(0X1ED04);
	create_insn	(x=0X1ED09);
	op_stkvar	(x,	1);
	create_insn	(0X1ED1B);
	create_insn	(x=0X1ED1D);
	op_hex		(x,	1);
	create_insn	(x=0X1ED1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED22);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1ED2B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED32);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED37);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED3A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1ED40);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED47);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED4E);
	op_hex		(x,	1);
	create_insn	(x=0X1ED50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED54);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	update_extra_cmt		(0X1ED5A,	E_PREV + 0,	"Line equation for loop x bounds, lower");
	update_extra_cmt		(0X1ED5A,	E_PREV + 1,	"half. misc3C gets the x limits.");
	create_insn	(x=0X1ED5C);
	op_hex		(x,	1);
	create_insn	(x=0X1ED5E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED62);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED69);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED73);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED77);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ED8D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1ED91);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED94);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ED97);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1ED9F);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1EDA2,	E_PREV + 0,	"190h = loop width");
	create_insn	(x=0X1EDA5);
	op_stkvar	(x,	1);
	create_insn	(0X1EDAD);
	create_insn	(0X1EDB2);
	create_insn	(x=0X1EDB5);
	op_hex		(x,	1);
	create_insn	(x=0X1EDB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDBA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	update_extra_cmt		(0X1EDC0,	E_PREV + 0,	"Line equation for the base of the loop.");
	create_insn	(x=0X1EDC2);
	op_hex		(x,	1);
	create_insn	(x=0X1EDC4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDD2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDD9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDDD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDF0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EDF7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EDFB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EE02);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE05);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EE0C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EE10);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EE23);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1EE27);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE35);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE38);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE66);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE76);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE82);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE88);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE95);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EE9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EEA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EEB2);
	op_stkvar	(x,	0);
	create_insn	(0X1EEBC);
	create_insn	(x=0X1EEC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EECF);
	op_stkvar	(x,	0);
	create_insn	(0X1EED9);
	create_insn	(x=0X1EEDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EEF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF00);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF10);
	op_stkvar	(x,	0);
	create_insn	(0X1EF1A);
	create_insn	(x=0X1EF24);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF32);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1EF3A,	E_PREV + 0,	">A4h is outside pipe wall");
	create_insn	(x=0X1EF3A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EF41,	E_PREV + 0,	"Height of pipe wall entrance.");
	update_extra_cmt		(0X1EF41,	E_PREV + 1,	"Since there is no line equation");
	update_extra_cmt		(0X1EF41,	E_PREV + 2,	"to provide variable heights, we");
	update_extra_cmt		(0X1EF41,	E_PREV + 3,	"have the annoying invisible");
	update_extra_cmt		(0X1EF41,	E_PREV + 4,	"pipe entrance wall bug.");
	create_insn	(x=0X1EF47);
	op_stkvar	(x,	0);
	create_insn	(0X1EF56);
	create_insn	(x=0X1EF60);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF69);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF81);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF90);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EF9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFC8);
	op_stkvar	(x,	0);
	create_insn	(0X1EFD2);
	create_insn	(x=0X1EFD8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1EFE0,	E_PREV + 0,	"pipe entrance plan triangulation.");
	create_insn	(x=0X1EFE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1EFE9);
	op_hex		(x,	1);
	create_insn	(x=0X1EFF2);
	op_hex		(x,	1);
	create_insn	(x=0X1EFF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F004);
	op_hex		(x,	1);
	create_insn	(x=0X1F00D);
	op_hex		(x,	1);
	create_insn	(x=0X1F012);
	op_stkvar	(x,	0);
	create_insn	(0X1F01C);
	update_extra_cmt		(0X1F020,	E_PREV + 0,	"misc22 is obstacle flag.");
	create_insn	(x=0X1F020);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F028);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F02D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F033);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F03A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F042);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F049,	E_PREV + 0,	"Height of pipe wall.");
	create_insn	(x=0X1F04F);
	op_stkvar	(x,	0);
	create_insn	(0X1F05E);
	create_insn	(x=0X1F068);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F072);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F084);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F08B);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1F091,	E_PREV + 0,	"97h = height of maximum z.");
	update_extra_cmt		(0X1F091,	E_PREV + 1,	"Unsurprisingly, this is almost");
	update_extra_cmt		(0X1F091,	E_PREV + 2,	"the same as the cork l/r.");
	create_insn	(x=0X1F09D);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0A9);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F0AF,	E_PREV + 0,	"with obstacle.");
	create_insn	(x=0X1F0AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0BB);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F0C1,	E_PREV + 0,	"obstacle plan.");
	create_insn	(x=0X1F0C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0D6);
	op_stkvar	(x,	0);
	create_insn	(0X1F0DF);
	create_insn	(x=0X1F0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F0FD);
	op_stkvar	(x,	0);
	create_insn	(0X1F10C);
	create_insn	(x=0X1F116);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F11C);
	op_stkvar	(x,	0);
	create_insn	(0X1F12C);
	create_insn	(x=0X1F136);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F13C);
	op_stkvar	(x,	0);
	create_insn	(0X1F14C);
	create_insn	(x=0X1F156);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F15C);
	op_stkvar	(x,	0);
	create_insn	(0X1F16C);
	create_insn	(x=0X1F176);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F17C);
	op_stkvar	(x,	0);
	create_insn	(0X1F18C);
	create_insn	(x=0X1F196);
	op_stkvar	(x,	0);
	create_insn	(0X1F1A6);
	create_insn	(x=0X1F1B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1CC);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1F1DC,	E_PREV + 0,	"97h is the height of maximum x.");
	update_extra_cmt		(0X1F1DC,	E_PREV + 1,	"This is analogous to the loop code.");
	update_extra_cmt		(0X1F1DE,	E_PREV + 0,	"misc1E = upper half flag.");
	create_insn	(x=0X1F1DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1E6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F1EB,	E_PREV + 0,	"misc22 = plan selector");
	create_insn	(x=0X1F1EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F1FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F202);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F208);
	op_stkvar	(x,	0);
	create_byte	(0X1F210);
	make_array	(0X1F210,	0X2);
	create_insn	(x=0X1F212);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F21A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F220);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F226);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F22E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F234);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F23A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F242);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F24A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F250);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F256);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F25E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F266);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F26C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F272);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F27A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F282);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F288);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F290);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F295);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F29B,	E_PREV + 0,	"Shockingly enough, no line equations.");
	create_insn	(x=0X1F29B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F29E);
	op_hex		(x,	1);
	create_insn	(x=0X1F2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2A3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1F2A9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X1F2AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2C2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F2CC,	E_PREV + 0,	"The dreaded cork l/r wall...");
	create_insn	(0X1F2CC);
	update_extra_cmt		(0X1F2E0,	E_PREV + 0,	"LH cork = x mirroring of RH cork.");
	create_insn	(x=0X1F2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F2E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F2ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F2F2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F2FA,	E_PREV + 0,	"misc1E = effective x.");
	update_extra_cmt		(0X1F2FA,	E_PREV + 1,	"misc22 = planindex base value.");
	update_extra_cmt		(0X1F2FA,	E_PREV + 2,	"C = wallindex base value (outer wall).");
	update_extra_cmt		(0X1F2FA,	E_PREV + 3,	"E = wallindex base value (inner wall).");
	create_insn	(x=0X1F2FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F300);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F305);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F30A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F314);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F31A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F329);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F32F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F339);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F343,	E_PREV + 0,	"Flat bridge entrance.");
	create_insn	(x=0X1F343);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F349);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F350);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F356);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F365);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F36C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F37F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F386);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F395);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F39B);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1F3A8,	E_PREV + 0,	"u/d corks rotate around (0,0).");
	create_insn	(x=0X1F3A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3B3);
	op_hex		(x,	1);
	create_insn	(x=0X1F3B6);
	op_stkvar	(x,	0);
	create_insn	(0X1F3C1);
	update_extra_cmt		(0X1F3C9,	E_PREV + 0,	"ax = plan selector.");
	update_extra_cmt		(0X1F3C9,	E_PREV + 1,	"si = wall selector.");
	create_insn	(x=0X1F3C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F3D4);
	op_hex		(x,	1);
	create_insn	(x=0X1F3DC);
	op_hex		(x,	1);
	create_insn	(x=0X1F3EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F40A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F415);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F41E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F432);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F438);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F43E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F444);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F44A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F451);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F45E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F46E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F47E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F48E);
	op_stkvar	(x,	0);
	create_insn	(0X1F497);
	create_insn	(x=0X1F4A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4BC);
	op_stkvar	(x,	0);
	create_insn	(0X1F4C6);
	create_insn	(x=0X1F4CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F4FC);
	op_stkvar	(x,	0);
	create_insn	(0X1F505);
	create_insn	(x=0X1F50E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F518);
	op_stkvar	(x,	0);
	create_insn	(0X1F522);
	create_insn	(x=0X1F528);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F538);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F548);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F558);
	op_stkvar	(x,	0);
	create_insn	(0X1F562);
	create_insn	(x=0X1F56C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F576);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F580);
	op_stkvar	(x,	0);
	create_insn	(0X1F589);
	create_insn	(x=0X1F58F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F59E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F5AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F5BE);
	op_stkvar	(x,	0);
	create_insn	(0X1F5C8);
	create_insn	(x=0X1F5D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F5DC);
	op_stkvar	(x,	0);
	create_insn	(0X1F5E5);
	create_insn	(x=0X1F5EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F5FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F60A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F61A);
	op_stkvar	(x,	0);
	create_insn	(0X1F624);
	create_insn	(x=0X1F62E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F638);
	op_stkvar	(x,	0);
	create_insn	(0X1F642);
	create_insn	(x=0X1F648);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F658);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F668);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F678);
	op_stkvar	(x,	0);
	create_insn	(0X1F682);
	create_insn	(x=0X1F68C);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F695);
	op_stkvar	(x,	0);
	create_insn	(0X1F69E);
	create_insn	(x=0X1F6A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F6B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F6C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F6D4);
	op_stkvar	(x,	0);
	create_insn	(0X1F6DD);
	create_insn	(x=0X1F6E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F6F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F6FA);
	op_stkvar	(x,	0);
	create_insn	(0X1F703);
	create_insn	(x=0X1F709);
	op_stkvar	(x,	0);
	create_byte	(0X1F718);
	make_array	(0X1F718,	0X2);
	create_insn	(x=0X1F71A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F72A);
	op_stkvar	(x,	0);
	make_array	(0X1F73A,	0X2);
	create_insn	(x=0X1F73C);
	op_stkvar	(x,	0);
	create_insn	(0X1F746);
	create_word	(x=0X1F750);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F752,	"road",	0);
	create_word	(x=0X1F752);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F754,	"sharp corner",	0);
	create_word	(x=0X1F754);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F756,	"corner",	0);
	create_word	(x=0X1F756);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F758,	"chicane B",	0);
	create_word	(x=0X1F758);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F75A,	"chicane A",	0);
	create_word	(x=0X1F75A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F75C,	"sharp split A",	0);
	create_word	(x=0X1F75C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F75E,	"sharp split B",	0);
	create_word	(x=0X1F75E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F760,	"split A",	0);
	create_word	(x=0X1F760);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F762,	"split B",	0);
	create_word	(x=0X1F762);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F764,	"highway entrance",	0);
	create_word	(x=0X1F764);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F766,	"highway",	0);
	create_word	(x=0X1F766);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F768,	"crossroad",	0);
	create_word	(x=0X1F768);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F76A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F76C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F76E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F770,	"ramp",	0);
	create_word	(x=0X1F770);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F772,	"solid ramp",	0);
	create_word	(x=0X1F772);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F774,	"elevated road",	0);
	create_word	(x=0X1F774);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F776,	"elevated span",	0);
	create_word	(x=0X1F776);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F778,	"solid road",	0);
	create_word	(x=0X1F778);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F77A,	"elevated corner",	0);
	create_word	(x=0X1F77A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F77C,	"overpass",	0);
	create_word	(x=0X1F77C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F77E,	"bank rd. entrance B",	0);
	create_word	(x=0X1F77E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F780,	"bank rd. entrance A",	0);
	create_word	(x=0X1F780);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F782,	"banked road",	0);
	create_word	(x=0X1F782);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F784,	"banked corner",	0);
	create_word	(x=0X1F784);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F786,	"loop",	0);
	create_word	(x=0X1F786);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F788,	"tunnel",	0);
	create_word	(x=0X1F788);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F78A,	"pipe entrance",	0);
	create_word	(x=0X1F78A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F78C,	"pipe",	0);
	create_word	(x=0X1F78C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F78E,	"half-pipe",	0);
	create_word	(x=0X1F78E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F790,	"cork u/d A",	0);
	create_word	(x=0X1F790);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F792,	"cork u/d B",	0);
	create_word	(x=0X1F792);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F794,	"slalom",	0);
	create_word	(x=0X1F794);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F796,	"cork l/r",	0);
	create_word	(x=0X1F796);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F798);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F79A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F79C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F79E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7A0);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7A2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7A4);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7A6);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7A8);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7AA);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7AC);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7AE);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7B0);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7B2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7B4);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7B6);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7B8);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7BA);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7BC);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7BE);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7C0);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7C2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7C4);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7C6);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7C8);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7CA);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7CC);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F7CE);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7D0,	"empty",	0);
	create_word	(x=0X1F7D0);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7D2,	"barn",	0);
	create_word	(x=0X1F7D2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7D4,	"gas station",	0);
	create_word	(x=0X1F7D4);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7D6,	"Joe's",	0);
	create_word	(x=0X1F7D6);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7D8,	"office",	0);
	create_word	(x=0X1F7D8);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7DA,	"windmill",	0);
	create_word	(x=0X1F7DA);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7DC,	"ship",	0);
	create_word	(x=0X1F7DC);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7DE,	"pine",	0);
	create_word	(x=0X1F7DE);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7E0,	"cactus",	0);
	create_word	(x=0X1F7E0);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7E2,	"tennis",	0);
	create_word	(x=0X1F7E2);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	set_cmt	(0X1F7E4,	"palm",	0);
	create_word	(x=0X1F7E4);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(x=0X1F7E6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F7EF,	E_PREV + 0,	"First, get coordinate origin on tile.");
	create_insn	(x=0X1F7EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7F5);
	op_hex		(x,	1);
	create_insn	(x=0X1F7F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7FC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1F800);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F803);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F809);
	op_hex		(x,	1);
	create_insn	(x=0X1F80E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1F812);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F815);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1F822,	E_PREV + 0,	"Straight slopes.");
	create_insn	(x=0X1F825);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(x=0X1F82A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F832);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F837);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F83A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F83D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F840);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F843);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F848);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F84E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F853);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F858);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F85B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F860);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F866);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F86B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F86E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F871);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F876);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F879);
	op_stkvar	(x,	1);
	create_word	(x=0X1F87E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F880);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F882);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F884);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	update_extra_cmt		(0X1F886,	E_PREV + 0,	"Only the four next offsets are referred to by off_1F78E[bx]");
	create_word	(x=0X1F886);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F888);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F88A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F88C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F88E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F890);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F892);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X1F894);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(x=0X1F896);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1F8A5,	E_PREV + 0,	"Angled slopes.");
	create_insn	(0X1F8BC);
	make_array	(0X1F8BE,	0X2);
	create_insn	(0X1F8C0);
	update_extra_cmt		(0X1F8D7,	E_PREV + 0,	"Shifting planindex according to orientation.");
	create_insn	(0X1F8D7);
	create_insn	(x=0X1F8DD);
	op_stkvar	(x,	1);
	create_insn	(0X1F8E8);
	create_insn	(0X1F8F0);
	create_insn	(0X1F8F8);
	update_extra_cmt		(0X1F8FC,	E_PREV + 0,	"Outer angled slopes");
	create_insn	(x=0X1F8FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F908);
	op_hex		(x,	1);
	create_insn	(x=0X1F911);
	op_hex		(x,	1);
	create_insn	(x=0X1F914);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F922);
	op_hex		(x,	1);
	create_insn	(x=0X1F92B);
	op_hex		(x,	1);
	create_insn	(x=0X1F930);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X1F940,	E_PREV + 0,	"Inner angled slopes.");
	create_insn	(x=0X1F940);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F94C);
	op_hex		(x,	1);
	create_insn	(x=0X1F955);
	op_hex		(x,	1);
	create_insn	(x=0X1F958);
	op_stkvar	(x,	0);
	create_insn	(x=0X1F966);
	op_hex		(x,	1);
	create_insn	(x=0X1F96F);
	op_hex		(x,	1);
	create_insn	(x=0X1F974);
	op_stkvar	(x,	0);
	create_insn	(0X1F984);
	create_insn	(0X1F98E);
	update_extra_cmt		(0X1F992,	E_PREV + 0,	"planindex -> planptr, finally.");
	update_extra_cmt		(0X1F9AF,	E_PREV + 0,	"Weird...");
	create_insn	(x=0X1F9AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9BB);
	op_hex		(x,	1);
	create_insn	(0X1F9C4);
	create_insn	(0X1F9CC);
	create_insn	(0X1F9D4);
	create_insn	(0X1F9E3);
	create_insn	(x=0X1F9E9);
	op_hex		(x,	1);
	set_cmt	(0X1F9ED,	"*6",	0);
	create_insn	(x=0X1F9ED);
	op_hex		(x,	1);
	create_insn	(x=0X1F9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9FE);
	op_hex		(x,	1);
	create_insn	(x=0X1FA04);
	op_stkvar	(x,	1);
	create_insn	(0X1FA13);
	create_insn	(0X1FA20);
	create_insn	(x=0X1FA25);
	op_hex		(x,	1);
	create_insn	(x=0X1FA29);
	op_hex		(x,	1);
	create_insn	(x=0X1FA31);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA34);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA37);
	op_stkvar	(x,	1);
	create_insn	(0X1FA4C);
	create_insn	(x=0X1FA51);
	op_hex		(x,	1);
	create_insn	(x=0X1FA55);
	op_hex		(x,	1);
	create_insn	(x=0X1FA5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA62);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA65);
	op_stkvar	(x,	1);
	create_insn	(0X1FA78);
	create_insn	(x=0X1FA7D);
	op_hex		(x,	1);
	create_insn	(x=0X1FA81);
	op_hex		(x,	1);
	create_insn	(x=0X1FA8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FA91);
	op_stkvar	(x,	1);
	create_insn	(0X1FAA6);
	create_insn	(x=0X1FAAB);
	op_hex		(x,	1);
	create_insn	(x=0X1FAAF);
	op_hex		(x,	1);
	create_insn	(x=0X1FAB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FABC);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FABF);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X1FAD0,	E_PREV + 0,	"Translating to world coords.");
	create_insn	(0X1FAD0);
	create_insn	(0X1FAE4);
	set_name	(0X1FAE4,	"bto_auxiliary1");
	create_insn	(x=0X1FAE7);
	op_hex		(x,	1);
	create_insn	(x=0X1FAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAEF);
	op_hex		(x,	1);
	create_insn	(x=0X1FAF1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FAF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB03);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB12);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB15);
	op_hex		(x,	1);
	create_insn	(x=0X1FB17);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FB1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB21);
	op_hex		(x,	1);
	create_insn	(x=0X1FB23);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FB27);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB33);
	op_stkvar	(x,	1);
	create_insn	(0X1FB4A);
	create_insn	(x=0X1FB4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB51);
	op_hex		(x,	1);
	create_insn	(x=0X1FB53);
	op_stkvar	(x,	0);
	set_cmt	(0X1FB58,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X1FB58);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB72);
	op_hex		(x,	1);
	create_insn	(x=0X1FB76);
	op_hex		(x,	1);
	create_insn	(x=0X1FB7A);
	op_hex		(x,	1);
	create_insn	(x=0X1FB7C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1FB83);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB86);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FB8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FB8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB94);
	op_hex		(x,	1);
	create_insn	(x=0X1FB98);
	op_hex		(x,	1);
	create_insn	(x=0X1FB9C);
	op_hex		(x,	1);
	create_insn	(x=0X1FB9E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1FBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBAB);
	op_hex		(x,	1);
	create_insn	(x=0X1FBAD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBB7);
	op_hex		(x,	1);
	create_insn	(x=0X1FBB9);
	op_stkvar	(x,	0);
	set_cmt	(0X1FBBE,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X1FBBE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FBC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FBD7);
	op_hex		(x,	1);
	create_insn	(x=0X1FBDB);
	op_hex		(x,	1);
	create_insn	(x=0X1FBDF);
	op_hex		(x,	1);
	create_insn	(x=0X1FBE1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1FBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBEB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FBF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBF5);
	op_hex		(x,	1);
	create_insn	(x=0X1FBF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FBFC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FC16);
	op_hex		(x,	1);
	create_insn	(x=0X1FC1A);
	op_hex		(x,	1);
	create_insn	(x=0X1FC1E);
	op_hex		(x,	1);
	create_insn	(x=0X1FC20);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1FC2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC2D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC3B);
	op_hex		(x,	1);
	create_insn	(x=0X1FC3F);
	op_hex		(x,	1);
	create_insn	(x=0X1FC43);
	op_hex		(x,	1);
	create_insn	(x=0X1FC45);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FC49);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FC50);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X1FC56);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC59);
	op_hex		(x,	1);
	create_insn	(x=0X1FC5B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FC5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FC62);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC69);
	op_hex		(x,	1);
	create_insn	(x=0X1FC6D);
	op_hex		(x,	1);
	create_insn	(x=0X1FC71);
	op_hex		(x,	1);
	create_insn	(x=0X1FC73);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X1FC7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC7D);
	op_hex		(x,	1);
	create_insn	(x=0X1FC7F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FC83);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC8F);
	op_hex		(x,	1);
	create_insn	(x=0X1FC93);
	op_hex		(x,	1);
	create_insn	(x=0X1FC97);
	op_hex		(x,	1);
	create_insn	(x=0X1FC99);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCB2);
	create_insn	(x=0X1FCB5);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCC2);
	create_insn	(x=0X1FCC5);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCCC);
	create_insn	(x=0X1FCCF);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCD6);
	create_insn	(x=0X1FCD9);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCE0);
	create_insn	(x=0X1FCE3);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCEA);
	create_insn	(x=0X1FCED);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X1FCF4);
	create_insn	(0X1FD02);
	create_insn	(x=0X1FD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD17);
	op_hex		(x,	1);
	create_insn	(x=0X1FD19);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FD1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FD35);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FD3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FD3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD46);
	op_hex		(x,	1);
	create_insn	(x=0X1FD4A);
	op_hex		(x,	1);
	create_insn	(x=0X1FD4E);
	op_hex		(x,	1);
	create_insn	(x=0X1FD50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FD54);
	op_stkvar	(x,	0);
	create_insn	(0X1FD5C);
	create_insn	(x=0X1FD60);
	op_hex		(x,	1);
	create_insn	(x=0X1FD64);
	op_hex		(x,	1);
	create_insn	(x=0X1FD66);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FD69);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD73);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD87);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD93);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD99);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDAD);
	op_stkvar	(x,	1);
	create_insn	(0X1FDBC);
	create_insn	(x=0X1FDCA);
	op_hex		(x,	1);
	create_insn	(x=0X1FDCE);
	op_hex		(x,	1);
	create_insn	(x=0X1FDD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FDD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE00);
	op_stkvar	(x,	1);
	create_insn	(0X1FE08);
	create_insn	(x=0X1FE0C);
	op_hex		(x,	1);
	create_insn	(x=0X1FE10);
	op_hex		(x,	1);
	create_insn	(x=0X1FE12);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FE15);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE21);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE29);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE32);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE35);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE41);
	op_stkvar	(x,	1);
	create_insn	(0X1FE4A);
	create_insn	(x=0X1FE4E);
	op_hex		(x,	1);
	create_insn	(x=0X1FE52);
	op_hex		(x,	1);
	create_insn	(x=0X1FE54);
	op_stkvar	(x,	0);
	create_insn	(x=0X1FE57);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE62);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE65);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE73);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE79);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE82);
	op_stkvar	(x,	1);
	create_insn	(0X1FE8C);
	create_insn	(0X1FE94);
	set_name	(0X1FE94,	"shape3d_load_all");
	create_insn	(x=0X1FE97);
	op_hex		(x,	1);
	create_insn	(x=0X1FEC2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FECB);
	op_hex		(x,	1);
	create_insn	(x=0X1FED5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FEDE);
	op_hex		(x,	1);
	create_insn	(x=0X1FEEE);
	op_hex		(x,	1);
	create_insn	(x=0X1FEF0);
	op_hex		(x,	1);
	create_insn	(x=0X1FEF4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FF05);
	op_hex		(x,	1);
	create_insn	(x=0X1FF17);
	op_hex		(x,	1);
	create_insn	(x=0X1FF19);
	op_hex		(x,	1);
	create_insn	(x=0X1FF1D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FF2E);
	op_hex		(x,	1);
	create_insn	(x=0X1FF3D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FF4E);
	op_hex		(x,	1);
	create_insn	(0X1FF5E);
	set_name	(0X1FF5E,	"shape3d_free_all");
	create_insn	(x=0X1FF74);
	op_hex		(x,	1);
	create_insn	(x=0X1FF8D);
	op_hex		(x,	1);
	create_insn	(0X1FF92);
	set_name	(0X1FF92,	"shape3d_load_car_shapes");
	create_insn	(x=0X1FF95);
	op_hex		(x,	1);
	create_insn	(x=0X1FF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFB4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FFBD);
	op_hex		(x,	1);
	create_insn	(x=0X1FFC7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FFCB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FFD9);
	op_hex		(x,	1);
	create_insn	(x=0X1FFE3);
	op_hex		(x,	1);
	create_insn	(x=0X1FFE6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FFEA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X1FFFB);
	op_hex		(x,	1);
	create_insn	(x=0X20005);
	op_hex		(x,	1);
	create_insn	(x=0X20012);
	op_stkvar	(x,	0);
	create_insn	(x=0X20015);
	op_stkvar	(x,	0);
	create_insn	(x=0X20018);
	op_stkvar	(x,	1);
	create_insn	(x=0X2001B);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20022);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20026);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20029);
	op_hex		(x,	1);
	create_insn	(x=0X2002E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20035);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20039);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2003D);
	op_hex		(x,	1);
	create_insn	(x=0X20048);
	op_hex		(x,	1);
	create_insn	(x=0X2004C);
	op_hex		(x,	1);
	create_insn	(x=0X20053);
	op_stkvar	(x,	1);
	create_insn	(x=0X20056);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20059);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2005D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20063);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20067);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2006B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2006E);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20072);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20076);
	op_stkvar	(x,	1);
	create_insn	(x=0X2007C);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20080);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20084);
	op_stkvar	(x,	1);
	create_insn	(x=0X2008A);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2008E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20092);
	op_stkvar	(x,	1);
	create_insn	(x=0X20095);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20099);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2009D);
	op_stkvar	(x,	1);
	create_insn	(x=0X200A2);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X200A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X200B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X200B9);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X200BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X200D4);
	create_insn	(x=0X200D8);
	op_hex		(x,	1);
	create_insn	(x=0X200DA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X200E6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X200EA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X200FB);
	op_hex		(x,	1);
	create_insn	(x=0X20105);
	op_hex		(x,	1);
	create_insn	(x=0X20108);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2010C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2011D);
	op_hex		(x,	1);
	create_insn	(x=0X20127);
	op_hex		(x,	1);
	create_insn	(x=0X2012A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2012E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2013F);
	op_hex		(x,	1);
	create_insn	(x=0X20149);
	op_hex		(x,	1);
	create_insn	(x=0X2014C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20150);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20161);
	op_hex		(x,	1);
	create_insn	(x=0X2016B);
	op_hex		(x,	1);
	create_insn	(x=0X2016E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20172);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20183);
	op_hex		(x,	1);
	create_insn	(x=0X2018D);
	op_hex		(x,	1);
	create_insn	(x=0X20190);
	op_stkvar	(x,	1);
	create_insn	(x=0X20195);
	op_stkvar	(x,	0);
	create_insn	(x=0X2019F);
	op_stkvar	(x,	1);
	create_insn	(x=0X201A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X201D1);
	op_hex		(x,	1);
	create_insn	(x=0X201D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X201D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X201DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X201E5);
	op_hex		(x,	1);
	create_insn	(x=0X201F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X201F4);
	op_stkvar	(x,	0);
	make_array	(0X201F9,	0X3);
	create_insn	(x=0X201FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X20200);
	op_stkvar	(x,	0);
	create_insn	(x=0X20204);
	op_stkvar	(x,	1);
	create_insn	(x=0X20207);
	op_stkvar	(x,	1);
	create_insn	(x=0X2020A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20211);
	op_stkvar	(x,	0);
	create_insn	(x=0X20216);
	op_stkvar	(x,	1);
	create_insn	(x=0X2022A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20244);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2024D);
	op_hex		(x,	1);
	create_insn	(x=0X20257);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2025B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2026C);
	op_hex		(x,	1);
	create_insn	(x=0X20276);
	op_hex		(x,	1);
	create_insn	(x=0X20279);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2027D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2028E);
	op_hex		(x,	1);
	create_insn	(x=0X20298);
	op_hex		(x,	1);
	create_insn	(x=0X202A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X202A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X202AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X202AE);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202B5);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202B9);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202BC);
	op_hex		(x,	1);
	create_insn	(x=0X202C1);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202C8);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202CC);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202D0);
	op_hex		(x,	1);
	create_insn	(x=0X202DB);
	op_hex		(x,	1);
	create_insn	(x=0X202DF);
	op_hex		(x,	1);
	create_insn	(x=0X202E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X202E9);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202EC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X202F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X202F6);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X202FA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X202FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X20301);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20305);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20309);
	op_stkvar	(x,	1);
	create_insn	(x=0X2030F);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20313);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20317);
	op_stkvar	(x,	1);
	create_insn	(x=0X2031D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20321);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20325);
	op_stkvar	(x,	1);
	create_insn	(x=0X20328);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2032C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20330);
	op_stkvar	(x,	1);
	create_insn	(x=0X20335);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20338);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20347);
	op_stkvar	(x,	1);
	create_insn	(x=0X2034C);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2034F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X20367);
	create_insn	(x=0X2036B);
	op_hex		(x,	1);
	create_insn	(x=0X2036D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X20379);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2037D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2038E);
	op_hex		(x,	1);
	create_insn	(x=0X20398);
	op_hex		(x,	1);
	create_insn	(x=0X2039B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2039F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X203B0);
	op_hex		(x,	1);
	create_insn	(x=0X203BA);
	op_hex		(x,	1);
	create_insn	(x=0X203BD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X203C1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X203D2);
	op_hex		(x,	1);
	create_insn	(x=0X203DC);
	op_hex		(x,	1);
	create_insn	(x=0X203DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X203E3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X203F4);
	op_hex		(x,	1);
	create_insn	(x=0X203FE);
	op_hex		(x,	1);
	create_insn	(x=0X20401);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20405);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20416);
	op_hex		(x,	1);
	create_insn	(x=0X20420);
	op_hex		(x,	1);
	create_insn	(0X2042A);
	create_insn	(0X20438);
	set_name	(0X20438,	"shape3d_free_car_shapes");
	create_insn	(x=0X20441);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20445);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20449);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2044D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20464);
	op_hex		(x,	1);
	create_insn	(x=0X20474);
	op_hex		(x,	1);
	create_insn	(x=0X20477);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2047B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2047F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20483);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2049A);
	op_hex		(x,	1);
	create_insn	(x=0X204AA);
	op_hex		(x,	1);
	create_insn	(0X204AE);
	create_insn	(x=0X204B1);
	op_hex		(x,	1);
	create_insn	(x=0X204B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X204B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X204C4);
	op_hex		(x,	1);
	create_insn	(x=0X204CC);
	op_hex		(x,	1);
	create_insn	(x=0X204CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X204D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X204D5);
	op_hex		(x,	1);
	create_insn	(x=0X204DD);
	op_hex		(x,	1);
	create_insn	(x=0X204E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X204E9);
	op_hex		(x,	1);
	create_insn	(x=0X204ED);
	op_hex		(x,	1);
	create_insn	(x=0X204EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X204F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X204F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X204FA);
	op_hex		(x,	1);
	create_insn	(x=0X204FE);
	op_hex		(x,	1);
	create_insn	(x=0X20502);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20509);
	op_hex		(x,	1);
	create_insn	(x=0X2050C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2050F);
	op_stkvar	(x,	1);
	create_insn	(x=0X20512);
	op_stkvar	(x,	1);
	create_insn	(x=0X20515);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20518);
	op_stkvar	(x,	0);
	create_insn	(x=0X20520);
	op_hex		(x,	1);
	create_insn	(x=0X20523);
	op_stkvar	(x,	1);
	create_insn	(x=0X20526);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2052A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2052D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20530);
	op_stkvar	(x,	1);
	create_insn	(x=0X20533);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2053A);
	op_hex		(x,	1);
	create_insn	(x=0X2053E);
	op_hex		(x,	1);
	create_insn	(x=0X20540);
	op_stkvar	(x,	0);
	create_insn	(x=0X20543);
	op_stkvar	(x,	0);
	create_insn	(x=0X20546);
	op_stkvar	(x,	1);
	create_insn	(x=0X2054B);
	op_hex		(x,	1);
	create_insn	(x=0X2054F);
	op_hex		(x,	1);
	create_insn	(x=0X20553);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2055B);
	op_hex		(x,	1);
	create_insn	(x=0X2055E);
	op_stkvar	(x,	0);
	create_insn	(x=0X20561);
	op_stkvar	(x,	1);
	create_insn	(x=0X20564);
	op_stkvar	(x,	1);
	create_insn	(x=0X20567);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20569);
	op_stkvar	(x,	0);
	create_insn	(x=0X20571);
	op_hex		(x,	1);
	create_insn	(x=0X20574);
	op_stkvar	(x,	1);
	create_insn	(x=0X20577);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2057C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2057F);
	op_stkvar	(x,	1);
	create_insn	(x=0X20582);
	op_stkvar	(x,	1);
	create_insn	(x=0X20585);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(0X20592);
	create_insn	(x=0X20599);
	op_hex		(x,	1);
	create_insn	(x=0X2059D);
	op_hex		(x,	1);
	create_insn	(x=0X2059F);
	op_stkvar	(x,	0);
	create_insn	(x=0X205A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X205A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X205AA);
	op_hex		(x,	1);
	create_insn	(x=0X205AE);
	op_hex		(x,	1);
	create_insn	(x=0X205B2);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X205B9);
	op_hex		(x,	1);
	create_insn	(x=0X205BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X205BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X205C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X205C5);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X205C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X205D0);
	op_hex		(x,	1);
	create_insn	(x=0X205D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X205D6);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X205DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X205DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X205E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X205E4);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X205EB);
	op_hex		(x,	1);
	create_insn	(x=0X205EF);
	op_hex		(x,	1);
	create_insn	(x=0X205F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X205F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X205F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X205FC);
	op_hex		(x,	1);
	create_insn	(x=0X20600);
	op_hex		(x,	1);
	create_insn	(x=0X20604);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2060C);
	op_hex		(x,	1);
	create_insn	(x=0X2060F);
	op_stkvar	(x,	0);
	create_insn	(x=0X20612);
	op_stkvar	(x,	1);
	create_insn	(x=0X20615);
	op_stkvar	(x,	1);
	create_insn	(x=0X20618);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2061A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20622);
	op_hex		(x,	1);
	create_insn	(x=0X20625);
	op_stkvar	(x,	1);
	create_insn	(x=0X20628);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2062D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20630);
	op_stkvar	(x,	1);
	create_insn	(x=0X20633);
	op_stkvar	(x,	1);
	create_insn	(x=0X20636);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20643);
	op_stkvar	(x,	1);
	create_insn	(x=0X20646);
	op_stkvar	(x,	1);
	create_insn	(0X20650);
	create_insn	(x=0X20654);
	op_hex		(x,	1);
	create_insn	(x=0X20658);
	op_hex		(x,	1);
	create_insn	(x=0X2065A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2065D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20662);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20665);
	op_stkvar	(x,	1);
	create_insn	(x=0X20668);
	op_stkvar	(x,	1);
	create_insn	(x=0X2066B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2066E);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X20673);
	op_stkvar	(x,	0);
	create_insn	(x=0X20678);
	op_stkvar	(x,	1);
	create_insn	(x=0X2067D);
	op_hex		(x,	1);
	create_insn	(x=0X20681);
	op_stkvar	(x,	1);
	create_insn	(x=0X2068E);
	op_hex		(x,	1);
	create_insn	(x=0X20690);
	op_stkvar	(x,	0);
	create_insn	(x=0X20693);
	op_stkvar	(x,	1);
	create_insn	(x=0X206A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X206AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X206AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X206B9);
	op_hex		(x,	1);
	create_insn	(x=0X206BD);
	op_hex		(x,	1);
	create_insn	(x=0X206BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X206C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X206C8);
	op_stkvar	(x,	1);
	create_insn	(0X206CE);
	create_insn	(0X206D4);
	set_name	(0X206D4,	"track_setup");
	create_insn	(x=0X206D7);
	op_hex		(x,	1);
	create_insn	(x=0X206E3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X206EC);
	op_hex		(x,	1);
	create_insn	(x=0X206EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X206F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X20704);
	op_stkvar	(x,	1);
	create_insn	(x=0X20708);
	op_stkvar	(x,	1);
	create_insn	(x=0X2070C);
	op_stkvar	(x,	0);
	create_insn	(x=0X20710);
	op_stkvar	(x,	0);
	create_insn	(x=0X20714);
	op_stkvar	(x,	0);
	create_insn	(x=0X20719);
	op_stkvar	(x,	0);
	create_insn	(x=0X20734);
	op_stkvar	(x,	0);
	create_insn	(x=0X2073C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20742);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20746);
	op_stkvar	(x,	0);
	create_insn	(x=0X20749);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X2074D,	E_PREV + 0,	"Typical double loop. The inner loop");
	update_extra_cmt		(0X2074D,	E_PREV + 1,	"on rows checks if the east-west");
	update_extra_cmt		(0X2074D,	E_PREV + 2,	"connectivity of terrain is correct.");
	create_insn	(x=0X2074D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20754);
	op_stkvar	(x,	1);
	create_insn	(x=0X2075B);
	op_hex		(x,	1);
	create_insn	(x=0X2075D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20761);
	op_stkvar	(x,	1);
	create_insn	(x=0X20773);
	op_stkvar	(x,	0);
	create_insn	(x=0X2077B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2077E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	update_extra_cmt		(0X20784,	E_PREV + 0,	"63h = unset flag");
	create_insn	(x=0X20788);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X2078D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20797);
	op_stkvar	(x,	0);
	create_insn	(x=0X207A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X207A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X207AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X207AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X207B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X207BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X207C4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X207C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X207CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X207CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X207D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X207DD);
	op_hex		(x,	1);
	create_insn	(x=0X207DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X207E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X207F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X207FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X20800);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2080E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20812,	E_PREV + 0,	"Terrain mismatch check by columns.");
	create_insn	(x=0X20812);
	op_stkvar	(x,	0);
	create_insn	(x=0X20819);
	op_stkvar	(x,	0);
	create_insn	(x=0X2081D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20824);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X2082C,	E_PREV + 0,	"Initial track orient.");
	create_insn	(0X2082C);
	update_extra_cmt		(0X20832,	E_PREV + 0,	"Sanity check...");
	create_insn	(x=0X20832);
	op_stkvar	(x,	0);
	create_insn	(x=0X20839);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(0X20842);
	create_insn	(0X2084A);
	create_insn	(0X20852);
	create_insn	(0X2085A);
	create_insn	(x=0X2087A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20881);
	op_stkvar	(x,	1);
	create_insn	(x=0X2088B);
	op_hex		(x,	1);
	create_insn	(x=0X2088D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20891);
	op_stkvar	(x,	1);
	create_insn	(x=0X208A3);
	op_stkvar	(x,	0);
	set_cmt	(0X208A7,	"hilltop",	0);
	create_insn	(0X208B2);
	create_insn	(x=0X208B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X208BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X208BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X208C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X208D0);
	op_hex		(x,	1);
	create_insn	(x=0X208D2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X208D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X208E8);
	op_stkvar	(x,	0);
	set_cmt	(0X208EB,	"<filler",	0);
	update_extra_cmt		(0X208EF,	E_PREV + 0,	"Special tile values like");
	update_extra_cmt		(0X208EF,	E_PREV + 1,	"fillers are modified to the");
	update_extra_cmt		(0X208EF,	E_PREV + 2,	"real physical entity if need be.");
	create_insn	(x=0X208EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X208F3);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X208F9,	E_PREV + 0,	"B5<elemTile<FD : Illegal value,");
	update_extra_cmt		(0X208F9,	E_PREV + 1,	"replaced by 0x04 locally and in td14");
	create_insn	(x=0X208F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X208FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X20904);
	op_hex		(x,	1);
	create_insn	(x=0X20906);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2090A);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X20919,	E_PREV + 0,	"Now looking for s/f tiles.");
	create_insn	(x=0X20919);
	op_stkvar	(x,	1);
	create_insn	(0X20926);
	create_insn	(0X2092B);
	create_insn	(0X20933);
	create_insn	(0X2093B);
	create_insn	(0X20943);
	create_insn	(0X2094B);
	create_insn	(x=0X20952);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20956,	E_PREV + 0,	"Start line tile search.");
	create_insn	(x=0X20956);
	op_stkvar	(x,	0);
	create_insn	(x=0X2095D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20966);
	op_stkvar	(x,	0);
	create_insn	(x=0X2096D);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	update_extra_cmt		(0X20976,	E_PREV + 0,	"Left the loop...");
	create_insn	(0X20976);
	create_insn	(x=0X2097C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2098B);
	op_stkvar	(x,	0);
	create_insn	(x=0X20990);
	op_stkvar	(x,	0);
	create_insn	(x=0X20997);
	op_stkvar	(x,	0);
	create_insn	(x=0X2099E);
	op_hex		(x,	1);
	create_insn	(x=0X209A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X209B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X209CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X209D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X209DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X209DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X209E3);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X209E9,	E_PREV + 0,	"This looks ridiculously complex because");
	update_extra_cmt		(0X209E9,	E_PREV + 1,	"it follows track paths, not rows and");
	update_extra_cmt		(0X209E9,	E_PREV + 2,	"columns. These first few escapes are in");
	update_extra_cmt		(0X209E9,	E_PREV + 3,	"case the track runs to the fence.");
	create_insn	(x=0X209E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X209ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X209F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X209FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A02);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A0C);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20A16,	E_PREV + 0,	"Reading internal TOI");
	create_insn	(x=0X20A16);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A22);
	op_hex		(x,	1);
	create_insn	(x=0X20A26);
	op_hex		(x,	1);
	create_insn	(x=0X20A2A);
	op_hex		(x,	1);
	create_insn	(x=0X20A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A34);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A38);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A43);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A53);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A62);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A71);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A79);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A81);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A88);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A90);
	op_stkvar	(x,	0);
	create_insn	(x=0X20A98);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X20ABA);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	update_extra_cmt		(0X20AC2,	E_PREV + 0,	"Normal procedure.");
	update_extra_cmt		(0X20AC2,	E_PREV + 1,	"Starts by loading the tile");
	create_insn	(x=0X20AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X20ACB);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AD0);
	op_hex		(x,	1);
	create_insn	(x=0X20AD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AD8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X20AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AF2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B05);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B09);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20B1B,	E_PREV + 0,	"Handling tile substitutions");
	update_extra_cmt		(0X20B1B,	E_PREV + 1,	"on hill slopes.");
	create_insn	(x=0X20B1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B21);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B2A);
	op_hex		(x,	1);
	create_insn	(x=0X20B2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B30);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20B39,	E_PREV + 0,	"Filler tests. If a filler is met, tile indices");
	update_extra_cmt		(0X20B39,	E_PREV + 1,	"will be set to the main tile (decs and incs)");
	update_extra_cmt		(0X20B39,	E_PREV + 2,	"and tile connectivity will be adjusted accordingly");
	update_extra_cmt		(0X20B39,	E_PREV + 3,	"(rotation check and pre-setting of tileEntryPoint). ");
	create_insn	(x=0X20B39);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	update_extra_cmt		(0X20B50,	E_PREV + 0,	"Load main element value.");
	create_insn	(x=0X20B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B57);
	op_hex		(x,	1);
	create_insn	(x=0X20B59);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20B5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B76);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B96);
	op_stkvar	(x,	0);
	create_insn	(x=0X20B9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BC4);
	op_stkvar	(x,	0);
	make_array	(0X20BCA,	0X2);
	create_insn	(x=0X20BCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X20BFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C02);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C0A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20C12,	E_PREV + 0,	"Will set entry points based on entry");
	update_extra_cmt		(0X20C12,	E_PREV + 1,	"direction.");
	create_insn	(x=0X20C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C34);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C3A);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X20C42);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C48);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C54);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C5F);
	op_hex		(x,	1);
	create_insn	(x=0X20C63);
	op_hex		(x,	1);
	set_cmt	(0X20C67,	"*14",	0);
	create_insn	(x=0X20C67);
	op_hex		(x,	1);
	create_insn	(x=0X20C69);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20C6D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20C75,	E_PREV + 0,	"Elements w/o");
	update_extra_cmt		(0X20C75,	E_PREV + 1,	"connectivity");
	create_insn	(0X20C78);
	create_insn	(x=0X20C7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X20C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C8D);
	op_stroff	(x,	0,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X20C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C95);
	op_stroff	(x,	0,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X20C9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20CA2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20CAC,	E_PREV + 0,	"Possibly this is checking whether");
	update_extra_cmt		(0X20CAC,	E_PREV + 1,	"we're back to the s/f tile.");
	create_insn	(x=0X20CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CB3);
	op_hex		(x,	1);
	create_insn	(x=0X20CB5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20CB9);
	op_stkvar	(x,	1);
	set_cmt	(0X20CC2,	"??",	0);
	create_insn	(x=0X20CCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X20CD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CD7);
	op_hex		(x,	1);
	create_insn	(x=0X20CE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X20CE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X20CE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CF7);
	op_hex		(x,	1);
	create_insn	(x=0X20D08);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20D0E,	E_PREV + 0,	"Possibly trying to find where we");
	update_extra_cmt		(0X20D0E,	E_PREV + 1,	"are in a path.");
	create_insn	(x=0X20D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D25);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D30);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D36);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D40);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X20D48);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D52);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D62);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D71);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	update_extra_cmt		(0X20D7A,	E_PREV + 0,	"Writing internal TOI");
	create_insn	(x=0X20D7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D82);
	op_hex		(x,	1);
	create_insn	(x=0X20D86);
	op_hex		(x,	1);
	create_insn	(x=0X20D8A);
	op_hex		(x,	1);
	create_insn	(x=0X20D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D94);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D98);
	op_stkvar	(x,	0);
	create_insn	(x=0X20D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E02);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E12);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E32);
	op_stkvar	(x,	0);
	create_insn	(x=0X20E36);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20E3A,	E_PREV + 0,	"The loop runs over connected");
	update_extra_cmt		(0X20E3A,	E_PREV + 1,	"TOInfo blocks.");
	create_insn	(x=0X20E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E3E);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X20E46);
	op_stkvar	(x,	0);
	create_insn	(x=0X20E51);
	op_hex		(x,	1);
	create_insn	(x=0X20E55);
	op_hex		(x,	1);
	set_cmt	(0X20E59,	"cx = si*14",	0);
	create_insn	(x=0X20E59);
	op_hex		(x,	1);
	create_insn	(x=0X20E5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20E63);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E66);
	op_stroff	(x,	0,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X20E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E71);
	op_stroff	(x,	0,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X20E79);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X20E82);
	op_stkvar	(x,	0);
	create_insn	(x=0X20E8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X20E94);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X20E9D,	E_PREV + 0,	"Failure leads to \"no");
	update_extra_cmt		(0X20E9D,	E_PREV + 1,	"runway\" error.");
	create_insn	(x=0X20E9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EA4);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X20EAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ECF);
	op_stkvar	(x,	0);
	create_insn	(x=0X20ED3);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ED7);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X20EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F01);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X20F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F13);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F18);
	op_stkvar	(x,	0);
	create_insn	(x=0X20F20);
	op_stkvar	(x,	0);
	create_insn	(x=0X20F27);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(0X20F30);
	create_insn	(x=0X20F56);
	op_stkvar	(x,	0);
	create_insn	(x=0X20F6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X20F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F75);
	op_hex		(x,	1);
	create_insn	(x=0X20F77);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X20F7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X20FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FB0);
	op_hex		(x,	1);
	create_insn	(x=0X20FBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X20FBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X20FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FD0);
	op_hex		(x,	1);
	create_insn	(x=0X20FE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X20FF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X21004);
	op_stkvar	(x,	1);
	create_insn	(x=0X21017);
	op_stkvar	(x,	1);
	set_cmt	(0X2101B,	"high nibble",	0);
	create_insn	(x=0X2101F);
	op_stkvar	(x,	1);
	create_insn	(x=0X21032);
	op_stkvar	(x,	1);
	create_insn	(x=0X21038);
	op_stkvar	(x,	1);
	create_insn	(x=0X2103F);
	op_hex		(x,	1);
	create_insn	(x=0X21043);
	op_hex		(x,	1);
	create_insn	(x=0X21047);
	op_hex		(x,	1);
	create_insn	(x=0X21049);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2104D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21051);
	op_stkvar	(x,	1);
	create_insn	(x=0X21059);
	op_hex		(x,	1);
	create_insn	(x=0X2105D);
	op_hex		(x,	1);
	create_insn	(x=0X21061);
	op_hex		(x,	1);
	create_insn	(x=0X21063);
	op_stkvar	(x,	1);
	create_insn	(x=0X21067);
	op_stkvar	(x,	0);
	create_insn	(x=0X2106D);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X21070);
	op_stkvar	(x,	0);
	create_insn	(x=0X21078);
	op_stkvar	(x,	0);
	create_insn	(x=0X21080);
	op_stkvar	(x,	0);
	create_insn	(x=0X2108A);
	op_stkvar	(x,	0);
	create_insn	(0X21094);
	create_insn	(x=0X2109E);
	op_stkvar	(x,	1);
	create_insn	(x=0X210A5);
	op_hex		(x,	1);
	create_insn	(x=0X210A9);
	op_hex		(x,	1);
	create_insn	(x=0X210AD);
	op_hex		(x,	1);
	create_insn	(x=0X210AF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X210B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X210B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X210BF);
	op_hex		(x,	1);
	create_insn	(x=0X210C3);
	op_hex		(x,	1);
	create_insn	(x=0X210C7);
	op_hex		(x,	1);
	create_insn	(x=0X210C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X210CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X210D3);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X210D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X210DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X210E2);
	op_hex		(x,	1);
	create_insn	(x=0X210E6);
	op_hex		(x,	1);
	create_insn	(x=0X210EA);
	op_hex		(x,	1);
	create_insn	(x=0X210EC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X210F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X210F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X210FC);
	op_hex		(x,	1);
	create_insn	(x=0X21100);
	op_hex		(x,	1);
	create_insn	(x=0X21104);
	op_hex		(x,	1);
	create_insn	(x=0X21106);
	op_stkvar	(x,	1);
	create_insn	(x=0X2110A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2110E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21117);
	op_hex		(x,	0);
	create_insn	(x=0X21122);
	op_stkvar	(x,	1);
	create_insn	(x=0X21126);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X21129);
	op_stkvar	(x,	0);
	create_insn	(x=0X2112D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21131);
	op_stkvar	(x,	0);
	create_insn	(x=0X21138);
	op_stkvar	(x,	1);
	create_insn	(x=0X2113C);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X21141);
	op_hex		(x,	1);
	create_insn	(x=0X21145);
	op_hex		(x,	1);
	create_insn	(x=0X21149);
	op_hex		(x,	1);
	create_insn	(x=0X2114B);
	op_stkvar	(x,	1);
	create_insn	(x=0X21156);
	op_stkvar	(x,	1);
	create_insn	(x=0X2115A);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X2115F);
	op_hex		(x,	1);
	create_insn	(x=0X21163);
	op_hex		(x,	1);
	create_insn	(x=0X21167);
	op_hex		(x,	1);
	create_insn	(x=0X21169);
	op_stkvar	(x,	1);
	create_insn	(x=0X2116D);
	op_stkvar	(x,	1);
	create_insn	(x=0X21176);
	op_stkvar	(x,	1);
	create_insn	(x=0X21187);
	op_stkvar	(x,	0);
	create_insn	(x=0X2118E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21195);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2119C);
	op_stkvar	(x,	1);
	create_insn	(x=0X211A3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X211A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X211AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X211AF);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X211B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X211C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X211C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X211CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X211D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X211D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X211DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X211DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X211EB);
	op_hex		(x,	1);
	create_insn	(x=0X211F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X211F8);
	op_hex		(x,	1);
	create_insn	(x=0X211FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X21204);
	op_stkvar	(x,	0);
	create_insn	(x=0X21208);
	op_stkvar	(x,	1);
	create_insn	(x=0X2120E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21214);
	op_stkvar	(x,	1);
	create_insn	(x=0X21218);
	op_stkvar	(x,	0);
	create_insn	(x=0X2121C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21220);
	op_stkvar	(x,	0);
	create_insn	(x=0X21224);
	op_stkvar	(x,	1);
	create_insn	(0X2122C);
	create_insn	(x=0X21232);
	op_hex		(x,	1);
	create_insn	(x=0X2123C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21250);
	op_stkvar	(x,	1);
	create_insn	(x=0X21257);
	op_stkvar	(x,	1);
	create_insn	(x=0X2125E);
	op_hex		(x,	1);
	create_insn	(x=0X21260);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21264);
	op_stkvar	(x,	1);
	create_insn	(x=0X21278);
	op_stkvar	(x,	0);
	create_insn	(x=0X21284);
	op_hex		(x,	1);
	create_insn	(x=0X21288);
	op_hex		(x,	1);
	create_insn	(x=0X21292);
	op_stkvar	(x,	1);
	create_insn	(x=0X2129A);
	op_stkvar	(x,	1);
	create_insn	(x=0X212A2);
	op_hex		(x,	1);
	create_insn	(x=0X212A6);
	op_hex		(x,	1);
	create_insn	(x=0X212AA);
	op_hex		(x,	1);
	create_insn	(x=0X212AC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X212B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X212BA);
	op_hex		(x,	1);
	create_insn	(x=0X212BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X212C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X212C9);
	op_hex		(x,	1);
	create_insn	(x=0X212CB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X212CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X212DB);
	op_hex		(x,	1);
	create_insn	(x=0X212DF);
	op_hex		(x,	1);
	create_insn	(x=0X212ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X212F5);
	op_hex		(x,	1);
	create_insn	(x=0X212F9);
	op_hex		(x,	1);
	create_insn	(x=0X212FD);
	op_hex		(x,	1);
	create_insn	(x=0X212FF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X21306);
	op_stkvar	(x,	1);
	create_insn	(x=0X2130C);
	op_hex		(x,	1);
	create_insn	(x=0X2130E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21314);
	op_stkvar	(x,	1);
	create_insn	(x=0X2131A);
	op_hex		(x,	1);
	create_insn	(x=0X2131C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21320);
	op_stkvar	(x,	1);
	create_insn	(x=0X2132C);
	op_hex		(x,	1);
	create_insn	(x=0X21330);
	op_hex		(x,	1);
	create_insn	(x=0X2133D);
	op_stkvar	(x,	1);
	create_insn	(x=0X21344);
	op_hex		(x,	1);
	create_insn	(x=0X21346);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2134A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21362);
	op_stkvar	(x,	0);
	create_insn	(x=0X21373);
	op_stkvar	(x,	0);
	op_enum		(x,	1,	GetEnum("enum_track_errors"),0);
	create_insn	(x=0X2137C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21383);
	op_hex		(x,	1);
	create_insn	(x=0X21387);
	op_hex		(x,	1);
	create_insn	(x=0X2138B);
	op_hex		(x,	1);
	create_insn	(x=0X2138D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21391);
	op_stkvar	(x,	0);
	create_insn	(x=0X21395);
	op_stkvar	(x,	1);
	create_insn	(x=0X2139D);
	op_hex		(x,	1);
	create_insn	(x=0X213A1);
	op_hex		(x,	1);
	create_insn	(x=0X213A5);
	op_hex		(x,	1);
	create_insn	(x=0X213A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X213AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X213AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X213B8);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X213BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X213BF);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X213C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213C8);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	create_insn	(x=0X213CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X213CF);
	op_stroff	(x,	1,	GetStrucIdByName("TRKOBJINFO"),	0);
	update_extra_cmt		(0X213D2,	E_PREV + 0,	"This is the end of the thread; after");
	update_extra_cmt		(0X213D2,	E_PREV + 1,	"these branches the big loop over track");
	update_extra_cmt		(0X213D2,	E_PREV + 2,	"elements cycles. For that reason,it");
	update_extra_cmt		(0X213D2,	E_PREV + 3,	"will be the reference for naming several");
	update_extra_cmt		(0X213D2,	E_PREV + 4,	"variables. (doing it from inner loops is");
	update_extra_cmt		(0X213D2,	E_PREV + 5,	"a maddening task...)");
	create_insn	(x=0X213D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X213D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X213D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X213DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X213E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X213E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X213EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X213F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X213F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X213FB);
	op_stkvar	(x,	1);
	set_cmt	(0X21407,	"filler-ish",	0);
	create_insn	(0X2140C);
	create_insn	(x=0X2140F);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(x=0X21414);
	op_stkvar	(x,	0);
	create_insn	(x=0X21418);
	op_stkvar	(x,	0);
	create_insn	(x=0X21420);
	op_stkvar	(x,	0);
	create_insn	(x=0X21424);
	op_stkvar	(x,	0);
	create_insn	(x=0X2142A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2142E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21432);
	op_stkvar	(x,	0);
	create_insn	(x=0X2143A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2143E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21442);
	op_stkvar	(x,	0);
	create_insn	(x=0X2144A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2144E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21456);
	op_stkvar	(x,	0);
	create_insn	(x=0X2145A);
	op_stkvar	(x,	0);
	create_insn	(x=0X21462);
	op_stkvar	(x,	0);
	create_insn	(x=0X21466);
	op_stkvar	(x,	0);
	create_insn	(x=0X2146C);
	op_stkvar	(x,	0);
	create_insn	(x=0X21474);
	op_stkvar	(x,	0);
	create_word	(x=0X2147C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X2147E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21480);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21482);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21484);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21486);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21488);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X2148A);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X2148C);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X2148E);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21490);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_word	(x=0X21492);
	op_plain_offset	(x,	0,	0X1E1A0);
	op_plain_offset	(x,	128,	0X1E1A0);
	create_insn	(0X21494);
	create_insn	(x=0X21498);
	op_stkvar	(x,	1);
	create_insn	(x=0X214A0);
	op_hex		(x,	1);
	create_insn	(x=0X214A4);
	op_hex		(x,	1);
	create_insn	(x=0X214A8);
	op_hex		(x,	1);
	create_insn	(x=0X214AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X214B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X214B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X214B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X214C1);
	op_hex		(x,	1);
	create_insn	(x=0X214C5);
	op_hex		(x,	1);
	create_insn	(x=0X214C9);
	op_hex		(x,	1);
	create_insn	(x=0X214CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X214CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X214DC);
	op_hex		(x,	1);
	create_insn	(x=0X214E0);
	op_hex		(x,	1);
	create_insn	(x=0X214E2);
	op_hex		(x,	1);
	create_insn	(x=0X214E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X214FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X21510);
	op_stkvar	(x,	1);
	create_insn	(x=0X21514);
	op_stkvar	(x,	0);
	create_insn	(x=0X21518);
	op_stkvar	(x,	1);
	create_insn	(x=0X2151E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21522);
	op_stkvar	(x,	1);
	create_insn	(x=0X21526);
	op_stkvar	(x,	0);
	create_insn	(x=0X2152A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21531);
	op_hex		(x,	1);
	create_insn	(x=0X21533);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21537);
	op_stkvar	(x,	1);
	create_insn	(x=0X2154E);
	op_hex		(x,	1);
	create_insn	(x=0X21560);
	op_stkvar	(x,	1);
	create_insn	(x=0X21566);
	op_stkvar	(x,	0);
	create_insn	(x=0X2156A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21570);
	op_stkvar	(x,	0);
	create_insn	(x=0X21576);
	op_stkvar	(x,	1);
	create_insn	(x=0X2157A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2157E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21582);
	op_stkvar	(x,	0);
	create_insn	(x=0X21586);
	op_stkvar	(x,	1);
	create_insn	(0X2158E);
	create_insn	(x=0X21590);
	op_hex		(x,	1);
	create_insn	(x=0X215A1);
	op_hex		(x,	1);
	create_insn	(x=0X215A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X215BA);
	op_hex		(x,	1);
	create_insn	(x=0X215BE);
	op_hex		(x,	1);
	create_insn	(x=0X215C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X215C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X215D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X215D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X215E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X215EC);
	op_hex		(x,	1);
	create_insn	(x=0X215F0);
	op_hex		(x,	1);
	create_insn	(x=0X215F4);
	op_hex		(x,	1);
	create_insn	(x=0X215F6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X215FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X21604);
	op_hex		(x,	1);
	create_insn	(x=0X21606);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2160A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2160E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21614);
	op_stkvar	(x,	1);
	create_insn	(x=0X2161B);
	op_hex		(x,	1);
	create_insn	(x=0X2161D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21621);
	op_stkvar	(x,	1);
	create_insn	(x=0X21629);
	op_hex		(x,	1);
	create_insn	(x=0X2162D);
	op_hex		(x,	1);
	create_insn	(x=0X2163B);
	op_stkvar	(x,	1);
	create_insn	(x=0X21640);
	op_hex		(x,	1);
	create_insn	(x=0X21644);
	op_hex		(x,	1);
	create_insn	(x=0X21648);
	op_hex		(x,	1);
	create_insn	(x=0X2164A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X21651);
	op_stkvar	(x,	1);
	create_insn	(x=0X21658);
	op_hex		(x,	1);
	create_insn	(x=0X2165A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21660);
	op_stkvar	(x,	1);
	create_insn	(x=0X21667);
	op_hex		(x,	1);
	create_insn	(x=0X21669);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2166D);
	op_stkvar	(x,	1);
	create_insn	(x=0X21675);
	op_hex		(x,	1);
	create_insn	(x=0X21679);
	op_hex		(x,	1);
	create_insn	(x=0X2168C);
	op_stkvar	(x,	0);
	create_insn	(0X21697);
	create_insn	(x=0X2169D);
	op_stkvar	(x,	1);
	create_insn	(x=0X216A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X216B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X216B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X216C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X216CC);
	op_hex		(x,	1);
	create_insn	(x=0X216CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X216D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X216EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X216FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X21702);
	op_stkvar	(x,	1);
	set_cmt	(0X21710,	"mask out the high nibble",	0);
	create_insn	(x=0X21710);
	op_hex		(x,	1);
	create_insn	(x=0X21712);
	op_stkvar	(x,	0);
	create_insn	(x=0X21716);
	op_stkvar	(x,	1);
	set_cmt	(0X21720,	"5th bit (low to high)",	0);
	create_insn	(x=0X21720);
	op_hex		(x,	1);
	create_insn	(x=0X21722);
	op_stkvar	(x,	0);
	create_insn	(x=0X21726);
	op_stkvar	(x,	1);
	create_insn	(x=0X2172B);
	op_hex		(x,	1);
	create_insn	(x=0X2172F);
	op_hex		(x,	1);
	create_insn	(x=0X21733);
	op_hex		(x,	1);
	create_insn	(x=0X21735);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21739);
	op_stkvar	(x,	0);
	create_insn	(x=0X2173D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21747);
	op_stkvar	(x,	1);
	create_insn	(x=0X2174F);
	op_hex		(x,	1);
	create_insn	(x=0X21753);
	op_hex		(x,	1);
	create_insn	(x=0X21757);
	op_hex		(x,	1);
	create_insn	(x=0X21759);
	op_stkvar	(x,	1);
	create_insn	(x=0X21760);
	op_stkvar	(x,	0);
	create_insn	(0X2176B);
	create_insn	(0X2176E);
	create_insn	(x=0X21773);
	op_stkvar	(x,	0);
	create_insn	(x=0X2177A);
	op_stkvar	(x,	0);
	create_insn	(x=0X21781);
	op_stkvar	(x,	0);
	create_insn	(x=0X21786);
	op_stkvar	(x,	0);
	create_insn	(x=0X2178D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21794);
	op_stkvar	(x,	0);
	create_insn	(x=0X2179B);
	op_stkvar	(x,	0);
	create_insn	(x=0X217A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X217A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X217AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X217B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X217BB);
	op_hex		(x,	1);
	create_insn	(x=0X217BE);
	op_stkvar	(x,	1);
	create_insn	(0X217CA);
	set_name	(0X217CA,	"load_opponent_data");
	create_insn	(x=0X217CD);
	op_hex		(x,	1);
	create_insn	(x=0X217DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X217E4);
	op_hex		(x,	1);
	create_insn	(x=0X217E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X217EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X217EF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X217F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X217FD);
	op_hex		(x,	1);
	create_insn	(x=0X21802);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2180B);
	op_hex		(x,	1);
	create_insn	(x=0X2180E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21812);
	op_stkvar	(x,	0);
	create_insn	(x=0X21816);
	op_stkvar	(x,	0);
	create_insn	(x=0X2181F);
	op_hex		(x,	1);
	create_insn	(x=0X21822);
	op_stkvar	(x,	0);
	create_insn	(x=0X21826);
	op_stkvar	(x,	0);
	create_insn	(x=0X2182A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2182E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21832);
	op_stkvar	(x,	0);
	create_insn	(x=0X2183B);
	op_hex		(x,	1);
	create_insn	(x=0X2183E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21841);
	op_stkvar	(x,	0);
	create_insn	(x=0X21846);
	op_stkvar	(x,	1);
	create_insn	(x=0X2184C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X21856);
	op_stkvar	(x,	0);
	create_insn	(x=0X2185C);
	op_stkvar	(x,	0);
	create_insn	(x=0X21862);
	op_stkvar	(x,	0);
	create_insn	(x=0X2186A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2186E);
	op_stkvar	(x,	0);
	create_insn	(x=0X21872);
	op_stkvar	(x,	0);
	create_insn	(x=0X21878);
	op_stkvar	(x,	0);
	create_insn	(x=0X21880);
	op_hex		(x,	1);
	create_insn	(x=0X2188D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21894);
	op_stkvar	(x,	0);
	create_insn	(x=0X21899);
	op_stkvar	(x,	0);
	create_insn	(x=0X218A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X218A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X218B0);
	op_stkvar	(x,	0);
	create_insn	(0X218BC);
	create_insn	(x=0X218BE);
	op_hex		(x,	1);
	create_insn	(x=0X218C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X218CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X218D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X218DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X218DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X218E2);
	op_hex		(x,	1);
	create_insn	(x=0X218F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X218F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X21901);
	op_stkvar	(x,	0);
	create_insn	(x=0X21905);
	op_stkvar	(x,	0);
	create_insn	(x=0X21909);
	op_stkvar	(x,	0);
	create_insn	(x=0X21912);
	op_stkvar	(x,	0);
	create_insn	(x=0X2191A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2191E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21922);
	op_stkvar	(x,	0);
	create_insn	(x=0X2192A);
	op_stkvar	(x,	0);
	create_insn	(x=0X21930);
	op_stkvar	(x,	1);
	create_insn	(x=0X21934);
	op_stkvar	(x,	0);
	create_insn	(x=0X21938);
	op_hex		(x,	1);
	create_insn	(x=0X21942);
	op_stkvar	(x,	1);
	create_insn	(x=0X21946);
	op_stkvar	(x,	1);
	create_insn	(x=0X2194A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2194E);
	op_stkvar	(x,	0);
	make_array	(0X21956,	0X2);
	create_insn	(0X21958);
	create_insn	(x=0X2195A);
	op_hex		(x,	1);
	create_insn	(x=0X2195C);
	op_stkvar	(x,	0);
	create_insn	(x=0X21968);
	op_stkvar	(x,	1);
	create_insn	(x=0X21978);
	op_stkvar	(x,	0);
	create_insn	(x=0X2197E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21982);
	op_hex		(x,	1);
	create_insn	(x=0X21991);
	op_stkvar	(x,	1);
	create_insn	(x=0X21995);
	op_hex		(x,	1);
	create_insn	(x=0X219A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X219AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X219B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X219B9);
	op_hex		(x,	1);
	create_insn	(x=0X219C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X219C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X219CA);
	op_hex		(x,	1);
	create_insn	(x=0X219CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X219DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X219E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X219E4);
	op_hex		(x,	1);
	create_insn	(x=0X219E6);
	op_hex		(x,	1);
	create_insn	(x=0X219F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X219F6);
	op_stkvar	(x,	0);
	create_insn	(0X219FE);
	create_insn	(x=0X21A00);
	op_hex		(x,	1);
	create_insn	(x=0X21A0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21A15);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A19);
	op_hex		(x,	1);
	create_insn	(x=0X21A1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X21A23);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A36);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X21A3E);
	op_hex		(x,	1);
	create_insn	(x=0X21A40);
	op_hex		(x,	1);
	create_insn	(x=0X21A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A54);
	op_stkvar	(x,	1);
	create_insn	(0X21A5A);
	set_name	(0X21A5A,	"subst_hillroad_track");
	create_insn	(x=0X21A5D);
	op_stkvar	(x,	1);
	create_insn	(0X21A74);
	create_insn	(0X21A7C);
	create_insn	(x=0X21A80);
	op_stkvar	(x,	1);
	create_insn	(0X21AA6);
	create_insn	(0X21AAC);
	create_insn	(0X21AB2);
	create_insn	(0X21AB8);
	create_insn	(x=0X21ABE);
	op_stkvar	(x,	1);
	create_insn	(0X21AE4);
	create_insn	(0X21AEA);
	create_insn	(0X21AF0);
	make_array	(0X21AF6,	0X2);
	create_insn	(0X21AF8);
	create_insn	(x=0X21AFE);
	op_stkvar	(x,	1);
	create_insn	(0X21B24);
	create_insn	(0X21B2A);
	create_insn	(0X21B30);
	create_insn	(0X21B36);
	create_insn	(x=0X21B3C);
	op_stkvar	(x,	1);
	create_insn	(0X21B62);
	create_insn	(0X21B68);
	create_insn	(0X21B6E);
	create_insn	(0X21B74);
	create_insn	(0X21B7A);
	set_name	(0X21B7A,	"run_game");
	create_insn	(x=0X21B7D);
	op_hex		(x,	1);
	create_insn	(x=0X21B81);
	op_stkvar	(x,	0);
	create_insn	(x=0X21B92);
	op_stkvar	(x,	0);
	create_insn	(x=0X21BCF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X21BD5,	"char *",	0);
	create_insn	(x=0X21BDA);
	op_hex		(x,	1);
	create_insn	(0X21BE4);
	create_insn	(0X21BEC);
	create_insn	(0X21C00);
	create_insn	(0X21C24);
	create_insn	(x=0X21C67);
	op_hex		(x,	1);
	create_insn	(0X21C6E);
	create_insn	(0X21C78);
	create_insn	(x=0X21C9C);
	op_hex		(x,	1);
	create_insn	(x=0X21CB8);
	op_hex		(x,	1);
	create_insn	(x=0X21CCD);
	op_hex		(x,	1);
	create_insn	(x=0X21CD6);
	op_hex		(x,	1);
	create_insn	(x=0X21CDC);
	op_hex		(x,	1);
	create_insn	(x=0X21CDE);
	op_hex		(x,	1);
	set_cmt	(0X21CEC,	"-240",	0);
	create_insn	(x=0X21CF9);
	op_hex		(x,	1);
	create_insn	(x=0X21D02);
	op_hex		(x,	1);
	create_insn	(x=0X21D08);
	op_hex		(x,	1);
	create_insn	(x=0X21D0A);
	op_hex		(x,	1);
	make_array	(0X21D2A,	0X2);
	create_insn	(0X21D2C);
	create_insn	(x=0X21D4B);
	op_hex		(x,	1);
	create_insn	(x=0X21D57);
	op_hex		(x,	1);
	create_insn	(0X21D5C);
	create_insn	(x=0X21D65);
	op_hex		(x,	1);
	create_insn	(0X21D84);
	create_insn	(x=0X21DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X21DC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X21E1A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X21E2B);
	op_hex		(x,	1);
	create_insn	(x=0X21E3D);
	op_hex		(x,	1);
	create_insn	(x=0X21E69);
	op_hex		(x,	1);
	create_insn	(0X21E8A);
	create_insn	(0X21EBF);
	create_insn	(0X21F00);
	create_insn	(0X21F0A);
	create_insn	(0X21F19);
	create_insn	(x=0X21F22);
	op_stkvar	(x,	0);
	create_insn	(x=0X21F33);
	op_stkvar	(x,	0);
	create_insn	(x=0X21F59);
	op_hex		(x,	1);
	create_insn	(x=0X21F6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X21F77);
	op_stkvar	(x,	0);
	create_insn	(0X21F84);
	create_insn	(x=0X21F8A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X21FAA);
	op_hex		(x,	1);
	create_insn	(x=0X21FB5);
	op_hex		(x,	1);
	create_insn	(0X21FC2);
	create_insn	(x=0X21FD5);
	op_hex		(x,	1);
	create_insn	(x=0X21FE8);
	op_hex		(x,	1);
	create_insn	(0X21FEE);
	create_insn	(0X21FF6);
	set_cmt	(0X22012,	"151 = height of render area above the replay menu bar",	0);
	set_cmt	(0X2201A,	"200 = height of render area without the replay menu bar",	0);
	create_insn	(0X2201A);
	create_insn	(x=0X22028);
	op_bin		(x,	0);
	create_insn	(0X22034);
	create_insn	(0X2203E);
	create_insn	(0X22048);
	create_insn	(0X22052);
	create_insn	(x=0X2205F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22064);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22072);
	op_hex		(x,	1);
	create_insn	(x=0X2208A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2208F);
	op_stkvar	(x,	0);
	create_insn	(x=0X22097);
	op_stkvar	(x,	0);
	create_insn	(x=0X2209D);
	op_stkvar	(x,	0);
	create_insn	(x=0X220AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X220B8);
	op_hex		(x,	1);
	create_insn	(x=0X220C8);
	op_hex		(x,	1);
	create_insn	(x=0X220D8);
	op_hex		(x,	1);
	create_insn	(x=0X220DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X220E4);
	op_hex		(x,	1);
	create_insn	(x=0X22102);
	op_hex		(x,	1);
	create_insn	(x=0X2210D);
	op_hex		(x,	1);
	create_insn	(x=0X22123);
	op_hex		(x,	1);
	create_insn	(x=0X22142);
	op_hex		(x,	1);
	create_insn	(x=0X2217A);
	op_hex		(x,	1);
	create_insn	(0X22190);
	create_insn	(0X2219A);
	create_insn	(0X221A6);
	create_insn	(0X221AA);
	create_insn	(0X221C2);
	create_insn	(0X221CC);
	create_insn	(x=0X221DD);
	op_hex		(x,	1);
	create_insn	(x=0X221E9);
	op_hex		(x,	1);
	create_insn	(x=0X221FB);
	op_hex		(x,	1);
	create_insn	(x=0X2221B);
	op_hex		(x,	1);
	create_insn	(0X22222);
	create_insn	(x=0X22227);
	op_stkvar	(x,	0);
	create_insn	(x=0X22233);
	op_hex		(x,	1);
	create_insn	(x=0X22236);
	op_stkvar	(x,	1);
	create_insn	(x=0X22257);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2225B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2225F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22268);
	op_hex		(x,	1);
	create_insn	(x=0X2226B);
	op_hex		(x,	1);
	create_insn	(x=0X22277);
	op_hex		(x,	1);
	create_insn	(0X2227E);
	create_insn	(0X22298);
	set_cmt	(0X222B5,	"200",	0);
	set_cmt	(0X222B9,	"320",	0);
	create_insn	(x=0X222C6);
	op_hex		(x,	1);
	create_insn	(0X222F1);
	create_insn	(0X222FB);
	create_insn	(0X22305);
	create_insn	(x=0X22308);
	op_stkvar	(x,	1);
	create_insn	(x=0X22318);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22329);
	op_hex		(x,	1);
	create_insn	(x=0X2233A);
	op_hex		(x,	1);
	create_insn	(x=0X2234F);
	op_hex		(x,	1);
	set_cmt	(0X22364,	"int",	0);
	create_insn	(x=0X2236D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22370,	"char *",	0);
	create_insn	(x=0X22376);
	op_hex		(x,	1);
	create_insn	(x=0X2237E);
	op_stkvar	(x,	0);
	create_insn	(x=0X22381);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2238A);
	op_hex		(x,	1);
	create_insn	(x=0X2238E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22397);
	op_hex		(x,	1);
	create_insn	(x=0X223A8);
	op_hex		(x,	1);
	create_insn	(0X223CD);
	create_insn	(x=0X223D9);
	op_hex		(x,	1);
	create_insn	(0X223FA);
	set_name	(0X223FA,	"handle_ingame_kb_shortcuts");
	create_insn	(x=0X223FD);
	op_stkvar	(x,	1);
	create_insn	(0X2240A);
	set_cmt	(0X22414,	"ESC",	0);
	create_insn	(0X22414);
	create_insn	(0X22420);
	create_insn	(x=0X22433);
	op_hex		(x,	1);
	create_insn	(0X2243E);
	create_insn	(0X22446);
	create_insn	(0X2244E);
	create_insn	(x=0X22456);
	op_hex		(x,	1);
	create_insn	(0X2245E);
	make_array	(0X2246E,	0X2);
	create_insn	(x=0X22470);
	op_hex		(x,	1);
	create_insn	(x=0X22478);
	op_hex		(x,	1);
	create_insn	(0X22480);
	create_insn	(0X2249A);
	create_insn	(x=0X224A1);
	op_hex		(x,	1);
	create_insn	(0X224A8);
	create_insn	(0X224AC);
	create_insn	(x=0X224E6);
	op_hex		(x,	1);
	create_insn	(0X224EE);
	create_insn	(0X224FD);
	create_insn	(0X22505);
	create_insn	(0X2250D);
	create_insn	(0X22510);
	create_insn	(0X22518);
	create_insn	(0X22520);
	create_insn	(0X22528);
	create_insn	(0X22530);
	create_insn	(0X22532);
	set_name	(0X22532,	"init_unknown");
	create_insn	(x=0X22535);
	op_hex		(x,	1);
	create_insn	(0X2255A);
	set_name	(0X2255A,	"set_frame_callback");
	create_insn	(x=0X22560);
	op_plain_offset	(x,	1,	0X21B70);
	op_plain_offset	(x,	129,	0X21B70);
	create_insn	(x=0X22563);
	op_seg		(x,	1);
	create_insn	(x=0X2256D);
	op_hex		(x,	1);
	create_insn	(0X22576);
	set_name	(0X22576,	"remove_frame_callback");
	create_insn	(x=0X22581);
	op_hex		(x,	1);
	create_insn	(x=0X22584);
	op_plain_offset	(x,	1,	0X21B70);
	op_plain_offset	(x,	129,	0X21B70);
	create_insn	(x=0X22587);
	op_seg		(x,	1);
	create_insn	(x=0X22591);
	op_hex		(x,	1);
	create_insn	(0X22596);
	set_name	(0X22596,	"frame_callback");
	create_insn	(0X225A2);
	create_insn	(0X225AC);
	create_insn	(0X225BA);
	create_insn	(x=0X225E4);
	op_hex		(x,	1);
	create_insn	(0X22608);
	create_insn	(0X22612);
	create_byte	(0X2263C);
	make_array	(0X2263C,	0X2);
	create_insn	(0X2263E);
	create_insn	(0X22666);
	create_insn	(x=0X22673);
	op_hex		(x,	1);
	create_insn	(0X2267E);
	create_insn	(x=0X22685);
	op_hex		(x,	1);
	create_insn	(x=0X2268F);
	op_hex		(x,	1);
	create_insn	(0X22698);
	set_name	(0X22698,	"replay_unk2");
	create_insn	(x=0X2269B);
	op_hex		(x,	1);
	create_insn	(x=0X226A0);
	op_stkvar	(x,	0);
	create_insn	(0X226AC);
	create_insn	(0X226C6);
	create_insn	(0X226D0);
	create_insn	(0X226E6);
	create_insn	(x=0X2270C);
	op_hex		(x,	1);
	create_insn	(x=0X2270E);
	op_hex		(x,	1);
	create_insn	(x=0X22722);
	op_hex		(x,	1);
	create_insn	(0X22736);
	create_insn	(x=0X2274E);
	op_hex		(x,	1);
	set_cmt	(0X22759,	"int",	0);
	create_insn	(x=0X2275F);
	op_hex		(x,	1);
	create_insn	(0X2276C);
	create_insn	(0X22776);
	create_insn	(x=0X2277E);
	op_hex		(x,	1);
	create_insn	(x=0X2278A);
	op_hex		(x,	1);
	create_insn	(0X22796);
	create_insn	(0X2279A);
	create_insn	(x=0X227A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X227B0);
	create_insn	(x=0X227BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X227CF);
	op_hex		(x,	1);
	create_insn	(x=0X227D6);
	op_hex		(x,	1);
	create_insn	(x=0X227DC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X227E0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X227E8);
	create_insn	(x=0X227F8);
	op_hex		(x,	1);
	create_insn	(x=0X227FF);
	op_hex		(x,	1);
	create_insn	(x=0X2280C);
	op_hex		(x,	1);
	create_insn	(x=0X22813);
	op_hex		(x,	1);
	create_insn	(x=0X22836);
	op_hex		(x,	1);
	create_insn	(0X2283C);
	create_insn	(0X22847);
	create_insn	(0X22866);
	create_insn	(0X2286C);
	create_insn	(x=0X22896);
	op_stkvar	(x,	1);
	create_insn	(x=0X228D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X228D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X228F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X228F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22910);
	op_stkvar	(x,	0);
	create_insn	(x=0X22917);
	op_stkvar	(x,	1);
	create_insn	(0X22924);
	create_insn	(x=0X22928);
	op_stkvar	(x,	1);
	create_insn	(x=0X22945);
	op_stkvar	(x,	0);
	create_insn	(x=0X2294B);
	op_stkvar	(x,	1);
	create_insn	(x=0X22959);
	op_stkvar	(x,	0);
	create_insn	(0X2298C);
	create_insn	(x=0X2298F);
	op_hex		(x,	1);
	create_insn	(x=0X22994);
	op_stkvar	(x,	0);
	create_insn	(x=0X229A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X229AA);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X229AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X229B2);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229B5);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229BA);
	op_hex		(x,	1);
	create_insn	(x=0X229BC);
	op_hex		(x,	1);
	create_insn	(x=0X229C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X229C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X229C8);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229CA);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229CF);
	op_hex		(x,	1);
	create_insn	(x=0X229D1);
	op_hex		(x,	1);
	create_insn	(x=0X229D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X229DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X229DD);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229E0);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X229E5);
	op_hex		(x,	1);
	create_insn	(x=0X229E7);
	op_hex		(x,	1);
	create_insn	(x=0X229ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X229F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X229F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X229F8);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X22A03);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A06);
	op_stroff	(x,	1,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X22A09);
	op_stkvar	(x,	0);
	create_insn	(x=0X22A1E);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X22A25);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X22A2C);
	op_stroff	(x,	0,	GetStrucIdByName("CARSTATE"),	0);
	create_insn	(x=0X22A32);
	op_stkvar	(x,	0);
	create_insn	(x=0X22A39);
	op_stkvar	(x,	0);
	create_insn	(x=0X22A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A45);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X22A52);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A58);
	op_stkvar	(x,	0);
	create_insn	(x=0X22A5F);
	op_hex		(x,	1);
	create_insn	(x=0X22A63);
	op_hex		(x,	1);
	create_insn	(x=0X22A65);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22A69);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A6C);
	op_stkvar	(x,	0);
	create_insn	(0X22A80);
	create_insn	(x=0X22A8C);
	op_hex		(x,	1);
	create_insn	(x=0X22A90);
	op_hex		(x,	1);
	create_insn	(x=0X22A92);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22A9A);
	op_hex		(x,	1);
	create_insn	(x=0X22A9E);
	op_hex		(x,	1);
	create_insn	(x=0X22AA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X22AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AA9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AB1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22ABB);
	op_hex		(x,	1);
	create_insn	(x=0X22ABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X22AC5);
	op_hex		(x,	1);
	create_insn	(x=0X22AC9);
	op_hex		(x,	1);
	create_insn	(x=0X22ACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X22ACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AD4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22AD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ADC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22AE6);
	op_hex		(x,	1);
	create_insn	(x=0X22AEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X22AF0);
	op_stkvar	(x,	1);
	create_insn	(0X22B04);
	create_insn	(x=0X22B0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X22B15);
	op_hex		(x,	1);
	create_insn	(x=0X22B1F);
	op_hex		(x,	1);
	create_insn	(x=0X22B26);
	op_hex		(x,	1);
	create_insn	(x=0X22B2A);
	op_hex		(x,	1);
	create_insn	(x=0X22B2C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22B30);
	op_stkvar	(x,	0);
	create_insn	(x=0X22B38);
	op_hex		(x,	1);
	create_insn	(x=0X22B42);
	op_hex		(x,	1);
	create_insn	(x=0X22B49);
	op_hex		(x,	1);
	create_insn	(x=0X22B4D);
	op_hex		(x,	1);
	create_insn	(x=0X22B4F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22B5C);
	op_hex		(x,	1);
	create_insn	(x=0X22B67);
	op_stkvar	(x,	0);
	create_insn	(x=0X22B6C);
	op_stkvar	(x,	0);
	make_array	(0X22B72,	0X2);
	create_insn	(x=0X22B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B77);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X22B92);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B95);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BC5);
	op_hex		(x,	1);
	create_insn	(x=0X22BC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BD6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22BDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X22BEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BF1);
	op_hex		(x,	1);
	create_insn	(x=0X22BF5);
	op_hex		(x,	1);
	create_insn	(x=0X22BFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C02);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C05);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C09);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C18);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C32);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C35);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C38);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C41);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C44);
	op_stkvar	(x,	1);
	create_insn	(0X22C52);
	create_insn	(x=0X22C53);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C5C);
	op_hex		(x,	1);
	create_insn	(x=0X22C60);
	op_hex		(x,	1);
	create_insn	(x=0X22C62);
	op_stkvar	(x,	0);
	create_insn	(x=0X22C67);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22C6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C70);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22C84);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X22C8C);
	create_insn	(0X22C92);
	set_name	(0X22C92,	"file_load_replay");
	create_insn	(x=0X22C97);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22C9A,	"char *",	0);
	create_insn	(x=0X22C9B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22C9E,	"int",	0);
	create_insn	(x=0X22C9F);
	op_stkvar	(x,	0);
	set_cmt	(0X22CA2,	"char *",	0);
	create_insn	(x=0X22CA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X22CAA);
	op_hex		(x,	1);
	create_insn	(x=0X22CBA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22CC3);
	op_hex		(x,	1);
	create_insn	(x=0X22CCD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22CD7,	"copies 13 words from the rpl to gameconfig",	0);
	create_insn	(0X22CE8);
	set_name	(0X22CE8,	"file_write_replay");
	create_insn	(x=0X22CEB);
	op_hex		(x,	1);
	create_insn	(x=0X22CF7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22D03,	"offset of .rpl kb. event block",	0);
	create_insn	(x=0X22D07);
	op_stkvar	(x,	0);
	create_insn	(x=0X22D0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X22D16);
	op_stkvar	(x,	0);
	create_insn	(x=0X22D1E);
	op_hex		(x,	1);
	create_insn	(0X22D2E);
	set_name	(0X22D2E,	"setup_car_shapes");
	create_insn	(x=0X22D31);
	op_hex		(x,	1);
	create_insn	(x=0X22D36);
	op_stkvar	(x,	1);
	create_insn	(0X22D45);
	create_insn	(0X22D4D);
	create_insn	(0X22D55);
	create_insn	(0X22D5C);
	create_insn	(x=0X22D8C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22D8F,	"char *",	0);
	set_cmt	(0X22D93,	"int",	0);
	create_insn	(x=0X22D99);
	op_hex		(x,	1);
	create_insn	(x=0X22DA3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X22DA6,	"char *",	0);
	set_cmt	(0X22DAA,	"int",	0);
	create_insn	(x=0X22DB0);
	op_hex		(x,	1);
	create_insn	(x=0X22DBA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22DBE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22DCF);
	op_hex		(x,	1);
	create_insn	(x=0X22DD2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22DD6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22DE7);
	op_hex		(x,	1);
	create_insn	(x=0X22DF1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22DF5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22E06);
	op_hex		(x,	1);
	create_insn	(x=0X22E22);
	op_hex		(x,	1);
	create_insn	(x=0X22E45);
	op_hex		(x,	1);
	create_insn	(x=0X22E68);
	op_hex		(x,	1);
	create_insn	(x=0X22E72);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22E83);
	op_hex		(x,	1);
	create_insn	(x=0X22E86);
	op_stkvar	(x,	0);
	create_insn	(x=0X22E89);
	op_stkvar	(x,	0);
	create_insn	(x=0X22E99);
	op_hex		(x,	1);
	create_insn	(x=0X22E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E9F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22EA7);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EAF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22EB7);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22EBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X22EBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X22EC7);
	op_hex		(x,	1);
	create_insn	(x=0X22ECF);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ED2);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22ED9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22EEA);
	op_hex		(x,	1);
	create_insn	(x=0X22EF1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22F02);
	op_hex		(x,	1);
	create_insn	(x=0X22F09);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22F0D);
	op_dec		(x,	0);
	create_insn	(0X22F12);
	create_insn	(x=0X22F18);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22F29);
	op_hex		(x,	1);
	create_insn	(x=0X22F2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X22F2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X22F36);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F39);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X22F49);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22F5A);
	op_hex		(x,	1);
	create_insn	(0X22F6A);
	create_insn	(0X22F76);
	create_insn	(x=0X22F7B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22F8C);
	op_hex		(x,	1);
	create_insn	(x=0X22F93);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22FA4);
	op_hex		(x,	1);
	create_insn	(x=0X22FAE);
	op_hex		(x,	1);
	create_insn	(x=0X22FB1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X22FC2);
	op_hex		(x,	1);
	create_insn	(x=0X22FCC);
	op_hex		(x,	1);
	create_insn	(x=0X22FDC);
	op_hex		(x,	1);
	create_insn	(x=0X22FEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X22FF1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22FF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FF8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X22FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FFF);
	op_hex		(x,	1);
	create_insn	(x=0X23001);
	op_stkvar	(x,	0);
	create_insn	(x=0X23006);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2300A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2300F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23014);
	op_stkvar	(x,	1);
	create_insn	(x=0X23017);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2301B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2301E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23022);
	op_stkvar	(x,	1);
	create_insn	(x=0X23025);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X23030);
	create_insn	(x=0X23044);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2306A);
	op_hex		(x,	1);
	create_insn	(x=0X23089);
	op_hex		(x,	1);
	create_insn	(x=0X23092);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X2309A);
	create_insn	(x=0X2309E);
	op_stkvar	(x,	0);
	create_insn	(x=0X230A6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X230AE);
	op_hex		(x,	1);
	create_insn	(x=0X230B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X230B8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X230C1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X230D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X230D4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X230DE);
	create_insn	(x=0X230EB);
	op_hex		(x,	1);
	create_insn	(x=0X230F4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2310A);
	op_hex		(x,	1);
	create_insn	(x=0X23119);
	op_hex		(x,	1);
	create_insn	(x=0X2311B);
	op_stkvar	(x,	0);
	create_insn	(x=0X23120);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23124);
	op_stkvar	(x,	1);
	create_insn	(x=0X23127);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2313A);
	op_hex		(x,	1);
	create_insn	(x=0X2314C);
	op_hex		(x,	1);
	create_insn	(0X2315E);
	create_insn	(x=0X2317B);
	op_hex		(x,	1);
	create_insn	(x=0X2319A);
	op_hex		(x,	1);
	create_insn	(x=0X2319D);
	op_stkvar	(x,	0);
	create_insn	(x=0X231B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X231B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X231BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X231C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X231CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X231D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X231D7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X231E7);
	create_insn	(x=0X231F7);
	op_hex		(x,	1);
	create_insn	(x=0X231F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X231FE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23205);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23209);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23213);
	op_hex		(x,	1);
	create_insn	(x=0X23215);
	op_hex		(x,	1);
	create_insn	(x=0X23217);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2321B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23224);
	op_hex		(x,	1);
	create_insn	(x=0X2322D);
	op_hex		(x,	1);
	create_insn	(x=0X2322F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23235);
	op_stkvar	(x,	0);
	create_insn	(x=0X23239);
	op_stkvar	(x,	1);
	create_insn	(0X2324E);
	create_insn	(x=0X2325B);
	op_hex		(x,	1);
	create_insn	(x=0X23264);
	op_stkvar	(x,	1);
	create_insn	(x=0X23267);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2326B);
	op_stkvar	(x,	0);
	create_insn	(0X23272);
	create_insn	(0X2327C);
	create_insn	(x=0X23286);
	op_stkvar	(x,	0);
	create_insn	(x=0X23299);
	op_stkvar	(x,	0);
	create_insn	(0X232B6);
	create_insn	(x=0X232B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X232D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X232E1);
	op_hex		(x,	1);
	create_insn	(x=0X232E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X232E8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X232EE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X232F7);
	create_insn	(x=0X23307);
	op_hex		(x,	1);
	create_insn	(x=0X23309);
	op_stkvar	(x,	0);
	create_insn	(x=0X2330E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23315);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23319);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23323);
	op_hex		(x,	1);
	create_insn	(x=0X23325);
	op_hex		(x,	1);
	create_insn	(x=0X23327);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2332B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23334);
	op_hex		(x,	1);
	create_insn	(x=0X2333D);
	op_hex		(x,	1);
	create_insn	(x=0X2333F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23345);
	op_stkvar	(x,	0);
	create_insn	(x=0X23356);
	op_hex		(x,	1);
	create_insn	(x=0X2336A);
	op_hex		(x,	1);
	create_insn	(x=0X23371);
	op_hex		(x,	1);
	create_insn	(x=0X23373);
	op_stkvar	(x,	0);
	create_insn	(x=0X23378);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2337C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2337F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23383);
	op_stkvar	(x,	0);
	create_insn	(x=0X2338C);
	op_stkvar	(x,	0);
	create_insn	(x=0X23397);
	op_stkvar	(x,	0);
	create_insn	(x=0X233A2);
	op_stkvar	(x,	0);
	create_insn	(0X233B2);
	create_insn	(x=0X233B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X233BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X233CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X233D2);
	op_hex		(x,	1);
	create_insn	(x=0X233D4);
	op_hex		(x,	1);
	create_insn	(x=0X233D6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X233DA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X233E3);
	op_hex		(x,	1);
	create_insn	(x=0X233E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X233F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X233F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X23409);
	op_stkvar	(x,	1);
	create_insn	(x=0X2340C);
	op_hex		(x,	1);
	create_insn	(x=0X2340E);
	op_hex		(x,	1);
	create_insn	(x=0X23410);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23414);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2341D);
	op_hex		(x,	1);
	create_insn	(x=0X23420);
	op_stkvar	(x,	1);
	create_insn	(x=0X23425);
	op_hex		(x,	1);
	create_insn	(x=0X23427);
	op_hex		(x,	1);
	create_insn	(x=0X2342B);
	op_hex		(x,	1);
	create_insn	(x=0X2342F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2343F);
	op_hex		(x,	1);
	create_insn	(x=0X23441);
	op_hex		(x,	1);
	create_insn	(x=0X23443);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23447);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23450);
	op_hex		(x,	1);
	create_insn	(x=0X23456);
	op_stkvar	(x,	0);
	create_insn	(x=0X2345E);
	op_hex		(x,	1);
	create_insn	(x=0X23460);
	op_stkvar	(x,	0);
	create_insn	(x=0X23469);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23470);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23482);
	op_hex		(x,	1);
	create_insn	(x=0X23487);
	op_hex		(x,	1);
	create_insn	(x=0X23489);
	op_stkvar	(x,	0);
	create_insn	(x=0X23492);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23499);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X234AB);
	op_hex		(x,	1);
	create_insn	(x=0X234AE);
	op_stkvar	(x,	1);
	set_cmt	(0X234B6,	"st. whl. position flag",	0);
	create_insn	(0X234BE);
	create_insn	(x=0X234CB);
	op_hex		(x,	1);
	create_insn	(x=0X234DB);
	op_hex		(x,	1);
	create_insn	(0X234EC);
	create_insn	(x=0X234F9);
	op_hex		(x,	1);
	create_insn	(0X23506);
	create_insn	(x=0X2351E);
	op_hex		(x,	1);
	create_insn	(x=0X23525);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X23529);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X23531);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X23535);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X2353D);
	op_hex		(x,	1);
	create_insn	(x=0X23546);
	op_hex		(x,	1);
	create_insn	(x=0X23548);
	op_stkvar	(x,	1);
	create_insn	(x=0X2354B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23558);
	op_stkvar	(x,	0);
	create_insn	(0X23561);
	create_insn	(x=0X23580);
	op_hex		(x,	1);
	create_insn	(x=0X23587);
	op_hex		(x,	1);
	create_insn	(x=0X23589);
	op_stkvar	(x,	0);
	create_insn	(x=0X2358E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23595);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23599);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X235A3);
	op_hex		(x,	1);
	create_insn	(x=0X235A5);
	op_hex		(x,	1);
	create_insn	(x=0X235A7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X235AB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X235B4);
	op_hex		(x,	1);
	create_insn	(x=0X235BD);
	op_hex		(x,	1);
	create_insn	(x=0X235BF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X235C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X235CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X235D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X235D5);
	op_hex		(x,	1);
	create_insn	(x=0X235D7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X235DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X235E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X235E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X235EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X235F4);
	op_hex		(x,	1);
	create_insn	(x=0X235F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X235FD);
	op_hex		(x,	1);
	create_insn	(x=0X235FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X23602);
	op_stkvar	(x,	1);
	create_insn	(x=0X23613);
	op_stkvar	(x,	1);
	create_insn	(x=0X23616);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2361A);
	op_stkvar	(x,	1);
	create_insn	(x=0X23627);
	op_stkvar	(x,	1);
	create_insn	(x=0X2362A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2362E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2363C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2363F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23649);
	op_hex		(x,	1);
	create_insn	(x=0X2364B);
	op_hex		(x,	1);
	create_insn	(x=0X2364D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23651);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2365A);
	op_hex		(x,	1);
	create_insn	(x=0X2365D);
	op_stkvar	(x,	1);
	create_insn	(x=0X23663);
	op_stkvar	(x,	1);
	create_insn	(x=0X23674);
	op_hex		(x,	1);
	create_insn	(x=0X23677);
	op_stkvar	(x,	1);
	create_insn	(x=0X2367D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2368E);
	op_hex		(x,	1);
	create_insn	(x=0X23697);
	op_hex		(x,	1);
	create_insn	(x=0X23699);
	op_stkvar	(x,	1);
	create_insn	(x=0X2369C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X236AC);
	create_insn	(x=0X236B9);
	op_hex		(x,	1);
	create_insn	(x=0X236C9);
	op_hex		(x,	1);
	create_insn	(x=0X236D9);
	op_hex		(x,	1);
	create_insn	(x=0X236E9);
	op_hex		(x,	1);
	create_insn	(x=0X236F9);
	op_hex		(x,	1);
	create_insn	(0X23702);
	set_name	(0X23702,	"setup_player_cars");
	create_insn	(x=0X23705);
	op_hex		(x,	1);
	create_insn	(x=0X23719);
	op_hex		(x,	1);
	create_insn	(x=0X2371C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23720);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23729);
	op_hex		(x,	1);
	create_insn	(x=0X23744);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2374D);
	op_hex		(x,	1);
	create_insn	(x=0X23750);
	op_stkvar	(x,	0);
	create_insn	(x=0X23753);
	op_stkvar	(x,	0);
	create_insn	(x=0X2375A);
	op_stkvar	(x,	0);
	create_insn	(x=0X23762);
	op_hex		(x,	1);
	create_insn	(x=0X23765);
	op_stkvar	(x,	0);
	create_insn	(x=0X23768);
	op_stkvar	(x,	0);
	create_insn	(x=0X23770);
	op_hex		(x,	1);
	create_insn	(x=0X23792);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2379B);
	op_hex		(x,	1);
	create_insn	(x=0X2379E);
	op_stkvar	(x,	0);
	create_insn	(x=0X237A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X237A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X237B1);
	op_hex		(x,	1);
	create_insn	(x=0X237B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X237B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X237BF);
	op_hex		(x,	1);
	create_insn	(x=0X237CB);
	op_hex		(x,	1);
	create_insn	(x=0X237DC);
	op_hex		(x,	1);
	create_insn	(x=0X237DF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X237E2,	"char *",	0);
	set_cmt	(0X237E6,	"int",	0);
	create_insn	(x=0X237EC);
	op_hex		(x,	1);
	create_insn	(x=0X237F6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X237F9,	"char *",	0);
	set_cmt	(0X237FD,	"int",	0);
	create_insn	(x=0X23803);
	op_hex		(x,	1);
	create_insn	(x=0X23822);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23830);
	op_hex		(x,	1);
	create_insn	(x=0X2385C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2386A);
	op_hex		(x,	1);
	create_insn	(x=0X23882);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X23885,	"char *",	0);
	set_cmt	(0X23888,	"int",	0);
	create_insn	(x=0X2388E);
	op_hex		(x,	1);
	create_insn	(x=0X238B1);
	op_hex		(x,	1);
	create_insn	(x=0X238BB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X238BE,	"char *",	0);
	set_cmt	(0X238C2,	"int",	0);
	create_insn	(x=0X238C8);
	op_hex		(x,	1);
	create_insn	(x=0X238DB);
	op_hex		(x,	1);
	create_insn	(x=0X238DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X238E7);
	op_hex		(x,	1);
	create_insn	(x=0X238F1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X238FF);
	op_hex		(x,	1);
	create_insn	(x=0X23909);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2391A);
	op_hex		(x,	1);
	set_cmt	(0X2392D,	"384h = sky box position in track data",	0);
	create_insn	(x=0X2393A);
	op_hex		(x,	1);
	create_insn	(0X2394E);
	create_insn	(x=0X23971);
	op_stkvar	(x,	0);
	create_insn	(x=0X23974);
	op_stkvar	(x,	0);
	create_insn	(x=0X2397C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23983);
	op_stkvar	(x,	1);
	create_insn	(x=0X23999);
	op_hex		(x,	1);
	create_insn	(0X239B4);
	set_name	(0X239B4,	"free_player_cars");
	create_insn	(x=0X239D1);
	op_hex		(x,	1);
	create_insn	(x=0X239F0);
	op_hex		(x,	1);
	create_insn	(x=0X23A07);
	op_hex		(x,	1);
	create_insn	(x=0X23A12);
	op_hex		(x,	1);
	create_insn	(x=0X23A22);
	op_hex		(x,	1);
	create_insn	(x=0X23A37);
	op_hex		(x,	1);
	create_insn	(x=0X23A47);
	op_hex		(x,	1);
	create_insn	(0X23A50);
	set_name	(0X23A50,	"mouse_minmax_position");
	create_insn	(x=0X23A53);
	op_stkvar	(x,	0);
	create_insn	(x=0X23A6D);
	op_hex		(x,	1);
	create_insn	(x=0X23A7D);
	op_hex		(x,	1);
	create_insn	(0X23A82);
	create_insn	(x=0X23A93);
	op_hex		(x,	1);
	create_insn	(0X23A98);
	set_name	(0X23A98,	"replay_unk");
	create_insn	(x=0X23A9B);
	op_hex		(x,	1);
	create_insn	(x=0X23AA4);
	op_hex		(x,	1);
	create_insn	(x=0X23AA7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23AB1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23ABF);
	op_hex		(x,	1);
	create_insn	(x=0X23AC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X23ACE);
	op_stkvar	(x,	0);
	create_insn	(0X23AE0);
	create_insn	(x=0X23AEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X23AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B06);
	op_stkvar	(x,	0);
	create_insn	(0X23B0C);
	create_insn	(x=0X23B12);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X23B24);
	op_stkvar	(x,	0);
	create_insn	(x=0X23B28);
	op_stkvar	(x,	0);
	create_insn	(x=0X23B3A);
	op_stkvar	(x,	1);
	set_cmt	(0X23B3D,	"writing action into rpl buff?!",	0);
	create_insn	(x=0X23B40);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X23B4C);
	set_name	(0X23B4C,	"loop_game");
	create_insn	(x=0X23B4F);
	op_hex		(x,	1);
	create_insn	(x=0X23B54);
	op_stkvar	(x,	1);
	create_insn	(0X23B6D);
	create_insn	(x=0X23B70);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23B74);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23B85);
	op_hex		(x,	1);
	create_insn	(x=0X23B88);
	op_stkvar	(x,	0);
	create_insn	(x=0X23B8F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B9D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X23BA6);
	create_insn	(x=0X23BAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X23BAF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23BB9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23BBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BC1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BC9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23BD8);
	op_hex		(x,	1);
	create_insn	(x=0X23BDC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23BF9);
	op_hex		(x,	1);
	create_insn	(x=0X23C00);
	op_hex		(x,	1);
	create_insn	(x=0X23C02);
	op_stkvar	(x,	0);
	create_insn	(x=0X23C07);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23C0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C10);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X23C19,	"int",	0);
	create_insn	(x=0X23C22);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X23C25,	"char *",	0);
	create_insn	(x=0X23C2B);
	op_hex		(x,	1);
	create_insn	(x=0X23C3A);
	op_hex		(x,	1);
	create_insn	(x=0X23C4A);
	op_hex		(x,	1);
	create_insn	(x=0X23C55);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23C5E);
	op_hex		(x,	1);
	create_insn	(x=0X23C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X23C74);
	op_hex		(x,	1);
	create_insn	(x=0X23C76);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23C79);
	op_stkvar	(x,	0);
	create_insn	(x=0X23C7E);
	op_stkvar	(x,	1);
	set_cmt	(0X23C8A,	"int",	0);
	create_insn	(x=0X23C8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X23C8E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X23C91,	"char *",	0);
	create_insn	(x=0X23C97);
	op_hex		(x,	1);
	create_insn	(x=0X23CA6);
	op_hex		(x,	1);
	create_insn	(x=0X23CBB);
	op_hex		(x,	1);
	create_insn	(x=0X23CC6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23CCF);
	op_hex		(x,	1);
	create_insn	(x=0X23CDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X23CE3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23CE9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23CED);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CF0);
	op_hex		(x,	1);
	create_insn	(x=0X23CF2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23D03);
	op_hex		(x,	1);
	create_insn	(x=0X23D05);
	op_hex		(x,	1);
	create_insn	(x=0X23D07);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23D0B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23D14);
	op_hex		(x,	1);
	create_insn	(x=0X23D1D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23D21);
	op_stkvar	(x,	0);
	create_insn	(x=0X23D27);
	op_stkvar	(x,	0);
	create_insn	(x=0X23D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D36);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23D39);
	op_stkvar	(x,	0);
	create_insn	(0X23D54);
	create_insn	(x=0X23D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D98);
	op_hex		(x,	1);
	create_insn	(x=0X23D9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X23D9F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23DA5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23DB4);
	op_hex		(x,	1);
	create_insn	(x=0X23DB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X23DBB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23DBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DC2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23DDF);
	op_hex		(x,	1);
	create_insn	(x=0X23DF9);
	op_hex		(x,	1);
	create_insn	(x=0X23E17);
	op_hex		(x,	1);
	create_insn	(x=0X23E23);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23E32);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E37);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23E41);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23E46);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E4B);
	op_hex		(x,	1);
	create_insn	(x=0X23E4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E50);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23E59);
	op_hex		(x,	1);
	create_insn	(x=0X23E5B);
	op_hex		(x,	1);
	create_insn	(x=0X23E5D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23E61);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23E68);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E71);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X23E83);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23E8D);
	op_hex		(x,	1);
	create_insn	(x=0X23E91);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X23E9A);
	create_insn	(x=0X23EA0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23EA7);
	op_hex		(x,	1);
	create_insn	(x=0X23EA9);
	op_hex		(x,	1);
	create_insn	(x=0X23EAB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EAF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EB8);
	op_hex		(x,	1);
	create_insn	(x=0X23EC1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X23ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X23ECE);
	op_stkvar	(x,	0);
	create_insn	(x=0X23ED3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EDA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23EE4);
	op_hex		(x,	1);
	create_insn	(x=0X23EE8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EF1);
	op_hex		(x,	1);
	create_insn	(x=0X23EF3);
	op_hex		(x,	1);
	create_insn	(x=0X23EF5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23EF9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F02);
	op_hex		(x,	1);
	create_insn	(x=0X23F05);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F0B);
	op_hex		(x,	1);
	create_insn	(x=0X23F13);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F18);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F21);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F25);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F29);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F2E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F39);
	op_hex		(x,	1);
	create_insn	(x=0X23F3D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F42);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F45);
	op_hex		(x,	1);
	create_insn	(x=0X23F47);
	op_hex		(x,	1);
	create_insn	(x=0X23F49);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F4D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F56);
	op_hex		(x,	1);
	create_insn	(x=0X23F59);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F5F);
	op_hex		(x,	1);
	create_insn	(x=0X23F67);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F7E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F8D);
	op_hex		(x,	1);
	create_insn	(x=0X23F8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X23F98);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23F9C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23FA0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23FA4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X23FAD);
	op_hex		(x,	1);
	create_insn	(0X23FB8);
	create_insn	(x=0X23FBE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X23FC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X23FC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X23FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FE9);
	op_hex		(x,	1);
	create_insn	(x=0X23FF9);
	op_hex		(x,	1);
	create_insn	(x=0X23FFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X23FFF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24003);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24007);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2400B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X24015,	"get number of buttons by cameramode",	0);
	create_insn	(x=0X24015);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24021);
	op_hex		(x,	1);
	create_insn	(x=0X24024);
	op_stkvar	(x,	0);
	create_insn	(0X2402E);
	create_insn	(x=0X24031);
	op_stkvar	(x,	0);
	create_insn	(x=0X24036);
	op_stkvar	(x,	0);
	create_insn	(x=0X2403C);
	op_stkvar	(x,	0);
	create_insn	(x=0X24041);
	op_stkvar	(x,	1);
	create_insn	(x=0X24047);
	op_stkvar	(x,	0);
	create_insn	(x=0X2404D);
	op_stkvar	(x,	0);
	create_insn	(0X24056);
	create_insn	(0X24060);
	create_insn	(x=0X24069);
	op_hex		(x,	1);
	create_insn	(x=0X24071);
	op_stkvar	(x,	0);
	create_insn	(x=0X2407A);
	op_stkvar	(x,	0);
	create_insn	(0X24082);
	create_insn	(x=0X24089);
	op_hex		(x,	1);
	create_insn	(x=0X2409B);
	op_hex		(x,	1);
	create_insn	(x=0X240A5);
	op_hex		(x,	1);
	create_insn	(x=0X240AB);
	op_hex		(x,	1);
	create_insn	(x=0X240C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X240D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X240D8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X240DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X240E0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X240E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X240F1);
	op_hex		(x,	1);
	create_insn	(x=0X240F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X240FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X24101);
	op_stkvar	(x,	0);
	create_insn	(x=0X24107);
	op_stkvar	(x,	0);
	create_insn	(x=0X2410C);
	op_stkvar	(x,	0);
	create_insn	(x=0X24112);
	op_stkvar	(x,	0);
	create_insn	(x=0X24118);
	op_stkvar	(x,	0);
	create_insn	(x=0X2411F);
	op_hex		(x,	1);
	create_insn	(0X24129);
	create_insn	(x=0X24130);
	op_stkvar	(x,	0);
	create_insn	(0X24140);
	create_insn	(x=0X24150);
	op_hex		(x,	1);
	create_insn	(0X2415A);
	create_insn	(x=0X24190);
	op_hex		(x,	1);
	create_insn	(x=0X241A3);
	op_hex		(x,	1);
	create_insn	(x=0X241A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X241B3);
	op_hex		(x,	1);
	create_insn	(x=0X241C1);
	op_hex		(x,	1);
	create_insn	(x=0X241C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X241CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X241D2);
	op_stkvar	(x,	1);
	create_insn	(0X241DD);
	create_insn	(0X241E5);
	create_insn	(x=0X241F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X241FE);
	op_stkvar	(x,	1);
	create_insn	(0X24209);
	create_insn	(0X2420E);
	create_insn	(0X24216);
	create_insn	(0X2421E);
	create_insn	(0X24226);
	create_insn	(0X2422A);
	create_insn	(0X24236);
	create_insn	(0X24242);
	create_insn	(0X24258);
	create_insn	(0X2426E);
	create_insn	(0X2427F);
	create_insn	(0X24288);
	create_insn	(0X24293);
	create_insn	(0X2429C);
	create_insn	(0X242AE);
	create_insn	(0X242B6);
	create_insn	(0X242C0);
	create_insn	(0X242C8);
	create_insn	(x=0X242CE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X242D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X242DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X242DE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X242F7);
	op_hex		(x,	1);
	create_insn	(0X242FE);
	create_insn	(x=0X24304);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2430A);
	create_insn	(x=0X24317);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2431E);
	create_insn	(0X24328);
	create_insn	(x=0X2432E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X24334);
	create_insn	(x=0X24340);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_insn	(0X24346);
	create_insn	(x=0X2435F);
	op_hex		(x,	1);
	create_insn	(x=0X24372);
	op_hex		(x,	1);
	create_insn	(x=0X24379);
	op_hex		(x,	1);
	create_insn	(x=0X2438F);
	op_stkvar	(x,	0);
	create_insn	(x=0X243A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X243AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X243B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X243B8);
	op_hex		(x,	1);
	create_insn	(x=0X243BF);
	op_stkvar	(x,	0);
	set_cmt	(0X243C4,	"pause menu",	0);
	create_insn	(x=0X243CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X243DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X243EB);
	op_hex		(x,	1);
	create_insn	(x=0X243FC);
	op_hex		(x,	1);
	create_insn	(x=0X243FF);
	op_stkvar	(x,	0);
	create_insn	(0X2440E);
	create_insn	(x=0X24411);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_insn	(x=0X24430);
	op_hex		(x,	1);
	create_insn	(x=0X2444C);
	op_hex		(x,	1);
	create_insn	(0X2445A);
	set_cmt	(0X24470,	"RH warning",	0);
	create_insn	(x=0X24470);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24481);
	op_hex		(x,	1);
	create_insn	(x=0X24492);
	op_hex		(x,	1);
	create_insn	(0X2449F);
	create_insn	(0X244A2);
	create_insn	(x=0X244E8);
	op_hex		(x,	1);
	create_insn	(x=0X244F9);
	op_hex		(x,	1);
	create_insn	(0X2450A);
	create_insn	(x=0X24514);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24525);
	op_hex		(x,	1);
	set_cmt	(0X24528,	"int",	0);
	set_cmt	(0X24529,	"int",	0);
	create_insn	(x=0X2452A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2452D,	"int",	0);
	create_insn	(x=0X24532);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X24535,	"char *",	0);
	create_insn	(x=0X2453B);
	op_hex		(x,	1);
	create_insn	(0X24548);
	create_insn	(x=0X24555);
	op_stkvar	(x,	1);
	create_insn	(x=0X2456F);
	op_stkvar	(x,	0);
	set_cmt	(0X24579,	"char *",	0);
	create_insn	(x=0X2457E);
	op_hex		(x,	1);
	create_insn	(x=0X245A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X245AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X245B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X245BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X245C5);
	op_stkvar	(x,	0);
	create_insn	(0X245D0);
	create_insn	(x=0X245D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X245DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X245E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X245EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X245F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X24605);
	op_hex		(x,	1);
	create_insn	(x=0X24629);
	op_hex		(x,	1);
	create_insn	(0X24630);
	create_insn	(x=0X24635);
	op_stkvar	(x,	0);
	create_insn	(x=0X24639);
	op_stkvar	(x,	0);
	create_insn	(x=0X24642);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24653);
	op_hex		(x,	1);
	set_cmt	(0X24656,	"int",	0);
	set_cmt	(0X24657,	"int",	0);
	set_cmt	(0X2465F,	"char *",	0);
	create_insn	(x=0X24665);
	op_hex		(x,	1);
	create_insn	(x=0X2466F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X24672,	"char *",	0);
	create_insn	(x=0X24673);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X24676,	"int",	0);
	set_cmt	(0X2467E,	"char *",	0);
	create_insn	(x=0X24684);
	op_hex		(x,	1);
	create_insn	(x=0X24687);
	op_stkvar	(x,	0);
	create_insn	(x=0X24690);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24699);
	op_hex		(x,	1);
	create_insn	(x=0X246AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X246BE);
	op_hex		(x,	1);
	create_insn	(x=0X246CF);
	op_hex		(x,	1);
	create_insn	(x=0X246D9);
	op_stkvar	(x,	0);
	create_insn	(0X246E0);
	create_insn	(x=0X246E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X246F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X246F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X246FD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24705);
	op_hex		(x,	1);
	create_insn	(x=0X24708);
	op_stkvar	(x,	0);
	create_insn	(0X24712);
	create_insn	(x=0X2471F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24730);
	op_hex		(x,	1);
	create_insn	(x=0X24741);
	op_hex		(x,	1);
	create_insn	(0X24748);
	create_insn	(x=0X24754);
	op_hex		(x,	1);
	create_insn	(0X24760);
	create_insn	(x=0X2476C);
	op_hex		(x,	1);
	create_insn	(0X24776);
	create_insn	(x=0X2477A);
	op_hex		(x,	1);
	create_insn	(x=0X24790);
	op_stkvar	(x,	0);
	create_insn	(x=0X24798);
	op_stkvar	(x,	1);
	create_insn	(x=0X247A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X247B6);
	op_hex		(x,	1);
	create_insn	(x=0X247C7);
	op_hex		(x,	1);
	create_insn	(x=0X247CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X247E8);
	op_hex		(x,	1);
	set_cmt	(0X247F0,	"\"replay bar on/off (while driving)\"",	0);
	create_insn	(x=0X247F0);
	op_hex		(x,	1);
	create_insn	(0X247F8);
	create_insn	(0X2480A);
	create_insn	(x=0X24812);
	op_hex		(x,	1);
	create_word	(x=0X2481A);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X2481C);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	set_cmt	(0X2481E,	"modifying this to 0x2CB8 disables Continue Driving",	0);
	create_word	(x=0X2481E);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24820);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24822);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24824);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24826);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_insn	(0X24828);
	create_insn	(0X24830);
	create_insn	(x=0X24846);
	op_hex		(x,	1);
	create_insn	(x=0X2484E);
	op_stkvar	(x,	0);
	create_insn	(x=0X24853);
	op_stkvar	(x,	0);
	create_insn	(0X2485C);
	create_insn	(x=0X24862);
	op_stkvar	(x,	0);
	create_insn	(x=0X24865);
	op_stkvar	(x,	0);
	create_insn	(x=0X2487F);
	op_stkvar	(x,	0);
	create_insn	(x=0X24887);
	op_stkvar	(x,	0);
	create_insn	(x=0X2488A);
	op_stkvar	(x,	0);
	create_insn	(x=0X24894);
	op_stkvar	(x,	0);
	create_insn	(x=0X2489D);
	op_stkvar	(x,	0);
	create_insn	(x=0X248A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X248A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X248B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X248BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X248C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X248CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X248CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X248E6);
	op_hex		(x,	1);
	create_insn	(x=0X248E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X248F1);
	op_hex		(x,	1);
	create_insn	(x=0X248F4);
	op_hex		(x,	1);
	create_insn	(0X248FE);
	create_insn	(x=0X24905);
	op_stkvar	(x,	0);
	create_insn	(x=0X2490E);
	op_stkvar	(x,	0);
	create_insn	(x=0X24911);
	op_stkvar	(x,	0);
	create_insn	(x=0X24919);
	op_stkvar	(x,	1);
	create_insn	(x=0X24927);
	op_stkvar	(x,	0);
	create_insn	(x=0X2492F);
	op_stkvar	(x,	0);
	create_insn	(x=0X24932);
	op_stkvar	(x,	0);
	create_insn	(x=0X2493B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2493E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2495C);
	op_hex		(x,	1);
	create_insn	(x=0X24972);
	op_hex		(x,	1);
	create_insn	(x=0X24975);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24986);
	op_hex		(x,	1);
	create_insn	(x=0X2498B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24994);
	op_hex		(x,	1);
	create_insn	(x=0X249AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X249B6);
	op_hex		(x,	1);
	create_insn	(x=0X249BA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X249C3);
	op_hex		(x,	1);
	create_insn	(0X249D2);
	create_insn	(x=0X249DD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X249E6);
	op_hex		(x,	1);
	create_insn	(x=0X249EA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X249F3);
	op_hex		(x,	1);
	create_insn	(0X249F8);
	create_insn	(x=0X24A0D);
	op_hex		(x,	1);
	create_insn	(x=0X24A22);
	op_hex		(x,	1);
	create_insn	(0X24A28);
	create_insn	(x=0X24A41);
	op_hex		(x,	1);
	create_insn	(x=0X24A49);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A4E);
	op_stkvar	(x,	0);
	make_array	(0X24A56,	0X2);
	create_insn	(0X24A58);
	create_insn	(x=0X24A5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A61);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A83);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A86);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X24A92);
	op_stkvar	(x,	0);
	create_insn	(x=0X24AB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X24AB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X24ABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X24AC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X24ADC);
	op_hex		(x,	1);
	create_insn	(x=0X24ADF);
	op_stkvar	(x,	0);
	create_insn	(x=0X24AE7);
	op_hex		(x,	1);
	create_insn	(x=0X24AEA);
	op_hex		(x,	1);
	create_insn	(0X24AF4);
	create_insn	(x=0X24AFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X24AFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X24B1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X24B20);
	op_stkvar	(x,	0);
	create_insn	(x=0X24B29);
	op_stkvar	(x,	0);
	create_insn	(x=0X24B2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X24B45);
	op_hex		(x,	1);
	create_insn	(x=0X24B4F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24B60);
	op_hex		(x,	1);
	create_insn	(x=0X24B65);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24B6E);
	op_hex		(x,	1);
	create_insn	(x=0X24B87);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24B90);
	op_hex		(x,	1);
	create_insn	(x=0X24B94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24B9D);
	op_hex		(x,	1);
	create_insn	(x=0X24BAA);
	op_hex		(x,	1);
	create_insn	(0X24BB0);
	create_insn	(x=0X24BBB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24BC4);
	op_hex		(x,	1);
	create_insn	(x=0X24BC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24BD1);
	op_hex		(x,	1);
	create_insn	(x=0X24BE0);
	op_hex		(x,	1);
	create_insn	(x=0X24BED);
	op_stkvar	(x,	0);
	create_insn	(0X24BF8);
	create_insn	(x=0X24C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C2B);
	op_hex		(x,	1);
	create_insn	(x=0X24C37);
	op_hex		(x,	1);
	create_insn	(x=0X24C53);
	op_hex		(x,	1);
	create_insn	(0X24C5A);
	create_insn	(x=0X24C6E);
	op_hex		(x,	1);
	create_insn	(0X24C74);
	create_insn	(x=0X24C8D);
	op_hex		(x,	1);
	create_insn	(x=0X24CA0);
	op_hex		(x,	1);
	create_insn	(0X24CA6);
	create_insn	(x=0X24CBF);
	op_hex		(x,	1);
	create_insn	(x=0X24CD2);
	op_hex		(x,	1);
	create_insn	(x=0X24CDD);
	op_hex		(x,	1);
	create_insn	(x=0X24CEB);
	op_hex		(x,	1);
	create_insn	(x=0X24CFD);
	op_hex		(x,	1);
	create_insn	(0X24D04);
	create_insn	(x=0X24D10);
	op_hex		(x,	1);
	create_word	(x=0X24D20);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D22);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D24);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D26);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D28);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D2A);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_word	(x=0X24D2C);
	op_plain_offset	(x,	0,	0X21B70);
	op_plain_offset	(x,	128,	0X21B70);
	create_insn	(0X24D2E);
	create_insn	(0X24D32);
	create_insn	(0X24D3A);
	create_insn	(0X24D42);
	create_insn	(0X24D4A);
	create_insn	(0X24D52);
	create_insn	(0X24D5A);
	create_insn	(0X24D5E);
	set_cmt	(0X24D64,	"bytes to reserve",	0);
	create_insn	(x=0X24D64);
	op_hex		(x,	1);
	set_name	(0X24D64,	"init_polyinfo");
	create_insn	(x=0X24D6A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24D73);
	op_hex		(x,	1);
	create_insn	(x=0X24D80);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24D89);
	op_hex		(x,	1);
	create_insn	(x=0X24D8C);
	op_hex		(x,	1);
	create_insn	(x=0X24D90);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24D99);
	op_hex		(x,	1);
	create_insn	(x=0X24D9C);
	op_hex		(x,	1);
	create_insn	(x=0X24DA0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24DA9);
	op_hex		(x,	1);
	create_insn	(x=0X24DAC);
	op_hex		(x,	1);
	create_insn	(x=0X24DB0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24DB9);
	op_hex		(x,	1);
	create_insn	(0X24DC2);
	set_name	(0X24DC2,	"copy_material_list_pointers");
	create_insn	(x=0X24DC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DDD);
	op_stkvar	(x,	1);
	create_insn	(0X24DE6);
	set_name	(0X24DE6,	"polyinfo_reset");
	create_insn	(0X24E06);
	set_name	(0X24E06,	"select_cliprect_rotate");
	create_insn	(x=0X24E09);
	op_hex		(x,	1);
	create_insn	(x=0X24E12);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E15);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E18);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E1F);
	op_hex		(x,	1);
	create_insn	(x=0X24E22);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24E32);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E35);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E49);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E5F);
	op_hex		(x,	1);
	create_insn	(x=0X24E62);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E65);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E78);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E84);
	op_hex		(x,	1);
	create_insn	(x=0X24E87);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X24E92);
	op_hex		(x,	1);
	create_insn	(x=0X24E95);
	op_hex		(x,	1);
	create_insn	(0X24E9E);
	set_name	(0X24E9E,	"transformed_shape_op");
	create_insn	(x=0X24EA1);
	op_hex		(x,	1);
	create_insn	(x=0X24EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EBB);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24EBE);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24EC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EC6);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24EC9);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24ECC);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X24ED9);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24EDC);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24EDF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24EE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EEC);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24EEF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EF9);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24EFC);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24EFF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24F02);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F06);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F0D);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F10);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24F13);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X24F16);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F21);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F32);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F38);
	op_hex		(x,	1);
	create_insn	(x=0X24F3F);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F4A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X24F58,	E_PREV + 0,	"^ loop fills vertflagtbl w/0xff's");
	update_extra_cmt		(0X24F58,	E_PREV + 1,	"");
	create_insn	(x=0X24F58);
	op_hex		(x,	1);
	create_insn	(x=0X24F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F65);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F68);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F6B);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24F72);
	op_hex		(x,	1);
	create_insn	(x=0X24F75);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F79);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F7E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24F82);
	op_stkvar	(x,	0);
	create_insn	(x=0X24F8B);
	op_hex		(x,	1);
	create_insn	(x=0X24F8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F93);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FB0);
	op_stkvar	(x,	0);
	create_insn	(0X24FB6);
	create_insn	(x=0X24FB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FBC);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24FBF);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24FC2);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X24FC9);
	op_hex		(x,	1);
	create_insn	(x=0X24FCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FD4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24FD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FE0);
	op_hex		(x,	1);
	create_insn	(x=0X24FE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FE8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X24FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X24FF5);
	op_hex		(x,	1);
	create_insn	(x=0X24FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X25007);
	op_hex		(x,	1);
	create_insn	(x=0X2500A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25010);
	op_stkvar	(x,	0);
	create_insn	(x=0X25016);
	op_stkvar	(x,	0);
	create_insn	(x=0X2501C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25021);
	op_stkvar	(x,	1);
	create_insn	(x=0X25026);
	op_stkvar	(x,	1);
	create_insn	(x=0X25030);
	op_hex		(x,	1);
	create_insn	(x=0X25033);
	op_stkvar	(x,	0);
	create_insn	(x=0X2503A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2503D);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	set_cmt	(0X25046,	"int",	0);
	create_insn	(x=0X25046);
	op_stkvar	(x,	0);
	create_insn	(x=0X2504E);
	op_hex		(x,	1);
	create_insn	(x=0X25051);
	op_stkvar	(x,	1);
	create_insn	(x=0X25054);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X25057);
	op_hex		(x,	1);
	set_cmt	(0X2505D,	"int",	0);
	create_insn	(x=0X2505D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25065);
	op_hex		(x,	1);
	create_insn	(x=0X25068);
	op_stkvar	(x,	1);
	create_insn	(x=0X2506B);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X2506E);
	op_hex		(x,	1);
	create_insn	(x=0X25077);
	op_stkvar	(x,	1);
	create_insn	(x=0X25080);
	op_hex		(x,	1);
	create_insn	(x=0X25089);
	op_hex		(x,	1);
	create_insn	(x=0X2508B);
	op_hex		(x,	1);
	create_insn	(x=0X2508D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25091);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25095);
	op_stkvar	(x,	0);
	create_insn	(x=0X25099);
	op_stkvar	(x,	0);
	create_insn	(x=0X2509D);
	op_stkvar	(x,	0);
	create_insn	(x=0X250A0);
	op_stkvar	(x,	0);
	set_cmt	(0X250A3,	"initialized to 190h in polyinfo_reset()",	1);
	create_insn	(x=0X250B2);
	op_stkvar	(x,	0);
	create_insn	(0X250C6);
	create_insn	(x=0X250E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X250EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X250F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X250FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X25100);
	op_stkvar	(x,	0);
	create_insn	(x=0X25107);
	op_hex		(x,	1);
	create_insn	(x=0X25109);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2510D);
	op_stkvar	(x,	1);
	create_insn	(x=0X25117);
	op_hex		(x,	1);
	create_insn	(x=0X2511A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25123);
	op_hex		(x,	1);
	create_insn	(x=0X25125);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2512D);
	op_hex		(x,	1);
	create_insn	(x=0X25130);
	op_stkvar	(x,	0);
	create_insn	(x=0X25134);
	op_stkvar	(x,	0);
	create_insn	(0X2513E);
	create_insn	(0X2514B);
	create_insn	(x=0X2514D);
	op_hex		(x,	1);
	create_insn	(x=0X25151);
	op_hex		(x,	1);
	create_insn	(x=0X25153);
	op_hex		(x,	1);
	set_cmt	(0X25157,	"array access in var_416, but dunno how to make IDA show this",	0);
	create_insn	(x=0X2515A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X25162);
	op_hex		(x,	1);
	create_insn	(x=0X25166);
	op_hex		(x,	1);
	create_insn	(x=0X25172);
	op_stkvar	(x,	1);
	create_insn	(x=0X2518A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2518E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X25192);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X25196);
	op_stkvar	(x,	1);
	create_insn	(x=0X2519B);
	op_stkvar	(x,	1);
	create_insn	(x=0X251A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X251AA);
	op_hex		(x,	1);
	create_insn	(x=0X251AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X251B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X251B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X251B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X251BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X251BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X251C6);
	op_hex		(x,	1);
	set_cmt	(0X251CA,	"bx = vertex index * 6",	0);
	create_insn	(x=0X251CA);
	op_hex		(x,	1);
	create_insn	(x=0X251D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X251D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X251DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X251E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X251EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X251F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X251FD);
	op_stkvar	(x,	0);
	set_cmt	(0X25203,	"int",	0);
	create_insn	(x=0X25203);
	op_stkvar	(x,	0);
	create_insn	(x=0X2520B);
	op_hex		(x,	1);
	create_insn	(x=0X2520E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25211);
	op_stroff	(x,	0,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X25220);
	op_stkvar	(x,	1);
	create_insn	(x=0X25223);
	op_stroff	(x,	1,	GetStrucIdByName("TRANSFORMEDSHAPE"),	0);
	create_insn	(x=0X25226);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X25229);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	set_cmt	(0X25237,	"primitives+0 = primitive type",	0);
	set_cmt	(0X2523C,	"look up maybe indexcount from a table?",	0);
	create_insn	(x=0X2523C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2525A,	"primitives+1 = primitive flags",	0);
	create_insn	(x=0X25260);
	op_stkvar	(x,	0);
	create_insn	(x=0X25263);
	op_stkvar	(x,	0);
	create_insn	(x=0X25268);
	op_stkvar	(x,	1);
	create_insn	(x=0X25273);
	op_stkvar	(x,	1);
	create_insn	(x=0X25277);
	op_stkvar	(x,	1);
	create_insn	(0X25282);
	set_cmt	(0X25286,	"primitives+0 = type",	0);
	create_insn	(x=0X2528B);
	op_stkvar	(x,	0);
	create_insn	(x=0X25291);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25298);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2529C,	"primunktab maps from file-based primitive type to internal type:\n1 = 5   (particle)\n2 = 1   (line)\n3..10 = 0 (poly)\n11 = 2   (sphere)\n12 = 3   (wheel)\n14 = 4   (unknown)",	0);
	create_insn	(x=0X2529C);
	op_stkvar	(x,	0);
	create_insn	(x=0X252B5);
	op_hex		(x,	1);
	create_insn	(x=0X252B7);
	op_hex		(x,	1);
	create_insn	(x=0X252B9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X252BD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X252CF,	"primitives+2+X = paint job color, X in [0..numpaints]",	0);
	set_cmt	(0X252DC,	"<- skip header and materials, -> point at indices",	0);
	create_insn	(x=0X252E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X252E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X252EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X252F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X252FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X25304);
	op_stkvar	(x,	0);
	create_insn	(x=0X2530A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25311);
	op_stkvar	(x,	1);
	create_insn	(x=0X25314);
	op_hex		(x,	1);
	create_insn	(x=0X25316);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2531E);
	op_hex		(x,	1);
	create_insn	(x=0X25321);
	op_stkvar	(x,	0);
	create_insn	(x=0X25325);
	op_stkvar	(x,	0);
	create_insn	(x=0X2532D);
	op_stkvar	(x,	0);
	create_insn	(0X25335);
	create_insn	(x=0X25346);
	op_stkvar	(x,	1);
	create_insn	(x=0X25349);
	op_hex		(x,	1);
	create_insn	(x=0X2534B);
	op_hex		(x,	1);
	create_insn	(x=0X2534D);
	op_hex		(x,	1);
	create_insn	(x=0X25354);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X25358);
	op_stkvar	(x,	1);
	create_insn	(0X2536E);
	create_insn	(0X25370);
	create_insn	(x=0X25374);
	op_hex		(x,	1);
	create_insn	(x=0X25378);
	op_hex		(x,	1);
	create_insn	(x=0X25384);
	op_stkvar	(x,	1);
	create_insn	(x=0X2539C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X253A0);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X253A4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X253A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X253AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X253B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X253BC);
	op_hex		(x,	1);
	create_insn	(x=0X253BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X253C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X253C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X253C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X253CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X253D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X253D8);
	op_hex		(x,	1);
	create_insn	(x=0X253DC);
	op_hex		(x,	1);
	create_insn	(x=0X253E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X253E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X253F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X253F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X253FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X25406);
	op_stkvar	(x,	0);
	create_insn	(x=0X2540C);
	op_stkvar	(x,	0);
	create_insn	(x=0X25411);
	op_stkvar	(x,	1);
	create_insn	(x=0X25414);
	op_hex		(x,	1);
	create_insn	(x=0X25416);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2541A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25424);
	op_hex		(x,	1);
	create_insn	(x=0X2542A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25434);
	op_stkvar	(x,	0);
	create_insn	(x=0X2543B);
	op_stkvar	(x,	0);
	create_insn	(x=0X25444);
	op_stkvar	(x,	1);
	set_cmt	(0X2544B,	"al = 0 for polygons,",	0);
	set_cmt	(0X2544D,	"1 = lines",	1);
	create_insn	(0X25455);
	set_cmt	(0X2545A,	"2 = sphere",	0);
	create_insn	(0X2545D);
	set_cmt	(0X25462,	"3 = wheel",	0);
	create_insn	(0X25465);
	set_cmt	(0X2546A,	"5 = particle",	0);
	set_cmt	(0X2546D,	"everything else? (4?)",	0);
	create_insn	(0X2546D);
	create_insn	(0X25470);
	create_insn	(x=0X2547A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2547E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25492);
	op_stkvar	(x,	0);
	create_insn	(x=0X25495);
	op_stkvar	(x,	0);
	create_insn	(x=0X25498);
	op_stkvar	(x,	0);
	create_insn	(x=0X2549D);
	op_stkvar	(x,	0);
	create_insn	(0X254A6);
	create_insn	(0X254B3);
	create_insn	(x=0X254C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X254C7);
	op_hex		(x,	1);
	create_insn	(x=0X254CB);
	op_hex		(x,	1);
	create_insn	(x=0X254CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X254D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X254D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X254DC);
	op_hex		(x,	1);
	create_insn	(x=0X254DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X254E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X254EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X254F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X25500);
	op_stkvar	(x,	1);
	create_insn	(x=0X2550A);
	op_hex		(x,	1);
	create_insn	(x=0X2550D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25511);
	op_stkvar	(x,	0);
	create_insn	(x=0X25518);
	op_stkvar	(x,	0);
	create_insn	(x=0X25531);
	op_stkvar	(x,	0);
	create_insn	(x=0X2553A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25540);
	op_stkvar	(x,	0);
	create_insn	(0X2554A);
	create_insn	(x=0X2554E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25553);
	op_stkvar	(x,	1);
	create_insn	(x=0X25558);
	op_hex		(x,	1);
	create_insn	(x=0X2555C);
	op_hex		(x,	1);
	create_insn	(x=0X25564);
	op_stkvar	(x,	1);
	create_insn	(x=0X2556A);
	op_hex		(x,	1);
	create_insn	(x=0X2556E);
	op_hex		(x,	1);
	create_insn	(x=0X2557B);
	op_hex		(x,	1);
	create_insn	(x=0X2557E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25583);
	op_stkvar	(x,	1);
	create_insn	(x=0X2558D);
	op_hex		(x,	1);
	create_insn	(x=0X25590);
	op_stkvar	(x,	1);
	create_insn	(x=0X25594);
	op_hex		(x,	1);
	create_insn	(x=0X25596);
	op_hex		(x,	1);
	create_insn	(x=0X2559A);
	op_stkvar	(x,	0);
	create_insn	(x=0X255A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X255A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X255AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X255AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X255B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X255BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X255C4);
	op_hex		(x,	1);
	create_insn	(x=0X255C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X255CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X255CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X255D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X255DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X255E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X255E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X255E9);
	op_stkvar	(x,	0);
	create_insn	(0X255FA);
	create_insn	(x=0X25609);
	op_stkvar	(x,	0);
	create_insn	(x=0X2560E);
	op_hex		(x,	1);
	create_insn	(x=0X25612);
	op_hex		(x,	1);
	create_insn	(x=0X25616);
	op_stkvar	(x,	0);
	create_insn	(x=0X2561C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25621);
	op_stkvar	(x,	0);
	create_insn	(x=0X25624);
	op_stkvar	(x,	0);
	create_insn	(x=0X2562B);
	op_stkvar	(x,	0);
	create_insn	(x=0X25635);
	op_stkvar	(x,	1);
	create_insn	(x=0X2563B);
	op_stkvar	(x,	0);
	create_insn	(0X25645);
	create_insn	(x=0X25649);
	op_stkvar	(x,	1);
	create_insn	(x=0X2564E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25654);
	op_hex		(x,	1);
	create_insn	(x=0X25658);
	op_hex		(x,	1);
	create_insn	(x=0X25660);
	op_stkvar	(x,	1);
	create_insn	(x=0X2566D);
	op_hex		(x,	1);
	create_insn	(x=0X25670);
	op_stkvar	(x,	1);
	create_insn	(x=0X25675);
	op_stkvar	(x,	1);
	create_insn	(x=0X2567F);
	op_hex		(x,	1);
	create_insn	(x=0X25682);
	op_stkvar	(x,	1);
	create_insn	(x=0X25685);
	op_hex		(x,	1);
	create_insn	(x=0X25687);
	op_hex		(x,	1);
	create_insn	(x=0X2568B);
	op_stkvar	(x,	0);
	create_insn	(x=0X25691);
	op_stkvar	(x,	1);
	create_insn	(x=0X25695);
	op_stkvar	(x,	0);
	create_insn	(x=0X2569B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2569F);
	op_stkvar	(x,	0);
	create_insn	(x=0X256A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X256AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X256B5);
	op_hex		(x,	1);
	create_insn	(x=0X256B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X256BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X256C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X256C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X256CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X256D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X256D9);
	op_hex		(x,	1);
	create_insn	(x=0X256DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X256DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X256EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X256F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X25700);
	op_stkvar	(x,	1);
	create_insn	(x=0X2570A);
	op_hex		(x,	1);
	create_insn	(x=0X2570D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25714);
	op_stkvar	(x,	1);
	create_insn	(x=0X25724);
	op_stkvar	(x,	0);
	create_insn	(x=0X2572E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X25734);
	op_stkvar	(x,	1);
	create_insn	(x=0X2573F);
	op_stkvar	(x,	1);
	create_insn	(x=0X25742);
	op_stkvar	(x,	1);
	create_insn	(x=0X25759);
	op_hex		(x,	1);
	create_insn	(x=0X25760);
	op_stkvar	(x,	0);
	create_insn	(x=0X25763);
	op_stkvar	(x,	0);
	create_insn	(x=0X2576C);
	op_hex		(x,	1);
	update_extra_cmt		(0X25776,	E_PREV + 0,	"looks like this loop tries to find the rectangular edges for the poly");
	create_insn	(0X25776);
	create_insn	(x=0X25780);
	op_stkvar	(x,	0);
	create_insn	(x=0X25784);
	op_stkvar	(x,	0);
	create_insn	(x=0X25788);
	op_stkvar	(x,	0);
	create_insn	(x=0X25790);
	op_stkvar	(x,	1);
	create_insn	(x=0X25794);
	op_stroff	(x,	1,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X25797);
	op_stkvar	(x,	0);
	create_insn	(x=0X2579B);
	op_stroff	(x,	1,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X2579F);
	op_stkvar	(x,	0);
	create_insn	(x=0X257A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X257AC);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X257B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X257B8);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X257BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X257C7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257CC);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X257D7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257DC);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X257E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X257EC);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257F1);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X257F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X257FC);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X25801,	E_PREV + 0,	"end of loop");
	create_insn	(x=0X2580F);
	op_stkvar	(x,	0);
	create_insn	(x=0X25814);
	op_stkvar	(x,	0);
	create_insn	(x=0X25819);
	op_stkvar	(x,	0);
	create_insn	(x=0X25822);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X2582B);
	create_insn	(x=0X2582F);
	op_hex		(x,	1);
	create_insn	(0X25839);
	create_insn	(x=0X2583E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2584F);
	op_stkvar	(x,	0);
	create_insn	(x=0X25854);
	op_stkvar	(x,	0);
	create_insn	(0X2585C);
	create_insn	(x=0X2586D);
	op_stkvar	(x,	1);
	create_insn	(x=0X25874);
	op_stkvar	(x,	1);
	create_insn	(x=0X25880);
	op_stkvar	(x,	0);
	create_insn	(x=0X2588B);
	op_stkvar	(x,	1);
	create_insn	(x=0X25894);
	op_hex		(x,	1);
	create_insn	(x=0X25898);
	op_hex		(x,	1);
	create_insn	(x=0X258A4);
	op_hex		(x,	1);
	create_insn	(x=0X258A8);
	op_hex		(x,	1);
	create_insn	(x=0X258B5);
	op_hex		(x,	1);
	create_insn	(x=0X258BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X258C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X258D0);
	op_hex		(x,	1);
	create_insn	(x=0X258D4);
	op_hex		(x,	1);
	create_insn	(x=0X258E0);
	op_hex		(x,	1);
	create_insn	(x=0X258E4);
	op_hex		(x,	1);
	create_insn	(x=0X258F1);
	op_hex		(x,	1);
	create_insn	(x=0X258F6);
	op_hex		(x,	1);
	create_insn	(x=0X258F8);
	op_hex		(x,	1);
	create_insn	(x=0X25900);
	op_stkvar	(x,	1);
	create_insn	(x=0X2590A);
	op_hex		(x,	1);
	create_insn	(x=0X25911);
	op_hex		(x,	1);
	create_insn	(x=0X25915);
	op_hex		(x,	1);
	create_insn	(x=0X25919);
	op_stkvar	(x,	1);
	create_insn	(x=0X25921);
	op_hex		(x,	1);
	create_insn	(x=0X25925);
	op_hex		(x,	1);
	create_insn	(x=0X25929);
	op_stkvar	(x,	1);
	create_insn	(x=0X2592E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25931);
	op_stkvar	(x,	0);
	create_insn	(x=0X2595E);
	op_hex		(x,	1);
	create_insn	(x=0X25971);
	op_hex		(x,	1);
	create_insn	(x=0X25980);
	op_hex		(x,	1);
	create_insn	(x=0X25988);
	op_stkvar	(x,	0);
	create_insn	(x=0X2598E);
	op_stkvar	(x,	0);
	create_insn	(0X25997);
	create_insn	(x=0X259FB);
	op_hex		(x,	1);
	set_cmt	(0X25A5A,	"primitives+3 = paintjob 1? [0..x]",	0);
	create_insn	(x=0X25A62);
	op_hex		(x,	1);
	create_insn	(x=0X25A66);
	op_hex		(x,	1);
	create_insn	(x=0X25A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A71);
	op_hex		(x,	1);
	create_insn	(x=0X25A73);
	op_hex		(x,	1);
	create_insn	(0X25A7C);
	set_cmt	(0X25A80,	"primitives+0 = primitivetype",	0);
	create_insn	(x=0X25A87);
	op_hex		(x,	1);
	create_insn	(x=0X25A8B);
	op_hex		(x,	1);
	create_insn	(x=0X25A8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A96);
	op_hex		(x,	1);
	create_insn	(x=0X25A98);
	op_hex		(x,	1);
	create_insn	(x=0X25A9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25AA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X25ABF);
	op_hex		(x,	1);
	create_insn	(x=0X25ADF);
	op_hex		(x,	1);
	create_insn	(x=0X25AEA);
	op_hex		(x,	1);
	create_insn	(0X25AF4);
	create_insn	(x=0X25AFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B12);
	op_stkvar	(x,	1);
	create_insn	(x=0X25B1B);
	op_hex		(x,	1);
	create_insn	(x=0X25B29);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B34);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25B45);
	op_hex		(x,	1);
	create_insn	(x=0X25B53);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X25B6F);
	op_hex		(x,	1);
	create_insn	(x=0X25B7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B88);
	op_stkvar	(x,	0);
	create_insn	(x=0X25B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X25B99);
	op_hex		(x,	1);
	create_insn	(x=0X25BA1);
	op_stkvar	(x,	0);
	create_insn	(0X25BAA);
	create_insn	(x=0X25BBD);
	op_hex		(x,	1);
	create_insn	(x=0X25BC1);
	op_hex		(x,	1);
	create_insn	(x=0X25BC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X25BCD);
	op_hex		(x,	1);
	create_insn	(x=0X25BD1);
	op_hex		(x,	1);
	create_insn	(x=0X25BD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X25BDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X25BDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X25BE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X25BE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X25BEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X25BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X25BF5);
	op_stkvar	(x,	1);
	create_insn	(0X25C01);
	create_insn	(x=0X25C16);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C31);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C46);
	op_stkvar	(x,	0);
	create_insn	(x=0X25C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C52);
	op_stkvar	(x,	0);
	create_insn	(x=0X25C56);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25C62);
	op_stkvar	(x,	0);
	create_insn	(x=0X25C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C70);
	op_hex		(x,	1);
	create_insn	(x=0X25C79);
	op_hex		(x,	1);
	create_insn	(x=0X25C7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X25C88);
	op_hex		(x,	1);
	create_insn	(0X25C92);
	create_insn	(x=0X25C99);
	op_stkvar	(x,	1);
	create_insn	(x=0X25C9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25CA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X25CA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X25CAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X25CB8);
	op_hex		(x,	1);
	create_insn	(x=0X25CBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X25CC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X25CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X25CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X25CD8);
	op_stkvar	(x,	1);
	create_insn	(0X25CE0);
	set_cmt	(0X25CE4,	"primitives+ 0 = type",	0);
	create_insn	(x=0X25CEB);
	op_stkvar	(x,	0);
	create_insn	(0X25CF4);
	create_insn	(x=0X25CF6);
	op_hex		(x,	1);
	create_insn	(x=0X25CFA);
	op_hex		(x,	1);
	create_insn	(x=0X25CFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X25D03);
	op_stkvar	(x,	0);
	create_insn	(x=0X25D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X25D1E);
	op_hex		(x,	1);
	create_insn	(x=0X25D31);
	op_hex		(x,	1);
	create_insn	(x=0X25D3C);
	op_stkvar	(x,	0);
	set_cmt	(0X25D47,	"polyinfo+3 = numverts",	0);
	create_insn	(x=0X25D4F);
	op_stkvar	(x,	1);
	set_cmt	(0X25D52,	"polyinfo+4 = primtype",	0);
	set_cmt	(0X25D56,	"if shape paintjob = 0x2d (back lights), use override",	0);
	create_insn	(0X25D66);
	set_cmt	(0X25D6D,	"polyinfo+2 = paintjob",	0);
	create_insn	(x=0X25D8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X25D91);
	op_stkvar	(x,	0);
	create_insn	(x=0X25D9C);
	op_stkvar	(x,	1);
	set_cmt	(0X25DA3,	"polyinfo+0 = ???",	0);
	create_insn	(x=0X25DA6);
	op_hex		(x,	1);
	create_insn	(x=0X25DAD);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X25DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DBE);
	op_hex		(x,	1);
	create_insn	(x=0X25DC0);
	op_hex		(x,	1);
	create_insn	(x=0X25DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DD2);
	op_hex		(x,	1);
	create_insn	(x=0X25DD4);
	op_hex		(x,	1);
	create_insn	(x=0X25DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X25DE6);
	op_hex		(x,	1);
	create_insn	(x=0X25DE8);
	op_hex		(x,	1);
	create_insn	(0X25DEE);
	create_insn	(x=0X25DF7);
	op_hex		(x,	1);
	create_insn	(0X25E04);
	create_insn	(x=0X25E11);
	op_stkvar	(x,	0);
	create_insn	(0X25E1B);
	create_insn	(0X25E24);
	set_name	(0X25E24,	"transformed_shape_op_helper");
	create_insn	(x=0X25E27);
	op_hex		(x,	1);
	create_insn	(x=0X25E2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X25E36);
	op_hex		(x,	1);
	create_insn	(x=0X25E38);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X25E3E);
	create_insn	(x=0X25E46);
	op_hex		(x,	1);
	create_insn	(x=0X25E48);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X25E52);
	create_insn	(x=0X25E5B);
	op_hex		(x,	1);
	create_insn	(x=0X25E5D);
	op_hex		(x,	1);
	create_insn	(x=0X25E5F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25E63);
	op_stkvar	(x,	1);
	create_insn	(x=0X25E71);
	op_hex		(x,	1);
	create_insn	(x=0X25E73);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25E7F);
	op_hex		(x,	1);
	create_insn	(x=0X25E81);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X25E89);
	op_hex		(x,	1);
	create_insn	(x=0X25E8E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X25EA4);
	op_hex		(x,	1);
	create_insn	(x=0X25EA6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X25EB6);
	op_hex		(x,	1);
	create_insn	(x=0X25EB8);
	op_hex		(x,	1);
	set_cmt	(0X25ED1,	"return 1 if error",	0);
	create_insn	(0X25EDA);
	create_insn	(0X25EE2);
	set_name	(0X25EE2,	"rect_compare_point");
	create_insn	(x=0X25EE5);
	op_hex		(x,	1);
	create_insn	(x=0X25EE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X25EEF);
	op_stroff	(x,	0,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X25EF4);
	op_stkvar	(x,	0);
	create_insn	(0X25EFA);
	create_insn	(x=0X25EFD);
	op_stroff	(x,	0,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X25F02);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F08);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F0F);
	op_stroff	(x,	0,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X25F13);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X25F1A);
	create_insn	(x=0X25F1D);
	op_stroff	(x,	0,	GetStrucIdByName("POINT2D"),	0);
	create_insn	(x=0X25F21);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X25F25);
	op_stkvar	(x,	1);
	create_insn	(0X25F2E);
	set_name	(0X25F2E,	"transformed_shape_op_helper3");
	create_insn	(x=0X25F31);
	op_hex		(x,	1);
	create_insn	(x=0X25F36);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F65);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F68);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F73);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F86);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F89);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F95);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F98);
	op_stkvar	(x,	0);
	create_insn	(x=0X25F9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X25F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X25FA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X25FAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X25FC4);
	op_stkvar	(x,	0);
	make_array	(0X25FE2,	0X2);
	create_insn	(0X25FE4);
	create_insn	(0X25FEE);
	create_insn	(0X25FF6);
	set_name	(0X25FF6,	"get_a_poly_info");
	create_insn	(x=0X25FF9);
	op_hex		(x,	1);
	create_insn	(x=0X26006);
	op_stkvar	(x,	1);
	create_insn	(x=0X2600E);
	op_stkvar	(x,	0);
	set_cmt	(0X26018,	"polyinfoptrdata = polyinfoptr+6",	0);
	create_insn	(x=0X26018);
	op_stkvar	(x,	0);
	create_insn	(x=0X2601B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2601E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26021);
	op_stkvar	(x,	0);
	create_insn	(x=0X26024);
	op_stkvar	(x,	0);
	create_insn	(x=0X2602C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26036);
	op_stkvar	(x,	1);
	create_insn	(x=0X2603E);
	op_stkvar	(x,	0);
	create_insn	(x=0X26042);
	op_stkvar	(x,	0);
	create_insn	(x=0X26046);
	op_stkvar	(x,	0);
	create_insn	(x=0X26049);
	op_stkvar	(x,	1);
	create_insn	(x=0X2604C);
	op_stkvar	(x,	0);
	create_insn	(x=0X26051);
	op_stkvar	(x,	1);
	create_insn	(x=0X26054);
	op_hex		(x,	1);
	set_cmt	(0X2605E,	"0 normal 1 grille 2? 3 invisible",	0);
	create_insn	(0X2606D);
	create_insn	(x=0X26070);
	op_stkvar	(x,	1);
	create_insn	(x=0X26074);
	op_stkvar	(x,	0);
	create_insn	(x=0X26077);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X2607A,	E_PREV + 0,	"NOP: Default case");
	update_extra_cmt		(0X2607A,	E_PREV + 1,	"missing (xD).");
	create_insn	(x=0X2607F);
	op_hex		(x,	1);
	create_insn	(x=0X26084);
	op_stkvar	(x,	1);
	create_insn	(x=0X26087);
	op_hex		(x,	1);
	create_insn	(x=0X2608F);
	op_stkvar	(x,	0);
	create_insn	(x=0X26096);
	op_stkvar	(x,	1);
	create_insn	(x=0X2609A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2609D);
	op_stkvar	(x,	0);
	create_insn	(x=0X260A0);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X260A3,	E_PREV + 0,	"NOP: Patterned surfaces");
	update_extra_cmt		(0X260A3,	E_PREV + 1,	"missing.");
	create_insn	(x=0X260A8);
	op_hex		(x,	1);
	set_cmt	(0X260B7,	"di = 400",	0);
	create_insn	(0X260B7);
	create_insn	(x=0X260B9);
	op_hex		(x,	1);
	create_insn	(x=0X260BB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X260C1);
	op_hex		(x,	1);
	create_insn	(x=0X260C3);
	op_hex		(x,	1);
	create_insn	(x=0X260C5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X260C9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X260CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X260D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X260D3);
	op_stkvar	(x,	1);
	set_cmt	(0X260D6,	"material type",	0);
	create_insn	(x=0X260DC);
	op_stkvar	(x,	0);
	set_cmt	(0X260DF,	"material index...",	0);
	create_insn	(x=0X260E1);
	op_hex		(x,	1);
	create_insn	(x=0X260E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X260EC);
	op_stkvar	(x,	1);
	set_cmt	(0X260EF,	"object type (solid, sphere, wheel, pixel)",	0);
	create_insn	(0X260FB);
	create_insn	(0X26108);
	create_insn	(0X26115);
	create_insn	(x=0X26118);
	op_stkvar	(x,	1);
	create_insn	(x=0X2611B);
	op_hex		(x,	1);
	create_insn	(x=0X2611D);
	op_stkvar	(x,	0);
	create_insn	(x=0X26120);
	op_stkvar	(x,	1);
	create_insn	(x=0X26124);
	op_stkvar	(x,	0);
	create_insn	(x=0X26127);
	op_stkvar	(x,	0);
	create_insn	(x=0X2612A);
	op_stkvar	(x,	1);
	create_insn	(x=0X26133);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X2613C,	E_PREV + 0,	"NOP: No visible effects.");
	create_insn	(x=0X26144);
	op_stkvar	(x,	0);
	create_insn	(x=0X26147);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X2615A,	E_PREV + 0,	"NOP: No visbile effects.");
	create_insn	(x=0X2615F);
	op_hex		(x,	1);
	create_insn	(x=0X26166);
	op_stkvar	(x,	0);
	create_insn	(x=0X2616B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2616E);
	op_hex		(x,	1);
	create_insn	(x=0X26170);
	op_hex		(x,	1);
	create_insn	(x=0X26172);
	op_stkvar	(x,	0);
	create_insn	(x=0X26177);
	op_stkvar	(x,	1);
	create_insn	(x=0X2617A);
	op_stkvar	(x,	1);
	create_insn	(x=0X26185);
	op_stkvar	(x,	1);
	create_insn	(x=0X26190);
	op_stkvar	(x,	0);
	create_insn	(x=0X26193);
	op_stkvar	(x,	0);
	set_cmt	(0X26197,	"b4 every car0 render",	0);
	set_cmt	(0X26199,	"material index",	0);
	create_insn	(x=0X26199);
	op_stkvar	(x,	1);
	create_insn	(x=0X2619C);
	op_hex		(x,	1);
	create_insn	(x=0X261A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X261AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X261B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X261B4);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X261B8,	E_PREV + 0,	"NOP: Wheels missing.");
	create_insn	(x=0X261C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X261C3);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X261D2,	E_PREV + 0,	"NOP: Spheres missing.");
	create_insn	(x=0X261DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X261DD);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X261E8,	E_PREV + 0,	"NOP: No visible effects.");
	update_extra_cmt		(0X261E8,	E_PREV + 1,	"(I'd guess 3D particles");
	update_extra_cmt		(0X261E8,	E_PREV + 2,	"are missing.)");
	create_insn	(0X261F0);
	update_extra_cmt		(0X261FA,	E_PREV + 0,	"");
	update_extra_cmt		(0X261FA,	E_PREV + 1,	"Combined rotation matrix for");
	update_extra_cmt		(0X261FA,	E_PREV + 2,	"angles around all axes.");
	create_insn	(0X261FA);
	set_name	(0X261FA,	"mat_rot_zxy");
	create_insn	(x=0X261FD);
	op_hex		(x,	1);
	update_extra_cmt		(0X26204,	E_PREV + 0,	"Skips if angle is multiple of 400h.");
	create_insn	(x=0X26204);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2620E);
	op_stkvar	(x,	0);
	create_insn	(x=0X26211);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2621C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26223);
	op_hex		(x,	1);
	create_insn	(x=0X26227);
	op_stkvar	(x,	0);
	create_insn	(x=0X2622A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26233);
	op_hex		(x,	1);
	create_insn	(x=0X26236);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2623D);
	op_hex		(x,	1);
	create_insn	(x=0X26241);
	op_stkvar	(x,	1);
	create_insn	(x=0X26244);
	op_hex		(x,	1);
	create_insn	(x=0X2624D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26252);
	op_stkvar	(x,	1);
	create_insn	(x=0X26255);
	op_hex		(x,	1);
	create_insn	(x=0X26267);
	op_stkvar	(x,	0);
	create_insn	(x=0X2626A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26273);
	op_hex		(x,	1);
	create_insn	(x=0X26276);
	op_stkvar	(x,	1);
	create_insn	(x=0X26279);
	op_hex		(x,	1);
	create_insn	(x=0X26282);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2628F);
	create_insn	(x=0X26292);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_insn	(x=0X26298);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2629E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262A4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262AA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X262B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262C1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262CA);
	op_hex		(x,	1);
	create_insn	(x=0X262CD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262D4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X262DA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262E9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262EE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X262F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X262FE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26302);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26308);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2630E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26312);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2631C);
	op_hex		(x,	1);
	create_insn	(x=0X2631F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26323);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26327);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26330);
	op_hex		(x,	1);
	create_insn	(x=0X26333);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26338);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2633C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26340);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26349);
	op_hex		(x,	1);
	create_insn	(x=0X2634C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26351);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2635A);
	op_hex		(x,	1);
	create_insn	(x=0X2635D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_word	(x=0X26362);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X26364);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X26366);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X26368);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X2636A);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X2636C);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X2636E);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_word	(x=0X26370);
	op_plain_offset	(x,	0,	0X24D60);
	op_plain_offset	(x,	128,	0X24D60);
	create_insn	(0X26372);
	create_insn	(0X2637A);
	set_name	(0X2637A,	"rect_adjust_from_point");
	create_insn	(x=0X2637D);
	op_hex		(x,	1);
	create_insn	(x=0X26382);
	op_stkvar	(x,	1);
	create_insn	(x=0X2638A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2638D);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26391);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26396);
	op_stkvar	(x,	0);
	create_insn	(x=0X26399);
	op_stkvar	(x,	1);
	create_insn	(x=0X2639C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X263A1);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X263A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X263A7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X263AC);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X263B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X263B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X263B8);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X263BD);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X263C6);
	set_name	(0X263C6,	"vector_op_unk2");
	create_insn	(x=0X263C9);
	op_hex		(x,	1);
	create_insn	(x=0X263CE);
	op_stkvar	(x,	1);
	set_cmt	(0X263D1,	"int",	0);
	create_insn	(x=0X263D1);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X263D9);
	op_hex		(x,	1);
	create_insn	(x=0X263DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X263E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X263E3);
	op_stkvar	(x,	1);
	set_cmt	(0X263E6,	"int",	0);
	create_insn	(x=0X263E6);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X263EE);
	op_hex		(x,	1);
	create_insn	(x=0X263F2);
	op_stkvar	(x,	1);
	set_cmt	(0X263F5,	"int",	0);
	create_insn	(x=0X263F5);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X263FC);
	op_hex		(x,	1);
	create_insn	(x=0X26405);
	op_hex		(x,	1);
	create_insn	(x=0X26408);
	op_stkvar	(x,	0);
	create_insn	(x=0X2640B);
	op_stkvar	(x,	0);
	create_insn	(x=0X26423);
	op_stkvar	(x,	1);
	create_insn	(x=0X26426);
	op_stkvar	(x,	1);
	create_insn	(x=0X26429);
	op_stkvar	(x,	0);
	create_insn	(x=0X26430);
	op_stkvar	(x,	0);
	create_insn	(0X2643A);
	create_insn	(x=0X26442);
	op_stkvar	(x,	0);
	create_insn	(x=0X26445);
	op_stkvar	(x,	0);
	create_insn	(x=0X26455);
	op_stkvar	(x,	0);
	create_insn	(x=0X26458);
	op_stkvar	(x,	0);
	create_insn	(x=0X26470);
	op_stkvar	(x,	0);
	create_insn	(x=0X26473);
	op_stkvar	(x,	1);
	create_insn	(x=0X26476);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X2648A);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X26490);
	op_stkvar	(x,	0);
	create_insn	(x=0X264A0);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X264A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X264AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X264B0);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X264B5);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X264BD);
	op_hex		(x,	1);
	create_insn	(x=0X264C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X264C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X264CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X264D5);
	op_hex		(x,	1);
	create_insn	(x=0X264D7);
	op_hex		(x,	1);
	create_insn	(x=0X264D9);
	op_hex		(x,	1);
	create_insn	(x=0X264DB);
	op_hex		(x,	1);
	create_insn	(x=0X264DD);
	op_hex		(x,	1);
	create_insn	(x=0X264DF);
	op_hex		(x,	1);
	create_insn	(x=0X264E1);
	op_hex		(x,	1);
	create_insn	(x=0X264E3);
	op_hex		(x,	1);
	create_insn	(x=0X264EB);
	op_hex		(x,	1);
	create_insn	(x=0X264ED);
	op_hex		(x,	1);
	create_insn	(x=0X264F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X264F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X26500);
	op_hex		(x,	1);
	set_name	(0X26500,	"calc_sincos80");
	create_insn	(x=0X26509);
	op_hex		(x,	1);
	create_insn	(x=0X26514);
	op_hex		(x,	1);
	create_insn	(x=0X2651D);
	op_hex		(x,	1);
	create_insn	(x=0X26528);
	op_hex		(x,	1);
	create_insn	(x=0X26531);
	op_hex		(x,	1);
	create_insn	(x=0X2653C);
	op_hex		(x,	1);
	create_insn	(x=0X26545);
	op_hex		(x,	1);
	create_insn	(0X26552);
	set_name	(0X26552,	"nopsub_26552");
	create_insn	(x=0X26555);
	op_stkvar	(x,	0);
	create_insn	(x=0X2655B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2655E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2656A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2656D);
	op_stkvar	(x,	1);
	create_insn	(0X26572);
	set_name	(0X26572,	"rect_union");
	create_insn	(x=0X26576);
	op_stkvar	(x,	1);
	create_insn	(x=0X26579);
	op_stkvar	(x,	1);
	create_insn	(x=0X2657C);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2657E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26581);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26585);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26587);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26589);
	op_stkvar	(x,	1);
	create_insn	(x=0X2658C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2658F);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26592);
	op_stkvar	(x,	1);
	create_insn	(x=0X26595);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2659A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2659D);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X265A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X265A6);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	create_insn	(x=0X265A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X265AC);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265B1);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265B4);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X265BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X265BD);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X265C3);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265C8);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265CB);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X265DA);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265E6);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X265EC);
	set_name	(0X265EC,	"rect_intersect");
	create_insn	(x=0X265F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X265F5);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X265F7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26602);
	op_stkvar	(x,	1);
	create_insn	(x=0X26605);
	op_stkvar	(x,	1);
	create_insn	(x=0X26608);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2660A);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26611);
	op_stkvar	(x,	1);
	create_insn	(x=0X26614);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26616);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2661B);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2661E);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26623);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26626);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2662D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2662F);
	op_stkvar	(x,	1);
	create_insn	(x=0X26632);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26636);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26638);
	op_stkvar	(x,	1);
	create_insn	(x=0X2663B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2663E);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26641);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26646);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26649);
	op_stkvar	(x,	1);
	create_insn	(x=0X2664C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2664F);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26652);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26657);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2665A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2665D);
	op_stkvar	(x,	1);
	create_insn	(x=0X26660);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26663);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26668);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X26670);
	set_name	(0X26670,	"rectlist_add_rect");
	create_insn	(x=0X26673);
	op_hex		(x,	1);
	create_insn	(x=0X2667F);
	op_stkvar	(x,	1);
	create_insn	(x=0X26684);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26690);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26693);
	op_stkvar	(x,	0);
	create_insn	(0X2669A);
	create_insn	(x=0X266A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X266A5);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X266B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X266B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X266B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X266C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X266C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X266CC);
	op_stkvar	(x,	1);
	create_insn	(0X266D6);
	create_insn	(x=0X266DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X266DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X266E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X266E9);
	op_hex		(x,	1);
	create_insn	(x=0X266F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X266F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X266FA);
	op_hex		(x,	1);
	create_insn	(x=0X26704);
	op_stkvar	(x,	0);
	create_insn	(x=0X26707);
	op_stkvar	(x,	0);
	create_insn	(x=0X2670E);
	op_hex		(x,	1);
	create_insn	(x=0X26715);
	op_stkvar	(x,	1);
	create_insn	(x=0X26718);
	op_stkvar	(x,	0);
	create_insn	(x=0X2671E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26721);
	op_stkvar	(x,	1);
	create_insn	(x=0X2672E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26731);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26734);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2673B);
	op_stkvar	(x,	1);
	create_insn	(x=0X26744);
	op_stkvar	(x,	1);
	create_insn	(x=0X26747);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2674A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2674D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26750);
	op_stkvar	(x,	0);
	create_insn	(x=0X26753);
	op_stkvar	(x,	0);
	create_insn	(x=0X2675A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2675D);
	op_stkvar	(x,	1);
	create_insn	(x=0X26760);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26763);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2676A);
	op_stkvar	(x,	1);
	create_insn	(x=0X26775);
	op_stkvar	(x,	1);
	create_insn	(x=0X26778);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2677B);
	op_stkvar	(x,	0);
	create_insn	(x=0X26780);
	op_stkvar	(x,	0);
	create_insn	(x=0X26784);
	op_stkvar	(x,	1);
	create_insn	(x=0X26787);
	op_stkvar	(x,	1);
	create_insn	(x=0X2678A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2678D);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26794);
	op_stkvar	(x,	1);
	create_insn	(x=0X2679F);
	op_stkvar	(x,	1);
	create_insn	(x=0X267A2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X267A8);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X267AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X267B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X267B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X267BA);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267BD);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X267CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X267D2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X267DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X267DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X267E1);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X267E6);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267EA);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X267EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X267F2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X267F8);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X267FD);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26800);
	op_stkvar	(x,	0);
	create_insn	(x=0X26803);
	op_stkvar	(x,	1);
	create_insn	(x=0X26806);
	op_stkvar	(x,	0);
	create_insn	(0X2680C);
	create_insn	(x=0X26812);
	op_stkvar	(x,	1);
	create_insn	(x=0X26817);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26822);
	op_stkvar	(x,	0);
	create_insn	(x=0X26825);
	op_stkvar	(x,	1);
	create_insn	(x=0X2682B);
	op_stkvar	(x,	1);
	create_insn	(x=0X26838);
	op_stkvar	(x,	0);
	create_insn	(x=0X2683E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26842);
	op_stkvar	(x,	0);
	create_insn	(x=0X26845);
	op_stkvar	(x,	0);
	create_insn	(x=0X2684C);
	op_hex		(x,	1);
	create_insn	(x=0X2684F);
	op_stkvar	(x,	1);
	create_insn	(x=0X26853);
	op_stkvar	(x,	0);
	create_insn	(x=0X26856);
	op_stkvar	(x,	0);
	create_insn	(x=0X2685D);
	op_hex		(x,	1);
	create_insn	(x=0X26860);
	op_stkvar	(x,	0);
	create_insn	(x=0X26869);
	op_stkvar	(x,	1);
	create_insn	(x=0X2686D);
	op_stkvar	(x,	0);
	create_insn	(x=0X26870);
	op_stkvar	(x,	0);
	create_insn	(x=0X26877);
	op_hex		(x,	1);
	create_insn	(x=0X26880);
	op_stkvar	(x,	0);
	create_insn	(0X26886);
	create_insn	(x=0X2688C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26891);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2689C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2689F);
	op_stkvar	(x,	1);
	create_insn	(x=0X268A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X268B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X268B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X268BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X268BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X268CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X268CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X268D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X268D8);
	op_hex		(x,	1);
	create_insn	(x=0X268DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X268E2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X268E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X268E7);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X268EB);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X268ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X268F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X268F3);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X268F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X268F9);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X268FE);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26901);
	op_stkvar	(x,	0);
	create_insn	(x=0X26904);
	op_stkvar	(x,	1);
	create_insn	(x=0X26907);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2690A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2690D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26912);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26915);
	op_stkvar	(x,	0);
	create_insn	(x=0X26918);
	op_stkvar	(x,	1);
	create_insn	(x=0X2691B);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2691E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26921);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26926);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26929);
	op_stkvar	(x,	0);
	create_insn	(x=0X2692C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2692F);
	op_stkvar	(x,	0);
	create_insn	(x=0X26936);
	op_stkvar	(x,	1);
	create_insn	(x=0X26942);
	op_stkvar	(x,	1);
	create_insn	(x=0X26945);
	op_stkvar	(x,	1);
	create_insn	(x=0X26952);
	op_stkvar	(x,	1);
	create_insn	(0X2695E);
	set_name	(0X2695E,	"rect_is_overlapping");
	create_insn	(x=0X26962);
	op_stkvar	(x,	1);
	create_insn	(x=0X26965);
	op_stkvar	(x,	1);
	create_insn	(x=0X26968);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2696A);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26974);
	op_stkvar	(x,	1);
	create_insn	(x=0X26977);
	op_stkvar	(x,	1);
	create_insn	(x=0X2697A);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2697C);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26983);
	op_stkvar	(x,	1);
	create_insn	(x=0X26986);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26989);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X2698E);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26991);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X2699C);
	set_name	(0X2699C,	"rect_is_inside");
	create_insn	(x=0X269A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X269A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X269A6);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269A9);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269AE);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269B0);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269B4);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269B7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269BC);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269BF);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(0X269CA);
	create_insn	(0X269D0);
	set_name	(0X269D0,	"rect_is_adjacent");
	create_insn	(x=0X269D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X269D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X269DA);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269DD);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269E2);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269E4);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X269F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X269F4);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X269F7);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A02);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A05);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A08);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A0B);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A10);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A12);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A16);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A19);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A23);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A26);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A28);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A2D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A30);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A35);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A38);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A41);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A44);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A46);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A4D);
	op_stkvar	(x,	1);
	create_insn	(0X26A52);
	set_name	(0X26A52,	"rectlist_add_rects");
	create_insn	(x=0X26A55);
	op_hex		(x,	1);
	create_insn	(x=0X26A5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A63);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A66);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A6C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26A72);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A77);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A79);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26A82);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A86);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X26A9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X26A9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AA5);
	op_hex		(x,	1);
	create_insn	(x=0X26AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X26ABA);
	op_hex		(x,	1);
	create_insn	(x=0X26ABD);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X26ACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AD6);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AEA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X26AFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X26AFE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26B07);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B0C);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26B0E);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26B16);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X26B1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B24);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26B26);
	op_stroff	(x,	0,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B33);
	op_stkvar	(x,	0);
	create_insn	(x=0X26B3A);
	op_hex		(x,	1);
	create_insn	(x=0X26B3D);
	op_stkvar	(x,	1);
	create_insn	(0X26B44);
	create_insn	(0X26B4A);
	set_name	(0X26B4A,	"rect_array_sort_by_top");
	create_insn	(x=0X26B4D);
	op_hex		(x,	1);
	create_insn	(x=0X26B53);
	op_stkvar	(x,	0);
	create_insn	(0X26B5E);
	create_insn	(x=0X26B60);
	op_hex		(x,	1);
	create_insn	(x=0X26B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B6D);
	op_stroff	(x,	1,	GetStrucIdByName("RECTANGLE"),	0);
	create_insn	(x=0X26B72);
	op_stkvar	(x,	0);
	create_insn	(x=0X26B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B84);
	op_stkvar	(x,	0);
	create_insn	(x=0X26B87);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26B96);
	op_hex		(x,	1);
	create_insn	(x=0X26BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X26BAE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_name	(0X26BAE,	"audio_add_driver_timer");
	create_insn	(0X26BB3);
	create_insn	(x=0X26BC5);
	op_plain_offset	(x,	1,	0X26BA0);
	op_plain_offset	(x,	129,	0X26BA0);
	create_insn	(x=0X26BC8);
	op_seg		(x,	1);
	create_insn	(0X26BD5);
	set_name	(0X26BD5,	"audio_remove_driver_timer");
	create_insn	(x=0X26BD6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26BDB);
	create_insn	(x=0X26BF5);
	op_plain_offset	(x,	1,	0X26BA0);
	op_plain_offset	(x,	129,	0X26BA0);
	create_insn	(x=0X26BF8);
	op_seg		(x,	1);
	create_insn	(0X26C06);
	set_name	(0X26C06,	"pad_id");
	create_insn	(x=0X26C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X26C22);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X26C29);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X26C34);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26C3C);
	set_name	(0X26C3C,	"audio_init_engine");
	create_insn	(x=0X26C3F);
	op_hex		(x,	1);
	create_insn	(x=0X26C49);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26C4E);
	set_cmt	(0X26C5D,	"end of audiotimer",	0);
	create_insn	(x=0X26C5D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26C6A);
	create_insn	(x=0X26C71);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26C74);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X26C83);
	op_stkvar	(x,	1);
	create_insn	(x=0X26C86);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C89);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C94);
	op_stkvar	(x,	0);
	create_insn	(x=0X26C99);
	op_stkvar	(x,	1);
	create_insn	(x=0X26C9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X26CAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X26CBE);
	op_stkvar	(x,	1);
	create_insn	(0X26CCB);
	create_insn	(x=0X26CDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X26CE7);
	op_hex		(x,	1);
	create_insn	(x=0X26D03);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D09);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D14);
	op_hex		(x,	1);
	create_insn	(x=0X26D30);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D33);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D36);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D39);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D41);
	op_hex		(x,	1);
	create_insn	(x=0X26D5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D60);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D63);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D66);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D6E);
	op_hex		(x,	1);
	create_insn	(x=0X26D8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D90);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D93);
	op_stkvar	(x,	0);
	create_insn	(x=0X26D9B);
	op_hex		(x,	1);
	create_insn	(x=0X26DB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DC8);
	op_hex		(x,	1);
	create_insn	(x=0X26DE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DED);
	op_stkvar	(x,	0);
	create_insn	(x=0X26DF5);
	op_hex		(x,	1);
	create_insn	(x=0X26E11);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E14);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E17);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E22);
	op_hex		(x,	1);
	create_insn	(x=0X26E3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E41);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E44);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E47);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E4F);
	op_hex		(x,	1);
	create_insn	(x=0X26E61);
	op_stkvar	(x,	1);
	create_insn	(x=0X26E8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X26E9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X26E9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X26ECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X26EDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X26EE4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26EED);
	create_insn	(0X26EF4);
	set_name	(0X26EF4,	"audio_op_unk");
	create_insn	(x=0X26EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X26F01);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X26F23);
	op_hex		(x,	1);
	create_insn	(0X26F6D);
	set_name	(0X26F6D,	"audio_function2");
	create_insn	(x=0X26F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X26F79);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26FA3);
	set_name	(0X26FA3,	"audio_driver_timer");
	create_insn	(x=0X26FA6);
	op_hex		(x,	1);
	create_insn	(0X26FB7);
	create_insn	(x=0X26FCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X26FD1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X26FDC);
	create_insn	(0X26FE6);
	create_insn	(x=0X26FF4);
	op_hex		(x,	1);
	create_insn	(x=0X26FF8);
	op_hex		(x,	1);
	create_insn	(x=0X27009);
	op_stkvar	(x,	0);
	create_insn	(x=0X27017);
	op_stkvar	(x,	1);
	create_insn	(x=0X27027);
	op_hex		(x,	1);
	create_insn	(x=0X27042);
	op_hex		(x,	1);
	create_insn	(x=0X27054);
	op_hex		(x,	1);
	create_insn	(x=0X27057);
	op_stkvar	(x,	1);
	create_insn	(x=0X27067);
	op_hex		(x,	1);
	create_insn	(x=0X27069);
	op_hex		(x,	1);
	create_insn	(x=0X2706F);
	op_hex		(x,	1);
	create_insn	(x=0X27071);
	op_hex		(x,	1);
	create_insn	(x=0X2707C);
	op_hex		(x,	1);
	create_insn	(x=0X2707E);
	op_hex		(x,	1);
	create_insn	(x=0X27080);
	op_hex		(x,	1);
	create_insn	(x=0X27082);
	op_hex		(x,	1);
	create_insn	(x=0X27084);
	op_hex		(x,	1);
	create_insn	(x=0X27086);
	op_hex		(x,	1);
	create_insn	(x=0X27088);
	op_hex		(x,	1);
	create_insn	(x=0X2708A);
	op_hex		(x,	1);
	create_insn	(x=0X27090);
	op_hex		(x,	1);
	create_insn	(x=0X27092);
	op_hex		(x,	1);
	create_insn	(x=0X27094);
	op_hex		(x,	1);
	create_insn	(x=0X27096);
	op_hex		(x,	1);
	create_insn	(x=0X27098);
	op_hex		(x,	1);
	create_insn	(x=0X2709A);
	op_hex		(x,	1);
	create_insn	(x=0X270A2);
	op_hex		(x,	1);
	create_insn	(x=0X270A4);
	op_hex		(x,	1);
	create_insn	(x=0X270A6);
	op_hex		(x,	1);
	create_insn	(x=0X270A8);
	op_hex		(x,	1);
	create_insn	(x=0X270AA);
	op_hex		(x,	1);
	create_insn	(x=0X270AC);
	op_hex		(x,	1);
	create_insn	(x=0X270AE);
	op_hex		(x,	1);
	create_insn	(x=0X270B0);
	op_hex		(x,	1);
	create_insn	(x=0X270CE);
	op_hex		(x,	1);
	create_insn	(0X270EE);
	create_insn	(x=0X270F6);
	op_hex		(x,	1);
	create_insn	(x=0X270FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X27104);
	op_hex		(x,	1);
	create_insn	(x=0X2710E);
	op_stkvar	(x,	0);
	create_insn	(x=0X27111);
	op_stkvar	(x,	0);
	create_insn	(0X2711A);
	create_insn	(0X2712E);
	set_name	(0X2712E,	"audio_op_unk2");
	create_insn	(x=0X27131);
	op_hex		(x,	1);
	create_insn	(x=0X27137);
	op_stkvar	(x,	1);
	create_insn	(x=0X2713A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2713D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27140);
	op_stkvar	(x,	0);
	create_insn	(x=0X27143);
	op_stkvar	(x,	0);
	create_insn	(x=0X27146);
	op_stkvar	(x,	0);
	create_insn	(x=0X2714E);
	op_hex		(x,	1);
	create_insn	(x=0X27157);
	op_hex		(x,	1);
	create_insn	(x=0X2715A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27162);
	op_stkvar	(x,	0);
	create_insn	(x=0X27167);
	op_stkvar	(x,	1);
	create_insn	(x=0X27172);
	op_stkvar	(x,	0);
	create_insn	(x=0X27175);
	op_stkvar	(x,	0);
	create_insn	(x=0X27178);
	op_stkvar	(x,	0);
	create_insn	(x=0X27180);
	op_hex		(x,	1);
	create_insn	(x=0X27189);
	op_hex		(x,	1);
	create_insn	(x=0X2718C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2718F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27192);
	op_stkvar	(x,	0);
	create_insn	(x=0X2719A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2719D);
	op_stkvar	(x,	1);
	create_insn	(x=0X271A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X271A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X271B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X271B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X271BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X271C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X271C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X271C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X271CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X271D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X271EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X271F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X271F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X27201);
	op_stkvar	(x,	1);
	create_insn	(x=0X27204);
	op_stkvar	(x,	1);
	create_insn	(x=0X27207);
	op_stkvar	(x,	0);
	create_insn	(x=0X2720A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2720D);
	op_stkvar	(x,	1);
	create_insn	(x=0X27213);
	op_stkvar	(x,	1);
	create_insn	(x=0X27216);
	op_stkvar	(x,	1);
	create_insn	(0X27220);
	set_name	(0X27220,	"nopsub_27220");
	create_insn	(x=0X27227);
	op_stkvar	(x,	1);
	create_insn	(x=0X2724D);
	op_hex		(x,	1);
	create_insn	(0X2726C);
	set_name	(0X2726C,	"nopsub_2726C");
	create_insn	(x=0X27273);
	op_stkvar	(x,	1);
	create_insn	(x=0X27299);
	op_hex		(x,	1);
	create_insn	(x=0X272A3);
	op_stkvar	(x,	0);
	create_insn	(0X272B0);
	set_name	(0X272B0,	"nopsub_272B0");
	create_insn	(x=0X272B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X272DD);
	op_hex		(x,	1);
	create_insn	(x=0X272E7);
	op_stkvar	(x,	0);
	create_insn	(0X272F4);
	set_name	(0X272F4,	"audio_function2_wrap");
	create_insn	(x=0X272FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X27300);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27321);
	op_hex		(x,	1);
	create_insn	(x=0X2732B);
	op_stkvar	(x,	0);
	create_insn	(0X27338);
	set_name	(0X27338,	"audio_op_unk3");
	create_insn	(x=0X2733F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27344);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27365);
	op_hex		(x,	1);
	create_insn	(0X27374);
	set_name	(0X27374,	"audio_op_unk4");
	create_insn	(x=0X2737B);
	op_stkvar	(x,	1);
	create_insn	(x=0X27380);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X273A1);
	op_hex		(x,	1);
	create_insn	(0X273B0);
	set_name	(0X273B0,	"audio_op_unk5");
	create_insn	(x=0X273B3);
	op_hex		(x,	1);
	create_insn	(x=0X273BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X273C0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X273C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X273EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X273FB);
	op_hex		(x,	1);
	create_insn	(0X2740B);
	set_name	(0X2740B,	"audio_op_unk6");
	create_insn	(x=0X2740E);
	op_hex		(x,	1);
	create_insn	(x=0X27416);
	op_stkvar	(x,	1);
	create_insn	(x=0X2741B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27424);
	op_stkvar	(x,	0);
	create_insn	(x=0X27446);
	op_stkvar	(x,	1);
	create_insn	(x=0X27456);
	op_hex		(x,	1);
	create_insn	(0X27466);
	set_name	(0X27466,	"audio_op_unk7");
	create_insn	(x=0X2746D);
	op_stkvar	(x,	1);
	create_insn	(x=0X27472);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2747E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X27489);
	set_name	(0X27489,	"nopsub_27489");
	create_insn	(x=0X27490);
	op_stkvar	(x,	1);
	create_insn	(0X274A7);
	create_insn	(0X274B0);
	create_insn	(x=0X274B3);
	op_hex		(x,	1);
	create_insn	(x=0X274C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X274C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X274CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X274CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X274E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X274E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X274F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X274F8);
	op_stkvar	(x,	1);
	create_insn	(0X27506);
	create_insn	(x=0X2750E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27511);
	op_stkvar	(x,	1);
	create_insn	(x=0X27515);
	op_stkvar	(x,	1);
	create_insn	(x=0X27518);
	op_stkvar	(x,	1);
	create_insn	(x=0X27521);
	op_hex		(x,	1);
	create_insn	(x=0X2752A);
	op_hex		(x,	1);
	create_insn	(x=0X2752C);
	op_hex		(x,	1);
	create_insn	(x=0X2752E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X27532);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2753D);
	op_hex		(x,	1);
	create_insn	(x=0X2753F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27542);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X27546);
	op_stkvar	(x,	1);
	create_insn	(x=0X27549);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2754D);
	op_stkvar	(x,	1);
	create_insn	(x=0X27556);
	op_hex		(x,	1);
	create_insn	(x=0X27568);
	op_stkvar	(x,	1);
	create_insn	(x=0X27576);
	op_hex		(x,	1);
	create_insn	(x=0X27587);
	op_stkvar	(x,	1);
	create_insn	(x=0X27595);
	op_stkvar	(x,	0);
	create_insn	(x=0X27598);
	op_stkvar	(x,	0);
	create_insn	(x=0X275A1);
	op_hex		(x,	1);
	create_insn	(x=0X275A3);
	op_hex		(x,	1);
	create_insn	(x=0X275A5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X275B5);
	op_hex		(x,	1);
	create_insn	(0X275C6);
	create_insn	(x=0X275C9);
	op_hex		(x,	1);
	create_insn	(0X275D8);
	create_insn	(x=0X275E9);
	op_hex		(x,	1);
	create_insn	(x=0X275EB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X275EF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X275F5);
	op_hex		(x,	1);
	create_insn	(x=0X275F7);
	op_hex		(x,	1);
	create_insn	(x=0X275F9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27609);
	op_hex		(x,	1);
	create_insn	(x=0X2761C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27633);
	op_hex		(x,	1);
	create_insn	(x=0X27646);
	op_stkvar	(x,	1);
	create_insn	(x=0X27656);
	op_stkvar	(x,	1);
	create_insn	(x=0X2765F);
	op_hex		(x,	1);
	create_insn	(x=0X27668);
	op_hex		(x,	1);
	create_insn	(x=0X2766A);
	op_hex		(x,	1);
	create_insn	(x=0X2766C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X27670);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X27679);
	op_hex		(x,	1);
	create_insn	(0X27686);
	set_name	(0X27686,	"show_dialog");
	create_insn	(x=0X27689);
	op_hex		(x,	1);
	create_insn	(x=0X27695);
	op_stkvar	(x,	0);
	create_insn	(x=0X27699);
	op_stkvar	(x,	0);
	create_insn	(x=0X2769F);
	op_stkvar	(x,	0);
	create_insn	(x=0X276A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X276AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X276AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X276B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X276B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X276C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X276C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X276CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X276CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X276D8);
	op_hex		(x,	1);
	create_insn	(x=0X276DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X276DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X276E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X276E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X276ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X276F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X276F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X276FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X27702);
	op_stkvar	(x,	1);
	create_insn	(x=0X2770C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27710);
	op_stkvar	(x,	0);
	create_insn	(x=0X27714);
	op_stkvar	(x,	1);
	create_insn	(x=0X2771D);
	op_hex		(x,	1);
	create_insn	(x=0X27720);
	op_stkvar	(x,	0);
	create_insn	(x=0X27724);
	op_stkvar	(x,	1);
	create_insn	(x=0X27728);
	op_stkvar	(x,	0);
	create_insn	(x=0X2772E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27732);
	op_stkvar	(x,	0);
	create_insn	(x=0X27736);
	op_stkvar	(x,	0);
	create_insn	(x=0X2773C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27744);
	op_stkvar	(x,	1);
	create_insn	(x=0X2774B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2774F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27753);
	op_stkvar	(x,	0);
	create_insn	(x=0X27756);
	op_stkvar	(x,	0);
	create_insn	(x=0X2775A);
	op_stkvar	(x,	1);
	create_insn	(x=0X27761);
	op_stkvar	(x,	0);
	create_insn	(x=0X2776C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27773);
	op_hex		(x,	1);
	create_insn	(x=0X27775);
	op_stkvar	(x,	0);
	create_insn	(x=0X27779);
	op_stkvar	(x,	0);
	create_insn	(x=0X27782);
	op_stkvar	(x,	1);
	create_insn	(x=0X27789);
	op_hex		(x,	1);
	create_insn	(x=0X2778B);
	op_hex		(x,	1);
	create_insn	(x=0X2778D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27790);
	op_stkvar	(x,	0);
	create_insn	(x=0X27799);
	op_stkvar	(x,	1);
	create_insn	(x=0X277A0);
	op_hex		(x,	1);
	create_insn	(x=0X277A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X277A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X277A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X277AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X277AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X277B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X277B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X277BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X277BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X277C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X277C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X277CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X277D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X277D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X277DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X277DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X277E5);
	op_hex		(x,	1);
	create_insn	(0X277F6);
	create_insn	(x=0X277FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X277FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X27801);
	op_stkvar	(x,	0);
	create_insn	(x=0X27804);
	op_stkvar	(x,	0);
	create_insn	(x=0X2780C);
	op_hex		(x,	1);
	create_insn	(x=0X27817);
	op_hex		(x,	1);
	create_insn	(x=0X2781A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2781D);
	op_stkvar	(x,	1);
	create_insn	(x=0X27820);
	op_stkvar	(x,	1);
	create_insn	(x=0X27828);
	op_stkvar	(x,	1);
	create_insn	(x=0X2782B);
	op_stkvar	(x,	1);
	create_insn	(x=0X27833);
	op_stkvar	(x,	1);
	create_insn	(x=0X2783A);
	op_stkvar	(x,	1);
	create_insn	(x=0X27846);
	op_hex		(x,	1);
	create_insn	(x=0X27855);
	op_hex		(x,	1);
	create_insn	(x=0X2786A);
	op_hex		(x,	1);
	create_insn	(x=0X2786D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27873);
	op_stkvar	(x,	0);
	create_insn	(x=0X27878);
	op_stkvar	(x,	1);
	create_insn	(x=0X2787B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2787E);
	op_stkvar	(x,	0);
	create_insn	(x=0X27882);
	op_stkvar	(x,	0);
	create_insn	(x=0X27886);
	op_stkvar	(x,	0);
	create_insn	(x=0X27890);
	op_stkvar	(x,	0);
	create_insn	(x=0X2789A);
	op_stkvar	(x,	0);
	create_insn	(x=0X278A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X278A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X278A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X278AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X278B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X278B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X278BD);
	op_hex		(x,	1);
	create_insn	(x=0X278C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X278C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X278CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X278CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X278D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X278D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X278DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X278E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X278EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X278F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X278F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X278F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X278FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X278FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X27908);
	op_hex		(x,	1);
	create_insn	(x=0X2790B);
	op_stkvar	(x,	0);
	create_insn	(x=0X27911);
	op_stkvar	(x,	0);
	create_insn	(x=0X27918);
	op_stkvar	(x,	1);
	create_insn	(x=0X27922);
	op_stkvar	(x,	0);
	create_insn	(x=0X27928);
	op_stkvar	(x,	1);
	create_insn	(x=0X2792C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27930);
	op_stkvar	(x,	1);
	create_insn	(x=0X27939);
	op_hex		(x,	1);
	create_insn	(x=0X2793C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27941);
	op_stkvar	(x,	1);
	create_insn	(x=0X27948);
	op_hex		(x,	1);
	create_insn	(x=0X2794A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2794F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27956);
	op_hex		(x,	1);
	create_insn	(x=0X27958);
	op_stkvar	(x,	1);
	create_insn	(x=0X2795B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2795E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27965);
	op_stkvar	(x,	0);
	create_insn	(x=0X2796A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2796E);
	op_stkvar	(x,	0);
	create_insn	(x=0X27972);
	op_stkvar	(x,	0);
	create_insn	(x=0X27978);
	op_stkvar	(x,	1);
	create_insn	(x=0X2797F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27983);
	op_stkvar	(x,	0);
	create_insn	(x=0X27987);
	op_stkvar	(x,	0);
	create_insn	(x=0X2798A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2798E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27995);
	op_stkvar	(x,	0);
	create_insn	(x=0X279A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X279A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X279AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X279B5);
	op_hex		(x,	1);
	create_insn	(x=0X279B7);
	op_hex		(x,	1);
	create_insn	(x=0X279BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X279BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X279CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X279D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X279DE);
	op_hex		(x,	1);
	create_insn	(x=0X279E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X279E6);
	op_hex		(x,	1);
	create_insn	(x=0X279ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X279F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X279F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X279FB);
	op_hex		(x,	1);
	create_insn	(x=0X27A03);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A16);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A20);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A34);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A43);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A4C);
	op_hex		(x,	1);
	create_insn	(x=0X27A4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A53);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A59);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A72);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A76);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A7F);
	op_hex		(x,	1);
	create_insn	(x=0X27A82);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A86);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X27A9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X27AB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X27AC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X27ACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X27ACF);
	op_stkvar	(x,	1);
	create_insn	(x=0X27AD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X27ADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X27AE7);
	op_hex		(x,	1);
	create_insn	(x=0X27AEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X27AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X27AF5);
	op_hex		(x,	1);
	create_insn	(x=0X27AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B04);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B15);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B27);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B38);
	op_hex		(x,	1);
	create_insn	(x=0X27B3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B47);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X27B85);
	op_hex		(x,	1);
	create_insn	(x=0X27B88);
	op_stkvar	(x,	0);
	create_insn	(x=0X27B92);
	op_stkvar	(x,	1);
	create_insn	(0X27B98);
	create_insn	(x=0X27BA1);
	op_hex		(x,	1);
	create_insn	(x=0X27BA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X27BB1);
	op_stkvar	(x,	0);
	create_insn	(0X27BBC);
	create_insn	(x=0X27BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X27BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X27BD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X27BDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X27BE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X27BEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X27BF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X27BF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X27C02);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C06);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C11);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X27C18);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_byte	(0X27C24);
	make_array	(0X27C24,	0X2);
	create_insn	(0X27C26);
	create_insn	(x=0X27C28);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C32);
	op_stkvar	(x,	1);
	create_insn	(x=0X27C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X27C3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C43);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C4E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X27C55);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(0X27C62);
	create_insn	(x=0X27C64);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C68);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C77);
	op_stkvar	(x,	1);
	create_insn	(x=0X27C7B);
	op_stkvar	(x,	0);
	create_insn	(0X27C84);
	create_insn	(x=0X27C88);
	op_stkvar	(x,	0);
	create_insn	(x=0X27C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X27C97);
	op_stkvar	(x,	1);
	create_insn	(0X27CA8);
	create_insn	(x=0X27CB5);
	op_hex		(x,	1);
	create_insn	(x=0X27CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CBC);
	op_hex		(x,	1);
	create_insn	(x=0X27CBE);
	op_hex		(x,	1);
	create_insn	(x=0X27CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X27CCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X27CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X27CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X27CE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X27CED);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X27CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D00);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D05);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D09);
	op_hex		(x,	1);
	create_insn	(x=0X27D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D1E);
	op_hex		(x,	1);
	create_insn	(x=0X27D21);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D25);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D30);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D39);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D3D);
	op_hex		(x,	1);
	create_insn	(x=0X27D3F);
	op_stkvar	(x,	1);
	create_insn	(0X27D4A);
	create_insn	(0X27D56);
	create_insn	(x=0X27D5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D65);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D69);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D76);
	op_hex		(x,	1);
	create_insn	(x=0X27D79);
	op_stkvar	(x,	0);
	create_insn	(x=0X27D7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D87);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X27D9A);
	op_hex		(x,	1);
	create_insn	(x=0X27D9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DAE);
	op_hex		(x,	1);
	create_insn	(x=0X27DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X27DB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X27DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DD4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X27DDB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(0X27DE8);
	create_insn	(x=0X27DEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X27DF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X27DF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E04);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E15);
	op_stkvar	(x,	1);
	create_insn	(0X27E21);
	create_insn	(0X27E26);
	create_insn	(x=0X27E34);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E48);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E5C);
	op_hex		(x,	1);
	create_insn	(x=0X27E5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E72);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E82);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E87);
	op_stkvar	(x,	0);
	create_insn	(x=0X27E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X27E97);
	op_hex		(x,	1);
	create_insn	(x=0X27E99);
	op_stkvar	(x,	1);
	create_insn	(x=0X27EA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X27EA9);
	op_stkvar	(x,	0);
	create_insn	(0X27EB6);
	create_insn	(0X27EBE);
	create_insn	(0X27EC6);
	create_insn	(0X27ED4);
	set_name	(0X27ED4,	"do_fileselect_dialog");
	create_insn	(x=0X27ED7);
	op_hex		(x,	1);
	create_insn	(x=0X27EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X27EEE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27EFE);
	op_hex		(x,	1);
	create_insn	(x=0X27F0F);
	op_hex		(x,	1);
	create_insn	(0X27F1E);
	create_insn	(x=0X27F21);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F29);
	op_stkvar	(x,	1);
	create_insn	(x=0X27F30);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F39);
	op_stkvar	(x,	1);
	create_insn	(x=0X27F41);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F45);
	op_stkvar	(x,	1);
	create_insn	(x=0X27F52);
	op_hex		(x,	1);
	create_insn	(x=0X27F62);
	op_hex		(x,	1);
	create_insn	(x=0X27F65);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F68);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F6B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27F73);
	op_hex		(x,	1);
	create_insn	(x=0X27F76);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F7E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X27F87);
	op_hex		(x,	1);
	create_insn	(x=0X27F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X27F92);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F96);
	op_stkvar	(x,	0);
	create_insn	(x=0X27F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X27FA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X27FA9);
	op_hex		(x,	1);
	create_insn	(x=0X27FAB);
	op_hex		(x,	1);
	create_insn	(x=0X27FB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X27FB7);
	op_hex		(x,	1);
	create_insn	(x=0X27FBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X27FC4);
	op_hex		(x,	1);
	create_insn	(x=0X27FC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X27FD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X27FDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X27FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X27FE9);
	op_hex		(x,	1);
	create_insn	(x=0X27FED);
	op_stkvar	(x,	0);
	create_insn	(x=0X27FF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X27FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X28002);
	op_stkvar	(x,	0);
	create_insn	(x=0X28009);
	op_stkvar	(x,	1);
	create_insn	(0X28016);
	create_insn	(x=0X28023);
	op_hex		(x,	1);
	create_insn	(x=0X28026);
	op_stkvar	(x,	0);
	create_insn	(x=0X2802B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28033);
	op_hex		(x,	1);
	create_insn	(x=0X2803A);
	op_stkvar	(x,	0);
	set_cmt	(0X2803F,	"int",	0);
	create_insn	(x=0X2803F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28042);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X28046,	"char *",	0);
	create_insn	(x=0X28046);
	op_stkvar	(x,	0);
	create_insn	(x=0X2804E);
	op_hex		(x,	1);
	create_insn	(x=0X28051);
	op_stkvar	(x,	0);
	create_insn	(x=0X2806B);
	op_hex		(x,	1);
	create_insn	(x=0X2806E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X28072,	"int",	0);
	set_cmt	(0X28073,	"int",	0);
	set_cmt	(0X28074,	"int",	0);
	create_insn	(x=0X28074);
	op_stkvar	(x,	0);
	set_cmt	(0X28078,	"int",	0);
	set_cmt	(0X2807D,	"char *",	0);
	create_insn	(x=0X2807D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28084);
	op_hex		(x,	1);
	create_insn	(x=0X2808C);
	op_stkvar	(x,	0);
	set_cmt	(0X28094,	"char *",	0);
	create_insn	(x=0X28094);
	op_stkvar	(x,	0);
	create_insn	(x=0X28098);
	op_stkvar	(x,	1);
	set_cmt	(0X2809C,	"int",	0);
	create_insn	(x=0X280A1);
	op_hex		(x,	1);
	create_insn	(x=0X280A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X280AD);
	op_stkvar	(x,	0);
	set_cmt	(0X280B5,	"char *",	0);
	create_insn	(x=0X280B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X280BD);
	op_hex		(x,	1);
	create_insn	(x=0X280C1);
	op_hex		(x,	1);
	create_insn	(x=0X280C3);
	op_hex		(x,	1);
	set_cmt	(0X280CC,	"int",	0);
	create_insn	(x=0X280D1);
	op_hex		(x,	1);
	create_insn	(x=0X280D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X280D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X280E7);
	op_stkvar	(x,	0);
	create_insn	(0X280F1);
	create_insn	(x=0X280F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X280FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X280FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X28108);
	op_stkvar	(x,	1);
	create_insn	(x=0X2810E);
	op_hex		(x,	1);
	create_insn	(x=0X28112);
	op_hex		(x,	1);
	create_insn	(x=0X28114);
	op_hex		(x,	1);
	create_insn	(x=0X28122);
	op_hex		(x,	1);
	create_insn	(x=0X28126);
	op_hex		(x,	1);
	create_insn	(x=0X28128);
	op_hex		(x,	1);
	set_cmt	(0X28131,	"char *",	0);
	create_insn	(x=0X28137);
	op_hex		(x,	1);
	create_insn	(x=0X28142);
	op_hex		(x,	1);
	create_insn	(x=0X28146);
	op_hex		(x,	1);
	create_insn	(x=0X28148);
	op_hex		(x,	1);
	create_insn	(x=0X28152);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X28155,	"char *",	0);
	create_insn	(x=0X2815B);
	op_hex		(x,	1);
	create_insn	(x=0X2815E);
	op_stkvar	(x,	1);
	create_insn	(x=0X28164);
	op_hex		(x,	1);
	create_insn	(x=0X28168);
	op_hex		(x,	1);
	create_insn	(x=0X2816A);
	op_hex		(x,	1);
	create_insn	(x=0X28178);
	op_hex		(x,	1);
	create_insn	(x=0X2817C);
	op_hex		(x,	1);
	create_insn	(x=0X2817E);
	op_hex		(x,	1);
	set_cmt	(0X28187,	"char *",	0);
	create_insn	(x=0X2818D);
	op_hex		(x,	1);
	create_insn	(x=0X28190);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28194);
	op_stkvar	(x,	1);
	create_insn	(x=0X2819A);
	op_hex		(x,	1);
	create_insn	(x=0X2819E);
	op_hex		(x,	1);
	create_insn	(x=0X281A0);
	op_hex		(x,	1);
	set_cmt	(0X281A9,	"char *",	0);
	create_insn	(x=0X281AF);
	op_hex		(x,	1);
	create_insn	(0X281B6);
	create_insn	(x=0X281B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X281C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X281CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X281D3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X281E3);
	op_hex		(x,	1);
	create_insn	(x=0X281E8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X281F0);
	op_hex		(x,	1);
	create_insn	(x=0X281F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X281F7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X281FF);
	op_hex		(x,	1);
	create_insn	(x=0X28203);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2820C);
	op_hex		(x,	1);
	create_insn	(x=0X2820F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2821F);
	op_hex		(x,	1);
	create_insn	(x=0X28224);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2822C);
	op_hex		(x,	1);
	create_insn	(x=0X2822F);
	op_stkvar	(x,	1);
	create_insn	(x=0X28235);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2823D);
	op_hex		(x,	1);
	create_insn	(x=0X28241);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2824A);
	op_hex		(x,	1);
	create_insn	(x=0X2824D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28252);
	op_stkvar	(x,	0);
	create_insn	(x=0X28257);
	op_stkvar	(x,	0);
	create_insn	(x=0X2825C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28265);
	op_stkvar	(x,	0);
	create_insn	(x=0X28269);
	op_stkvar	(x,	1);
	create_insn	(x=0X2826D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28273);
	op_stkvar	(x,	1);
	create_insn	(x=0X28277);
	op_stkvar	(x,	0);
	create_insn	(x=0X28280);
	op_stkvar	(x,	1);
	create_insn	(x=0X28284);
	op_stkvar	(x,	0);
	create_insn	(x=0X28288);
	op_stkvar	(x,	1);
	create_insn	(x=0X2828C);
	op_stkvar	(x,	0);
	create_insn	(0X2829A);
	create_insn	(x=0X282A7);
	op_hex		(x,	1);
	create_insn	(x=0X282AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X282B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X282B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X282BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X282C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X282C6);
	op_hex		(x,	1);
	create_insn	(x=0X282CA);
	op_hex		(x,	1);
	create_insn	(x=0X282CC);
	op_hex		(x,	1);
	create_insn	(x=0X282D6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X282D9,	"char *",	0);
	create_insn	(x=0X282DF);
	op_hex		(x,	1);
	create_insn	(x=0X282E4);
	op_hex		(x,	1);
	create_insn	(x=0X282ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X282F2);
	create_insn	(x=0X282F4);
	op_hex		(x,	1);
	create_insn	(x=0X282FD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28306);
	op_hex		(x,	1);
	create_insn	(x=0X28309);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28312);
	op_hex		(x,	1);
	create_insn	(x=0X28315);
	op_stkvar	(x,	0);
	create_insn	(x=0X28321);
	op_stkvar	(x,	1);
	create_insn	(x=0X28325);
	op_stkvar	(x,	1);
	create_insn	(x=0X2832E);
	op_hex		(x,	1);
	create_insn	(x=0X28336);
	op_stkvar	(x,	1);
	create_insn	(x=0X28342);
	op_hex		(x,	1);
	create_insn	(x=0X2834B);
	op_stkvar	(x,	1);
	create_insn	(x=0X28354);
	op_stkvar	(x,	1);
	create_insn	(0X28360);
	create_insn	(0X2836C);
	create_insn	(x=0X28379);
	op_hex		(x,	1);
	create_insn	(x=0X2837C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28380);
	op_stkvar	(x,	1);
	create_insn	(x=0X28385);
	op_stkvar	(x,	1);
	create_insn	(x=0X2838A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2838F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2839B);
	op_hex		(x,	1);
	create_insn	(x=0X2839E);
	op_stkvar	(x,	0);
	create_insn	(0X283A9);
	create_insn	(x=0X283AD);
	op_hex		(x,	1);
	create_insn	(x=0X283B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X283BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X283C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X283CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X283D1);
	op_hex		(x,	1);
	create_insn	(x=0X283D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X283DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X283E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X283EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X283F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X283F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X283FA);
	op_stkvar	(x,	0);
	create_byte	(0X28400);
	make_array	(0X28400,	0X2);
	create_insn	(x=0X28402);
	op_stkvar	(x,	0);
	create_insn	(x=0X28409);
	op_hex		(x,	1);
	create_insn	(x=0X28410);
	op_stkvar	(x,	1);
	create_insn	(x=0X28418);
	op_stkvar	(x,	1);
	create_insn	(x=0X28421);
	op_stkvar	(x,	0);
	create_insn	(x=0X28428);
	op_stkvar	(x,	1);
	create_insn	(x=0X2842F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2843B);
	op_stkvar	(x,	1);
	create_insn	(x=0X28444);
	op_stkvar	(x,	1);
	create_insn	(x=0X28448);
	op_stkvar	(x,	1);
	create_insn	(x=0X2844E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28452);
	op_stkvar	(x,	1);
	create_insn	(x=0X28471);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X28478);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2847F);
	op_stkvar	(x,	1);
	create_insn	(x=0X28483);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2848A);
	op_stkvar	(x,	1);
	create_insn	(x=0X28492);
	op_stkvar	(x,	0);
	create_insn	(x=0X28496);
	op_stkvar	(x,	1);
	create_insn	(x=0X2849A);
	op_stkvar	(x,	0);
	create_insn	(x=0X284A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X284A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X284A8);
	op_stkvar	(x,	0);
	create_insn	(0X284B2);
	create_insn	(x=0X284B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X284BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X284C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X284CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X284D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X284DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X284DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X284E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X284EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X284F1);
	op_hex		(x,	1);
	create_insn	(x=0X284F5);
	op_hex		(x,	1);
	create_insn	(x=0X284F7);
	op_hex		(x,	1);
	create_insn	(x=0X28501);
	op_stkvar	(x,	1);
	create_insn	(x=0X28507);
	op_stkvar	(x,	1);
	create_insn	(x=0X2850B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28512);
	op_stkvar	(x,	0);
	create_insn	(x=0X28516);
	op_stkvar	(x,	1);
	create_insn	(x=0X2851A);
	op_stkvar	(x,	0);
	create_insn	(x=0X28523);
	op_stkvar	(x,	1);
	create_insn	(x=0X2852A);
	op_hex		(x,	1);
	create_insn	(x=0X2852E);
	op_hex		(x,	1);
	create_insn	(x=0X28530);
	op_hex		(x,	1);
	create_insn	(x=0X2853D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X28544);
	op_stkvar	(x,	1);
	create_insn	(x=0X2854B);
	op_hex		(x,	1);
	create_insn	(x=0X2854F);
	op_hex		(x,	1);
	create_insn	(x=0X28551);
	op_hex		(x,	1);
	create_insn	(x=0X28560);
	op_stkvar	(x,	0);
	create_insn	(x=0X28564);
	op_stkvar	(x,	1);
	create_insn	(x=0X2856E);
	op_stkvar	(x,	1);
	create_insn	(x=0X28577);
	op_stkvar	(x,	0);
	create_insn	(x=0X28580);
	op_stkvar	(x,	0);
	create_insn	(0X28589);
	create_insn	(x=0X2858C);
	op_hex		(x,	1);
	create_insn	(x=0X28590);
	op_hex		(x,	1);
	create_insn	(x=0X28592);
	op_hex		(x,	1);
	set_cmt	(0X2859C,	"char *",	0);
	create_insn	(x=0X2859C);
	op_stkvar	(x,	0);
	create_insn	(x=0X285A4);
	op_hex		(x,	1);
	create_insn	(x=0X285A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X285B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X285B6);
	op_stkvar	(x,	1);
	create_insn	(0X285C2);
	set_name	(0X285C2,	"file_build_path");
	create_insn	(x=0X285C5);
	op_hex		(x,	1);
	create_insn	(x=0X285C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X285CF);
	op_stkvar	(x,	0);
	set_cmt	(0X285D2,	"char *",	0);
	create_insn	(x=0X285D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X285DA);
	op_hex		(x,	1);
	set_cmt	(0X285DD,	"char *",	0);
	create_insn	(x=0X285DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X285E5);
	op_hex		(x,	1);
	create_insn	(x=0X285EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X285F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X285FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X28601);
	op_chr		(x,	1);
	create_insn	(x=0X28605);
	op_chr		(x,	1);
	create_insn	(x=0X28609);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2860D,	"char *",	0);
	create_insn	(x=0X2860D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28615);
	op_hex		(x,	1);
	create_insn	(x=0X28618);
	op_stkvar	(x,	0);
	set_cmt	(0X2861B,	"char *",	0);
	create_insn	(x=0X2861B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28623);
	op_hex		(x,	1);
	create_insn	(x=0X28626);
	op_stkvar	(x,	0);
	set_cmt	(0X28629,	"char *",	0);
	create_insn	(x=0X28629);
	op_stkvar	(x,	0);
	create_insn	(x=0X28631);
	op_hex		(x,	1);
	create_insn	(0X2863A);
	set_name	(0X2863A,	"do_savefile_dialog");
	create_insn	(x=0X2863D);
	op_hex		(x,	1);
	create_insn	(x=0X28645);
	op_stkvar	(x,	1);
	create_insn	(x=0X28652);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28662);
	op_hex		(x,	1);
	create_insn	(x=0X28673);
	op_hex		(x,	1);
	create_insn	(x=0X28682);
	op_stkvar	(x,	0);
	create_insn	(x=0X28693);
	op_hex		(x,	1);
	create_insn	(x=0X28696);
	op_stkvar	(x,	0);
	create_insn	(x=0X28699);
	op_stkvar	(x,	0);
	create_insn	(x=0X286A4);
	op_hex		(x,	1);
	create_insn	(x=0X286A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X286AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X286B6);
	op_hex		(x,	1);
	create_insn	(x=0X286C6);
	op_hex		(x,	1);
	create_insn	(x=0X286C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X286CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X286CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X286D7);
	op_hex		(x,	1);
	create_insn	(x=0X286DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X286DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X286E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X286E8);
	op_hex		(x,	1);
	create_insn	(x=0X286F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X286FE);
	op_stkvar	(x,	1);
	set_cmt	(0X28714,	"int",	0);
	set_cmt	(0X28715,	"int",	0);
	set_cmt	(0X28716,	"int",	0);
	create_insn	(x=0X28716);
	op_stkvar	(x,	0);
	set_cmt	(0X28719,	"int",	0);
	create_insn	(x=0X28719);
	op_stkvar	(x,	0);
	set_cmt	(0X28720,	"char *",	0);
	create_insn	(x=0X28720);
	op_stkvar	(x,	0);
	create_insn	(x=0X28727);
	op_hex		(x,	1);
	set_cmt	(0X28733,	"int",	0);
	set_cmt	(0X28734,	"int",	0);
	set_cmt	(0X28735,	"int",	0);
	create_insn	(x=0X28735);
	op_stkvar	(x,	0);
	set_cmt	(0X28738,	"int",	0);
	create_insn	(x=0X28738);
	op_stkvar	(x,	0);
	set_cmt	(0X2873F,	"char *",	0);
	create_insn	(x=0X2873F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28746);
	op_hex		(x,	1);
	create_insn	(x=0X28750);
	op_stkvar	(x,	0);
	create_insn	(x=0X28758);
	op_stkvar	(x,	1);
	create_insn	(0X28762);
	set_name	(0X28762,	"parse_filepath_separators");
	create_insn	(x=0X28765);
	op_hex		(x,	1);
	set_cmt	(0X28769,	"char *",	0);
	create_insn	(x=0X28769);
	op_stkvar	(x,	0);
	create_insn	(x=0X28771);
	op_hex		(x,	1);
	create_insn	(x=0X28774);
	op_stkvar	(x,	0);
	create_insn	(x=0X28777);
	op_stkvar	(x,	1);
	create_insn	(x=0X2877A);
	op_stkvar	(x,	1);
	create_insn	(x=0X28780);
	op_stkvar	(x,	0);
	create_insn	(x=0X2878B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28790);
	op_stkvar	(x,	0);
	create_insn	(x=0X28795);
	op_stkvar	(x,	1);
	create_insn	(x=0X28798);
	op_stkvar	(x,	0);
	create_insn	(x=0X2879B);
	op_stkvar	(x,	1);
	create_insn	(x=0X287A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X287A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X287A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X287AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X287AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X287B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X287B9);
	op_stkvar	(x,	1);
	create_insn	(0X287C4);
	set_name	(0X287C4,	"input_checking");
	create_insn	(x=0X287C7);
	op_hex		(x,	1);
	create_insn	(x=0X287CC);
	op_stkvar	(x,	1);
	set_cmt	(0X287D3,	"20000",	0);
	create_insn	(x=0X287D3);
	op_hex		(x,	1);
	set_cmt	(0X287DB,	"10000",	0);
	create_insn	(x=0X287DB);
	op_hex		(x,	1);
	create_insn	(x=0X287E1);
	op_hex		(x,	1);
	create_insn	(x=0X287E7);
	op_hex		(x,	1);
	create_insn	(0X28815);
	set_cmt	(0X2881A,	"find changed flags from last?",	0);
	create_insn	(x=0X28823);
	op_hex		(x,	1);
	make_array	(0X28832,	0X2);
	create_insn	(x=0X28834);
	op_hex		(x,	1);
	create_insn	(x=0X28844);
	op_hex		(x,	1);
	create_insn	(x=0X28854);
	op_hex		(x,	1);
	create_insn	(x=0X28864);
	op_hex		(x,	1);
	create_insn	(x=0X28874);
	op_hex		(x,	1);
	create_insn	(0X28896);
	create_insn	(x=0X288A9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X288AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X288B1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X288BA);
	op_hex		(x,	1);
	create_insn	(0X28908);
	create_insn	(x=0X2890F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2894A);
	op_hex		(x,	1);
	create_insn	(x=0X2895A);
	op_hex		(x,	1);
	create_insn	(0X2897C);
	create_insn	(x=0X28996);
	op_hex		(x,	1);
	create_insn	(x=0X2899D);
	op_hex		(x,	1);
	create_insn	(x=0X289A4);
	op_hex		(x,	1);
	create_insn	(x=0X289AB);
	op_hex		(x,	1);
	create_insn	(0X289C8);
	create_insn	(0X289E2);
	set_name	(0X289E2,	"input_do_checking");
	create_insn	(x=0X289E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X289EC);
	op_hex		(x,	1);
	create_insn	(0X289F2);
	set_name	(0X289F2,	"file_load_resfile");
	create_insn	(x=0X289F5);
	op_hex		(x,	1);
	create_insn	(x=0X289F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X289FB);
	op_stkvar	(x,	1);
	set_cmt	(0X289FE,	"char *",	0);
	create_insn	(x=0X28A04);
	op_hex		(x,	1);
	create_insn	(x=0X28A07);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28A0B);
	op_stkvar	(x,	1);
	set_cmt	(0X28A0E,	"char *",	0);
	create_insn	(x=0X28A14);
	op_hex		(x,	1);
	create_insn	(x=0X28A17);
	op_stkvar	(x,	1);
	set_cmt	(0X28A1A,	"char *",	0);
	set_cmt	(0X28A1E,	"int",	0);
	create_insn	(x=0X28A23);
	op_hex		(x,	1);
	create_insn	(x=0X28A26);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A29);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A30);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A33);
	op_stkvar	(x,	1);
	set_cmt	(0X28A36,	"char *",	0);
	create_insn	(x=0X28A3C);
	op_hex		(x,	1);
	create_insn	(x=0X28A3F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X28A43);
	op_stkvar	(x,	1);
	set_cmt	(0X28A46,	"char *",	0);
	create_insn	(x=0X28A4C);
	op_hex		(x,	1);
	create_insn	(x=0X28A4F);
	op_stkvar	(x,	1);
	set_cmt	(0X28A52,	"char *",	0);
	set_cmt	(0X28A56,	"int",	0);
	create_insn	(x=0X28A5B);
	op_hex		(x,	1);
	create_insn	(x=0X28A5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A61);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X28A71);
	op_stkvar	(x,	1);
	create_insn	(0X28A78);
	set_name	(0X28A78,	"unload_resource");
	create_insn	(x=0X28A7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A86);
	op_hex		(x,	1);
	create_insn	(0X28A8C);
	set_name	(0X28A8C,	"locate_shape_alt");
	create_insn	(x=0X28A8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A92);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A95);
	op_stkvar	(x,	0);
	create_insn	(x=0X28A9D);
	op_hex		(x,	1);
	create_insn	(0X28AA2);
	set_name	(0X28AA2,	"locate_text_res");
	create_insn	(x=0X28AA5);
	op_hex		(x,	1);
	create_insn	(x=0X28AAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X28ABF);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AC9);
	op_stkvar	(x,	0);
	create_insn	(0X28AD6);
	set_name	(0X28AD6,	"copy_string");
	create_insn	(x=0X28AD9);
	op_hex		(x,	1);
	create_insn	(x=0X28ADD);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X28AF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X28AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B03);
	op_stkvar	(x,	1);
	create_insn	(0X28B0E);
	set_name	(0X28B0E,	"mouse_track_op");
	create_insn	(x=0X28B11);
	op_hex		(x,	1);
	create_insn	(x=0X28B16);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B19);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B23);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B28);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B30);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B33);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B36);
	op_hex		(x,	1);
	create_insn	(x=0X28B38);
	op_hex		(x,	1);
	create_insn	(x=0X28B3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B41);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B47);
	op_hex		(x,	1);
	create_insn	(x=0X28B49);
	op_hex		(x,	1);
	create_insn	(x=0X28B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B53);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B56);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B59);
	op_stkvar	(x,	1);
	create_insn	(x=0X28B5C);
	op_hex		(x,	1);
	create_insn	(x=0X28B5E);
	op_hex		(x,	1);
	create_insn	(x=0X28B67);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B6A);
	op_stkvar	(x,	1);
	create_insn	(0X28B78);
	create_insn	(x=0X28B7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B81);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B84);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B8C);
	op_hex		(x,	1);
	create_insn	(x=0X28B8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B99);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28B9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BA2);
	op_stkvar	(x,	1);
	create_insn	(0X28BAA);
	create_insn	(x=0X28BAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X28BBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BC2);
	op_hex		(x,	1);
	create_insn	(x=0X28BC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X28BCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BD7);
	op_stkvar	(x,	1);
	create_insn	(0X28BDC);
	create_insn	(x=0X28BDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X28BE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X28BF6);
	op_hex		(x,	1);
	create_insn	(x=0X28BF9);
	op_hex		(x,	1);
	create_insn	(x=0X28C00);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C05);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C20);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C26);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C37);
	op_hex		(x,	1);
	create_insn	(x=0X28C3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C43);
	op_stkvar	(x,	1);
	create_insn	(0X28C48);
	create_insn	(x=0X28C4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C51);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C56);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C67);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C72);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C75);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C79);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X28C87);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C91);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C94);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C97);
	op_stkvar	(x,	0);
	create_insn	(x=0X28C9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CA2);
	op_hex		(x,	1);
	create_insn	(x=0X28CA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X28CBB);
	op_stkvar	(x,	1);
	create_insn	(0X28CC2);
	create_insn	(x=0X28CC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X28CCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X28CD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CDB);
	op_hex		(x,	1);
	create_insn	(x=0X28CE2);
	op_hex		(x,	1);
	create_insn	(x=0X28CEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X28CF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X28CF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X28CFE);
	op_hex		(x,	1);
	create_insn	(x=0X28D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D11);
	op_hex		(x,	1);
	create_insn	(x=0X28D13);
	op_hex		(x,	1);
	create_insn	(x=0X28D15);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D22);
	op_hex		(x,	1);
	create_insn	(x=0X28D24);
	op_hex		(x,	1);
	create_insn	(x=0X28D27);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D31);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D37);
	op_hex		(x,	1);
	create_insn	(x=0X28D39);
	op_hex		(x,	1);
	create_insn	(x=0X28D42);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D52);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D55);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D5D);
	op_hex		(x,	1);
	create_insn	(x=0X28D60);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D70);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D73);
	op_stkvar	(x,	1);
	create_insn	(0X28D7C);
	create_insn	(x=0X28D80);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D83);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D86);
	op_stkvar	(x,	1);
	create_insn	(x=0X28D8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X28D94);
	op_hex		(x,	1);
	create_insn	(0X28D9E);
	set_name	(0X28D9E,	"mouse_draw_transparent_check");
	create_insn	(0X28DB6);
	set_name	(0X28DB6,	"mouse_draw_opaque_check");
	create_insn	(0X28DC8);
	set_name	(0X28DC8,	"mouse_draw_opaque");
	create_insn	(x=0X28DCB);
	op_hex		(x,	1);
	create_insn	(x=0X28DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X28DD7);
	op_hex		(x,	1);
	create_insn	(x=0X28DE3);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28DE7);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28DEF);
	op_hex		(x,	1);
	create_insn	(x=0X28DF2);
	op_stkvar	(x,	1);
	create_insn	(0X28E04);
	set_name	(0X28E04,	"mouse_draw_transparent");
	create_insn	(x=0X28E07);
	op_hex		(x,	1);
	create_insn	(x=0X28E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X28E23);
	op_hex		(x,	1);
	create_insn	(x=0X28E34);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E38);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E40);
	op_hex		(x,	1);
	create_insn	(x=0X28E4F);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E53);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E5B);
	op_hex		(x,	1);
	create_insn	(x=0X28E6A);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E6E);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X28E76);
	op_hex		(x,	1);
	create_insn	(x=0X28E79);
	op_stkvar	(x,	1);
	create_insn	(x=0X28E82);
	op_hex		(x,	1);
	create_insn	(0X28E90);
	set_name	(0X28E90,	"mouse_multi_hittest");
	create_insn	(x=0X28E93);
	op_hex		(x,	1);
	create_insn	(0X28EA4);
	create_insn	(x=0X28EA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X28EAC);
	op_hex		(x,	1);
	create_insn	(x=0X28EAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X28EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X28EBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X28EC9);
	op_stkvar	(x,	1);
	create_insn	(0X28EDA);
	create_insn	(0X28EE4);
	set_name	(0X28EE4,	"check_input");
	create_insn	(x=0X28EE7);
	op_hex		(x,	1);
	create_insn	(x=0X28EEF);
	op_hex		(x,	1);
	create_insn	(x=0X28EF3);
	op_stkvar	(x,	0);
	create_insn	(0X28EFA);
	create_insn	(x=0X28F03);
	op_hex		(x,	1);
	create_insn	(x=0X28F11);
	op_hex		(x,	1);
	create_insn	(x=0X28F18);
	op_stkvar	(x,	0);
	create_insn	(x=0X28F1C);
	op_stkvar	(x,	0);
	create_insn	(0X28F26);
	set_name	(0X28F26,	"nopsub_28F26");
	create_insn	(x=0X28F2F);
	op_hex		(x,	1);
	create_insn	(x=0X28F3C);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_name	(0X28F3C,	"sprite_copy_2_to_1_2");
	create_insn	(x=0X28F3F);
	op_seg		(x,	1);
	create_insn	(x=0X28F49);
	op_hex		(x,	1);
	create_insn	(x=0X28F4E);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_name	(0X28F4E,	"sprite_copy_2_to_1_clear");
	create_insn	(x=0X28F51);
	op_seg		(x,	1);
	create_insn	(x=0X28F5B);
	op_hex		(x,	1);
	create_insn	(x=0X28F66);
	op_hex		(x,	1);
	create_insn	(0X28F6A);
	set_name	(0X28F6A,	"sprite_copy_wnd_to_1");
	create_insn	(x=0X28F77);
	op_hex		(x,	1);
	create_insn	(0X28F7C);
	set_name	(0X28F7C,	"sprite_copy_wnd_to_1_clear");
	create_insn	(x=0X28F89);
	op_hex		(x,	1);
	create_insn	(x=0X28F94);
	op_hex		(x,	1);
	create_insn	(0X28F98);
	set_name	(0X28F98,	"intro_draw_text");
	create_insn	(x=0X28F9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X28FA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X28FAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FB7);
	op_hex		(x,	1);
	create_insn	(x=0X28FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X28FC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FCC);
	op_hex		(x,	1);
	create_insn	(x=0X28FCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X28FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X28FD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FE1);
	op_hex		(x,	1);
	create_insn	(x=0X28FE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FEF);
	op_hex		(x,	1);
	create_insn	(x=0X28FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X28FF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X29000);
	op_hex		(x,	1);
	create_insn	(x=0X29003);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X29008);
	set_name	(0X29008,	"hiscore_draw_text");
	create_insn	(x=0X2900B);
	op_stkvar	(x,	1);
	create_insn	(x=0X29012);
	op_stkvar	(x,	1);
	create_insn	(x=0X2901D);
	op_stkvar	(x,	1);
	create_insn	(x=0X29024);
	op_stkvar	(x,	0);
	create_insn	(x=0X2902C);
	op_hex		(x,	1);
	create_insn	(x=0X2902F);
	op_stkvar	(x,	1);
	create_insn	(x=0X29039);
	op_stkvar	(x,	0);
	create_insn	(x=0X29041);
	op_hex		(x,	1);
	create_insn	(x=0X29044);
	op_stkvar	(x,	1);
	create_insn	(x=0X29049);
	op_stkvar	(x,	1);
	create_insn	(x=0X2904E);
	op_stkvar	(x,	0);
	create_insn	(x=0X29056);
	op_hex		(x,	1);
	create_insn	(x=0X29059);
	op_stkvar	(x,	1);
	create_insn	(x=0X2905E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29063);
	op_stkvar	(x,	0);
	create_insn	(x=0X2906B);
	op_hex		(x,	1);
	create_insn	(x=0X2906E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29073);
	op_stkvar	(x,	1);
	create_insn	(x=0X29078);
	op_stkvar	(x,	0);
	create_insn	(x=0X29080);
	op_hex		(x,	1);
	create_insn	(x=0X29083);
	op_stkvar	(x,	1);
	create_insn	(x=0X29088);
	op_stkvar	(x,	1);
	create_insn	(x=0X2908D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29095);
	op_hex		(x,	1);
	create_insn	(x=0X2909B);
	op_stkvar	(x,	0);
	create_insn	(x=0X290A3);
	op_hex		(x,	1);
	create_insn	(x=0X290A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X290A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X290AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X290B4);
	op_hex		(x,	1);
	create_insn	(x=0X290B7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X290BC);
	set_name	(0X290BC,	"call_read_line");
	create_insn	(x=0X290BF);
	op_hex		(x,	1);
	set_cmt	(0X290C7,	"int",	0);
	create_insn	(x=0X290C7);
	op_stkvar	(x,	0);
	set_cmt	(0X290CA,	"int",	0);
	create_insn	(x=0X290CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X290D0);
	op_seg		(x,	1);
	set_cmt	(0X290D4,	"__int32",	0);
	set_cmt	(0X290D5,	"int",	0);
	create_insn	(x=0X290D5);
	op_stkvar	(x,	0);
	set_cmt	(0X290D8,	"int",	0);
	create_insn	(x=0X290D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X290DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X290E0);
	op_hex		(x,	1);
	create_insn	(x=0X290E2);
	op_hex		(x,	1);
	create_insn	(x=0X290E4);
	op_hex		(x,	1);
	set_cmt	(0X290EB,	"int",	0);
	set_cmt	(0X290EC,	"int",	0);
	set_cmt	(0X290F0,	"char *",	0);
	create_insn	(x=0X290F0);
	op_stkvar	(x,	0);
	set_cmt	(0X290F6,	"char",	0);
	create_insn	(x=0X290FC);
	op_hex		(x,	1);
	create_insn	(x=0X290FF);
	op_stkvar	(x,	0);
	set_cmt	(0X29106,	"char *",	0);
	create_insn	(x=0X29106);
	op_stkvar	(x,	0);
	create_insn	(x=0X2910E);
	op_hex		(x,	1);
	create_insn	(x=0X29111);
	op_stkvar	(x,	0);
	create_insn	(x=0X29115);
	op_stkvar	(x,	0);
	create_insn	(x=0X2911A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2911D);
	op_stkvar	(x,	1);
	create_insn	(x=0X29120);
	op_stkvar	(x,	1);
	create_insn	(x=0X2912A);
	op_stkvar	(x,	1);
	create_insn	(x=0X29131);
	op_stkvar	(x,	1);
	create_insn	(0X2913A);
	set_name	(0X2913A,	"input_repeat_check");
	create_insn	(x=0X2913D);
	op_hex		(x,	1);
	create_insn	(0X2914A);
	create_insn	(x=0X2914E);
	op_stkvar	(x,	0);
	create_insn	(x=0X29158);
	op_hex		(x,	1);
	create_insn	(x=0X29161);
	op_stkvar	(x,	0);
	create_insn	(0X2916E);
	set_name	(0X2916E,	"draw_lines_unk");
	create_insn	(x=0X29171);
	op_hex		(x,	1);
	create_insn	(x=0X29176);
	op_stkvar	(x,	1);
	create_insn	(x=0X29179);
	op_stkvar	(x,	1);
	create_insn	(x=0X2917C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2917F);
	op_stkvar	(x,	1);
	create_insn	(x=0X29182);
	op_stkvar	(x,	0);
	create_insn	(x=0X29185);
	op_stkvar	(x,	0);
	create_insn	(x=0X29189);
	op_stkvar	(x,	0);
	create_insn	(x=0X2918C);
	op_stkvar	(x,	0);
	create_insn	(x=0X29194);
	op_hex		(x,	1);
	create_insn	(x=0X29197);
	op_stkvar	(x,	1);
	create_insn	(x=0X2919B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2919E);
	op_stkvar	(x,	0);
	create_insn	(x=0X291A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X291A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X291B3);
	op_hex		(x,	1);
	create_insn	(x=0X291B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X291BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X291BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X291C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X291CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X291D6);
	op_hex		(x,	1);
	create_insn	(x=0X291D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X291DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X291E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X291E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X291EB);
	op_hex		(x,	1);
	create_insn	(x=0X291EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X291F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X291F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X291FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X291FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X29204);
	op_stkvar	(x,	0);
	create_insn	(x=0X2920C);
	op_hex		(x,	1);
	create_insn	(x=0X2920F);
	op_stkvar	(x,	1);
	create_insn	(x=0X29215);
	op_stkvar	(x,	0);
	create_insn	(x=0X29218);
	op_stkvar	(x,	0);
	create_insn	(x=0X2921F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29222);
	op_stkvar	(x,	1);
	create_insn	(x=0X29229);
	op_stkvar	(x,	0);
	create_insn	(x=0X29231);
	op_hex		(x,	1);
	create_insn	(x=0X29234);
	op_stkvar	(x,	0);
	create_insn	(x=0X2923A);
	op_stkvar	(x,	0);
	create_insn	(x=0X29242);
	op_hex		(x,	1);
	create_insn	(x=0X29248);
	op_stkvar	(x,	0);
	create_insn	(x=0X2924B);
	op_stkvar	(x,	0);
	create_insn	(x=0X29253);
	op_stkvar	(x,	0);
	create_insn	(x=0X29256);
	op_stkvar	(x,	1);
	create_insn	(x=0X29260);
	op_hex		(x,	1);
	create_insn	(x=0X29266);
	op_stkvar	(x,	0);
	create_insn	(x=0X29269);
	op_stkvar	(x,	0);
	create_insn	(x=0X29271);
	op_stkvar	(x,	0);
	create_insn	(x=0X29274);
	op_stkvar	(x,	1);
	create_insn	(x=0X29280);
	op_hex		(x,	1);
	create_insn	(x=0X29283);
	op_stkvar	(x,	0);
	create_insn	(x=0X29288);
	op_stkvar	(x,	0);
	create_insn	(x=0X29291);
	op_hex		(x,	1);
	create_insn	(x=0X29297);
	op_stkvar	(x,	0);
	create_insn	(x=0X2929A);
	op_stkvar	(x,	0);
	create_insn	(x=0X292A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X292A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X292A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X292B1);
	op_hex		(x,	1);
	create_insn	(x=0X292B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X292BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X292C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X292C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X292CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X292D3);
	op_hex		(x,	1);
	create_insn	(0X292DC);
	set_name	(0X292DC,	"draw_button");
	create_insn	(x=0X292DF);
	op_hex		(x,	1);
	create_insn	(x=0X292E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X292E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X292EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X292ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X292F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X292F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X292F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X292F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X292FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X29304);
	op_hex		(x,	1);
	create_insn	(x=0X29307);
	op_stkvar	(x,	0);
	create_insn	(x=0X2930A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2930E);
	op_stkvar	(x,	0);
	create_insn	(x=0X29311);
	op_stkvar	(x,	0);
	create_insn	(x=0X29319);
	op_hex		(x,	1);
	create_insn	(x=0X2931C);
	op_stkvar	(x,	1);
	create_insn	(x=0X29320);
	op_stkvar	(x,	0);
	create_insn	(x=0X29323);
	op_stkvar	(x,	0);
	create_insn	(x=0X2932B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2932E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29338);
	op_hex		(x,	1);
	create_insn	(x=0X2933B);
	op_stkvar	(x,	1);
	create_insn	(x=0X29341);
	op_stkvar	(x,	0);
	create_insn	(x=0X29344);
	op_stkvar	(x,	0);
	create_insn	(x=0X2934C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2934F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2935B);
	op_hex		(x,	1);
	create_insn	(x=0X2935E);
	op_stkvar	(x,	0);
	create_insn	(x=0X29362);
	op_stkvar	(x,	0);
	create_insn	(x=0X29365);
	op_stkvar	(x,	0);
	create_insn	(x=0X29368);
	op_stkvar	(x,	0);
	create_insn	(x=0X29370);
	op_hex		(x,	1);
	create_insn	(x=0X29373);
	op_stkvar	(x,	1);
	create_insn	(x=0X29377);
	op_stkvar	(x,	0);
	create_insn	(x=0X2937A);
	op_stkvar	(x,	0);
	create_insn	(x=0X29381);
	op_stkvar	(x,	0);
	create_insn	(x=0X29384);
	op_stkvar	(x,	1);
	create_insn	(x=0X29389);
	op_stkvar	(x,	0);
	create_insn	(x=0X29391);
	op_hex		(x,	1);
	create_insn	(x=0X29394);
	op_stkvar	(x,	1);
	create_insn	(x=0X2939A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2939D);
	op_stkvar	(x,	0);
	create_insn	(x=0X293A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X293A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X293AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X293B6);
	op_hex		(x,	1);
	create_insn	(x=0X293B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X293BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X293C7);
	op_hex		(x,	1);
	create_insn	(x=0X293CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X293D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X293D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X293DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X293E5);
	op_hex		(x,	1);
	create_insn	(x=0X293EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X293EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X293F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X293F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X29405);
	op_hex		(x,	1);
	create_insn	(x=0X29408);
	op_stkvar	(x,	0);
	create_insn	(x=0X2940D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29416);
	op_hex		(x,	1);
	create_insn	(x=0X2941C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2941F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29426);
	op_stkvar	(x,	0);
	create_insn	(x=0X29429);
	op_stkvar	(x,	1);
	create_insn	(x=0X2942E);
	op_stkvar	(x,	0);
	create_insn	(x=0X29436);
	op_hex		(x,	1);
	create_insn	(x=0X2943C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2943F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29446);
	op_stkvar	(x,	0);
	create_insn	(x=0X29449);
	op_stkvar	(x,	1);
	create_insn	(x=0X29450);
	op_stkvar	(x,	0);
	create_insn	(x=0X29458);
	op_hex		(x,	1);
	create_insn	(x=0X2945B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2945E);
	op_stkvar	(x,	1);
	create_insn	(0X29466);
	create_insn	(x=0X29469);
	op_stkvar	(x,	0);
	create_insn	(x=0X29471);
	op_hex		(x,	1);
	create_insn	(x=0X29474);
	op_stkvar	(x,	0);
	create_insn	(x=0X29477);
	op_stkvar	(x,	0);
	create_insn	(x=0X29482);
	op_hex		(x,	1);
	create_insn	(x=0X29485);
	op_stkvar	(x,	0);
	set_cmt	(0X2948D,	"char *",	0);
	create_insn	(x=0X29493);
	op_hex		(x,	1);
	create_insn	(x=0X29496);
	op_stkvar	(x,	0);
	create_insn	(x=0X29499);
	op_stkvar	(x,	0);
	create_insn	(x=0X294A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X294A3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X294AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X294AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X294B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X294B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X294B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X294BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X294C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X294C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X294D1);
	op_hex		(x,	1);
	create_insn	(x=0X294D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X294D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X294DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X294E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X294E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X294EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X294EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X294F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X294F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X294FB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X294FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2950A);
	op_stkvar	(x,	1);
	create_insn	(x=0X29513);
	op_stkvar	(x,	1);
	create_insn	(x=0X2951A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2951D);
	op_stkvar	(x,	1);
	create_insn	(x=0X29521);
	op_stkvar	(x,	1);
	create_insn	(x=0X2952A);
	op_hex		(x,	1);
	create_insn	(x=0X2952F);
	op_stkvar	(x,	1);
	create_insn	(x=0X29537);
	op_hex		(x,	1);
	create_insn	(x=0X29539);
	op_stkvar	(x,	1);
	create_insn	(x=0X2953D);
	op_stkvar	(x,	1);
	set_cmt	(0X29541,	"when nop instead of this call = no text on buttons",	0);
	create_insn	(x=0X29546);
	op_hex		(x,	1);
	create_insn	(x=0X29549);
	op_stkvar	(x,	0);
	create_insn	(x=0X2954C);
	op_stkvar	(x,	0);
	create_insn	(0X29554);
	create_insn	(0X2955A);
	set_name	(0X2955A,	"shape3d_init_shape");
	create_insn	(x=0X2955E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29561);
	op_stkvar	(x,	1);
	create_insn	(x=0X29564);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3DHEADER"),	0);
	create_insn	(x=0X29569);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X2956B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2956E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29571);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3DHEADER"),	0);
	create_insn	(x=0X29575);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X29578);
	op_stkvar	(x,	1);
	create_insn	(x=0X2957B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2957E);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3DHEADER"),	0);
	create_insn	(x=0X29582);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X29585);
	op_stkvar	(x,	1);
	create_insn	(x=0X29588);
	op_stkvar	(x,	1);
	create_insn	(x=0X2958B);
	op_stkvar	(x,	1);
	create_insn	(x=0X29591);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X29594);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X29597);
	op_stkvar	(x,	1);
	create_insn	(x=0X2959C);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3DHEADER"),	0);
	create_insn	(x=0X295A0);
	op_hex		(x,	1);
	create_insn	(x=0X295A4);
	op_hex		(x,	1);
	create_insn	(x=0X295A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X295A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X295AF);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295B2);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X295BA);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295BD);
	op_hex		(x,	1);
	create_insn	(x=0X295BF);
	op_hex		(x,	1);
	create_insn	(x=0X295C1);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295C5);
	op_hex		(x,	1);
	create_insn	(x=0X295C9);
	op_hex		(x,	1);
	create_insn	(x=0X295CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X295D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X295D6);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295D9);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X295E1);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295E8);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X295EC);
	op_hex		(x,	1);
	create_insn	(x=0X295F0);
	op_hex		(x,	1);
	create_insn	(x=0X295F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X295F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X295FD);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(x=0X29600);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE3D"),	0);
	create_insn	(0X29606);
	set_name	(0X29606,	"font_op2_alt");
	create_insn	(x=0X29609);
	op_stkvar	(x,	0);
	create_insn	(x=0X29611);
	op_hex		(x,	1);
	create_insn	(x=0X2961C);
	op_hex		(x,	1);
	create_insn	(0X29620);
	set_name	(0X29620,	"sprite_blit_to_video");
	create_insn	(x=0X29623);
	op_hex		(x,	1);
	create_insn	(x=0X29630);
	op_stkvar	(x,	0);
	create_insn	(x=0X29636);
	op_stkvar	(x,	1);
	create_insn	(x=0X29645);
	op_hex		(x,	1);
	create_insn	(x=0X29654);
	op_stkvar	(x,	1);
	create_insn	(0X2965C);
	create_insn	(x=0X2965D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2966C);
	op_hex		(x,	1);
	create_insn	(x=0X2967E);
	op_hex		(x,	1);
	create_insn	(x=0X2968B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2969A);
	op_hex		(x,	1);
	create_insn	(0X296AA);
	set_name	(0X296AA,	"show_waiting");
	create_insn	(x=0X296BA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X296CA);
	op_hex		(x,	1);
	create_insn	(x=0X296D7);
	op_hex		(x,	1);
	create_insn	(0X296E0);
	set_name	(0X296E0,	"print_int_as_string_maybe");
	create_insn	(x=0X296E3);
	op_hex		(x,	1);
	set_cmt	(0X296EC,	"char *",	0);
	create_insn	(x=0X296EC);
	op_stkvar	(x,	0);
	set_cmt	(0X296EF,	"int",	0);
	create_insn	(x=0X296EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X296F7);
	op_hex		(x,	1);
	create_insn	(x=0X296FA);
	op_stkvar	(x,	0);
	create_insn	(0X29704);
	create_insn	(x=0X29705);
	op_stkvar	(x,	1);
	create_insn	(x=0X29710);
	op_stkvar	(x,	0);
	create_insn	(x=0X2971A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2972A);
	op_stkvar	(x,	0);
	create_insn	(x=0X29734);
	op_stkvar	(x,	1);
	create_insn	(x=0X29741);
	op_stkvar	(x,	1);
	create_insn	(x=0X29748);
	op_stkvar	(x,	0);
	create_insn	(x=0X2974D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29758);
	op_stkvar	(x,	1);
	create_insn	(x=0X29763);
	op_stkvar	(x,	1);
	create_insn	(0X29772);
	create_insn	(0X29786);
	set_name	(0X29786,	"mouse_timer_sprite_unk");
	create_insn	(x=0X29789);
	op_hex		(x,	1);
	create_insn	(0X2979A);
	create_insn	(x=0X297AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X297B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X297C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X297C6);
	op_hex		(x,	1);
	create_insn	(x=0X297C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X297CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X297D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X297DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X297E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X297ED);
	op_hex		(x,	1);
	create_insn	(0X297FC);
	set_name	(0X297FC,	"file_load_audiores");
	create_insn	(x=0X297FF);
	op_hex		(x,	1);
	set_cmt	(0X29802,	"char *",	0);
	create_insn	(x=0X29802);
	op_stkvar	(x,	0);
	set_cmt	(0X29808,	"int",	0);
	create_insn	(x=0X2980D);
	op_hex		(x,	1);
	set_cmt	(0X29817,	"char *",	0);
	create_insn	(x=0X29817);
	op_stkvar	(x,	0);
	set_cmt	(0X2981D,	"int",	0);
	create_insn	(x=0X29822);
	op_hex		(x,	1);
	set_cmt	(0X2982C,	"arg_4 is a string, e.g \"TITL\"",	0);
	create_insn	(x=0X2982C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2983E);
	op_hex		(x,	1);
	create_insn	(x=0X29841);
	op_stkvar	(x,	0);
	create_insn	(x=0X29844);
	op_stkvar	(x,	0);
	create_insn	(0X29858);
	set_name	(0X29858,	"audio_unload");
	create_insn	(x=0X29861);
	op_hex		(x,	1);
	create_insn	(x=0X29871);
	op_hex		(x,	1);
	create_insn	(x=0X29881);
	op_hex		(x,	1);
	create_insn	(0X2988A);
	set_name	(0X2988A,	"font_set_fontdef2");
	create_insn	(x=0X2988D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29890);
	op_stkvar	(x,	0);
	create_insn	(x=0X29898);
	op_hex		(x,	1);
	create_insn	(x=0X2989B);
	op_stkvar	(x,	1);
	create_insn	(0X298A8);
	set_name	(0X298A8,	"font_set_fontdef");
	create_insn	(x=0X298B4);
	op_hex		(x,	1);
	create_insn	(0X298B8);
	set_name	(0X298B8,	"format_frame_as_string");
	create_insn	(x=0X298BB);
	op_hex		(x,	1);
	create_insn	(x=0X298C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X298CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X298CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X298D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X298D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X298DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X298EC);
	op_stkvar	(x,	0);
	set_cmt	(0X298F2,	"int",	0);
	set_cmt	(0X298F5,	"int",	0);
	create_insn	(x=0X298F7);
	op_stkvar	(x,	1);
	set_cmt	(0X298FA,	"char *",	0);
	create_insn	(x=0X298FF);
	op_hex		(x,	1);
	create_insn	(x=0X29902);
	op_stkvar	(x,	1);
	set_cmt	(0X29906,	"char *",	0);
	create_insn	(x=0X29906);
	op_stkvar	(x,	0);
	create_insn	(x=0X2990E);
	op_hex		(x,	1);
	create_insn	(x=0X29911);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X29915,	"char *",	0);
	create_insn	(x=0X29915);
	op_stkvar	(x,	0);
	create_insn	(x=0X2991D);
	op_hex		(x,	1);
	set_cmt	(0X29923,	"int",	0);
	set_cmt	(0X29927,	"int",	0);
	create_insn	(x=0X29929);
	op_stkvar	(x,	1);
	set_cmt	(0X2992C,	"char *",	0);
	create_insn	(x=0X29931);
	op_hex		(x,	1);
	create_insn	(x=0X29934);
	op_stkvar	(x,	1);
	set_cmt	(0X29938,	"char *",	0);
	create_insn	(x=0X29938);
	op_stkvar	(x,	0);
	create_insn	(x=0X29940);
	op_hex		(x,	1);
	create_insn	(x=0X29943);
	op_stkvar	(x,	0);
	create_insn	(x=0X29949);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2994D,	"char *",	0);
	create_insn	(x=0X2994D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29955);
	op_hex		(x,	1);
	set_cmt	(0X2995B,	"int",	0);
	set_cmt	(0X2995F,	"int",	0);
	create_insn	(x=0X2996A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2996E);
	op_stkvar	(x,	1);
	set_cmt	(0X29971,	"char *",	0);
	create_insn	(x=0X29976);
	op_hex		(x,	1);
	create_insn	(x=0X29979);
	op_stkvar	(x,	1);
	set_cmt	(0X2997D,	"char *",	0);
	create_insn	(x=0X2997D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29985);
	op_hex		(x,	1);
	create_insn	(0X2998E);
	set_name	(0X2998E,	"get_super_random");
	create_insn	(x=0X29991);
	op_hex		(x,	1);
	create_insn	(x=0X299A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X299AA);
	op_stkvar	(x,	1);
	create_insn	(0X299C2);
	create_insn	(0X299CA);
	set_name	(0X299CA,	"file_load_resource");
	create_insn	(x=0X299CD);
	op_hex		(x,	1);
	create_insn	(x=0X299D0);
	op_stkvar	(x,	1);
	create_insn	(0X299DB);
	create_insn	(x=0X299DE);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_insn	(x=0X299E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X299EC);
	op_hex		(x,	1);
	create_insn	(x=0X299EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X299F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X299F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X29A00);
	op_hex		(x,	1);
	create_insn	(x=0X29A08);
	op_stkvar	(x,	0);
	create_insn	(x=0X29A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X29A1C);
	op_stkvar	(x,	0);
	set_cmt	(0X29A26,	"char *",	0);
	create_insn	(x=0X29A26);
	op_stkvar	(x,	0);
	set_cmt	(0X29A30,	"char *",	0);
	create_insn	(x=0X29A30);
	op_stkvar	(x,	0);
	set_cmt	(0X29A3A,	"char *",	0);
	create_insn	(x=0X29A3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X29A44);
	op_stkvar	(x,	0);
	create_word	(x=0X29A4E);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A50);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A52);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A54);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A56);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A58);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A5A);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A5C);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_word	(x=0X29A5E);
	op_plain_offset	(x,	0,	0X274B0);
	op_plain_offset	(x,	128,	0X274B0);
	create_insn	(x=0X29A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X29A63);
	op_stkvar	(x,	1);
	create_insn	(x=0X29A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X29A6B);
	op_stkvar	(x,	1);
	create_insn	(0X29A72);
	create_insn	(0X29A7E);
	create_insn	(0X29A86);
	create_insn	(x=0X29A89);
	op_hex		(x,	1);
	create_insn	(x=0X29A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X29A9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X29A9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AAA);
	op_hex		(x,	1);
	create_insn	(x=0X29AAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X29AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X29ABB);
	op_stkvar	(x,	1);
	create_insn	(x=0X29ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X29AC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X29ACC);
	op_stkvar	(x,	0);
	create_insn	(x=0X29AD4);
	op_hex		(x,	1);
	create_insn	(0X29ADC);
	create_insn	(0X29AEC);
	set_name	(0X29AEC,	"input_push_status");
	create_insn	(x=0X29AF6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X29AFD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X29B08);
	set_name	(0X29B08,	"input_pop_status");
	create_insn	(x=0X29B1A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29B21);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X29B32);
	set_name	(0X29B32,	"do_joy_restext");
	create_insn	(x=0X29B35);
	op_hex		(x,	1);
	create_insn	(x=0X29B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X29B59);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29B69);
	op_hex		(x,	1);
	create_insn	(x=0X29B7A);
	op_hex		(x,	1);
	create_insn	(x=0X29B84);
	op_stkvar	(x,	0);
	create_insn	(x=0X29B89);
	op_stkvar	(x,	1);
	create_insn	(x=0X29B92);
	op_stkvar	(x,	0);
	create_insn	(x=0X29B95);
	op_stkvar	(x,	0);
	create_insn	(x=0X29BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X29BB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BC5);
	op_hex		(x,	1);
	create_insn	(x=0X29BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X29BDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BE9);
	op_hex		(x,	1);
	create_insn	(x=0X29BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X29BFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C02);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C0A);
	op_hex		(x,	1);
	create_insn	(x=0X29C15);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C23);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C2B);
	op_hex		(x,	1);
	create_insn	(x=0X29C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C31);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C34);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C37);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C40);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C43);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C49);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C55);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C58);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C61);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C64);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C67);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C70);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C73);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C76);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C79);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C82);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C85);
	op_stkvar	(x,	1);
	create_insn	(x=0X29C8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X29C9F);
	op_stkvar	(x,	0);
	make_array	(0X29CA6,	0X2);
	create_insn	(0X29CA8);
	create_insn	(x=0X29CAF);
	op_hex		(x,	1);
	create_insn	(x=0X29CBB);
	op_hex		(x,	1);
	create_insn	(x=0X29CC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X29CCC);
	op_hex		(x,	1);
	create_insn	(x=0X29CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CEA);
	op_hex		(x,	1);
	create_insn	(x=0X29CED);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X29CF8);
	op_hex		(x,	1);
	create_insn	(x=0X29CFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D03);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D16);
	op_hex		(x,	1);
	create_insn	(x=0X29D1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D22);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D25);
	op_stkvar	(x,	0);
	create_insn	(x=0X29D2B);
	op_stkvar	(x,	1);
	create_insn	(0X29D3A);
	create_insn	(x=0X29D52);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29D62);
	op_hex		(x,	1);
	create_insn	(x=0X29D70);
	op_hex		(x,	1);
	create_insn	(0X29D76);
	create_insn	(0X29D9A);
	set_name	(0X29D9A,	"do_key_restext");
	create_insn	(x=0X29DB6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29DC6);
	op_hex		(x,	1);
	create_insn	(x=0X29DD7);
	op_hex		(x,	1);
	create_insn	(0X29DF4);
	set_name	(0X29DF4,	"do_mou_restext");
	create_insn	(x=0X29E15);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29E25);
	op_hex		(x,	1);
	create_insn	(x=0X29E36);
	op_hex		(x,	1);
	create_insn	(0X29E4A);
	set_name	(0X29E4A,	"do_pau_restext");
	create_insn	(x=0X29E66);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29E76);
	op_hex		(x,	1);
	create_insn	(x=0X29E84);
	op_hex		(x,	1);
	create_insn	(0X29E98);
	set_name	(0X29E98,	"do_mof_restext");
	create_insn	(x=0X29EB8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X29EBE);
	create_insn	(x=0X29ECB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29EDB);
	op_hex		(x,	1);
	create_insn	(x=0X29EEC);
	op_hex		(x,	1);
	create_insn	(0X29EFA);
	set_name	(0X29EFA,	"do_sonsof_restext");
	create_insn	(x=0X29F1A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X29F20);
	create_insn	(x=0X29F2D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29F3D);
	op_hex		(x,	1);
	create_insn	(x=0X29F4E);
	op_hex		(x,	1);
	create_insn	(0X29F5C);
	set_name	(0X29F5C,	"do_dos_restext");
	create_insn	(x=0X29F78);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29F88);
	op_hex		(x,	1);
	create_insn	(x=0X29F99);
	op_hex		(x,	1);
	create_insn	(0X29FA6);
	create_insn	(0X29FB6);
	set_name	(0X29FB6,	"do_mrl_textres");
	create_insn	(x=0X29FB9);
	op_hex		(x,	1);
	create_insn	(x=0X29FD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X29FD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X29FD9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X29FE9);
	op_hex		(x,	1);
	create_insn	(x=0X29FEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X29FF7);
	op_hex		(x,	1);
	create_insn	(x=0X29FFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A026);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A02E);
	op_stkvar	(x,	0);
	create_insn	(0X2A03A);
	create_insn	(x=0X2A03B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A042);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A049);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A055);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A066);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A078);
	op_hex		(x,	1);
	create_insn	(x=0X2A07B);
	op_stkvar	(x,	0);
	create_insn	(0X2A0A4);
	create_insn	(0X2A0AE);
	create_insn	(0X2A0B8);
	create_insn	(0X2A0C2);
	create_insn	(0X2A0CC);
	create_insn	(x=0X2A0CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A0E2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A0F2);
	op_hex		(x,	1);
	create_insn	(x=0X2A100);
	op_hex		(x,	1);
	create_insn	(0X2A118);
	set_name	(0X2A118,	"do_dea_textres");
	create_insn	(x=0X2A11B);
	op_hex		(x,	1);
	create_insn	(x=0X2A136);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A146);
	op_hex		(x,	1);
	create_insn	(x=0X2A157);
	op_hex		(x,	1);
	create_insn	(x=0X2A15A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A161);
	op_stkvar	(x,	0);
	create_insn	(0X2A168);
	create_insn	(x=0X2A175);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A185);
	op_hex		(x,	1);
	create_insn	(x=0X2A193);
	op_hex		(x,	1);
	create_insn	(x=0X2A196);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A19F);
	op_stkvar	(x,	1);
	create_insn	(0X2A1A6);
	set_name	(0X2A1A6,	"ensure_file_exists");
	create_insn	(0X2A1AC);
	create_insn	(x=0X2A1B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A1BC);
	op_hex		(x,	1);
	set_cmt	(0X2A1BE,	"\"Insert Disk A/B .. etc presskey\"",	0);
	create_insn	(x=0X2A1BE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2A1CE);
	op_hex		(x,	1);
	create_insn	(x=0X2A1DC);
	op_hex		(x,	1);
	create_insn	(x=0X2A1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A1EB);
	op_hex		(x,	1);
	create_insn	(x=0X2A1ED);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2A1F6);
	op_hex		(x,	1);
	create_insn	(0X2A200);
	set_name	(0X2A200,	"do_mer_restext");
	create_insn	(x=0X2A20D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A21D);
	op_hex		(x,	1);
	create_insn	(x=0X2A22B);
	op_hex		(x,	1);
	create_insn	(0X2A230);
	set_name	(0X2A230,	"timer_get_delta_alt");
	create_insn	(0X2A236);
	set_name	(0X2A236,	"file_load_3dres");
	create_insn	(x=0X2A239);
	op_hex		(x,	1);
	create_insn	(x=0X2A23C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A23F);
	op_stkvar	(x,	1);
	set_cmt	(0X2A242,	"char *",	0);
	create_insn	(x=0X2A248);
	op_hex		(x,	1);
	create_insn	(x=0X2A24B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A24F);
	op_stkvar	(x,	1);
	set_cmt	(0X2A252,	"char *",	0);
	create_insn	(x=0X2A258);
	op_hex		(x,	1);
	create_insn	(x=0X2A25B);
	op_stkvar	(x,	1);
	set_cmt	(0X2A25E,	"char *",	0);
	set_cmt	(0X2A262,	"int",	0);
	create_insn	(x=0X2A267);
	op_hex		(x,	1);
	create_insn	(x=0X2A26A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A26D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A274);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A277);
	op_stkvar	(x,	1);
	set_cmt	(0X2A27A,	"char *",	0);
	create_insn	(x=0X2A280);
	op_hex		(x,	1);
	create_insn	(x=0X2A283);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A287);
	op_stkvar	(x,	1);
	set_cmt	(0X2A28A,	"char *",	0);
	create_insn	(x=0X2A290);
	op_hex		(x,	1);
	create_insn	(x=0X2A293);
	op_stkvar	(x,	1);
	set_cmt	(0X2A296,	"char *",	0);
	set_cmt	(0X2A29A,	"int",	0);
	create_insn	(x=0X2A29F);
	op_hex		(x,	1);
	create_insn	(x=0X2A2A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A2B5);
	op_stkvar	(x,	1);
	create_insn	(0X2A2BC);
	set_name	(0X2A2BC,	"load_tracks_menu_shapes");
	create_insn	(x=0X2A2BF);
	op_hex		(x,	1);
	create_insn	(x=0X2A2C5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A2CE);
	op_hex		(x,	1);
	create_insn	(x=0X2A2D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2D7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A2DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A2E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2E8);
	op_hex		(x,	1);
	create_insn	(x=0X2A2EB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A2EF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A2F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A2FE);
	op_hex		(x,	1);
	create_insn	(x=0X2A301);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A305);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A309);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A30C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A314);
	op_hex		(x,	1);
	create_insn	(x=0X2A31F);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A323);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A330);
	op_hex		(x,	1);
	create_insn	(x=0X2A333);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A337);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A343);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A347);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A354);
	op_hex		(x,	1);
	create_insn	(x=0X2A357);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A367);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A36B);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A378);
	op_hex		(x,	1);
	create_insn	(x=0X2A37B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A37F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A38B);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A38F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X2A39C);
	op_hex		(x,	1);
	create_insn	(x=0X2A39F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3A7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A3B0);
	op_hex		(x,	1);
	create_insn	(x=0X2A3B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3CA);
	op_hex		(x,	1);
	create_insn	(x=0X2A3D4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A3D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3E3);
	op_hex		(x,	1);
	create_insn	(x=0X2A3ED);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A3F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A3FC);
	op_hex		(x,	1);
	create_insn	(x=0X2A3FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A402);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A405);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A409);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A40C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A414);
	op_hex		(x,	1);
	create_insn	(x=0X2A417);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A41A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A41D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A421);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A424);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A42C);
	op_hex		(x,	1);
	create_insn	(x=0X2A42F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A433);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A437);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A43E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A443);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A453);
	op_hex		(x,	1);
	create_insn	(x=0X2A455);
	op_hex		(x,	1);
	create_insn	(x=0X2A457);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A45B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A45E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A461);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A465);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A469);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A46D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A48C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A490);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A493);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A49B);
	op_hex		(x,	1);
	create_insn	(x=0X2A49E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4A2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2A4A6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2A4AC);
	op_hex		(x,	1);
	create_insn	(x=0X2A4AE);
	op_hex		(x,	1);
	create_insn	(x=0X2A4B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A4C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A4C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4E5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A4E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A4EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A4F4);
	op_hex		(x,	1);
	create_insn	(x=0X2A4F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A4FB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2A4FF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X2A504,	"186 - number of elem. icons?",	0);
	create_insn	(x=0X2A50D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A512);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A516);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A51A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A51F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A523);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A527);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A52C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A531);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A535);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A53A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A543);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A548);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A54D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A551);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A556);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A55B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A562);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A569);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A56D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A596);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A59A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A59D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A5A5);
	op_hex		(x,	1);
	create_insn	(x=0X2A5AF);
	op_hex		(x,	1);
	create_insn	(x=0X2A5D2);
	op_hex		(x,	1);
	create_insn	(x=0X2A5F6);
	op_hex		(x,	1);
	create_insn	(x=0X2A618);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A61C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A61F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A627);
	op_hex		(x,	1);
	create_insn	(x=0X2A631);
	op_hex		(x,	1);
	create_insn	(x=0X2A653);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A657);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A65A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A662);
	op_hex		(x,	1);
	create_insn	(x=0X2A66C);
	op_hex		(x,	1);
	create_insn	(x=0X2A68E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A692);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A695);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A69D);
	op_hex		(x,	1);
	create_insn	(x=0X2A6A7);
	op_hex		(x,	1);
	create_insn	(x=0X2A6C9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A6CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A6D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A6D8);
	op_hex		(x,	1);
	create_insn	(x=0X2A6E2);
	op_hex		(x,	1);
	create_insn	(x=0X2A704);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A708);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A70B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A713);
	op_hex		(x,	1);
	create_insn	(x=0X2A71D);
	op_hex		(x,	1);
	create_insn	(x=0X2A720);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A726);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A729);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A72F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A733);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A737);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A73C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A743);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A74B);
	op_hex		(x,	1);
	create_insn	(x=0X2A74F);
	op_hex		(x,	1);
	create_insn	(x=0X2A753);
	op_hex		(x,	1);
	create_insn	(x=0X2A755);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2A76C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A770);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A775);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A77E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A785);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A78B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A78F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A796);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A79C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A7FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A804);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A812);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A816);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A81D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A826);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A82A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A82F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A833);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A839);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A83C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A840);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A844);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A848);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A84C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A851);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A855);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A85D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A861);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A866);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A86D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A874);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A878);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A87F);
	op_hex		(x,	1);
	create_insn	(x=0X2A883);
	op_hex		(x,	1);
	create_insn	(x=0X2A887);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A88D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A89F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A8B6);
	op_hex		(x,	1);
	create_insn	(x=0X2A8B9);
	op_stkvar	(x,	0);
	create_insn	(0X2A8CA);
	create_insn	(x=0X2A8D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A8F1);
	op_hex		(x,	1);
	create_insn	(x=0X2A8F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A8FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A902);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A905);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A90B);
	op_stkvar	(x,	0);
	create_insn	(0X2A914);
	create_insn	(x=0X2A919);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A922);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A926);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A92D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A93A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A957);
	op_hex		(x,	1);
	create_insn	(x=0X2A962);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A980);
	op_hex		(x,	1);
	create_insn	(x=0X2A998);
	op_hex		(x,	1);
	create_insn	(x=0X2A99B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A9A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A9AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A9B4);
	op_hex		(x,	1);
	create_insn	(x=0X2A9CA);
	op_hex		(x,	1);
	create_insn	(x=0X2A9CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A9D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2A9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2A9E1);
	op_hex		(x,	1);
	create_insn	(x=0X2A9E3);
	op_hex		(x,	1);
	create_insn	(x=0X2A9F4);
	op_hex		(x,	1);
	create_insn	(x=0X2A9F7);
	op_stkvar	(x,	0);
	create_insn	(0X2AA01);
	create_insn	(x=0X2AA05);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AA0B);
	op_hex		(x,	1);
	create_insn	(x=0X2AA0D);
	op_hex		(x,	1);
	create_insn	(x=0X2AA0F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AA13);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AA1C);
	op_hex		(x,	1);
	create_insn	(x=0X2AA36);
	op_hex		(x,	1);
	create_insn	(x=0X2AA52);
	op_hex		(x,	1);
	create_insn	(x=0X2AA6D);
	op_hex		(x,	1);
	create_insn	(x=0X2AA88);
	op_hex		(x,	1);
	create_insn	(0X2AA8E);
	create_insn	(x=0X2AA92);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AA99);
	op_hex		(x,	1);
	create_insn	(x=0X2AA9B);
	op_hex		(x,	1);
	create_insn	(x=0X2AA9D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAA1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAAA);
	op_hex		(x,	1);
	create_insn	(x=0X2AAAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AABE);
	op_hex		(x,	1);
	create_insn	(x=0X2AAC0);
	op_hex		(x,	1);
	create_insn	(x=0X2AAC2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAC6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AACF);
	op_hex		(x,	1);
	create_insn	(x=0X2AAD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AADC);
	op_hex		(x,	1);
	create_insn	(x=0X2AADE);
	op_hex		(x,	1);
	create_insn	(x=0X2AAE0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAE4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAE8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AAED);
	op_hex		(x,	1);
	create_insn	(x=0X2AAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB02);
	op_hex		(x,	1);
	create_insn	(x=0X2AB05);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB09);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB13);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB23);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB26);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB33);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB37);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB46);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB53);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB63);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AB67);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB6B);
	op_hex		(x,	1);
	create_insn	(x=0X2AB6D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AB71);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB80);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X2AB86,	E_PREV + 0,	"Filler tests, etc.");
	create_insn	(x=0X2AB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AB9F);
	op_hex		(x,	1);
	set_cmt	(0X2ABA1,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2ABA1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2ABA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ABB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ABBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ABC3);
	op_hex		(x,	1);
	set_cmt	(0X2ABC5,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2ABC5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2ABC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ABDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ABE1);
	op_hex		(x,	1);
	create_insn	(x=0X2ABE3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2ABEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ABEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ABF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ABFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC02);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC09);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC13);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC21);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC26);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC31);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC38);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC44);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC52);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC57);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AC63);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AC73);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC82);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AC89);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AC90);
	op_hex		(x,	1);
	create_insn	(x=0X2AC94);
	op_hex		(x,	1);
	create_insn	(x=0X2AC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AC9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ACB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ACB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ACBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ACC3);
	op_hex		(x,	1);
	create_insn	(x=0X2ACC7);
	op_hex		(x,	1);
	create_insn	(x=0X2ACCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ACD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ACE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ACEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ACF2);
	op_hex		(x,	1);
	create_insn	(x=0X2ACF6);
	op_hex		(x,	1);
	create_insn	(x=0X2ACFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD12);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD26);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD2F);
	op_stkvar	(x,	0);
	create_insn	(0X2AD38);
	create_insn	(x=0X2AD49);
	op_hex		(x,	1);
	create_insn	(x=0X2AD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD54);
	op_hex		(x,	1);
	set_cmt	(0X2AD56,	"*3",	1);
	create_insn	(x=0X2AD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD60);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD64);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AD80);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AD84);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD87);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AD8F);
	op_hex		(x,	1);
	create_insn	(x=0X2AD94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AD9D);
	op_hex		(x,	1);
	create_insn	(x=0X2ADA0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2ADA9);
	op_hex		(x,	1);
	create_insn	(x=0X2ADB6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2ADBF);
	op_hex		(x,	1);
	create_insn	(x=0X2ADC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ADCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ADE1);
	op_hex		(x,	1);
	create_insn	(x=0X2ADE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ADEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ADF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2ADF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE07);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AE0D);
	op_hex		(x,	1);
	create_insn	(x=0X2AE11);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AE15);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE18);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE20);
	op_hex		(x,	1);
	create_insn	(x=0X2AE2F);
	op_hex		(x,	1);
	create_insn	(x=0X2AE32);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE36);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE46);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AE49);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE50);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE54);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AE5F);
	op_hex		(x,	1);
	create_insn	(x=0X2AE61);
	op_hex		(x,	1);
	create_insn	(x=0X2AE63);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AE67);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AE70);
	op_hex		(x,	1);
	create_insn	(x=0X2AE73);
	op_stkvar	(x,	0);
	create_insn	(0X2AE7C);
	create_insn	(x=0X2AE81);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE87);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE92);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AE96);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AE9D);
	op_hex		(x,	1);
	create_insn	(x=0X2AE9F);
	op_hex		(x,	1);
	create_insn	(x=0X2AEA1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AEA5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2AEAE);
	op_hex		(x,	1);
	create_insn	(x=0X2AEB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AEB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEC3);
	op_hex		(x,	1);
	create_insn	(x=0X2AEC5);
	op_hex		(x,	1);
	create_insn	(0X2AED6);
	create_insn	(x=0X2AEDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEED);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AEF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AEFC);
	op_hex		(x,	1);
	create_insn	(x=0X2AF04);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2AF09);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AF15);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AF1E);
	op_hex		(x,	1);
	create_insn	(x=0X2AF21);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AF25);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AF29);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AF2D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AF31);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2AF3E);
	op_hex		(x,	1);
	create_insn	(x=0X2AF41);
	op_stkvar	(x,	0);
	create_insn	(0X2AF56);
	create_insn	(0X2AF5E);
	create_insn	(0X2AF66);
	create_insn	(0X2AF6E);
	create_insn	(x=0X2AF70);
	op_hex		(x,	1);
	create_insn	(x=0X2AF77);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AF83);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AFA1);
	op_hex		(x,	1);
	create_insn	(x=0X2AFA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AFAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2AFB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2AFF6);
	op_hex		(x,	1);
	create_insn	(x=0X2AFF9);
	op_stkvar	(x,	0);
	create_insn	(0X2B003);
	create_insn	(x=0X2B008);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B011);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B015);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B019);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B020);
	op_hex		(x,	1);
	create_insn	(x=0X2B022);
	op_hex		(x,	1);
	create_insn	(x=0X2B024);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2B028);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2B031);
	op_hex		(x,	1);
	create_insn	(x=0X2B038);
	op_hex		(x,	1);
	create_insn	(x=0X2B042);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B04E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B06D);
	op_hex		(x,	1);
	create_insn	(x=0X2B070);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B074);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B078);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B080);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B088);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B08E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B095);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B099);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B09E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B0A4);
	op_hex		(x,	1);
	create_insn	(0X2B0AE);
	create_insn	(x=0X2B0B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B0D6);
	op_hex		(x,	1);
	create_insn	(x=0X2B0DB);
	op_stkvar	(x,	0);
	create_insn	(0X2B0E2);
	create_insn	(x=0X2B0F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B10A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B10E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B119);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B121);
	op_hex		(x,	1);
	create_insn	(x=0X2B125);
	op_hex		(x,	1);
	create_insn	(x=0X2B129);
	op_hex		(x,	1);
	create_insn	(x=0X2B12B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B132);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B136);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B13D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B145);
	op_hex		(x,	1);
	create_insn	(x=0X2B149);
	op_hex		(x,	1);
	create_insn	(x=0X2B14D);
	op_hex		(x,	1);
	create_insn	(x=0X2B14F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B156);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B15A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B15D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B161);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B165);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B169);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B16F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B173);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B179);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B17D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B183);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B187);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B18B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B18F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B193);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B197);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B19D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B1A7);
	op_stkvar	(x,	0);
	create_insn	(0X2B1B0);
	create_insn	(x=0X2B1C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B1D9);
	op_stkvar	(x,	0);
	create_insn	(0X2B1E4);
	create_insn	(x=0X2B1E7);
	op_hex		(x,	1);
	create_insn	(x=0X2B1EB);
	op_hex		(x,	1);
	create_insn	(x=0X2B1F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B1F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B20E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B212);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B219);
	op_hex		(x,	1);
	create_insn	(x=0X2B21D);
	op_hex		(x,	1);
	create_insn	(x=0X2B223);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B22B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B23C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B240);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B246);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B24A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B250);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_6(void) {
        auto x;
#define id x

	create_insn	(x=0X2B254);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B25D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B261);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B265);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B269);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B26D);
	op_stkvar	(x,	0);
	create_insn	(0X2B274);
	create_insn	(x=0X2B288);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B290);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B298);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B29F);
	op_stkvar	(x,	0);
	create_insn	(0X2B2A6);
	create_insn	(x=0X2B2AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B2CC);
	op_hex		(x,	1);
	create_insn	(x=0X2B2D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B2DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B2E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B2EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B2EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B2FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B300);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B30E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B315);
	op_hex		(x,	1);
	create_insn	(x=0X2B317);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B31B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B32D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B331);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B335);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B339);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B33F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B347);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B34A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B34E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B356);
	op_stkvar	(x,	0);
	create_insn	(0X2B360);
	create_insn	(x=0X2B368);
	op_hex		(x,	1);
	create_insn	(x=0X2B36A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B36E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2B378);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B37C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B382);
	op_stkvar	(x,	1);
	create_insn	(0X2B390);
	create_insn	(0X2B398);
	create_insn	(x=0X2B3B0);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2B3B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B3C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B3CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B3D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B3DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B3E1);
	op_stkvar	(x,	0);
	create_insn	(0X2B3EA);
	create_insn	(x=0X2B403);
	op_hex		(x,	1);
	create_insn	(x=0X2B407);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B40B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B40E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B416);
	op_hex		(x,	1);
	create_insn	(x=0X2B425);
	op_hex		(x,	1);
	create_insn	(x=0X2B42D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B43B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B442);
	op_stkvar	(x,	0);
	create_insn	(0X2B448);
	create_insn	(x=0X2B44F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B45A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B45E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B462);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B465);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B46C);
	op_hex		(x,	1);
	create_insn	(x=0X2B46E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B472);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B484);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B488);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B48D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B49A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B4A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B4AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B4B4);
	op_hex		(x,	1);
	create_insn	(x=0X2B4B8);
	op_hex		(x,	1);
	create_insn	(x=0X2B4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B4C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B4D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B4D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B4E3);
	op_hex		(x,	1);
	create_insn	(x=0X2B4E7);
	op_hex		(x,	1);
	create_insn	(x=0X2B4EB);
	op_hex		(x,	1);
	create_insn	(x=0X2B4ED);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B4FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B507);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B50B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B513);
	op_hex		(x,	1);
	create_insn	(x=0X2B517);
	op_hex		(x,	1);
	create_insn	(x=0X2B51B);
	op_hex		(x,	1);
	create_insn	(x=0X2B51D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B524);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B52A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B536);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B53A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B53D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B544);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B548);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B54F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B553);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B55D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B566);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B585);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B589);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B58C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B594);
	op_hex		(x,	1);
	create_insn	(x=0X2B5A6);
	op_hex		(x,	1);
	create_insn	(x=0X2B5A9);
	op_stkvar	(x,	0);
	create_insn	(0X2B5B3);
	create_insn	(0X2B5BA);
	create_insn	(x=0X2B5C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B5D0);
	op_stkvar	(x,	0);
	create_insn	(0X2B5DA);
	create_insn	(x=0X2B5E7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B5EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B5EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B5F6);
	op_hex		(x,	1);
	create_insn	(x=0X2B608);
	op_hex		(x,	1);
	create_insn	(x=0X2B60B);
	op_stkvar	(x,	0);
	create_insn	(0X2B615);
	create_insn	(0X2B61C);
	create_insn	(x=0X2B62D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B635);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B639);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B63C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B644);
	op_hex		(x,	1);
	create_insn	(x=0X2B647);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B64A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B64F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B668);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B66B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B674);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B67E);
	op_stkvar	(x,	0);
	create_insn	(0X2B688);
	create_insn	(x=0X2B68D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B6A1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B6A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B6A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B6B0);
	op_hex		(x,	1);
	create_insn	(x=0X2B6C2);
	op_hex		(x,	1);
	create_insn	(0X2B6CE);
	create_insn	(x=0X2B6D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B6D9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B6EA);
	op_hex		(x,	1);
	set_cmt	(0X2B6ED,	"int",	0);
	set_cmt	(0X2B6EE,	"int",	0);
	create_insn	(x=0X2B6EF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B6F2,	"int",	0);
	create_insn	(x=0X2B6F3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B6F7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B6FA,	"char *",	0);
	create_insn	(x=0X2B700);
	op_hex		(x,	1);
	create_insn	(x=0X2B706);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B709,	"char *",	0);
	create_insn	(x=0X2B70A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B70D,	"int",	0);
	create_insn	(x=0X2B70E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B712);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B715,	"char *",	0);
	create_insn	(x=0X2B71B);
	op_hex		(x,	1);
	create_insn	(0X2B725);
	create_insn	(x=0X2B736);
	op_hex		(x,	1);
	create_insn	(x=0X2B73E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B745);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B74C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B750);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B755);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B75C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B766);
	op_stkvar	(x,	0);
	create_insn	(0X2B774);
	create_insn	(x=0X2B779);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B77C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B78D);
	op_hex		(x,	1);
	set_cmt	(0X2B790,	"int",	0);
	set_cmt	(0X2B791,	"int",	0);
	create_insn	(x=0X2B792);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B796);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B799,	"char *",	0);
	create_insn	(x=0X2B79F);
	op_hex		(x,	1);
	create_insn	(x=0X2B7A6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B7A9,	"char *",	0);
	create_insn	(x=0X2B7AA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B7AD,	"int",	0);
	create_insn	(x=0X2B7AE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B7B2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X2B7B5,	"char *",	0);
	create_insn	(x=0X2B7BB);
	op_hex		(x,	1);
	create_insn	(x=0X2B7BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B7C3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B7CC);
	op_hex		(x,	1);
	create_insn	(x=0X2B7E0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B7F1);
	op_hex		(x,	1);
	create_insn	(x=0X2B803);
	op_hex		(x,	1);
	create_insn	(x=0X2B80D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B812);
	op_stkvar	(x,	0);
	set_cmt	(0X2B819,	".trk size",	0);
	create_insn	(x=0X2B827);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B830);
	op_hex		(x,	1);
	create_insn	(x=0X2B842);
	op_hex		(x,	1);
	create_insn	(x=0X2B856);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B867);
	op_hex		(x,	1);
	create_insn	(x=0X2B876);
	op_hex		(x,	1);
	create_insn	(x=0X2B879);
	op_stkvar	(x,	0);
	create_insn	(0X2B880);
	create_insn	(x=0X2B884);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B88C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B891);
	op_stkvar	(x,	0);
	create_insn	(0X2B89B);
	create_insn	(x=0X2B8A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B8B8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B8BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B8BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B8C7);
	op_hex		(x,	1);
	create_insn	(x=0X2B8D9);
	op_hex		(x,	1);
	create_insn	(x=0X2B8E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B8EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B8FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B902);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B906);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B910);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B913);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B917);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B91B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B91E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B922);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B928);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B92F);
	op_hex		(x,	1);
	create_insn	(x=0X2B931);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B935);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B947);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B94B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B94F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B953);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B957);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B95B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B962);
	op_hex		(x,	1);
	create_insn	(x=0X2B964);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2B968);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B977);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B97E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B983);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B987);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B98E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B996);
	op_hex		(x,	1);
	create_insn	(x=0X2B99A);
	op_hex		(x,	1);
	create_insn	(x=0X2B99E);
	op_hex		(x,	1);
	create_insn	(x=0X2B9A0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B9A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9B9);
	op_hex		(x,	1);
	create_insn	(x=0X2B9BD);
	op_hex		(x,	1);
	create_insn	(x=0X2B9C1);
	op_hex		(x,	1);
	create_insn	(x=0X2B9C3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2B9CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2B9FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2B9FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA0B);
	op_hex		(x,	1);
	create_insn	(x=0X2BA0D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BA11);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA23);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA34);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA47);
	op_hex		(x,	1);
	create_insn	(x=0X2BA49);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BA4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA63);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA68);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BA6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA77);
	op_hex		(x,	1);
	create_insn	(x=0X2BA7B);
	op_hex		(x,	1);
	create_insn	(x=0X2BA7F);
	op_hex		(x,	1);
	create_insn	(x=0X2BA81);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BA9F);
	op_hex		(x,	1);
	create_insn	(x=0X2BAA1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BAA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BAC3);
	op_hex		(x,	1);
	create_insn	(x=0X2BAC5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BAC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BAE7);
	op_hex		(x,	1);
	create_insn	(x=0X2BAE9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BAED);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB01);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB08);
	op_hex		(x,	1);
	create_insn	(x=0X2BB0A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BB0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB21);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB28);
	op_hex		(x,	1);
	create_insn	(x=0X2BB2A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BB2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB46);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB58);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB61);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB67);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB74);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB82);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BB8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BB99);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBA9);
	op_stkvar	(x,	0);
	create_insn	(0X2BBB3);
	create_insn	(x=0X2BBB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BBBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BBD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BBDA);
	op_hex		(x,	1);
	create_insn	(x=0X2BBDE);
	op_hex		(x,	1);
	create_insn	(x=0X2BBE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BBFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC06);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BC0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC10);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BC1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BC2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC37);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC41);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BC48);
	op_hex		(x,	1);
	create_insn	(x=0X2BC4C);
	op_hex		(x,	1);
	create_insn	(x=0X2BC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BC56);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BC68);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC70);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC78);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC82);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC90);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BC9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BCA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BCD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BCED);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BCF4);
	op_hex		(x,	1);
	create_insn	(x=0X2BCF8);
	op_hex		(x,	1);
	create_insn	(x=0X2BCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD02);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD14);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD20);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD26);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD30);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD35);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD45);
	op_stkvar	(x,	0);
	create_byte	(0X2BD4C);
	make_array	(0X2BD4C,	0X2);
	create_insn	(x=0X2BD4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD55);
	op_hex		(x,	1);
	create_insn	(x=0X2BD59);
	op_hex		(x,	1);
	create_insn	(x=0X2BD5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD63);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BD79);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD81);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD89);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD90);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD97);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BD9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BDA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BDB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDBE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BDD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BDE5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2BDED);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BDF4);
	op_stkvar	(x,	1);
	create_insn	(0X2BDFE);
	create_insn	(0X2BE06);
	create_insn	(0X2BE10);
	create_insn	(0X2BE18);
	create_insn	(0X2BE1A);
	create_insn	(0X2BE22);
	create_insn	(0X2BE2A);
	create_insn	(0X2BE32);
	create_insn	(x=0X2BE3A);
	op_stkvar	(x,	0);
	create_insn	(0X2BE44);
	create_insn	(x=0X2BE51);
	op_hex		(x,	1);
	create_insn	(x=0X2BE54);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE58);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE61);
	op_hex		(x,	1);
	create_insn	(x=0X2BE64);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE68);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE71);
	op_hex		(x,	1);
	create_insn	(x=0X2BE74);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE78);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE81);
	op_hex		(x,	1);
	create_insn	(x=0X2BE84);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE88);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE91);
	op_hex		(x,	1);
	create_insn	(x=0X2BE94);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE97);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BE9F);
	op_hex		(x,	1);
	create_insn	(x=0X2BEA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BEA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BEAD);
	op_hex		(x,	1);
	create_insn	(0X2BEB6);
	set_name	(0X2BEB6,	"preRender_icons");
	create_insn	(x=0X2BEB9);
	op_hex		(x,	1);
	create_insn	(x=0X2BEBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BEC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BECD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BEDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BEF2);
	op_hex		(x,	1);
	create_insn	(x=0X2BEF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BEFC);
	op_hex		(x,	1);
	create_insn	(x=0X2BF00);
	op_hex		(x,	1);
	create_insn	(x=0X2BF04);
	op_hex		(x,	1);
	create_insn	(x=0X2BF06);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2BF18);
	create_insn	(0X2BF20);
	create_insn	(x=0X2BF22);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF47);
	op_hex		(x,	1);
	create_insn	(x=0X2BF4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF57);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF62);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF67);
	op_hex		(x,	1);
	create_insn	(x=0X2BF69);
	op_hex		(x,	1);
	create_insn	(x=0X2BF6B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2BF6F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X2BF73,	"renders the \"surroundings\"",	0);
	create_insn	(x=0X2BF78);
	op_hex		(x,	1);
	create_insn	(x=0X2BF7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF93);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BF98);
	op_hex		(x,	1);
	create_insn	(x=0X2BF9A);
	op_hex		(x,	1);
	create_insn	(x=0X2BF9C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2BFA0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_cmt	(0X2BFA4,	"renders the \"filling\" of the icons",	0);
	create_insn	(x=0X2BFA9);
	op_hex		(x,	1);
	create_insn	(x=0X2BFAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BFAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BFBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BFC4);
	op_hex		(x,	1);
	create_insn	(x=0X2BFC8);
	op_hex		(x,	1);
	create_insn	(x=0X2BFCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2BFE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BFE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2BFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C001);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C006);
	op_hex		(x,	1);
	create_insn	(x=0X2C008);
	op_hex		(x,	1);
	create_insn	(x=0X2C00A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C00E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C027);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C034);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C041);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C059);
	op_hex		(x,	1);
	create_insn	(x=0X2C05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C069);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C081);
	op_hex		(x,	1);
	create_insn	(x=0X2C084);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C092);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C095);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C09B);
	op_stkvar	(x,	0);
	create_insn	(0X2C0A2);
	create_insn	(0X2C0A8);
	set_name	(0X2C0A8,	"draw_2DtrackMap");
	create_insn	(x=0X2C0AB);
	op_hex		(x,	1);
	create_insn	(x=0X2C0B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C0B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C0C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C0E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C0ED);
	op_hex		(x,	1);
	create_insn	(x=0X2C0EF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C0F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C109);
	op_hex		(x,	1);
	create_insn	(x=0X2C10B);
	op_hex		(x,	1);
	create_insn	(x=0X2C10D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C111);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C11A);
	op_hex		(x,	1);
	create_insn	(x=0X2C11D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C123);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C139);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C140);
	op_hex		(x,	1);
	create_insn	(x=0X2C142);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C148);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C15D);
	op_hex		(x,	1);
	create_insn	(x=0X2C15F);
	op_hex		(x,	1);
	create_insn	(x=0X2C161);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C165);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C16E);
	op_hex		(x,	1);
	create_insn	(x=0X2C171);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C177);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C18D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C194);
	op_hex		(x,	1);
	set_cmt	(0X2C196,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2C196);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C1B0);
	op_hex		(x,	1);
	create_insn	(x=0X2C1B2);
	op_hex		(x,	1);
	create_insn	(x=0X2C1B4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C1B8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C1C1);
	op_hex		(x,	1);
	create_insn	(x=0X2C1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C1CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C1E7);
	op_hex		(x,	1);
	set_cmt	(0X2C1E9,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2C1E9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C1EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C203);
	op_hex		(x,	1);
	create_insn	(x=0X2C205);
	op_hex		(x,	1);
	create_insn	(x=0X2C207);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C20B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C214);
	op_hex		(x,	1);
	create_insn	(x=0X2C21A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C223);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C22C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C235);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C23B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C251);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C258);
	op_hex		(x,	1);
	create_insn	(x=0X2C25A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C260);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C274);
	op_hex		(x,	1);
	create_insn	(x=0X2C276);
	op_hex		(x,	1);
	create_insn	(x=0X2C278);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C27C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C285);
	op_hex		(x,	1);
	create_insn	(x=0X2C288);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C28E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2AB);
	op_hex		(x,	1);
	set_cmt	(0X2C2AD,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2C2AD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C2B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2C8);
	op_hex		(x,	1);
	create_insn	(x=0X2C2CA);
	op_hex		(x,	1);
	create_insn	(x=0X2C2CC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C2D0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C2D9);
	op_hex		(x,	1);
	create_insn	(x=0X2C2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C2FF);
	op_hex		(x,	1);
	set_cmt	(0X2C301,	"is really trackrows[bx -1]",	0);
	create_insn	(x=0X2C301);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C307);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C31E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C324);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C327);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C32F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C332);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C348);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C352);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C357);
	op_hex		(x,	1);
	create_insn	(x=0X2C359);
	op_hex		(x,	1);
	create_insn	(x=0X2C35B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C35F);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C368);
	op_hex		(x,	1);
	create_insn	(x=0X2C36B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C36E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C374);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C377);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C382);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C38B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C38E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C391);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C398);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C39B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3D3);
	op_hex		(x,	1);
	create_insn	(x=0X2C3D5);
	op_hex		(x,	1);
	create_insn	(x=0X2C3D7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C3DB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C3E4);
	op_hex		(x,	1);
	create_insn	(x=0X2C3E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C3EE);
	op_hex		(x,	1);
	create_insn	(x=0X2C3F2);
	op_hex		(x,	1);
	create_insn	(x=0X2C3F6);
	op_hex		(x,	1);
	create_insn	(x=0X2C3F8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2C40E);
	create_insn	(0X2C416);
	create_insn	(x=0X2C41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C426);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C430);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C435);
	op_hex		(x,	1);
	create_insn	(x=0X2C437);
	op_hex		(x,	1);
	create_insn	(x=0X2C439);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C43D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C446);
	op_hex		(x,	1);
	create_insn	(x=0X2C449);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C455);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C45F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C464);
	op_hex		(x,	1);
	create_insn	(x=0X2C466);
	op_hex		(x,	1);
	create_insn	(x=0X2C468);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C46C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C478);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C47E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C494);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C49B);
	op_hex		(x,	1);
	create_insn	(x=0X2C49D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C4A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C4B7);
	op_hex		(x,	1);
	create_insn	(x=0X2C4B9);
	op_hex		(x,	1);
	create_insn	(x=0X2C4BB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C4BF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C4C8);
	op_hex		(x,	1);
	create_insn	(x=0X2C4CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C4D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C4E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C4E6);
	op_hex		(x,	1);
	create_insn	(x=0X2C4E8);
	op_hex		(x,	1);
	create_insn	(x=0X2C4EA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C4EE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C4F7);
	op_hex		(x,	1);
	create_insn	(x=0X2C4FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C506);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C510);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C516);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C532);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C539);
	op_hex		(x,	1);
	create_insn	(x=0X2C53B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C541);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C558);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C574);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C57B);
	op_hex		(x,	1);
	create_insn	(x=0X2C57D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C583);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C598);
	op_hex		(x,	1);
	create_insn	(x=0X2C59A);
	op_hex		(x,	1);
	create_insn	(x=0X2C59C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C5A0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C5A9);
	op_hex		(x,	1);
	create_insn	(x=0X2C5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C5B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C5CF);
	op_hex		(x,	1);
	create_insn	(x=0X2C5D1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C5D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C5EB);
	op_hex		(x,	1);
	create_insn	(x=0X2C5ED);
	op_hex		(x,	1);
	create_insn	(x=0X2C5EF);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C5F3);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C5FC);
	op_hex		(x,	1);
	create_insn	(x=0X2C5FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C605);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C61B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C622);
	op_hex		(x,	1);
	create_insn	(x=0X2C624);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C62F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C635);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C638);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C63E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C641);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C657);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C65B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C662);
	op_hex		(x,	1);
	create_insn	(x=0X2C664);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C669);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C67A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C67D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C680);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C691);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C694);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C699);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C69C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C6A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C6AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C6B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C6B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C6BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C6C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C6CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C6D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C6E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C6F0);
	op_hex		(x,	1);
	create_insn	(x=0X2C6F2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C70C);
	op_hex		(x,	1);
	create_insn	(x=0X2C70E);
	op_hex		(x,	1);
	create_insn	(x=0X2C710);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C714);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C71D);
	op_hex		(x,	1);
	create_insn	(x=0X2C720);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C726);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C743);
	op_hex		(x,	1);
	create_insn	(x=0X2C745);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C74B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C75F);
	op_hex		(x,	1);
	create_insn	(x=0X2C761);
	op_hex		(x,	1);
	create_insn	(x=0X2C763);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C767);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C770);
	op_hex		(x,	1);
	create_insn	(x=0X2C773);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C779);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C78F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C796);
	op_hex		(x,	1);
	create_insn	(x=0X2C798);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C79E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C7B3);
	op_hex		(x,	1);
	create_insn	(x=0X2C7B5);
	op_hex		(x,	1);
	create_insn	(x=0X2C7B7);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C7BB);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2C7C4);
	op_hex		(x,	1);
	create_insn	(x=0X2C7C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C7CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C7E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C7EA);
	op_hex		(x,	1);
	create_insn	(x=0X2C7EC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2C7F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C7F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C7FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C803);
	op_hex		(x,	1);
	create_insn	(x=0X2C807);
	op_hex		(x,	1);
	create_insn	(x=0X2C809);
	op_hex		(x,	1);
	create_insn	(x=0X2C80B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C80E);
	op_stkvar	(x,	0);
	create_insn	(0X2C816);
	create_insn	(0X2C81C);
	create_insn	(x=0X2C81F);
	op_hex		(x,	1);
	create_insn	(x=0X2C828);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C82C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C834);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C83A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C83F);
	op_hex		(x,	1);
	create_insn	(x=0X2C848);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C84E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C853);
	op_hex		(x,	1);
	create_insn	(x=0X2C859);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C86A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C870);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C875);
	op_hex		(x,	1);
	create_insn	(x=0X2C87B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C88A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C88D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8B5);
	op_hex		(x,	1);
	create_insn	(x=0X2C8BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8DF);
	op_hex		(x,	1);
	create_insn	(x=0X2C8E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8EB);
	op_hex		(x,	1);
	create_insn	(x=0X2C8F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C8FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C903);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C906);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C90F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C916);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C91B);
	op_hex		(x,	1);
	create_insn	(x=0X2C92C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C93E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C945);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C94A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C950);
	op_stkvar	(x,	1);
	create_insn	(0X2C960);
	create_insn	(x=0X2C96D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C971);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C976);
	op_hex		(x,	1);
	create_insn	(x=0X2C97C);
	op_stkvar	(x,	1);
	make_array	(0X2C98D,	0X3);
	create_insn	(x=0X2C990);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C993);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C999);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C9A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C9AA);
	op_stkvar	(x,	1);
	create_insn	(0X2C9B4);
	create_insn	(x=0X2C9B7);
	op_hex		(x,	1);
	create_insn	(x=0X2C9BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C9CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2C9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2C9DC);
	op_hex		(x,	1);
	create_insn	(x=0X2C9E0);
	op_hex		(x,	1);
	create_insn	(x=0X2C9E4);
	op_hex		(x,	1);
	create_insn	(0X2C9F8);
	create_insn	(0X2CA00);
	create_insn	(x=0X2CA02);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA0E);
	op_hex		(x,	1);
	create_insn	(x=0X2CA10);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CA2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA32);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA36);
	op_hex		(x,	1);
	create_insn	(x=0X2CA38);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA66);
	op_hex		(x,	1);
	create_insn	(x=0X2CA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA74);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CA79);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CA7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CA87);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CA8D);
	op_hex		(x,	1);
	create_insn	(x=0X2CA93);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CAA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CAB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CAC2);
	op_hex		(x,	1);
	create_insn	(x=0X2CAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CAD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CAE4);
	op_hex		(x,	1);
	create_insn	(x=0X2CAEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CAFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CAFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CB02);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB1A);
	op_hex		(x,	1);
	create_insn	(x=0X2CB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB28);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB3C);
	op_hex		(x,	1);
	create_insn	(x=0X2CB3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CB52);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB66);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB96);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CB9A);
	op_hex		(x,	1);
	create_insn	(x=0X2CB9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CBD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CBDC);
	op_hex		(x,	1);
	create_insn	(x=0X2CBE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CBF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CBFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CBFE);
	op_hex		(x,	1);
	create_insn	(x=0X2CC00);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CC13);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CC38);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CC3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CC43);
	op_stkvar	(x,	0);
	create_insn	(0X2CC4C);
	create_byte	(0X2CC52);
	make_array	(0X2CC52,	0X10);
	create_insn	(x=0X2CC62);
	op_hex		(x,	1);
	set_name	(0X2CC62,	"start");
	set_cmt	(0X2CC64,	"DOS - GET DOS VERSION\nReturn: AL = major version number (00h for DOS 1.x)",	0);
	create_insn	(x=0X2CC64);
	op_hex		(x,	0);
	set_cmt	(0X2CC6A,	"DOS - PROGRAM TERMINATION\nreturns to DOS--identical to INT 21/AH=00h",	0);
	create_insn	(x=0X2CC6A);
	op_hex		(x,	0);
	create_insn	(x=0X2CC6C);
	op_seg		(x,	1);
	set_cmt	(0X2CC6F,	"pspseg:2 = Memory size in paragraphs \n           top of memory in segment (paragraph) form",	0);
	set_cmt	(0X2CC7B,	"si = 1000h or memory size if less than 1000h",	0);
	set_cmt	(0X2CC7F,	"ss = dseg",	0);
	set_cmt	(0X2CC81,	"sp = end of stack in data segment",	0);
	create_insn	(x=0X2CC81);
	op_hex		(x,	1);
	set_cmt	(0X2CC86,	"check for overflow and abort if there was more than 64k data+stack",	0);
	create_insn	(x=0X2CC97);
	op_hex		(x,	1);
	set_cmt	(0X2CC9A,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X2CC9A);
	op_hex		(x,	0);
	create_insn	(x=0X2CC9C);
	op_hex		(x,	1);
	set_name	(0X2CC9C,	"_no_stack_overflow");
	set_cmt	(0X2CCB0,	"ax = (01000h << 4) - 1 = 0ffffh",	0);
	set_cmt	(0X2CCB6,	"set memory size in psp?, si = 01000h + dseg",	0);
	set_cmt	(0X2CCB6,	"si = 01000h + dseg",	1);
	create_insn	(x=0X2CCB6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X2CCBA,	"es = pspseg on startup",	0);
	set_cmt	(0X2CCBE,	"bx = -(pspseg - si) = -(pspseg - (1000h + dseg))",	0);
	create_insn	(x=0X2CCC0);
	op_hex		(x,	1);
	set_cmt	(0X2CCC2,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X2CCC2);
	op_hex		(x,	0);
	set_cmt	(0X2CCCC,	"offset in dseg where uninitialized data starts",	0);
	set_cmt	(0X2CCCF,	"original size/end of dseg",	0);
	set_cmt	(0X2CCD6,	"initialize uninitialized data to 0",	0);
	create_insn	(0X2CCDF);
	set_cmt	(0X2CCF1,	"p_argv",	0);
	set_cmt	(0X2CCF5,	"p_argc",	0);
	create_insn	(x=0X2CD04);
	op_seg		(x,	1);
	set_name	(0X2CD04,	"__cintDIV");
	create_insn	(x=0X2CD0C);
	op_plain_offset	(x,	1,	0X2CC50);
	op_plain_offset	(x,	129,	0X2CC50);
	set_name	(0X2CD13,	"__amsg_exit");
	create_insn	(x=0X2CD23);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2CD28);
	op_hex		(x,	1);
	set_cmt	(0X2CD2A,	"DOS - GET DOS VERSION\nReturn: AL = major version number (00h for DOS 1.x)",	0);
	create_insn	(x=0X2CD2A);
	op_hex		(x,	0);
	create_insn	(x=0X2CD2C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2CD2F);
	op_hex		(x,	1);
	set_cmt	(0X2CD32,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector",	0);
	create_insn	(x=0X2CD32);
	op_hex		(x,	0);
	create_insn	(x=0X2CD34);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2CD38);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X2CD3E);
	op_hex		(x,	1);
	create_insn	(x=0X2CD41);
	op_plain_offset	(x,	1,	0X2CC50);
	op_plain_offset	(x,	129,	0X2CC50);
	set_cmt	(0X2CD44,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2CD44);
	op_hex		(x,	0);
	set_cmt	(0X2CD52,	"si = environment segment",	0);
	create_insn	(0X2CD6B);
	set_cmt	(0X2CD80,	"es:2C = environment segment",	0);
	create_insn	(x=0X2CD94);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2CDA6);
	create_insn	(x=0X2CDAC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDC0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2CDC5);
	op_hex		(x,	1);
	set_cmt	(0X2CDC8,	"DOS - 2+ - IOCTL - GET DEVICE INFORMATION\nBX = file or device handle",	0);
	create_insn	(x=0X2CDC8);
	op_hex		(x,	0);
	create_insn	(x=0X2CDCC);
	op_hex		(x,	1);
	create_insn	(x=0X2CDD1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2CDD9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDDC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDE2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDE5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2CDEC);
	set_name	(0X2CDEC,	"libsub_quit_to_dos_alt");
	create_insn	(x=0X2CDEF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDF2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDF8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CDFB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2CE03);
	set_name	(0X2CE03,	"libsub_quit_to_dos");
	create_insn	(x=0X2CE06);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CE09);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CE0F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CE12);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2CE21);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CE27);
	op_stkvar	(x,	0);
	create_insn	(x=0X2CE32);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X2CE39);
	op_hex		(x,	1);
	set_cmt	(0X2CE3B,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X2CE3B);
	op_hex		(x,	0);
	create_insn	(x=0X2CE43);
	op_stkvar	(x,	1);
	create_insn	(x=0X2CE46);
	op_hex		(x,	1);
	set_cmt	(0X2CE48,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X2CE48);
	op_hex		(x,	0);
	create_insn	(0X2CE4A);
	create_insn	(x=0X2CE5C);
	op_hex		(x,	1);
	set_cmt	(0X2CE5F,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2CE5F);
	op_hex		(x,	0);
	create_insn	(x=0X2CE71);
	op_hex		(x,	1);
	set_cmt	(0X2CE73,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2CE73);
	op_hex		(x,	0);
	create_insn	(0X2CE77);
	create_insn	(0X2CE89);
	create_insn	(0X2CE8A);
	set_name	(0X2CE8A,	"__FF_MSGBANNER");
	create_insn	(0X2CEAE);
	set_name	(0X2CEAE,	"__fptrap");
	create_insn	(0X2CEB4);
	set_name	(0X2CEB4,	"__chkstk");
	create_insn	(0X2CEC7);
	create_insn	(0X2CED2);
	create_insn	(0X2CED8);
	set_name	(0X2CED8,	"__nullcheck");
	create_insn	(x=0X2CEE6);
	op_hex		(x,	1);
	create_insn	(0X2CEFE);
	set_name	(0X2CEFE,	"__setargv");
	set_cmt	(0X2CF13,	"es:2c = environemtn segment",	0);
	create_insn	(0X2CF71);
	create_insn	(0X2CF81);
	create_insn	(x=0X2CF83);
	op_hex		(x,	1);
	create_insn	(x=0X2CF87);
	op_hex		(x,	1);
	create_insn	(0X2CF8D);
	create_insn	(0X2CFA2);
	create_insn	(0X2CFB2);
	create_insn	(x=0X2CFB4);
	op_hex		(x,	1);
	create_insn	(x=0X2CFB8);
	op_hex		(x,	1);
	create_insn	(0X2CFBE);
	create_insn	(x=0X2CFC7);
	op_hex		(x,	1);
	create_insn	(x=0X2CFCB);
	op_hex		(x,	1);
	create_insn	(0X2CFF4);
	create_insn	(0X2D007);
	create_insn	(0X2D00E);
	create_insn	(0X2D030);
	create_insn	(0X2D042);
	create_insn	(x=0X2D044);
	op_hex		(x,	1);
	create_insn	(0X2D04F);
	create_insn	(0X2D064);
	create_insn	(0X2D076);
	create_insn	(x=0X2D078);
	op_hex		(x,	1);
	create_insn	(0X2D083);
	create_insn	(0X2D090);
	set_name	(0X2D090,	"__setenvp");
	set_cmt	(0X2D0A0,	"cx = 0ffffh",	0);
	set_cmt	(0X2D0A1,	"psp:2c = environment segment",	0);
	create_insn	(x=0X2D0A1);
	set_cmt	(0X2D0B1,	"empty environment?",	0);
	set_cmt	(0X2D0B5,	"count x=y strings in environment",	0);
	set_cmt	(0X2D0B6,	"two nulls in a row = end of environment",	0);
	set_cmt	(0X2D0B9,	"bp = number of envirment strings",	0);
	set_cmt	(0X2D0BA,	"set ax to number of bytes in environent, di to 0",	0);
	create_insn	(x=0X2D0BC);
	op_hex		(x,	1);
	set_cmt	(0X2D0BE,	"di = number of environment strings",	0);
	create_insn	(x=0X2D0C0);
	op_hex		(x,	1);
	set_cmt	(0X2D0C2,	"ax = ((envsize+1)&FFFE) + numstrings*2",	0);
	set_cmt	(0X2D0CE,	"cx = number of environment strings",	0);
	set_cmt	(0X2D0D0,	"bp = old crtsp1 (was changed in myalloc)",	0);
	set_cmt	(0X2D0D2,	"ax = old bp = numstrings*2",	0);
	set_cmt	(0X2D0E1,	"if the env string does not start with \"C;\" (or ;C) put its ofs at ds:bp",	0);
	create_insn	(x=0X2D0E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D0F4);
	op_stkvar	(x,	0);
	create_insn	(0X2D0FE);
	set_name	(0X2D0FE,	"__NMSG_TEXT");
	create_insn	(x=0X2D105);
	op_stkvar	(x,	1);
	create_insn	(0X2D120);
	create_insn	(0X2D129);
	set_name	(0X2D129,	"__NMSG_WRITE");
	create_insn	(x=0X2D12D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D149);
	op_hex		(x,	1);
	set_cmt	(0X2D14B,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X2D14B);
	op_hex		(x,	0);
	create_insn	(0X2D154);
	set_name	(0X2D154,	"__myalloc");
	create_insn	(x=0X2D166);
	op_hex		(x,	1);
	create_insn	(x=0X2D17A);
	op_hex		(x,	1);
	set_cmt	(0X2D17C,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X2D17C);
	op_hex		(x,	0);
	create_insn	(x=0X2D181);
	op_hex		(x,	1);
	create_insn	(0X2D191);
	create_insn	(0X2D196);
	set_name	(0X2D196,	"__dosret0");
	create_insn	(0X2D19E);
	set_name	(0X2D19E,	"__dosreturn");
	create_insn	(0X2D1A9);
	set_name	(0X2D1A9,	"__dosretax");
	create_insn	(0X2D1B6);
	set_name	(0X2D1B6,	"__maperror");
	create_insn	(0X2D1BC);
	create_byte	(0X2D1D6);
	create_insn	(0X2D1D7);
	create_insn	(0X2D1E6);
	create_insn	(0X2D1EA);
	set_name	(0X2D1EA,	"_flushall");
	create_insn	(x=0X2D1ED);
	op_hex		(x,	1);
	create_insn	(x=0X2D1FA);
	op_hex		(x,	1);
	set_cmt	(0X2D200,	"FILE *",	0);
	create_insn	(x=0X2D206);
	op_hex		(x,	1);
	create_insn	(0X2D21E);
	set_name	(0X2D21E,	"_printf");
	create_insn	(x=0X2D221);
	op_hex		(x,	1);
	create_insn	(x=0X2D229);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D22C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D235);
	op_hex		(x,	1);
	create_insn	(x=0X2D23A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D23E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D247);
	op_hex		(x,	1);
	create_insn	(x=0X2D24A);
	op_stkvar	(x,	0);
	set_cmt	(0X2D24D,	"FILE *",	0);
	set_cmt	(0X2D24E,	"int",	0);
	create_insn	(x=0X2D254);
	op_hex		(x,	1);
	create_insn	(x=0X2D257);
	op_stkvar	(x,	1);
	create_insn	(0X2D260);
	set_name	(0X2D260,	"__flsbuf");
	create_insn	(x=0X2D263);
	op_hex		(x,	1);
	create_insn	(x=0X2D268);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D26F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D27D);
	op_hex		(x,	1);
	create_insn	(x=0X2D281);
	op_hex		(x,	1);
	create_insn	(x=0X2D286);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D289);
	op_hex		(x,	1);
	create_insn	(x=0X2D28F);
	op_hex		(x,	1);
	create_insn	(x=0X2D295);
	op_hex		(x,	1);
	create_insn	(x=0X2D2A0);
	op_hex		(x,	1);
	create_insn	(x=0X2D2A6);
	op_hex		(x,	1);
	create_insn	(x=0X2D2AA);
	op_hex		(x,	1);
	create_insn	(x=0X2D2B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D2B8);
	op_hex		(x,	1);
	create_insn	(x=0X2D2CA);
	op_hex		(x,	1);
	create_insn	(x=0X2D2CE);
	op_hex		(x,	1);
	create_insn	(x=0X2D2D0);
	op_hex		(x,	1);
	set_cmt	(0X2D2E3,	"int",	0);
	create_insn	(x=0X2D2E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D2EB);
	op_hex		(x,	1);
	create_insn	(0X2D302);
	create_insn	(x=0X2D30A);
	op_stkvar	(x,	1);
	create_insn	(0X2D318);
	create_insn	(x=0X2D31C);
	op_hex		(x,	1);
	create_insn	(x=0X2D31F);
	op_hex		(x,	1);
	create_insn	(x=0X2D331);
	op_hex		(x,	1);
	create_insn	(x=0X2D335);
	op_hex		(x,	1);
	create_insn	(x=0X2D337);
	op_hex		(x,	1);
	create_insn	(x=0X2D349);
	op_stkvar	(x,	1);
	set_cmt	(0X2D358,	"void *",	0);
	set_cmt	(0X2D35B,	"int",	0);
	create_insn	(x=0X2D35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D363);
	op_hex		(x,	1);
	create_insn	(x=0X2D366);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D36F);
	op_hex		(x,	1);
	set_cmt	(0X2D379,	"int",	0);
	set_cmt	(0X2D37D,	"__int32",	0);
	set_cmt	(0X2D37E,	"int",	0);
	create_insn	(x=0X2D384);
	op_hex		(x,	1);
	create_insn	(x=0X2D38A);
	op_stkvar	(x,	1);
	create_insn	(0X2D392);
	create_insn	(x=0X2D398);
	op_stkvar	(x,	1);
	set_cmt	(0X2D39B,	"void *",	0);
	set_cmt	(0X2D39C,	"int",	0);
	create_insn	(x=0X2D39C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D3A4);
	op_hex		(x,	1);
	create_insn	(x=0X2D3A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D3AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D3B2);
	op_stkvar	(x,	1);
	create_insn	(0X2D3BE);
	set_name	(0X2D3BE,	"__getbuf");
	create_insn	(x=0X2D3C1);
	op_hex		(x,	1);
	create_insn	(x=0X2D3C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D3D1);
	op_hex		(x,	1);
	create_insn	(x=0X2D3D5);
	op_hex		(x,	1);
	create_insn	(x=0X2D3DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D3E6);
	op_hex		(x,	1);
	create_insn	(x=0X2D3E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D3F3);
	op_hex		(x,	1);
	create_insn	(x=0X2D3F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D402);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D405);
	op_hex		(x,	1);
	create_insn	(x=0X2D409);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D410);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D418);
	op_stkvar	(x,	1);
	create_insn	(0X2D42C);
	set_name	(0X2D42C,	"__stbuf");
	create_insn	(x=0X2D42F);
	op_hex		(x,	1);
	create_insn	(x=0X2D433);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D440);
	op_stkvar	(x,	0);
	create_insn	(0X2D448);
	create_insn	(x=0X2D44E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D453);
	op_hex		(x,	1);
	create_insn	(x=0X2D465);
	op_hex		(x,	1);
	create_insn	(x=0X2D469);
	op_hex		(x,	1);
	create_insn	(x=0X2D46B);
	op_hex		(x,	1);
	create_insn	(0X2D476);
	create_insn	(x=0X2D481);
	op_hex		(x,	1);
	create_insn	(x=0X2D485);
	op_hex		(x,	1);
	create_insn	(x=0X2D48A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D48D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D495);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D4A4);
	op_hex		(x,	1);
	create_insn	(0X2D4B0);
	set_name	(0X2D4B0,	"__ftbuf");
	create_insn	(x=0X2D4B3);
	op_hex		(x,	1);
	create_insn	(x=0X2D4B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D4BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D4C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D4CB);
	op_stkvar	(x,	1);
	set_cmt	(0X2D4D2,	"int",	0);
	create_insn	(x=0X2D4D8);
	op_hex		(x,	1);
	create_insn	(x=0X2D4DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D4EB);
	op_hex		(x,	1);
	create_insn	(x=0X2D4EF);
	op_hex		(x,	1);
	create_insn	(x=0X2D4F4);
	op_stkvar	(x,	0);
	set_cmt	(0X2D4F7,	"FILE *",	0);
	create_insn	(x=0X2D4F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D4FF);
	op_hex		(x,	1);
	create_insn	(x=0X2D502);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D50D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D51C);
	op_stkvar	(x,	1);
	set_cmt	(0X2D531,	"int",	0);
	create_insn	(x=0X2D537);
	op_hex		(x,	1);
	set_cmt	(0X2D53E,	"FILE *",	0);
	create_insn	(x=0X2D53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D546);
	op_hex		(x,	1);
	create_insn	(0X2D54E);
	set_name	(0X2D54E,	"_fflush");
	create_insn	(x=0X2D551);
	op_hex		(x,	1);
	create_insn	(x=0X2D556);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D55E);
	op_hex		(x,	1);
	create_insn	(x=0X2D564);
	op_hex		(x,	1);
	create_insn	(x=0X2D576);
	op_hex		(x,	1);
	create_insn	(x=0X2D57A);
	op_hex		(x,	1);
	create_insn	(x=0X2D57C);
	op_hex		(x,	1);
	create_insn	(x=0X2D588);
	op_stkvar	(x,	0);
	set_cmt	(0X2D590,	"void *",	0);
	set_cmt	(0X2D597,	"int",	0);
	create_insn	(x=0X2D59D);
	op_hex		(x,	1);
	create_insn	(x=0X2D5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D5A5);
	op_hex		(x,	1);
	create_insn	(0X2D5BE);
	set_name	(0X2D5BE,	"__output");
	create_insn	(x=0X2D5CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D5CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D5D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D5DB);
	op_stkvar	(x,	1);
	create_insn	(0X2D5F0);
	create_insn	(0X2D5F8);
	create_insn	(0X2D630);
	create_insn	(0X2D642);
	create_insn	(0X2D654);
	create_insn	(0X2D65A);
	create_insn	(x=0X2D66C);
	op_hex		(x,	1);
	create_insn	(x=0X2D674);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2D67C);
	op_hex		(x,	1);
	create_insn	(x=0X2D69F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2D6A7);
	op_hex		(x,	1);
	create_insn	(0X2D6F0);
	create_insn	(0X2D6F8);
	create_insn	(0X2D700);
	create_insn	(0X2D708);
	create_insn	(x=0X2D70B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D722);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D727);
	op_stkvar	(x,	1);
	create_insn	(0X2D736);
	create_insn	(x=0X2D739);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_insn	(0X2D752);
	create_insn	(x=0X2D764);
	op_hex		(x,	1);
	create_insn	(0X2D76A);
	create_insn	(0X2D770);
	create_insn	(0X2D788);
	create_insn	(0X2D7A2);
	create_insn	(x=0X2D7A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D7B3);
	op_stkvar	(x,	0);
	create_insn	(0X2D7C6);
	create_insn	(x=0X2D7E4);
	op_hex		(x,	1);
	create_insn	(x=0X2D7EF);
	op_hex		(x,	1);
	create_insn	(x=0X2D7F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D7FF);
	op_stkvar	(x,	1);
	create_insn	(0X2D814);
	create_insn	(x=0X2D827);
	op_hex		(x,	1);
	create_insn	(0X2D82E);
	create_insn	(0X2D834);
	create_insn	(0X2D83E);
	create_insn	(x=0X2D844);
	op_stkvar	(x,	0);
	create_insn	(0X2D84C);
	create_insn	(0X2D850);
	create_insn	(x=0X2D872);
	op_hex		(x,	1);
	create_insn	(0X2D87F);
	create_insn	(x=0X2D88A);
	op_hex		(x,	1);
	create_word	(x=0X2D896);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D898);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D89A);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D89C);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D89E);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8A0);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8A2);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8A4);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8A6);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8A8);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8AA);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8AC);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8AE);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8B0);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8B2);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8B4);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8B6);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8B8);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8BA);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8BC);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8BE);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2D8C0);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_insn	(0X2D8C2);
	create_insn	(x=0X2D8D4);
	op_hex		(x,	1);
	create_insn	(0X2D8DC);
	create_insn	(0X2D8E0);
	create_insn	(0X2D8EA);
	set_name	(0X2D8EA,	"iprint");
	create_insn	(x=0X2D8ED);
	op_hex		(x,	1);
	create_insn	(x=0X2D8F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D913);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D916);
	op_stkvar	(x,	0);
	create_insn	(0X2D920);
	create_insn	(x=0X2D92D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D930);
	op_stkvar	(x,	0);
	create_insn	(0X2D938);
	create_insn	(x=0X2D93F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D942);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D951);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D954);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D959);
	op_stkvar	(x,	1);
	create_insn	(0X2D95E);
	create_insn	(x=0X2D96E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D974);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D97E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D981);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D98B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D98E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D991);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D998);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D99D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2D9A2);
	op_stkvar	(x,	0);
	set_cmt	(0X2D9A5,	"char *",	0);
	create_insn	(x=0X2D9A6);
	op_stkvar	(x,	0);
	set_cmt	(0X2D9A9,	"unsigned __int32",	0);
	create_insn	(x=0X2D9A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2D9B1);
	op_hex		(x,	1);
	set_cmt	(0X2D9BB,	"char *",	0);
	create_insn	(x=0X2D9C1);
	op_hex		(x,	1);
	create_insn	(x=0X2D9CA);
	op_stkvar	(x,	0);
	create_insn	(0X2D9D0);
	create_insn	(x=0X2D9DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA09);
	op_stkvar	(x,	0);
	create_insn	(0X2DA14);
	create_insn	(x=0X2DA1B);
	op_hex		(x,	1);
	create_insn	(0X2DA24);
	set_name	(0X2DA24,	"sprint");
	create_insn	(x=0X2DA27);
	op_hex		(x,	1);
	create_insn	(x=0X2DA2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA38);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA3B);
	op_stkvar	(x,	0);
	create_insn	(0X2DA46);
	create_insn	(x=0X2DA56);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA59);
	op_stkvar	(x,	0);
	create_insn	(0X2DA64);
	create_insn	(x=0X2DA6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA70);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DA82);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DA8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA95);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA98);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DA9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DA9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DAA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DAA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DAB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DAB9);
	op_stkvar	(x,	0);
	create_insn	(0X2DACA);
	create_insn	(x=0X2DACB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DACE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DAE9);
	op_hex		(x,	1);
	create_insn	(x=0X2DAED);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DAF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DAF7);
	op_hex		(x,	1);
	create_insn	(x=0X2DB06);
	op_hex		(x,	1);
	create_insn	(0X2DB10);
	set_name	(0X2DB10,	"fprint");
	create_insn	(x=0X2DB13);
	op_hex		(x,	1);
	create_insn	(x=0X2DB19);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB22);
	op_stkvar	(x,	0);
	create_insn	(0X2DB2C);
	create_insn	(x=0X2DB2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB59);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB60);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DB67);
	op_hex		(x,	1);
	create_insn	(x=0X2DB7F);
	op_hex		(x,	1);
	create_insn	(x=0X2DB98);
	op_hex		(x,	1);
	create_insn	(x=0X2DBB6);
	op_hex		(x,	1);
	create_insn	(0X2DBC2);
	create_insn	(0X2DBCE);
	set_name	(0X2DBCE,	"_outc");
	create_insn	(x=0X2DBE2);
	op_stkvar	(x,	1);
	set_cmt	(0X2DBF0,	"FILE *",	0);
	create_insn	(0X2DBF0);
	set_cmt	(0X2DBF1,	"int",	0);
	create_insn	(x=0X2DBF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DBF9);
	op_hex		(x,	1);
	create_insn	(0X2DC06);
	create_insn	(0X2DC0E);
	set_name	(0X2DC0E,	"putpad");
	create_insn	(x=0X2DC11);
	op_hex		(x,	1);
	create_insn	(x=0X2DC1D);
	op_stkvar	(x,	1);
	set_cmt	(0X2DC26,	"FILE *",	0);
	create_insn	(0X2DC26);
	set_cmt	(0X2DC2A,	"int",	0);
	create_insn	(x=0X2DC33);
	op_hex		(x,	1);
	create_insn	(0X2DC5A);
	create_insn	(x=0X2DC61);
	op_stkvar	(x,	1);
	create_insn	(0X2DC6E);
	set_name	(0X2DC6E,	"putbuf");
	create_insn	(x=0X2DC71);
	op_hex		(x,	1);
	create_insn	(x=0X2DC76);
	op_stkvar	(x,	1);
	set_cmt	(0X2DC82,	"FILE *",	0);
	create_insn	(0X2DC82);
	create_insn	(x=0X2DC86);
	op_stkvar	(x,	1);
	set_cmt	(0X2DC8D,	"int",	0);
	create_insn	(x=0X2DC93);
	op_hex		(x,	1);
	create_insn	(x=0X2DC9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DCB0);
	op_stkvar	(x,	1);
	create_insn	(0X2DCC4);
	create_insn	(x=0X2DCCB);
	op_stkvar	(x,	1);
	create_insn	(0X2DCD8);
	set_name	(0X2DCD8,	"_out");
	create_insn	(x=0X2DCDB);
	op_hex		(x,	1);
	create_insn	(x=0X2DCE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DCE9);
	op_stkvar	(x,	0);
	set_cmt	(0X2DD0F,	"char *",	0);
	create_insn	(x=0X2DD15);
	op_hex		(x,	1);
	create_insn	(x=0X2DD18);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DD3A);
	op_hex		(x,	1);
	create_insn	(x=0X2DD3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD52);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD58);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD66);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD79);
	op_hex		(x,	1);
	create_insn	(x=0X2DD7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD82);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD93);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DD9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DDA6);
	op_hex		(x,	1);
	create_insn	(x=0X2DDBB);
	op_hex		(x,	1);
	create_insn	(0X2DDC4);
	set_name	(0X2DDC4,	"putsign");
	create_insn	(0X2DDD0);
	create_insn	(x=0X2DDD8);
	op_hex		(x,	1);
	create_insn	(0X2DDDC);
	set_name	(0X2DDDC,	"putprefix");
	create_insn	(x=0X2DDE4);
	op_hex		(x,	1);
	create_insn	(0X2DDFA);
	create_insn	(x=0X2DE02);
	op_hex		(x,	1);
	create_insn	(0X2DE06);
	set_name	(0X2DE06,	"getnum");
	create_insn	(x=0X2DE09);
	op_hex		(x,	1);
	create_insn	(x=0X2DE0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DE11);
	op_stkvar	(x,	0);
	create_insn	(0X2DE2A);
	create_insn	(x=0X2DE2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DE57);
	op_hex		(x,	1);
	create_insn	(x=0X2DE59);
	op_hex		(x,	1);
	create_insn	(x=0X2DE5D);
	op_hex		(x,	1);
	create_insn	(x=0X2DE71);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DE78);
	op_stkvar	(x,	1);
	create_insn	(0X2DE86);
	set_name	(0X2DE86,	"flagchar");
	create_insn	(x=0X2DE89);
	op_hex		(x,	1);
	create_insn	(x=0X2DE90);
	op_stkvar	(x,	1);
	create_insn	(0X2DE96);
	create_insn	(0X2DEA6);
	create_insn	(0X2DEAE);
	set_name	(0X2DEAE,	"_lseek");
	create_insn	(x=0X2DEB1);
	op_hex		(x,	1);
	create_insn	(x=0X2DEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DEC2);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2DEC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DED3);
	op_hex		(x,	1);
	set_cmt	(0X2DED6,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from present location",	0);
	create_insn	(x=0X2DED6);
	op_hex		(x,	0);
	create_insn	(x=0X2DEDA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X2DEE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DEEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DEF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DEF7);
	op_hex		(x,	1);
	set_cmt	(0X2DEFA,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X2DEFA);
	op_hex		(x,	0);
	create_insn	(x=0X2DEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DEFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF07);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF0A);
	op_hex		(x,	1);
	set_cmt	(0X2DF0D,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from beginning of file",	0);
	create_insn	(x=0X2DF0D);
	op_hex		(x,	0);
	create_insn	(x=0X2DF11);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF17);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF1A);
	op_hex		(x,	1);
	set_cmt	(0X2DF1C,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: \n0-from beginnig,1-from current,2-from end",	0);
	create_insn	(x=0X2DF1C);
	op_hex		(x,	0);
	create_insn	(x=0X2DF20);
	op_hex		(x,	1);
	create_insn	(0X2DF28);
	set_name	(0X2DF28,	"_write");
	create_insn	(x=0X2DF2B);
	op_hex		(x,	1);
	create_insn	(x=0X2DF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF3E);
	op_hex		(x,	1);
	set_cmt	(0X2DF4C,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X2DF4C);
	op_hex		(x,	0);
	create_insn	(x=0X2DF50);
	op_hex		(x,	1);
	create_insn	(x=0X2DF57);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DF61);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DF6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DF83);
	op_hex		(x,	1);
	create_insn	(x=0X2DF9B);
	op_stkvar	(x,	1);
	create_insn	(0X2DFAF);
	create_insn	(x=0X2DFBB);
	op_stkvar	(x,	0);
	create_insn	(0X2DFC0);
	create_insn	(0X2DFC5);
	create_insn	(0X2DFC9);
	create_insn	(0X2DFCB);
	create_insn	(0X2DFD0);
	create_insn	(x=0X2DFD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2DFDC);
	op_hex		(x,	1);
	set_cmt	(0X2DFDE,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X2DFDE);
	op_hex		(x,	0);
	create_insn	(x=0X2DFE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2DFEF);
	op_hex		(x,	1);
	create_insn	(x=0X2DFF8);
	op_hex		(x,	1);
	create_insn	(x=0X2DFFF);
	op_stkvar	(x,	1);
	create_insn	(0X2E00A);
	create_insn	(x=0X2E010);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E013);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E016);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E01E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E02A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E02D);
	op_hex		(x,	1);
	set_cmt	(0X2E02F,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X2E02F);
	op_hex		(x,	0);
	create_insn	(0X2E037);
	create_insn	(x=0X2E03B);
	op_hex		(x,	1);
	create_insn	(0X2E04C);
	create_insn	(0X2E052);
	set_name	(0X2E052,	"_stackavail");
	create_insn	(0X2E062);
	create_insn	(0X2E066);
	set_name	(0X2E066,	"unknown_libname_1");
	create_insn	(x=0X2E069);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E070);
	op_hex		(x,	1);
	create_insn	(0X2E078);
	set_name	(0X2E078,	"unknown_libname_2");
	create_insn	(0X2E094);
	create_insn	(x=0X2E095);
	op_hex		(x,	1);
	create_insn	(x=0X2E0AE);
	op_stkvar	(x,	1);
	create_insn	(0X2E0BE);
	create_insn	(0X2E0C1);
	set_name	(0X2E0C1,	"__amalloc");
	create_insn	(x=0X2E0C4);
	op_hex		(x,	1);
	create_insn	(x=0X2E0D3);
	op_hex		(x,	1);
	create_insn	(x=0X2E0E1);
	op_hex		(x,	1);
	create_insn	(0X2E0F1);
	create_insn	(0X2E101);
	create_insn	(0X2E119);
	create_insn	(x=0X2E129);
	op_hex		(x,	1);
	create_insn	(x=0X2E139);
	op_hex		(x,	1);
	create_insn	(0X2E149);
	create_insn	(0X2E154);
	create_insn	(0X2E16C);
	create_insn	(x=0X2E178);
	op_hex		(x,	1);
	create_insn	(0X2E18F);
	create_insn	(0X2E1A4);
	set_name	(0X2E1A4,	"__amexpand");
	create_insn	(x=0X2E1A8);
	op_hex		(x,	1);
	create_insn	(x=0X2E1BB);
	op_hex		(x,	1);
	create_insn	(x=0X2E1D6);
	op_hex		(x,	1);
	create_insn	(0X2E1DE);
	set_name	(0X2E1DE,	"__amlink");
	create_insn	(0X2E200);
	set_name	(0X2E200,	"__amallocbrk");
	create_insn	(x=0X2E213);
	op_hex		(x,	1);
	create_insn	(0X2E222);
	set_name	(0X2E222,	"_brkctl");
	create_insn	(x=0X2E228);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E231);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E234);
	op_stkvar	(x,	1);
	create_insn	(0X2E241);
	create_insn	(x=0X2E24F);
	op_stkvar	(x,	0);
	create_insn	(0X2E26C);
	create_insn	(x=0X2E271);
	op_hex		(x,	1);
	create_insn	(x=0X2E277);
	op_hex		(x,	1);
	set_cmt	(0X2E279,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired",	0);
	create_insn	(x=0X2E279);
	op_hex		(x,	0);
	create_insn	(0X2E290);
	create_insn	(0X2E2A6);
	create_insn	(x=0X2E2BD);
	op_hex		(x,	1);
	create_insn	(x=0X2E2BF);
	op_hex		(x,	1);
	create_insn	(x=0X2E2C1);
	op_hex		(x,	1);
	create_insn	(x=0X2E2C3);
	op_hex		(x,	1);
	create_insn	(x=0X2E2D2);
	op_hex		(x,	1);
	set_cmt	(0X2E2D4,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X2E2D4);
	op_hex		(x,	0);
	create_insn	(0X2E2E6);
	set_name	(0X2E2E6,	"_strcat");
	create_insn	(x=0X2E2F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E2FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E30F);
	op_hex		(x,	1);
	create_insn	(x=0X2E317);
	op_hex		(x,	1);
	create_insn	(0X2E326);
	set_name	(0X2E326,	"_strcpy");
	create_insn	(x=0X2E32D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E33F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E344);
	op_hex		(x,	1);
	create_insn	(x=0X2E34A);
	op_hex		(x,	1);
	create_insn	(0X2E358);
	set_name	(0X2E358,	"_strcmp");
	create_insn	(x=0X2E363);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E366);
	op_stkvar	(x,	1);
	create_insn	(0X2E384);
	set_name	(0X2E384,	"_strlen");
	create_insn	(x=0X2E38D);
	op_stkvar	(x,	1);
	create_insn	(0X2E3A0);
	set_name	(0X2E3A0,	"_itoa");
	create_insn	(x=0X2E3A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E3AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E3B5);
	op_stkvar	(x,	1);
	create_insn	(0X2E3BC);
	set_name	(0X2E3BC,	"_ultoa");
	create_insn	(0X2E3C6);
	set_name	(0X2E3C6,	"_abort");
	set_cmt	(0X2E3D5,	"int",	0);
	create_insn	(0X2E3E4);
	create_insn	(0X2E3E8);
	set_name	(0X2E3E8,	"_isatty");
	create_insn	(x=0X2E3EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E3F9);
	op_hex		(x,	1);
	create_insn	(0X2E405);
	create_insn	(0X2E40C);
	set_name	(0X2E40C,	"_int86");
	create_insn	(x=0X2E411);
	op_hex		(x,	1);
	create_insn	(x=0X2E414);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E418);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E41B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E426);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E42C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E430);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E434);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E438);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E43B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E43E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E441);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E456);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E45C);
	op_stkvar	(x,	1);
	create_insn	(0X2E476);
	create_insn	(x=0X2E483);
	op_hex		(x,	1);
	create_insn	(0X2E48C);
	set_name	(0X2E48C,	"_sprintf");
	create_insn	(x=0X2E48F);
	op_hex		(x,	1);
	create_insn	(x=0X2E494);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E499);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E49C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E4A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E4B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E4BD);
	op_hex		(x,	1);
	set_cmt	(0X2E4D2,	"FILE *",	0);
	create_insn	(0X2E4D2);
	set_cmt	(0X2E4D5,	"int",	0);
	create_insn	(x=0X2E4DB);
	op_hex		(x,	1);
	create_insn	(0X2E4E6);
	set_name	(0X2E4E6,	"_stricmp");
	create_insn	(x=0X2E4EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E505);
	op_hex		(x,	1);
	create_insn	(x=0X2E514);
	op_hex		(x,	1);
	create_insn	(x=0X2E528);
	op_stkvar	(x,	1);
	set_name	(0X2E528,	"__cltoasub");
	create_insn	(x=0X2E52B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E52E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E531);
	op_stkvar	(x,	1);
	set_name	(0X2E534,	"__cxtoa");
	create_insn	(0X2E588);
	set_name	(0X2E588,	"_abs");
	create_insn	(x=0X2E58B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E591);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E596);
	op_stkvar	(x,	1);
	create_word	(x=0X2E59E);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2E5A0);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2E5A2);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2E5A4);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2E5A6);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(x=0X2E5A8);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_insn	(0X2E5AA);
	set_name	(0X2E5AA,	"_raise");
	create_insn	(x=0X2E5AD);
	op_hex		(x,	1);
	create_insn	(x=0X2E5B0);
	op_stkvar	(x,	1);
	set_cmt	(0X2E5B9,	"DOS - CONTROL \"C\" EXIT ADDRESS\nReturn: return via RETF 2 with CF set\nDOS will abort program with errorlevel 0\nelse\ninterrupted DOS call continues",	0);
	create_insn	(x=0X2E5B9);
	op_hex		(x,	0);
	create_insn	(x=0X2E5BD);
	op_hex		(x,	1);
	set_cmt	(0X2E5BF,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code",	0);
	create_insn	(x=0X2E5BF);
	op_hex		(x,	0);
	create_insn	(0X2E5C1);
	create_insn	(x=0X2E5EB);
	op_hex		(x,	1);
	create_insn	(x=0X2E5ED);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_insn	(x=0X2E5F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E5F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E611);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E614);
	op_hex		(x,	1);
	create_insn	(0X2E61E);
	create_insn	(0X2E62F);
	create_byte	(0X2E634);
	create_insn	(0X2E635);
	create_insn	(0X2E63C);
	set_name	(0X2E63C,	"_srand");
	create_insn	(x=0X2E63F);
	op_stkvar	(x,	1);
	create_insn	(0X2E64E);
	set_name	(0X2E64E,	"_rand");
	create_insn	(x=0X2E672);
	op_hex		(x,	1);
	create_byte	(0X2E676);
	make_array	(0X2E676,	0X6);
	create_insn	(0X2E67C);
	set_name	(0X2E67C,	"_signal");
	create_insn	(x=0X2E67F);
	op_hex		(x,	1);
	create_insn	(x=0X2E682);
	op_stkvar	(x,	1);
	create_insn	(0X2E69B);
	create_insn	(x=0X2E6A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E6AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E6AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E6D2);
	op_hex		(x,	1);
	set_cmt	(0X2E6D4,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector",	0);
	create_insn	(x=0X2E6D4);
	op_hex		(x,	0);
	create_insn	(x=0X2E6E7);
	op_hex		(x,	1);
	set_cmt	(0X2E6E9,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2E6E9);
	op_hex		(x,	0);
	create_insn	(x=0X2E715);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E718);
	op_stkvar	(x,	1);
	create_insn	(0X2E71F);
	set_name	(0X2E71F,	"__sigentry");
	create_insn	(x=0X2E722);
	op_hex		(x,	1);
	create_byte	(0X2E734);
	create_insn	(0X2E735);
	create_insn	(x=0X2E738);
	op_hex		(x,	1);
	create_insn	(x=0X2E73A);
	op_hex		(x,	1);
	create_insn	(x=0X2E73C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2E747);
	create_insn	(x=0X2E74C);
	op_seg		(x,	1);
	create_insn	(x=0X2E76C);
	op_hex		(x,	1);
	create_insn	(0X2E799);
	create_insn	(0X2E7C5);
	create_insn	(0X2E7C6);
	create_insn	(0X2E7CB);
	create_insn	(x=0X2E7DF);
	op_hex		(x,	1);
	create_insn	(0X2E7E8);
	create_insn	(0X2E7ED);
	create_insn	(0X2E7F2);
	create_insn	(0X2E7F7);
	create_insn	(0X2E7FC);
	create_insn	(0X2E801);
	create_insn	(0X2E806);
	create_insn	(0X2E80B);
	create_insn	(0X2E810);
	set_name	(0X2E810,	"_strrchr");
	create_insn	(x=0X2E816);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E824);
	op_stkvar	(x,	1);
	create_insn	(0X2E833);
	create_insn	(0X2E83C);
	set_name	(0X2E83C,	"__aFldiv");
	create_insn	(x=0X2E844);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E856);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E859);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E864);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E86E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E871);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E878);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E87B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E884);
	op_stkvar	(x,	1);
	create_insn	(0X2E88D);
	create_insn	(x=0X2E88F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E892);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E895);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E898);
	op_hex		(x,	1);
	create_insn	(x=0X2E89A);
	op_hex		(x,	1);
	create_insn	(x=0X2E89C);
	op_hex		(x,	1);
	create_insn	(x=0X2E89E);
	op_hex		(x,	1);
	create_insn	(x=0X2E8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8BC);
	op_stkvar	(x,	1);
	create_insn	(0X2E8D8);
	set_name	(0X2E8D8,	"__aFlmul");
	create_insn	(x=0X2E8DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8E3);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X2E8E8,	E_PREV + 0,	"If both high words are");
	update_extra_cmt		(0X2E8E8,	E_PREV + 1,	"0, do simple multipl.");
	create_insn	(x=0X2E8E8);
	op_stkvar	(x,	1);
	create_insn	(0X2E8F3);
	create_insn	(x=0X2E8F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E8FF);
	op_stkvar	(x,	1);
	create_insn	(0X2E90C);
	set_name	(0X2E90C,	"__aFlshr");
	create_insn	(x=0X2E910);
	op_hex		(x,	1);
	create_insn	(x=0X2E912);
	op_hex		(x,	1);
	create_insn	(0X2E918);
	set_name	(0X2E918,	"unknown_libname_3");
	create_insn	(x=0X2E91B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E91E);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E921);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E92E);
	op_stkvar	(x,	1);
	create_insn	(0X2E93C);
	set_name	(0X2E93C,	"__aFFblmul");
	create_insn	(x=0X2E93F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E942);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E945);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E952);
	op_stkvar	(x,	1);
	create_insn	(0X2E960);
	set_name	(0X2E960,	"unknown_libname_4");
	create_insn	(x=0X2E963);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E96B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E973);
	op_stkvar	(x,	1);
	create_insn	(0X2E982);
	set_name	(0X2E982,	"unknown_libname_5");
	create_insn	(x=0X2E985);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E988);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E98B);
	op_stkvar	(x,	0);
	create_insn	(x=0X2E998);
	op_stkvar	(x,	1);
	create_insn	(0X2E9A6);
	set_name	(0X2E9A6,	"__aFuldiv");
	create_insn	(x=0X2E9AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9BE);
	op_stkvar	(x,	1);
	create_insn	(0X2E9C7);
	create_insn	(x=0X2E9C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9D2);
	op_hex		(x,	1);
	create_insn	(x=0X2E9D4);
	op_hex		(x,	1);
	create_insn	(x=0X2E9D6);
	op_hex		(x,	1);
	create_insn	(x=0X2E9D8);
	op_hex		(x,	1);
	create_insn	(x=0X2E9E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X2E9F6);
	op_stkvar	(x,	1);
	create_insn	(0X2EA08);
	set_name	(0X2EA08,	"polarRadius3D");
	create_insn	(x=0X2EA0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EA1B);
	op_hex		(x,	1);
	create_insn	(x=0X2EA24);
	op_hex		(x,	1);
	create_insn	(0X2EA2A);
	set_name	(0X2EA2A,	"fatal_error");
	create_insn	(x=0X2EA45);
	op_hex		(x,	1);
	create_insn	(0X2EA4E);
	set_name	(0X2EA4E,	"polarAngle");
	create_insn	(x=0X2EA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EA57);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X2EA5E,	E_PREV + 0,	"di = quadrant flag");
	create_insn	(x=0X2EA5E);
	op_hex		(x,	1);
	create_insn	(x=0X2EA67);
	op_hex		(x,	1);
	update_extra_cmt		(0X2EA6C,	E_PREV + 0,	"comparing z and x");
	update_extra_cmt		(0X2EA72,	E_PREV + 0,	"z > x : exchange x and z");
	create_insn	(x=0X2EA74);
	op_hex		(x,	1);
	update_extra_cmt		(0X2EA77,	E_PREV + 0,	"get angle via arctangent");
	create_insn	(x=0X2EA84);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2EA8A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	update_extra_cmt		(0X2EA8F,	E_PREV + 0,	"z = x : angle is multiple of pi/4");
	create_insn	(0X2EA8F);
	create_insn	(x=0X2EA96);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EA9B);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EA9D);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EA9F);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EAA1);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EAA3);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EAA5);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EAA7);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EAA9);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2EAAB);
	create_insn	(0X2EAB3);
	create_insn	(0X2EAB8);
	create_insn	(0X2EABF);
	create_insn	(0X2EAC3);
	create_insn	(0X2EAC8);
	create_insn	(0X2EACF);
	create_insn	(0X2EAD4);
	create_insn	(0X2EADE);
	set_name	(0X2EADE,	"set_add_value");
	create_insn	(x=0X2EAE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EAE9);
	op_stkvar	(x,	1);
	create_insn	(0X2EAF5);
	create_insn	(0X2EB07);
	create_insn	(0X2EB1E);
	create_insn	(x=0X2EB21);
	op_hex		(x,	1);
	create_insn	(x=0X2EB29);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X2EB32);
	op_stkvar	(x,	0);
	create_insn	(x=0X2EB3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB3F);
	op_stkvar	(x,	1);
	create_insn	(0X2EB48);
	set_name	(0X2EB48,	"draw_line_related_alt");
	create_insn	(x=0X2EB4B);
	op_hex		(x,	1);
	create_insn	(x=0X2EB50);
	op_stkvar	(x,	0);
	create_insn	(0X2EB56);
	set_name	(0X2EB56,	"draw_line_related");
	create_insn	(x=0X2EB59);
	op_hex		(x,	1);
	create_insn	(x=0X2EB5E);
	op_stkvar	(x,	0);
	set_cmt	(0X2EB62,	"arg_8 is a pointer to something sizeof 0x1C",	0);
	create_insn	(x=0X2EB62);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB83);
	op_stkvar	(x,	1);
	create_insn	(x=0X2EB86);
	op_stkvar	(x,	1);
	create_insn	(0X2EB9C);
	create_insn	(0X2EBAD);
	create_insn	(x=0X2EBAF);
	op_stkvar	(x,	0);
	create_insn	(0X2EBCB);
	create_insn	(x=0X2EBCF);
	op_hex		(x,	1);
	create_insn	(0X2EBDE);
	create_insn	(x=0X2EBE2);
	op_hex		(x,	1);
	create_insn	(x=0X2EBF6);
	op_hex		(x,	1);
	create_insn	(x=0X2EBFD);
	op_hex		(x,	1);
	create_insn	(x=0X2EC07);
	op_hex		(x,	1);
	create_insn	(x=0X2EC0E);
	op_hex		(x,	1);
	create_insn	(0X2EC1A);
	create_insn	(x=0X2EC1E);
	op_stkvar	(x,	0);
	create_insn	(0X2EC2C);
	create_byte	(0X2EC40);
	create_insn	(0X2EC41);
	create_insn	(x=0X2EC58);
	op_hex		(x,	1);
	create_insn	(x=0X2EC5A);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_byte	(0X2EC68);
	create_insn	(0X2EC69);
	create_insn	(x=0X2EC6F);
	op_hex		(x,	1);
	create_insn	(0X2EC82);
	create_insn	(0X2EC88);
	create_byte	(0X2EC8E);
	create_insn	(0X2EC8F);
	create_insn	(0X2EC9F);
	create_insn	(0X2ECA5);
	create_insn	(x=0X2ECAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2ECB0);
	op_hex		(x,	1);
	create_insn	(x=0X2ECB4);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECB9);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECBB);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECBD);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECBF);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECC1);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECC3);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECC5);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECC7);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECC9);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECCB);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECCD);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECCF);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECD1);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECD3);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECD5);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECD7);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2ECD9);
	create_insn	(0X2ECE1);
	create_insn	(x=0X2ECF1);
	op_hex		(x,	1);
	create_insn	(x=0X2ECF3);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(0X2ECF8);
	create_word	(0X2ECFA);
	create_word	(x=0X2ECFC);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ECFE);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ED00);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ED02);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ED04);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ED06);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2ED08);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2ED0A);
	create_insn	(0X2ED10);
	create_insn	(0X2ED19);
	create_insn	(0X2ED22);
	create_insn	(0X2ED32);
	create_insn	(0X2ED42);
	create_insn	(x=0X2ED4E);
	op_hex		(x,	1);
	create_insn	(0X2ED69);
	create_insn	(0X2ED7E);
	create_insn	(x=0X2ED8A);
	op_hex		(x,	1);
	create_insn	(0X2EDA5);
	create_insn	(x=0X2EDB6);
	op_hex		(x,	1);
	create_insn	(x=0X2EDB8);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(0X2EDBD);
	create_word	(0X2EDBF);
	create_word	(x=0X2EDC1);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDC3);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDC5);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDC7);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDC9);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDCB);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EDCD);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2EDCF);
	create_insn	(0X2EDD5);
	create_insn	(0X2EDDE);
	create_insn	(0X2EDE7);
	create_insn	(0X2EE0B);
	create_insn	(0X2EE2A);
	create_insn	(x=0X2EE39);
	op_hex		(x,	1);
	create_insn	(0X2EE4F);
	create_insn	(0X2EE53);
	create_insn	(x=0X2EE62);
	op_hex		(x,	1);
	create_insn	(0X2EE78);
	create_insn	(x=0X2EE7B);
	op_hex		(x,	1);
	create_insn	(x=0X2EE7D);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(0X2EE82);
	create_word	(0X2EE84);
	create_word	(x=0X2EE86);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE88);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE8A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE8C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE8E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE90);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2EE92);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2EE94);
	create_insn	(0X2EEAD);
	create_insn	(0X2EEC6);
	create_insn	(x=0X2EEDC);
	op_hex		(x,	1);
	create_insn	(0X2EEF9);
	create_insn	(0X2EEFE);
	create_insn	(x=0X2EF11);
	op_hex		(x,	1);
	create_insn	(0X2EF2E);
	create_insn	(0X2EF30);
	create_insn	(0X2EF61);
	create_insn	(0X2EF98);
	create_insn	(x=0X2EFA6);
	op_hex		(x,	1);
	create_insn	(x=0X2EFBE);
	op_hex		(x,	1);
	create_insn	(0X2EFD2);
	create_insn	(x=0X2F00A);
	op_hex		(x,	1);
	create_insn	(0X2F014);
	create_insn	(0X2F01F);
	create_insn	(x=0X2F024);
	op_hex		(x,	1);
	create_insn	(x=0X2F026);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(0X2F02B);
	create_word	(0X2F02D);
	create_word	(x=0X2F02F);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F031);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F033);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F035);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F037);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F039);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F03B);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X2F03D);
	create_insn	(0X2F043);
	create_insn	(0X2F05C);
	create_insn	(0X2F076);
	create_insn	(x=0X2F086);
	op_hex		(x,	1);
	create_insn	(0X2F0A3);
	create_insn	(x=0X2F0BA);
	op_hex		(x,	1);
	create_insn	(0X2F0D7);
	create_insn	(0X2F110);
	create_insn	(x=0X2F13E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X2F148);
	create_insn	(x=0X2F154);
	op_hex		(x,	1);
	create_insn	(x=0X2F167);
	op_hex		(x,	1);
	create_insn	(x=0X2F174);
	op_hex		(x,	1);
	create_insn	(x=0X2F17E);
	op_hex		(x,	1);
	create_insn	(0X2F18A);
	create_insn	(x=0X2F190);
	op_stkvar	(x,	0);
	create_insn	(x=0X2F196);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X2F1A0);
	create_insn	(0X2F1A3);
	create_insn	(x=0X2F1BD);
	op_stkvar	(x,	0);
	create_insn	(0X2F1E4);
	create_insn	(0X2F1ED);
	create_insn	(0X2F200);
	create_insn	(0X2F21B);
	create_insn	(0X2F22E);
	create_insn	(0X2F253);
	create_insn	(x=0X2F256);
	op_hex		(x,	1);
	create_insn	(x=0X2F25B);
	op_hex		(x,	1);
	create_insn	(x=0X2F25F);
	op_hex		(x,	1);
	create_insn	(x=0X2F264);
	op_hex		(x,	1);
	create_insn	(x=0X2F269);
	op_hex		(x,	1);
	create_insn	(x=0X2F26D);
	op_hex		(x,	1);
	create_insn	(0X2F2A8);
	create_insn	(0X2F2B0);
	create_insn	(0X2F2D6);
	create_insn	(0X2F30C);
	create_insn	(0X2F314);
	set_name	(0X2F314,	"parse_shape2d_helper");
	create_insn	(x=0X2F317);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F31C);
	op_hex		(x,	1);
	create_insn	(x=0X2F31E);
	op_hex		(x,	1);
	create_insn	(x=0X2F320);
	op_hex		(x,	1);
	create_insn	(x=0X2F322);
	op_hex		(x,	1);
	create_insn	(x=0X2F324);
	op_hex		(x,	1);
	create_insn	(x=0X2F326);
	op_hex		(x,	1);
	create_insn	(x=0X2F328);
	op_hex		(x,	1);
	create_insn	(x=0X2F32A);
	op_hex		(x,	1);
	create_insn	(x=0X2F32C);
	op_stkvar	(x,	1);
	create_insn	(0X2F334);
	set_name	(0X2F334,	"parse_shape2d_helper2");
	create_insn	(x=0X2F337);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F33A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F33F);
	op_hex		(x,	1);
	create_insn	(x=0X2F341);
	op_hex		(x,	1);
	create_insn	(x=0X2F343);
	op_hex		(x,	1);
	create_insn	(x=0X2F345);
	op_hex		(x,	1);
	create_insn	(x=0X2F347);
	op_hex		(x,	1);
	create_insn	(x=0X2F349);
	op_hex		(x,	1);
	create_insn	(x=0X2F34B);
	op_hex		(x,	1);
	create_insn	(x=0X2F34D);
	op_hex		(x,	1);
	create_insn	(x=0X2F34F);
	op_hex		(x,	1);
	create_word	(0X2F354);
	create_word	(0X2F356);
	create_word	(0X2F358);
	create_word	(0X2F35A);
	create_insn	(0X2F35C);
	set_name	(0X2F35C,	"criterr_interrupt_handler");
	create_insn	(x=0X2F368);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(0X2F377);
	set_name	(0X2F377,	"set_criterr_handler");
	create_insn	(x=0X2F37C);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X2F385);
	op_hex		(x,	1);
	create_insn	(x=0X2F388);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F38F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F3AC);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X2F3B5);
	op_hex		(x,	1);
	set_cmt	(0X2F3B7,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2F3B7);
	op_hex		(x,	0);
	create_insn	(0X2F3BC);
	set_name	(0X2F3BC,	"criterr_exithandler");
	create_insn	(x=0X2F3D4);
	op_hex		(x,	1);
	set_cmt	(0X2F3D6,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt",	0);
	create_insn	(x=0X2F3D6);
	op_hex		(x,	0);
	create_insn	(0X2F3DA);
	set_name	(0X2F3DA,	"preRender_unk");
	create_insn	(x=0X2F3DD);
	op_hex		(x,	1);
	create_insn	(x=0X2F3E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F3E6);
	op_stkvar	(x,	0);
	create_byte	(0X2F3EC);
	create_insn	(0X2F3ED);
	create_insn	(x=0X2F3F0);
	op_hex		(x,	1);
	create_insn	(x=0X2F3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F3F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X2F3FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F409);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F40C);
	op_stkvar	(x,	0);
	create_insn	(x=0X2F40F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F412);
	op_stkvar	(x,	0);
	create_insn	(x=0X2F415);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X2F41B);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(0X2F424);
	set_name	(0X2F424,	"nopsub_2F424");
	create_insn	(x=0X2F427);
	op_hex		(x,	1);
	create_insn	(x=0X2F42D);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F430);
	op_stkvar	(x,	0);
	create_insn	(0X2F436);
	set_name	(0X2F436,	"nopsub_2F436");
	create_insn	(x=0X2F439);
	op_hex		(x,	1);
	create_insn	(x=0X2F43F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2F442);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X2F448,	E_PREV + 0,	"these could be interpolation tables?");
	update_extra_cmt		(0X2F448,	E_PREV + 1,	"each entry in the table points at arrays which grows by one");
	update_extra_cmt		(0X2F448,	E_PREV + 2,	"each array has values going from 0->FFFF");
	create_word	(0X2F448);
	create_word	(x=0X2F44A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F44C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F44E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F450);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F452);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F454);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F456);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F458);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F45A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F45C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F45E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F460);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F462);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F464);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F466);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F468);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F46A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F46C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F46E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F470);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F472);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F474);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F476);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F478);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F47A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F47C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F47E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F480);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F482);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F484);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F486);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F488);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F48A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F48C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F48E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F490);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F492);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F494);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F496);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F498);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F49A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F49C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F49E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4A0);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4A2);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4A4);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4A6);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4A8);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4AA);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X2F4AC);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(0X2F4AE);
	create_word	(0X2F4B0);
	create_word	(0X2F4B2);
	create_word	(0X2F4B4);
	create_word	(0X2F4B6);
	create_word	(0X2F4B8);
	create_word	(0X2F4BA);
	create_word	(0X2F4BC);
	create_word	(0X2F4BE);
	create_word	(0X2F4C0);
	create_word	(0X2F4C2);
	create_word	(0X2F4C4);
	create_word	(0X2F4C6);
	create_word	(0X2F4C8);
	create_word	(0X2F4CA);
	create_word	(0X2F4CC);
	create_word	(0X2F4CE);
	create_word	(0X2F4D0);
	create_word	(0X2F4D2);
	create_word	(0X2F4D4);
	create_word	(0X2F4D6);
	create_word	(0X2F4D8);
	create_word	(0X2F4DA);
	create_word	(0X2F4DC);
	create_word	(0X2F4DE);
	create_word	(0X2F4E0);
	create_word	(0X2F4E2);
	create_word	(0X2F4E4);
	create_word	(0X2F4E6);
	create_word	(0X2F4E8);
	create_word	(0X2F4EA);
	create_word	(0X2F4EC);
	create_word	(0X2F4EE);
	create_word	(0X2F4F0);
	create_word	(0X2F4F2);
	create_word	(0X2F4F4);
	create_word	(0X2F4F6);
	create_word	(0X2F4F8);
	create_word	(0X2F4FA);
	create_word	(0X2F4FC);
	create_word	(0X2F4FE);
	create_word	(0X2F500);
	create_word	(0X2F502);
	create_word	(0X2F504);
	create_word	(0X2F506);
	create_word	(0X2F508);
	create_word	(0X2F50A);
	create_word	(0X2F50C);
	create_word	(0X2F50E);
	create_word	(0X2F510);
	create_word	(0X2F512);
	create_word	(0X2F514);
	create_word	(0X2F516);
	create_word	(0X2F518);
	create_word	(0X2F51A);
	create_word	(0X2F51C);
	create_word	(0X2F51E);
	create_word	(0X2F520);
	create_word	(0X2F522);
	create_word	(0X2F524);
	create_word	(0X2F526);
	create_word	(0X2F528);
	create_word	(0X2F52A);
	create_word	(0X2F52C);
	create_word	(0X2F52E);
	create_word	(0X2F530);
	create_word	(0X2F532);
	create_word	(0X2F534);
	create_word	(0X2F536);
	create_word	(0X2F538);
	create_word	(0X2F53A);
	create_word	(0X2F53C);
	create_word	(0X2F53E);
	create_word	(0X2F540);
	create_word	(0X2F542);
	create_word	(0X2F544);
	create_word	(0X2F546);
	create_word	(0X2F548);
	create_word	(0X2F54A);
	create_word	(0X2F54C);
	create_word	(0X2F54E);
	create_word	(0X2F550);
	create_word	(0X2F552);
	create_word	(0X2F554);
	create_word	(0X2F556);
	create_word	(0X2F558);
	create_word	(0X2F55A);
	create_word	(0X2F55C);
	create_word	(0X2F55E);
	create_word	(0X2F560);
	create_word	(0X2F562);
	create_word	(0X2F564);
	create_word	(0X2F566);
	create_word	(0X2F568);
	create_word	(0X2F56A);
	create_word	(0X2F56C);
	create_word	(0X2F56E);
	create_word	(0X2F570);
	create_word	(0X2F572);
	create_word	(0X2F574);
	create_word	(0X2F576);
	create_word	(0X2F578);
	create_word	(0X2F57A);
	create_word	(0X2F57C);
	create_word	(0X2F57E);
	create_word	(0X2F580);
	create_word	(0X2F582);
	create_word	(0X2F584);
	create_word	(0X2F586);
	create_word	(0X2F588);
	create_word	(0X2F58A);
	create_word	(0X2F58C);
	create_word	(0X2F58E);
	create_word	(0X2F590);
	create_word	(0X2F592);
	create_word	(0X2F594);
	create_word	(0X2F596);
	create_word	(0X2F598);
	create_word	(0X2F59A);
	create_word	(0X2F59C);
	create_word	(0X2F59E);
	create_word	(0X2F5A0);
	create_word	(0X2F5A2);
	create_word	(0X2F5A4);
	create_word	(0X2F5A6);
	create_word	(0X2F5A8);
	create_word	(0X2F5AA);
	create_word	(0X2F5AC);
	create_word	(0X2F5AE);
	create_word	(0X2F5B0);
	create_word	(0X2F5B2);
	create_word	(0X2F5B4);
	create_word	(0X2F5B6);
	create_word	(0X2F5B8);
	create_word	(0X2F5BA);
	create_word	(0X2F5BC);
	create_word	(0X2F5BE);
	create_word	(0X2F5C0);
	create_word	(0X2F5C2);
	create_word	(0X2F5C4);
	create_word	(0X2F5C6);
	create_word	(0X2F5C8);
	create_word	(0X2F5CA);
	create_word	(0X2F5CC);
	create_word	(0X2F5CE);
	create_word	(0X2F5D0);
	create_word	(0X2F5D2);
	create_word	(0X2F5D4);
	create_word	(0X2F5D6);
	create_word	(0X2F5D8);
	create_word	(0X2F5DA);
	create_word	(0X2F5DC);
	create_word	(0X2F5DE);
	create_word	(0X2F5E0);
	create_word	(0X2F5E2);
	create_word	(0X2F5E4);
	create_word	(0X2F5E6);
	create_word	(0X2F5E8);
	create_word	(0X2F5EA);
	create_word	(0X2F5EC);
	create_word	(0X2F5EE);
	create_word	(0X2F5F0);
	create_word	(0X2F5F2);
	create_word	(0X2F5F4);
	create_word	(0X2F5F6);
	create_word	(0X2F5F8);
	create_word	(0X2F5FA);
	create_word	(0X2F5FC);
	create_word	(0X2F5FE);
	create_word	(0X2F600);
	create_word	(0X2F602);
	create_word	(0X2F604);
	create_word	(0X2F606);
	create_word	(0X2F608);
	create_word	(0X2F60A);
	create_word	(0X2F60C);
	create_word	(0X2F60E);
	create_word	(0X2F610);
	create_word	(0X2F612);
	create_word	(0X2F614);
	create_word	(0X2F616);
	create_word	(0X2F618);
	create_word	(0X2F61A);
	create_word	(0X2F61C);
	create_word	(0X2F61E);
	create_word	(0X2F620);
	create_word	(0X2F622);
	create_word	(0X2F624);
	create_word	(0X2F626);
	create_word	(0X2F628);
	create_word	(0X2F62A);
	create_word	(0X2F62C);
	create_word	(0X2F62E);
	create_word	(0X2F630);
	create_word	(0X2F632);
	create_word	(0X2F634);
	create_word	(0X2F636);
	create_word	(0X2F638);
	create_word	(0X2F63A);
	create_word	(0X2F63C);
	create_word	(0X2F63E);
	create_word	(0X2F640);
	create_word	(0X2F642);
	create_word	(0X2F644);
	create_word	(0X2F646);
	create_word	(0X2F648);
	create_word	(0X2F64A);
	create_word	(0X2F64C);
	create_word	(0X2F64E);
	create_word	(0X2F650);
	create_word	(0X2F652);
	create_word	(0X2F654);
	create_word	(0X2F656);
	create_word	(0X2F658);
	create_word	(0X2F65A);
	create_word	(0X2F65C);
	create_word	(0X2F65E);
	create_word	(0X2F660);
	create_word	(0X2F662);
	create_word	(0X2F664);
	create_word	(0X2F666);
	create_word	(0X2F668);
	create_word	(0X2F66A);
	create_word	(0X2F66C);
	create_word	(0X2F66E);
	create_word	(0X2F670);
	create_word	(0X2F672);
	create_word	(0X2F674);
	create_word	(0X2F676);
	create_word	(0X2F678);
	create_word	(0X2F67A);
	create_word	(0X2F67C);
	create_word	(0X2F67E);
	create_word	(0X2F680);
	create_word	(0X2F682);
	create_word	(0X2F684);
	create_word	(0X2F686);
	create_word	(0X2F688);
	create_word	(0X2F68A);
	create_word	(0X2F68C);
	create_word	(0X2F68E);
	create_word	(0X2F690);
	create_word	(0X2F692);
	create_word	(0X2F694);
	create_word	(0X2F696);
	create_word	(0X2F698);
	create_word	(0X2F69A);
	create_word	(0X2F69C);
	create_word	(0X2F69E);
	create_word	(0X2F6A0);
	create_word	(0X2F6A2);
	create_word	(0X2F6A4);
	create_word	(0X2F6A6);
	create_word	(0X2F6A8);
	create_word	(0X2F6AA);
	create_word	(0X2F6AC);
	create_word	(0X2F6AE);
	create_word	(0X2F6B0);
	create_word	(0X2F6B2);
	create_word	(0X2F6B4);
	create_word	(0X2F6B6);
	create_word	(0X2F6B8);
	create_word	(0X2F6BA);
	create_word	(0X2F6BC);
	create_word	(0X2F6BE);
	create_word	(0X2F6C0);
	create_word	(0X2F6C2);
	create_word	(0X2F6C4);
	create_word	(0X2F6C6);
	create_word	(0X2F6C8);
	create_word	(0X2F6CA);
	create_word	(0X2F6CC);
	create_word	(0X2F6CE);
	create_word	(0X2F6D0);
	create_word	(0X2F6D2);
	create_word	(0X2F6D4);
	create_word	(0X2F6D6);
	create_word	(0X2F6D8);
	create_word	(0X2F6DA);
	create_word	(0X2F6DC);
	create_word	(0X2F6DE);
	create_word	(0X2F6E0);
	create_word	(0X2F6E2);
	create_word	(0X2F6E4);
	create_word	(0X2F6E6);
	create_word	(0X2F6E8);
	create_word	(0X2F6EA);
	create_word	(0X2F6EC);
	create_word	(0X2F6EE);
	create_word	(0X2F6F0);
	create_word	(0X2F6F2);
	create_word	(0X2F6F4);
	create_word	(0X2F6F6);
	create_word	(0X2F6F8);
	create_word	(0X2F6FA);
	create_word	(0X2F6FC);
	create_word	(0X2F6FE);
	create_word	(0X2F700);
	create_word	(0X2F702);
	create_word	(0X2F704);
	create_word	(0X2F706);
	create_word	(0X2F708);
	create_word	(0X2F70A);
	create_word	(0X2F70C);
	create_word	(0X2F70E);
	create_word	(0X2F710);
	create_word	(0X2F712);
	create_word	(0X2F714);
	create_word	(0X2F716);
	create_word	(0X2F718);
	create_word	(0X2F71A);
	create_word	(0X2F71C);
	create_word	(0X2F71E);
	create_word	(0X2F720);
	create_word	(0X2F722);
	create_word	(0X2F724);
	create_word	(0X2F726);
	create_word	(0X2F728);
	create_word	(0X2F72A);
	create_word	(0X2F72C);
	create_word	(0X2F72E);
	create_word	(0X2F730);
	create_word	(0X2F732);
	create_word	(0X2F734);
	create_word	(0X2F736);
	create_word	(0X2F738);
	create_word	(0X2F73A);
	create_word	(0X2F73C);
	create_word	(0X2F73E);
	create_word	(0X2F740);
	create_word	(0X2F742);
	create_word	(0X2F744);
	create_word	(0X2F746);
	create_word	(0X2F748);
	create_word	(0X2F74A);
	create_word	(0X2F74C);
	create_word	(0X2F74E);
	create_word	(0X2F750);
	create_word	(0X2F752);
	create_word	(0X2F754);
	create_word	(0X2F756);
	create_word	(0X2F758);
	create_word	(0X2F75A);
	create_word	(0X2F75C);
	create_word	(0X2F75E);
	create_word	(0X2F760);
	create_word	(0X2F762);
	create_word	(0X2F764);
	create_word	(0X2F766);
	create_word	(0X2F768);
	create_word	(0X2F76A);
	create_word	(0X2F76C);
	create_word	(0X2F76E);
	create_word	(0X2F770);
	create_word	(0X2F772);
	create_word	(0X2F774);
	create_word	(0X2F776);
	create_word	(0X2F778);
	create_word	(0X2F77A);
	create_word	(0X2F77C);
	create_word	(0X2F77E);
	create_word	(0X2F780);
	create_word	(0X2F782);
	create_word	(0X2F784);
	create_word	(0X2F786);
	create_word	(0X2F788);
	create_word	(0X2F78A);
	create_word	(0X2F78C);
	create_word	(0X2F78E);
	create_word	(0X2F790);
	create_word	(0X2F792);
	create_word	(0X2F794);
	create_word	(0X2F796);
	create_word	(0X2F798);
	create_word	(0X2F79A);
	create_word	(0X2F79C);
	create_word	(0X2F79E);
	create_word	(0X2F7A0);
	create_word	(0X2F7A2);
	create_word	(0X2F7A4);
	create_word	(0X2F7A6);
	create_word	(0X2F7A8);
	create_word	(0X2F7AA);
	create_word	(0X2F7AC);
	create_word	(0X2F7AE);
	create_word	(0X2F7B0);
	create_word	(0X2F7B2);
	create_word	(0X2F7B4);
	create_word	(0X2F7B6);
	create_word	(0X2F7B8);
	create_word	(0X2F7BA);
	create_word	(0X2F7BC);
	create_word	(0X2F7BE);
	create_word	(0X2F7C0);
	create_word	(0X2F7C2);
	create_word	(0X2F7C4);
	create_word	(0X2F7C6);
	create_word	(0X2F7C8);
	create_word	(0X2F7CA);
	create_word	(0X2F7CC);
	create_word	(0X2F7CE);
	create_word	(0X2F7D0);
	create_word	(0X2F7D2);
	create_word	(0X2F7D4);
	create_word	(0X2F7D6);
	create_word	(0X2F7D8);
	create_word	(0X2F7DA);
	create_word	(0X2F7DC);
	create_word	(0X2F7DE);
	create_word	(0X2F7E0);
	create_word	(0X2F7E2);
	create_word	(0X2F7E4);
	create_word	(0X2F7E6);
	create_word	(0X2F7E8);
	create_word	(0X2F7EA);
	create_word	(0X2F7EC);
	create_word	(0X2F7EE);
	create_word	(0X2F7F0);
	create_word	(0X2F7F2);
	create_word	(0X2F7F4);
	create_word	(0X2F7F6);
	create_word	(0X2F7F8);
	create_word	(0X2F7FA);
	create_word	(0X2F7FC);
	create_word	(0X2F7FE);
	create_word	(0X2F800);
	create_word	(0X2F802);
	create_word	(0X2F804);
	create_word	(0X2F806);
	create_word	(0X2F808);
	create_word	(0X2F80A);
	create_word	(0X2F80C);
	create_word	(0X2F80E);
	create_word	(0X2F810);
	create_word	(0X2F812);
	create_word	(0X2F814);
	create_word	(0X2F816);
	create_word	(0X2F818);
	create_word	(0X2F81A);
	create_word	(0X2F81C);
	create_word	(0X2F81E);
	create_word	(0X2F820);
	create_word	(0X2F822);
	create_word	(0X2F824);
	create_word	(0X2F826);
	create_word	(0X2F828);
	create_word	(0X2F82A);
	create_word	(0X2F82C);
	create_word	(0X2F82E);
	create_word	(0X2F830);
	create_word	(0X2F832);
	create_word	(0X2F834);
	create_word	(0X2F836);
	create_word	(0X2F838);
	create_word	(0X2F83A);
	create_word	(0X2F83C);
	create_word	(0X2F83E);
	create_word	(0X2F840);
	create_word	(0X2F842);
	create_word	(0X2F844);
	create_word	(0X2F846);
	create_word	(0X2F848);
	create_word	(0X2F84A);
	create_word	(0X2F84C);
	create_word	(0X2F84E);
	create_word	(0X2F850);
	create_word	(0X2F852);
	create_word	(0X2F854);
	create_word	(0X2F856);
	create_word	(0X2F858);
	create_word	(0X2F85A);
	create_word	(0X2F85C);
	create_word	(0X2F85E);
	create_word	(0X2F860);
	create_word	(0X2F862);
	create_word	(0X2F864);
	create_word	(0X2F866);
	create_word	(0X2F868);
	create_word	(0X2F86A);
	create_word	(0X2F86C);
	create_word	(0X2F86E);
	create_word	(0X2F870);
	create_word	(0X2F872);
	create_word	(0X2F874);
	create_word	(0X2F876);
	create_word	(0X2F878);
	create_word	(0X2F87A);
	create_word	(0X2F87C);
	create_word	(0X2F87E);
	create_word	(0X2F880);
	create_word	(0X2F882);
	create_word	(0X2F884);
	create_word	(0X2F886);
	create_word	(0X2F888);
	create_word	(0X2F88A);
	create_word	(0X2F88C);
	create_word	(0X2F88E);
	create_word	(0X2F890);
	create_word	(0X2F892);
	create_word	(0X2F894);
	create_word	(0X2F896);
	create_word	(0X2F898);
	create_word	(0X2F89A);
	create_word	(0X2F89C);
	create_word	(0X2F89E);
	create_word	(0X2F8A0);
	create_word	(0X2F8A2);
	create_word	(0X2F8A4);
	create_word	(0X2F8A6);
	create_word	(0X2F8A8);
	create_word	(0X2F8AA);
	create_word	(0X2F8AC);
	create_word	(0X2F8AE);
	create_word	(0X2F8B0);
	create_word	(0X2F8B2);
	create_word	(0X2F8B4);
	create_word	(0X2F8B6);
	create_word	(0X2F8B8);
	create_word	(0X2F8BA);
	create_word	(0X2F8BC);
	create_word	(0X2F8BE);
	create_word	(0X2F8C0);
	create_word	(0X2F8C2);
	create_word	(0X2F8C4);
	create_word	(0X2F8C6);
	create_word	(0X2F8C8);
	create_word	(0X2F8CA);
	create_word	(0X2F8CC);
	create_word	(0X2F8CE);
	create_word	(0X2F8D0);
	create_word	(0X2F8D2);
	create_word	(0X2F8D4);
	create_word	(0X2F8D6);
	create_word	(0X2F8D8);
	create_word	(0X2F8DA);
	create_word	(0X2F8DC);
	create_word	(0X2F8DE);
	create_word	(0X2F8E0);
	create_word	(0X2F8E2);
	create_word	(0X2F8E4);
	create_word	(0X2F8E6);
	create_word	(0X2F8E8);
	create_word	(0X2F8EA);
	create_word	(0X2F8EC);
	create_word	(0X2F8EE);
	create_word	(0X2F8F0);
	create_word	(0X2F8F2);
	create_word	(0X2F8F4);
	create_word	(0X2F8F6);
	create_word	(0X2F8F8);
	create_word	(0X2F8FA);
	create_word	(0X2F8FC);
	create_word	(0X2F8FE);
	create_word	(0X2F900);
	create_word	(0X2F902);
	create_word	(0X2F904);
	create_word	(0X2F906);
	create_word	(0X2F908);
	create_word	(0X2F90A);
	create_word	(0X2F90C);
	create_word	(0X2F90E);
	create_word	(0X2F910);
	create_word	(0X2F912);
	create_word	(0X2F914);
	create_word	(0X2F916);
	create_word	(0X2F918);
	create_word	(0X2F91A);
	create_word	(0X2F91C);
	create_word	(0X2F91E);
	create_word	(0X2F920);
	create_word	(0X2F922);
	create_word	(0X2F924);
	create_word	(0X2F926);
	create_word	(0X2F928);
	create_word	(0X2F92A);
	create_word	(0X2F92C);
	create_word	(0X2F92E);
	create_word	(0X2F930);
	create_word	(0X2F932);
	create_word	(0X2F934);
	create_word	(0X2F936);
	create_word	(0X2F938);
	create_word	(0X2F93A);
	create_word	(0X2F93C);
	create_word	(0X2F93E);
	create_word	(0X2F940);
	create_word	(0X2F942);
	create_word	(0X2F944);
	create_word	(0X2F946);
	create_word	(0X2F948);
	create_word	(0X2F94A);
	create_word	(0X2F94C);
	create_word	(0X2F94E);
	create_word	(0X2F950);
	create_word	(0X2F952);
	create_word	(0X2F954);
	create_word	(0X2F956);
	create_word	(0X2F958);
	create_word	(0X2F95A);
	create_word	(0X2F95C);
	create_word	(0X2F95E);
	create_word	(0X2F960);
	create_word	(0X2F962);
	create_word	(0X2F964);
	create_word	(0X2F966);
	create_word	(0X2F968);
	create_word	(0X2F96A);
	create_word	(0X2F96C);
	create_word	(0X2F96E);
	create_word	(0X2F970);
	create_word	(0X2F972);
	create_word	(0X2F974);
	create_word	(0X2F976);
	create_word	(0X2F978);
	create_word	(0X2F97A);
	create_word	(0X2F97C);
	create_word	(0X2F97E);
	create_word	(0X2F980);
	create_word	(0X2F982);
	create_word	(0X2F984);
	create_word	(0X2F986);
	create_word	(0X2F988);
	create_word	(0X2F98A);
	create_word	(0X2F98C);
	create_word	(0X2F98E);
	create_word	(0X2F990);
	create_word	(0X2F992);
	create_word	(0X2F994);
	create_word	(0X2F996);
	create_word	(0X2F998);
	create_word	(0X2F99A);
	create_word	(0X2F99C);
	create_word	(0X2F99E);
	create_word	(0X2F9A0);
	create_word	(0X2F9A2);
	create_word	(0X2F9A4);
	create_word	(0X2F9A6);
	create_word	(0X2F9A8);
	create_word	(0X2F9AA);
	create_word	(0X2F9AC);
	create_word	(0X2F9AE);
	create_word	(0X2F9B0);
	create_word	(0X2F9B2);
	create_word	(0X2F9B4);
	create_word	(0X2F9B6);
	create_word	(0X2F9B8);
	create_word	(0X2F9BA);
	create_word	(0X2F9BC);
	create_word	(0X2F9BE);
	create_word	(0X2F9C0);
	create_word	(0X2F9C2);
	create_word	(0X2F9C4);
	create_word	(0X2F9C6);
	create_word	(0X2F9C8);
	create_word	(0X2F9CA);
	create_word	(0X2F9CC);
	create_word	(0X2F9CE);
	create_word	(0X2F9D0);
	create_word	(0X2F9D2);
	create_word	(0X2F9D4);
	create_word	(0X2F9D6);
	create_word	(0X2F9D8);
	create_word	(0X2F9DA);
	create_word	(0X2F9DC);
	create_word	(0X2F9DE);
	create_word	(0X2F9E0);
	create_word	(0X2F9E2);
	create_word	(0X2F9E4);
	create_word	(0X2F9E6);
	create_word	(0X2F9E8);
	create_word	(0X2F9EA);
	create_word	(0X2F9EC);
	create_word	(0X2F9EE);
	create_word	(0X2F9F0);
	create_word	(0X2F9F2);
	create_word	(0X2F9F4);
	create_word	(0X2F9F6);
	create_word	(0X2F9F8);
	create_word	(0X2F9FA);
	create_word	(0X2F9FC);
	create_word	(0X2F9FE);
	create_word	(0X2FA00);
	create_word	(0X2FA02);
	create_word	(0X2FA04);
	create_word	(0X2FA06);
	create_word	(0X2FA08);
	create_word	(0X2FA0A);
	create_word	(0X2FA0C);
	create_word	(0X2FA0E);
	create_word	(0X2FA10);
	create_word	(0X2FA12);
	create_word	(0X2FA14);
	create_word	(0X2FA16);
	create_word	(0X2FA18);
	create_word	(0X2FA1A);
	create_word	(0X2FA1C);
	create_word	(0X2FA1E);
	create_word	(0X2FA20);
	create_word	(0X2FA22);
	create_word	(0X2FA24);
	create_word	(0X2FA26);
	create_word	(0X2FA28);
	create_word	(0X2FA2A);
	create_word	(0X2FA2C);
	create_word	(0X2FA2E);
	create_word	(0X2FA30);
	create_word	(0X2FA32);
	create_word	(0X2FA34);
	create_word	(0X2FA36);
	create_word	(0X2FA38);
	create_word	(0X2FA3A);
	create_word	(0X2FA3C);
	create_word	(0X2FA3E);
	create_word	(0X2FA40);
	create_word	(0X2FA42);
	create_word	(0X2FA44);
	create_word	(0X2FA46);
	create_word	(0X2FA48);
	create_word	(0X2FA4A);
	create_word	(0X2FA4C);
	create_word	(0X2FA4E);
	create_word	(0X2FA50);
	create_word	(0X2FA52);
	create_word	(0X2FA54);
	create_word	(0X2FA56);
	create_word	(0X2FA58);
	create_word	(0X2FA5A);
	create_word	(0X2FA5C);
	create_word	(0X2FA5E);
	create_word	(0X2FA60);
	create_word	(0X2FA62);
	create_word	(0X2FA64);
	create_word	(0X2FA66);
	create_word	(0X2FA68);
	create_word	(0X2FA6A);
	create_word	(0X2FA6C);
	create_word	(0X2FA6E);
	create_word	(0X2FA70);
	create_word	(0X2FA72);
	create_word	(0X2FA74);
	create_word	(0X2FA76);
	create_word	(0X2FA78);
	create_word	(0X2FA7A);
	create_word	(0X2FA7C);
	create_word	(0X2FA7E);
	create_word	(0X2FA80);
	create_word	(0X2FA82);
	create_word	(0X2FA84);
	create_word	(0X2FA86);
	create_word	(0X2FA88);
	create_word	(0X2FA8A);
	create_word	(0X2FA8C);
	create_word	(0X2FA8E);
	create_word	(0X2FA90);
	create_word	(0X2FA92);
	create_word	(0X2FA94);
	create_word	(0X2FA96);
	create_word	(0X2FA98);
	create_word	(0X2FA9A);
	create_word	(0X2FA9C);
	create_word	(0X2FA9E);
	create_word	(0X2FAA0);
	create_word	(0X2FAA2);
	create_word	(0X2FAA4);
	create_word	(0X2FAA6);
	create_word	(0X2FAA8);
	create_word	(0X2FAAA);
	create_word	(0X2FAAC);
	create_word	(0X2FAAE);
	create_word	(0X2FAB0);
	create_word	(0X2FAB2);
	create_word	(0X2FAB4);
	create_word	(0X2FAB6);
	create_word	(0X2FAB8);
	create_word	(0X2FABA);
	create_word	(0X2FABC);
	create_word	(0X2FABE);
	create_word	(0X2FAC0);
	create_word	(0X2FAC2);
	create_word	(0X2FAC4);
	create_word	(0X2FAC6);
	create_word	(0X2FAC8);
	create_word	(0X2FACA);
	create_word	(0X2FACC);
	create_word	(0X2FACE);
	create_word	(0X2FAD0);
	create_word	(0X2FAD2);
	create_word	(0X2FAD4);
	create_word	(0X2FAD6);
	create_word	(0X2FAD8);
	create_word	(0X2FADA);
	create_word	(0X2FADC);
	create_word	(0X2FADE);
	create_word	(0X2FAE0);
	create_word	(0X2FAE2);
	create_word	(0X2FAE4);
	create_word	(0X2FAE6);
	create_word	(0X2FAE8);
	create_word	(0X2FAEA);
	create_word	(0X2FAEC);
	create_word	(0X2FAEE);
	create_word	(0X2FAF0);
	create_word	(0X2FAF2);
	create_word	(0X2FAF4);
	create_word	(0X2FAF6);
	create_word	(0X2FAF8);
	create_word	(0X2FAFA);
	create_word	(0X2FAFC);
	create_word	(0X2FAFE);
	create_word	(0X2FB00);
	create_word	(0X2FB02);
	create_word	(0X2FB04);
	create_word	(0X2FB06);
	create_word	(0X2FB08);
	create_word	(0X2FB0A);
	create_word	(0X2FB0C);
	create_word	(0X2FB0E);
	create_word	(0X2FB10);
	create_word	(0X2FB12);
	create_word	(0X2FB14);
	create_word	(0X2FB16);
	create_word	(0X2FB18);
	create_word	(0X2FB1A);
	create_word	(0X2FB1C);
	create_word	(0X2FB1E);
	create_word	(0X2FB20);
	create_word	(0X2FB22);
	create_word	(0X2FB24);
	create_word	(0X2FB26);
	create_word	(0X2FB28);
	create_word	(0X2FB2A);
	create_word	(0X2FB2C);
	create_word	(0X2FB2E);
	create_word	(0X2FB30);
	create_word	(0X2FB32);
	create_word	(0X2FB34);
	create_word	(0X2FB36);
	create_word	(0X2FB38);
	create_word	(0X2FB3A);
	create_word	(0X2FB3C);
	create_word	(0X2FB3E);
	create_word	(0X2FB40);
	create_word	(0X2FB42);
	create_word	(0X2FB44);
	create_word	(0X2FB46);
	create_word	(0X2FB48);
	create_word	(0X2FB4A);
	create_word	(0X2FB4C);
	create_word	(0X2FB4E);
	create_word	(0X2FB50);
	create_word	(0X2FB52);
	create_word	(0X2FB54);
	create_word	(0X2FB56);
	create_word	(0X2FB58);
	create_word	(0X2FB5A);
	create_word	(0X2FB5C);
	create_word	(0X2FB5E);
	create_word	(0X2FB60);
	create_word	(0X2FB62);
	create_word	(0X2FB64);
	create_word	(0X2FB66);
	create_word	(0X2FB68);
	create_word	(0X2FB6A);
	create_word	(0X2FB6C);
	create_word	(0X2FB6E);
	create_word	(0X2FB70);
	create_word	(0X2FB72);
	create_word	(0X2FB74);
	create_word	(0X2FB76);
	create_word	(0X2FB78);
	create_word	(0X2FB7A);
	create_word	(0X2FB7C);
	create_word	(0X2FB7E);
	create_word	(0X2FB80);
	create_word	(0X2FB82);
	create_word	(0X2FB84);
	create_word	(0X2FB86);
	create_word	(0X2FB88);
	create_word	(0X2FB8A);
	create_word	(0X2FB8C);
	create_word	(0X2FB8E);
	create_word	(0X2FB90);
	create_word	(0X2FB92);
	create_word	(0X2FB94);
	create_word	(0X2FB96);
	create_word	(0X2FB98);
	create_word	(0X2FB9A);
	create_word	(0X2FB9C);
	create_word	(0X2FB9E);
	create_word	(0X2FBA0);
	create_word	(0X2FBA2);
	create_word	(0X2FBA4);
	create_word	(0X2FBA6);
	create_word	(0X2FBA8);
	create_word	(0X2FBAA);
	create_word	(0X2FBAC);
	create_word	(0X2FBAE);
	create_word	(0X2FBB0);
	create_word	(0X2FBB2);
	create_word	(0X2FBB4);
	create_word	(0X2FBB6);
	create_word	(0X2FBB8);
	create_word	(0X2FBBA);
	create_word	(0X2FBBC);
	create_word	(0X2FBBE);
	create_word	(0X2FBC0);
	create_word	(0X2FBC2);
	create_word	(0X2FBC4);
	create_word	(0X2FBC6);
	create_word	(0X2FBC8);
	create_word	(0X2FBCA);
	create_word	(0X2FBCC);
	create_word	(0X2FBCE);
	create_word	(0X2FBD0);
	create_word	(0X2FBD2);
	create_word	(0X2FBD4);
	create_word	(0X2FBD6);
	create_word	(0X2FBD8);
	create_word	(0X2FBDA);
	create_word	(0X2FBDC);
	create_word	(0X2FBDE);
	create_word	(0X2FBE0);
	create_word	(0X2FBE2);
	create_word	(0X2FBE4);
	create_word	(0X2FBE6);
	create_word	(0X2FBE8);
	create_word	(0X2FBEA);
	create_word	(0X2FBEC);
	create_word	(0X2FBEE);
	create_word	(0X2FBF0);
	create_word	(0X2FBF2);
	create_word	(0X2FBF4);
	create_word	(0X2FBF6);
	create_word	(0X2FBF8);
	create_word	(0X2FBFA);
	create_word	(0X2FBFC);
	create_word	(0X2FBFE);
	create_word	(0X2FC00);
	create_word	(0X2FC02);
	create_word	(0X2FC04);
	create_word	(0X2FC06);
	create_word	(0X2FC08);
	create_word	(0X2FC0A);
	create_word	(0X2FC0C);
	create_word	(0X2FC0E);
	create_word	(0X2FC10);
	create_word	(0X2FC12);
	create_word	(0X2FC14);
	create_word	(0X2FC16);
	create_word	(0X2FC18);
	create_word	(0X2FC1A);
	create_word	(0X2FC1C);
	create_word	(0X2FC1E);
	create_word	(0X2FC20);
	create_word	(0X2FC22);
	create_word	(0X2FC24);
	create_word	(0X2FC26);
	create_word	(0X2FC28);
	create_word	(0X2FC2A);
	create_word	(0X2FC2C);
	create_word	(0X2FC2E);
	create_word	(0X2FC30);
	create_word	(0X2FC32);
	create_word	(0X2FC34);
	create_word	(0X2FC36);
	create_word	(0X2FC38);
	create_word	(0X2FC3A);
	create_word	(0X2FC3C);
	create_word	(0X2FC3E);
	create_word	(0X2FC40);
	create_word	(0X2FC42);
	create_word	(0X2FC44);
	create_word	(0X2FC46);
	create_word	(0X2FC48);
	create_word	(0X2FC4A);
	create_word	(0X2FC4C);
	create_word	(0X2FC4E);
	create_word	(0X2FC50);
	create_word	(0X2FC52);
	create_word	(0X2FC54);
	create_word	(0X2FC56);
	create_word	(0X2FC58);
	create_word	(0X2FC5A);
	create_word	(0X2FC5C);
	create_word	(0X2FC5E);
	create_word	(0X2FC60);
	create_word	(0X2FC62);
	create_word	(0X2FC64);
	create_word	(0X2FC66);
	create_word	(0X2FC68);
	create_word	(0X2FC6A);
	create_word	(0X2FC6C);
	create_word	(0X2FC6E);
	create_word	(0X2FC70);
	create_word	(0X2FC72);
	create_word	(0X2FC74);
	create_word	(0X2FC76);
	create_word	(0X2FC78);
	create_word	(0X2FC7A);
	create_word	(0X2FC7C);
	create_word	(0X2FC7E);
	create_word	(0X2FC80);
	create_word	(0X2FC82);
	create_word	(0X2FC84);
	create_word	(0X2FC86);
	create_word	(0X2FC88);
	create_word	(0X2FC8A);
	create_word	(0X2FC8C);
	create_word	(0X2FC8E);
	create_word	(0X2FC90);
	create_word	(0X2FC92);
	create_word	(0X2FC94);
	create_word	(0X2FC96);
	create_word	(0X2FC98);
	create_word	(0X2FC9A);
	create_word	(0X2FC9C);
	create_word	(0X2FC9E);
	create_word	(0X2FCA0);
	create_word	(0X2FCA2);
	create_word	(0X2FCA4);
	create_word	(0X2FCA6);
	create_word	(0X2FCA8);
	create_word	(0X2FCAA);
	create_word	(0X2FCAC);
	create_word	(0X2FCAE);
	create_word	(0X2FCB0);
	create_word	(0X2FCB2);
	create_word	(0X2FCB4);
	create_word	(0X2FCB6);
	create_word	(0X2FCB8);
	create_word	(0X2FCBA);
	create_word	(0X2FCBC);
	create_word	(0X2FCBE);
	create_word	(0X2FCC0);
	create_word	(0X2FCC2);
	create_word	(0X2FCC4);
	create_word	(0X2FCC6);
	create_word	(0X2FCC8);
	create_word	(0X2FCCA);
	create_word	(0X2FCCC);
	create_word	(0X2FCCE);
	create_word	(0X2FCD0);
	create_word	(0X2FCD2);
	create_word	(0X2FCD4);
	create_word	(0X2FCD6);
	create_word	(0X2FCD8);
	create_word	(0X2FCDA);
	create_word	(0X2FCDC);
	create_word	(0X2FCDE);
	create_word	(0X2FCE0);
	create_word	(0X2FCE2);
	create_word	(0X2FCE4);
	create_word	(0X2FCE6);
	create_word	(0X2FCE8);
	create_word	(0X2FCEA);
	create_word	(0X2FCEC);
	create_word	(0X2FCEE);
	create_word	(0X2FCF0);
	create_word	(0X2FCF2);
	create_word	(0X2FCF4);
	create_word	(0X2FCF6);
	create_word	(0X2FCF8);
	create_word	(0X2FCFA);
	create_word	(0X2FCFC);
	create_word	(0X2FCFE);
	create_word	(0X2FD00);
	create_word	(0X2FD02);
	create_word	(0X2FD04);
	create_word	(0X2FD06);
	create_word	(0X2FD08);
	create_word	(0X2FD0A);
	create_word	(0X2FD0C);
	create_word	(0X2FD0E);
	create_word	(0X2FD10);
	create_word	(0X2FD12);
	create_word	(0X2FD14);
	create_word	(0X2FD16);
	create_word	(0X2FD18);
	create_word	(0X2FD1A);
	create_word	(0X2FD1C);
	create_word	(0X2FD1E);
	create_word	(0X2FD20);
	create_word	(0X2FD22);
	create_word	(0X2FD24);
	create_word	(0X2FD26);
	create_word	(0X2FD28);
	create_word	(0X2FD2A);
	create_word	(0X2FD2C);
	create_word	(0X2FD2E);
	create_word	(0X2FD30);
	create_word	(0X2FD32);
	create_word	(0X2FD34);
	create_word	(0X2FD36);
	create_word	(0X2FD38);
	create_word	(0X2FD3A);
	create_word	(0X2FD3C);
	create_word	(0X2FD3E);
	create_word	(0X2FD40);
	create_word	(0X2FD42);
	create_word	(0X2FD44);
	create_word	(0X2FD46);
	create_word	(0X2FD48);
	create_word	(0X2FD4A);
	create_word	(0X2FD4C);
	create_word	(0X2FD4E);
	create_word	(0X2FD50);
	create_word	(0X2FD52);
	create_word	(0X2FD54);
	create_word	(0X2FD56);
	create_word	(0X2FD58);
	create_word	(0X2FD5A);
	create_word	(0X2FD5C);
	create_word	(0X2FD5E);
	create_word	(0X2FD60);
	create_word	(0X2FD62);
	create_word	(0X2FD64);
	create_word	(0X2FD66);
	create_word	(0X2FD68);
	create_word	(0X2FD6A);
	create_word	(0X2FD6C);
	create_word	(0X2FD6E);
	create_word	(0X2FD70);
	create_word	(0X2FD72);
	create_word	(0X2FD74);
	create_word	(0X2FD76);
	create_word	(0X2FD78);
	create_word	(0X2FD7A);
	create_word	(0X2FD7C);
	create_word	(0X2FD7E);
	create_word	(0X2FD80);
	create_word	(0X2FD82);
	create_word	(0X2FD84);
	create_word	(0X2FD86);
	create_word	(0X2FD88);
	create_word	(0X2FD8A);
	create_word	(0X2FD8C);
	create_word	(0X2FD8E);
	create_word	(0X2FD90);
	create_word	(0X2FD92);
	create_word	(0X2FD94);
	create_word	(0X2FD96);
	create_word	(0X2FD98);
	create_word	(0X2FD9A);
	create_word	(0X2FD9C);
	create_word	(0X2FD9E);
	create_word	(0X2FDA0);
	create_word	(0X2FDA2);
	create_word	(0X2FDA4);
	create_word	(0X2FDA6);
	create_word	(0X2FDA8);
	create_word	(0X2FDAA);
	create_word	(0X2FDAC);
	create_word	(0X2FDAE);
	create_word	(0X2FDB0);
	create_word	(0X2FDB2);
	create_word	(0X2FDB4);
	create_word	(0X2FDB6);
	create_word	(0X2FDB8);
	create_word	(0X2FDBA);
	create_word	(0X2FDBC);
	create_word	(0X2FDBE);
	create_word	(0X2FDC0);
	create_word	(0X2FDC2);
	create_word	(0X2FDC4);
	create_word	(0X2FDC6);
	create_word	(0X2FDC8);
	create_word	(0X2FDCA);
	create_word	(0X2FDCC);
	create_word	(0X2FDCE);
	create_word	(0X2FDD0);
	create_word	(0X2FDD2);
	create_word	(0X2FDD4);
	create_word	(0X2FDD6);
	create_word	(0X2FDD8);
	create_word	(0X2FDDA);
	create_word	(0X2FDDC);
	create_insn	(0X2FDDE);
	set_name	(0X2FDDE,	"preRender_line");
	create_insn	(x=0X2FDE1);
	op_hex		(x,	1);
	create_insn	(x=0X2FDE4);
	op_stkvar	(x,	1);
	set_cmt	(0X2FDE7,	"var_1C is some kind of struct sizeof 0x1C",	0);
	create_insn	(x=0X2FDE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FDEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FDF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FDF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FDF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FDFF);
	op_hex		(x,	1);
	create_insn	(x=0X2FE06);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X2FE10,	E_PREV + 0,	"NOP: Many sorts of lines");
	update_extra_cmt		(0X2FE10,	E_PREV + 1,	"and frames (2D and 3D)");
	update_extra_cmt		(0X2FE10,	E_PREV + 2,	"are missing.");
	create_insn	(x=0X2FE15);
	op_hex		(x,	1);
	create_insn	(0X2FE1C);
	set_name	(0X2FE1C,	"add_exit_handler");
	create_insn	(x=0X2FE1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FE25);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FE3F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X2FE48);
	create_insn	(0X2FE59);
	set_name	(0X2FE59,	"call_exitlist");
	create_insn	(x=0X2FE5D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FE66);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X2FE72);
	create_insn	(0X2FE74);
	set_name	(0X2FE74,	"call_exitlist2");
	create_insn	(0X2FE82);
	set_name	(0X2FE82,	"file_paras");
	create_insn	(x=0X2FE85);
	op_hex		(x,	1);
	create_insn	(x=0X2FE8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FE8E);
	op_stkvar	(x,	0);
	create_insn	(0X2FE94);
	set_name	(0X2FE94,	"file_paras_nofatal");
	create_insn	(x=0X2FE97);
	op_hex		(x,	1);
	create_insn	(x=0X2FE9D);
	op_stkvar	(x,	0);
	create_byte	(0X2FEA4);
	create_insn	(0X2FEA5);
	set_name	(0X2FEA5,	"file_paras_fatal");
	create_insn	(x=0X2FEA8);
	op_hex		(x,	1);
	create_insn	(x=0X2FEAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FEB3);
	op_stkvar	(x,	1);
	set_name	(0X2FEB3,	"_file_paras");
	set_cmt	(0X2FEBA,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read",	0);
	create_insn	(x=0X2FEBA);
	op_hex		(x,	0);
	create_insn	(x=0X2FEBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FECD);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FED4);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FEDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FEE6);
	op_hex		(x,	1);
	set_cmt	(0X2FEE9,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from end of file",	0);
	create_insn	(x=0X2FEE9);
	op_hex		(x,	0);
	create_insn	(x=0X2FEEF);
	op_hex		(x,	1);
	set_cmt	(0X2FEF2,	"DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nAL = method: offset from beginning of file",	0);
	create_insn	(x=0X2FEF2);
	op_hex		(x,	0);
	create_insn	(x=0X2FEF8);
	op_hex		(x,	1);
	create_insn	(x=0X2FF00);
	op_hex		(x,	1);
	create_insn	(x=0X2FF02);
	op_hex		(x,	1);
	create_insn	(x=0X2FF04);
	op_hex		(x,	1);
	create_insn	(x=0X2FF06);
	op_hex		(x,	1);
	create_insn	(x=0X2FF08);
	op_hex		(x,	1);
	create_insn	(x=0X2FF0A);
	op_hex		(x,	1);
	create_insn	(x=0X2FF0C);
	op_hex		(x,	1);
	create_insn	(x=0X2FF0E);
	op_hex		(x,	1);
	create_insn	(x=0X2FF12);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FF15);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF18);
	op_hex		(x,	1);
	set_cmt	(0X2FF1A,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X2FF1A);
	op_hex		(x,	0);
	create_insn	(x=0X2FF1C);
	op_stkvar	(x,	1);
	create_insn	(0X2FF26);
	set_name	(0X2FF26,	"file_decomp_paras");
	create_insn	(x=0X2FF29);
	op_hex		(x,	1);
	create_insn	(x=0X2FF2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF32);
	op_stkvar	(x,	0);
	create_insn	(0X2FF38);
	set_name	(0X2FF38,	"file_decomp_paras_nofatal");
	create_insn	(x=0X2FF3B);
	op_hex		(x,	1);
	create_insn	(x=0X2FF41);
	op_stkvar	(x,	0);
	create_byte	(0X2FF48);
	create_insn	(0X2FF49);
	set_name	(0X2FF49,	"file_decomp_paras_fatal");
	create_insn	(x=0X2FF4C);
	op_hex		(x,	1);
	create_insn	(x=0X2FF52);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FF57);
	op_stkvar	(x,	1);
	set_name	(0X2FF57,	"_file_decomp_paras");
	create_insn	(x=0X2FF5A);
	op_stkvar	(x,	1);
	set_cmt	(0X2FF61,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read",	0);
	create_insn	(x=0X2FF61);
	op_hex		(x,	0);
	create_insn	(x=0X2FF68);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FF6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF74);
	op_hex		(x,	1);
	set_cmt	(0X2FF76,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X2FF76);
	op_hex		(x,	0);
	create_insn	(x=0X2FF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF7F);
	op_hex		(x,	1);
	set_cmt	(0X2FF81,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X2FF81);
	op_hex		(x,	0);
	create_insn	(x=0X2FF83);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FF8D);
	op_hex		(x,	1);
	create_insn	(x=0X2FF95);
	op_hex		(x,	1);
	create_insn	(x=0X2FF97);
	op_hex		(x,	1);
	create_insn	(x=0X2FF99);
	op_hex		(x,	1);
	create_insn	(x=0X2FF9B);
	op_hex		(x,	1);
	create_insn	(x=0X2FF9D);
	op_hex		(x,	1);
	create_insn	(x=0X2FF9F);
	op_hex		(x,	1);
	create_insn	(x=0X2FFA1);
	op_hex		(x,	1);
	create_insn	(x=0X2FFA3);
	op_hex		(x,	1);
	create_insn	(x=0X2FFAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FFB1);
	op_hex		(x,	1);
	set_cmt	(0X2FFB3,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X2FFB3);
	op_hex		(x,	0);
	create_insn	(x=0X2FFB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X2FFC4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FFCB);
	op_stkvar	(x,	0);
	create_insn	(0X2FFD4);
	set_name	(0X2FFD4,	"file_find");
	create_insn	(x=0X2FFDA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FFDD);
	op_hex		(x,	1);
	set_cmt	(0X2FFDF,	"DOS - SET DISK TRANSFER AREA ADDRESS\nDS:DX -> disk transfer buffer",	0);
	create_insn	(x=0X2FFDF);
	op_hex		(x,	0);
	create_insn	(x=0X2FFE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X2FFE6);
	op_hex		(x,	1);
	set_cmt	(0X2FFE8,	"DOS - 2+ - FIND FIRST ASCIZ (FINDFIRST)\nCX = search attributes\nDS:DX -> ASCIZ filespec\n(drive, path, and wildcards allowed)",	0);
	create_insn	(x=0X2FFE8);
	op_hex		(x,	0);
	create_insn	(x=0X2FFEC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X2FFF3);
	op_stkvar	(x,	1);
	set_name	(0X30011,	"_file_find_ok");
	create_insn	(x=0X30015);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30022);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X3002A);
	set_name	(0X3002A,	"_file_find_err");
	create_insn	(0X3002E);
	set_name	(0X3002E,	"file_find_next");
	create_insn	(x=0X30034);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30037);
	op_hex		(x,	1);
	set_cmt	(0X30039,	"DOS - SET DISK TRANSFER AREA ADDRESS\nDS:DX -> disk transfer buffer",	0);
	create_insn	(x=0X30039);
	op_hex		(x,	0);
	create_insn	(x=0X3003B);
	op_hex		(x,	1);
	set_cmt	(0X3003D,	"DOS - 2+ - FIND NEXT ASCIZ (FINDNEXT)\n[DTA] = data block from\nlast AH = 4Eh/4Fh call",	0);
	create_insn	(x=0X3003D);
	op_hex		(x,	0);
	update_extra_cmt		(0X30044,	E_PREV + 0,	"");
	update_extra_cmt		(0X30044,	E_PREV + 1,	"Formely called scale_value.");
	update_extra_cmt		(0X30044,	E_PREV + 2,	"Computes the product between the");
	update_extra_cmt		(0X30044,	E_PREV + 3,	"two arguments and divides it by");
	update_extra_cmt		(0X30044,	E_PREV + 4,	"2^14 = 16384. 2^14 is a");
	update_extra_cmt		(0X30044,	E_PREV + 5,	"normalization value for cosines");
	update_extra_cmt		(0X30044,	E_PREV + 6,	"and sines given by sinetable.");
	create_insn	(0X30044);
	set_name	(0X30044,	"multiply_and_scale");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_7(void) {
        auto x;
#define id x

	create_insn	(x=0X30047);
	op_stkvar	(x,	1);
	create_insn	(x=0X3004A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3004D);
	op_hex		(x,	1);
	create_insn	(x=0X3004F);
	op_hex		(x,	1);
	create_insn	(x=0X30051);
	op_hex		(x,	1);
	create_insn	(x=0X30053);
	op_hex		(x,	1);
	create_insn	(x=0X30055);
	op_hex		(x,	1);
	create_insn	(0X3005E);
	set_name	(0X3005E,	"video_set_mode4");
	create_insn	(x=0X3006D);
	op_hex		(x,	1);
	create_insn	(x=0X30070);
	op_hex		(x,	1);
	set_cmt	(0X3007B,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X3007B);
	op_hex		(x,	0);
	set_cmt	(0X30082,	"Printer Status Bits:\n3: 0=printer signals an error\n4: 1=printer is selected\n5: 1=out of paper\n6: 0=ready for next character\n7: 0=busy or offline or error",	0);
	set_cmt	(0X30093,	"Video: CRT cntrlr addr\nhorizontal total",	0);
	create_insn	(x=0X30095);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X30099,	"Video: CRT controller internal registers",	0);
	create_insn	(0X300B6);
	set_name	(0X300B6,	"polarRadius2D");
	create_insn	(x=0X300B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X300BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X300C4);
	op_hex		(x,	1);
	create_insn	(x=0X300E2);
	op_hex		(x,	1);
	create_insn	(x=0X300E7);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X300F0,	E_PREV + 0,	"All of this mess");
	update_extra_cmt		(0X300F0,	E_PREV + 1,	"is just to split");
	update_extra_cmt		(0X300F0,	E_PREV + 2,	"_x in two bytes");
	update_extra_cmt		(0X300F0,	E_PREV + 3,	"so that it can be");
	update_extra_cmt		(0X300F0,	E_PREV + 4,	"divided by the");
	update_extra_cmt		(0X300F0,	E_PREV + 5,	"cosine.");
	create_insn	(x=0X300F2);
	op_hex		(x,	1);
	create_insn	(x=0X300F4);
	op_hex		(x,	1);
	create_insn	(x=0X300F6);
	op_hex		(x,	1);
	create_insn	(x=0X300F8);
	op_hex		(x,	1);
	create_insn	(0X300FE);
	create_insn	(x=0X30104);
	op_hex		(x,	1);
	create_insn	(x=0X30109);
	op_stkvar	(x,	1);
	create_insn	(x=0X30114);
	op_hex		(x,	1);
	create_insn	(x=0X30116);
	op_hex		(x,	1);
	create_insn	(x=0X30118);
	op_hex		(x,	1);
	create_insn	(x=0X3011A);
	op_hex		(x,	1);
	create_insn	(0X30120);
	set_name	(0X30120,	"video_set_mode7");
	create_insn	(0X3012F);
	create_insn	(x=0X30138);
	op_hex		(x,	1);
	create_insn	(x=0X3013B);
	op_hex		(x,	1);
	set_cmt	(0X30147,	"Printer Status Bits:\n3: 0=printer signals an error\n4: 1=printer is selected\n5: 1=out of paper\n6: 0=ready for next character\n7: 0=busy or offline or error",	0);
	set_cmt	(0X30158,	"Video: CRT cntrlr addr\nhorizontal total",	0);
	create_insn	(x=0X3015A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X3015E,	"Video: CRT controller internal registers",	0);
	set_cmt	(0X3017C,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X3017C);
	op_hex		(x,	0);
	create_insn	(0X30180);
	set_name	(0X30180,	"nopsub_30180");
	create_insn	(0X301A0);
	set_name	(0X301A0,	"timer_setup_interrupt");
	set_cmt	(0X301A1,	"11977. afaict this is used as freq-parameter, which gives\n1193180 / 11977 = ca99.6 = ca 100 ??",	0);
	create_insn	(x=0X301A1);
	op_hex		(x,	1);
	create_byte	(0X301BC);
	create_insn	(0X301BD);
	create_insn	(0X301DE);
	set_cmt	(0X30210,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X30210);
	op_hex		(x,	1);
	create_insn	(x=0X30212);
	op_hex		(x,	1);
	set_cmt	(0X30214,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X30214);
	op_hex		(x,	0);
	set_cmt	(0X30218,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X30218);
	op_hex		(x,	0);
	set_cmt	(0X3021A,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3021A);
	op_hex		(x,	1);
	create_insn	(x=0X3021C);
	op_hex		(x,	1);
	set_cmt	(0X3021E,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3021E);
	op_hex		(x,	0);
	create_insn	(x=0X3023E);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_cmt	(0X3024A,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3024A);
	op_hex		(x,	1);
	create_insn	(x=0X3024C);
	op_hex		(x,	1);
	set_cmt	(0X3024E,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3024E);
	op_hex		(x,	0);
	set_cmt	(0X30253,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X30253);
	op_hex		(x,	0);
	set_cmt	(0X30257,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X30257);
	op_hex		(x,	0);
	create_insn	(x=0X3025A);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X30263);
	op_hex		(x,	1);
	create_insn	(0X30268);
	set_name	(0X30268,	"audio_stop_unk");
	create_insn	(0X30277);
	set_cmt	(0X30281,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30281);
	op_hex		(x,	1);
	create_insn	(x=0X30283);
	op_hex		(x,	1);
	set_cmt	(0X30285,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30285);
	op_hex		(x,	0);
	set_cmt	(0X30296,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30296);
	op_hex		(x,	1);
	create_insn	(x=0X30298);
	op_hex		(x,	1);
	set_cmt	(0X3029A,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3029A);
	op_hex		(x,	0);
	set_cmt	(0X3029F,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X3029F);
	op_hex		(x,	0);
	set_cmt	(0X302A1,	"Timer 8253-5 (AT: 8254.2).",	0);
	create_insn	(x=0X302A1);
	op_hex		(x,	0);
	set_cmt	(0X302A3,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X302A3);
	op_hex		(x,	1);
	create_insn	(x=0X302A5);
	op_hex		(x,	1);
	set_cmt	(0X302A7,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X302A7);
	op_hex		(x,	0);
	create_insn	(0X302AA);
	set_name	(0X302AA,	"timer_reg_callback");
	create_insn	(x=0X302B0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X302BE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X302C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X302D1);
	op_stkvar	(x,	1);
	create_insn	(0X302DE);
	set_name	(0X302DE,	"timer_remove_callback");
	create_insn	(x=0X302E4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X302E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X302EA);
	op_stkvar	(x,	1);
	create_insn	(0X302FD);
	create_insn	(0X3031D);
	set_name	(0X3031D,	"compare_ds_ss");
	create_insn	(0X30329);
	set_name	(0X30329,	"timer_intr_callback");
	create_insn	(x=0X30333);
	op_seg		(x,	1);
	create_insn	(0X3035C);
	set_cmt	(0X3035E,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X3035E);
	op_hex		(x,	0);
	create_insn	(x=0X30381);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30389);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X30392);
	create_byte	(0X303A4);
	create_insn	(0X303A5);
	create_insn	(0X303BA);
	create_insn	(0X303D8);
	set_name	(0X303D8,	"set_bios_mode3");
	create_insn	(x=0X303E0);
	op_hex		(x,	1);
	create_insn	(x=0X303EC);
	op_hex		(x,	1);
	create_insn	(x=0X303EF);
	op_hex		(x,	1);
	set_cmt	(0X303FA,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X303FA);
	op_hex		(x,	0);
	set_cmt	(0X30401,	"- VIDEO - SET COLOR PALETTE\nBH = 00h, BL = border color\nBH = 01h, BL = palette (0-3)",	0);
	create_insn	(x=0X30401);
	op_hex		(x,	0);
	create_insn	(0X30404);
	set_name	(0X30404,	"kb_parse_key");
	create_insn	(0X30412);
	create_insn	(x=0X30418);
	op_stkvar	(x,	1);
	create_insn	(x=0X3041F);
	op_hex		(x,	1);
	create_insn	(x=0X30422);
	op_stkvar	(x,	0);
	create_insn	(x=0X30425);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3042C);
	op_hex		(x,	1);
	create_insn	(x=0X30430);
	op_hex		(x,	1);
	create_insn	(x=0X30432);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X30441);
	create_insn	(x=0X3044E);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30454);
	op_stkvar	(x,	1);
	create_insn	(0X3045E);
	set_name	(0X3045E,	"kb_reg_callback");
	create_insn	(x=0X30461);
	op_stkvar	(x,	1);
	create_insn	(x=0X30467);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3046A);
	op_stkvar	(x,	1);
	create_insn	(0X30483);
	create_insn	(x=0X3048D);
	op_stkvar	(x,	1);
	create_insn	(x=0X30499);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X3049F);
	create_insn	(x=0X304A9);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X304AF);
	set_name	(0X304AF,	"nopsub_304AF");
	create_insn	(0X304B6);
	set_name	(0X304B6,	"nopsub_304B6");
	set_cmt	(0X304B8,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X304B8);
	op_hex		(x,	0);
	set_cmt	(0X304BE,	"KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nReturn: AH = scan code, AL = character",	0);
	create_insn	(x=0X304BE);
	op_hex		(x,	0);
	create_insn	(0X304C7);
	set_cmt	(0X304C9,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X304C9);
	op_hex		(x,	0);
	set_cmt	(0X304CF,	"KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nReturn: AH = scan code, AL = character",	0);
	create_insn	(x=0X304CF);
	op_hex		(x,	0);
	create_insn	(x=0X304D7);
	op_hex		(x,	1);
	create_insn	(0X304DB);
	create_insn	(x=0X304E2);
	op_hex		(x,	1);
	create_byte	(0X304EC);
	create_insn	(x=0X304ED);
	op_hex		(x,	1);
	create_insn	(x=0X304F0);
	op_hex		(x,	1);
	create_insn	(0X304FF);
	create_insn	(0X3050F);
	create_insn	(0X30519);
	set_name	(0X30519,	"kb_get_char");
	set_cmt	(0X3051B,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X3051B);
	op_hex		(x,	0);
	create_insn	(0X30522);
	set_cmt	(0X3052C,	"KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nReturn: AH = scan code, AL = character",	0);
	create_insn	(x=0X3052C);
	op_hex		(x,	0);
	create_insn	(x=0X30534);
	op_hex		(x,	1);
	create_insn	(0X30538);
	set_name	(0X30538,	"get_kb_or_joy_flags");
	create_insn	(x=0X30540);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30547);
	op_hex		(x,	1);
	create_insn	(x=0X3054D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30554);
	op_hex		(x,	1);
	create_insn	(x=0X3055A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30561);
	op_hex		(x,	1);
	create_insn	(x=0X30567);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X3056E);
	op_hex		(x,	1);
	create_insn	(x=0X30574);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X3057B);
	op_hex		(x,	1);
	create_insn	(x=0X30581);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30588);
	op_hex		(x,	1);
	create_insn	(x=0X3058E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30595);
	op_hex		(x,	1);
	create_insn	(x=0X3059B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X305A2);
	op_hex		(x,	1);
	create_insn	(x=0X305A8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X305AF);
	op_hex		(x,	1);
	create_insn	(x=0X305B5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X305BC);
	op_hex		(x,	1);
	create_insn	(0X305C8);
	set_name	(0X305C8,	"nopsub_305C8");
	create_insn	(x=0X305D7);
	op_hex		(x,	1);
	create_insn	(x=0X305E5);
	op_hex		(x,	1);
	create_insn	(x=0X305ED);
	op_hex		(x,	1);
	set_cmt	(0X305F4,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	create_insn	(x=0X305F7);
	op_hex		(x,	1);
	create_insn	(x=0X305FC);
	op_hex		(x,	1);
	set_name	(0X305FC,	"get_joy_flags");
	create_insn	(0X30606);
	set_cmt	(0X3060E,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	set_cmt	(0X30621,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	set_cmt	(0X3062A,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	create_byte	(0X3063A);
	create_insn	(x=0X3063B);
	op_hex		(x,	1);
	create_insn	(x=0X3063F);
	op_hex		(x,	1);
	create_insn	(x=0X30647);
	op_hex		(x,	1);
	create_byte	(0X3064E);
	create_insn	(0X3064F);
	create_insn	(x=0X30653);
	op_hex		(x,	1);
	create_insn	(0X30674);
	create_insn	(x=0X30695);
	op_hex		(x,	1);
	create_insn	(x=0X30699);
	op_hex		(x,	1);
	create_byte	(0X306B0);
	create_insn	(0X306B1);
	create_byte	(0X306C8);
	create_insn	(0X306C9);
	create_insn	(0X306D3);
	create_insn	(x=0X306F1);
	op_hex		(x,	1);
	create_byte	(0X30710);
	create_insn	(0X30711);
	create_insn	(x=0X30732);
	op_hex		(x,	1);
	create_insn	(x=0X30736);
	op_hex		(x,	1);
	create_insn	(x=0X3074E);
	op_hex		(x,	1);
	create_insn	(0X30755);
	create_byte	(0X3076C);
	create_insn	(0X3076D);
	create_insn	(0X30777);
	create_insn	(x=0X30795);
	op_hex		(x,	1);
	set_cmt	(0X3079A,	"Game I/O port\nbits 0-3: Coordinates (resistive, time-dependent inputs)\nbits 4-7: Buttons/Triggers (digital inputs)",	0);
	create_insn	(x=0X3079F);
	op_hex		(x,	1);
	create_insn	(x=0X307A1);
	op_hex		(x,	1);
	create_insn	(x=0X307AD);
	op_hex		(x,	1);
	create_insn	(0X307B4);
	create_insn	(0X307D2);
	create_insn	(x=0X307D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X307D8);
	op_hex		(x,	1);
	create_insn	(x=0X307DB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X307E3);
	create_insn	(0X307FA);
	set_name	(0X307FA,	"nopsub_307FA");
	create_insn	(0X30812);
	set_name	(0X30812,	"kb_init_interrupt");
	set_cmt	(0X30813,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30813);
	op_hex		(x,	1);
	create_insn	(x=0X30817);
	op_hex		(x,	1);
	set_cmt	(0X30819,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30819);
	op_hex		(x,	0);
	set_cmt	(0X3081F,	"24h = func ofs for keyboard action",	0);
	create_insn	(x=0X30824);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_cmt	(0X3082E,	"26h - func seg for keyboard action",	0);
	create_insn	(x=0X30837);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_cmt	(0X30843,	"58h - func ofs for bios keyboard",	0);
	set_cmt	(0X3084C,	"5Ah - func seg for bios keyboard",	0);
	create_insn	(x=0X30855);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	set_cmt	(0X30863,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30863);
	op_hex		(x,	0);
	create_insn	(x=0X30869);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30875);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X3087E);
	op_hex		(x,	1);
	set_cmt	(0X30883,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30883);
	op_hex		(x,	1);
	set_name	(0X30883,	"kb_exit_handler");
	create_insn	(x=0X30887);
	op_hex		(x,	1);
	set_cmt	(0X30889,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X30889);
	op_hex		(x,	0);
	create_insn	(x=0X308BB);
	op_hex		(x,	1);
	set_cmt	(0X308C3,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X308C3);
	op_hex		(x,	0);
	create_insn	(0X308C6);
	set_name	(0X308C6,	"kb_int9_handler");
	create_insn	(x=0X308CC);
	op_seg		(x,	1);
	set_cmt	(0X308D1,	"AT Keyboard controller 8042.",	0);
	create_insn	(x=0X308D1);
	op_hex		(x,	1);
	set_cmt	(0X308D4,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X308D4);
	op_hex		(x,	1);
	create_insn	(x=0X308D8);
	op_hex		(x,	1);
	set_cmt	(0X308DA,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X308DA);
	op_hex		(x,	0);
	set_cmt	(0X308DE,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ═╦═\x10 OR 03H=spkr ON\n1: Tmr 2 data ═╝  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd",	0);
	create_insn	(x=0X308DE);
	op_hex		(x,	0);
	create_insn	(x=0X308E1);
	op_hex		(x,	1);
	create_insn	(x=0X308E5);
	op_hex		(x,	1);
	set_cmt	(0X308E7,	".. do some stuff, then end",	0);
	create_insn	(0X308EA);
	set_cmt	(0X308EC,	"Interrupt controller, 8259A.",	0);
	create_insn	(x=0X308EC);
	op_hex		(x,	0);
	create_insn	(0X308F4);
	set_cmt	(0X308F8,	"keymaps are 91 bytes",	0);
	create_insn	(x=0X30903);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X30908);
	op_hex		(x,	1);
	set_cmt	(0X3090D,	"test keymap5",	0);
	create_insn	(x=0X3090F);
	op_hex		(x,	1);
	set_cmt	(0X30914,	"test keymap4",	0);
	create_insn	(x=0X30916);
	op_hex		(x,	1);
	set_cmt	(0X3091B,	"test keymap2",	0);
	create_insn	(x=0X3091D);
	op_hex		(x,	1);
	set_cmt	(0X30922,	"test keymap2",	0);
	create_insn	(x=0X30924);
	op_hex		(x,	1);
	set_cmt	(0X30929,	"test keymap3",	0);
	create_insn	(x=0X3092B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3092F);
	op_hex		(x,	1);
	create_insn	(x=0X3093A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X3096C);
	create_insn	(x=0X30975);
	op_hex		(x,	1);
	create_insn	(x=0X3097A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30980);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30986);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3098C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X30992);
	create_insn	(x=0X3099D);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X309A5);
	set_name	(0X309A5,	"kb_int16_handler");
	create_insn	(x=0X309A7);
	op_seg		(x,	1);
	create_insn	(0X309C3);
	create_insn	(x=0X309CF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X309EF);
	create_insn	(x=0X309FB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X30A04);
	create_insn	(0X30A0D);
	set_name	(0X30A0D,	"kb_get_key_state");
	create_insn	(x=0X30A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X30A13);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X30A1C);
	set_name	(0X30A1C,	"kb_call_readchar_callback");
	create_insn	(0X30A21);
	set_name	(0X30A21,	"kb_read_char");
	set_cmt	(0X30A23,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X30A23);
	op_hex		(x,	0);
	create_insn	(0X30A2A);
	set_cmt	(0X30A2C,	"KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nReturn: AH = scan code, AL = character",	0);
	create_insn	(x=0X30A2C);
	op_hex		(x,	0);
	create_insn	(0X30A35);
	set_name	(0X30A35,	"kb_checking");
	set_cmt	(0X30A37,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X30A37);
	op_hex		(x,	0);
	create_insn	(0X30A44);
	set_name	(0X30A44,	"nopsub_kb_set_readchar_callback");
	create_insn	(x=0X30A47);
	op_stkvar	(x,	1);
	create_insn	(x=0X30A4D);
	op_stkvar	(x,	1);
	create_insn	(0X30A55);
	set_name	(0X30A55,	"nopsub_kb_get_readchar_callback");
	create_insn	(0X30A5D);
	set_name	(0X30A5D,	"flush_stdin");
	create_insn	(0X30A68);
	set_name	(0X30A68,	"kb_check");
	set_cmt	(0X30A6A,	"KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nReturn: ZF clear if character in buffer\nAH = scan code, AL = character\nZF set if no character in buffer",	0);
	create_insn	(x=0X30A6A);
	op_hex		(x,	0);
	create_insn	(0X30A71);
	set_cmt	(0X30A73,	"KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nReturn: AH = scan code, AL = character",	0);
	create_insn	(x=0X30A73);
	op_hex		(x,	0);
	create_insn	(0X30A77);
	set_name	(0X30A77,	"nopsub_30A77");
	create_insn	(0X30A97);
	set_name	(0X30A97,	"nopsub_30A97");
	create_insn	(x=0X30A9A);
	op_hex		(x,	1);
	create_insn	(x=0X30AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X30AA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X30AA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X30AAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X30ABD);
	op_stkvar	(x,	1);
	create_insn	(x=0X30AC4);
	op_stkvar	(x,	1);
	create_insn	(0X30AD0);
	set_name	(0X30AD0,	"file_read");
	create_insn	(x=0X30AD3);
	op_hex		(x,	1);
	create_insn	(x=0X30AD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X30ADA);
	op_stkvar	(x,	0);
	create_insn	(0X30AE0);
	set_name	(0X30AE0,	"file_read_nofatal");
	create_insn	(x=0X30AE3);
	op_hex		(x,	1);
	create_insn	(x=0X30AE7);
	op_stkvar	(x,	0);
	create_byte	(0X30AEE);
	create_insn	(0X30AEF);
	set_name	(0X30AEF,	"file_read_fatal");
	create_insn	(x=0X30AF2);
	op_hex		(x,	1);
	create_insn	(x=0X30AF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X30AFB);
	op_stkvar	(x,	1);
	set_name	(0X30AFB,	"_file_read");
	create_insn	(x=0X30AFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B01);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B04);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B07);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B0C);
	op_hex		(x,	1);
	set_cmt	(0X30B0E,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read",	0);
	create_insn	(x=0X30B0E);
	op_hex		(x,	0);
	create_insn	(x=0X30B12);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B15);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B21);
	op_hex		(x,	1);
	set_cmt	(0X30B23,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer",	0);
	create_insn	(x=0X30B23);
	op_hex		(x,	0);
	create_insn	(x=0X30B27);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B31);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B34);
	op_hex		(x,	1);
	set_cmt	(0X30B36,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X30B36);
	op_hex		(x,	0);
	create_insn	(x=0X30B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B43);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B52);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30B59);
	op_stkvar	(x,	0);
	create_insn	(0X30B62);
	set_name	(0X30B62,	"file_decomp_rle");
	create_insn	(x=0X30B68);
	op_hex		(x,	1);
	create_insn	(x=0X30B71);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X30B82);
	op_stkvar	(x,	0);
	set_cmt	(0X30B85,	"Skip header + unused byte",	1);
	set_cmt	(0X30B8B,	"Read 8 words",	1);
	create_insn	(x=0X30B8B);
	op_stkvar	(x,	1);
	set_cmt	(0X30B90,	"Reset source pos",	1);
	create_insn	(x=0X30B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X30B96);
	op_stkvar	(x,	1);
	set_cmt	(0X30B99,	"Escape codes length mask",	1);
	create_insn	(x=0X30B99);
	op_hex		(x,	1);
	set_cmt	(0X30B9E,	"Skip escape codes",	1);
	create_insn	(x=0X30B9E);
	op_stkvar	(x,	0);
	set_cmt	(0X30BA1,	"Skip seq pass flag",	1);
	create_insn	(x=0X30BA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X30BAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X30BAD);
	op_stkvar	(x,	0);
	set_cmt	(0X30BB0,	"paras = len / 16",	0);
	create_insn	(x=0X30BB2);
	op_hex		(x,	1);
	create_insn	(x=0X30BB4);
	op_hex		(x,	1);
	create_insn	(x=0X30BB6);
	op_hex		(x,	1);
	create_insn	(x=0X30BB8);
	op_hex		(x,	1);
	create_insn	(x=0X30BBA);
	op_hex		(x,	1);
	create_insn	(x=0X30BBC);
	op_hex		(x,	1);
	create_insn	(x=0X30BBE);
	op_hex		(x,	1);
	create_insn	(x=0X30BC0);
	op_hex		(x,	1);
	create_insn	(x=0X30BC2);
	op_hex		(x,	1);
	set_cmt	(0X30BC9,	"paras",	0);
	create_insn	(x=0X30BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X30BCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X30BD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X30BD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X30BDE);
	op_hex		(x,	1);
	create_insn	(x=0X30BE3);
	op_stkvar	(x,	0);
	set_cmt	(0X30BE9,	"Return length",	1);
	create_insn	(x=0X30BE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X30BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X30BEF);
	op_hex		(x,	1);
	create_insn	(0X30BF8);
	set_name	(0X30BF8,	"file_decomp_rle_single");
	create_insn	(x=0X30C0C);
	op_hex		(x,	1);
	create_byte	(0X30C3E);
	create_insn	(0X30C3F);
	create_insn	(0X30C48);
	create_insn	(x=0X30C54);
	op_hex		(x,	1);
	create_insn	(0X30C68);
	create_insn	(0X30C8A);
	create_insn	(0X30C9A);
	create_insn	(0X30CA5);
	create_insn	(0X30CB3);
	create_insn	(0X30CC1);
	set_cmt	(0X30CCF,	"file_decomp_rle::var_esclen",	0);
	create_insn	(0X30CCF);
	set_name	(0X30CCF,	"file_decomp_rle_seq");
	set_cmt	(0X30CD6,	"file_decomp_rle::arg_srcseg",	0);
	create_insn	(0X30CD6);
	set_cmt	(0X30CD9,	"file_decomp_rle::arg_srcoff",	0);
	set_cmt	(0X30CDC,	"file_decomp_rle::var_dstoff",	1);
	create_insn	(0X30D0D);
	create_insn	(0X30D1B);
	create_insn	(0X30D29);
	create_insn	(0X30D39);
	create_insn	(0X30D49);
	create_insn	(0X30D79);
	set_name	(0X30D79,	"file_load_binary");
	create_insn	(x=0X30D7C);
	op_hex		(x,	1);
	create_insn	(x=0X30D7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X30D82);
	op_stkvar	(x,	0);
	create_insn	(0X30D88);
	set_name	(0X30D88,	"file_load_binary_nofatal");
	create_insn	(x=0X30D8B);
	op_hex		(x,	1);
	create_insn	(x=0X30D8E);
	op_stkvar	(x,	0);
	create_insn	(0X30D96);
	create_insn	(x=0X30D99);
	op_hex		(x,	1);
	create_insn	(x=0X30D9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DA1);
	op_stkvar	(x,	0);
	set_name	(0X30DA1,	"_file_load_binary");
	create_insn	(x=0X30DA9);
	op_hex		(x,	1);
	create_insn	(x=0X30DB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DBB);
	op_hex		(x,	1);
	create_insn	(x=0X30DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DCB);
	op_hex		(x,	1);
	create_insn	(x=0X30DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X30DDB);
	op_hex		(x,	1);
	create_insn	(0X30DE2);
	create_insn	(0X30DE6);
	set_name	(0X30DE6,	"file_decomp");
	create_insn	(x=0X30DE9);
	op_hex		(x,	1);
	create_insn	(x=0X30DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X30DF1);
	op_stkvar	(x,	0);
	create_byte	(0X30DF6);
	create_insn	(0X30DF7);
	set_name	(0X30DF7,	"file_decomp_nofatal");
	create_insn	(x=0X30DFA);
	op_hex		(x,	1);
	create_insn	(x=0X30DFF);
	op_stkvar	(x,	0);
	create_byte	(0X30E06);
	create_insn	(0X30E07);
	set_name	(0X30E07,	"file_decomp_fatal");
	create_insn	(x=0X30E0A);
	op_hex		(x,	1);
	create_insn	(x=0X30E0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E14);
	op_stkvar	(x,	0);
	set_name	(0X30E14,	"_file_decomp");
	create_insn	(x=0X30E1C);
	op_hex		(x,	1);
	create_insn	(0X30E29);
	create_insn	(x=0X30E2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E37);
	op_hex		(x,	1);
	create_insn	(x=0X30E41);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E45);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E4D);
	op_hex		(x,	1);
	create_insn	(x=0X30E50);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E53);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E56);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E59);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E61);
	op_hex		(x,	1);
	create_insn	(x=0X30E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X30E6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X30E70);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E74);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E77);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E7F);
	op_hex		(x,	1);
	create_insn	(x=0X30E86);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E91);
	op_hex		(x,	1);
	create_insn	(x=0X30E95);
	op_hex		(x,	1);
	create_insn	(x=0X30E98);
	op_stkvar	(x,	0);
	create_insn	(x=0X30E9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X30EA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X30EA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X30EB6);
	op_hex		(x,	1);
	create_insn	(x=0X30EB8);
	op_seg		(x,	1);
	create_insn	(x=0X30EBD);
	op_hex		(x,	1);
	create_insn	(x=0X30EBF);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X30EC4);
	op_hex		(x,	1);
	create_insn	(x=0X30EC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X30ECE);
	op_hex		(x,	1);
	create_insn	(x=0X30ED0);
	op_hex		(x,	1);
	create_insn	(x=0X30ED2);
	op_hex		(x,	1);
	create_insn	(x=0X30ED4);
	op_hex		(x,	1);
	create_insn	(x=0X30ED6);
	op_hex		(x,	1);
	create_insn	(x=0X30ED8);
	op_hex		(x,	1);
	create_insn	(x=0X30EDA);
	op_hex		(x,	1);
	create_insn	(x=0X30EDC);
	op_hex		(x,	1);
	create_insn	(x=0X30EDE);
	op_hex		(x,	1);
	create_insn	(x=0X30EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X30EEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X30EEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X30EF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X30EFA);
	op_hex		(x,	1);
	create_insn	(x=0X30EFD);
	op_stkvar	(x,	1);
	create_dword	(x=0X30F04);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_dword	(x=0X30F08);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X30F0C);
	op_hex		(x,	1);
	create_insn	(x=0X30F0F);
	op_stkvar	(x,	0);
	create_insn	(0X30F1F);
	create_insn	(x=0X30F23);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F26);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X30F2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X30F36);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F39);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F41);
	op_hex		(x,	1);
	create_insn	(x=0X30F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X30F47);
	op_stkvar	(x,	1);
	create_insn	(0X30F50);
	create_insn	(x=0X30F53);
	op_hex		(x,	1);
	create_insn	(x=0X30F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X30F5B);
	op_stkvar	(x,	0);
	create_byte	(0X30F60);
	create_insn	(0X30F61);
	create_insn	(x=0X30F64);
	op_hex		(x,	1);
	create_insn	(x=0X30F69);
	op_stkvar	(x,	0);
	create_byte	(0X30F70);
	create_insn	(0X30F71);
	create_insn	(x=0X30F74);
	op_hex		(x,	1);
	create_insn	(x=0X30F79);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F81);
	op_stkvar	(x,	0);
	create_insn	(x=0X30F89);
	op_hex		(x,	1);
	create_insn	(0X30F92);
	set_name	(0X30F92,	"locate_shape_nofatal");
	create_byte	(0X30F9C);
	create_insn	(0X30F9D);
	set_name	(0X30F9D,	"locate_shape_fatal");
	create_byte	(0X30FA8);
	create_insn	(0X30FA9);
	set_name	(0X30FA9,	"locate_sound_fatal");
	set_name	(0X30FB2,	"_alt_locate_resource");
	create_insn	(x=0X30FB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X30FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X30FB9);
	op_seg		(x,	1);
	create_insn	(x=0X30FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X30FDE);
	op_stkvar	(x,	1);
	create_insn	(0X30FEC);
	create_insn	(x=0X31006);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3100C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3100F);
	op_seg		(x,	1);
	create_insn	(x=0X31014);
	op_stkvar	(x,	0);
	set_cmt	(0X3101D,	"DOS - PROGRAM TERMINATION\nreturns to DOS--identical to INT 21/AH=00h",	0);
	create_insn	(x=0X3101D);
	op_hex		(x,	0);
	create_insn	(0X3101F);
	create_insn	(0X31024);
	create_insn	(x=0X3102D);
	op_stkvar	(x,	1);
	create_insn	(x=0X31033);
	op_hex		(x,	1);
	create_insn	(x=0X31035);
	op_hex		(x,	1);
	create_insn	(x=0X31039);
	op_hex		(x,	1);
	create_insn	(x=0X31042);
	op_hex		(x,	1);
	create_insn	(x=0X31044);
	op_hex		(x,	1);
	create_insn	(x=0X31046);
	op_hex		(x,	1);
	create_insn	(x=0X31048);
	op_hex		(x,	1);
	create_insn	(x=0X3104A);
	op_hex		(x,	1);
	create_insn	(x=0X3104C);
	op_hex		(x,	1);
	create_insn	(x=0X3104E);
	op_hex		(x,	1);
	create_insn	(x=0X31050);
	op_hex		(x,	1);
	create_insn	(x=0X3105E);
	op_hex		(x,	1);
	create_insn	(x=0X31061);
	op_hex		(x,	1);
	create_insn	(x=0X31063);
	op_hex		(x,	1);
	create_insn	(x=0X31065);
	op_hex		(x,	1);
	create_insn	(x=0X31067);
	op_hex		(x,	1);
	create_insn	(x=0X31069);
	op_hex		(x,	1);
	create_insn	(x=0X3106B);
	op_hex		(x,	1);
	create_insn	(x=0X3106D);
	op_hex		(x,	1);
	create_insn	(x=0X3106F);
	op_hex		(x,	1);
	create_insn	(0X3107A);
	set_name	(0X3107A,	"mmgr_alloc_resmem");
	create_insn	(x=0X3107F);
	op_hex		(x,	1);
	set_cmt	(0X31082,	"DOS - GET DOS VERSION\nReturn: AL = major version number (00h for DOS 1.x)",	0);
	create_insn	(x=0X31082);
	op_hex		(x,	0);
	create_insn	(x=0X3108A);
	op_hex		(x,	1);
	set_cmt	(0X3108C,	"DOS - 3+ - GET PSP ADDRESS",	0);
	create_insn	(x=0X3108C);
	op_hex		(x,	0);
	create_insn	(x=0X310A0);
	op_hex		(x,	1);
	set_cmt	(0X310A2,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired",	0);
	create_insn	(x=0X310A2);
	op_hex		(x,	0);
	create_insn	(x=0X310A8);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X310B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X310B3);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X310B6);
	op_hex		(x,	1);
	set_cmt	(0X310B8,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X310B8);
	op_hex		(x,	0);
	create_insn	(x=0X310BA);
	op_hex		(x,	1);
	set_cmt	(0X310BC,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs",	0);
	create_insn	(x=0X310BC);
	op_hex		(x,	0);
	create_insn	(x=0X310C7);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X310E6);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X310ED);
	create_insn	(0X310F1);
	set_name	(0X310F1,	"mmgr_alloc_a000");
	create_insn	(x=0X310FA);
	op_hex		(x,	1);
	create_insn	(0X310FE);
	set_name	(0X310FE,	"nopsub_310FE");
	create_insn	(x=0X3110A);
	op_hex		(x,	1);
	create_insn	(x=0X3110D);
	op_stkvar	(x,	1);
	create_insn	(x=0X31114);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3111D);
	set_name	(0X3111D,	"nopsub_3111D");
	create_insn	(x=0X31131);
	op_stkvar	(x,	1);
	create_insn	(x=0X31134);
	op_hex		(x,	1);
	set_cmt	(0X31136,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired",	0);
	create_insn	(x=0X31136);
	op_hex		(x,	0);
	create_insn	(x=0X3113A);
	op_hex		(x,	1);
	set_cmt	(0X3113C,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired",	0);
	create_insn	(x=0X3113C);
	op_hex		(x,	0);
	create_insn	(x=0X31142);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3114E);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X31157);
	set_name	(0X31157,	"nopsub_31157");
	create_insn	(x=0X3115B);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31162);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31165);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X31169);
	set_name	(0X31169,	"nopsub_31169");
	create_insn	(x=0X3116D);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31170);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31177);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3117B);
	set_name	(0X3117B,	"mmgr_get_ofs_diff");
	create_insn	(x=0X3117F);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31186);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31189);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3118D);
	set_name	(0X3118D,	"mmgr_copy_paras");
	create_insn	(x=0X31194);
	op_stkvar	(x,	1);
	create_insn	(x=0X31197);
	op_stkvar	(x,	1);
	create_insn	(x=0X3119A);
	op_stkvar	(x,	1);
	create_insn	(x=0X311B0);
	op_hex		(x,	1);
	create_insn	(x=0X311B2);
	op_hex		(x,	1);
	create_insn	(x=0X311B4);
	op_hex		(x,	1);
	create_insn	(0X311D0);
	create_insn	(0X311D5);
	set_name	(0X311D5,	"copy_paras_reverse");
	create_insn	(x=0X311DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X311DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X311E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3120E);
	op_hex		(x,	1);
	create_insn	(x=0X31210);
	op_hex		(x,	1);
	create_insn	(x=0X31212);
	op_hex		(x,	1);
	create_insn	(x=0X31216);
	op_hex		(x,	1);
	create_insn	(0X31222);
	create_insn	(0X31228);
	set_name	(0X31228,	"mmgr_path_to_name");
	create_insn	(x=0X3122C);
	op_stkvar	(x,	1);
	create_insn	(0X31243);
	create_insn	(0X31248);
	set_name	(0X31248,	"mmgr_alloc_pages");
	create_insn	(x=0X31255);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31258);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31266);
	op_stkvar	(x,	0);
	create_insn	(x=0X3126E);
	op_hex		(x,	1);
	create_insn	(x=0X31278);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3127A);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31283);
	op_stkvar	(x,	1);
	create_insn	(x=0X31286);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31289);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3128C);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3129C);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X312A7);
	create_insn	(x=0X312B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X312B9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X312C2);
	create_insn	(x=0X312CA);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X312CD);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X312D0);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X312DB);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X312E9);
	create_insn	(x=0X312EE);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X312F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X312F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X312FD);
	set_name	(0X312FD,	"mmgr_find_free");
	create_insn	(x=0X31308);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	op_hex		(x,	1);
	create_insn	(x=0X3130F);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_byte	(0X31314);
	create_insn	(0X31315);
	create_insn	(x=0X31330);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31337);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3133D);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31343);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31346);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31349);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3134C);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31351);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31359);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3135B);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31365);
	op_hex		(x,	1);
	create_insn	(0X3136A);
	set_name	(0X3136A,	"mmgr_get_chunk_by_name");
	create_insn	(x=0X31373);
	op_stkvar	(x,	0);
	create_insn	(x=0X3137B);
	op_hex		(x,	1);
	create_insn	(x=0X31382);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3138E);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_byte	(0X3139A);
	create_insn	(x=0X3139B);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313A0);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X313B6);
	create_insn	(x=0X313BA);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313BD);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313C7);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313CC);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313CF);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313D4);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313D7);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313DA);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313E4);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313E6);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X313FB);
	op_hex		(x,	1);
	create_insn	(x=0X31406);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31409);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3140C);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31411);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3141F);
	create_insn	(x=0X31424);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X31429);
	set_name	(0X31429,	"nopsub_31429");
	create_insn	(x=0X31432);
	op_stkvar	(x,	0);
	create_insn	(x=0X3143A);
	op_hex		(x,	1);
	create_insn	(0X3145A);
	create_insn	(0X31475);
	create_insn	(0X3147C);
	set_name	(0X3147C,	"mmgr_free");
	create_insn	(x=0X31481);
	op_stkvar	(x,	1);
	create_insn	(x=0X3148E);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31498);
	op_stkvar	(x,	0);
	create_insn	(x=0X3149B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X314A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X314A9);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314C0);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314C3);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314C6);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314C9);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314CE);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314D6);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X314DF);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314E9);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314EC);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314EF);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314F9);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X314FB);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31505);
	op_hex		(x,	1);
	create_insn	(x=0X31511);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3151B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3151E);
	op_stkvar	(x,	1);
	create_insn	(0X31525);
	set_name	(0X31525,	"nopsub_31525");
	create_insn	(x=0X31528);
	op_hex		(x,	1);
	create_insn	(x=0X3152D);
	op_stkvar	(x,	1);
	create_insn	(0X31544);
	create_insn	(x=0X31547);
	op_stkvar	(x,	0);
	create_insn	(0X31570);
	create_insn	(x=0X3157A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3157D);
	op_stkvar	(x,	0);
	create_insn	(x=0X31592);
	op_stkvar	(x,	0);
	create_insn	(x=0X315A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X315AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X315E1);
	op_hex		(x,	1);
	create_insn	(0X315E9);
	create_insn	(x=0X315EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3161F);
	op_hex		(x,	1);
	create_insn	(x=0X31635);
	op_stkvar	(x,	1);
	create_insn	(x=0X31638);
	op_stkvar	(x,	1);
	create_insn	(0X31641);
	set_name	(0X31641,	"mmgr_release");
	create_insn	(x=0X31646);
	op_stkvar	(x,	1);
	create_insn	(x=0X31653);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3165D);
	create_insn	(x=0X31660);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3166E);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3167C);
	set_name	(0X3167C,	"mmgr_get_chunk_size");
	create_insn	(x=0X31681);
	op_stkvar	(x,	1);
	create_insn	(x=0X3168E);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X31698);
	create_insn	(x=0X3169B);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X316A2);
	set_name	(0X316A2,	"mmgr_resize_memory");
	create_insn	(x=0X316A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X316B4);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X316BE);
	create_insn	(x=0X316C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X316C4);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X316C9);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X316D0);
	create_insn	(x=0X316D6);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X316DD);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X316E9);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X316F4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X316FD);
	create_insn	(x=0X31705);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31708);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3170B);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31716);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X31724);
	create_insn	(x=0X31729);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X31732);
	set_name	(0X31732,	"mmgr_op_unk");
	create_insn	(x=0X31737);
	op_stkvar	(x,	1);
	create_insn	(x=0X31744);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X3174E);
	create_insn	(0X31751);
	create_insn	(x=0X31756);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3175F);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31765);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3176A);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3176E);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31771);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31775);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31785);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31788);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X3178B);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31795);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X31797);
	op_stroff	(x,	0,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(x=0X317A1);
	op_hex		(x,	1);
	create_insn	(x=0X317A4);
	op_stroff	(x,	1,	GetStrucIdByName("MEMCHUNK"),	0);
	create_insn	(0X317AD);
	create_insn	(0X317B2);
	set_name	(0X317B2,	"preRender_default");
	create_insn	(x=0X317B5);
	op_hex		(x,	1);
	create_insn	(x=0X317BB);
	op_stkvar	(x,	0);
	create_insn	(0X317C1);
	set_name	(0X317C1,	"preRender_default_alt");
	create_insn	(x=0X317C4);
	op_hex		(x,	1);
	create_insn	(x=0X317CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X317CE);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X317D4);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X317DA);
	op_stkvar	(x,	1);
	create_insn	(0X317DF);
	set_name	(0X317DF,	"skybox_op_helper");
	create_insn	(x=0X317E2);
	op_hex		(x,	1);
	create_insn	(x=0X317E8);
	op_stkvar	(x,	0);
	create_insn	(0X317EE);
	set_name	(0X317EE,	"preRender_wheel_helper4");
	create_insn	(x=0X317F1);
	op_hex		(x,	1);
	create_insn	(x=0X317F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X317FB);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X31801);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X31807);
	op_stkvar	(x,	1);
	create_insn	(x=0X3180A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3180D);
	op_stkvar	(x,	1);
	create_insn	(x=0X31813);
	op_hex		(x,	1);
	create_insn	(x=0X31815);
	op_hex		(x,	1);
	create_insn	(x=0X31819);
	op_stkvar	(x,	0);
	create_insn	(x=0X31821);
	op_stkvar	(x,	1);
	create_insn	(x=0X31825);
	op_stkvar	(x,	0);
	create_insn	(x=0X3182C);
	op_stkvar	(x,	0);
	create_insn	(x=0X31834);
	op_stkvar	(x,	0);
	create_insn	(x=0X3183A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3183D);
	op_stkvar	(x,	0);
	create_insn	(x=0X31844);
	op_stkvar	(x,	0);
	create_insn	(x=0X31847);
	op_stkvar	(x,	0);
	create_insn	(x=0X31850);
	op_stkvar	(x,	0);
	create_insn	(x=0X31853);
	op_stkvar	(x,	1);
	create_insn	(x=0X31864);
	op_hex		(x,	1);
	create_insn	(0X3186D);
	create_insn	(x=0X31870);
	op_stkvar	(x,	1);
	create_insn	(x=0X31875);
	op_stkvar	(x,	0);
	create_insn	(x=0X31878);
	op_stkvar	(x,	0);
	create_insn	(x=0X3187B);
	op_stkvar	(x,	1);
	create_insn	(x=0X31880);
	op_stkvar	(x,	0);
	create_insn	(x=0X31883);
	op_stkvar	(x,	0);
	create_insn	(x=0X31899);
	op_stkvar	(x,	1);
	create_insn	(x=0X3189E);
	op_stkvar	(x,	1);
	create_insn	(x=0X318A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X318AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X318B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X318BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X318C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X318D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X318DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X318E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X318ED);
	op_hex		(x,	1);
	create_insn	(x=0X318F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X318FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X31905);
	op_stkvar	(x,	1);
	create_insn	(x=0X3190A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3191A);
	op_stkvar	(x,	0);
	create_insn	(x=0X31925);
	op_stkvar	(x,	0);
	create_insn	(0X3192E);
	create_insn	(x=0X31933);
	op_stkvar	(x,	0);
	create_insn	(x=0X31939);
	op_stkvar	(x,	1);
	create_insn	(x=0X3193C);
	op_hex		(x,	1);
	create_insn	(x=0X3193F);
	op_stkvar	(x,	1);
	create_insn	(x=0X31944);
	op_stkvar	(x,	1);
	create_insn	(x=0X3194F);
	op_stkvar	(x,	1);
	create_insn	(x=0X31954);
	op_stkvar	(x,	1);
	create_insn	(x=0X31964);
	op_stkvar	(x,	0);
	create_insn	(0X31972);
	create_insn	(x=0X31977);
	op_stkvar	(x,	0);
	create_insn	(x=0X3197D);
	op_stkvar	(x,	1);
	create_insn	(x=0X31980);
	op_hex		(x,	1);
	create_insn	(x=0X31983);
	op_stkvar	(x,	1);
	create_insn	(x=0X31988);
	op_stkvar	(x,	1);
	create_insn	(x=0X31997);
	op_stkvar	(x,	1);
	create_insn	(x=0X319AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X319B0);
	op_hex		(x,	1);
	create_insn	(x=0X319B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X319B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X319C4);
	op_hex		(x,	1);
	create_insn	(0X319CD);
	set_name	(0X319CD,	"preRender_helper");
	create_insn	(x=0X319E3);
	op_hex		(x,	1);
	create_insn	(x=0X319E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X31A0F);
	op_hex		(x,	1);
	create_insn	(x=0X31A11);
	op_stkvar	(x,	1);
	create_insn	(x=0X31A30);
	op_hex		(x,	1);
	create_insn	(x=0X31A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X31A51);
	op_hex		(x,	1);
	create_insn	(x=0X31A53);
	op_stkvar	(x,	1);
	create_insn	(0X31A67);
	set_name	(0X31A67,	"preRender_helper2");
	create_insn	(x=0X31A71);
	op_hex		(x,	1);
	create_insn	(x=0X31A73);
	op_stkvar	(x,	1);
	create_insn	(x=0X31A7B);
	op_hex		(x,	1);
	create_insn	(x=0X31A7D);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A82);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A84);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A86);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A88);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A8A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A8C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A8E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A90);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A92);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31A94);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X31A96);
	create_insn	(0X31AA4);
	create_insn	(0X31AB3);
	create_insn	(0X31AC2);
	create_insn	(0X31AE1);
	create_insn	(0X31B00);
	create_insn	(0X31B25);
	create_insn	(0X31B2C);
	create_insn	(0X31B55);
	create_insn	(0X31B5E);
	set_name	(0X31B5E,	"preRender_helper3");
	create_insn	(x=0X31B68);
	op_hex		(x,	1);
	create_insn	(x=0X31B6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X31B72);
	op_hex		(x,	1);
	set_cmt	(0X31B74,	"var_A is 1 when calling prerender_default, or 0 when calling prerender_default_alt\nuses a different jump table here, otherwise everything else is similar yes?",	0);
	create_insn	(x=0X31B74);
	op_stkvar	(x,	0);
	create_insn	(x=0X31B7A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X31B7F);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B84);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B86);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B88);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B8A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B8C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B8E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B90);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B92);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B94);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31B96);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X31B98);
	create_insn	(0X31BAB);
	create_insn	(0X31BB7);
	create_insn	(0X31BCE);
	create_insn	(0X31BDB);
	create_insn	(0X31BF2);
	create_insn	(0X31BFF);
	create_insn	(0X31C26);
	create_insn	(0X31C37);
	create_insn	(0X31C5E);
	create_insn	(0X31C6F);
	create_insn	(0X31CA4);
	create_insn	(0X31CB1);
	create_insn	(0X31CE6);
	create_word	(x=0X31CF7);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31CF9);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31CFB);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31CFD);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31CFF);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31D01);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31D03);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31D05);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31D07);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X31D09);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X31D0B);
	create_insn	(0X31D23);
	create_insn	(0X31D28);
	create_insn	(0X31D31);
	create_insn	(0X31D4A);
	create_insn	(0X31D51);
	create_insn	(0X31D5C);
	create_insn	(0X31D75);
	create_insn	(0X31D7C);
	create_insn	(0X31D87);
	create_insn	(0X31DB0);
	create_insn	(0X31DBB);
	create_insn	(0X31DCA);
	create_insn	(0X31DF3);
	create_insn	(0X31DFE);
	create_insn	(0X31E0D);
	create_insn	(0X31E39);
	create_insn	(0X31E48);
	create_byte	(0X31E4C);
	create_insn	(0X31E4D);
	create_insn	(0X31E58);
	create_byte	(0X31E60);
	create_insn	(0X31E61);
	create_byte	(0X31E8C);
	create_insn	(0X31E8D);
	create_byte	(0X31EA2);
	create_insn	(0X31EA3);
	create_insn	(0X31EAE);
	create_byte	(0X31EB8);
	create_insn	(x=0X31EB9);
	op_stkvar	(x,	0);
	create_insn	(0X31EC0);
	create_insn	(x=0X31ED6);
	op_hex		(x,	1);
	create_insn	(x=0X31ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X31EF7);
	op_hex		(x,	1);
	create_insn	(x=0X31EF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X31F12);
	op_hex		(x,	1);
	create_insn	(x=0X31F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X31F28);
	op_hex		(x,	1);
	create_insn	(x=0X31F2A);
	op_stkvar	(x,	1);
	create_insn	(0X31F39);
	set_name	(0X31F39,	"nopsub_31F39");
	create_insn	(x=0X31F3C);
	op_hex		(x,	1);
	create_insn	(x=0X31F42);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F46);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_byte	(0X31F54);
	create_insn	(0X31F55);
	set_name	(0X31F55,	"nopsub_31F55");
	create_insn	(x=0X31F58);
	op_hex		(x,	1);
	create_insn	(x=0X31F5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F62);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X31F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X31F71);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X31F7A);
	op_hex		(x,	1);
	create_insn	(x=0X31F7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F86);
	op_stkvar	(x,	1);
	create_insn	(x=0X31F8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F91);
	op_stkvar	(x,	0);
	create_insn	(x=0X31F99);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X31FD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X31FDF);
	op_hex		(x,	1);
	create_insn	(0X31FE8);
	create_insn	(x=0X31FF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X31FFA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X32002);
	op_stkvar	(x,	0);
	create_insn	(x=0X32005);
	op_stkvar	(x,	0);
	create_insn	(x=0X32008);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X32010);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3201E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32025);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3202D);
	op_stkvar	(x,	0);
	create_insn	(x=0X32030);
	op_stkvar	(x,	0);
	create_insn	(x=0X32033);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_byte	(0X3203A);
	create_insn	(x=0X3203B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X32063);
	op_stkvar	(x,	1);
	create_insn	(x=0X32068);
	op_stkvar	(x,	1);
	create_insn	(x=0X3206D);
	op_stkvar	(x,	1);
	create_insn	(x=0X32077);
	op_stkvar	(x,	1);
	create_insn	(x=0X32081);
	op_stkvar	(x,	0);
	create_insn	(x=0X32085);
	op_stkvar	(x,	1);
	create_insn	(x=0X3208A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3209D);
	op_stkvar	(x,	0);
	create_insn	(x=0X320A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X320B3);
	op_hex		(x,	1);
	create_insn	(x=0X320BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X320C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X320CA);
	op_stkvar	(x,	0);
	create_insn	(0X320D6);
	create_insn	(x=0X320D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X320DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X320E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X320E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X320EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X320F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X320F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X320FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32109);
	op_stkvar	(x,	0);
	create_insn	(x=0X3210F);
	op_stkvar	(x,	1);
	create_insn	(x=0X32114);
	op_stkvar	(x,	1);
	create_insn	(x=0X32123);
	op_stkvar	(x,	1);
	create_insn	(x=0X32137);
	op_stkvar	(x,	0);
	create_insn	(x=0X3213C);
	op_hex		(x,	1);
	create_insn	(x=0X3213E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32145);
	op_stkvar	(x,	1);
	create_insn	(x=0X32150);
	op_hex		(x,	1);
	create_insn	(0X3215A);
	set_name	(0X3215A,	"nopsub_3215A");
	create_insn	(0X3216C);
	set_name	(0X3216C,	"nopsub_3216C");
	create_insn	(0X3219D);
	set_name	(0X3219D,	"nopsub_3219D");
	set_cmt	(0X321A8,	"char *",	0);
	create_insn	(x=0X321AE);
	op_hex		(x,	1);
	create_insn	(0X321FD);
	create_insn	(0X3220C);
	create_insn	(0X32226);
	create_insn	(0X3223A);
	create_insn	(0X3224D);
	create_insn	(0X32260);
	create_insn	(x=0X3226A);
	op_hex		(x,	1);
	create_insn	(0X32272);
	set_cmt	(0X32289,	"char *",	0);
	create_insn	(x=0X3228F);
	op_hex		(x,	1);
	create_insn	(0X3229A);
	create_insn	(0X322B4);
	set_name	(0X322B4,	"nopsub_322B4");
	create_insn	(x=0X322B7);
	op_stkvar	(x,	1);
	create_insn	(0X322C0);
	set_name	(0X322C0,	"nopsub_322C0");
	create_insn	(x=0X322C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X322D0);
	op_stkvar	(x,	1);
	create_insn	(0X322DF);
	set_name	(0X322DF,	"nopsub_322DF");
	create_insn	(x=0X322E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X322EA);
	op_stkvar	(x,	1);
	create_byte	(0X322F2);
	create_insn	(0X322F3);
	set_name	(0X322F3,	"set_projection");
	create_insn	(x=0X322F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X32306);
	op_hex		(x,	1);
	create_insn	(x=0X32308);
	op_hex		(x,	1);
	create_insn	(x=0X32311);
	op_hex		(x,	1);
	create_insn	(x=0X32316);
	op_stkvar	(x,	1);
	create_insn	(x=0X32324);
	op_hex		(x,	1);
	create_insn	(x=0X32326);
	op_hex		(x,	1);
	create_insn	(x=0X3232F);
	op_hex		(x,	1);
	create_insn	(x=0X32334);
	op_stkvar	(x,	1);
	create_insn	(x=0X32337);
	op_hex		(x,	1);
	create_insn	(x=0X32343);
	op_stkvar	(x,	1);
	create_insn	(x=0X32346);
	op_hex		(x,	1);
	create_insn	(x=0X3235B);
	op_hex		(x,	1);
	create_insn	(x=0X3236F);
	op_hex		(x,	1);
	update_extra_cmt		(0X3237D,	E_PREV + 0,	"");
	update_extra_cmt		(0X3237D,	E_PREV + 1,	"");
	create_insn	(x=0X3238E);
	op_hex		(x,	1);
	create_insn	(x=0X323A2);
	op_hex		(x,	1);
	create_insn	(0X323B4);
	create_insn	(x=0X323B6);
	op_hex		(x,	1);
	create_insn	(x=0X323B8);
	op_hex		(x,	1);
	create_insn	(x=0X323BA);
	op_hex		(x,	1);
	create_insn	(x=0X323BE);
	op_hex		(x,	1);
	create_insn	(x=0X323CF);
	op_hex		(x,	1);
	update_extra_cmt		(0X323D9,	E_PREV + 0,	"returns something like x/z, y/z");
	create_insn	(0X323D9);
	set_name	(0X323D9,	"vector_to_point");
	create_insn	(x=0X323DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X323E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X323E4);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X323EB);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X323F7);
	op_hex		(x,	1);
	create_byte	(0X3240E);
	create_insn	(0X3240F);
	create_insn	(x=0X32417);
	op_hex		(x,	1);
	create_byte	(0X32430);
	create_insn	(x=0X32431);
	op_dec		(x,	1);
	create_insn	(0X3243C);
	create_insn	(0X32448);
	create_insn	(x=0X3244D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3245A);
	op_hex		(x,	1);
	create_insn	(0X32476);
	create_insn	(x=0X3247E);
	op_hex		(x,	1);
	create_insn	(0X32496);
	create_insn	(x=0X3249A);
	toggle_sign		(x,	1);
	op_hex		(x,	1);
	create_insn	(0X324A2);
	create_insn	(0X324AA);
	set_name	(0X324AA,	"sprite_free_wnd");
	create_insn	(x=0X324B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X324B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X324B6);
	op_stroff	(x,	1,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X324BA);
	op_stroff	(x,	1,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X324BD);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X324C3);
	op_hex		(x,	1);
	create_insn	(x=0X324E4);
	op_hex		(x,	1);
	create_insn	(0X324EC);
	create_insn	(x=0X324F0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X324FA);
	set_name	(0X324FA,	"file_write_nofatal");
	create_insn	(x=0X324FD);
	op_hex		(x,	1);
	create_insn	(x=0X32503);
	op_stkvar	(x,	0);
	create_byte	(0X3250A);
	create_insn	(0X3250B);
	set_name	(0X3250B,	"file_write_fatal");
	create_insn	(x=0X3250E);
	op_hex		(x,	1);
	create_insn	(x=0X32514);
	op_stkvar	(x,	0);
	create_insn	(x=0X32519);
	op_stkvar	(x,	1);
	set_name	(0X32519,	"_file_write");
	create_insn	(x=0X3251E);
	op_hex		(x,	1);
	set_cmt	(0X32520,	"DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT)\nCX = attributes for file\nDS:DX -> ASCIZ filename (may include drive and path)",	0);
	create_insn	(x=0X32520);
	op_hex		(x,	0);
	create_insn	(x=0X32524);
	op_stkvar	(x,	0);
	create_insn	(x=0X32527);
	op_stkvar	(x,	0);
	create_insn	(x=0X3252D);
	op_stkvar	(x,	0);
	create_insn	(x=0X32536);
	op_stkvar	(x,	1);
	create_insn	(x=0X32539);
	op_stkvar	(x,	0);
	create_insn	(x=0X3253C);
	op_stkvar	(x,	0);
	create_insn	(x=0X32542);
	op_stkvar	(x,	1);
	create_insn	(x=0X32545);
	op_stkvar	(x,	0);
	create_insn	(x=0X3254A);
	op_stkvar	(x,	0);
	create_insn	(x=0X32553);
	op_stkvar	(x,	1);
	create_insn	(x=0X32556);
	op_stkvar	(x,	1);
	create_insn	(x=0X32559);
	op_stkvar	(x,	1);
	create_insn	(x=0X3255C);
	op_hex		(x,	1);
	set_cmt	(0X3255E,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer",	0);
	create_insn	(x=0X3255E);
	op_hex		(x,	0);
	create_insn	(x=0X32566);
	op_stkvar	(x,	0);
	create_insn	(0X3256D);
	create_insn	(x=0X32570);
	op_stkvar	(x,	0);
	create_insn	(x=0X32573);
	op_stkvar	(x,	1);
	create_insn	(x=0X32576);
	op_hex		(x,	1);
	set_cmt	(0X32578,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X32578);
	op_hex		(x,	0);
	create_insn	(x=0X3257E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32581);
	op_hex		(x,	1);
	set_cmt	(0X32583,	"DOS - 2+ - DELETE A FILE (UNLINK)\nDS:DX -> ASCIZ pathname of file to delete (no wildcards allowed)",	0);
	create_insn	(x=0X32583);
	op_hex		(x,	0);
	create_insn	(x=0X32585);
	op_stkvar	(x,	1);
	create_insn	(x=0X32588);
	op_stkvar	(x,	0);
	create_insn	(x=0X32592);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X32595);
	op_stkvar	(x,	0);
	create_insn	(x=0X3259E);
	op_stkvar	(x,	1);
	create_insn	(x=0X325A1);
	op_hex		(x,	1);
	set_cmt	(0X325A3,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle",	0);
	create_insn	(x=0X325A3);
	op_hex		(x,	0);
	create_insn	(0X325AE);
	set_name	(0X325AE,	"video_add_exithandler");
	set_cmt	(0X325B7,	"- VIDEO - GET CURRENT VIDEO MODE\nReturn: AH = number of columns on screen\nAL = current video mode\nBH = current active display page",	0);
	create_insn	(x=0X325B7);
	op_hex		(x,	0);
	create_insn	(x=0X325C9);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X325D2);
	op_hex		(x,	1);
	create_insn	(0X325D6);
	set_name	(0X325D6,	"video_on_exit");
	set_cmt	(0X325E7,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X325E7);
	op_hex		(x,	0);
	create_insn	(x=0X325F5);
	op_hex		(x,	1);
	create_insn	(x=0X32603);
	op_hex		(x,	1);
	set_cmt	(0X3260B,	"- VIDEO - ",	0);
	create_insn	(x=0X3260B);
	op_hex		(x,	0);
	create_insn	(0X3260E);
	set_name	(0X3260E,	"sprite_copy_both_to_arg");
	create_insn	(x=0X32614);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X32618);
	op_stkvar	(x,	1);
	create_insn	(0X3262E);
	set_name	(0X3262E,	"sprite_copy_arg_to_both");
	create_insn	(x=0X32634);
	op_stkvar	(x,	1);
	create_insn	(x=0X3263B);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(0X3264A);
	set_name	(0X3264A,	"file_get_res_shape_count");
	create_insn	(x=0X3264E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32651);
	op_stkvar	(x,	1);
	create_insn	(0X3265B);
	set_name	(0X3265B,	"file_get_shape2d");
	create_insn	(x=0X3265F);
	op_stkvar	(x,	1);
	create_insn	(x=0X32662);
	op_stkvar	(x,	1);
	set_cmt	(0X32665,	"number of objects in resource file",	0);
	create_insn	(x=0X32669);
	op_hex		(x,	1);
	create_insn	(x=0X3266B);
	op_hex		(x,	1);
	set_cmt	(0X3266D,	"index",	0);
	create_insn	(x=0X3266D);
	op_stkvar	(x,	1);
	create_insn	(x=0X32670);
	op_hex		(x,	1);
	create_insn	(x=0X32672);
	op_hex		(x,	1);
	set_cmt	(0X32674,	"bx = index<<2 + count<<2",	0);
	set_cmt	(0X32676,	"bx += 6",	0);
	set_cmt	(0X32679,	"ax = index<<2 << 1",	0);
	create_insn	(x=0X32679);
	op_hex		(x,	1);
	set_cmt	(0X3267B,	"ax += 6",	0);
	create_insn	(x=0X32682);
	op_hex		(x,	1);
	create_insn	(x=0X32684);
	op_hex		(x,	1);
	create_insn	(x=0X32686);
	op_hex		(x,	1);
	create_insn	(x=0X32688);
	op_hex		(x,	1);
	create_insn	(x=0X3268A);
	op_hex		(x,	1);
	create_insn	(x=0X3268C);
	op_hex		(x,	1);
	create_insn	(x=0X3268E);
	op_hex		(x,	1);
	create_insn	(x=0X32690);
	op_hex		(x,	1);
	create_insn	(x=0X326A0);
	op_hex		(x,	1);
	create_insn	(x=0X326A3);
	op_hex		(x,	1);
	create_insn	(x=0X326A5);
	op_hex		(x,	1);
	create_insn	(x=0X326A7);
	op_hex		(x,	1);
	create_insn	(x=0X326A9);
	op_hex		(x,	1);
	create_insn	(x=0X326AB);
	op_hex		(x,	1);
	create_insn	(x=0X326AD);
	op_hex		(x,	1);
	create_insn	(x=0X326AF);
	op_hex		(x,	1);
	create_insn	(x=0X326B1);
	op_hex		(x,	1);
	create_insn	(0X326BA);
	set_name	(0X326BA,	"nopsub_326BA");
	create_insn	(x=0X326BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X326C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X326C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X326C7);
	op_hex		(x,	1);
	create_insn	(x=0X326C9);
	op_hex		(x,	1);
	create_insn	(x=0X326D3);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X326DE,	E_PREV + 0,	"");
	update_extra_cmt		(0X326DE,	E_PREV + 1,	"Returns a sine from a given angle.");
	update_extra_cmt		(0X326DE,	E_PREV + 2,	"Please note there is a 4000h factor");
	update_extra_cmt		(0X326DE,	E_PREV + 3,	"included in the sine!!");
	create_insn	(0X326DE);
	set_name	(0X326DE,	"sin_fast");
	create_insn	(x=0X326E1);
	op_stkvar	(x,	1);
	set_name	(0X326E4,	"code_sin_fast_main");
	set_cmt	(0X326E8,	"constrain angles to [0, 2pi]",	0);
	create_insn	(x=0X326E8);
	op_hex		(x,	1);
	create_insn	(x=0X326EB);
	op_hex		(x,	1);
	create_insn	(x=0X326ED);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X326F2);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X326F4);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X326F6);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X326F8);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X326FA);
	create_insn	(x=0X326FC);
	op_hex		(x,	1);
	create_insn	(x=0X326FE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X32704);
	create_insn	(x=0X32709);
	op_hex		(x,	1);
	create_insn	(x=0X3270B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X32711);
	create_insn	(x=0X32713);
	op_hex		(x,	1);
	create_insn	(x=0X32715);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X3271D);
	create_insn	(x=0X32722);
	op_hex		(x,	1);
	create_insn	(x=0X32724);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X3272C);
	set_name	(0X3272C,	"cos_fast");
	create_insn	(x=0X3272F);
	op_stkvar	(x,	1);
	create_insn	(0X32738);
	set_name	(0X32738,	"nopsub_32738");
	create_insn	(x=0X3273B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3273E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32741);
	op_stkvar	(x,	1);
	create_insn	(0X32746);
	set_name	(0X32746,	"nopsub_32746");
	create_insn	(x=0X3274C);
	op_stkvar	(x,	1);
	create_insn	(0X32751);
	set_name	(0X32751,	"nopsub_32751");
	create_insn	(x=0X32757);
	op_stkvar	(x,	1);
	create_insn	(0X3275C);
	set_name	(0X3275C,	"transformed_shape_op_helper2");
	create_insn	(x=0X32762);
	op_stkvar	(x,	1);
	create_insn	(x=0X32765);
	op_stkvar	(x,	1);
	create_insn	(0X3276A);
	set_name	(0X3276A,	"nopsub_3276A");
	create_insn	(x=0X32770);
	op_stkvar	(x,	1);
	create_insn	(x=0X32773);
	op_stkvar	(x,	1);
	create_insn	(0X32778);
	set_name	(0X32778,	"timer_get_counter");
	create_insn	(0X32782);
	set_name	(0X32782,	"timer_custom_delta");
	create_insn	(x=0X32785);
	op_stkvar	(x,	1);
	create_insn	(x=0X32788);
	op_stkvar	(x,	1);
	create_insn	(0X3279A);
	set_name	(0X3279A,	"timer_get_delta");
	create_insn	(0X327B7);
	set_name	(0X327B7,	"timer_reset");
	create_insn	(0X327C0);
	set_name	(0X327C0,	"timer_copy_counter");
	create_insn	(x=0X327C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X327CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X327D7);
	op_bin		(x,	0);
	set_name	(0X327D7,	"timer_wait_for_dx");
	create_insn	(0X327EB);
	set_name	(0X327EB,	"timer_compare_dx");
	create_insn	(0X32802);
	create_insn	(0X32805);
	set_name	(0X32805,	"timer_get_counter_unk");
	create_insn	(x=0X32808);
	op_hex		(x,	1);
	create_insn	(x=0X32810);
	op_stkvar	(x,	1);
	create_insn	(x=0X32813);
	op_stkvar	(x,	1);
	create_insn	(x=0X32816);
	op_stkvar	(x,	0);
	create_insn	(x=0X32819);
	op_stkvar	(x,	0);
	create_insn	(x=0X32821);
	op_stkvar	(x,	1);
	create_insn	(x=0X32828);
	op_stkvar	(x,	1);
	create_insn	(0X32832);
	set_name	(0X32832,	"font_op");
	create_insn	(x=0X32837);
	op_stkvar	(x,	1);
	create_byte	(0X32842);
	create_insn	(0X32843);
	set_name	(0X32843,	"font_op2");
	create_insn	(x=0X3284E);
	op_stkvar	(x,	1);
	create_insn	(x=0X32866);
	op_hex		(x,	1);
	create_insn	(0X32882);
	create_insn	(0X32886);
	set_name	(0X32886,	"preRender_patterned");
	create_insn	(x=0X32889);
	op_hex		(x,	1);
	create_insn	(x=0X3288F);
	op_stkvar	(x,	1);
	create_insn	(x=0X32892);
	op_stkvar	(x,	0);
	create_insn	(0X32898);
	create_insn	(x=0X3289B);
	op_hex		(x,	1);
	create_insn	(x=0X328A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X328A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X328A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X328AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X328B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X328B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X328B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X328BA);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X328C0);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(0X328C9);
	set_name	(0X328C9,	"nopsub_328C9");
	create_insn	(x=0X328CC);
	op_hex		(x,	1);
	create_insn	(x=0X328D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X328D5);
	op_stkvar	(x,	0);
	create_insn	(0X328DB);
	set_name	(0X328DB,	"nopsub_328DB");
	create_insn	(x=0X328DE);
	op_hex		(x,	1);
	create_insn	(x=0X328E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X328E7);
	op_stkvar	(x,	0);
	create_insn	(0X328EE);
	set_name	(0X328EE,	"mat_mul_vector");
	create_insn	(x=0X328F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X328F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X328F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X328FE);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32904);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3290C);
	op_hex		(x,	1);
	create_insn	(x=0X3290E);
	op_hex		(x,	1);
	create_insn	(x=0X32910);
	op_hex		(x,	1);
	create_insn	(x=0X32912);
	op_hex		(x,	1);
	create_insn	(x=0X32914);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32916);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3291D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32926);
	op_hex		(x,	1);
	create_insn	(x=0X32928);
	op_hex		(x,	1);
	create_insn	(x=0X3292A);
	op_hex		(x,	1);
	create_insn	(x=0X3292C);
	op_hex		(x,	1);
	create_insn	(x=0X3292E);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32930);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32937);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32940);
	op_hex		(x,	1);
	create_insn	(x=0X32942);
	op_hex		(x,	1);
	create_insn	(x=0X32944);
	op_hex		(x,	1);
	create_insn	(x=0X32946);
	op_hex		(x,	1);
	create_insn	(x=0X32948);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3294C);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32953);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3295B);
	op_hex		(x,	1);
	create_insn	(x=0X3295D);
	op_hex		(x,	1);
	create_insn	(x=0X3295F);
	op_hex		(x,	1);
	create_insn	(x=0X32961);
	op_hex		(x,	1);
	create_insn	(x=0X32963);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32966);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3296D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32976);
	op_hex		(x,	1);
	create_insn	(x=0X32978);
	op_hex		(x,	1);
	create_insn	(x=0X3297A);
	op_hex		(x,	1);
	create_insn	(x=0X3297C);
	op_hex		(x,	1);
	create_insn	(x=0X32981);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32988);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X32991);
	op_hex		(x,	1);
	create_insn	(x=0X32993);
	op_hex		(x,	1);
	create_insn	(x=0X32995);
	op_hex		(x,	1);
	create_insn	(x=0X32997);
	op_hex		(x,	1);
	create_insn	(x=0X32999);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3299E);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X329A5);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X329AD);
	op_hex		(x,	1);
	create_insn	(x=0X329AF);
	op_hex		(x,	1);
	create_insn	(x=0X329B1);
	op_hex		(x,	1);
	create_insn	(x=0X329B3);
	op_hex		(x,	1);
	create_insn	(x=0X329B5);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X329B8);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X329BF);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X329C8);
	op_hex		(x,	1);
	create_insn	(x=0X329CA);
	op_hex		(x,	1);
	create_insn	(x=0X329CC);
	op_hex		(x,	1);
	create_insn	(x=0X329CE);
	op_hex		(x,	1);
	create_insn	(x=0X329D0);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X329D3);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X329DA);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X329E3);
	op_hex		(x,	1);
	create_insn	(x=0X329E5);
	op_hex		(x,	1);
	create_insn	(x=0X329E7);
	op_hex		(x,	1);
	create_insn	(x=0X329E9);
	op_hex		(x,	1);
	create_insn	(x=0X329EB);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(0X329F2);
	set_name	(0X329F2,	"mat_multiply");
	create_insn	(x=0X329F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X329FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X329FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X32A05);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A0B);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A10);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A12);
	op_hex		(x,	1);
	create_insn	(x=0X32A14);
	op_hex		(x,	1);
	create_insn	(x=0X32A16);
	op_hex		(x,	1);
	create_insn	(x=0X32A18);
	op_hex		(x,	1);
	create_insn	(x=0X32A1A);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A1C);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A23);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A29);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A2C);
	op_hex		(x,	1);
	create_insn	(x=0X32A2E);
	op_hex		(x,	1);
	create_insn	(x=0X32A30);
	op_hex		(x,	1);
	create_insn	(x=0X32A32);
	op_hex		(x,	1);
	create_insn	(x=0X32A34);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A36);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A3D);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A43);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A46);
	op_hex		(x,	1);
	create_insn	(x=0X32A48);
	op_hex		(x,	1);
	create_insn	(x=0X32A4A);
	op_hex		(x,	1);
	create_insn	(x=0X32A4C);
	op_hex		(x,	1);
	create_insn	(x=0X32A4E);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(0X32A66);
	update_extra_cmt		(0X32A72,	E_PREV + 0,	"Creates inverted 3x3 matrix");
	create_insn	(0X32A72);
	set_name	(0X32A72,	"mat_invert");
	create_insn	(x=0X32A77);
	op_stkvar	(x,	1);
	create_insn	(x=0X32A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X32A84);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A87);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A8A);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A8D);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A90);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A93);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A96);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A99);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32A9C);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AA3);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AA5);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AA7);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AAA);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AAD);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AB0);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AB3);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AB6);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AB9);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32ABC);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32ABF);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AC2);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AC5);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AC8);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32ACB);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32ACE);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AD1);
	op_stroff	(x,	1,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X32AD4);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_word	(x=0X32ADC);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	set_name	(0X32ADC,	"fliphandlers");
	create_word	(x=0X32ADE);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X32AE0);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	update_extra_cmt		(0X32AE2,	E_PREV + 0,	"enumerates shapes in an uncompressed shape resource ");
	update_extra_cmt		(0X32AE2,	E_PREV + 1,	"and flips x/y/interlaced depending on shape flags");
	create_insn	(0X32AE2);
	set_name	(0X32AE2,	"file_unflip_shape2d");
	create_insn	(x=0X32AE5);
	op_hex		(x,	1);
	create_insn	(x=0X32AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32AF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X32AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X32AF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X32AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32AFF);
	op_stkvar	(x,	0);
	set_cmt	(0X32B02,	"number of shapes in binary",	0);
	create_insn	(x=0X32B05);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B08);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B10);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B13);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B16);
	op_seg		(x,	1);
	set_cmt	(0X32B1B,	"get shape in binary at index",	0);
	create_insn	(x=0X32B20);
	op_hex		(x,	1);
	create_insn	(x=0X32B23);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X32B2D);
	op_stkvar	(x,	1);
	set_cmt	(0X32B30,	"unk6 = is flipped",	0);
	create_insn	(x=0X32B30);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X32B33);
	op_hex		(x,	1);
	set_cmt	(0X32B37,	"(unk4 >> 4) = fliptype, 1..3",	0);
	create_insn	(x=0X32B37);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X32B3A);
	op_hex		(x,	1);
	create_insn	(x=0X32B3C);
	op_hex		(x,	1);
	create_insn	(x=0X32B3E);
	op_hex		(x,	1);
	create_insn	(x=0X32B40);
	op_hex		(x,	1);
	create_insn	(x=0X32B4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B51);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B5F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X32B61);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B64);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X32B67);
	op_stkvar	(x,	0);
	create_insn	(x=0X32B71);
	op_hex		(x,	1);
	set_cmt	(0X32B73,	"jump to flip type handler",	0);
	create_insn	(x=0X32B73);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	set_name	(0X32B78,	"fliptype0");
	create_insn	(x=0X32B7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X32B85);
	op_stkvar	(x,	1);
	create_insn	(x=0X32B8B);
	op_stkvar	(x,	1);
	create_insn	(0X32B93);
	set_name	(0X32B93,	"fliptype1");
	create_insn	(x=0X32B95);
	op_hex		(x,	1);
	create_insn	(x=0X32B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BBF);
	op_hex		(x,	1);
	create_insn	(x=0X32BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BD6);
	op_stkvar	(x,	1);
	create_insn	(0X32BDE);
	set_name	(0X32BDE,	"fliptype2");
	create_insn	(x=0X32BE0);
	op_hex		(x,	1);
	create_insn	(x=0X32BE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X32BEE);
	op_hex		(x,	1);
	create_insn	(x=0X32BFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C03);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C06);
	op_hex		(x,	1);
	create_insn	(x=0X32C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C15);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C25);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X32C2D);
	op_hex		(x,	1);
	create_insn	(0X32C36);
	create_word	(0X32C3C);
	make_array	(0X32C3C,	0X10);
	set_name	(0X32C3C,	"vle_esc1");
	create_byte	(0X32C5C);
	make_array	(0X32C5C,	0X10);
	set_name	(0X32C5C,	"vle_esc2");
	create_insn	(0X32D7C);
	set_name	(0X32D7C,	"file_decomp_vle");
	create_insn	(x=0X32D7F);
	op_hex		(x,	1);
	create_insn	(x=0X32D86);
	op_hex		(x,	1);
	create_insn	(x=0X32D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X32D8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X32D93);
	op_stkvar	(x,	0);
	create_insn	(x=0X32D96);
	op_stkvar	(x,	0);
	create_insn	(x=0X32D9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X32DA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X32DA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X32DAC);
	op_hex		(x,	1);
	create_insn	(x=0X32DB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X32DB5);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X32DB9);
	op_hex		(x,	1);
	create_insn	(x=0X32DC1);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X32DC6);
	op_hex		(x,	1);
	create_insn	(x=0X32DC8);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X32DD8);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(x=0X32DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E09);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X32E20);
	op_stkvar	(x,	0);
	create_insn	(x=0X32E2D);
	op_hex		(x,	1);
	create_insn	(x=0X32E35);
	op_stkvar	(x,	0);
	create_insn	(x=0X32E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E47);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E52);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X32E5C);
	create_insn	(x=0X32E5E);
	op_hex		(x,	1);
	create_insn	(x=0X32E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X32E6B);
	op_stkvar	(x,	1);
	create_byte	(0X32E7E);
	create_insn	(0X32E7F);
	create_insn	(x=0X32E87);
	op_stkvar	(x,	0);
	create_insn	(x=0X32E8C);
	op_stkvar	(x,	0);
	create_insn	(0X32E94);
	create_insn	(0X32EA0);
	create_insn	(0X32EA9);
	create_insn	(0X32EB5);
	create_insn	(x=0X32ED4);
	op_hex		(x,	1);
	create_insn	(x=0X32ED6);
	op_hex		(x,	1);
	create_insn	(x=0X32EDE);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X32EE5);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(0X32F01);
	create_insn	(0X32F0A);
	create_insn	(x=0X32F16);
	op_stkvar	(x,	1);
	create_insn	(x=0X32F19);
	op_stkvar	(x,	1);
	create_insn	(x=0X32F1C);
	op_hex		(x,	1);
	create_insn	(0X32F27);
	create_insn	(x=0X32F29);
	op_hex		(x,	1);
	create_insn	(x=0X32F2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X32F36);
	op_stkvar	(x,	1);
	create_insn	(0X32F4C);
	create_insn	(x=0X32F56);
	op_stkvar	(x,	0);
	create_insn	(x=0X32F5B);
	op_stkvar	(x,	0);
	create_insn	(0X32F62);
	create_insn	(0X32F6E);
	create_insn	(0X32F77);
	create_insn	(0X32F83);
	create_insn	(x=0X32F8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X32F98);
	op_stkvar	(x,	0);
	create_insn	(x=0X32FA6);
	op_hex		(x,	1);
	create_insn	(x=0X32FA8);
	op_hex		(x,	1);
	create_insn	(x=0X32FB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X32FB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X32FD1);
	op_stkvar	(x,	0);
	create_insn	(0X32FD8);
	create_insn	(0X32FE1);
	create_insn	(0X32FEE);
	set_name	(0X32FEE,	"nopsub_32FEE");
	set_cmt	(0X32FF1,	"Video status bits:\n0: retrace.  1=display is in vert or horiz retrace.\n1: 1=light pen is triggered; 0=armed\n2: 1=light pen switch is open; 0=closed\n3: 1=vertical sync pulse is occurring.",	0);
	create_insn	(x=0X32FF2);
	op_hex		(x,	1);
	set_cmt	(0X32FF6,	"Video status bits:\n0: retrace.  1=display is in vert or horiz retrace.\n1: 1=light pen is triggered; 0=armed\n2: 1=light pen switch is open; 0=closed\n3: 1=vertical sync pulse is occurring.",	0);
	create_insn	(x=0X32FF7);
	op_hex		(x,	1);
	create_insn	(0X32FFC);
	set_name	(0X32FFC,	"video_get_status");
	set_cmt	(0X32FFF,	"Video status bits:\n0: retrace.  1=display is in vert or horiz retrace.\n1: 1=light pen is triggered; 0=armed\n2: 1=light pen switch is open; 0=closed\n3: 1=vertical sync pulse is occurring.",	0);
	create_insn	(x=0X33000);
	op_hex		(x,	1);
	create_insn	(0X33006);
	set_name	(0X33006,	"nopsub_33006");
	create_insn	(x=0X33009);
	op_hex		(x,	1);
	create_insn	(0X33014);
	set_name	(0X33014,	"vector_op_unk");
	create_insn	(x=0X33017);
	op_hex		(x,	1);
	create_insn	(x=0X3301C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3301F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33022);
	op_stkvar	(x,	1);
	create_insn	(x=0X33025);
	op_stkvar	(x,	1);
	create_insn	(x=0X33028);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3302B);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3302E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33031);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33034);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3303B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3303E);
	op_hex		(x,	1);
	create_insn	(x=0X33040);
	op_stkvar	(x,	0);
	create_insn	(x=0X33043);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33045);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33047);
	op_stkvar	(x,	1);
	create_insn	(x=0X3304A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3304D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X3304F);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	update_extra_cmt		(0X33051,	E_PREV + 0,	"");
	update_extra_cmt		(0X33051,	E_PREV + 1,	"");
	create_insn	(x=0X33051);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33054);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33057);
	op_stkvar	(x,	1);
	create_insn	(x=0X3305A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3305D);
	op_stroff	(x,	1,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(x=0X33060);
	op_stroff	(x,	0,	GetStrucIdByName("VECTOR"),	0);
	create_insn	(0X33069);
	create_insn	(0X33072);
	set_name	(0X33072,	"preRender_sphere");
	create_insn	(x=0X33075);
	op_hex		(x,	1);
	create_insn	(x=0X3307B);
	op_stkvar	(x,	1);
	create_insn	(x=0X33080);
	op_hex		(x,	1);
	create_insn	(x=0X33082);
	op_hex		(x,	1);
	create_insn	(x=0X33086);
	op_hex		(x,	1);
	create_insn	(x=0X33088);
	op_hex		(x,	1);
	create_insn	(x=0X33096);
	op_stkvar	(x,	0);
	create_insn	(x=0X3309B);
	op_hex		(x,	1);
	create_insn	(x=0X3309F);
	op_stkvar	(x,	0);
	create_insn	(x=0X330A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X330A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X330AD);
	op_hex		(x,	1);
	create_insn	(0X330B6);
	create_insn	(x=0X330BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X330C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X330C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X330D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X330E5);
	op_hex		(x,	1);
	create_insn	(x=0X330E7);
	op_hex		(x,	1);
	create_insn	(x=0X330EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X330F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X330F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33104);
	op_stkvar	(x,	1);
	create_insn	(x=0X33107);
	op_stkvar	(x,	0);
	create_insn	(x=0X3310A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3310D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33110);
	op_hex		(x,	1);
	create_insn	(x=0X33114);
	op_stkvar	(x,	0);
	create_insn	(x=0X33117);
	op_stkvar	(x,	1);
	create_insn	(x=0X3311A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3311D);
	op_stkvar	(x,	0);
	create_insn	(x=0X33120);
	op_stkvar	(x,	1);
	create_insn	(x=0X33123);
	op_hex		(x,	1);
	create_insn	(x=0X33127);
	op_stkvar	(x,	0);
	create_insn	(x=0X3312A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3312D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33130);
	op_hex		(x,	1);
	create_insn	(x=0X3313B);
	op_hex		(x,	1);
	create_insn	(x=0X3313E);
	op_hex		(x,	1);
	create_insn	(x=0X33148);
	op_hex		(x,	1);
	create_insn	(x=0X3314A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3314E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33151);
	op_stkvar	(x,	1);
	create_insn	(x=0X33154);
	op_stkvar	(x,	0);
	create_insn	(x=0X33158);
	op_hex		(x,	1);
	create_insn	(x=0X3315A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3315D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33161);
	op_stkvar	(x,	1);
	create_insn	(x=0X33165);
	op_stkvar	(x,	1);
	create_insn	(x=0X3316A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3316F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33172);
	op_stkvar	(x,	1);
	create_insn	(x=0X33177);
	op_stkvar	(x,	1);
	create_insn	(x=0X3317C);
	op_stkvar	(x,	1);
	create_insn	(x=0X33181);
	op_stkvar	(x,	1);
	create_insn	(x=0X33188);
	op_stkvar	(x,	1);
	create_insn	(x=0X3318D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33192);
	op_stkvar	(x,	1);
	create_insn	(x=0X33197);
	op_stkvar	(x,	1);
	create_insn	(x=0X331A4);
	op_stkvar	(x,	0);
	create_byte	(0X331AC);
	create_insn	(x=0X331AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X331B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X331B4);
	op_stkvar	(x,	0);
	create_insn	(0X331C0);
	create_insn	(x=0X331C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X331CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X331CE);
	op_hex		(x,	1);
	create_insn	(x=0X331D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X331D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X331DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X331E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X331E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X331EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X331EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X331F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X331F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33205);
	op_hex		(x,	1);
	create_insn	(0X3320E);
	set_name	(0X3320E,	"nopsub_3320E");
	create_insn	(x=0X33213);
	op_stkvar	(x,	1);
	create_insn	(x=0X33216);
	op_stkvar	(x,	1);
	create_insn	(x=0X33223);
	op_stkvar	(x,	1);
	create_insn	(x=0X33234);
	op_stkvar	(x,	1);
	create_insn	(x=0X33245);
	op_stkvar	(x,	1);
	create_insn	(x=0X3324F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3325D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33266);
	op_stkvar	(x,	1);
	create_insn	(x=0X3326F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33275);
	op_stkvar	(x,	1);
	create_insn	(0X3327F);
	set_name	(0X3327F,	"sprite_set_1_size");
	create_insn	(x=0X33282);
	op_stkvar	(x,	1);
	create_insn	(x=0X3328D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33298);
	op_stkvar	(x,	1);
	create_insn	(x=0X3329F);
	op_stkvar	(x,	1);
	create_insn	(0X332A8);
	set_name	(0X332A8,	"video_clear_color");
	create_insn	(x=0X332B1);
	op_stkvar	(x,	1);
	create_insn	(0X332C0);
	set_name	(0X332C0,	"sprite_clear_1_color");
	create_insn	(x=0X332D9);
	op_hex		(x,	1);
	create_insn	(x=0X332FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33300);
	op_hex		(x,	1);
	create_insn	(0X33311);
	create_insn	(0X33324);
	create_insn	(0X33330);
	set_name	(0X33330,	"nopsub_33330");
	create_insn	(x=0X33335);
	op_stkvar	(x,	1);
	create_insn	(x=0X3333B);
	op_stkvar	(x,	1);
	create_insn	(0X33344);
	set_name	(0X33344,	"draw_unknown_lines");
	create_insn	(x=0X3334A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3334D);
	op_hex		(x,	1);
	create_insn	(x=0X3335B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3335E);
	op_hex		(x,	1);
	create_insn	(x=0X3336B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3336E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33373);
	op_stkvar	(x,	1);
	create_insn	(x=0X3337E);
	op_hex		(x,	1);
	create_insn	(x=0X33393);
	op_hex		(x,	1);
	create_insn	(x=0X3339A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3339E);
	op_stkvar	(x,	0);
	create_insn	(x=0X333AF);
	op_stkvar	(x,	0);
	create_insn	(0X333B8);
	create_insn	(0X333C0);
	set_name	(0X333C0,	"putpixel_line1_maybe");
	create_insn	(x=0X333C3);
	op_hex		(x,	1);
	create_insn	(x=0X333C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X333D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X333D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X333E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X333EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X333F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X333F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X33403);
	op_hex		(x,	1);
	create_insn	(x=0X33405);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X3340A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X3340C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X3340E);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X33410);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X33412);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X33414);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X33416);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X33418);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X3341A);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_word	(x=0X3341C);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	create_insn	(0X3341E);
	create_insn	(x=0X33421);
	op_stkvar	(x,	1);
	create_insn	(x=0X33424);
	op_stkvar	(x,	1);
	create_insn	(x=0X33427);
	op_hex		(x,	1);
	create_insn	(x=0X33431);
	op_stkvar	(x,	1);
	create_insn	(x=0X3343C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3343F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33442);
	op_hex		(x,	1);
	create_insn	(x=0X3344C);
	op_stkvar	(x,	1);
	create_insn	(0X33458);
	create_insn	(x=0X3345B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3345E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33464);
	op_hex		(x,	1);
	create_insn	(0X3347C);
	create_insn	(x=0X3347F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33485);
	op_hex		(x,	1);
	create_insn	(x=0X3348C);
	op_stkvar	(x,	1);
	create_insn	(0X334A1);
	create_insn	(x=0X334A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X334AA);
	op_hex		(x,	1);
	create_insn	(x=0X334B1);
	op_stkvar	(x,	1);
	create_insn	(0X334C6);
	create_insn	(x=0X334C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X334CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X334D2);
	op_hex		(x,	1);
	create_insn	(x=0X334D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X334E5);
	op_stkvar	(x,	0);
	create_insn	(0X334F3);
	create_insn	(x=0X334F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X334F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X334FF);
	op_hex		(x,	1);
	create_insn	(x=0X33506);
	op_stkvar	(x,	1);
	create_insn	(x=0X33512);
	op_stkvar	(x,	0);
	create_insn	(0X33520);
	create_insn	(x=0X33523);
	op_stkvar	(x,	1);
	create_insn	(x=0X33526);
	op_stkvar	(x,	1);
	create_insn	(x=0X33529);
	op_stkvar	(x,	1);
	create_insn	(x=0X3352C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3352F);
	op_hex		(x,	1);
	create_insn	(x=0X3353D);
	op_stkvar	(x,	0);
	create_insn	(x=0X33540);
	op_stkvar	(x,	0);
	create_insn	(0X3354C);
	create_insn	(x=0X3354F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33552);
	op_stkvar	(x,	1);
	create_insn	(x=0X33555);
	op_stkvar	(x,	1);
	create_insn	(x=0X33558);
	op_stkvar	(x,	1);
	create_insn	(x=0X3355B);
	op_hex		(x,	1);
	create_insn	(x=0X33569);
	op_stkvar	(x,	0);
	create_insn	(x=0X3356C);
	op_stkvar	(x,	0);
	create_insn	(0X33578);
	set_name	(0X33578,	"sprite_1_unk2");
	create_insn	(x=0X33584);
	op_stkvar	(x,	1);
	create_insn	(x=0X33589);
	op_stkvar	(x,	0);
	create_insn	(x=0X3358C);
	op_stkvar	(x,	0);
	create_insn	(x=0X33591);
	op_stkvar	(x,	1);
	create_insn	(x=0X33594);
	op_stkvar	(x,	1);
	create_insn	(x=0X3359E);
	op_stkvar	(x,	0);
	create_insn	(x=0X335A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X335AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X335B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X335B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X335BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X335C7);
	op_stkvar	(x,	0);
	create_byte	(0X335CE);
	create_insn	(0X335CF);
	create_insn	(0X335D2);
	set_name	(0X335D2,	"sprite_1_unk");
	create_insn	(x=0X335D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X335DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X335E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X335EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X335F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X335F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X335F7);
	op_hex		(x,	1);
	create_insn	(x=0X33601);
	op_stkvar	(x,	1);
	create_insn	(x=0X33609);
	op_stkvar	(x,	1);
	create_insn	(x=0X3360C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3360F);
	op_hex		(x,	1);
	create_insn	(x=0X33611);
	op_stkvar	(x,	0);
	create_insn	(x=0X33618);
	op_stkvar	(x,	1);
	create_insn	(0X33626);
	create_insn	(x=0X3362B);
	op_stkvar	(x,	1);
	create_insn	(0X3363A);
	create_byte	(0X33646);
	create_byte	(0X33652);
	create_byte	(0X33656);
	create_insn	(0X3365A);
	create_insn	(x=0X3365D);
	op_hex		(x,	1);
	create_insn	(0X3367A);
	set_name	(0X3367A,	"sprite_1_unk3");
	create_insn	(x=0X3367D);
	op_hex		(x,	1);
	create_insn	(x=0X33683);
	op_stkvar	(x,	1);
	create_insn	(x=0X33686);
	op_stkvar	(x,	1);
	create_insn	(x=0X33691);
	op_stkvar	(x,	0);
	create_insn	(x=0X33697);
	op_hex		(x,	1);
	create_insn	(x=0X3369E);
	op_stkvar	(x,	0);
	create_insn	(x=0X336A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X336AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X336B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X336BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X336BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X336C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X336C5);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X336CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X336D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X336D4);
	op_hex		(x,	1);
	create_insn	(x=0X336D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X336D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X336DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X336DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X336E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X336E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X336E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X336EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X336F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X336F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X336F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X336FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X33701);
	op_hex		(x,	1);
	create_insn	(x=0X33704);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X33716);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X33724);
	op_stkvar	(x,	0);
	create_insn	(x=0X33727);
	op_stkvar	(x,	0);
	create_insn	(x=0X3372B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3372E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33733);
	op_stkvar	(x,	0);
	create_insn	(x=0X33736);
	op_stkvar	(x,	0);
	create_insn	(0X33742);
	set_name	(0X33742,	"font_draw_text");
	create_insn	(x=0X33745);
	op_hex		(x,	1);
	create_insn	(x=0X3374F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33752);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X33755);
	op_stkvar	(x,	1);
	create_insn	(x=0X33758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3375E);
	create_insn	(x=0X33761);
	op_hex		(x,	1);
	create_insn	(x=0X3376C);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X33771);
	op_stkvar	(x,	1);
	create_insn	(x=0X3377E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33783);
	op_hex		(x,	1);
	create_insn	(0X337A6);
	create_insn	(0X337AD);
	create_insn	(x=0X337B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X337C5);
	op_hex		(x,	1);
	create_insn	(x=0X337C7);
	op_hex		(x,	1);
	create_insn	(x=0X337C9);
	op_hex		(x,	1);
	create_insn	(x=0X337D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X337E0);
	op_hex		(x,	1);
	create_insn	(x=0X337EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X337F6);
	op_hex		(x,	1);
	create_insn	(x=0X33807);
	op_stkvar	(x,	0);
	create_insn	(0X33816);
	set_name	(0X33816,	"video_set_mode_13h");
	create_insn	(x=0X33824);
	op_hex		(x,	1);
	create_insn	(x=0X33827);
	op_hex		(x,	1);
	set_cmt	(0X33833,	"- VIDEO - SET COLOR PALETTE\nBH = 00h, BL = border color\nBH = 01h, BL = palette (0-3)",	0);
	create_insn	(x=0X33833);
	op_hex		(x,	0);
	set_cmt	(0X33839,	"- VIDEO - SET VIDEO MODE\nAL = mode",	0);
	create_insn	(x=0X33839);
	op_hex		(x,	0);
	create_insn	(x=0X33844);
	op_hex		(x,	1);
	create_insn	(0X33848);
	set_name	(0X33848,	"file_load_shape2d_res_fatal_thunk");
	create_insn	(0X3384D);
	set_name	(0X3384D,	"file_load_shape2d_res_nofatal_thunk");
	create_insn	(0X33852);
	set_name	(0X33852,	"file_load_shape2d_res_thunk");
	create_insn	(0X33857);
	set_name	(0X33857,	"parse_shape2d_thunk");
	create_insn	(0X3385C);
	set_name	(0X3385C,	"file_load_shape2d_fatal_thunk");
	create_insn	(0X33861);
	set_name	(0X33861,	"file_load_shape2d_nofatal_thunk");
	create_insn	(0X33866);
	set_name	(0X33866,	"file_load_shape2d_thunk");
	create_insn	(0X3386C);
	set_name	(0X3386C,	"sprite_putimage_and_alt2");
	create_insn	(x=0X3386F);
	op_hex		(x,	1);
	create_insn	(x=0X33875);
	op_stkvar	(x,	1);
	create_insn	(x=0X33878);
	op_stkvar	(x,	1);
	create_insn	(x=0X3387B);
	op_stkvar	(x,	1);
	create_insn	(x=0X33881);
	op_stkvar	(x,	0);
	create_insn	(x=0X33884);
	op_stkvar	(x,	1);
	create_insn	(x=0X3388A);
	op_stkvar	(x,	0);
	create_insn	(0X33890);
	set_name	(0X33890,	"sprite_putimage_and");
	create_insn	(x=0X33893);
	op_hex		(x,	1);
	create_insn	(x=0X33899);
	op_stkvar	(x,	1);
	create_insn	(x=0X3389C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3389F);
	op_stkvar	(x,	1);
	create_insn	(x=0X338A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X338A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X338A8);
	op_stkvar	(x,	0);
	create_insn	(0X338AE);
	create_insn	(x=0X338B1);
	op_hex		(x,	1);
	create_insn	(x=0X338B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X338BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X338C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X338C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X338C9);
	op_stkvar	(x,	1);
	create_insn	(0X338EF);
	create_insn	(x=0X338FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X33902);
	op_stkvar	(x,	1);
	create_insn	(x=0X33916);
	op_stkvar	(x,	0);
	create_insn	(x=0X33919);
	op_stkvar	(x,	0);
	create_insn	(x=0X3391C);
	op_stkvar	(x,	0);
	create_insn	(x=0X33923);
	op_stkvar	(x,	1);
	create_byte	(0X33940);
	create_insn	(0X33941);
	create_insn	(x=0X33950);
	op_stkvar	(x,	0);
	create_insn	(x=0X3396C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3396F);
	op_stkvar	(x,	0);
	create_insn	(x=0X33972);
	op_stkvar	(x,	0);
	create_insn	(x=0X3397B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3397E);
	op_hex		(x,	1);
	create_insn	(x=0X33988);
	op_stkvar	(x,	1);
	create_insn	(x=0X3398B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3398E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33996);
	op_stkvar	(x,	1);
	create_insn	(x=0X33999);
	op_stkvar	(x,	0);
	create_insn	(x=0X3399F);
	op_stkvar	(x,	1);
	create_insn	(x=0X339A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X339B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X339B7);
	op_hex		(x,	1);
	create_insn	(x=0X339B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X339C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X339D8);
	op_stkvar	(x,	1);
	create_insn	(0X339EB);
	create_insn	(0X339FA);
	set_name	(0X339FA,	"nopsub_339FA");
	create_insn	(x=0X339FD);
	op_hex		(x,	1);
	create_insn	(x=0X33A03);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A09);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X33A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A18);
	op_stkvar	(x,	0);
	create_insn	(0X33A1E);
	set_name	(0X33A1E,	"putpixel_iconMask");
	create_insn	(x=0X33A21);
	op_hex		(x,	1);
	create_insn	(x=0X33A27);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A30);
	op_stkvar	(x,	0);
	create_insn	(x=0X33A33);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A36);
	op_stkvar	(x,	0);
	create_insn	(0X33A3C);
	create_insn	(x=0X33A3F);
	op_hex		(x,	1);
	create_insn	(x=0X33A45);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33A54);
	op_stkvar	(x,	0);
	create_insn	(x=0X33A57);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A5A);
	op_hex		(x,	1);
	create_insn	(x=0X33A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X33A7C);
	op_hex		(x,	1);
	create_insn	(x=0X33A7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AA1);
	op_stkvar	(x,	1);
	create_insn	(0X33AB3);
	create_insn	(0X33AC0);
	set_name	(0X33AC0,	"nopsub_33AC0");
	create_insn	(x=0X33AC3);
	op_hex		(x,	1);
	create_insn	(x=0X33AC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X33ACF);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X33AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X33ADE);
	op_stkvar	(x,	0);
	create_insn	(0X33AE4);
	set_name	(0X33AE4,	"nopsub_33AE4");
	create_insn	(x=0X33AE7);
	op_hex		(x,	1);
	create_insn	(x=0X33AED);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X33AF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33AFC);
	op_stkvar	(x,	0);
	create_insn	(0X33B02);
	set_name	(0X33B02,	"shape2d_render_bmp_as_mask");
	create_insn	(x=0X33B05);
	op_hex		(x,	1);
	create_insn	(x=0X33B0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B11);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33B14);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B17);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33B1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B1E);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33B21);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B24);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33B26);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B29);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B2C);
	op_hex		(x,	1);
	create_insn	(x=0X33B33);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B39);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B42);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B45);
	op_stkvar	(x,	1);
	create_insn	(0X33B56);
	create_insn	(x=0X33B62);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B6F);
	op_stkvar	(x,	1);
	create_insn	(0X33B76);
	create_insn	(x=0X33B84);
	op_stkvar	(x,	0);
	create_insn	(x=0X33B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33B91);
	op_stkvar	(x,	1);
	create_insn	(0X33B98);
	set_name	(0X33B98,	"nopsub_33B98");
	create_insn	(x=0X33B9B);
	op_hex		(x,	1);
	create_insn	(x=0X33BA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X33BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BB6);
	op_stkvar	(x,	0);
	create_insn	(0X33BBC);
	set_name	(0X33BBC,	"sprite_putimage_and_alt");
	create_insn	(x=0X33BBF);
	op_hex		(x,	1);
	create_insn	(x=0X33BC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X33BD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BD4);
	op_stkvar	(x,	0);
	create_insn	(0X33BDA);
	set_name	(0X33BDA,	"sprite_putimage");
	create_insn	(x=0X33BDD);
	op_hex		(x,	1);
	create_insn	(x=0X33BE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BE9);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33BEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X33BEF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33BF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X33BF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X33BF8);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33BFB);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(0X33C1B);
	create_insn	(x=0X33C29);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C2C);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X33C42);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C45);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C48);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C4B);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33C4F);
	op_stkvar	(x,	1);
	create_byte	(0X33C6C);
	create_insn	(0X33C6D);
	create_insn	(x=0X33C7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C98);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X33C9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X33CA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CAA);
	op_hex		(x,	1);
	create_insn	(x=0X33CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X33CCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CDE);
	op_hex		(x,	1);
	create_insn	(x=0X33CE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X33CE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33CF5);
	op_stkvar	(x,	1);
	create_insn	(0X33D02);
	create_insn	(0X33D0C);
	set_name	(0X33D0C,	"nopsub_33D0C");
	create_insn	(x=0X33D0F);
	op_hex		(x,	1);
	create_insn	(x=0X33D15);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D21);
	op_stkvar	(x,	0);
	create_insn	(x=0X33D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D2A);
	op_stkvar	(x,	0);
	create_insn	(0X33D30);
	set_name	(0X33D30,	"sprite_shape_to_1");
	create_insn	(x=0X33D33);
	op_hex		(x,	1);
	create_insn	(x=0X33D39);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D42);
	op_stkvar	(x,	0);
	create_insn	(x=0X33D45);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D48);
	op_stkvar	(x,	0);
	create_insn	(0X33D4E);
	set_name	(0X33D4E,	"sprite_shape_to_1_alt");
	create_insn	(x=0X33D51);
	op_hex		(x,	1);
	create_insn	(x=0X33D57);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D60);
	op_stkvar	(x,	0);
	create_insn	(x=0X33D66);
	op_stkvar	(x,	0);
	create_insn	(x=0X33D69);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D6C);
	op_hex		(x,	1);
	create_insn	(x=0X33D76);
	op_stkvar	(x,	1);
	create_insn	(x=0X33D8E);
	op_hex		(x,	1);
	create_insn	(x=0X33D90);
	op_stkvar	(x,	0);
	create_insn	(x=0X33D97);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DA9);
	op_stkvar	(x,	1);
	create_insn	(0X33DB5);
	create_insn	(0X33DBE);
	set_name	(0X33DBE,	"nopsub_33DBE");
	create_insn	(x=0X33DC1);
	op_hex		(x,	1);
	create_insn	(x=0X33DC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X33DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DDC);
	op_stkvar	(x,	0);
	create_insn	(0X33DE2);
	set_name	(0X33DE2,	"shape2d_op_unk5");
	create_insn	(x=0X33DE5);
	op_hex		(x,	1);
	create_insn	(x=0X33DEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X33DF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X33DFA);
	op_stkvar	(x,	0);
	set_cmt	(0X33DFD,	"goto shape2d_op_unk3",	0);
	create_insn	(0X33E00);
	set_name	(0X33E00,	"shape2d_op_unk");
	create_insn	(x=0X33E03);
	op_hex		(x,	1);
	create_insn	(x=0X33E09);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E0F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33E12);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E15);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33E18);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E1C);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33E1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E24);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E27);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E2A);
	op_hex		(x,	1);
	create_insn	(x=0X33E31);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E37);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E43);
	op_stkvar	(x,	1);
	create_insn	(0X33E54);
	create_insn	(x=0X33E5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E61);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E67);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E6A);
	op_stkvar	(x,	1);
	create_insn	(0X33E71);
	create_insn	(x=0X33E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X33E7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E85);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E88);
	op_stkvar	(x,	1);
	create_insn	(0X33E90);
	set_name	(0X33E90,	"nopsub_33E90");
	create_insn	(x=0X33E93);
	op_hex		(x,	1);
	create_insn	(x=0X33E99);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X33E9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EAE);
	op_stkvar	(x,	0);
	create_insn	(0X33EB4);
	set_name	(0X33EB4,	"shape2d_op_unk2");
	create_insn	(x=0X33EB7);
	op_hex		(x,	1);
	create_insn	(x=0X33EBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33ECC);
	op_stkvar	(x,	0);
	set_cmt	(0X33ECF,	"goto somewhere inside shape2d_op_unk3",	0);
	create_insn	(0X33ED2);
	set_name	(0X33ED2,	"shape2d_op_unk3");
	create_insn	(x=0X33ED5);
	op_hex		(x,	1);
	create_insn	(x=0X33EDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X33EE1);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33EE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EE7);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33EEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EEE);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X33EF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X33EFD);
	op_stkvar	(x,	1);
	create_insn	(0X33F21);
	create_insn	(x=0X33F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X33F44);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F47);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X33F54);
	op_stkvar	(x,	1);
	create_byte	(0X33F70);
	create_insn	(0X33F71);
	create_insn	(x=0X33F81);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F97);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X33F9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X33FA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FAC);
	op_hex		(x,	1);
	create_insn	(x=0X33FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X33FB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FCC);
	op_stkvar	(x,	1);
	create_insn	(0X33FDD);
	create_insn	(x=0X33FEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X33FEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X33FF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X33FFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X34006);
	op_stkvar	(x,	1);
	create_insn	(0X3400B);
	create_insn	(x=0X34019);
	op_stkvar	(x,	0);
	create_insn	(x=0X3401E);
	op_stkvar	(x,	0);
	create_insn	(x=0X34022);
	op_stkvar	(x,	1);
	create_insn	(x=0X34028);
	op_stkvar	(x,	1);
	create_insn	(x=0X3402C);
	op_stkvar	(x,	1);
	create_insn	(x=0X34037);
	op_stkvar	(x,	1);
	create_insn	(0X3403C);
	create_insn	(0X34050);
	create_insn	(0X34057);
	create_insn	(0X34060);
	set_name	(0X34060,	"sprite_putimage_or_alt");
	create_insn	(x=0X34063);
	op_hex		(x,	1);
	create_insn	(x=0X34069);
	op_stkvar	(x,	1);
	create_insn	(x=0X3406C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3406F);
	op_stkvar	(x,	1);
	create_insn	(x=0X34075);
	op_stkvar	(x,	0);
	create_insn	(x=0X34078);
	op_stkvar	(x,	1);
	create_insn	(x=0X3407E);
	op_stkvar	(x,	0);
	set_cmt	(0X34081,	"goto sprite_putimage_or",	0);
	create_insn	(0X34084);
	set_name	(0X34084,	"sprite_putimage_or");
	create_insn	(x=0X34087);
	op_hex		(x,	1);
	create_insn	(x=0X3408D);
	op_stkvar	(x,	1);
	create_insn	(x=0X34090);
	op_stkvar	(x,	1);
	create_insn	(x=0X34093);
	op_stkvar	(x,	1);
	create_insn	(x=0X34096);
	op_stkvar	(x,	0);
	create_insn	(x=0X34099);
	op_stkvar	(x,	1);
	create_insn	(x=0X3409C);
	op_stkvar	(x,	0);
	create_insn	(0X340A2);
	create_insn	(x=0X340A5);
	op_hex		(x,	1);
	create_insn	(x=0X340AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X340AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X340B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X340BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X340BD);
	op_stkvar	(x,	1);
	create_insn	(0X340E3);
	create_insn	(x=0X340F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X340F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3410A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3410D);
	op_stkvar	(x,	0);
	create_insn	(x=0X34110);
	op_stkvar	(x,	0);
	create_insn	(x=0X34117);
	op_stkvar	(x,	1);
	create_byte	(0X34134);
	create_insn	(0X34135);
	create_insn	(x=0X34144);
	op_stkvar	(x,	0);
	create_insn	(x=0X34160);
	op_stkvar	(x,	0);
	create_insn	(x=0X34163);
	op_stkvar	(x,	0);
	create_insn	(x=0X34166);
	op_stkvar	(x,	0);
	create_insn	(x=0X3416F);
	op_stkvar	(x,	1);
	create_insn	(x=0X34172);
	op_hex		(x,	1);
	create_insn	(x=0X3417C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3417F);
	op_stkvar	(x,	1);
	create_insn	(x=0X34182);
	op_stkvar	(x,	1);
	create_insn	(x=0X3418A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3418D);
	op_stkvar	(x,	0);
	create_insn	(x=0X34193);
	op_stkvar	(x,	1);
	create_insn	(x=0X3419D);
	op_stkvar	(x,	1);
	create_insn	(x=0X341A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X341AB);
	op_hex		(x,	1);
	create_insn	(x=0X341AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X341B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X341CC);
	op_stkvar	(x,	1);
	create_insn	(0X341DF);
	create_insn	(0X341EE);
	create_insn	(x=0X341F1);
	op_hex		(x,	1);
	create_insn	(0X34212);
	set_name	(0X34212,	"putpixel_iconFillings");
	create_insn	(x=0X34215);
	op_hex		(x,	1);
	create_insn	(x=0X3421B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3421E);
	op_stkvar	(x,	1);
	create_insn	(x=0X34221);
	op_stkvar	(x,	1);
	create_insn	(x=0X34224);
	op_stkvar	(x,	0);
	create_insn	(x=0X34227);
	op_stkvar	(x,	1);
	create_insn	(x=0X3422A);
	op_stkvar	(x,	0);
	create_insn	(0X34230);
	create_insn	(x=0X34233);
	op_hex		(x,	1);
	create_insn	(x=0X34239);
	op_stkvar	(x,	1);
	create_insn	(x=0X3423C);
	op_stkvar	(x,	1);
	create_insn	(x=0X34242);
	op_stkvar	(x,	0);
	create_insn	(x=0X34248);
	op_stkvar	(x,	0);
	create_insn	(x=0X3424B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3424E);
	op_hex		(x,	1);
	create_insn	(x=0X34258);
	op_stkvar	(x,	1);
	create_insn	(x=0X34270);
	op_hex		(x,	1);
	create_insn	(x=0X34272);
	op_stkvar	(x,	0);
	create_insn	(x=0X3427A);
	op_stkvar	(x,	1);
	create_insn	(x=0X34295);
	op_stkvar	(x,	1);
	create_insn	(0X342A7);
	create_insn	(0X342B4);
	create_insn	(x=0X342B7);
	op_hex		(x,	1);
	create_insn	(0X342D8);
	create_insn	(x=0X342DB);
	op_hex		(x,	1);
	create_insn	(0X342F6);
	set_name	(0X342F6,	"shape2d_op_unk4");
	create_insn	(x=0X342F9);
	op_hex		(x,	1);
	create_insn	(x=0X342FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X34302);
	op_stkvar	(x,	1);
	create_insn	(x=0X34305);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34308);
	op_stkvar	(x,	0);
	create_insn	(x=0X3430B);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3430E);
	op_stkvar	(x,	0);
	create_insn	(x=0X34312);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34315);
	op_stkvar	(x,	0);
	create_insn	(x=0X3431A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3431D);
	op_stkvar	(x,	1);
	create_insn	(x=0X34320);
	op_hex		(x,	1);
	create_insn	(x=0X34327);
	op_stkvar	(x,	0);
	create_insn	(x=0X3432D);
	op_stkvar	(x,	1);
	create_insn	(x=0X34336);
	op_stkvar	(x,	1);
	create_insn	(x=0X34339);
	op_stkvar	(x,	1);
	create_insn	(0X3434A);
	create_insn	(x=0X34356);
	op_stkvar	(x,	0);
	create_insn	(x=0X3435A);
	op_stkvar	(x,	1);
	create_insn	(x=0X34360);
	op_stkvar	(x,	1);
	create_insn	(x=0X34363);
	op_stkvar	(x,	1);
	create_insn	(0X3436A);
	create_insn	(x=0X34378);
	op_stkvar	(x,	0);
	create_insn	(x=0X3437C);
	op_stkvar	(x,	1);
	create_insn	(x=0X34382);
	op_stkvar	(x,	1);
	create_insn	(x=0X34385);
	op_stkvar	(x,	1);
	create_insn	(0X3438C);
	create_insn	(x=0X3438F);
	op_hex		(x,	1);
	create_insn	(0X343B0);
	set_name	(0X343B0,	"sprite_putimage_transparent");
	create_insn	(x=0X343B3);
	op_hex		(x,	1);
	create_insn	(x=0X343B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X343BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X343BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X343C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X343C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X343C8);
	op_stkvar	(x,	0);
	create_insn	(0X343CE);
	create_insn	(x=0X343D1);
	op_hex		(x,	1);
	create_insn	(x=0X343D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X343DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X343DD);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X343E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X343E3);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X343E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X343E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X343EC);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X343EF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(0X3440F);
	create_insn	(x=0X3441D);
	op_stkvar	(x,	0);
	create_insn	(x=0X34420);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34422);
	op_stkvar	(x,	1);
	create_insn	(x=0X34436);
	op_stkvar	(x,	0);
	create_insn	(x=0X34439);
	op_stkvar	(x,	0);
	create_insn	(x=0X3443C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3443F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34443);
	op_stkvar	(x,	1);
	create_byte	(0X34460);
	create_insn	(0X34461);
	create_insn	(x=0X34470);
	op_stkvar	(x,	0);
	create_insn	(x=0X3448C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3448F);
	op_stkvar	(x,	0);
	create_insn	(x=0X34492);
	op_stkvar	(x,	0);
	create_insn	(x=0X3449B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3449E);
	op_hex		(x,	1);
	create_insn	(x=0X344A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X344AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X344B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X344BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X344C0);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_byte	(0X344CE);
	create_insn	(0X344CF);
	create_insn	(x=0X344D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X344D7);
	op_stkvar	(x,	0);
	create_insn	(0X344E4);
	create_insn	(x=0X344E7);
	op_hex		(x,	1);
	create_insn	(0X34508);
	create_insn	(x=0X3450B);
	op_hex		(x,	1);
	create_insn	(0X34526);
	create_insn	(x=0X34529);
	op_hex		(x,	1);
	create_insn	(x=0X3452F);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_8(void) {
        auto x;
#define id x

	create_insn	(x=0X34532);
	op_stkvar	(x,	1);
	create_insn	(x=0X34538);
	op_stkvar	(x,	0);
	create_insn	(x=0X3453E);
	op_stkvar	(x,	0);
	create_insn	(x=0X34541);
	op_stkvar	(x,	1);
	create_insn	(x=0X34544);
	op_hex		(x,	1);
	create_insn	(x=0X3454E);
	op_stkvar	(x,	1);
	create_insn	(x=0X34558);
	op_stkvar	(x,	0);
	create_insn	(x=0X34560);
	op_stkvar	(x,	0);
	create_insn	(x=0X3456E);
	op_stkvar	(x,	1);
	create_insn	(x=0X34574);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_byte	(0X34582);
	create_insn	(0X34583);
	create_insn	(x=0X34588);
	op_stkvar	(x,	0);
	create_insn	(0X34594);
	create_insn	(x=0X34597);
	op_hex		(x,	1);
	create_insn	(0X345BC);
	create_insn	(x=0X345BF);
	op_hex		(x,	1);
	set_cmt	(0X345C5,	"ds = seg039",	0);
	create_insn	(x=0X345C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X345CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X345CF);
	op_stkvar	(x,	1);
	create_insn	(0X345D8);
	create_insn	(x=0X345DB);
	op_hex		(x,	1);
	create_insn	(x=0X345EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X345F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X345FC);
	op_hex		(x,	1);
	create_insn	(0X3461F);
	create_insn	(0X34626);
	create_insn	(x=0X34629);
	op_stkvar	(x,	0);
	create_insn	(x=0X3463E);
	op_hex		(x,	1);
	create_insn	(x=0X34640);
	op_hex		(x,	1);
	create_insn	(x=0X34642);
	op_hex		(x,	1);
	create_insn	(x=0X34652);
	op_stkvar	(x,	0);
	create_insn	(x=0X34659);
	op_hex		(x,	1);
	create_insn	(x=0X34663);
	op_stkvar	(x,	1);
	create_insn	(x=0X3466F);
	op_hex		(x,	1);
	create_insn	(x=0X3467D);
	op_stkvar	(x,	0);
	create_insn	(0X3468C);
	create_insn	(0X3469A);
	create_byte	(0X346A2);
	create_insn	(0X346A3);
	set_name	(0X346A3,	"video_set_palette");
	create_insn	(x=0X346AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X346AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X346B0);
	op_stkvar	(x,	1);
	set_cmt	(0X346B7,	"- VIDEO - SET BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)\nBX = starting color register, CX = number of registers to set\nES:DX -> table of 3*CX bytes where each 3 byte group represents one\nbyte each of red, green and blue (0-63)",	0);
	create_insn	(x=0X346B7);
	op_hex		(x,	0);
	update_extra_cmt		(0X346BC,	E_PREV + 0,	"draws multiple sequential variable length horizontal lines + various optimizations");
	create_insn	(0X346BC);
	set_name	(0X346BC,	"draw_filled_lines");
	create_insn	(x=0X346BF);
	op_hex		(x,	1);
	create_insn	(x=0X346C4);
	op_stkvar	(x,	0);
	set_cmt	(0X346C8,	"if arg6 == 0, return",	0);
	create_insn	(x=0X346CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X346CE);
	op_hex		(x,	1);
	create_insn	(x=0X346DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X346E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X346E5);
	op_stkvar	(x,	1);
	set_cmt	(0X346EF,	"si = offset in lineofs table, di = y offset in bitmapptr",	0);
	create_insn	(x=0X346F4);
	op_hex		(x,	1);
	set_cmt	(0X346F8,	"jump if (cx & 0xFFF8), ie jump if cx >= 8.\n",	0);
	set_cmt	(0X346FA,	"rep count = cx = (arg2->member0 - arg0->member0) + 1\nfill value = al = arg8\nstosb target es:di = sprite1.bitmapptr[lineofs[arg4]]\n",	0);
	create_insn	(x=0X346FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X34700);
	op_stkvar	(x,	0);
	create_insn	(x=0X34707);
	op_stkvar	(x,	0);
	set_cmt	(0X34712,	"looks like its figuring out which alignment optimizations to use",	0);
	create_insn	(x=0X34712);
	op_hex		(x,	1);
	create_insn	(x=0X34718);
	op_hex		(x,	1);
	create_insn	(0X34720);
	create_insn	(x=0X34725);
	op_hex		(x,	1);
	create_insn	(0X34730);
	create_insn	(0X34736);
	set_name	(0X34736,	"nopsub_34736");
	create_insn	(x=0X34739);
	op_hex		(x,	1);
	create_insn	(x=0X3473F);
	op_stkvar	(x,	1);
	create_insn	(x=0X34742);
	op_stkvar	(x,	1);
	create_insn	(x=0X34745);
	op_stkvar	(x,	1);
	create_insn	(x=0X3474B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3474E);
	op_stkvar	(x,	1);
	create_insn	(x=0X34754);
	op_stkvar	(x,	0);
	create_insn	(0X3475A);
	set_name	(0X3475A,	"sprite_clear_shape_alt");
	create_insn	(x=0X3475D);
	op_hex		(x,	1);
	create_insn	(x=0X34763);
	op_stkvar	(x,	1);
	create_insn	(x=0X34766);
	op_stkvar	(x,	1);
	create_insn	(x=0X34769);
	op_stkvar	(x,	1);
	create_insn	(x=0X3476C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3476F);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34772);
	op_stkvar	(x,	1);
	create_insn	(x=0X34775);
	op_stkvar	(x,	0);
	create_insn	(x=0X34778);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(0X3477E);
	set_name	(0X3477E,	"sprite_clear_shape");
	create_insn	(x=0X34781);
	op_hex		(x,	1);
	create_insn	(x=0X34787);
	op_stkvar	(x,	1);
	create_insn	(x=0X3478A);
	op_stkvar	(x,	1);
	create_insn	(x=0X34790);
	op_stkvar	(x,	0);
	create_insn	(x=0X34796);
	op_stkvar	(x,	0);
	create_insn	(x=0X3479B);
	op_stkvar	(x,	0);
	create_insn	(x=0X347A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X347A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X347A7);
	op_hex		(x,	1);
	create_insn	(x=0X347AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X347B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X347BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X347C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X347C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X347C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X347CE);
	op_stkvar	(x,	0);
	create_insn	(0X347DC);
	set_name	(0X347DC,	"shape_op_explosion");
	create_insn	(x=0X347DF);
	op_hex		(x,	1);
	create_insn	(x=0X347E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X347E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X347EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X347EE);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X347F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X347F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X347FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X347FE);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34801);
	op_stkvar	(x,	1);
	create_insn	(x=0X34808);
	op_stkvar	(x,	0);
	create_insn	(0X3480E);
	create_insn	(x=0X34811);
	op_hex		(x,	1);
	create_insn	(x=0X34817);
	op_stkvar	(x,	1);
	create_insn	(x=0X3481A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3481D);
	op_stkvar	(x,	1);
	create_insn	(x=0X34820);
	op_stkvar	(x,	0);
	create_insn	(x=0X34823);
	op_stkvar	(x,	1);
	create_insn	(x=0X34826);
	op_stkvar	(x,	0);
	create_insn	(0X3482C);
	create_insn	(0X34833);
	create_insn	(x=0X34836);
	op_hex		(x,	1);
	create_insn	(x=0X3483C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3483F);
	op_stkvar	(x,	1);
	create_insn	(x=0X34842);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34845);
	op_stkvar	(x,	0);
	create_insn	(x=0X34848);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3484B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3484E);
	op_stkvar	(x,	0);
	create_insn	(x=0X34855);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34858);
	op_stkvar	(x,	1);
	create_insn	(x=0X34863);
	op_stkvar	(x,	0);
	create_insn	(x=0X34866);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34868);
	op_stkvar	(x,	0);
	create_insn	(x=0X3486B);
	op_stkvar	(x,	1);
	create_insn	(x=0X34876);
	op_stkvar	(x,	0);
	create_insn	(x=0X34880);
	op_stkvar	(x,	0);
	create_insn	(x=0X3488B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3488E);
	op_stkvar	(x,	0);
	create_insn	(x=0X34891);
	op_stkvar	(x,	1);
	create_insn	(x=0X34894);
	op_stkvar	(x,	0);
	create_insn	(x=0X3489B);
	op_hex		(x,	1);
	create_insn	(x=0X348A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X348A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X348AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X348BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X348C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X348C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X348CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X348E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X348EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X348EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X348F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X34904);
	op_stkvar	(x,	0);
	create_insn	(x=0X34907);
	op_stkvar	(x,	0);
	create_insn	(x=0X3490D);
	op_stkvar	(x,	1);
	create_insn	(x=0X34914);
	op_stkvar	(x,	0);
	create_insn	(x=0X34919);
	op_stkvar	(x,	1);
	create_insn	(x=0X3492D);
	op_stkvar	(x,	0);
	create_insn	(x=0X34930);
	op_stkvar	(x,	1);
	create_insn	(x=0X34933);
	op_stkvar	(x,	0);
	create_insn	(0X34939);
	MakeStruct	(0X34940,	"SPRITE");
	set_name	(0X34940,	"sprite1");
	MakeStruct	(0X3495E,	"SPRITE");
	set_name	(0X3495E,	"sprite2");
	create_word	(0X3497C);
	make_array	(0X3497C,	0XC8);
	set_name	(0X3497C,	"lineoffsets");
	create_insn	(0X34B0C);
	set_name	(0X34B0C,	"font_set_unk");
	create_insn	(x=0X34B13);
	op_stkvar	(x,	1);
	create_insn	(x=0X34B1C);
	op_stkvar	(x,	1);
	create_insn	(0X34B27);
	create_insn	(0X34B3E);
	create_insn	(0X34B60);
	create_insn	(0X34B7C);
	set_name	(0X34B7C,	"set_fontdefseg");
	create_insn	(x=0X34B7F);
	op_stkvar	(x,	1);
	create_insn	(0X34B88);
	create_insn	(0X34B96);
	set_name	(0X34B96,	"draw_patterned_lines");
	create_insn	(x=0X34B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X34B9F);
	op_hex		(x,	1);
	create_insn	(x=0X34BAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X34BB0);
	op_hex		(x,	1);
	create_insn	(x=0X34BBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X34BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X34BC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X34BD0);
	op_hex		(x,	1);
	create_insn	(x=0X34BE1);
	op_hex		(x,	1);
	create_insn	(x=0X34BE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X34BEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X34BFD);
	op_stkvar	(x,	0);
	create_insn	(0X34C06);
	create_insn	(0X34C0C);
	set_name	(0X34C0C,	"sprite_make_wnd");
	create_insn	(x=0X34C0F);
	op_hex		(x,	1);
	create_insn	(x=0X34C15);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C18);
	op_stkvar	(x,	0);
	create_insn	(x=0X34C1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X34C2F);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X34C38);
	op_hex		(x,	1);
	create_insn	(x=0X34C3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X34C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C45);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34C47);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C4A);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34C4F);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34C52);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34C55);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34C58);
	op_stroff	(x,	0,	GetStrucIdByName("SHAPE2D"),	0);
	set_cmt	(0X34C5B,	"sizeof SPRITE (in words)",	0);
	set_cmt	(0X34C5E,	"height ??",	0);
	create_insn	(x=0X34C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C61);
	op_hex		(x,	1);
	create_insn	(x=0X34C68);
	op_stkvar	(x,	0);
	set_cmt	(0X34C6D,	"sprite_set_1 happens to be the end of the buffer.. see below this func",	0);
	create_insn	(x=0X34C6D);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X34C76);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C7E);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C82);
	op_stroff	(x,	1,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C85);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C89);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C8F);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C95);
	op_stkvar	(x,	1);
	create_insn	(x=0X34C98);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34C9C);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CA0);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X34CA9);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X34CB0);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CB4);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X34CBB);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X34CBE);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X34CC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X34CCC);
	op_stkvar	(x,	1);
	create_insn	(0X34CD6);
	create_insn	(x=0X34CDA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_word	(x=0X34CE4);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	set_name	(0X34CE4,	"next_wnd_def");
	create_byte	(0X34CE6);
	make_array	(0X34CE6,	0XE10);
	set_name	(0X34CE6,	"wnd_defs");
	create_insn	(0X35AF6);
	set_name	(0X35AF6,	"sprite_set_1_from_argptr");
	create_insn	(x=0X35AFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B0A);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X35B14);
	op_seg		(x,	1);
	set_name	(0X35B14,	"sprite_copy_2_to_1");
	create_insn	(x=0X35B18);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X35B21);
	op_hex		(x,	1);
	create_insn	(0X35B26);
	set_name	(0X35B26,	"putpixel_single_maybe");
	create_insn	(x=0X35B2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B3C);
	op_stkvar	(x,	1);
	create_insn	(0X35B51);
	create_insn	(x=0X35B56);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B59);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B5C);
	op_hex		(x,	1);
	create_insn	(x=0X35B6B);
	op_stkvar	(x,	1);
	create_insn	(0X35B76);
	create_insn	(x=0X35B82);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B87);
	op_stkvar	(x,	0);
	create_insn	(x=0X35B8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35B8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B92);
	op_stkvar	(x,	1);
	create_insn	(x=0X35B9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35BA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35BB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BC5);
	op_stkvar	(x,	0);
	create_byte	(0X35BCC);
	create_insn	(0X35BCD);
	create_insn	(0X35BD0);
	create_insn	(x=0X35BD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35BDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35BE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35BF5);
	op_hex		(x,	1);
	create_insn	(x=0X35BFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C07);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C0D);
	op_hex		(x,	1);
	create_insn	(x=0X35C0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35C16);
	op_stkvar	(x,	1);
	create_insn	(0X35C29);
	create_insn	(x=0X35C2E);
	op_stkvar	(x,	1);
	create_insn	(0X35C42);
	create_insn	(0X35C4E);
	create_insn	(x=0X35C51);
	op_hex		(x,	1);
	create_insn	(x=0X35C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C67);
	op_stkvar	(x,	0);
	create_insn	(x=0X35C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C70);
	op_hex		(x,	1);
	create_insn	(x=0X35C79);
	op_stkvar	(x,	0);
	create_insn	(x=0X35C81);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C92);
	op_hex		(x,	1);
	create_insn	(x=0X35C96);
	op_stkvar	(x,	0);
	create_insn	(x=0X35C99);
	op_stkvar	(x,	0);
	create_insn	(x=0X35C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35C9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35CA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35CAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35CB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35CB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35CBA);
	op_stkvar	(x,	0);
	create_byte	(0X35CC8);
	make_array	(0X35CC8,	0X100);
	set_name	(0X35CC8,	"incnums");
	create_insn	(0X35DC8);
	create_insn	(x=0X35DCE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X35DD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35DDB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X35DE6);
	create_insn	(x=0X35DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35DEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35DF9);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X35DFD);
	op_stkvar	(x,	1);
	create_insn	(0X35E08);
	create_insn	(x=0X35E0B);
	op_hex		(x,	1);
	create_insn	(x=0X35E11);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E17);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E24);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E27);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E34);
	op_stkvar	(x,	0);
	create_insn	(0X35E3A);
	create_insn	(x=0X35E3D);
	op_hex		(x,	1);
	create_insn	(x=0X35E43);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E46);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E49);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E52);
	op_stkvar	(x,	0);
	create_insn	(0X35E58);
	create_insn	(0X35E5F);
	create_insn	(x=0X35E62);
	op_hex		(x,	1);
	create_insn	(x=0X35E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E71);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E77);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X35E8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E94);
	op_stkvar	(x,	0);
	create_insn	(x=0X35E97);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X35EAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35EB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X35EBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35EBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EC6);
	op_hex		(x,	1);
	create_insn	(x=0X35ECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35ED3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35ED6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35EDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EE2);
	op_hex		(x,	1);
	create_insn	(x=0X35EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F15);
	op_stkvar	(x,	0);
	create_insn	(x=0X35F1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F3B);
	op_stkvar	(x,	0);
	create_insn	(0X35F40);
	create_insn	(0X35F48);
	set_name	(0X35F48,	"file_load_shape2d_palmap_apply");
	create_insn	(x=0X35F4B);
	op_hex		(x,	1);
	create_insn	(x=0X35F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F53);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F56);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35F62);
	op_stkvar	(x,	0);
	create_insn	(x=0X35F65);
	op_stkvar	(x,	1);
	create_insn	(x=0X35F68);
	op_stkvar	(x,	1);
	create_insn	(0X35F73);
	create_insn	(x=0X35F74);
	op_stkvar	(x,	0);
	create_insn	(x=0X35F77);
	op_stkvar	(x,	0);
	create_insn	(x=0X35F7F);
	op_hex		(x,	1);
	create_insn	(x=0X35F86);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X35F89);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X35F8F);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X35F9C);
	op_stkvar	(x,	0);
	create_insn	(0X35FA2);
	set_name	(0X35FA2,	"file_load_shape2d_expand");
	create_insn	(x=0X35FA5);
	op_hex		(x,	1);
	create_insn	(x=0X35FAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35FB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35FBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35FBD);
	op_hex		(x,	1);
	create_insn	(x=0X35FCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35FCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35FD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35FDC);
	op_stkvar	(x,	1);
	create_insn	(0X35FE8);
	create_insn	(x=0X35FE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35FF8);
	op_hex		(x,	1);
	create_insn	(x=0X35FFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X36002);
	op_stkvar	(x,	0);
	create_insn	(x=0X36005);
	op_stkvar	(x,	1);
	create_insn	(x=0X36008);
	op_stkvar	(x,	1);
	create_insn	(x=0X36015);
	op_stkvar	(x,	0);
	create_insn	(x=0X3601D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36020);
	op_hex		(x,	1);
	create_insn	(x=0X36022);
	op_hex		(x,	1);
	create_insn	(x=0X36024);
	op_hex		(x,	1);
	create_insn	(x=0X36026);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3602D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36031);
	op_stkvar	(x,	1);
	create_insn	(x=0X36040);
	op_stkvar	(x,	1);
	create_insn	(x=0X36043);
	op_hex		(x,	1);
	create_insn	(x=0X36045);
	op_hex		(x,	1);
	create_insn	(x=0X36047);
	op_hex		(x,	1);
	create_insn	(x=0X36051);
	op_stkvar	(x,	1);
	create_insn	(x=0X3605B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3605E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36061);
	op_stkvar	(x,	0);
	create_insn	(x=0X3606D);
	op_hex		(x,	1);
	create_insn	(x=0X36074);
	op_stkvar	(x,	0);
	create_insn	(x=0X36077);
	op_stkvar	(x,	1);
	create_insn	(x=0X3607F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36082);
	op_stkvar	(x,	1);
	create_insn	(x=0X36087);
	op_hex		(x,	1);
	create_insn	(x=0X36089);
	op_hex		(x,	1);
	create_insn	(x=0X3608B);
	op_hex		(x,	1);
	create_insn	(x=0X36090);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X36093);
	op_hex		(x,	1);
	create_insn	(x=0X36095);
	op_hex		(x,	1);
	create_insn	(x=0X36097);
	op_hex		(x,	1);
	create_insn	(x=0X36099);
	op_hex		(x,	1);
	create_insn	(x=0X3609D);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X360A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X360AE);
	op_hex		(x,	1);
	create_insn	(x=0X360B0);
	op_hex		(x,	1);
	create_insn	(x=0X360B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X360BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X360BF);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X360C2);
	op_hex		(x,	1);
	create_insn	(x=0X360C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X360CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X360D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X360D7);
	op_hex		(x,	1);
	create_insn	(x=0X360E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X360E7);
	op_hex		(x,	1);
	create_insn	(x=0X360EF);
	op_stkvar	(x,	0);
	create_insn	(0X360F6);
	set_name	(0X360F6,	"file_unflip_shape2d_pes");
	create_insn	(x=0X360F9);
	op_hex		(x,	1);
	create_insn	(x=0X360FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X36104);
	op_stkvar	(x,	1);
	create_insn	(x=0X3610C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3610F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36114);
	op_stkvar	(x,	0);
	create_insn	(x=0X36117);
	op_stkvar	(x,	0);
	create_insn	(x=0X3611A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3611D);
	op_seg		(x,	1);
	create_insn	(x=0X36127);
	op_hex		(x,	1);
	create_insn	(x=0X3612A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3612D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36134);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X36137);
	op_hex		(x,	1);
	create_insn	(x=0X3613B);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3613E);
	op_hex		(x,	1);
	create_insn	(x=0X36140);
	op_hex		(x,	1);
	create_insn	(x=0X36142);
	op_hex		(x,	1);
	create_insn	(x=0X36144);
	op_hex		(x,	1);
	create_insn	(x=0X36146);
	op_hex		(x,	1);
	create_insn	(x=0X36149);
	op_stkvar	(x,	0);
	create_insn	(x=0X3614E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36151);
	op_stkvar	(x,	0);
	create_insn	(x=0X3615D);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3615F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36162);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X36165);
	op_stkvar	(x,	0);
	create_insn	(x=0X3616A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3616D);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X36170);
	op_stkvar	(x,	0);
	create_insn	(x=0X36173);
	op_stkvar	(x,	0);
	create_insn	(x=0X36177);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3617C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3617F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36182);
	op_stkvar	(x,	1);
	create_insn	(x=0X36187);
	op_stkvar	(x,	1);
	create_insn	(x=0X3618A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3618F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3619E);
	op_stkvar	(x,	1);
	create_insn	(x=0X361A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X361A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X361A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X361AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X361AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X361B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X361B5);
	op_stkvar	(x,	0);
	create_insn	(0X361BC);
	set_name	(0X361BC,	"sprite_1_unk4");
	create_insn	(x=0X361BF);
	op_hex		(x,	1);
	create_insn	(x=0X361C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X361C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X361C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X361CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X361CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X361D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X361D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X361DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X361E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X361E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X361E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X361F0);
	op_hex		(x,	1);
	create_insn	(x=0X361F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X361FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X361FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X36200);
	op_stkvar	(x,	0);
	create_insn	(x=0X36208);
	op_hex		(x,	1);
	create_insn	(x=0X3620B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36211);
	op_stkvar	(x,	0);
	create_insn	(x=0X36214);
	op_stkvar	(x,	0);
	create_insn	(x=0X3621B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3621E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36226);
	op_hex		(x,	1);
	create_insn	(x=0X36229);
	op_stkvar	(x,	0);
	create_insn	(x=0X3622C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36233);
	op_stkvar	(x,	0);
	create_insn	(x=0X36236);
	op_stkvar	(x,	0);
	create_insn	(x=0X3623E);
	op_hex		(x,	1);
	create_insn	(0X36246);
	set_name	(0X36246,	"preRender_wheel_helper3");
	create_insn	(x=0X36249);
	op_hex		(x,	1);
	create_insn	(x=0X3624E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36258);
	op_stkvar	(x,	1);
	create_insn	(x=0X3625D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36266);
	op_stkvar	(x,	1);
	create_insn	(x=0X3626C);
	op_stkvar	(x,	1);
	create_insn	(x=0X36274);
	op_stkvar	(x,	1);
	create_insn	(x=0X3627A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36283);
	op_stkvar	(x,	1);
	create_insn	(x=0X36298);
	op_hex		(x,	1);
	create_insn	(x=0X3629B);
	op_stkvar	(x,	1);
	create_insn	(x=0X362B1);
	op_hex		(x,	1);
	create_insn	(x=0X362B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X362BD);
	op_hex		(x,	1);
	create_insn	(x=0X362BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X362CD);
	op_hex		(x,	1);
	create_insn	(x=0X362D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X362D9);
	op_hex		(x,	1);
	create_insn	(x=0X362EA);
	op_hex		(x,	1);
	create_insn	(x=0X362ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X362F5);
	op_hex		(x,	1);
	create_insn	(x=0X362F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X36301);
	op_stkvar	(x,	1);
	create_insn	(x=0X3630A);
	op_hex		(x,	1);
	create_insn	(x=0X3630D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36316);
	op_hex		(x,	1);
	create_insn	(x=0X36318);
	op_stkvar	(x,	0);
	create_insn	(x=0X36322);
	op_stkvar	(x,	1);
	create_insn	(x=0X3632B);
	op_hex		(x,	1);
	create_insn	(x=0X3632E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36338);
	op_stkvar	(x,	0);
	create_insn	(x=0X36342);
	op_stkvar	(x,	1);
	create_insn	(x=0X3634B);
	op_hex		(x,	1);
	create_insn	(x=0X3634E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36359);
	op_stkvar	(x,	0);
	create_insn	(x=0X36363);
	op_stkvar	(x,	1);
	create_insn	(x=0X3636C);
	op_hex		(x,	1);
	create_insn	(x=0X3636F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36379);
	op_stkvar	(x,	1);
	create_insn	(x=0X36384);
	op_hex		(x,	1);
	create_insn	(x=0X36387);
	op_stkvar	(x,	1);
	create_insn	(x=0X36391);
	op_stkvar	(x,	1);
	create_insn	(x=0X3639C);
	op_hex		(x,	1);
	create_insn	(x=0X3639F);
	op_stkvar	(x,	1);
	create_insn	(x=0X363AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X363B5);
	op_hex		(x,	1);
	create_insn	(x=0X363B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X363C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X363CE);
	op_hex		(x,	1);
	create_insn	(x=0X363D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X363D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X363DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X363E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X363E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X36403);
	op_stkvar	(x,	0);
	create_insn	(x=0X36406);
	op_stkvar	(x,	0);
	create_insn	(0X36412);
	set_name	(0X36412,	"preRender_sphere_helper2");
	create_insn	(x=0X36415);
	op_hex		(x,	1);
	create_insn	(x=0X3641A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36424);
	op_stkvar	(x,	1);
	create_insn	(x=0X36429);
	op_stkvar	(x,	1);
	create_insn	(x=0X36432);
	op_stkvar	(x,	1);
	create_insn	(x=0X36438);
	op_stkvar	(x,	1);
	create_insn	(x=0X36440);
	op_stkvar	(x,	1);
	create_insn	(x=0X36446);
	op_stkvar	(x,	1);
	create_insn	(x=0X3644F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36457);
	op_hex		(x,	1);
	create_insn	(x=0X36459);
	op_stkvar	(x,	0);
	create_insn	(x=0X3645C);
	op_hex		(x,	1);
	create_insn	(x=0X3645E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36461);
	op_stkvar	(x,	1);
	create_insn	(x=0X36464);
	op_stkvar	(x,	1);
	create_insn	(x=0X36467);
	op_stkvar	(x,	0);
	create_insn	(x=0X3646D);
	op_hex		(x,	1);
	create_insn	(x=0X3646F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36472);
	op_hex		(x,	1);
	create_insn	(x=0X36474);
	op_stkvar	(x,	0);
	create_insn	(x=0X36477);
	op_stkvar	(x,	1);
	create_insn	(x=0X3647A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3647D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36483);
	op_hex		(x,	1);
	create_insn	(x=0X36485);
	op_stkvar	(x,	0);
	create_insn	(x=0X36488);
	op_hex		(x,	1);
	create_insn	(x=0X3648A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3648D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36490);
	op_stkvar	(x,	1);
	create_insn	(x=0X36493);
	op_stkvar	(x,	0);
	create_insn	(x=0X36499);
	op_hex		(x,	1);
	create_insn	(x=0X3649B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3649E);
	op_hex		(x,	1);
	create_insn	(x=0X364A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X364A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X364A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X364A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X364BB);
	op_hex		(x,	1);
	create_insn	(x=0X364BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X364D4);
	op_hex		(x,	1);
	create_insn	(x=0X364D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X364E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X364EC);
	op_hex		(x,	1);
	create_insn	(x=0X364EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X364FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X36505);
	op_hex		(x,	1);
	create_insn	(x=0X36508);
	op_stkvar	(x,	1);
	create_insn	(x=0X36515);
	op_stkvar	(x,	1);
	create_insn	(x=0X3651E);
	op_hex		(x,	1);
	create_insn	(x=0X36521);
	op_stkvar	(x,	1);
	create_insn	(x=0X3652E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36537);
	op_hex		(x,	1);
	create_insn	(x=0X3653A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36546);
	op_stkvar	(x,	1);
	create_insn	(x=0X3654F);
	op_hex		(x,	1);
	create_insn	(x=0X36552);
	op_stkvar	(x,	1);
	create_insn	(x=0X3655F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36568);
	op_hex		(x,	1);
	create_insn	(x=0X3656B);
	op_stkvar	(x,	1);
	create_insn	(x=0X36578);
	op_stkvar	(x,	1);
	create_insn	(x=0X36581);
	op_hex		(x,	1);
	create_insn	(x=0X36584);
	op_stkvar	(x,	1);
	create_insn	(x=0X36591);
	op_stkvar	(x,	1);
	create_insn	(x=0X3659A);
	op_hex		(x,	1);
	create_insn	(x=0X3659D);
	op_stkvar	(x,	1);
	create_insn	(x=0X365A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X365B2);
	op_hex		(x,	1);
	create_insn	(x=0X365B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X365C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X365CB);
	op_hex		(x,	1);
	create_insn	(x=0X365CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X365DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X365E4);
	op_hex		(x,	1);
	create_insn	(x=0X365E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X365F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X365FD);
	op_hex		(x,	1);
	create_insn	(x=0X36600);
	op_stkvar	(x,	1);
	create_insn	(x=0X3661B);
	op_hex		(x,	1);
	create_insn	(x=0X3661E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3663A);
	op_hex		(x,	1);
	create_insn	(x=0X3663D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36647);
	op_stkvar	(x,	1);
	create_insn	(x=0X36652);
	op_hex		(x,	1);
	create_insn	(x=0X36655);
	op_stkvar	(x,	1);
	create_insn	(x=0X3665F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3666A);
	op_hex		(x,	1);
	create_insn	(x=0X3666D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3667A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36683);
	op_hex		(x,	1);
	create_insn	(x=0X36686);
	op_stkvar	(x,	1);
	create_insn	(x=0X36693);
	op_stkvar	(x,	1);
	create_insn	(x=0X3669C);
	op_hex		(x,	1);
	create_insn	(x=0X3669F);
	op_stkvar	(x,	1);
	create_insn	(x=0X366AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X366BA);
	op_hex		(x,	1);
	create_insn	(x=0X366BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X366CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X366D9);
	op_hex		(x,	1);
	create_insn	(x=0X366DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X366E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X366F2);
	op_hex		(x,	1);
	create_insn	(x=0X366F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X36702);
	op_stkvar	(x,	1);
	create_insn	(x=0X3670B);
	op_hex		(x,	1);
	create_insn	(x=0X3670E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36718);
	op_stkvar	(x,	1);
	create_insn	(x=0X36723);
	op_hex		(x,	1);
	create_insn	(x=0X36726);
	op_stkvar	(x,	1);
	create_insn	(x=0X36730);
	op_stkvar	(x,	1);
	create_insn	(x=0X3673B);
	op_hex		(x,	1);
	create_insn	(x=0X3673E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3674B);
	op_stkvar	(x,	1);
	create_insn	(x=0X36754);
	op_hex		(x,	1);
	create_insn	(x=0X36757);
	op_stkvar	(x,	1);
	create_insn	(x=0X36764);
	op_stkvar	(x,	1);
	create_insn	(x=0X3676D);
	op_hex		(x,	1);
	create_insn	(x=0X36770);
	op_stkvar	(x,	1);
	create_insn	(x=0X36776);
	op_stkvar	(x,	0);
	create_insn	(x=0X3677B);
	op_stkvar	(x,	1);
	create_insn	(x=0X36782);
	op_stkvar	(x,	1);
	create_insn	(x=0X36785);
	op_stkvar	(x,	1);
	create_insn	(x=0X367A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X367A5);
	op_stkvar	(x,	0);
	create_insn	(0X367B2);
	set_name	(0X367B2,	"locate_many_resources");
	create_insn	(x=0X367B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X367BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X367BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X367C6);
	op_hex		(x,	1);
	create_insn	(x=0X367C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X367CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X367D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X367D9);
	op_stkvar	(x,	1);
	create_insn	(0X367E4);
	set_name	(0X367E4,	"nopsub_367E4");
	create_insn	(x=0X367E7);
	op_hex		(x,	1);
	create_insn	(x=0X367EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X367F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X367F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X367F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X36800);
	op_hex		(x,	1);
	create_insn	(x=0X36803);
	op_stkvar	(x,	1);
	create_insn	(x=0X36806);
	op_stkvar	(x,	0);
	create_insn	(x=0X36809);
	op_hex		(x,	1);
	create_insn	(x=0X3680B);
	op_hex		(x,	1);
	create_insn	(x=0X3680D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36815);
	op_stkvar	(x,	0);
	create_insn	(x=0X36819);
	op_stkvar	(x,	1);
	create_insn	(0X36826);
	set_name	(0X36826,	"nopsub_36826");
	create_insn	(x=0X36829);
	op_hex		(x,	1);
	create_insn	(x=0X3682D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36834);
	op_stkvar	(x,	0);
	create_insn	(x=0X36837);
	op_stkvar	(x,	0);
	create_insn	(x=0X3683A);
	op_stkvar	(x,	0);
	create_insn	(x=0X36842);
	op_hex		(x,	1);
	create_insn	(x=0X36845);
	op_stkvar	(x,	1);
	create_insn	(x=0X36848);
	op_stkvar	(x,	0);
	create_insn	(x=0X3684B);
	op_hex		(x,	1);
	create_insn	(x=0X3684D);
	op_hex		(x,	1);
	create_insn	(x=0X3684F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36857);
	op_stkvar	(x,	0);
	create_insn	(x=0X3685B);
	op_stkvar	(x,	1);
	create_insn	(0X36868);
	set_name	(0X36868,	"nopsub_36868");
	create_insn	(x=0X3686B);
	op_hex		(x,	1);
	create_insn	(x=0X3686F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36876);
	op_stkvar	(x,	0);
	create_insn	(x=0X36879);
	op_stkvar	(x,	0);
	create_insn	(x=0X3687C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36884);
	op_hex		(x,	1);
	create_insn	(x=0X36887);
	op_stkvar	(x,	1);
	create_insn	(x=0X3688A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3688D);
	op_hex		(x,	1);
	create_insn	(x=0X3688F);
	op_hex		(x,	1);
	create_insn	(x=0X36891);
	op_stkvar	(x,	1);
	create_insn	(x=0X36899);
	op_stkvar	(x,	0);
	create_insn	(x=0X3689D);
	op_stkvar	(x,	1);
	create_insn	(0X368AA);
	set_name	(0X368AA,	"mouse_set_pixratio");
	create_insn	(x=0X368B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X368B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X368BF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X368C3,	"union REGS *",	0);
	set_cmt	(0X368C4,	"int 33,f = set mouse mickey pixel ratio",	0);
	create_insn	(x=0X368C4);
	op_hex		(x,	1);
	set_cmt	(0X368C7,	"int",	0);
	create_insn	(x=0X368CD);
	op_hex		(x,	1);
	create_insn	(0X368D2);
	set_name	(0X368D2,	"mouse_init");
	create_insn	(x=0X368D5);
	op_hex		(x,	1);
	create_insn	(x=0X368DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X368E2,	"union REGS *",	0);
	set_cmt	(0X368E3,	"int 15,c201 = enable ps2 pointing device",	0);
	set_cmt	(0X368E6,	"int",	0);
	create_insn	(x=0X368EC);
	op_hex		(x,	1);
	set_cmt	(0X368F9,	"union REGS *",	0);
	set_cmt	(0X368FA,	"int 33,0 = mouse reset/get mouse installed",	0);
	create_insn	(x=0X368FA);
	op_hex		(x,	1);
	set_cmt	(0X368FD,	"int",	0);
	create_insn	(x=0X36903);
	op_hex		(x,	1);
	create_insn	(x=0X36909);
	op_stkvar	(x,	0);
	create_insn	(x=0X36912);
	op_stkvar	(x,	0);
	create_insn	(x=0X36918);
	op_stkvar	(x,	0);
	create_insn	(0X36928);
	create_insn	(x=0X3692E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36933);
	op_stkvar	(x,	1);
	create_insn	(x=0X36940);
	op_hex		(x,	1);
	create_insn	(x=0X3694C);
	op_hex		(x,	1);
	create_insn	(x=0X36955);
	op_stkvar	(x,	1);
	create_insn	(0X3695C);
	set_name	(0X3695C,	"mouse_set_minmax");
	create_insn	(x=0X36965);
	op_stkvar	(x,	1);
	create_insn	(x=0X36971);
	op_stkvar	(x,	1);
	create_insn	(x=0X36979);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X3697D,	"union REGS *",	0);
	set_cmt	(0X3697E,	"int 33,0 = mouse reset/get mouse installed",	0);
	create_insn	(x=0X3697E);
	op_hex		(x,	1);
	set_cmt	(0X36981,	"int",	0);
	create_insn	(x=0X36987);
	op_hex		(x,	1);
	create_insn	(x=0X36990);
	op_stkvar	(x,	1);
	create_insn	(x=0X36996);
	op_stkvar	(x,	1);
	create_insn	(x=0X3699C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X369A0,	"union REGS *",	0);
	set_cmt	(0X369A1,	"int 33, 8 = set mouse vert min/max",	0);
	create_insn	(x=0X369A1);
	op_hex		(x,	1);
	set_cmt	(0X369A4,	"int",	0);
	create_insn	(x=0X369AA);
	op_hex		(x,	1);
	create_insn	(0X369B0);
	create_insn	(x=0X369B6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X369BB,	"int 33,3 = get mouse pos/but status",	0);
	create_insn	(x=0X369BB);
	op_hex		(x,	1);
	create_insn	(x=0X369C4);
	op_hex		(x,	1);
	create_insn	(0X369E4);
	create_insn	(x=0X369FB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X36A00,	"int 33,1 = show mouse cursor",	0);
	create_insn	(x=0X36A00);
	op_hex		(x,	1);
	create_insn	(x=0X36A09);
	op_hex		(x,	1);
	create_insn	(0X36A0E);
	create_insn	(x=0X36A1A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X36A1F,	"int 33,2 = hide mouse cursor",	0);
	create_insn	(x=0X36A1F);
	op_hex		(x,	1);
	create_insn	(x=0X36A28);
	op_hex		(x,	1);
	create_insn	(0X36A2C);
	set_name	(0X36A2C,	"mouse_set_position");
	create_insn	(x=0X36A35);
	op_stkvar	(x,	1);
	create_insn	(x=0X36A44);
	op_stkvar	(x,	1);
	set_cmt	(0X36A51,	"union REGS *",	0);
	set_cmt	(0X36A52,	"int 33, 4 = set mouse cursor",	0);
	create_insn	(x=0X36A52);
	op_hex		(x,	1);
	set_cmt	(0X36A55,	"int",	0);
	create_insn	(x=0X36A5B);
	op_hex		(x,	1);
	create_insn	(0X36A60);
	set_name	(0X36A60,	"mouse_get_state");
	set_cmt	(0X36A6D,	"union REGS *",	0);
	set_cmt	(0X36A6E,	"int 33, 3 = get mouse position and button",	0);
	create_insn	(x=0X36A6E);
	op_hex		(x,	1);
	set_cmt	(0X36A71,	"int",	0);
	create_insn	(x=0X36A77);
	op_hex		(x,	1);
	create_insn	(x=0X36A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36A82);
	op_stkvar	(x,	1);
	create_insn	(x=0X36A90);
	op_stkvar	(x,	1);
	create_insn	(0X36A9A);
	set_name	(0X36A9A,	"nopsub_36A9A");
	create_insn	(x=0X36AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X36AAF);
	op_stkvar	(x,	1);
	set_cmt	(0X36ABB,	"union REGS *",	0);
	set_cmt	(0X36ABF,	"int",	0);
	create_insn	(x=0X36AC5);
	op_hex		(x,	1);
	create_insn	(0X36ACA);
	set_name	(0X36ACA,	"nopsub_36ACA");
	create_insn	(x=0X36AD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X36AD9);
	op_stkvar	(x,	1);
	set_cmt	(0X36AE3,	"union REGS *",	0);
	set_cmt	(0X36AE7,	"int",	0);
	create_insn	(x=0X36AED);
	op_hex		(x,	1);
	create_insn	(0X36AF2);
	create_insn	(0X36AF4);
	set_name	(0X36AF4,	"kb_shift_checking1");
	set_cmt	(0X36AF9,	"40h:17h = keyboard shift flags",	0);
	create_insn	(x=0X36AF9);
	op_hex		(x,	1);
	create_insn	(0X36B05);
	set_name	(0X36B05,	"kb_shift_checking2");
	set_cmt	(0X36B0A,	"40h:17h = keyboard shift flags",	0);
	create_insn	(x=0X36B0A);
	op_hex		(x,	1);
	create_insn	(0X36B16);
	set_name	(0X36B16,	"preRender_wheel_helper2");
	create_insn	(x=0X36B19);
	op_hex		(x,	1);
	create_insn	(x=0X36B1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36B25);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B28);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B3B);
	op_hex		(x,	1);
	create_insn	(x=0X36B40);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B43);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X36B55);
	op_hex		(x,	1);
	create_insn	(x=0X36B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X36B60);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B63);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B71);
	op_hex		(x,	1);
	create_insn	(x=0X36B76);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B79);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X36B8B);
	op_hex		(x,	1);
	create_insn	(x=0X36B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36B96);
	op_stkvar	(x,	0);
	create_insn	(x=0X36B99);
	op_stkvar	(x,	0);
	create_insn	(x=0X36BA2);
	op_hex		(x,	1);
	create_insn	(x=0X36BA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BB5);
	op_hex		(x,	1);
	create_insn	(0X36BBE);
	set_name	(0X36BBE,	"preRender_sphere_helper");
	create_insn	(x=0X36BC1);
	op_hex		(x,	1);
	create_insn	(x=0X36BC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X36BD1);
	op_hex		(x,	1);
	create_insn	(x=0X36BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BDC);
	op_stkvar	(x,	0);
	create_insn	(0X36BE8);
	set_name	(0X36BE8,	"heapsort_by_order");
	create_insn	(x=0X36BEB);
	op_hex		(x,	1);
	create_insn	(x=0X36BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BF6);
	op_hex		(x,	1);
	create_insn	(x=0X36BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X36BFD);
	op_hex		(x,	1);
	create_insn	(x=0X36BFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C04);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C07);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C0D);
	op_hex		(x,	1);
	create_insn	(x=0X36C13);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C29);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C35);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C38);
	op_hex		(x,	1);
	create_insn	(x=0X36C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C45);
	op_hex		(x,	1);
	create_insn	(x=0X36C4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C51);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C56);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C59);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C5C);
	op_stkvar	(x,	0);
	create_insn	(0X36C62);
	create_insn	(x=0X36C65);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C72);
	op_stkvar	(x,	0);
	create_insn	(0X36C78);
	create_insn	(0X36C7E);
	set_name	(0X36C7E,	"preRender_wheel");
	create_insn	(x=0X36C81);
	op_hex		(x,	1);
	create_insn	(x=0X36C86);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C89);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36C96);
	op_hex		(x,	1);
	create_insn	(x=0X36C99);
	op_stkvar	(x,	1);
	create_insn	(x=0X36C9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X36CC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CD0);
	op_hex		(x,	1);
	create_insn	(x=0X36CD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X36CED);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X36CF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D0E);
	op_hex		(x,	1);
	create_insn	(x=0X36D11);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D15);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D20);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D26);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D43);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D47);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D56);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D64);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D72);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D75);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D78);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X36D80);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D84);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D90);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D95);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D99);
	op_stkvar	(x,	0);
	create_insn	(x=0X36D9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X36DF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X36DFE);
	op_hex		(x,	1);
	create_insn	(x=0X36E01);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E16);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E23);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E27);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E38);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E41);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E45);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E65);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E69);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E77);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E81);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E88);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X36E9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EA4);
	op_hex		(x,	1);
	create_insn	(x=0X36EA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X36EB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EB8);
	op_hex		(x,	1);
	create_insn	(0X36EC0);
	set_name	(0X36EC0,	"preRender_wheel_helper");
	create_insn	(x=0X36EC3);
	op_hex		(x,	1);
	create_insn	(x=0X36EC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X36ECA);
	op_stkvar	(x,	0);
	create_insn	(x=0X36ECD);
	op_stkvar	(x,	0);
	create_insn	(x=0X36ED5);
	op_hex		(x,	1);
	create_insn	(x=0X36ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X36EE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X36EEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X36EFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F05);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F13);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F17);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F1E);
	op_stkvar	(x,	0);
	create_insn	(0X36F2A);
	set_name	(0X36F2A,	"mat_rot_x");
	create_insn	(x=0X36F2D);
	op_hex		(x,	1);
	create_insn	(x=0X36F30);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F38);
	op_hex		(x,	1);
	create_insn	(x=0X36F3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F46);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F49);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F4C);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F50);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F55);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F5A);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F62);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F65);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F68);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F6B);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F72);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36F75);
	op_stkvar	(x,	1);
	create_insn	(x=0X36F78);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	update_extra_cmt		(0X36F80,	E_PREV + 0,	"");
	update_extra_cmt		(0X36F80,	E_PREV + 1,	"Calvin's notation names rotation matrices according");
	update_extra_cmt		(0X36F80,	E_PREV + 2,	"to the axis of rotation, while Duplode tends to");
	update_extra_cmt		(0X36F80,	E_PREV + 3,	"think in terms of the plane on which the rotating");
	update_extra_cmt		(0X36F80,	E_PREV + 4,	"angle lies. So mat_rot_y might be called matRotXZ.");
	update_extra_cmt		(0X36F80,	E_PREV + 5,	"This remark is just to avoid possible interpretation");
	update_extra_cmt		(0X36F80,	E_PREV + 6,	"mistakes.");
	create_insn	(0X36F80);
	set_name	(0X36F80,	"mat_rot_y");
	create_insn	(x=0X36F83);
	op_hex		(x,	1);
	create_insn	(x=0X36F86);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F8E);
	op_hex		(x,	1);
	create_insn	(x=0X36F91);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F94);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X36F9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FA5);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FA7);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FB1);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FB4);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FB9);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FBE);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FC6);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FC9);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FD1);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(0X36FD8);
	set_name	(0X36FD8,	"mat_rot_z");
	create_insn	(x=0X36FDB);
	op_hex		(x,	1);
	create_insn	(x=0X36FDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X36FE6);
	op_hex		(x,	1);
	create_insn	(x=0X36FE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X36FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X36FF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X36FF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X36FFD);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X36FFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X37002);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X37005);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3700C);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3700F);
	op_stkvar	(x,	1);
	create_insn	(x=0X37012);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X37015);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3701A);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X3701F);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(x=0X37024);
	op_stroff	(x,	0,	GetStrucIdByName("MATRIX"),	0);
	create_insn	(0X3702E);
	create_insn	(x=0X37031);
	op_hex		(x,	1);
	create_insn	(x=0X37035);
	op_stkvar	(x,	1);
	create_insn	(x=0X37038);
	op_stkvar	(x,	1);
	create_insn	(x=0X3703C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3703F);
	op_stkvar	(x,	1);
	create_insn	(x=0X37042);
	op_stkvar	(x,	1);
	create_insn	(x=0X37046);
	op_stkvar	(x,	0);
	create_insn	(x=0X37049);
	op_stkvar	(x,	0);
	create_insn	(x=0X3704F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37056);
	op_stkvar	(x,	0);
	create_insn	(x=0X37059);
	op_stkvar	(x,	0);
	create_insn	(x=0X3705C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37064);
	op_hex		(x,	1);
	create_insn	(x=0X37067);
	op_stkvar	(x,	0);
	create_insn	(x=0X3706E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37071);
	op_stkvar	(x,	0);
	create_insn	(x=0X37074);
	op_stkvar	(x,	0);
	create_insn	(x=0X3707C);
	op_hex		(x,	1);
	create_insn	(x=0X3707F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37085);
	op_stkvar	(x,	1);
	create_insn	(x=0X37089);
	op_stkvar	(x,	0);
	create_insn	(x=0X3708C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37094);
	op_stkvar	(x,	0);
	create_insn	(x=0X3709C);
	op_hex		(x,	1);
	create_insn	(x=0X3709F);
	op_stkvar	(x,	0);
	create_insn	(x=0X370A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X370AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X370B2);
	op_hex		(x,	1);
	create_insn	(0X370BA);
	set_name	(0X370BA,	"toupper");
	create_insn	(x=0X370BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X370C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X370C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X370CD);
	op_stkvar	(x,	1);
	create_insn	(0X370D2);
	set_name	(0X370D2,	"init_audio_resources");
	create_insn	(x=0X370D5);
	op_hex		(x,	1);
	set_cmt	(0X370D8,	"arg_8 is a string, e.g \"TITL\"",	0);
	create_insn	(x=0X370D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X370DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X370DE);
	op_stkvar	(x,	0);
	set_cmt	(0X370E1,	"audio_find_resource?",	0);
	create_insn	(x=0X370E6);
	op_hex		(x,	1);
	create_insn	(x=0X370E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X370EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X370FA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X370FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X37101);
	op_stkvar	(x,	0);
	set_cmt	(0X37104,	"audio_find_resource? look up \"hdr1\" in the \"TITL\" chunk?",	0);
	create_insn	(x=0X37109);
	op_hex		(x,	1);
	create_insn	(x=0X3710C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3710F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37116);
	op_stkvar	(x,	1);
	set_cmt	(0X37119,	"check header+5 if we already loaded this",	0);
	create_insn	(x=0X37120);
	op_stkvar	(x,	0);
	create_insn	(x=0X37123);
	op_stkvar	(x,	0);
	create_insn	(x=0X37126);
	op_stkvar	(x,	0);
	create_insn	(x=0X37129);
	op_stkvar	(x,	0);
	create_insn	(x=0X37130);
	op_hex		(x,	1);
	create_insn	(x=0X37133);
	op_stkvar	(x,	0);
	create_insn	(x=0X37136);
	op_stkvar	(x,	0);
	create_insn	(x=0X3713D);
	op_hex		(x,	1);
	create_insn	(x=0X37140);
	op_stkvar	(x,	1);
	set_cmt	(0X37143,	"set header+5 to 1, = loaded",	0);
	create_insn	(x=0X37148);
	op_stkvar	(x,	1);
	create_insn	(x=0X3715A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3715D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37160);
	op_stkvar	(x,	1);
	create_insn	(x=0X37165);
	op_stkvar	(x,	0);
	create_insn	(x=0X37168);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X3716C,	E_NEXT + 0,	"Notes on a kms file seem to");
	update_extra_cmt		(0X3716C,	E_NEXT + 1,	"have four bytes...");
	create_insn	(x=0X3716F);
	op_hex		(x,	1);
	create_insn	(x=0X37172);
	op_stkvar	(x,	1);
	create_insn	(x=0X37175);
	op_stkvar	(x,	1);
	create_insn	(0X3717C);
	set_name	(0X3717C,	"load_audio_finalize");
	create_insn	(x=0X3717F);
	op_hex		(x,	1);
	create_insn	(x=0X3718D);
	op_stkvar	(x,	1);
	create_insn	(x=0X37190);
	op_stkvar	(x,	1);
	create_insn	(x=0X37195);
	op_stkvar	(x,	1);
	create_insn	(x=0X371B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X371B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X371B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X371C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X371CE);
	op_hex		(x,	1);
	create_insn	(x=0X371D0);
	op_hex		(x,	1);
	create_insn	(x=0X371D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X371DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X371DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X371F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37201);
	op_hex		(x,	1);
	create_byte	(0X37214);
	make_array	(0X37214,	0X2);
	create_insn	(0X37216);
	set_name	(0X37216,	"audio_unk");
	create_insn	(x=0X37219);
	op_hex		(x,	1);
	create_insn	(x=0X37243);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37250);
	op_hex		(x,	1);
	create_insn	(x=0X3725C);
	op_stkvar	(x,	0);
	create_insn	(0X37262);
	create_insn	(x=0X37267);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3727A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3727D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37280);
	op_stkvar	(x,	0);
	create_insn	(x=0X37283);
	op_hex		(x,	1);
	create_insn	(x=0X3728D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37295);
	op_stkvar	(x,	0);
	create_insn	(x=0X372B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X372B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X372BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X372BF);
	op_hex		(x,	1);
	create_insn	(x=0X372C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X372CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X372DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X372DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X372E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X372E4);
	op_hex		(x,	1);
	create_insn	(0X372F4);
	create_insn	(x=0X372F7);
	op_hex		(x,	1);
	create_insn	(x=0X3731B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37328);
	op_hex		(x,	1);
	create_insn	(x=0X37331);
	op_stkvar	(x,	0);
	create_insn	(0X37336);
	create_insn	(x=0X3733B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3734E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37351);
	op_stkvar	(x,	0);
	create_insn	(x=0X37354);
	op_stkvar	(x,	0);
	create_insn	(x=0X37357);
	op_hex		(x,	1);
	create_insn	(0X3736A);
	create_insn	(x=0X37381);
	op_hex		(x,	1);
	create_insn	(x=0X3739D);
	op_hex		(x,	1);
	create_insn	(0X373B2);
	set_name	(0X373B2,	"audio_enable_flag2");
	create_insn	(0X373B8);
	set_name	(0X373B8,	"audio_disable_flag2");
	create_insn	(x=0X373D9);
	op_hex		(x,	1);
	create_insn	(0X373E8);
	set_name	(0X373E8,	"audio_toggle_flag2");
	create_insn	(0X373F6);
	create_insn	(0X373FE);
	set_name	(0X373FE,	"nopsub_373FE");
	create_insn	(x=0X37401);
	op_hex		(x,	1);
	create_insn	(x=0X3741E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37431);
	op_stkvar	(x,	1);
	create_insn	(x=0X3743D);
	op_stkvar	(x,	0);
	create_insn	(0X37446);
	create_insn	(x=0X37450);
	op_stkvar	(x,	0);
	create_insn	(0X37456);
	set_name	(0X37456,	"nopsub_37456");
	create_insn	(x=0X37461);
	op_stkvar	(x,	0);
	create_insn	(x=0X37464);
	op_stkvar	(x,	0);
	create_insn	(x=0X3746B);
	op_hex		(x,	1);
	create_insn	(0X37470);
	create_insn	(x=0X37473);
	op_hex		(x,	1);
	create_insn	(x=0X37478);
	op_stkvar	(x,	0);
	create_insn	(x=0X37484);
	op_stkvar	(x,	1);
	create_insn	(x=0X37493);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X374A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X374A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X374B2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X374BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X374C1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X374C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X374CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X374D1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X374DE);
	create_insn	(x=0X374E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X374E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X374EA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X374F4);
	op_hex		(x,	1);
	create_insn	(0X374FA);
	set_name	(0X374FA,	"audio_check_flag2");
	create_insn	(x=0X37503);
	op_stkvar	(x,	1);
	create_insn	(x=0X37507);
	op_stkvar	(x,	0);
	create_insn	(x=0X3750A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3750D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37514);
	op_hex		(x,	1);
	create_insn	(0X3751A);
	set_name	(0X3751A,	"audio_check_flag");
	create_insn	(x=0X3751D);
	op_hex		(x,	1);
	create_insn	(x=0X37532);
	op_stkvar	(x,	1);
	create_insn	(x=0X37535);
	op_stkvar	(x,	1);
	create_insn	(x=0X3753A);
	op_stkvar	(x,	1);
	create_insn	(x=0X37552);
	op_stkvar	(x,	1);
	create_insn	(x=0X37562);
	op_stkvar	(x,	0);
	create_insn	(x=0X37568);
	op_stkvar	(x,	0);
	create_insn	(x=0X3756D);
	op_stkvar	(x,	0);
	create_insn	(0X37576);
	create_insn	(x=0X37579);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3757C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3758B);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X3759D);
	op_stkvar	(x,	0);
	create_insn	(x=0X375A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X375B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X375BC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X375D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X375D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X375DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X375E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X375EC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X375F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X375F5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X375FC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37606);
	op_hex		(x,	1);
	create_insn	(x=0X37609);
	op_stkvar	(x,	0);
	create_insn	(x=0X37612);
	op_stkvar	(x,	1);
	create_insn	(x=0X3761B);
	op_hex		(x,	1);
	create_insn	(x=0X3761D);
	op_hex		(x,	1);
	create_insn	(x=0X37622);
	op_stkvar	(x,	0);
	create_insn	(x=0X37625);
	op_stkvar	(x,	1);
	create_insn	(x=0X3762B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3762E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37633);
	op_stkvar	(x,	0);
	create_insn	(x=0X37636);
	op_stkvar	(x,	0);
	create_insn	(x=0X3763D);
	op_hex		(x,	1);
	create_insn	(x=0X37640);
	op_stkvar	(x,	1);
	create_insn	(0X3764A);
	set_name	(0X3764A,	"audio_init_chunk2");
	create_insn	(x=0X3764D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37653);
	op_stkvar	(x,	0);
	create_insn	(x=0X3765C);
	op_stkvar	(x,	1);
	create_insn	(x=0X37663);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37667);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X3766B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3766E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37676);
	op_hex		(x,	1);
	create_insn	(x=0X37687);
	op_stkvar	(x,	0);
	create_insn	(x=0X3768A);
	op_stkvar	(x,	0);
	create_insn	(x=0X37691);
	op_hex		(x,	1);
	create_insn	(0X37696);
	set_name	(0X37696,	"audio_enable_flag6");
	create_insn	(x=0X37699);
	op_hex		(x,	1);
	create_insn	(x=0X376A7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X376B4);
	op_hex		(x,	1);
	create_insn	(x=0X376BD);
	op_stkvar	(x,	0);
	create_insn	(0X376CA);
	set_name	(0X376CA,	"audio_disable_flag6");
	create_insn	(x=0X376CD);
	op_hex		(x,	1);
	create_insn	(x=0X376DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X376E1);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X376EE);
	op_hex		(x,	1);
	create_insn	(x=0X376FA);
	op_stkvar	(x,	0);
	create_insn	(0X37708);
	set_name	(0X37708,	"audio_toggle_flag6");
	create_insn	(0X37716);
	create_insn	(0X3771E);
	create_insn	(x=0X3772E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37734);
	op_stkvar	(x,	0);
	create_insn	(x=0X3773D);
	op_stkvar	(x,	1);
	create_insn	(x=0X37742);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37746);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X37750);
	set_name	(0X37750,	"nopsub_37750");
	create_insn	(x=0X37756);
	op_stkvar	(x,	1);
	create_insn	(x=0X3775B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3775E);
	op_stkvar	(x,	1);
	create_insn	(x=0X37761);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37765);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(0X3776C);
	set_name	(0X3776C,	"audio_driver_func3F");
	create_insn	(x=0X3776F);
	op_hex		(x,	1);
	create_insn	(x=0X3777F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37789);
	op_stkvar	(x,	1);
	create_insn	(x=0X3778D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37790);
	op_stkvar	(x,	0);
	create_insn	(x=0X37793);
	op_stkvar	(x,	1);
	create_insn	(x=0X377A1);
	op_hex		(x,	1);
	create_insn	(x=0X377AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X377AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X377B5);
	op_hex		(x,	1);
	create_insn	(0X377C6);
	create_insn	(x=0X377C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X377CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X377D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X377DE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X377F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X377F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X377F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X377FA);
	op_hex		(x,	1);
	create_insn	(x=0X37803);
	op_stkvar	(x,	0);
	create_insn	(x=0X37806);
	op_stkvar	(x,	0);
	create_insn	(x=0X3780E);
	op_hex		(x,	1);
	create_insn	(x=0X3781D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37836);
	op_hex		(x,	1);
	create_insn	(x=0X37843);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37856);
	op_stkvar	(x,	0);
	create_insn	(x=0X37859);
	op_stkvar	(x,	0);
	create_insn	(x=0X3785C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3785F);
	op_hex		(x,	1);
	create_insn	(0X37868);
	create_insn	(x=0X3786B);
	op_hex		(x,	1);
	create_insn	(x=0X37872);
	op_stkvar	(x,	1);
	create_insn	(0X37878);
	create_insn	(x=0X3787F);
	op_hex		(x,	1);
	create_insn	(x=0X3788F);
	op_stkvar	(x,	0);
	create_insn	(0X37898);
	set_name	(0X37898,	"nopsub_37898");
	create_insn	(x=0X3789B);
	op_stkvar	(x,	1);
	create_insn	(x=0X378A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X378A8);
	op_hex		(x,	1);
	create_insn	(0X378AE);
	set_name	(0X378AE,	"nopsub_378AE");
	create_insn	(x=0X378B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X378B4);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X378BC);
	set_name	(0X378BC,	"nopsub_378BC");
	create_insn	(x=0X378BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X378C2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X378CA);
	set_name	(0X378CA,	"audio_load_driver");
	create_insn	(x=0X378CD);
	op_hex		(x,	1);
	create_insn	(x=0X378D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X378EE);
	op_plain_offset	(x,	1,	0X370D0);
	op_plain_offset	(x,	129,	0X370D0);
	create_insn	(x=0X378F1);
	op_seg		(x,	1);
	create_insn	(x=0X378FB);
	op_hex		(x,	1);
	create_insn	(x=0X37908);
	op_stkvar	(x,	1);
	create_insn	(x=0X37915);
	op_stkvar	(x,	0);
	create_insn	(x=0X3791C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3792F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37932);
	op_stkvar	(x,	0);
	create_insn	(x=0X37938);
	op_stkvar	(x,	0);
	create_insn	(x=0X3793B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3793E);
	op_stkvar	(x,	1);
	create_insn	(x=0X37951);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37954,	"int",	0);
	create_insn	(x=0X37955);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37959,	"char *",	0);
	create_insn	(x=0X37959);
	op_stkvar	(x,	0);
	create_insn	(x=0X37961);
	op_hex		(x,	1);
	create_insn	(x=0X37964);
	op_stkvar	(x,	0);
	create_insn	(x=0X3796D);
	op_hex		(x,	1);
	create_insn	(0X37988);
	create_byte	(0X379A0);
	make_array	(0X379A0,	0X2);
	create_insn	(0X379A2);
	create_insn	(x=0X379BC);
	op_plain_offset	(x,	1,	0X38630);
	op_plain_offset	(x,	129,	0X38630);
	create_insn	(x=0X379BF);
	op_seg		(x,	1);
	create_insn	(x=0X379C9);
	op_hex		(x,	1);
	create_insn	(x=0X379D3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X379DC);
	op_hex		(x,	1);
	create_insn	(x=0X379DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X379E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X379EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X379F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X379FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X379FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A00);
	op_hex		(x,	1);
	create_insn	(x=0X37A03);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A06);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A0E);
	op_hex		(x,	1);
	create_insn	(x=0X37A16);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37A29);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37A32);
	op_hex		(x,	1);
	create_insn	(x=0X37A52);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37A5B);
	op_hex		(x,	1);
	create_insn	(0X37A64);
	set_name	(0X37A64,	"audiodrv_atexit");
	create_insn	(x=0X37A67);
	op_hex		(x,	1);
	create_insn	(0X37A7C);
	create_insn	(x=0X37A7F);
	op_seg		(x,	1);
	create_insn	(x=0X37A89);
	op_hex		(x,	1);
	create_insn	(x=0X37AB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X37AB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ABB);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ABE);
	op_hex		(x,	1);
	create_insn	(x=0X37ACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ACE);
	op_stkvar	(x,	0);
	create_insn	(x=0X37AD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X37AE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X37AE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X37AF4);
	op_hex		(x,	1);
	create_insn	(0X37B14);
	set_name	(0X37B14,	"load_sfx_ge");
	create_insn	(x=0X37B17);
	op_hex		(x,	1);
	set_cmt	(0X37B1A,	"int",	0);
	create_insn	(x=0X37B1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B1D);
	op_stkvar	(x,	0);
	set_cmt	(0X37B20,	"char *",	0);
	create_insn	(x=0X37B20);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B28);
	op_hex		(x,	1);
	create_insn	(x=0X37B31);
	op_hex		(x,	1);
	create_insn	(x=0X37B34);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B37);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X37B41);
	op_stkvar	(x,	1);
	create_insn	(x=0X37B48);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X37B51);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B57);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B5A);
	op_stkvar	(x,	0);
	set_cmt	(0X37B5E,	"int",	0);
	create_insn	(x=0X37B5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B61);
	op_stkvar	(x,	1);
	set_cmt	(0X37B65,	"char *",	0);
	create_insn	(x=0X37B65);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B6D);
	op_hex		(x,	1);
	create_insn	(x=0X37B76);
	op_hex		(x,	1);
	create_insn	(x=0X37B79);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B83);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37B86,	"int",	0);
	create_insn	(x=0X37B87);
	op_stkvar	(x,	0);
	set_cmt	(0X37B8A,	"char *",	0);
	create_insn	(x=0X37B8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X37B92);
	op_hex		(x,	1);
	create_insn	(x=0X37B9B);
	op_hex		(x,	1);
	create_insn	(x=0X37B9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BA8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37BAB,	"int",	0);
	create_insn	(x=0X37BAC);
	op_stkvar	(x,	1);
	set_cmt	(0X37BB0,	"char *",	0);
	create_insn	(x=0X37BB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BB8);
	op_hex		(x,	1);
	create_insn	(x=0X37BC1);
	op_hex		(x,	1);
	create_insn	(x=0X37BC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BD1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37BD4,	"int",	0);
	create_insn	(x=0X37BD5);
	op_stkvar	(x,	0);
	set_cmt	(0X37BD8,	"char *",	0);
	create_insn	(x=0X37BD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BE0);
	op_hex		(x,	1);
	create_insn	(x=0X37BE9);
	op_hex		(x,	1);
	create_insn	(x=0X37BEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X37BF9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37BFC,	"int",	0);
	create_insn	(x=0X37BFD);
	op_stkvar	(x,	1);
	set_cmt	(0X37C01,	"char *",	0);
	create_insn	(x=0X37C01);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C09);
	op_hex		(x,	1);
	create_insn	(x=0X37C12);
	op_hex		(x,	1);
	create_insn	(x=0X37C15);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C18);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C22);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C2A);
	op_hex		(x,	1);
	create_insn	(x=0X37C2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C30);
	op_stkvar	(x,	0);
	create_insn	(0X37C38);
	create_insn	(x=0X37C3B);
	op_stkvar	(x,	1);
	create_insn	(0X37C44);
	set_name	(0X37C44,	"load_sfx_file");
	create_insn	(x=0X37C47);
	op_hex		(x,	1);
	create_insn	(x=0X37C4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C59);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37C5C,	"int",	0);
	create_insn	(x=0X37C5D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37C61,	"char *",	0);
	create_insn	(x=0X37C61);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C68);
	op_hex		(x,	1);
	create_insn	(x=0X37C6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C71);
	op_stkvar	(x,	1);
	create_insn	(x=0X37C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X37C79);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37C7C,	"int",	0);
	create_insn	(x=0X37C7D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37C81,	"char *",	0);
	create_insn	(x=0X37C81);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C88);
	op_hex		(x,	1);
	create_insn	(x=0X37C8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37C91);
	op_stkvar	(x,	1);
	create_insn	(x=0X37C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X37CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CA3);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37CAC);
	op_hex		(x,	1);
	create_insn	(x=0X37CAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X37CB2);
	op_stkvar	(x,	1);
	create_insn	(0X37CBA);
	set_name	(0X37CBA,	"load_song_file");
	create_insn	(x=0X37CBD);
	op_hex		(x,	1);
	create_insn	(x=0X37CC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37CCB,	"int",	0);
	create_insn	(x=0X37CCC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37CD0,	"char *",	0);
	create_insn	(x=0X37CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CD7);
	op_hex		(x,	1);
	create_insn	(x=0X37CDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X37CEE);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37CF7);
	op_hex		(x,	1);
	create_insn	(x=0X37CFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X37CFD);
	op_stkvar	(x,	1);
	create_insn	(0X37D04);
	set_name	(0X37D04,	"load_voice_file");
	create_insn	(x=0X37D07);
	op_hex		(x,	1);
	create_insn	(x=0X37D0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D19);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D1C,	"int",	0);
	create_insn	(x=0X37D1D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D21,	"char *",	0);
	create_insn	(x=0X37D21);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D28);
	op_hex		(x,	1);
	create_insn	(x=0X37D2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D31);
	op_stkvar	(x,	1);
	create_insn	(x=0X37D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X37D39);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D3C,	"int",	0);
	create_insn	(x=0X37D3D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D41,	"char *",	0);
	create_insn	(x=0X37D41);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D48);
	op_hex		(x,	1);
	create_insn	(x=0X37D4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D51);
	op_stkvar	(x,	1);
	create_insn	(x=0X37D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X37D60);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D63);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37D6C);
	op_hex		(x,	1);
	create_insn	(x=0X37D6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X37D72);
	op_stkvar	(x,	1);
	create_insn	(0X37D7A);
	set_name	(0X37D7A,	"nopsub_37D7A");
	create_insn	(x=0X37D7D);
	op_hex		(x,	1);
	create_insn	(x=0X37D80);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D83,	"int",	0);
	create_insn	(x=0X37D84);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X37D88,	"char *",	0);
	create_insn	(x=0X37D88);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D8F);
	op_hex		(x,	1);
	create_insn	(x=0X37D92);
	op_stkvar	(x,	0);
	create_insn	(x=0X37D95);
	op_stkvar	(x,	0);
	create_insn	(x=0X37DA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X37DA6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37DAF);
	op_hex		(x,	1);
	create_insn	(x=0X37DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DB5);
	op_stkvar	(x,	1);
	create_insn	(0X37DBC);
	set_name	(0X37DBC,	"audio_init_chunk");
	create_insn	(x=0X37DBF);
	op_hex		(x,	1);
	create_insn	(x=0X37DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X37DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DCD);
	op_stkvar	(x,	0);
	create_insn	(0X37DD5);
	create_insn	(x=0X37DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DDB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37DDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X37DE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X37DFC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37E01);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X37E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E55);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37E61);
	op_stkvar	(x,	0);
	create_insn	(x=0X37E6A);
	op_hex		(x,	1);
	create_insn	(x=0X37E76);
	op_stkvar	(x,	0);
	create_insn	(x=0X37E79);
	op_stkvar	(x,	0);
	create_insn	(x=0X37E80);
	op_hex		(x,	1);
	create_insn	(x=0X37E8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37E8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X37E92);
	op_stkvar	(x,	1);
	create_insn	(0X37EA0);
	create_insn	(x=0X37EA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X37EB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EB7);
	op_stkvar	(x,	0);
	create_insn	(0X37EC0);
	set_name	(0X37EC0,	"audio_map_song_instruments");
	create_insn	(x=0X37EC3);
	op_hex		(x,	1);
	create_insn	(x=0X37EC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ECC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37ED0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37ED3);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EDB);
	op_hex		(x,	1);
	create_insn	(x=0X37EDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X37EF0);
	op_stkvar	(x,	1);
	set_cmt	(0X37EF3,	"counter is compared to this - numsomething?",	0);
	create_insn	(x=0X37F00);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F03);
	op_stkvar	(x,	0);
	set_cmt	(0X37F0D,	"ax = hdrptr + 7 = instrument names; which are to be replaced with pointers to the instruments in the vce?",	0);
	create_insn	(x=0X37F0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F10);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F13);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F41);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F44);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F47);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F51);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F59);
	op_hex		(x,	1);
	create_insn	(x=0X37F5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F67);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F6A);
	op_stkvar	(x,	0);
	set_cmt	(0X37F6E,	"looks like it replaces 4-byte names with pointers",	0);
	create_insn	(x=0X37F71);
	op_hex		(x,	1);
	create_insn	(x=0X37F74);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F78);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X37F82);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F87);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37F8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X37F96);
	op_hex		(x,	1);
	create_insn	(x=0X37FA0);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37FA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FAF);
	op_hex		(x,	1);
	create_insn	(x=0X37FB9);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37FBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FC8);
	op_hex		(x,	1);
	create_insn	(x=0X37FD2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37FD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FE1);
	op_hex		(x,	1);
	create_insn	(x=0X37FEB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X37FEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X37FFA);
	op_hex		(x,	1);
	create_insn	(x=0X38004);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X38008);
	op_stkvar	(x,	0);
	create_insn	(x=0X3800B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38013);
	op_hex		(x,	1);
	create_insn	(x=0X3801D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X38021);
	op_stkvar	(x,	0);
	create_insn	(x=0X38024);
	op_stkvar	(x,	0);
	create_insn	(x=0X3802C);
	op_hex		(x,	1);
	create_insn	(0X3803C);
	create_insn	(x=0X3803F);
	op_hex		(x,	1);
	create_insn	(x=0X38044);
	op_stkvar	(x,	1);
	create_insn	(x=0X38047);
	op_stkvar	(x,	1);
	create_insn	(x=0X3804F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38052);
	op_stkvar	(x,	1);
	create_insn	(x=0X3805A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38063);
	op_stkvar	(x,	0);
	create_insn	(x=0X38066);
	op_stkvar	(x,	0);
	create_insn	(x=0X38069);
	op_stkvar	(x,	0);
	create_insn	(x=0X38075);
	op_stkvar	(x,	0);
	create_insn	(x=0X3807A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3807F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38084);
	op_stkvar	(x,	0);
	create_insn	(x=0X38087);
	op_stkvar	(x,	1);
	create_insn	(x=0X38095);
	op_stkvar	(x,	0);
	create_insn	(x=0X3809F);
	op_stkvar	(x,	1);
	create_insn	(x=0X380A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X380A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X380A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X380AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X380B4);
	op_hex		(x,	1);
	create_insn	(x=0X380B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X380BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X380BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X380D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X380E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X380F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X380FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X380FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X38101);
	op_stkvar	(x,	1);
	create_insn	(x=0X38105);
	op_stkvar	(x,	0);
	create_insn	(x=0X38108);
	op_stkvar	(x,	0);
	create_insn	(x=0X38110);
	op_hex		(x,	1);
	create_insn	(x=0X38113);
	op_stkvar	(x,	0);
	create_insn	(x=0X38116);
	op_stkvar	(x,	0);
	create_insn	(x=0X3811D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38122);
	op_stkvar	(x,	0);
	create_insn	(x=0X38125);
	op_stkvar	(x,	0);
	create_insn	(x=0X3812C);
	op_hex		(x,	1);
	create_insn	(x=0X3812F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38137);
	op_stkvar	(x,	0);
	create_insn	(x=0X3813B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3813E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38147);
	op_stkvar	(x,	1);
	create_insn	(0X3814F);
	create_insn	(0X38156);
	create_insn	(x=0X38159);
	op_hex		(x,	1);
	create_insn	(x=0X3815F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38162);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X38165);
	op_stkvar	(x,	0);
	create_insn	(0X38178);
	create_insn	(x=0X3817B);
	op_hex		(x,	1);
	create_insn	(x=0X3819D);
	op_hex		(x,	1);
	create_insn	(x=0X381A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X381B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X381B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X381BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X381C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X381C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X381D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X381D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X381D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X381DC);
	op_hex		(x,	1);
	create_insn	(x=0X381E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X381E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X381EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X381F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X38201);
	op_stkvar	(x,	0);
	create_insn	(x=0X38205);
	op_stkvar	(x,	0);
	create_insn	(x=0X38209);
	op_stkvar	(x,	0);
	create_insn	(x=0X3820D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3821E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3822B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3822E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38231);
	op_stkvar	(x,	0);
	create_insn	(x=0X3823E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38241);
	op_stkvar	(x,	0);
	create_insn	(x=0X38244);
	op_stkvar	(x,	0);
	create_insn	(0X38254);
	set_name	(0X38254,	"audio_map_song_tracks");
	create_insn	(x=0X38257);
	op_hex		(x,	1);
	create_insn	(x=0X3825C);
	op_stkvar	(x,	0);
	create_insn	(x=0X38260);
	op_stkvar	(x,	1);
	create_insn	(x=0X38263);
	op_stkvar	(x,	1);
	create_insn	(x=0X3826F);
	op_hex		(x,	1);
	create_insn	(x=0X38272);
	op_stkvar	(x,	0);
	create_insn	(x=0X38275);
	op_stkvar	(x,	1);
	create_insn	(x=0X38278);
	op_stkvar	(x,	1);
	create_insn	(x=0X3827E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38281);
	op_stkvar	(x,	0);
	create_insn	(x=0X38284);
	op_stkvar	(x,	1);
	create_insn	(x=0X38287);
	op_hex		(x,	1);
	create_insn	(x=0X38289);
	op_hex		(x,	1);
	create_insn	(x=0X3828B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3828E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38291);
	op_stkvar	(x,	0);
	create_insn	(x=0X38294);
	op_stkvar	(x,	1);
	create_insn	(x=0X3829B);
	op_stkvar	(x,	1);
	create_insn	(x=0X382A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X382A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X382A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X382B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X382B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X382B6);
	op_hex		(x,	1);
	create_insn	(x=0X382BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X382BF);
	op_stkvar	(x,	1);
	create_insn	(0X382D2);
	create_insn	(x=0X382D5);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_insn	(x=0X382DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X382E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X382E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X382F0);
	op_hex		(x,	1);
	create_insn	(x=0X382F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X382F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X382F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X382FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X38308);
	op_hex		(x,	1);
	create_insn	(x=0X3830B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38313);
	op_hex		(x,	1);
	create_insn	(x=0X38315);
	op_hex		(x,	1);
	create_insn	(x=0X38317);
	op_stkvar	(x,	1);
	create_insn	(x=0X3831A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38323);
	op_hex		(x,	1);
	create_insn	(x=0X38326);
	op_stkvar	(x,	0);
	create_insn	(x=0X38329);
	op_stkvar	(x,	0);
	create_insn	(x=0X3832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3832F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38332);
	op_stkvar	(x,	0);
	create_insn	(x=0X38335);
	op_stkvar	(x,	0);
	create_insn	(x=0X38338);
	op_stkvar	(x,	1);
	create_insn	(x=0X3833D);
	op_stkvar	(x,	0);
	create_insn	(x=0X38340);
	op_stkvar	(x,	0);
	create_insn	(x=0X38347);
	op_hex		(x,	1);
	create_insn	(x=0X3834A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3834E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38351);
	op_stkvar	(x,	1);
	create_insn	(x=0X38354);
	op_stkvar	(x,	0);
	create_insn	(x=0X3835C);
	op_stkvar	(x,	0);
	create_insn	(x=0X38362);
	op_stkvar	(x,	0);
	create_insn	(x=0X38368);
	op_stkvar	(x,	0);
	create_insn	(x=0X3836B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3836E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38374);
	op_stkvar	(x,	0);
	create_insn	(x=0X38379);
	op_stkvar	(x,	0);
	create_insn	(x=0X3837E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3838B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3838E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38391);
	op_stkvar	(x,	1);
	create_insn	(x=0X38394);
	op_hex		(x,	1);
	create_insn	(x=0X3839A);
	op_stkvar	(x,	0);
	create_word	(x=0X383A0);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383A2);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383A4);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383A6);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383A8);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383AA);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383AC);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383AE);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383B0);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383B2);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383B4);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383B6);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383B8);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383BA);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383BC);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383BE);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383C0);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_word	(x=0X383C2);
	op_plain_offset	(x,	0,	0X370D0);
	op_plain_offset	(x,	128,	0X370D0);
	create_insn	(0X383C4);
	create_insn	(x=0X383C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X383C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X383CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X383D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X383D7);
	op_hex		(x,	1);
	create_insn	(x=0X383D9);
	op_hex		(x,	1);
	create_insn	(x=0X383DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X383DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X383E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X383EA);
	op_hex		(x,	1);
	create_insn	(x=0X383ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X383F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X383F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X383F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X383F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38402);
	op_hex		(x,	1);
	create_insn	(x=0X38405);
	op_stkvar	(x,	1);
	create_insn	(x=0X38408);
	op_stkvar	(x,	1);
	create_insn	(x=0X3840B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3840E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38411);
	op_stkvar	(x,	0);
	create_insn	(x=0X38419);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3841E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38421);
	op_stkvar	(x,	1);
	create_insn	(x=0X38424);
	op_stkvar	(x,	1);
	create_insn	(x=0X38431);
	op_hex		(x,	1);
	set_cmt	(0X38434,	"ax = 1, found hdr1 at the counter index",	0);
	create_insn	(x=0X3843B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3843F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38445);
	op_stkvar	(x,	0);
	create_insn	(x=0X3844A);
	op_hex		(x,	1);
	create_insn	(x=0X3844C);
	op_hex		(x,	1);
	create_insn	(x=0X3844F);
	op_stkvar	(x,	0);
	create_insn	(x=0X38452);
	op_stkvar	(x,	1);
	create_insn	(x=0X38458);
	op_stkvar	(x,	0);
	create_insn	(x=0X3845B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3845E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3846C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3846F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38476);
	op_stkvar	(x,	1);
	create_insn	(x=0X3847B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3847E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38486);
	op_hex		(x,	1);
	create_insn	(x=0X38489);
	op_stkvar	(x,	0);
	create_insn	(x=0X3848C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3848F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38493);
	op_stkvar	(x,	0);
	create_insn	(x=0X3849E);
	op_hex		(x,	1);
	create_insn	(x=0X384A8);
	op_hex		(x,	1);
	create_insn	(x=0X384AA);
	op_hex		(x,	1);
	create_insn	(x=0X384AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X384AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X384B8);
	op_hex		(x,	1);
	create_insn	(x=0X384BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X384BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X384C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X384C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X384C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X384CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X384CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X384D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X384D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X384DC);
	op_hex		(x,	1);
	create_insn	(x=0X384DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X384E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X384EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X384EE);
	op_stkvar	(x,	0);
	create_insn	(0X384F4);
	create_insn	(0X384FA);
	set_name	(0X384FA,	"audioresource_get_dword");
	create_insn	(x=0X384FD);
	op_hex		(x,	1);
	create_insn	(x=0X38500);
	op_stkvar	(x,	1);
	create_insn	(x=0X3850A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3850D);
	op_stkvar	(x,	0);
	create_insn	(0X38514);
	set_name	(0X38514,	"audioresource_get_word");
	create_insn	(x=0X38517);
	op_hex		(x,	1);
	create_insn	(x=0X3851A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38520);
	op_stkvar	(x,	0);
	create_insn	(0X38528);
	set_name	(0X38528,	"audioresource_copy_4_bytes");
	create_insn	(x=0X3852B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3852E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38534);
	op_stkvar	(x,	1);
	create_insn	(x=0X38537);
	op_stkvar	(x,	0);
	create_insn	(x=0X3853D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38540);
	op_stkvar	(x,	0);
	create_insn	(x=0X38546);
	op_stkvar	(x,	1);
	create_insn	(x=0X38549);
	op_stkvar	(x,	0);
	create_insn	(x=0X3854F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38552);
	op_stkvar	(x,	0);
	create_insn	(x=0X38558);
	op_stkvar	(x,	1);
	create_insn	(x=0X3855B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38561);
	op_stkvar	(x,	1);
	create_insn	(x=0X38567);
	op_stkvar	(x,	1);
	create_insn	(0X38570);
	create_insn	(x=0X38573);
	op_hex		(x,	1);
	create_insn	(x=0X38593);
	op_hex		(x,	1);
	create_insn	(x=0X385A9);
	op_hex		(x,	1);
	create_insn	(x=0X385CD);
	op_hex		(x,	1);
	create_insn	(x=0X385E9);
	op_hex		(x,	1);
	create_insn	(x=0X3861F);
	op_hex		(x,	1);
	create_insn	(0X3863C);
	set_name	(0X3863C,	"audiodriver_timer");
	create_insn	(x=0X3863D);
	op_seg		(x,	1);
	create_insn	(0X3867C);
	create_insn	(0X3868A);
	create_insn	(x=0X3868D);
	op_hex		(x,	1);
	create_insn	(x=0X38691);
	op_seg		(x,	1);
	create_insn	(x=0X3869E);
	op_stkvar	(x,	1);
	create_insn	(x=0X386A8);
	op_hex		(x,	1);
	create_insn	(x=0X386AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X386B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X386CA);
	op_stkvar	(x,	0);
	create_insn	(0X386D0);
	create_insn	(0X386D6);
	create_insn	(x=0X386D9);
	op_hex		(x,	1);
	create_insn	(x=0X386DD);
	op_seg		(x,	1);
	create_insn	(x=0X386E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X386E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X386F0);
	op_hex		(x,	1);
	create_insn	(x=0X386F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X386F6);
	op_stkvar	(x,	0);
	create_insn	(0X38702);
	create_insn	(x=0X38705);
	op_hex		(x,	1);
	create_insn	(x=0X3870B);
	op_seg		(x,	1);
	create_insn	(x=0X38710);
	op_stkvar	(x,	0);
	create_insn	(x=0X38717);
	op_stkvar	(x,	1);
	create_insn	(x=0X3871D);
	op_stkvar	(x,	0);
	create_insn	(0X3872D);
	create_insn	(0X38737);
	create_insn	(0X38742);
	create_insn	(0X3874C);
	create_insn	(x=0X38759);
	op_hex		(x,	1);
	create_insn	(x=0X3875C);
	op_stkvar	(x,	1);
	create_insn	(0X38770);
	create_insn	(x=0X38773);
	op_stkvar	(x,	0);
	create_insn	(0X38784);
	create_insn	(x=0X38787);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(x=0X3878C);
	op_stkvar	(x,	1);
	create_insn	(x=0X38798);
	op_hex		(x,	1);
	create_insn	(x=0X3879C);
	op_hex		(x,	1);
	create_insn	(x=0X3879E);
	op_hex		(x,	1);
	create_insn	(0X387B2);
	create_insn	(x=0X387B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X387BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X387C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X387C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X387CF);
	op_hex		(x,	1);
	create_insn	(x=0X387D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X387D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X387DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X387E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X387E3);
	op_hex		(x,	1);
	create_insn	(0X387EA);
	create_insn	(x=0X38801);
	op_stkvar	(x,	0);
	create_insn	(x=0X38804);
	op_stkvar	(x,	0);
	create_insn	(x=0X38807);
	op_stkvar	(x,	0);
	create_insn	(x=0X3880E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38811);
	op_stkvar	(x,	1);
	create_insn	(x=0X3881C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3882A);
	op_hex		(x,	1);
	create_insn	(x=0X3882E);
	op_hex		(x,	1);
	create_insn	(x=0X38830);
	op_hex		(x,	1);
	create_insn	(x=0X38844);
	op_stkvar	(x,	1);
	create_insn	(x=0X38854);
	op_stkvar	(x,	0);
	create_insn	(x=0X38857);
	op_stkvar	(x,	0);
	create_insn	(x=0X3885A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3885D);
	op_stkvar	(x,	0);
	create_insn	(x=0X38864);
	op_hex		(x,	1);
	create_insn	(x=0X38875);
	op_stkvar	(x,	0);
	create_insn	(x=0X38878);
	op_stkvar	(x,	0);
	create_insn	(x=0X38880);
	op_hex		(x,	1);
	create_insn	(x=0X38886);
	op_stkvar	(x,	1);
	create_insn	(x=0X388A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X388A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X388AF);
	op_hex		(x,	1);
	create_insn	(x=0X388B2);
	op_stkvar	(x,	1);
	create_insn	(0X388C5);
	create_insn	(x=0X388CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X388D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X388D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X388DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X388DE);
	op_hex		(x,	1);
	create_insn	(x=0X388FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X38901);
	op_stkvar	(x,	0);
	create_insn	(x=0X38904);
	op_stkvar	(x,	0);
	create_insn	(x=0X38907);
	op_hex		(x,	1);
	create_insn	(x=0X3890A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38927);
	op_stkvar	(x,	0);
	create_insn	(x=0X3892A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3892D);
	op_stkvar	(x,	0);
	create_insn	(x=0X38930);
	op_hex		(x,	1);
	create_insn	(x=0X38936);
	op_stkvar	(x,	0);
	create_insn	(x=0X3893F);
	op_stkvar	(x,	1);
	create_insn	(x=0X38952);
	op_stkvar	(x,	1);
	create_insn	(x=0X38958);
	op_stkvar	(x,	0);
	create_insn	(0X38962);
	create_insn	(x=0X38966);
	op_stkvar	(x,	1);
	create_insn	(x=0X3896C);
	op_stkvar	(x,	0);
	create_insn	(x=0X38973);
	op_hex		(x,	1);
	create_insn	(x=0X3897A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3897D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38986);
	op_stkvar	(x,	1);
	create_insn	(x=0X38989);
	op_stkvar	(x,	1);
	create_insn	(x=0X38992);
	op_stkvar	(x,	1);
	create_insn	(x=0X3899D);
	op_hex		(x,	1);
	create_insn	(x=0X389A1);
	op_hex		(x,	1);
	create_insn	(x=0X389A3);
	op_hex		(x,	1);
	create_insn	(x=0X389AE);
	op_hex		(x,	1);
	create_insn	(x=0X389B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X389C0);
	op_stkvar	(x,	1);
	create_insn	(0X389CC);
	create_insn	(x=0X389D7);
	op_hex		(x,	1);
	create_insn	(x=0X389D9);
	op_hex		(x,	1);
	create_insn	(x=0X389F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X389FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X38A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X38A07);
	op_stkvar	(x,	1);
	create_insn	(0X38A10);
	create_insn	(x=0X38A14);
	op_stkvar	(x,	0);
	create_word	(x=0X38A1E);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A20);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A22);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A24);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A26);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A28);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A2A);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A2C);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A2E);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A30);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A32);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A34);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A36);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A38);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A3A);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A3C);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A3E);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38A40);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(0X38A42);
	create_insn	(0X38A44);
	create_insn	(x=0X38A4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X38A54);
	op_hex		(x,	1);
	create_insn	(x=0X38A59);
	op_stkvar	(x,	0);
	create_insn	(x=0X38A64);
	op_hex		(x,	1);
	create_insn	(x=0X38A67);
	op_stkvar	(x,	1);
	create_insn	(0X38A74);
	create_insn	(x=0X38A81);
	op_hex		(x,	1);
	create_insn	(x=0X38A84);
	op_stkvar	(x,	1);
	create_insn	(0X38A98);
	create_insn	(0X38AA8);
	create_insn	(x=0X38AAC);
	op_seg		(x,	1);
	create_insn	(0X38AC4);
	create_insn	(x=0X38AC9);
	op_seg		(x,	1);
	create_insn	(x=0X38ACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X38AD1);
	op_hex		(x,	1);
	create_insn	(x=0X38AD5);
	op_hex		(x,	1);
	create_insn	(x=0X38AD7);
	op_hex		(x,	1);
	create_insn	(x=0X38AD9);
	op_stkvar	(x,	1);
	create_insn	(0X38AEA);
	create_insn	(x=0X38AED);
	op_hex		(x,	1);
	create_insn	(x=0X38AF3);
	op_seg		(x,	1);
	create_insn	(x=0X38AFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B01);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B04);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B19);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B25);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B38);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B41);
	op_hex		(x,	1);
	create_insn	(x=0X38B44);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B55);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B58);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B63);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B66);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38B7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B82);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B91);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B94);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B97);
	op_stkvar	(x,	0);
	create_insn	(x=0X38B9A);
	op_hex		(x,	1);
	create_insn	(x=0X38B9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X38BA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X38BA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38BB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X38BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X38BBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X38BC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X38BCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X38BCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X38BE0);
	op_stkvar	(x,	0);
	create_insn	(0X38BEA);
	create_insn	(x=0X38BED);
	op_hex		(x,	1);
	create_insn	(x=0X38BF1);
	op_seg		(x,	1);
	create_insn	(x=0X38BF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38BFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C02);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X38C09);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X38C0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C11);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C16);
	op_hex		(x,	1);
	create_insn	(x=0X38C1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C21);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C41);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C44);
	op_hex		(x,	1);
	create_insn	(0X38C4C);
	set_name	(0X38C4C,	"audio_unk2");
	create_insn	(x=0X38C4F);
	op_hex		(x,	1);
	create_insn	(x=0X38C55);
	op_seg		(x,	1);
	create_insn	(x=0X38C5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C60);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X38C63);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C75);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C83);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C86);
	op_stkvar	(x,	0);
	create_insn	(x=0X38C89);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X38C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C93);
	op_stkvar	(x,	1);
	create_insn	(x=0X38C98);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CB0);
	op_hex		(x,	1);
	create_insn	(x=0X38CC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X38CD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X38CE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X38CED);
	op_hex		(x,	1);
	create_insn	(0X38CF8);
	create_insn	(x=0X38CFB);
	op_hex		(x,	1);
	create_insn	(x=0X38D01);
	op_seg		(x,	1);
	create_insn	(x=0X38D09);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D11);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D1C);
	op_stkvar	(x,	1);
	create_insn	(0X38D30);
	create_insn	(x=0X38D33);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D3B);
	op_hex		(x,	1);
	create_insn	(x=0X38D4A);
	op_stkvar	(x,	0);
	create_insn	(0X38D5B);
	create_insn	(x=0X38D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D64);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D71);
	op_stkvar	(x,	1);
	create_insn	(x=0X38D76);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D79);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D91);
	op_stkvar	(x,	0);
	create_insn	(x=0X38D94);
	op_hex		(x,	1);
	create_insn	(x=0X38DA7);
	op_stkvar	(x,	0);
	create_insn	(0X38DAC);
	create_insn	(x=0X38DAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X38DB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X38DB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X38DD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X38DD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X38DD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X38DDB);
	op_hex		(x,	1);
	create_insn	(0X38DE6);
	create_insn	(x=0X38DE9);
	op_hex		(x,	1);
	create_insn	(x=0X38DEE);
	op_seg		(x,	1);
	create_insn	(x=0X38DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X38DFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X38E07);
	op_stkvar	(x,	0);
	create_insn	(x=0X38E0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X38E0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X38E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38E2D);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(x=0X38E39);
	op_stkvar	(x,	0);
	create_insn	(x=0X38E3C);
	op_stkvar	(x,	0);
	create_insn	(0X38E42);
	create_insn	(0X38E4C);
	create_insn	(0X38E56);
	create_insn	(0X38E60);
	create_insn	(0X38E6A);
	create_insn	(0X38E74);
	create_word	(x=0X38E7E);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E80);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E82);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E84);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E86);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E88);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E8A);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E8C);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E8E);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E90);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E92);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E94);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E96);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E98);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E9A);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X38E9C);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(x=0X38E9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X38EA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X38EB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X38EB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X38EB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X38EBD);
	op_hex		(x,	1);
	create_insn	(x=0X38EC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X38ECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X38ED1);
	op_stkvar	(x,	0);
	create_insn	(x=0X38ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X38ED9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X38EE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38EFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X38EFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X38F0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X38F0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X38F12);
	op_stkvar	(x,	0);
	create_insn	(x=0X38F15);
	op_hex		(x,	1);
	create_insn	(x=0X38F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X38F1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X38F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X38F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X38F4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X38F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FE1);
	op_hex		(x,	1);
	create_insn	(x=0X38FEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X38FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X38FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X39001);
	op_stkvar	(x,	1);
	create_insn	(x=0X39009);
	op_stkvar	(x,	1);
	create_insn	(x=0X39015);
	op_stkvar	(x,	0);
	create_insn	(x=0X39018);
	op_stkvar	(x,	0);
	create_insn	(x=0X3901B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3902E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39031);
	op_stkvar	(x,	0);
	create_insn	(x=0X39034);
	op_stkvar	(x,	0);
	create_insn	(x=0X39037);
	op_hex		(x,	1);
	create_insn	(x=0X3903A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3903D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39043);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X39047);
	op_stkvar	(x,	1);
	create_insn	(0X39050);
	create_insn	(x=0X39054);
	op_seg		(x,	1);
	create_insn	(x=0X3905E);
	op_stkvar	(x,	1);
	create_insn	(x=0X39076);
	op_stkvar	(x,	0);
	create_insn	(x=0X39081);
	op_hex		(x,	1);
	create_insn	(0X39088);
	create_insn	(x=0X3908B);
	op_hex		(x,	1);
	create_insn	(x=0X39090);
	op_seg		(x,	1);
	create_insn	(x=0X39098);
	op_stkvar	(x,	1);
	create_insn	(x=0X3909D);
	op_stkvar	(x,	0);
	create_insn	(x=0X390B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X390B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X390BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X390BE);
	op_hex		(x,	1);
	create_insn	(0X390C8);
	create_insn	(x=0X390CB);
	op_hex		(x,	1);
	create_insn	(x=0X390D1);
	op_seg		(x,	1);
	create_insn	(0X390FE);
	create_insn	(0X39108);
	create_insn	(0X39122);
	create_insn	(0X39194);
	create_insn	(0X3919D);
	create_insn	(x=0X391C3);
	op_hex		(x,	1);
	create_insn	(x=0X391E6);
	op_hex		(x,	1);
	create_insn	(0X391F0);
	create_insn	(0X39200);
	create_insn	(0X39211);
	create_insn	(0X39254);
	create_insn	(0X392BF);
	create_insn	(x=0X392EE);
	op_hex		(x,	1);
	create_insn	(x=0X39308);
	op_hex		(x,	1);
	create_byte	(0X3930E);
	make_array	(0X3930E,	0X2);
	create_byte	(0X39310);
	create_insn	(0X39311);
	create_insn	(0X39317);
	create_insn	(x=0X3933A);
	op_hex		(x,	1);
	create_insn	(0X39344);
	create_insn	(0X39355);
	create_byte	(0X39384);
	make_array	(0X39384,	0X2);
	create_insn	(0X39386);
	create_insn	(0X393FB);
	create_insn	(0X3941B);
	create_insn	(0X39428);
	create_insn	(0X39431);
	create_insn	(0X39445);
	create_insn	(0X39452);
	create_insn	(0X3945A);
	create_insn	(x=0X3945D);
	op_hex		(x,	1);
	create_insn	(x=0X39463);
	op_seg		(x,	1);
	create_insn	(x=0X39468);
	op_stkvar	(x,	1);
	create_insn	(x=0X3946B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3946E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39471);
	op_stkvar	(x,	0);
	create_insn	(x=0X39474);
	op_stkvar	(x,	1);
	create_insn	(x=0X39480);
	op_stkvar	(x,	1);
	create_insn	(x=0X39488);
	op_hex		(x,	1);
	create_insn	(x=0X39496);
	op_hex		(x,	1);
	create_insn	(x=0X39498);
	op_hex		(x,	1);
	create_insn	(x=0X394A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X394AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X394AD);
	op_hex		(x,	1);
	create_insn	(x=0X394B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X394B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X394B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X394C2);
	op_stkvar	(x,	0);
	create_insn	(0X394D2);
	create_insn	(x=0X394D5);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(x=0X394DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X394DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X394EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X394EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X394F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X394F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X394FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X394FF);
	op_hex		(x,	1);
	create_insn	(x=0X39512);
	op_stkvar	(x,	1);
	create_insn	(x=0X39515);
	op_stkvar	(x,	0);
	create_insn	(x=0X39518);
	op_stkvar	(x,	1);
	create_insn	(x=0X39520);
	op_stkvar	(x,	0);
	create_insn	(x=0X39523);
	op_stkvar	(x,	0);
	create_insn	(x=0X3952A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3952D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39530);
	op_stkvar	(x,	0);
	create_insn	(x=0X3953A);
	op_stkvar	(x,	0);
	create_insn	(x=0X39542);
	op_hex		(x,	1);
	create_insn	(x=0X39545);
	op_stkvar	(x,	1);
	create_insn	(x=0X3954E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39554);
	op_stkvar	(x,	1);
	create_insn	(x=0X39557);
	op_stkvar	(x,	1);
	create_insn	(x=0X3955A);
	op_stkvar	(x,	0);
	create_insn	(x=0X39566);
	op_stkvar	(x,	1);
	create_insn	(x=0X39569);
	op_stkvar	(x,	1);
	create_insn	(x=0X3956C);
	op_stkvar	(x,	0);
	create_insn	(x=0X39575);
	op_stkvar	(x,	1);
	create_insn	(x=0X39578);
	op_stkvar	(x,	0);
	create_insn	(0X3958A);
	create_insn	(x=0X3958B);
	op_stkvar	(x,	0);
	create_insn	(x=0X39593);
	op_hex		(x,	1);
	create_insn	(x=0X39596);
	op_stkvar	(x,	1);
	create_insn	(x=0X395A1);
	op_stkvar	(x,	0);
	create_word	(x=0X395A8);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395AA);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395AC);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395AE);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395B0);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395B2);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395B4);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395B6);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395B8);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395BA);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395BC);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395BE);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395C0);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395C2);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395C4);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395C6);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395C8);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_word	(x=0X395CA);
	op_plain_offset	(x,	0,	0X38630);
	op_plain_offset	(x,	128,	0X38630);
	create_insn	(x=0X395CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X395D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X395D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X395DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X395DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X395E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X395F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X395FC);
	op_hex		(x,	1);
	create_insn	(x=0X3960B);
	op_hex		(x,	1);
	create_insn	(x=0X3960D);
	op_hex		(x,	1);
	create_insn	(x=0X3961D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39620);
	op_stkvar	(x,	0);
	create_insn	(x=0X39623);
	op_hex		(x,	1);
	create_insn	(x=0X39629);
	op_stkvar	(x,	1);
	create_insn	(x=0X3962C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3962F);
	op_stkvar	(x,	1);
	create_insn	(0X3963C);
	create_insn	(x=0X3963F);
	op_hex		(x,	1);
	create_insn	(x=0X39645);
	op_seg		(x,	1);
	create_insn	(x=0X3964A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3966D);
	op_hex		(x,	1);
	create_insn	(x=0X39673);
	op_stkvar	(x,	0);
	create_insn	(x=0X3967B);
	op_stkvar	(x,	0);
	create_insn	(x=0X39680);
	op_stkvar	(x,	0);
	create_insn	(0X3968A);
	create_insn	(x=0X3968D);
	op_hex		(x,	1);
	create_insn	(x=0X39691);
	op_seg		(x,	1);
	create_insn	(x=0X39696);
	op_stkvar	(x,	1);
	create_insn	(x=0X396BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X396BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X396C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X396C3);
	op_hex		(x,	1);
	create_insn	(x=0X396C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X396DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X396E6);
	op_stkvar	(x,	1);
	create_insn	(0X396F2);
	create_insn	(0X39700);
	create_insn	(x=0X39703);
	op_hex		(x,	1);
	create_insn	(x=0X39708);
	op_seg		(x,	1);
	create_insn	(x=0X3970D);
	op_stkvar	(x,	0);
	create_insn	(x=0X39716);
	op_stkvar	(x,	1);
	create_insn	(x=0X39723);
	op_stkvar	(x,	1);
	create_insn	(x=0X39743);
	op_stkvar	(x,	1);
	create_insn	(x=0X3974D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39754);
	op_stkvar	(x,	1);
	create_insn	(x=0X3975D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39780);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X39784);
	op_stkvar	(x,	0);
	create_insn	(x=0X39787);
	op_stkvar	(x,	1);
	create_insn	(x=0X3979A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3979D);
	op_stkvar	(x,	0);
	create_insn	(x=0X397A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X397A3);
	op_hex		(x,	1);
	create_insn	(x=0X397A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X397AD);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X397B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X397BE);
	op_stkvar	(x,	1);
	create_insn	(0X397CE);
	create_insn	(x=0X397E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X39804);
	op_stkvar	(x,	1);
	create_insn	(x=0X3980D);
	op_hex		(x,	1);
	create_byte	(0X3981C);
	make_array	(0X3981C,	0X2);
	create_insn	(x=0X3981E);
	op_stkvar	(x,	1);
	create_insn	(0X39828);
	create_insn	(x=0X39838);
	op_stkvar	(x,	1);
	create_insn	(x=0X39841);
	op_hex		(x,	1);
	create_insn	(0X39850);
	create_insn	(x=0X39853);
	op_stkvar	(x,	1);
	create_insn	(x=0X3985D);
	op_stkvar	(x,	1);
	create_insn	(0X3986C);
	create_insn	(x=0X39880);
	op_stkvar	(x,	1);
	create_insn	(x=0X39894);
	op_hex		(x,	1);
	create_insn	(x=0X39897);
	op_stkvar	(x,	1);
	create_insn	(x=0X3989E);
	op_stkvar	(x,	1);
	create_insn	(x=0X398A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X398C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X398C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X398C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X398CA);
	op_hex		(x,	1);
	create_insn	(x=0X398CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X398D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X398DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X398E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X398F8);
	op_hex		(x,	1);
	create_insn	(x=0X398FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X39904);
	op_stkvar	(x,	0);
	create_insn	(x=0X39907);
	op_stkvar	(x,	0);
	create_insn	(x=0X39913);
	op_stkvar	(x,	1);
	create_insn	(0X39929);
	create_insn	(x=0X3993B);
	op_stkvar	(x,	1);
	create_insn	(0X39946);
	create_insn	(x=0X39954);
	op_stkvar	(x,	0);
	create_insn	(x=0X39957);
	op_stkvar	(x,	0);
	create_insn	(x=0X3995A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3995D);
	op_hex		(x,	1);
	create_insn	(0X39966);
	set_name	(0X39966,	"audio_driver_func1E");
	create_insn	(x=0X39969);
	op_hex		(x,	1);
	create_insn	(x=0X3996F);
	op_seg		(x,	1);
	create_insn	(x=0X3997E);
	op_stkvar	(x,	0);
	create_insn	(0X3998F);
	create_insn	(x=0X39992);
	op_stkvar	(x,	0);
	create_insn	(x=0X39997);
	op_stkvar	(x,	0);
	create_insn	(x=0X3999C);
	op_stkvar	(x,	0);
	create_insn	(x=0X399A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X399A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X399AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X399BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X399C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X399C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X399C6);
	op_hex		(x,	1);
	create_insn	(x=0X399C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X399CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X399DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X399E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X399E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X399ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X399FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A07);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A0D);
	op_stkvar	(x,	0);
	create_insn	(0X39A15);
	create_insn	(x=0X39A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A21);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A38);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A41);
	op_hex		(x,	1);
	create_insn	(x=0X39A44);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A54);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A59);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A65);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A79);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A85);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A89);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A93);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X39A99);
	op_stkvar	(x,	0);
	create_insn	(x=0X39A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X39AA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X39AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X39AA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X39AAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X39AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X39ABB);
	op_stkvar	(x,	1);
	create_insn	(x=0X39ABF);
	op_stkvar	(x,	0);
	make_array	(0X39AD1,	0X3);
	update_extra_cmt		(0X39AD4,	E_PREV + 0,	"compares two 4 bytes optionally case sensitive chunk names");
	update_extra_cmt		(0X39AD4,	E_PREV + 1,	"returns 1 if the chunk names are equal, 0 if not");
	create_insn	(0X39AD4);
	set_name	(0X39AD4,	"audioresource_compare_chunknames");
	create_insn	(x=0X39AD7);
	op_hex		(x,	1);
	create_insn	(x=0X39ADC);
	op_stkvar	(x,	0);
	create_insn	(x=0X39AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X39AE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X39AE8);
	op_stkvar	(x,	1);
	set_cmt	(0X39AEF,	"goto end",	0);
	create_insn	(x=0X39AF1);
	op_stkvar	(x,	1);
	set_cmt	(0X39AF8,	"goto end",	0);
	set_cmt	(0X39AFE,	"al = arg_foundname[]",	0);
	create_insn	(x=0X39B01);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B0B);
	op_stkvar	(x,	0);
	create_byte	(0X39B14);
	make_array	(0X39B14,	0X2);
	create_insn	(0X39B16);
	create_insn	(x=0X39B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B28);
	op_hex		(x,	1);
	create_insn	(x=0X39B2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B34);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B3C);
	op_hex		(x,	1);
	create_insn	(x=0X39B3F);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B44);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B47);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B4D);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X39B5A,	E_PREV + 0,	"returns the index of a specified 4 byte chunk name in an array of 4 bytes chunk names");
	create_insn	(0X39B5A);
	set_name	(0X39B5A,	"audioresource_get_chunk_index");
	create_insn	(x=0X39B5D);
	op_hex		(x,	1);
	create_insn	(x=0X39B62);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B66);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B71);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B74);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B77);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X39B89);
	op_stkvar	(x,	0);
	set_cmt	(0X39B93,	"point at next chunk name",	0);
	update_extra_cmt		(0X39B93,	E_PREV + 0,	"; loops 4 times - for each character in the chunk name");
	update_extra_cmt		(0X39B93,	E_PREV + 1,	"");
	create_insn	(x=0X39B93);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B96);
	op_stkvar	(x,	0);
	create_insn	(x=0X39B99);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X39BB2);
	op_hex		(x,	1);
	set_cmt	(0X39BB7,	"if ax = 0, then try next",	0);
	create_insn	(x=0X39BBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X39BC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X39BD0);
	op_stkvar	(x,	0);
	create_insn	(0X39BDC);
	set_name	(0X39BDC,	"audioresource_find");
	create_insn	(x=0X39BDF);
	op_hex		(x,	1);
	create_insn	(x=0X39BE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X39BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X39BF9);
	op_stkvar	(x,	1);
	set_cmt	(0X39C00,	"read a word from songfile+4 = number of (sub)chunks?",	0);
	create_insn	(x=0X39C03);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C12);
	op_stkvar	(x,	1);
	set_cmt	(0X39C16,	"songfile+6 = chunknames",	0);
	create_insn	(x=0X39C17);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C24);
	op_hex		(x,	1);
	create_insn	(x=0X39C27);
	op_stkvar	(x,	0);
	set_cmt	(0X39C2C,	"-1 = not found",	0);
	create_insn	(x=0X39C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C31);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C37);
	op_hex		(x,	1);
	create_insn	(x=0X39C39);
	op_hex		(x,	1);
	create_insn	(x=0X39C3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C40);
	op_hex		(x,	1);
	create_insn	(x=0X39C42);
	op_hex		(x,	1);
	set_cmt	(0X39C49,	"ax = chunkofs + 6 + (chunkindex << 2) + (numchunk << 2)",	0);
	create_insn	(x=0X39C49);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C4C);
	op_stkvar	(x,	0);
	set_cmt	(0X39C51,	"read dword from the audio resource buffer",	0);
	create_insn	(x=0X39C56);
	op_hex		(x,	1);
	create_insn	(x=0X39C59);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C62);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C65);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C6E);
	op_stkvar	(x,	1);
	set_cmt	(0X39C74,	"ax = chunkofs + 6 + readdword + (numchunks << 3)",	0);
	create_insn	(x=0X39C74);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C77);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C7D);
	op_stkvar	(x,	1);
	create_insn	(0X39C84);
	set_name	(0X39C84,	"audioresource_copy_n_bytes");
	create_insn	(x=0X39C87);
	op_hex		(x,	1);
	create_insn	(x=0X39C8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C91);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C97);
	op_stkvar	(x,	1);
	create_insn	(x=0X39C9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X39C9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X39CA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X39CA5);
	op_stkvar	(x,	1);
	set_cmt	(0X39CB5,	"??",	0);
	create_insn	(x=0X39CB5);
	op_stkvar	(x,	0);
	set_cmt	(0X39CB8,	"??",	0);
	create_insn	(x=0X39CB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X39CBB);
	op_stkvar	(x,	1);
	set_cmt	(0X39CBE,	"??",	0);
	create_insn	(x=0X39CBE);
	op_stkvar	(x,	0);
	set_cmt	(0X39CC1,	"??",	0);
	create_insn	(x=0X39CC1);
	op_stkvar	(x,	0);
	create_byte	(0X39CCA);
	make_array	(0X39CCA,	0X2);
	create_byte	(0X39CCC);
	make_array	(0X39CCC,	0X2);
	create_insn	(0X39CCE);
	set_name	(0X39CCE,	"audio_make_filename");
	create_insn	(x=0X39CD1);
	op_hex		(x,	1);
	create_insn	(x=0X39CD6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39CDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X39CEB);
	op_hex		(x,	1);
	create_insn	(x=0X39CF7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X39CFA,	"char *",	0);
	create_insn	(x=0X39D00);
	op_hex		(x,	1);
	create_insn	(x=0X39D03);
	op_stkvar	(x,	0);
	create_insn	(x=0X39D0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X39D0D);
	op_stkvar	(x,	1);
	create_insn	(0X39D16);
	create_insn	(x=0X39D1B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X39D3A);
	op_hex		(x,	1);
	set_cmt	(0X39D46,	"char *",	0);
	create_insn	(x=0X39D46);
	op_stkvar	(x,	0);
	create_insn	(x=0X39D4E);
	op_hex		(x,	1);
	create_insn	(x=0X39D51);
	op_stkvar	(x,	0);
	create_insn	(x=0X39D58);
	op_stkvar	(x,	0);
	create_insn	(x=0X39D5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X39D60);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39D6A);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39D6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X39D89);
	op_hex		(x,	1);
	create_insn	(x=0X39D91);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39DA4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X39DAB);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39DBF);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39DC2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39DDE);
	op_hex		(x,	1);
	create_insn	(x=0X39DE6);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X39DE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X39E03);
	op_hex		(x,	1);
	create_insn	(x=0X39E0B);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(0X39E14);
	set_name	(0X39E14,	"file_load_shape2d_nofatal2");
	create_insn	(x=0X39E17);
	op_stkvar	(x,	0);
	create_insn	(x=0X39E1F);
	op_hex		(x,	1);
	create_insn	(0X39E24);
	set_name	(0X39E24,	"file_combine_and_find");
	create_insn	(x=0X39E27);
	op_hex		(x,	1);
	create_insn	(x=0X39E2A);
	op_stkvar	(x,	1);
	set_cmt	(0X39E2D,	"char *",	0);
	set_cmt	(0X39E2E,	"int",	0);
	create_insn	(x=0X39E2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39E31);
	op_stkvar	(x,	0);
	set_cmt	(0X39E34,	"char *",	0);
	create_insn	(x=0X39E34);
	op_stkvar	(x,	0);
	create_insn	(x=0X39E3C);
	op_hex		(x,	1);
	create_insn	(x=0X39E3F);
	op_stkvar	(x,	1);
	create_insn	(0X39E4C);
	set_name	(0X39E4C,	"file_find_next_alt");
	create_insn	(0X39E52);
	set_name	(0X39E52,	"nullsub_1");
	create_insn	(0X39E54);
	set_name	(0X39E54,	"nullsub_2");
	create_insn	(0X39E56);
	set_name	(0X39E56,	"init_main");
	create_insn	(x=0X39E59);
	op_hex		(x,	1);
	create_insn	(x=0X39E6D);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39E70);
	op_seg		(x,	1);
	create_insn	(x=0X39E7E);
	op_hex		(x,	1);
	create_insn	(x=0X39E81);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39E84);
	op_seg		(x,	1);
	create_insn	(x=0X39E89);
	op_hex		(x,	1);
	create_insn	(x=0X39E92);
	op_hex		(x,	1);
	create_insn	(x=0X39E95);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39E98);
	op_seg		(x,	1);
	create_insn	(x=0X39EA6);
	op_hex		(x,	1);
	create_insn	(x=0X39EA9);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39EAC);
	op_seg		(x,	1);
	create_insn	(x=0X39EBA);
	op_hex		(x,	1);
	create_insn	(x=0X39EBD);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39EC0);
	op_seg		(x,	1);
	create_insn	(x=0X39ECE);
	op_hex		(x,	1);
	create_insn	(x=0X39ED1);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39ED4);
	op_seg		(x,	1);
	create_insn	(x=0X39EE2);
	op_hex		(x,	1);
	create_insn	(x=0X39EE5);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39EE8);
	op_seg		(x,	1);
	create_insn	(x=0X39EF6);
	op_hex		(x,	1);
	create_insn	(x=0X39EF9);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39EFC);
	op_seg		(x,	1);
	create_insn	(x=0X39F0A);
	op_hex		(x,	1);
	create_insn	(x=0X39F0D);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X39F10);
	op_seg		(x,	1);
	create_insn	(x=0X39F1E);
	op_hex		(x,	1);
	create_insn	(x=0X39F48);
	op_chr		(x,	1);
	create_insn	(x=0X39F4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X39F51);
	op_stkvar	(x,	0);
	create_insn	(x=0X39F55);
	op_stkvar	(x,	0);
	create_insn	(x=0X39F5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X39F63);
	op_stkvar	(x,	0);
	create_insn	(x=0X39F6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X39F70);
	op_hex		(x,	1);
	create_insn	(x=0X39F76);
	op_stkvar	(x,	0);
	create_insn	(0X39F91);
	create_insn	(x=0X39F96);
	op_stkvar	(x,	1);
	create_insn	(x=0X39F9B);
	op_hex		(x,	1);
	create_insn	(x=0X39FA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X39FAC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X39FB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X39FB8);
	op_hex		(x,	1);
	create_insn	(x=0X39FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X39FCD);
	op_hex		(x,	1);
	create_insn	(x=0X39FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X39FE5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	op_hex		(x,	1);
	create_insn	(x=0X39FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X39FF1);
	op_hex		(x,	1);
	create_insn	(x=0X3A000);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A005);
	op_hex		(x,	1);
	create_insn	(x=0X3A022);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A027);
	op_hex		(x,	1);
	create_insn	(x=0X3A02B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A038);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A046);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A04B);
	op_hex		(x,	1);
	create_insn	(x=0X3A057);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A05E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A063);
	op_hex		(x,	1);
	create_insn	(x=0X3A072);
	op_stkvar	(x,	0);
	create_insn	(0X3A07A);
	create_insn	(x=0X3A07F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A0A1);
	op_hex		(x,	1);
	set_cmt	(0X3A0A6,	"int",	0);
	create_insn	(x=0X3A0A8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	set_cmt	(0X3A0AB,	"char *",	0);
	create_insn	(x=0X3A0B1);
	op_hex		(x,	1);
	create_insn	(x=0X3A0C6);
	op_hex		(x,	1);
	create_insn	(x=0X3A0C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A0D9);
	op_plain_offset	(x,	1,	0X274B0);
	op_plain_offset	(x,	129,	0X274B0);
	create_insn	(x=0X3A0DC);
	op_seg		(x,	1);
	create_insn	(x=0X3A0E6);
	op_hex		(x,	1);
	create_insn	(x=0X3A0F2);
	op_dec		(x,	1);
	create_insn	(x=0X3A0F9);
	op_dec		(x,	1);
	create_insn	(x=0X3A105);
	op_hex		(x,	1);
	create_insn	(x=0X3A117);
	op_hex		(x,	1);
	create_insn	(x=0X3A125);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A128);
	op_dec		(x,	1);
	create_insn	(x=0X3A12F);
	op_dec		(x,	1);
	create_insn	(x=0X3A13B);
	op_hex		(x,	1);
	create_insn	(x=0X3A140);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A145);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A14A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A14F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A156);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A159);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A160);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A169);
	op_hex		(x,	1);
	create_insn	(x=0X3A17B);
	op_hex		(x,	1);
	create_insn	(x=0X3A189);
	op_stkvar	(x,	0);
	create_insn	(0X3A190);
	create_insn	(x=0X3A197);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A19B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A1A4);
	op_hex		(x,	1);
	create_insn	(0X3A1AA);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_9(void) {
        auto x;
#define id x

	create_insn	(0X3A1B6);
	create_insn	(x=0X3A1BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A1C1);
	op_stkvar	(x,	0);
	create_insn	(0X3A1CE);
	create_insn	(x=0X3A1D4);
	op_stkvar	(x,	0);
	create_insn	(0X3A1E2);
	create_insn	(x=0X3A1E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A1F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A204);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A212);
	op_stkvar	(x,	0);
	create_insn	(0X3A226);
	create_insn	(x=0X3A253);
	op_hex		(x,	1);
	create_insn	(0X3A25C);
	set_name	(0X3A25C,	"random_wait");
	create_insn	(x=0X3A25F);
	op_hex		(x,	1);
	create_insn	(x=0X3A270);
	op_dec		(x,	1);
	create_insn	(x=0X3A280);
	op_dec		(x,	1);
	create_insn	(0X3A290);
	create_insn	(x=0X3A2A1);
	op_hex		(x,	1);
	create_insn	(0X3A2A8);
	create_insn	(0X3A2C0);
	set_name	(0X3A2C0,	"load_palandcursor");
	create_insn	(x=0X3A2C3);
	op_hex		(x,	1);
	create_insn	(x=0X3A2C8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A2D1);
	op_hex		(x,	1);
	create_insn	(x=0X3A2D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2DC);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A2E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2EA);
	op_hex		(x,	1);
	create_insn	(x=0X3A2ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A2FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A300);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A304);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A30D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A311);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A315);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A31D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A32E);
	op_hex		(x,	1);
	create_insn	(x=0X3A331);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A335);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A339);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A342);
	op_hex		(x,	1);
	create_insn	(x=0X3A345);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A349);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A34D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A358);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A360);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A364);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A368);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A371);
	op_hex		(x,	1);
	create_insn	(x=0X3A378);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A37C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A385);
	op_hex		(x,	1);
	create_insn	(x=0X3A393);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A397);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A3A0);
	op_hex		(x,	1);
	create_insn	(x=0X3A3AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A3B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A3C0);
	op_hex		(x,	1);
	create_insn	(x=0X3A3CA);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A3D3);
	op_hex		(x,	1);
	create_insn	(x=0X3A3D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A3DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A3EB);
	op_hex		(x,	1);
	create_insn	(x=0X3A3F2);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A3F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A3FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A403);
	op_hex		(x,	1);
	create_insn	(x=0X3A40D);
	op_hex		(x,	1);
	create_insn	(x=0X3A41D);
	op_hex		(x,	1);
	create_insn	(x=0X3A424);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3A428);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A42C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A435);
	op_hex		(x,	1);
	create_insn	(x=0X3A43F);
	op_hex		(x,	1);
	create_insn	(x=0X3A442);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A446);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A44F);
	op_hex		(x,	1);
	create_insn	(0X3A45C);
	set_name	(0X3A45C,	"get_0");
	create_insn	(0X3A460);
	set_name	(0X3A460,	"mmgr_alloc_resbytes");
	create_insn	(x=0X3A469);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A46C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A476);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A47E);
	op_hex		(x,	1);
	create_insn	(0X3A484);
	set_name	(0X3A484,	"mmgr_get_res_ofs_diff_scaled");
	create_insn	(x=0X3A48D);
	op_hex		(x,	1);
	create_insn	(x=0X3A48F);
	op_hex		(x,	1);
	create_insn	(0X3A496);
	set_name	(0X3A496,	"mmgr_get_chunk_size_bytes");
	create_insn	(x=0X3A499);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A49C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A4A4);
	op_hex		(x,	1);
	create_insn	(x=0X3A4AB);
	op_hex		(x,	1);
	create_insn	(x=0X3A4AD);
	op_hex		(x,	1);
	create_insn	(0X3A4B6);
	set_name	(0X3A4B6,	"read_line");
	create_insn	(x=0X3A4B9);
	op_hex		(x,	1);
	create_insn	(x=0X3A4C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A4E3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3A4EE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0X3A4FC,	"char *",	0);
	create_insn	(x=0X3A4FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A504);
	op_hex		(x,	1);
	set_cmt	(0X3A50A,	"char *",	0);
	create_insn	(x=0X3A50A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A512);
	op_hex		(x,	1);
	create_insn	(x=0X3A515);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A51A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A51D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A520);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A526);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A529);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A547);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A54A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A552);
	op_hex		(x,	1);
	create_insn	(x=0X3A560);
	op_hex		(x,	1);
	create_insn	(x=0X3A563);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A568);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A571);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A574);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A57C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A584);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A594);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A599);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A5AA);
	op_hex		(x,	1);
	create_insn	(x=0X3A5B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A5BD);
	op_stkvar	(x,	0);
	create_insn	(0X3A5CC);
	create_insn	(x=0X3A5D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A5D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A5E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A5F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A5F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A5FB);
	op_hex		(x,	1);
	create_insn	(x=0X3A5FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A604);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A60A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A611);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A618);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3A61E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A624);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3A62A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A638);
	op_stkvar	(x,	0);
	create_insn	(0X3A640);
	create_insn	(x=0X3A648);
	op_stkvar	(x,	0);
	create_insn	(0X3A65D);
	create_insn	(x=0X3A664);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A678);
	op_stkvar	(x,	0);
	set_cmt	(0X3A683,	"char *",	0);
	create_insn	(x=0X3A683);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A68B);
	op_hex		(x,	1);
	create_insn	(x=0X3A694);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A69F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6D4);
	op_stkvar	(x,	1);
	create_insn	(0X3A6E1);
	create_insn	(x=0X3A6E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A6F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A6F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A6FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A706);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A710);
	op_stkvar	(x,	0);
	create_insn	(0X3A720);
	create_insn	(x=0X3A72B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A730);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A733);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A73E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A741);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A748);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A751);
	op_stkvar	(x,	0);
	create_insn	(0X3A75A);
	create_insn	(x=0X3A75D);
	op_stkvar	(x,	0);
	create_insn	(0X3A765);
	create_insn	(x=0X3A769);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A76F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3A77B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A782);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A785);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A78B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A78E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A791);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A796);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A7C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A7CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A7DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A7ED);
	op_stkvar	(x,	0);
	create_insn	(0X3A7F6);
	set_name	(0X3A7F6,	"read_line_helper");
	create_insn	(x=0X3A7F9);
	op_hex		(x,	1);
	set_cmt	(0X3A806,	"char *",	0);
	create_insn	(0X3A806);
	create_insn	(x=0X3A80F);
	op_hex		(x,	1);
	set_cmt	(0X3A818,	"char *",	0);
	create_insn	(x=0X3A821);
	op_hex		(x,	1);
	create_insn	(x=0X3A838);
	op_hex		(x,	1);
	create_insn	(x=0X3A83B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A84B);
	op_hex		(x,	1);
	create_insn	(x=0X3A84E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A85E);
	op_hex		(x,	1);
	create_insn	(x=0X3A865);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A878);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A882);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A886);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A88E);
	op_hex		(x,	1);
	create_insn	(0X3A896);
	set_name	(0X3A896,	"read_line_helper2");
	create_insn	(x=0X3A899);
	op_hex		(x,	1);
	set_cmt	(0X3A8A6,	"char *",	0);
	create_insn	(0X3A8A6);
	create_insn	(x=0X3A8AF);
	op_hex		(x,	1);
	set_cmt	(0X3A8B6,	"char *",	0);
	create_insn	(x=0X3A8BF);
	op_hex		(x,	1);
	create_insn	(x=0X3A8D5);
	op_hex		(x,	1);
	set_cmt	(0X3A8DE,	"char *",	0);
	create_insn	(x=0X3A8E7);
	op_hex		(x,	1);
	create_insn	(x=0X3A8EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A8F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A8F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A90C);
	op_hex		(x,	1);
	create_insn	(x=0X3A91F);
	op_hex		(x,	1);
	create_insn	(x=0X3A922);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A928);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A92B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A943);
	op_stkvar	(x,	1);
	create_insn	(x=0X3A950);
	op_hex		(x,	1);
	create_insn	(0X3A958);
	set_name	(0X3A958,	"setup_mcgawnd1");
	create_insn	(x=0X3A965);
	op_dec		(x,	1);
	create_insn	(x=0X3A969);
	op_dec		(x,	1);
	create_insn	(x=0X3A972);
	op_hex		(x,	1);
	create_insn	(x=0X3A97C);
	op_plain_offset	(x,	1,	0X2EA20);
	op_plain_offset	(x,	129,	0X2EA20);
	create_insn	(x=0X3A97F);
	op_seg		(x,	1);
	create_insn	(x=0X3A989);
	op_hex		(x,	1);
	create_insn	(x=0X3A994);
	op_stroff	(x,	0,	GetStrucIdByName("SPRITE"),	0);
	create_insn	(x=0X3A99C);
	op_hex		(x,	1);
	create_insn	(0X3A9A0);
	set_name	(0X3A9A0,	"setup_mcgawnd2");
	create_insn	(x=0X3A9AD);
	op_dec		(x,	1);
	create_insn	(x=0X3A9B1);
	op_dec		(x,	1);
	create_insn	(x=0X3A9BA);
	op_hex		(x,	1);
	create_insn	(x=0X3A9D1);
	op_hex		(x,	1);
	create_insn	(0X3A9D6);
	set_name	(0X3A9D6,	"file_load_shape2d_fatal");
	create_insn	(x=0X3A9DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A9E4);
	op_hex		(x,	1);
	create_insn	(0X3A9EA);
	set_name	(0X3A9EA,	"file_load_shape2d_nofatal");
	create_insn	(x=0X3A9F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3A9F7);
	op_hex		(x,	1);
	create_insn	(0X3A9FC);
	set_name	(0X3A9FC,	"file_load_shape2d");
	create_insn	(x=0X3A9FF);
	op_hex		(x,	1);
	create_insn	(x=0X3AA04);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA07);
	op_stkvar	(x,	1);
	set_cmt	(0X3AA0A,	"char *",	0);
	create_insn	(x=0X3AA10);
	op_hex		(x,	1);
	create_insn	(x=0X3AA13);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA16);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA22);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA25);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA31);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA39);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA49);
	op_hex		(x,	1);
	create_insn	(x=0X3AA50);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA53);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA56);
	op_hex		(x,	1);
	create_insn	(x=0X3AA58);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AA61);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA64);
	op_stkvar	(x,	0);
	set_cmt	(0X3AA68,	"char *",	0);
	create_insn	(x=0X3AA6E);
	op_hex		(x,	1);
	create_insn	(x=0X3AA71);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA7A);
	op_hex		(x,	1);
	create_insn	(x=0X3AA7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA80);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AA87);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA92);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AA9B);
	op_hex		(x,	1);
	create_insn	(x=0X3AA9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AAA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AAA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AAAB);
	op_stkvar	(x,	1);
	set_cmt	(0X3AAAE,	"char *",	0);
	create_insn	(x=0X3AAB4);
	op_hex		(x,	1);
	create_insn	(x=0X3AAB7);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AABB);
	op_stkvar	(x,	1);
	set_cmt	(0X3AABE,	"char *",	0);
	create_insn	(x=0X3AAC4);
	op_hex		(x,	1);
	create_insn	(x=0X3AACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AAD7);
	op_hex		(x,	1);
	create_insn	(x=0X3AADA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AADD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AAE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AAED);
	op_hex		(x,	1);
	create_insn	(x=0X3AAF1);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AAFA);
	op_hex		(x,	1);
	create_insn	(x=0X3AAFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB00);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB05);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB08);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB10);
	op_hex		(x,	1);
	create_insn	(x=0X3AB13);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB16);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB1E);
	op_hex		(x,	1);
	create_insn	(x=0X3AB24);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AB28);
	op_stkvar	(x,	1);
	set_cmt	(0X3AB2B,	"char *",	0);
	create_insn	(x=0X3AB31);
	op_hex		(x,	1);
	create_insn	(x=0X3AB38);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AB44);
	op_hex		(x,	1);
	create_insn	(x=0X3AB47);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB50);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AB54);
	op_stkvar	(x,	1);
	set_cmt	(0X3AB57,	"char *",	0);
	create_insn	(x=0X3AB5D);
	op_hex		(x,	1);
	create_insn	(x=0X3AB67);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AB73);
	op_hex		(x,	1);
	create_insn	(x=0X3AB76);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB79);
	op_stkvar	(x,	0);
	create_insn	(0X3AB83);
	create_insn	(x=0X3AB87);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AB90);
	op_hex		(x,	1);
	create_insn	(x=0X3AB93);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB96);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AB9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABA6);
	op_hex		(x,	1);
	create_insn	(x=0X3ABA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABB4);
	op_hex		(x,	1);
	create_insn	(x=0X3ABB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABC2);
	op_dec		(x,	1);
	create_insn	(x=0X3ABC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABC8);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3ABCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABD7);
	op_hex		(x,	1);
	create_insn	(x=0X3ABDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ABF0);
	op_hex		(x,	1);
	create_insn	(x=0X3ABF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ABF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ABFF);
	op_hex		(x,	1);
	create_insn	(x=0X3AC02);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC05);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AC0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AC12);
	op_hex		(x,	1);
	create_insn	(x=0X3AC14);
	op_hex		(x,	1);
	create_insn	(x=0X3AC1C);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3AC20);
	op_stkvar	(x,	1);
	set_cmt	(0X3AC23,	"char *",	0);
	create_insn	(x=0X3AC29);
	op_hex		(x,	1);
	create_insn	(x=0X3AC30);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC33);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AC3C);
	op_hex		(x,	1);
	create_insn	(x=0X3AC3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC42);
	op_stkvar	(x,	0);
	create_insn	(0X3AC4C);
	create_insn	(x=0X3AC50);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC53);
	op_stkvar	(x,	1);
	create_insn	(0X3AC60);
	create_insn	(x=0X3AC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC70);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC78);
	op_hex		(x,	1);
	create_insn	(x=0X3AC7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC86);
	op_hex		(x,	1);
	create_insn	(x=0X3AC89);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC94);
	op_hex		(x,	1);
	create_insn	(x=0X3AC97);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AC9D);
	op_plain_offset	(x,	1,	0X3B770);
	op_plain_offset	(x,	129,	0X3B770);
	create_insn	(x=0X3ACA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ACAA);
	op_hex		(x,	1);
	create_insn	(0X3ACB0);
	set_name	(0X3ACB0,	"file_load_shape2d_palmap_init");
	create_insn	(x=0X3ACB3);
	op_hex		(x,	1);
	create_insn	(x=0X3ACB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ACBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ACBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ACC5);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_insn	(x=0X3ACC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ACCC);
	op_stkvar	(x,	0);
	create_insn	(0X3ACD8);
	set_name	(0X3ACD8,	"file_load_shape2d_res_fatal");
	create_insn	(x=0X3ACDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ACE6);
	op_hex		(x,	1);
	create_insn	(0X3ACEC);
	set_name	(0X3ACEC,	"file_load_shape2d_res_nofatal");
	create_insn	(x=0X3ACF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ACF9);
	op_hex		(x,	1);
	create_insn	(0X3ACFE);
	set_name	(0X3ACFE,	"file_load_shape2d_res");
	create_insn	(x=0X3AD01);
	op_hex		(x,	1);
	create_insn	(x=0X3AD04);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD0C);
	op_hex		(x,	1);
	create_insn	(x=0X3AD15);
	op_hex		(x,	1);
	create_insn	(x=0X3AD18);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD22);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AD2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD35);
	op_hex		(x,	1);
	create_insn	(x=0X3AD38);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD42);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AD4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD55);
	op_hex		(x,	1);
	create_insn	(x=0X3AD58);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD64);
	op_hex		(x,	1);
	create_insn	(x=0X3AD67);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD72);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD79);
	op_hex		(x,	1);
	create_insn	(x=0X3AD7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD87);
	op_hex		(x,	1);
	create_insn	(x=0X3AD8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AD95);
	op_hex		(x,	1);
	create_insn	(0X3AD9C);
	set_name	(0X3AD9C,	"parse_shape2d");
	create_insn	(x=0X3AD9F);
	op_hex		(x,	1);
	create_insn	(x=0X3ADA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADAF);
	op_hex		(x,	1);
	create_insn	(x=0X3ADB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADB5);
	op_hex		(x,	1);
	create_insn	(x=0X3ADB7);
	op_hex		(x,	1);
	create_insn	(x=0X3ADB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADED);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3ADF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3ADFC);
	op_hex		(x,	1);
	create_insn	(x=0X3ADFE);
	op_hex		(x,	1);
	create_insn	(x=0X3AE03);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE12);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE18);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE21);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE24);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE36);
	op_hex		(x,	1);
	create_insn	(x=0X3AE39);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE41);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE44);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE52);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE66);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE69);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE74);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE78);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE86);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE91);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AE97);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AE9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AECC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AED1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AED6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AEF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AEFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF01);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF07);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF13);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF16);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF19);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF22);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF31);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF34);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF37);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF42);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF45);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF51);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF58);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AF5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF66);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF69);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF74);
	op_hex		(x,	1);
	create_insn	(x=0X3AF77);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF80);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF88);
	op_hex		(x,	1);
	create_insn	(x=0X3AF8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF98);
	op_hex		(x,	1);
	create_insn	(x=0X3AF9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AF9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFAC);
	op_hex		(x,	1);
	create_insn	(x=0X3AFAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFBE);
	op_hex		(x,	1);
	create_insn	(x=0X3AFC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AFC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AFD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AFD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AFE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFED);
	op_stkvar	(x,	1);
	create_insn	(x=0X3AFF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3AFFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B002);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B005);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B008);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B00B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B010);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B01A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B020);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B023);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B02B);
	op_hex		(x,	1);
	create_insn	(x=0X3B02E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B031);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B03D);
	op_hex		(x,	1);
	create_insn	(x=0X3B044);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B047);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B04A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3B052);
	op_hex		(x,	1);
	create_insn	(x=0X3B054);
	op_hex		(x,	1);
	create_insn	(x=0X3B060);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B063);
	op_stkvar	(x,	0);
	create_insn	(0X3B068);
	create_insn	(x=0X3B06B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B074);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B077);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B07A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B082);
	op_hex		(x,	1);
	create_insn	(0X3B08C);
	set_name	(0X3B08C,	"parse_shape2d_helper3");
	create_insn	(x=0X3B08F);
	op_hex		(x,	1);
	create_insn	(x=0X3B092);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B098);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B09B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B0A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B0B3);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X3B0BA,	E_PREV + 0,	"returns size of largest shape (XxY+32) in the shape collection resource");
	create_insn	(0X3B0BA);
	set_name	(0X3B0BA,	"file_get_unflip_size");
	create_insn	(x=0X3B0BD);
	op_hex		(x,	1);
	create_insn	(x=0X3B0C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0CB);
	op_hex		(x,	1);
	create_insn	(x=0X3B0CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0EC);
	op_hex		(x,	1);
	create_insn	(x=0X3B0EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B0F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B0F8);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B0FC);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B102);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B107);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B10D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B112);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B115);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B118);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B11B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B11E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B123);
	op_stkvar	(x,	1);
	create_insn	(0X3B12A);
	set_name	(0X3B12A,	"file_load_shape2d_expandedsize");
	create_insn	(x=0X3B12D);
	op_hex		(x,	1);
	create_insn	(x=0X3B130);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B133);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B13B);
	op_hex		(x,	1);
	create_insn	(x=0X3B13E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B145);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B149);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B14C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B14F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B156);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B159);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B15C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B164);
	op_hex		(x,	1);
	create_insn	(x=0X3B167);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B16A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B16D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B170);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B174);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B17B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B180);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B183);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B186);
	op_stkvar	(x,	0);
	op_stroff	(x,	1,	GetStrucIdByName("SHAPE2D"),	0);
	create_insn	(x=0X3B18A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B18E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B191);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B194);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B199);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B19D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3B1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3B1AD);
	op_stkvar	(x,	1);
	make_array	(0X3B1B4,	0XC);
	MakeStruct	(0X3B1C0,	"PLANE");
	set_name	(0X3B1C0,	"plan_memres");
	create_word	(0X3B1F0);
	create_word	(0X3B1F2);
	create_word	(0X3B1F4);
	create_word	(0X3B1F8);
	create_word	(0X3B1FA);
	create_byte	(0X3B1FC);
	create_word	(0X3B1FE);
	create_word	(0X3B200);
	create_word	(0X3B202);
	create_byte	(0X3B204);
	create_word	(0X3B770);
	create_word	(0X3B772);
	create_word	(0X3B774);
	create_word	(0X3B776);
	create_strlit	(0X3B778,	0X3B7B0);
	set_name	(0X3B778,	"aMsRunTimeLibraryCop");
	create_strlit	(0X3B7B2,	0X3B7B7);
	set_name	(0X3B7B2,	"aMain");
	create_strlit	(0X3B7B7,	0X3B7C3);
	set_name	(0X3B7B7,	"aFontdef_fnt");
	create_strlit	(0X3B7C3,	0X3B7CD);
	set_name	(0X3B7C3,	"aFontn_fnt");
	create_strlit	(0X3B7CD,	0X3B7D6);
	set_name	(0X3B7CD,	"aTrakdata");
	create_strlit	(0X3B7D6,	0X3B7DE);
	set_name	(0X3B7D6,	"aDefault_0");
	create_strlit	(0X3B7DE,	0X3B7E3);
	set_name	(0X3B7DE,	"a_trk");
	create_strlit	(0X3B7E3,	0X3B7E8);
	set_name	(0X3B7E3,	"aSlct");
	create_strlit	(0X3B7E8,	0X3B7EF);
	set_name	(0X3B7E8,	"aSkidms_0");
	create_strlit	(0X3B7EF,	0X3B7F8);
	set_name	(0X3B7EF,	"aSkidslct");
	create_strlit	(0X3B7F8,	0X3B800);
	set_name	(0X3B7F8,	"aTedit__0");
	create_strlit	(0X3B800,	0X3B804);
	set_name	(0X3B800,	"aCvx");
	create_strlit	(0X3B804,	0X3B808);
	set_name	(0X3B804,	"aDos");
	create_word	(0X3B808);
	set_name	(0X3B808,	"rectptr_unk2");
	create_word	(0X3B80A);
	set_name	(0X3B80A,	"rectptr_unk");
	create_byte	(0X3B80C);
	make_array	(0X3B80C,	0X52);
	create_byte	(0X3B85E);
	make_array	(0X3B85E,	0X52);
	create_strlit	(0X3B8B0,	0X3B8B8);
	set_name	(0X3B8B0,	"aDefault_1");
	create_strlit	(0X3B8BA,	0X3B8C1);
	set_name	(0X3B8BA,	"aDesert");
	create_strlit	(0X3B8C3,	0X3B8CC);
	set_name	(0X3B8C3,	"aTropical");
	create_strlit	(0X3B8CC,	0X3B8D3);
	set_name	(0X3B8CC,	"aAlpine");
	create_strlit	(0X3B8D5,	0X3B8DA);
	set_name	(0X3B8D5,	"aCity");
	create_strlit	(0X3B8DE,	0X3B8E6);
	set_name	(0X3B8DE,	"aCountry");
	create_word	(0X3B8E8);
	make_array	(0X3B8E8,	0X2);
	set_name	(0X3B8E8,	"hillHeightConsts");
	create_word	(0X3B8EC);
	create_word	(0X3B8EE);
	create_word	(0X3B8F0);
	create_byte	(0X3B8F2);
	create_byte	(0X3B8F3);
	set_name	(0X3B8F3,	"is_audioloaded");
	create_byte	(0X3B8F4);
	set_name	(0X3B8F4,	"HKeyFlag");
	create_byte	(0X3B8F5);
	set_name	(0X3B8F5,	"cameramode");
	create_byte	(0X3B8F6);
	create_byte	(0X3B8F7);
	create_byte	(0X3B8F8);
	set_name	(0X3B8F8,	"kbormouse");
	create_byte	(0X3B8F9);
	set_name	(0X3B8F9,	"mouse_isdirty");
	create_byte	(0X3B8FA);
	set_name	(0X3B8FA,	"timertestflag2");
	create_byte	(0X3B8FB);
	set_name	(0X3B8FB,	"g_is_busy");
	create_byte	(0X3B8FC);
	create_strlit	(0X3B8FE,	0X3B904);
	set_name	(0X3B8FE,	"aKevin");
	create_strlit	(0X3B904,	0X3B909);
	set_name	(0X3B904,	"aOpp1");
	create_strlit	(0X3B90A,	0X3B912);
	set_name	(0X3B90A,	"aCarcoun");
	create_strlit	(0X3B912,	0X3B917);
	set_name	(0X3B912,	"aTitl");
	create_strlit	(0X3B917,	0X3B91E);
	set_name	(0X3B917,	"aSkidms");
	create_strlit	(0X3B91E,	0X3B927);
	set_name	(0X3B91E,	"aSkidtitl");
	create_strlit	(0X3B927,	0X3B92E);
	set_name	(0X3B927,	"aSdtitl");
	create_strlit	(0X3B92E,	0X3B935);
	set_name	(0X3B92E,	"aSdcred");
	create_strlit	(0X3B935,	0X3B93A);
	set_name	(0X3B935,	"aProd");
	create_strlit	(0X3B93A,	0X3B93F);
	set_name	(0X3B93A,	"aProd_0");
	create_strlit	(0X3B93F,	0X3B944);
	set_name	(0X3B93F,	"aTitl_0");
	create_strlit	(0X3B944,	0X3B949);
	set_name	(0X3B944,	"aCred");
	create_strlit	(0X3B949,	0X3B976);
	set_name	(0X3B949,	"aArowarrwarw1ar");
	create_strlit	(0X3B976,	0X3B97A);
	set_name	(0X3B976,	"aCre");
	create_strlit	(0X3B97A,	0X3B97F);
	set_name	(0X3B97A,	"aGds0");
	create_strlit	(0X3B97F,	0X3B984);
	set_name	(0X3B97F,	"aGds1");
	create_strlit	(0X3B984,	0X3B988);
	set_name	(0X3B984,	"aDes");
	create_strlit	(0X3B988,	0X3B98D);
	set_name	(0X3B988,	"aGdon");
	create_strlit	(0X3B98D,	0X3B992);
	set_name	(0X3B98D,	"aGkev");
	create_strlit	(0X3B992,	0X3B997);
	set_name	(0X3B992,	"aGbra");
	create_strlit	(0X3B997,	0X3B99C);
	set_name	(0X3B997,	"aGrob");
	create_strlit	(0X3B99C,	0X3B9A1);
	set_name	(0X3B99C,	"aGsta");
	create_strlit	(0X3B9A1,	0X3B9A5);
	set_name	(0X3B9A1,	"aMus");
	create_strlit	(0X3B9A5,	0X3B9AA);
	set_name	(0X3B9A5,	"aGmsy");
	create_strlit	(0X3B9AA,	0X3B9AF);
	set_name	(0X3B9AA,	"aGkri");
	create_strlit	(0X3B9AF,	0X3B9B4);
	set_name	(0X3B9AF,	"aGbri");
	create_strlit	(0X3B9B4,	0X3B9B8);
	set_name	(0X3B9B4,	"aPro");
	create_strlit	(0X3B9B8,	0X3B9BD);
	set_name	(0X3B9B8,	"aGkev_0");
	create_strlit	(0X3B9BD,	0X3B9C1);
	set_name	(0X3B9BD,	"aOpr");
	create_strlit	(0X3B9C1,	0X3B9C6);
	set_name	(0X3B9C1,	"aGbra_0");
	create_strlit	(0X3B9C6,	0X3B9CB);
	set_name	(0X3B9C6,	"aGric");
	create_strlit	(0X3B9CB,	0X3B9CF);
	set_name	(0X3B9CB,	"aArt");
	create_strlit	(0X3B9CF,	0X3B9D4);
	set_name	(0X3B9CF,	"aGmsm");
	create_strlit	(0X3B9D4,	0X3B9D9);
	set_name	(0X3B9D4,	"aGdav");
	create_strlit	(0X3B9D9,	0X3B9DE);
	set_name	(0X3B9D9,	"aGnic");
	create_strlit	(0X3B9DE,	0X3B9E3);
	set_name	(0X3B9DE,	"aGkev_1");
	create_strlit	(0X3B9E3,	0X3B9EA);
	set_name	(0X3B9E3,	"aSdmsel");
	create_strlit	(0X3B9EA,	0X3B9EF);
	set_name	(0X3B9EA,	"aScrn");
	create_word	(0X3B9FC);
	make_array	(0X3B9FC,	0X5);
	set_name	(0X3B9FC,	"menu_buttons_x1");
	create_word	(0X3BA06);
	make_array	(0X3BA06,	0X5);
	set_name	(0X3BA06,	"menu_buttons_x2");
	create_word	(0X3BA10);
	make_array	(0X3BA10,	0X5);
	set_name	(0X3BA10,	"menu_buttons_y1");
	create_word	(0X3BA1A);
	make_array	(0X3BA1A,	0X5);
	set_name	(0X3BA1A,	"menu_buttons_y2");
	create_strlit	(0X3BA24,	0X3BA26);
	create_strlit	(0X3BA26,	0X3BA28);
	create_strlit	(0X3BA28,	0X3BA2C);
	set_name	(0X3BA28,	"aHs0");
	create_strlit	(0X3BA2C,	0X3BA32);
	set_name	(0X3BA2C,	"aTedit");
	create_strlit	(0X3BA32,	0X3BA36);
	set_name	(0X3BA32,	"aBmt");
	create_strlit	(0X3BA36,	0X3BA3A);
	set_name	(0X3BA36,	"aBet");
	create_strlit	(0X3BA3A,	0X3BA3E);
	set_name	(0X3BA3A,	"aBmm");
	create_strlit	(0X3BA3E,	0X3BA42);
	set_name	(0X3BA3E,	"aTrk");
	create_strlit	(0X3BA42,	0X3BA47);
	set_name	(0X3BA42,	"a_trk_0");
	create_strlit	(0X3BA47,	0X3BA4C);
	set_name	(0X3BA47,	"a_trk_1");
	create_word	(0X3BA4C);
	make_array	(0X3BA4C,	0X3);
	set_name	(0X3BA4C,	"trackmenu_buttons_x1");
	create_word	(0X3BA52);
	make_array	(0X3BA52,	0X3);
	set_name	(0X3BA52,	"trackmenu_buttons_x2");
	create_word	(0X3BA58);
	make_array	(0X3BA58,	0X3);
	set_name	(0X3BA58,	"trackmenu_buttons_y1");
	create_word	(0X3BA5E);
	make_array	(0X3BA5E,	0X3);
	set_name	(0X3BA5E,	"trackmenu_buttons_y2");
	create_strlit	(0X3BA64,	0X3BA69);
	set_name	(0X3BA64,	"a_hig_0");
	create_strlit	(0X3BA69,	0X3BA7E);
	set_name	(0X3BA69,	"a______________");
	create_strlit	(0X3BA7E,	0X3BA96);
	set_name	(0X3BA7E,	"a_______________________");
	create_strlit	(0X3BA96,	0X3BA9E);
	set_name	(0X3BA96,	"a______");
	create_strlit	(0X3BA9E,	0X3BAA2);
	set_name	(0X3BA9E,	"aHs1");
	create_strlit	(0X3BAA2,	0X3BAA5);
	create_strlit	(0X3BAA5,	0X3BAA7);
	create_strlit	(0X3BAA7,	0X3BAAB);
	set_name	(0X3BAA7,	"aHs2");
	create_strlit	(0X3BAAB,	0X3BAAF);
	set_name	(0X3BAAB,	"aHs3");
	create_strlit	(0X3BAAF,	0X3BAB3);
	set_name	(0X3BAAF,	"aHs5");
	create_strlit	(0X3BAB3,	0X3BAB7);
	set_name	(0X3BAB3,	"aHs4");
	create_strlit	(0X3BAB7,	0X3BAB9);
	create_strlit	(0X3BAB9,	0X3BABB);
	create_strlit	(0X3BABB,	0X3BABD);
	create_strlit	(0X3BABD,	0X3BAC2);
	set_name	(0X3BABD,	"a_hig");
	create_strlit	(0X3BAC2,	0X3BAC7);
	set_name	(0X3BAC2,	"a_res_0");
	create_strlit	(0X3BAC7,	0X3BACC);
	set_name	(0X3BAC7,	"aCar");
	create_strlit	(0X3BACC,	0X3BAD3);
	set_name	(0X3BACC,	"aSdcsel");
	create_strlit	(0X3BAD3,	0X3BAD8);
	set_name	(0X3BAD3,	"aMisc_0");
	create_strlit	(0X3BAD8,	0X3BADD);
	set_name	(0X3BAD8,	"aGrap");
	create_strlit	(0X3BADD,	0X3BAE1);
	set_name	(0X3BADD,	"a150");
	create_strlit	(0X3BAE1,	0X3BAE5);
	set_name	(0X3BAE1,	"a100");
	create_strlit	(0X3BAE5,	0X3BAE9);
	set_name	(0X3BAE5,	"a50");
	create_strlit	(0X3BAE9,	0X3BAED);
	set_name	(0X3BAE9,	"a0");
	create_strlit	(0X3BAED,	0X3BAF7);
	set_name	(0X3BAED,	"a02040");
	create_strlit	(0X3BAF7,	0X3BAFB);
	set_name	(0X3BAF7,	"aBdo_0");
	create_strlit	(0X3BAFB,	0X3BAFF);
	set_name	(0X3BAFB,	"aBnx_0");
	create_strlit	(0X3BAFF,	0X3BB03);
	set_name	(0X3BAFF,	"aBla_0");
	create_strlit	(0X3BB03,	0X3BB07);
	set_name	(0X3BB03,	"aBau");
	create_strlit	(0X3BB07,	0X3BB0B);
	set_name	(0X3BB07,	"aBma");
	create_strlit	(0X3BB0B,	0X3BB0F);
	set_name	(0X3BB0B,	"aBco");
	create_strlit	(0X3BB0F,	0X3BB13);
	set_name	(0X3BB0F,	"aDes_1");
	create_strlit	(0X3BB13,	0X3BB18);
	set_name	(0X3BB13,	"aStop_1");
	create_strlit	(0X3BB18,	0X3BB1C);
	set_name	(0X3BB18,	"aBau_0");
	create_strlit	(0X3BB1C,	0X3BB20);
	set_name	(0X3BB1C,	"aBma_0");
	MakeStruct	(0X3BB20,	"RECTANGLE");
	set_name	(0X3BB20,	"carmenu_cliprect");
	create_word	(0X3BB28);
	make_array	(0X3BB28,	0X5);
	set_name	(0X3BB28,	"carmenu_buttons_y1");
	create_word	(0X3BB32);
	make_array	(0X3BB32,	0X5);
	set_name	(0X3BB32,	"carmenu_buttons_y2");
	create_word	(0X3BB3C);
	make_array	(0X3BB3C,	0X5);
	set_name	(0X3BB3C,	"carmenu_buttons_x1");
	create_word	(0X3BB46);
	make_array	(0X3BB46,	0X5);
	set_name	(0X3BB46,	"carmenu_buttons_x2");
	create_strlit	(0X3BB50,	0X3BB55);
	set_name	(0X3BB50,	"aLnam");
	MakeStruct	(0X3BB56,	"RECTANGLE");
	set_name	(0X3BB56,	"rect_unk16");
	MakeStruct	(0X3BB5E,	"VECTOR");
	set_name	(0X3BB5E,	"carmenu_carpos");
	create_strlit	(0X3BB64,	0X3BB69);
	set_name	(0X3BB64,	"aMisc");
	create_strlit	(0X3BB69,	0X3BB70);
	set_name	(0X3BB69,	"aSdosel");
	create_strlit	(0X3BB70,	0X3BB8D);
	set_name	(0X3BB70,	"aOpp0opp1opp2op");
	create_strlit	(0X3BB8D,	0X3BB92);
	set_name	(0X3BB8D,	"aScrn_0");
	create_strlit	(0X3BB92,	0X3BB96);
	set_name	(0X3BB92,	"aBla");
	create_strlit	(0X3BB96,	0X3BB9A);
	set_name	(0X3BB96,	"aBnx");
	create_strlit	(0X3BB9A,	0X3BB9E);
	set_name	(0X3BB9A,	"aBcl");
	create_strlit	(0X3BB9E,	0X3BBA2);
	set_name	(0X3BB9E,	"aBca");
	create_strlit	(0X3BBA2,	0X3BBA6);
	set_name	(0X3BBA2,	"aBdo");
	create_strlit	(0X3BBA6,	0X3BBAB);
	set_name	(0X3BBA6,	"aClip");
	create_strlit	(0X3BBAB,	0X3BBAF);
	set_name	(0X3BBAB,	"aDes_0");
	create_strlit	(0X3BBAF,	0X3BBB3);
	set_name	(0X3BBAF,	"aRac");
	create_word	(0X3BBB4);
	make_array	(0X3BBB4,	0X5);
	set_name	(0X3BBB4,	"opponentmenu_buttons_x1");
	create_word	(0X3BBBE);
	make_array	(0X3BBBE,	0X5);
	set_name	(0X3BBBE,	"opponentmenu_buttons_x2");
	create_word	(0X3BBC8);
	make_array	(0X3BBC8,	0X5);
	set_name	(0X3BBC8,	"opponentmenu_buttons_y1");
	create_word	(0X3BBD2);
	make_array	(0X3BBD2,	0X5);
	set_name	(0X3BBD2,	"opponentmenu_buttons_y2");
	create_strlit	(0X3BBDC,	0X3BBE1);
	set_name	(0X3BBDC,	"aMisc_1");
	create_strlit	(0X3BBE1,	0X3BBE6);
	set_name	(0X3BBE1,	"aGstu");
	create_strlit	(0X3BBE6,	0X3BBEB);
	set_name	(0X3BBE6,	"aGver");
	create_strlit	(0X3BBEB,	0X3BBEF);
	set_name	(0X3BBEB,	"aMop");
	create_strlit	(0X3BBEF,	0X3BBF3);
	set_name	(0X3BBEF,	"aMid");
	create_strlit	(0X3BBF3,	0X3BBF7);
	set_name	(0X3BBF3,	"aRep_0");
	create_strlit	(0X3BBF7,	0X3BBFC);
	set_name	(0X3BBF7,	"a_rpl_0");
	create_strlit	(0X3BBFC,	0X3BC01);
	set_name	(0X3BBFC,	"aMisc_2");
	create_strlit	(0X3BC01,	0X3BC05);
	set_name	(0X3BC01,	"aElt");
	create_strlit	(0X3BC05,	0X3BC09);
	set_name	(0X3BC05,	"aCon");
	create_strlit	(0X3BC09,	0X3BC0D);
	set_name	(0X3BC09,	"aPpt");
	create_strlit	(0X3BC0D,	0X3BC11);
	set_name	(0X3BC0D,	"aDnf");
	create_strlit	(0X3BC11,	0X3BC15);
	set_name	(0X3BC11,	"aOlt");
	create_strlit	(0X3BC15,	0X3BC19);
	set_name	(0X3BC15,	"aDnf_0");
	create_strlit	(0X3BC19,	0X3BC1D);
	set_name	(0X3BC19,	"aOwt");
	create_strlit	(0X3BC1D,	0X3BC21);
	set_name	(0X3BC1D,	"aOlt_0");
	create_strlit	(0X3BC21,	0X3BC26);
	set_name	(0X3BC21,	"aVict");
	create_strlit	(0X3BC26,	0X3BC2D);
	set_name	(0X3BC26,	"aSkidms_1");
	create_strlit	(0X3BC2D,	0X3BC36);
	set_name	(0X3BC2D,	"aSkidvict");
	create_strlit	(0X3BC36,	0X3BC3B);
	set_name	(0X3BC36,	"aOver");
	create_strlit	(0X3BC3B,	0X3BC42);
	set_name	(0X3BC3B,	"aSkidms_2");
	create_strlit	(0X3BC42,	0X3BC4B);
	set_name	(0X3BC42,	"aSkidover");
	create_strlit	(0X3BC4B,	0X3BC4F);
	set_name	(0X3BC4B,	"aAvs");
	create_strlit	(0X3BC4F,	0X3BC53);
	set_name	(0X3BC4F,	"aMph");
	create_strlit	(0X3BC53,	0X3BC57);
	set_name	(0X3BC53,	"aImp");
	create_strlit	(0X3BC57,	0X3BC5B);
	set_name	(0X3BC57,	"aMph_0");
	create_strlit	(0X3BC5B,	0X3BC5F);
	set_name	(0X3BC5B,	"aTop");
	create_strlit	(0X3BC5F,	0X3BC63);
	set_name	(0X3BC5F,	"aMph_1");
	create_strlit	(0X3BC63,	0X3BC67);
	set_name	(0X3BC63,	"aJum");
	create_strlit	(0X3BC67,	0X3BC6C);
	set_name	(0X3BC67,	"aWinn");
	create_strlit	(0X3BC6C,	0X3BC71);
	set_name	(0X3BC6C,	"aLose");
	create_strlit	(0X3BC71,	0X3BC76);
	set_name	(0X3BC71,	"a_trk_5");
	create_strlit	(0X3BC76,	0X3BC7A);
	set_name	(0X3BC76,	"aIhd");
	create_strlit	(0X3BC7A,	0X3BC7E);
	set_name	(0X3BC7A,	"aD4a");
	create_strlit	(0X3BC7E,	0X3BC82);
	set_name	(0X3BC7E,	"aBct");
	create_strlit	(0X3BC82,	0X3BC86);
	set_name	(0X3BC82,	"aInh");
	create_strlit	(0X3BC86,	0X3BC8A);
	set_name	(0X3BC86,	"aInh_0");
	create_strlit	(0X3BC8A,	0X3BC8E);
	set_name	(0X3BC8A,	"aHna");
	create_strlit	(0X3BC8E,	0X3BC92);
	set_name	(0X3BC8E,	"aBev");
	create_strlit	(0X3BC92,	0X3BC96);
	set_name	(0X3BC92,	"aBhi");
	create_strlit	(0X3BC96,	0X3BC9A);
	set_name	(0X3BC96,	"aBrp");
	create_strlit	(0X3BC9A,	0X3BC9E);
	set_name	(0X3BC9A,	"aBra");
	create_strlit	(0X3BC9E,	0X3BCA2);
	set_name	(0X3BC9E,	"aBdr");
	create_strlit	(0X3BCA2,	0X3BCA6);
	set_name	(0X3BCA2,	"aBmm_0");
	create_word	(0X3BCDE);
	create_word	(0X3BCE4);
	create_word	(0X3BCEC);
	create_word	(0X3BCEE);
	create_word	(0X3BCF0);
	create_word	(0X3BCF2);
	create_word	(0X3BCF6);
	create_word	(0X3BD00);
	make_array	(0X3BD00,	0X5);
	set_name	(0X3BD00,	"hiscore_buttons_y1");
	create_word	(0X3BD0A);
	make_array	(0X3BD0A,	0X5);
	set_name	(0X3BD0A,	"hiscore_buttons_y2");
	create_strlit	(0X3BD14,	0X3BD1C);
	set_name	(0X3BD14,	"aOpp2win");
	create_strlit	(0X3BD1C,	0X3BD25);
	set_name	(0X3BD1C,	"aOpp2lose");
	create_strlit	(0X3BD26,	0X3BD2B);
	set_name	(0X3BD26,	"aOp01");
	create_strlit	(0X3BD2B,	0X3BD30);
	set_name	(0X3BD2B,	"aMisc_3");
	create_strlit	(0X3BD30,	0X3BD34);
	set_name	(0X3BD30,	"aCop_0");
	create_byte	(0X3BD34);
	create_strlit	(0X3BD4A,	0X3BD4E);
	set_name	(0X3BD4A,	"aQ00");
	create_strlit	(0X3BD4E,	0X3BD52);
	set_name	(0X3BD4E,	"aA00");
	create_word	(0X3BD72);
	make_array	(0X3BD72,	0X4);
	create_byte	(0X3BD7A);
	set_name	(0X3BD7A,	"steerWhlRespTable_20fps");
	create_byte	(0X3BDBA);
	set_name	(0X3BDBA,	"steerWhlRespTable_10fps");
	create_word	(0X3BDF8);
	make_array	(0X3BDF8,	0X5);
	set_name	(0X3BDF8,	"grassDecelDivTab");
	create_byte	(0X3BE02);
	create_word	(0X3BE04);
	create_word	(0X3BE0C);
	create_word	(0X3BE14);
	set_name	(0X3BE14,	"f36f40_whlData");
	create_word	(0X3BE16);
	create_strlit	(0X3BE18,	0X3BE1D);
	set_name	(0X3BE18,	"aSimd");
	create_strlit	(0X3BE1D,	0X3BE22);
	set_name	(0X3BE1D,	"aGnam");
	create_strlit	(0X3BE22,	0X3BE27);
	set_name	(0X3BE22,	"aSimd_0");
	create_strlit	(0X3BE27,	0X3BE2C);
	set_name	(0X3BE27,	"aGsna");
	create_dword	(0X3BE2C);
	set_name	(0X3BE2C,	"old_intr0_handler");
	create_word	(0X3BE30);
	create_word	(0X3BE32);
	create_word	(0X3BE34);
	create_word	(x=0X3BE44);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE46);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE48);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE4A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE4C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE4E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE50);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3BE52);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C084);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C086);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C088);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C08A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C08C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C08E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C090);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3C092);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	MakeStruct	(0X3C094,	"RECTANGLE");
	set_name	(0X3C094,	"rect_unk5");
	create_byte	(0X3C09C);
	create_byte	(0X3C0C6);
	create_word	(0X3C0D6);
	create_byte	(0X3C0E6);
	set_name	(0X3C0E6,	"fence_TrkObjCodes");
	create_word	(0X3C108);
	create_word	(0X3C10A);
	create_word	(0X3C10C);
	create_word	(0X3C10E);
	create_word	(0X3C110);
	create_word	(0X3C112);
	MakeStruct	(0X3C11A,	"RECTANGLE");
	set_name	(0X3C11A,	"trackpreview_cliprect");
	create_strlit	(0X3C122,	0X3C126);
	set_name	(0X3C122,	"aDm1");
	create_strlit	(0X3C126,	0X3C12A);
	set_name	(0X3C126,	"aDm2");
	create_strlit	(0X3C12A,	0X3C12E);
	set_name	(0X3C12A,	"aPre");
	create_strlit	(0X3C12E,	0X3C132);
	set_name	(0X3C12E,	"aSe1");
	create_strlit	(0X3C132,	0X3C136);
	set_name	(0X3C132,	"aSe2");
	create_strlit	(0X3C136,	0X3C13A);
	set_name	(0X3C136,	"aWww");
	create_strlit	(0X3C13A,	0X3C13E);
	set_name	(0X3C13A,	"aOpp");
	create_strlit	(0X3C13E,	0X3C142);
	set_name	(0X3C13E,	"aOpp_0");
	create_strlit	(0X3C142,	0X3C146);
	set_name	(0X3C142,	"aPen");
	create_strlit	(0X3C146,	0X3C14A);
	set_name	(0X3C146,	"aRpl_0");
	MakeStruct	(0X3C14A,	"RECTANGLE");
	set_name	(0X3C14A,	"rect_ingame_text2");
	MakeStruct	(0X3C152,	"RECTANGLE");
	set_name	(0X3C152,	"rect_ingame_text3");
	MakeStruct	(0X3C15A,	"RECTANGLE");
	set_name	(0X3C15A,	"rect_ingame_text4");
	create_strlit	(0X3C162,	0X3C167);
	set_name	(0X3C162,	"aCrak");
	create_strlit	(0X3C167,	0X3C16C);
	set_name	(0X3C167,	"aCinf");
	create_strlit	(0X3C16C,	0X3C17D);
	set_name	(0X3C16C,	"aScensce2sce3sce4");
	create_strlit	(0X3C17D,	0X3C185);
	set_name	(0X3C17D,	"aSdgame2");
	create_strlit	(0X3C185,	0X3C19A);
	set_name	(0X3C185,	"aEx01ex02ex03leftrigh");
	create_strlit	(0X3C19A,	0X3C1A0);
	set_name	(0X3C19A,	"aTitle");
	create_strlit	(0X3C1A0,	0X3C1AD);
	set_name	(0X3C1A0,	"aLogolog2brav");
	create_strlit	(0X3C1AE,	0X3C1B6);
	set_name	(0X3C1AE,	"aCarcoun_0");
	MakeStruct	(0X3C1B6,	"RECTANGLE");
	set_name	(0X3C1B6,	"intro_cliprect");
	create_word	(0X3C1BE);
	set_name	(0X3C1BE,	"intro_colorvalue");
	create_strlit	(0X3C1C0,	0X3C1C5);
	set_name	(0X3C1C0,	"aBarn");
	create_strlit	(0X3C1C5,	0X3C1CA);
	set_name	(0X3C1C5,	"aZbrn");
	create_strlit	(0X3C1CA,	0X3C1CF);
	set_name	(0X3C1CA,	"aBrid");
	create_strlit	(0X3C1CF,	0X3C1D4);
	set_name	(0X3C1CF,	"aZbri");
	create_strlit	(0X3C1D4,	0X3C1D9);
	set_name	(0X3C1D4,	"aBtur");
	create_strlit	(0X3C1D9,	0X3C1DE);
	set_name	(0X3C1D9,	"aZbtu");
	create_strlit	(0X3C1DE,	0X3C1E3);
	set_name	(0X3C1DE,	"aChi1");
	create_strlit	(0X3C1E3,	0X3C1E8);
	set_name	(0X3C1E3,	"aZch1");
	create_strlit	(0X3C1E8,	0X3C1ED);
	set_name	(0X3C1E8,	"aChi2");
	create_strlit	(0X3C1ED,	0X3C1F2);
	set_name	(0X3C1ED,	"aZch2");
	create_strlit	(0X3C1F2,	0X3C1F7);
	set_name	(0X3C1F2,	"aElrd");
	create_strlit	(0X3C1F7,	0X3C1FC);
	set_name	(0X3C1F7,	"aZelr");
	create_strlit	(0X3C1FC,	0X3C201);
	set_name	(0X3C1FC,	"aFini");
	create_strlit	(0X3C201,	0X3C206);
	set_name	(0X3C201,	"aZfin");
	create_strlit	(0X3C206,	0X3C20B);
	set_name	(0X3C206,	"aGass");
	create_strlit	(0X3C20B,	0X3C210);
	set_name	(0X3C20B,	"aZgas");
	create_strlit	(0X3C210,	0X3C215);
	set_name	(0X3C210,	"aLban");
	create_strlit	(0X3C215,	0X3C21A);
	set_name	(0X3C215,	"aZlba");
	create_strlit	(0X3C21A,	0X3C21F);
	set_name	(0X3C21A,	"aLoop");
	create_strlit	(0X3C21F,	0X3C224);
	set_name	(0X3C21F,	"aZloo");
	create_strlit	(0X3C224,	0X3C229);
	set_name	(0X3C224,	"aOffi");
	create_strlit	(0X3C229,	0X3C22E);
	set_name	(0X3C229,	"aZoff");
	create_strlit	(0X3C22E,	0X3C233);
	set_name	(0X3C22E,	"aPipe");
	create_strlit	(0X3C233,	0X3C238);
	set_name	(0X3C233,	"aZpip");
	create_strlit	(0X3C238,	0X3C23D);
	set_name	(0X3C238,	"aRamp");
	create_strlit	(0X3C23D,	0X3C242);
	set_name	(0X3C23D,	"aZram");
	create_strlit	(0X3C242,	0X3C247);
	set_name	(0X3C242,	"aRban");
	create_strlit	(0X3C247,	0X3C24C);
	set_name	(0X3C247,	"aZrba");
	create_strlit	(0X3C24C,	0X3C251);
	set_name	(0X3C24C,	"aRdup");
	create_strlit	(0X3C251,	0X3C256);
	set_name	(0X3C251,	"aZrdu");
	create_strlit	(0X3C256,	0X3C25B);
	set_name	(0X3C256,	"aRoad");
	create_strlit	(0X3C25B,	0X3C260);
	set_name	(0X3C25B,	"aZroa");
	create_strlit	(0X3C260,	0X3C265);
	set_name	(0X3C260,	"aStur");
	create_strlit	(0X3C265,	0X3C26A);
	set_name	(0X3C265,	"aZstu");
	create_strlit	(0X3C26A,	0X3C26F);
	set_name	(0X3C26A,	"aTenn");
	create_strlit	(0X3C26F,	0X3C274);
	set_name	(0X3C26F,	"aZten");
	create_strlit	(0X3C274,	0X3C279);
	set_name	(0X3C274,	"aTunn");
	create_strlit	(0X3C279,	0X3C27E);
	set_name	(0X3C279,	"aZtun");
	create_strlit	(0X3C27E,	0X3C283);
	set_name	(0X3C27E,	"aTurn");
	create_strlit	(0X3C283,	0X3C288);
	set_name	(0X3C283,	"aZtur");
	create_strlit	(0X3C288,	0X3C28D);
	set_name	(0X3C288,	"aGoui");
	create_strlit	(0X3C28D,	0X3C292);
	set_name	(0X3C28D,	"aGouo");
	create_strlit	(0X3C292,	0X3C297);
	set_name	(0X3C292,	"aGoup");
	create_strlit	(0X3C297,	0X3C29C);
	set_name	(0X3C297,	"aHigh");
	create_strlit	(0X3C29C,	0X3C2A1);
	set_name	(0X3C29C,	"aLakc");
	create_strlit	(0X3C2A1,	0X3C2A6);
	set_name	(0X3C2A1,	"aLake");
	create_strlit	(0X3C2A6,	0X3C2AB);
	set_name	(0X3C2A6,	"aCld1");
	create_strlit	(0X3C2AB,	0X3C2B0);
	set_name	(0X3C2AB,	"aCld2");
	create_strlit	(0X3C2B0,	0X3C2B5);
	set_name	(0X3C2B0,	"aCld3");
	create_strlit	(0X3C2B5,	0X3C2BA);
	set_name	(0X3C2B5,	"aSigl");
	create_strlit	(0X3C2BA,	0X3C2BF);
	set_name	(0X3C2BA,	"aSigr");
	create_strlit	(0X3C2BF,	0X3C2C4);
	set_name	(0X3C2BF,	"aTree");
	create_strlit	(0X3C2C4,	0X3C2C9);
	set_name	(0X3C2C4,	"aInte");
	create_strlit	(0X3C2C9,	0X3C2CE);
	set_name	(0X3C2C9,	"aZint");
	create_strlit	(0X3C2CE,	0X3C2D3);
	set_name	(0X3C2CE,	"aOffl");
	create_strlit	(0X3C2D3,	0X3C2D8);
	set_name	(0X3C2D3,	"aZofl");
	create_strlit	(0X3C2D8,	0X3C2DD);
	set_name	(0X3C2D8,	"aOffr");
	create_strlit	(0X3C2DD,	0X3C2E2);
	set_name	(0X3C2DD,	"aZofr");
	create_strlit	(0X3C2E2,	0X3C2E7);
	set_name	(0X3C2E2,	"aPalm");
	create_strlit	(0X3C2E7,	0X3C2EC);
	set_name	(0X3C2E7,	"aZpal");
	create_strlit	(0X3C2EC,	0X3C2F1);
	set_name	(0X3C2EC,	"aBank");
	create_strlit	(0X3C2F1,	0X3C2F6);
	set_name	(0X3C2F1,	"aZban");
	create_strlit	(0X3C2F6,	0X3C2FB);
	set_name	(0X3C2F6,	"aSofl");
	create_strlit	(0X3C2FB,	0X3C300);
	set_name	(0X3C2FB,	"aZsol");
	create_strlit	(0X3C300,	0X3C305);
	set_name	(0X3C300,	"aSofr");
	create_strlit	(0X3C305,	0X3C30A);
	set_name	(0X3C305,	"aZsor");
	create_strlit	(0X3C30A,	0X3C30F);
	set_name	(0X3C30A,	"aSram");
	create_strlit	(0X3C30F,	0X3C314);
	set_name	(0X3C30F,	"aZsra");
	create_strlit	(0X3C314,	0X3C319);
	set_name	(0X3C314,	"aSelr");
	create_strlit	(0X3C319,	0X3C31E);
	set_name	(0X3C319,	"aZser");
	create_strlit	(0X3C31E,	0X3C323);
	set_name	(0X3C31E,	"aElsp");
	create_strlit	(0X3C323,	0X3C328);
	set_name	(0X3C323,	"aZesp");
	create_strlit	(0X3C328,	0X3C32D);
	set_name	(0X3C328,	"aCact");
	create_strlit	(0X3C32D,	0X3C332);
	set_name	(0X3C32D,	"aCact_0");
	create_strlit	(0X3C332,	0X3C337);
	set_name	(0X3C332,	"aSpip");
	create_strlit	(0X3C337,	0X3C33C);
	set_name	(0X3C337,	"aZspi");
	create_strlit	(0X3C33C,	0X3C341);
	set_name	(0X3C33C,	"aSest");
	create_strlit	(0X3C341,	0X3C346);
	set_name	(0X3C341,	"aZses");
	create_strlit	(0X3C346,	0X3C34B);
	set_name	(0X3C346,	"aWroa");
	create_strlit	(0X3C34B,	0X3C350);
	set_name	(0X3C34B,	"aZwro");
	create_strlit	(0X3C350,	0X3C355);
	set_name	(0X3C350,	"aBarr");
	create_strlit	(0X3C355,	0X3C35A);
	set_name	(0X3C355,	"aZbar");
	create_strlit	(0X3C35A,	0X3C35F);
	set_name	(0X3C35A,	"aLco0");
	create_strlit	(0X3C35F,	0X3C364);
	set_name	(0X3C35F,	"aZlco");
	create_strlit	(0X3C364,	0X3C369);
	set_name	(0X3C364,	"aRco0");
	create_strlit	(0X3C369,	0X3C36E);
	set_name	(0X3C369,	"aZrco");
	create_strlit	(0X3C36E,	0X3C373);
	set_name	(0X3C36E,	"aGwro");
	create_strlit	(0X3C373,	0X3C378);
	set_name	(0X3C373,	"aZgwr");
	create_strlit	(0X3C378,	0X3C37D);
	set_name	(0X3C378,	"aLco1");
	create_strlit	(0X3C37D,	0X3C382);
	set_name	(0X3C37D,	"aRco1");
	create_strlit	(0X3C382,	0X3C387);
	set_name	(0X3C382,	"aLoo1");
	create_strlit	(0X3C387,	0X3C38C);
	set_name	(0X3C387,	"aHig1");
	create_strlit	(0X3C38C,	0X3C391);
	set_name	(0X3C38C,	"aHig2");
	create_strlit	(0X3C391,	0X3C396);
	set_name	(0X3C391,	"aHig3");
	create_strlit	(0X3C396,	0X3C39B);
	set_name	(0X3C396,	"aWind");
	create_strlit	(0X3C39B,	0X3C3A0);
	set_name	(0X3C39B,	"aZwin");
	create_strlit	(0X3C3A0,	0X3C3A5);
	set_name	(0X3C3A0,	"aBoat");
	create_strlit	(0X3C3A5,	0X3C3AA);
	set_name	(0X3C3A5,	"aZboa");
	create_strlit	(0X3C3AA,	0X3C3AF);
	set_name	(0X3C3AA,	"aRest");
	create_strlit	(0X3C3AF,	0X3C3B4);
	set_name	(0X3C3AF,	"aZres");
	create_strlit	(0X3C3B4,	0X3C3B9);
	set_name	(0X3C3B4,	"aHpip");
	create_strlit	(0X3C3B9,	0X3C3BE);
	set_name	(0X3C3B9,	"aZhpi");
	create_strlit	(0X3C3BE,	0X3C3C3);
	set_name	(0X3C3BE,	"aVcor");
	create_strlit	(0X3C3C3,	0X3C3C8);
	set_name	(0X3C3C3,	"aZvco");
	create_strlit	(0X3C3C8,	0X3C3CD);
	set_name	(0X3C3C8,	"aTun2");
	create_strlit	(0X3C3CD,	0X3C3D2);
	set_name	(0X3C3CD,	"aPip2");
	create_strlit	(0X3C3D2,	0X3C3D7);
	set_name	(0X3C3D2,	"aFenc");
	create_strlit	(0X3C3D7,	0X3C3DC);
	set_name	(0X3C3D7,	"aZfen");
	create_strlit	(0X3C3DC,	0X3C3E1);
	set_name	(0X3C3DC,	"aCfen");
	create_strlit	(0X3C3E1,	0X3C3E6);
	set_name	(0X3C3E1,	"aZcfe");
	create_strlit	(0X3C3E6,	0X3C3EB);
	set_name	(0X3C3E6,	"aFlag");
	create_strlit	(0X3C3EB,	0X3C3F0);
	set_name	(0X3C3EB,	"aTruk");
	create_strlit	(0X3C3F0,	0X3C3F5);
	set_name	(0X3C3F0,	"aExp0");
	create_strlit	(0X3C3F5,	0X3C3FA);
	set_name	(0X3C3F5,	"aExp1");
	create_strlit	(0X3C3FA,	0X3C3FF);
	set_name	(0X3C3FA,	"aExp2");
	create_strlit	(0X3C3FF,	0X3C404);
	set_name	(0X3C3FF,	"aExp3");
	create_byte	(0X3C404);
	make_array	(0X3C404,	0X2A);
	set_name	(0X3C404,	"shapedata42");
	create_byte	(0X3C42E);
	make_array	(0X3C42E,	0X2A);
	set_name	(0X3C42E,	"shapedata42_2");
	create_byte	(0X3C458);
	make_array	(0X3C458,	0X1E);
	set_name	(0X3C458,	"shapedata30");
	create_byte	(0X3C476);
	make_array	(0X3C476,	0X2A);
	set_name	(0X3C476,	"shapedata42_3");
	create_byte	(0X3C4A0);
	make_array	(0X3C4A0,	0X2A);
	set_name	(0X3C4A0,	"shapedata42_11");
	create_byte	(0X3C4CA);
	make_array	(0X3C4CA,	0X2A);
	set_name	(0X3C4CA,	"shapedata42_4");
	create_byte	(0X3C4F4);
	make_array	(0X3C4F4,	0X36);
	set_name	(0X3C4F4,	"shapedata54");
	create_byte	(0X3C52A);
	make_array	(0X3C52A,	0X36);
	set_name	(0X3C52A,	"shapedata54_2");
	create_byte	(0X3C560);
	make_array	(0X3C560,	0X42);
	set_name	(0X3C560,	"shapedata66");
	create_byte	(0X3C5A2);
	make_array	(0X3C5A2,	0X42);
	set_name	(0X3C5A2,	"shapedata66_2");
	create_byte	(0X3C5E4);
	make_array	(0X3C5E4,	0XD2);
	set_name	(0X3C5E4,	"shapedata210");
	create_byte	(0X3C6B6);
	make_array	(0X3C6B6,	0XD2);
	set_name	(0X3C6B6,	"shapedata210_2");
	create_byte	(0X3C788);
	make_array	(0X3C788,	0X2A);
	set_name	(0X3C788,	"shapedata42_5");
	create_byte	(0X3C7B2);
	make_array	(0X3C7B2,	0X2A);
	set_name	(0X3C7B2,	"shapedata42_6");
	create_byte	(0X3C7DC);
	make_array	(0X3C7DC,	0XD2);
	set_name	(0X3C7DC,	"shapedata210_3");
	create_byte	(0X3C8AE);
	make_array	(0X3C8AE,	0XD2);
	set_name	(0X3C8AE,	"shapedata210_4");
	create_byte	(0X3C980);
	make_array	(0X3C980,	0XD2);
	set_name	(0X3C980,	"shapedata210_5");
	create_byte	(0X3CA52);
	make_array	(0X3CA52,	0X2A);
	set_name	(0X3CA52,	"shapedata42_7");
	create_byte	(0X3CA7C);
	make_array	(0X3CA7C,	0X126);
	set_name	(0X3CA7C,	"shapedata294");
	create_byte	(0X3CBA2);
	make_array	(0X3CBA2,	0XAE);
	set_name	(0X3CBA2,	"shapedata174");
	create_byte	(0X3CC50);
	make_array	(0X3CC50,	0X2A);
	set_name	(0X3CC50,	"shapedata42_8");
	create_byte	(0X3CC7A);
	make_array	(0X3CC7A,	0X2A);
	set_name	(0X3CC7A,	"shapedata42_9");
	create_byte	(0X3CCA4);
	make_array	(0X3CCA4,	0X2A);
	set_name	(0X3CCA4,	"shapedata42_10");
	create_byte	(0X3CCCE);
	make_array	(0X3CCCE,	0XD2);
	set_name	(0X3CCCE,	"shapedata210_6");
	create_byte	(0X3CDA0);
	make_array	(0X3CDA0,	0X162);
	set_name	(0X3CDA0,	"shapedata354");
	create_byte	(0X3CF02);
	make_array	(0X3CF02,	0X162);
	set_name	(0X3CF02,	"shapedata354_2");
	create_byte	(0X3D064);
	make_array	(0X3D064,	0X54);
	set_name	(0X3D064,	"shapedata84");
	create_byte	(0X3D0B8);
	make_array	(0X3D0B8,	0X54);
	set_name	(0X3D0B8,	"shapedata84_2");
	create_byte	(0X3D10C);
	make_array	(0X3D10C,	0X36);
	set_name	(0X3D10C,	"shapedata54_4");
	create_byte	(0X3D142);
	make_array	(0X3D142,	0X36);
	set_name	(0X3D142,	"shapedata54_3");
	MakeStruct	(0X3D178,	"TRKOBJINFO");
	make_array	(0X3D178,	0X78);
	set_name	(0X3D178,	"shapeinfos");
	MakeStruct	(0X3D808,	"TRACKOBJECT");
	make_array	(0X3D808,	0XD7);
	set_name	(0X3D808,	"trkObjectList");
	update_extra_cmt		(0X3E3CA,	E_PREV + 0,	"Terrain objects used for graphics only.");
	update_extra_cmt		(0X3E3CA,	E_PREV + 1,	"Note that element 0 is not actually");
	update_extra_cmt		(0X3E3CA,	E_PREV + 2,	"part of the array (terrain tiles which");
	update_extra_cmt		(0X3E3CA,	E_PREV + 3,	"actually need graphical props are from");
	update_extra_cmt		(0X3E3CA,	E_PREV + 4,	"0x1 to 0x12).");
	MakeStruct	(0X3E3CA,	"TRACKOBJECT");
	make_array	(0X3E3CA,	0X13);
	set_name	(0X3E3CA,	"sceneshapes2");
	MakeStruct	(0X3E4D4,	"TRACKOBJECT");
	make_array	(0X3E4D4,	0XD);
	set_name	(0X3E4D4,	"sceneshapes3");
	create_word	(0X3E58A);
	set_name	(0X3E58A,	"loopSurface_ZBounds0");
	create_word	(0X3E58C);
	set_name	(0X3E58C,	"loopSurface_ZBounds1");
	create_word	(0X3E58E);
	create_word	(0X3E590);
	set_name	(0X3E590,	"loopSurface_maxZ");
	set_cmt	(0X3E592,	"these three words are part of XBounds too...",	0);
	create_word	(0X3E592);
	create_word	(0X3E594);
	create_word	(0X3E596);
	create_word	(0X3E598);
	set_name	(0X3E598,	"loopSurface_XBounds0");
	create_word	(0X3E59A);
	set_name	(0X3E59A,	"loopSurface_XBounds1");
	create_word	(0X3E5B4);
	set_name	(0X3E5B4,	"loopBase_ZBounds0");
	create_word	(0X3E5B6);
	set_name	(0X3E5B6,	"loopBase_ZBounds1");
	create_word	(0X3E5B8);
	create_word	(0X3E5BA);
	create_word	(0X3E5BC);
	create_word	(0X3E5BE);
	create_word	(0X3E5C0);
	create_word	(0X3E5C2);
	set_name	(0X3E5C2,	"loopBae_InnXBounds0");
	create_word	(0X3E5C4);
	set_name	(0X3E5C4,	"loopBase_InnXBounds1");
	create_word	(0X3E5D0);
	set_name	(0X3E5D0,	"loopBase_OutXBounds0");
	create_word	(0X3E5D2);
	set_name	(0X3E5D2,	"loopBase_OutXBounds1");
	create_word	(0X3E5DE);
	set_name	(0X3E5DE,	"bkRdEntr_triang_zAdjust");
	create_word	(0X3E5E0);
	create_word	(0X3E5E2);
	create_word	(0X3E5E4);
	create_word	(0X3E5E6);
	set_name	(0X3E5E6,	"corkLR_negZBound");
	set_cmt	(0X3E5E8,	"array element 0 is just padding.",	0);
	create_word	(0X3E5E8);
	create_word	(0X3E5EA);
	create_word	(0X3E5EC);
	create_word	(0X3E5EE);
	create_word	(0X3E5F0);
	create_word	(0X3E5F2);
	create_word	(0X3E5F4);
	create_word	(0X3E5F6);
	create_word	(0X3E5F8);
	create_word	(0X3E5FA);
	create_word	(0X3E5FC);
	create_word	(0X3E5FE);
	set_name	(0X3E5FE,	"corkLR_posZBound");
	set_cmt	(0X3E600,	"array element 0 is just padding.",	0);
	create_word	(0X3E600);
	create_word	(0X3E602);
	create_word	(0X3E604);
	create_word	(0X3E606);
	create_word	(0X3E608);
	create_word	(0X3E60A);
	create_word	(0X3E60C);
	create_word	(0X3E60E);
	create_word	(0X3E610);
	create_word	(0X3E612);
	create_word	(0X3E614);
	create_word	(0X3E616);
	set_name	(0X3E616,	"highEntrZBounds0");
	create_word	(0X3E618);
	set_name	(0X3E618,	"highEntrZBounds1");
	create_word	(0X3E61A);
	create_word	(0X3E61C);
	create_word	(0X3E61E);
	create_word	(0X3E620);
	create_word	(0X3E622);
	create_word	(0X3E624);
	set_name	(0X3E624,	"highEntrXInnBounds0");
	create_word	(0X3E626);
	set_name	(0X3E626,	"highEntrXInnBounds1");
	create_word	(0X3E628);
	create_word	(0X3E62A);
	create_word	(0X3E62C);
	create_word	(0X3E62E);
	create_word	(0X3E630);
	create_word	(0X3E632);
	set_name	(0X3E632,	"highEntrXOutBounds0");
	create_word	(0X3E634);
	set_name	(0X3E634,	"highEntrXOutBounds1");
	create_word	(0X3E636);
	create_word	(0X3E638);
	create_word	(0X3E63A);
	create_word	(0X3E63C);
	create_word	(0X3E63E);
	create_strlit	(0X3E6B2,	0X3E6B8);
	set_name	(0X3E6B2,	"aGame1");
	create_strlit	(0X3E6B8,	0X3E6BE);
	set_name	(0X3E6B8,	"aGame2");
	create_strlit	(0X3E6BE,	0X3E6C3);
	set_name	(0X3E6BE,	"aCar0");
	create_strlit	(0X3E6C3,	0X3E6C8);
	set_name	(0X3E6C3,	"aCar1");
	create_strlit	(0X3E6C8,	0X3E6CD);
	set_name	(0X3E6C8,	"aCar2");
	create_strlit	(0X3E6CD,	0X3E6D2);
	set_name	(0X3E6CD,	"aExp0_0");
	create_strlit	(0X3E6D2,	0X3E6D7);
	set_name	(0X3E6D2,	"aExp1_0");
	create_strlit	(0X3E6D7,	0X3E6DC);
	set_name	(0X3E6D7,	"aExp2_0");
	create_strlit	(0X3E6DC,	0X3E6E1);
	set_name	(0X3E6DC,	"aExp3_0");
	create_strlit	(0X3E6E1,	0X3E6E6);
	set_name	(0X3E6E1,	"aCar2_0");
	create_strlit	(0X3E6E6,	0X3E6EB);
	set_name	(0X3E6E6,	"aCar0_0");
	create_strlit	(0X3E6EB,	0X3E6F0);
	set_name	(0X3E6EB,	"aCar1_0");
	create_strlit	(0X3E6F0,	0X3E6F5);
	set_name	(0X3E6F0,	"aCar2_1");
	create_strlit	(0X3E6F5,	0X3E6FA);
	set_name	(0X3E6F5,	"aExp0_1");
	create_strlit	(0X3E6FA,	0X3E6FF);
	set_name	(0X3E6FA,	"aExp1_1");
	create_strlit	(0X3E6FF,	0X3E704);
	set_name	(0X3E6FF,	"aExp2_1");
	create_strlit	(0X3E704,	0X3E709);
	set_name	(0X3E704,	"aExp3_1");
	create_strlit	(0X3E70A,	0X3E710);
	set_name	(0X3E70A,	"aStxxx");
	create_strlit	(0X3E718,	0X3E71E);
	set_name	(0X3E718,	"aTcomp");
	create_byte	(0X3E71E);
	create_byte	(0X3E724);
	create_byte	(0X3E72A);
	make_array	(0X3E72A,	0X14);
	set_name	(0X3E72A,	"terrConnDataEtoW");
	create_byte	(0X3E73E);
	make_array	(0X3E73E,	0X14);
	set_name	(0X3E73E,	"terrConnDataWtoE");
	create_byte	(0X3E752);
	make_array	(0X3E752,	0X14);
	set_name	(0X3E752,	"terrConnDataNtoS");
	create_byte	(0X3E766);
	make_array	(0X3E766,	0X13);
	set_name	(0X3E766,	"terrConnDataStoN");
	create_strlit	(0X3E779,	0X3E77D);
	set_name	(0X3E779,	"aNam");
	create_strlit	(0X3E77D,	0X3E782);
	set_name	(0X3E77D,	"aPath");
	create_strlit	(0X3E782,	0X3E787);
	set_name	(0X3E782,	"aSped");
	create_strlit	(0X3E788,	0X3E78D);
	set_name	(0X3E788,	"aEngi");
	create_strlit	(0X3E78D,	0X3E792);
	set_name	(0X3E78D,	"aEngi_0");
	create_strlit	(0X3E792,	0X3E797);
	set_name	(0X3E792,	"aStar");
	create_strlit	(0X3E797,	0X3E79C);
	set_name	(0X3E797,	"aStop");
	create_strlit	(0X3E79C,	0X3E7A1);
	set_name	(0X3E79C,	"aBlow");
	create_strlit	(0X3E7A1,	0X3E7A6);
	set_name	(0X3E7A1,	"aCras");
	create_strlit	(0X3E7A6,	0X3E7AB);
	set_name	(0X3E7A6,	"aSkid");
	create_strlit	(0X3E7AB,	0X3E7B0);
	set_name	(0X3E7AB,	"aSki2");
	create_strlit	(0X3E7B0,	0X3E7B5);
	set_name	(0X3E7B0,	"aBump");
	create_strlit	(0X3E7B5,	0X3E7BA);
	set_name	(0X3E7B5,	"aScra");
	create_strlit	(0X3E7BA,	0X3E7BF);
	set_name	(0X3E7BA,	"aEngi_1");
	create_strlit	(0X3E7BF,	0X3E7C4);
	set_name	(0X3E7BF,	"aEngi_2");
	create_strlit	(0X3E7C4,	0X3E7C9);
	set_name	(0X3E7C4,	"aStar_0");
	create_strlit	(0X3E7C9,	0X3E7CE);
	set_name	(0X3E7C9,	"aStop_0");
	create_strlit	(0X3E7CE,	0X3E7D3);
	set_name	(0X3E7CE,	"aBlow_0");
	create_strlit	(0X3E7D3,	0X3E7D8);
	set_name	(0X3E7D3,	"aCras_0");
	create_strlit	(0X3E7D8,	0X3E7DD);
	set_name	(0X3E7D8,	"aSkid_0");
	create_strlit	(0X3E7DD,	0X3E7E2);
	set_name	(0X3E7DD,	"aSki2_0");
	create_strlit	(0X3E7E2,	0X3E7E7);
	set_name	(0X3E7E2,	"aBump_0");
	create_strlit	(0X3E7E7,	0X3E7EC);
	set_name	(0X3E7E7,	"aScra_0");
	create_strlit	(0X3E7EC,	0X3E7F4);
	set_name	(0X3E7EC,	"aDefault");
	create_strlit	(0X3E7F4,	0X3E7F8);
	set_name	(0X3E7F4,	"aRbf");
	create_strlit	(0X3E7F8,	0X3E7FC);
	set_name	(0X3E7F8,	"aCop");
	create_dword	(x=0X3E804);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E808);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E80C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E810);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E814);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E818);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E81C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E820);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E824);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E828);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E834);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E838);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E83C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E840);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E844);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E848);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E84C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E850);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E854);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_dword	(x=0X3E858);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_byte	(0X3E85C);
	create_strlit	(0X3E87E,	0X3E883);
	set_name	(0X3E87E,	"a_rpl");
	create_strlit	(0X3E883,	0X3E8A8);
	set_name	(0X3E883,	"aWhl1whl2whl3ins2gboxins1i");
	create_strlit	(0X3E8A8,	0X3E8C1);
	set_name	(0X3E8A8,	"aGnobgnabdotDotadot1dot2");
	create_strlit	(0X3E8C1,	0X3E8EA);
	set_name	(0X3E8C1,	"aDig0dig1dig2dig3dig4dig5d");
	create_strlit	(0X3E8EA,	0X3E8EF);
	set_name	(0X3E8EA,	"aDash");
	create_strlit	(0X3E8EF,	0X3E8F4);
	set_name	(0X3E8EF,	"aRoof");
	create_strlit	(0X3E8F4,	0X3E8F9);
	set_name	(0X3E8F4,	"aRoof_0");
	create_strlit	(0X3E8F9,	0X3E8FE);
	set_name	(0X3E8F9,	"aDast");
	create_strlit	(0X3E8FE,	0X3E903);
	set_name	(0X3E8FE,	"aDasm");
	create_strlit	(0X3E903,	0X3E908);
	set_name	(0X3E903,	"aRoof_1");
	create_strlit	(0X3E908,	0X3E90D);
	set_name	(0X3E908,	"aRoof_2");
	create_strlit	(0X3E90D,	0X3E912);
	set_name	(0X3E90D,	"aDash_0");
	create_strlit	(0X3E912,	0X3E91B);
	set_name	(0X3E912,	"aStdaxxxx");
	create_strlit	(0X3E91C,	0X3E925);
	set_name	(0X3E91C,	"aStdbxxxx");
	create_strlit	(0X3E925,	0X3E92A);
	set_name	(0X3E925,	"aEng1");
	create_strlit	(0X3E92A,	0X3E92E);
	set_name	(0X3E92A,	"aEng");
	create_strlit	(0X3E92E,	0X3E93A);
	set_name	(0X3E92E,	"aFontled_fnt");
	create_strlit	(0X3E93A,	0X3E941);
	set_name	(0X3E93A,	"aSdgame");
	create_strlit	(0X3E941,	0X3E946);
	set_name	(0X3E941,	"aGame");
	create_strlit	(0X3E946,	0X3E94B);
	set_name	(0X3E946,	"aPlan");
	create_strlit	(0X3E94B,	0X3E950);
	set_name	(0X3E94B,	"aWall");
	create_strlit	(0X3E950,	0X3E9AD);
	set_name	(0X3E950,	"aRplyrpicrpacrpmcrptcbof6bof5b");
	create_strlit	(0X3E9AD,	0X3E9B1);
	set_name	(0X3E9AD,	"aMen_0");
	create_strlit	(0X3E9B1,	0X3E9B5);
	set_name	(0X3E9B1,	"aCon_0");
	create_strlit	(0X3E9B5,	0X3E9B9);
	set_name	(0X3E9B5,	"aRep");
	create_strlit	(0X3E9B9,	0X3E9BE);
	set_name	(0X3E9B9,	"a_rpl_1");
	create_strlit	(0X3E9BE,	0X3E9C2);
	set_name	(0X3E9BE,	"aRep_1");
	create_strlit	(0X3E9C2,	0X3E9C7);
	set_name	(0X3E9C2,	"a_rpl_2");
	create_strlit	(0X3E9C7,	0X3E9CB);
	set_name	(0X3E9C7,	"aFex_0");
	create_strlit	(0X3E9CB,	0X3E9CF);
	set_name	(0X3E9CB,	"aSer_0");
	create_strlit	(0X3E9CF,	0X3E9D3);
	set_name	(0X3E9CF,	"aMdo");
	create_strlit	(0X3E9D3,	0X3E9D7);
	set_name	(0X3E9D3,	"aWai_0");
	create_strlit	(0X3E9D7,	0X3E9DB);
	set_name	(0X3E9D7,	"aWai_1");
	create_byte	(0X3E9DB);
	create_byte	(0X3E9DC);
	create_byte	(0X3E9E6);
	create_byte	(0X3E9F0);
	create_byte	(0X3E9FA);
	create_byte	(0X3EA04);
	set_name	(0X3EA04,	"game_camera_buttons_count");
	create_word	(0X3EA08);
	set_name	(0X3EA08,	"game_camera_buttons_x1");
	create_word	(0X3EA0A);
	create_word	(0X3EA0C);
	create_word	(0X3EA0E);
	create_word	(0X3EA10);
	create_word	(0X3EA12);
	create_word	(0X3EA14);
	create_word	(0X3EA16);
	create_word	(0X3EA18);
	create_word	(0X3EA1A);
	set_name	(0X3EA1A,	"game_camera_buttons_x2");
	create_word	(0X3EA1C);
	create_word	(0X3EA1E);
	create_word	(0X3EA20);
	create_word	(0X3EA22);
	create_word	(0X3EA24);
	create_word	(0X3EA26);
	create_word	(0X3EA28);
	create_word	(0X3EA2A);
	create_word	(0X3EA2C);
	set_name	(0X3EA2C,	"game_camera_buttons_y1");
	create_word	(0X3EA2E);
	create_word	(0X3EA30);
	create_word	(0X3EA32);
	create_word	(0X3EA34);
	create_word	(0X3EA36);
	create_word	(0X3EA38);
	create_word	(0X3EA3A);
	create_word	(0X3EA3C);
	create_word	(0X3EA3E);
	set_name	(0X3EA3E,	"game_camera_buttons_y2");
	create_word	(0X3EA40);
	create_word	(0X3EA42);
	create_word	(0X3EA44);
	create_word	(0X3EA46);
	create_word	(0X3EA48);
	create_word	(0X3EA4A);
	create_word	(0X3EA4C);
	create_word	(0X3EA4E);
	create_word	(0X3EA50);
	set_name	(0X3EA50,	"gameunk_button_x1");
	create_word	(0X3EA52);
	set_name	(0X3EA52,	"gameunk_button_x2");
	create_word	(0X3EA54);
	set_name	(0X3EA54,	"gameunk_button_y1");
	create_word	(0X3EA56);
	set_name	(0X3EA56,	"gameunk_button_y2");
	create_strlit	(0X3EA58,	0X3EA61);
	set_name	(0X3EA58,	"aPolyinfo");
	create_byte	(0X3EA62);
	set_name	(0X3EA62,	"primidxcounttab");
	create_byte	(0X3EA72);
	set_name	(0X3EA72,	"primtypetab");
	create_dword	(0X3EA82);
	make_array	(0X3EA82,	0X20);
	set_name	(0X3EA82,	"invpow2tbl");
	create_word	(0X3EB02);
	set_name	(0X3EB02,	"mat_y_rot_angle");
	MakeStruct	(0X3EB04,	"RECTANGLE");
	set_name	(0X3EB04,	"cliprect_unk");
	create_strlit	(0X3EB0C,	0X3EB2A);
	set_name	(0X3EB0C,	"aInitengineAllHandlesUsed_");
	create_word	(0X3EB2A);
	create_strlit	(0X3EB2C,	0X3EB4D);
	set_name	(0X3EB2C,	"aStartengineNew");
	create_strlit	(0X3EB4E,	0X3EB52);
	set_name	(0X3EB4E,	"aId1");
	create_strlit	(0X3EB52,	0X3EB56);
	set_name	(0X3EB52,	"aId2");
	create_strlit	(0X3EB56,	0X3EB5A);
	set_name	(0X3EB56,	"aId3");
	create_strlit	(0X3EB5A,	0X3EB5E);
	set_name	(0X3EB5A,	"aId4");
	create_strlit	(0X3EB5E,	0X3EB68);
	set_name	(0X3EB5E,	"aSetup_exe");
	create_strlit	(0X3EB68,	0X3EB71);
	set_name	(0X3EB68,	"aSdtitl_");
	create_strlit	(0X3EB71,	0X3EB79);
	set_name	(0X3EB71,	"aTedit_");
	create_strlit	(0X3EB79,	0X3EB80);
	set_name	(0X3EB79,	"aOpp1_");
	create_word	(x=0X3EB80);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB82);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB84);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB86);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X3EB86,	"findfilenames");
	create_word	(x=0X3EB88);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB8A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB8C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3EB8E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(0X3EB90);
	create_strlit	(0X3EB92,	0X3EB96);
	set_name	(0X3EB92,	"aLoa");
	create_strlit	(0X3EB96,	0X3EB98);
	create_strlit	(0X3EB98,	0X3EB9C);
	set_name	(0X3EB98,	"aLsu");
	create_strlit	(0X3EB9C,	0X3EBA0);
	set_name	(0X3EB9C,	"aLsd");
	create_strlit	(0X3EBA0,	0X3EBA9);
	create_strlit	(0X3EBA9,	0X3EBAB);
	create_strlit	(0X3EBAB,	0X3EBAF);
	set_name	(0X3EBAB,	"aSav");
	create_word	(0X3EBB0);
	set_name	(0X3EBB0,	"input_framecount2");
	create_word	(0X3EBB2);
	set_name	(0X3EBB2,	"input_framecount3");
	create_word	(0X3EBB4);
	set_name	(0X3EBB4,	"joyflags");
	create_word	(0X3EBB6);
	set_name	(0X3EBB6,	"newjoyflags");
	create_word	(0X3EBB8);
	set_name	(0X3EBB8,	"mouse_oldx");
	create_word	(0X3EBBA);
	set_name	(0X3EBBA,	"mouse_oldy");
	create_word	(0X3EBBC);
	set_name	(0X3EBBC,	"mouse_oldbut");
	create_word	(0X3EBBE);
	set_name	(0X3EBBE,	"input_framecounter");
	create_word	(0X3EBC0);
	set_name	(0X3EBC0,	"joyinputcode");
	create_word	(0X3EBC2);
	set_name	(0X3EBC2,	"mousebutinputcode");
	create_word	(0X3EBC4);
	set_name	(0X3EBC4,	"input_framecount");
	create_strlit	(0X3EBC6,	0X3EBCB);
	set_name	(0X3EBC6,	"a_res");
	create_strlit	(0X3EBCB,	0X3EBD0);
	set_name	(0X3EBCB,	"a_pre");
	create_strlit	(0X3EBD0,	0X3EBD4);
	set_name	(0X3EBD0,	"aWai");
	create_strlit	(0X3EBD4,	0X3EBD6);
	create_strlit	(0X3EBD6,	0X3EBD8);
	set_name	(0X3EBD6,	"a_");
	create_byte	(0X3EBD8);
	create_strlit	(0X3EBD9,	0X3EBDD);
	set_name	(0X3EBD9,	"aJoy");
	create_strlit	(0X3EBDD,	0X3EBE1);
	set_name	(0X3EBDD,	"aJox");
	create_strlit	(0X3EBE1,	0X3EBE5);
	set_name	(0X3EBE1,	"aKey");
	create_strlit	(0X3EBE5,	0X3EBE9);
	set_name	(0X3EBE5,	"aMou");
	create_strlit	(0X3EBE9,	0X3EBED);
	set_name	(0X3EBE9,	"aPau");
	create_strlit	(0X3EBED,	0X3EBF1);
	set_name	(0X3EBED,	"aMon");
	create_strlit	(0X3EBF1,	0X3EBF5);
	set_name	(0X3EBF1,	"aMof");
	create_strlit	(0X3EBF5,	0X3EBF9);
	set_name	(0X3EBF5,	"aSon");
	create_strlit	(0X3EBF9,	0X3EBFD);
	set_name	(0X3EBF9,	"aSof");
	create_strlit	(0X3EBFD,	0X3EC01);
	set_name	(0X3EBFD,	"aDos_0");
	create_strlit	(0X3EC01,	0X3EC05);
	set_name	(0X3EC01,	"aMrl");
	create_strlit	(0X3EC05,	0X3EC09);
	set_name	(0X3EC05,	"aMrs");
	create_strlit	(0X3EC09,	0X3EC0D);
	set_name	(0X3EC09,	"aDea");
	create_strlit	(0X3EC0D,	0X3EC11);
	set_name	(0X3EC0D,	"aDer");
	create_strlit	(0X3EC11,	0X3EC15);
	set_name	(0X3EC11,	"aMer");
	create_strlit	(0X3EC15,	0X3EC1A);
	set_name	(0X3EC15,	"a_p3s");
	create_strlit	(0X3EC1A,	0X3EC1F);
	set_name	(0X3EC1A,	"a_3sh");
	create_strlit	(0X3EC20,	0X3EC28);
	set_name	(0X3EC20,	"aSdtedit");
	create_strlit	(0X3EC28,	0X3EC2E);
	set_name	(0X3EC28,	"aTedit_0");
	create_strlit	(0X3EC2E,	0X3EC33);
	set_name	(0X3EC2E,	"aPbox");
	create_strlit	(0X3EC33,	0X3EC38);
	set_name	(0X3EC33,	"aSnam");
	create_strlit	(0X3EC38,	0X3EC3D);
	set_name	(0X3EC38,	"aMnam");
	create_strlit	(0X3EC3D,	0X3EC42);
	set_name	(0X3EC3D,	"aTnam");
	create_strlit	(0X3EC42,	0X3EC46);
	set_name	(0X3EC42,	"aBti");
	create_strlit	(0X3EC46,	0X3EC4A);
	set_name	(0X3EC46,	"aBsc");
	create_strlit	(0X3EC4A,	0X3EC4E);
	set_name	(0X3EC4A,	"aBlo");
	create_strlit	(0X3EC4E,	0X3EC52);
	set_name	(0X3EC4E,	"aBsa");
	create_strlit	(0X3EC52,	0X3EC56);
	set_name	(0X3EC52,	"aBcl_0");
	create_strlit	(0X3EC56,	0X3EC5A);
	set_name	(0X3EC56,	"aBex");
	create_strlit	(0X3EC5A,	0X3EC5E);
	set_name	(0X3EC5A,	"aMss");
	create_strlit	(0X3EC5E,	0X3EC62);
	set_name	(0X3EC5E,	"aMen");
	create_strlit	(0X3EC62,	0X3EC66);
	set_name	(0X3EC62,	"aChl");
	create_strlit	(0X3EC66,	0X3EC6A);
	set_name	(0X3EC66,	"aTrk_0");
	create_strlit	(0X3EC6A,	0X3EC6F);
	set_name	(0X3EC6A,	"a_trk_2");
	create_strlit	(0X3EC6F,	0X3EC74);
	set_name	(0X3EC6F,	"a_trk_3");
	create_strlit	(0X3EC74,	0X3EC78);
	set_name	(0X3EC74,	"aTrk_1");
	create_strlit	(0X3EC78,	0X3EC7D);
	set_name	(0X3EC78,	"a_trk_4");
	create_strlit	(0X3EC7D,	0X3EC81);
	set_name	(0X3EC7D,	"aFex");
	create_strlit	(0X3EC81,	0X3EC85);
	set_name	(0X3EC81,	"aSer");
	create_strlit	(0X3EC85,	0X3EC89);
	set_name	(0X3EC85,	"aChx");
	create_strlit	(0X3EC8A,	0X3ECB8);
	set_name	(0X3EC8A,	"aEokenseieemseedewwefuenpestej");
	create_strlit	(0X3ECB8,	0X3ECBD);
	set_name	(0X3ECB8,	"aTer0");
	create_word	(0X3ECBE);
	create_word	(0X3ECD6);
	make_array	(0X3ECD6,	0X5);
	set_name	(0X3ECD6,	"trackmenu2_buttons_x1");
	create_word	(0X3ECE0);
	make_array	(0X3ECE0,	0X5);
	set_name	(0X3ECE0,	"trackmenu2_buttons_x2");
	create_word	(0X3ECEA);
	make_array	(0X3ECEA,	0X5);
	set_name	(0X3ECEA,	"trackmenu2_buttons_y1");
	create_word	(0X3ECF4);
	make_array	(0X3ECF4,	0X5);
	set_name	(0X3ECF4,	"trackmenu2_buttons_y2");
	create_byte	(0X3ECFE);
	create_byte	(0X3ED00);
	create_strlit	(0X3ED02,	0X3ED4F);
	set_name	(0X3ED02,	"aFlatlakelak1lak2lak3lak4highg");
	create_strlit	(0X3ED50,	0X3ED61);
	set_name	(0X3ED50,	"aCrs0crs1crs2crs3");
	create_strlit	(0X3ED62,	0X3ED73);
	set_name	(0X3ED62,	"aUcr0ucr1ucr2ucr3");
	create_word	(0X3ED74);
	create_word	(0X3ED76);
	set_name	(0X3ED76,	"crtsp2");
	create_word	(x=0X3ED78);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	set_name	(0X3ED78,	"crtquitfunction");
	create_word	(0X3ED7A);
	set_name	(0X3ED7A,	"crtsp1");
	create_word	(x=0X3ED7C);
	op_seg		(x,	0);
	create_word	(0X3EDCA);
	create_strlit	(0X3EDCC,	0X3EDD9);
	set_name	(0X3EDCC,	"aC_file_info");
	create_dword	(0X3EDD9);
	set_name	(0X3EDD9,	"crtintrvec0");
	create_word	(0X3EDE5);
	create_word	(0X3EDEB);
	set_name	(0X3EDEB,	"crtpspseg");
	create_word	(0X3EDED);
	set_name	(0X3EDED,	"crtdosversion");
	create_byte	(0X3EDF0);
	create_word	(0X3EDF2);
	create_byte	(0X3EDF4);
	set_name	(0X3EDF4,	"crtfilehandles");
	create_word	(0X3EE08);
	set_name	(0X3EE08,	"argc");
	create_word	(0X3EE0A);
	set_name	(0X3EE0A,	"argv");
	create_word	(0X3EE0C);
	create_word	(0X3EE0E);
	create_word	(x=0X3EE10);
	op_seg		(x,	0);
	set_name	(0X3EE10,	"crtenvseg");
	create_word	(0X3EE14);
	create_byte	(0X3EE16);
	create_byte	(0X3EE17);
	create_dword	(0X3EE18);
	create_word	(0X3EE1E);
	create_dword	(0X3EE20);
	create_word	(0X3EE24);
	create_dword	(0X3EE26);
	create_word	(0X3EE3E);
	create_word	(0X3EF58);
	create_strlit	(0X3EF5A,	0X3EF61);
	set_name	(0X3EF5A,	"aNull");
	create_strlit	(0X3EF61,	0X3EF68);
	set_name	(0X3EF61,	"aNull_0");
	create_strlit	(0X3EF68,	0X3EF6D);
	create_word	(0X3EF6E);
	create_word	(0X3EF70);
	create_word	(0X3EF74);
	create_word	(0X3EF78);
	create_word	(0X3EF7C);
	create_word	(0X3EF7E);
	create_byte	(0X3EF82);
	create_dword	(x=0X3EF84);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_dword	(x=0X3EF88);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_dword	(x=0X3EF8C);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_dword	(x=0X3EF90);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_dword	(x=0X3EF94);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	create_word	(0X3EF98);
	create_word	(0X3EF9A);
	create_byte	(0X3EF9F);
	make_array	(0X3EF9F,	0X100);
	set_name	(0X3EF9F,	"g_ascii_props");
	create_word	(0X3F0A0);
	create_word	(0X3F0A2);
	create_word	(0X3F0A4);
	create_word	(0X3F0A6);
	create_dword	(0X3F0BC);
	create_byte	(0X3F0C0);
	make_array	(0X3F0C0,	0X101);
	set_name	(0X3F0C0,	"atantable");
	create_word	(0X3F1C2);
	create_word	(0X3F1C4);
	create_word	(x=0X3F3C8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3CA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3CC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3CE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3D0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3D2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3D4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3D6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3D8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3DA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3DC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3DE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3E0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3E2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3E4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3E6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3E8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3EA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3EC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3EE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3F0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3F2);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3F4);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3F6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3F8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3FA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3FC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F3FE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F400);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F402);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F404);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F406);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F408);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F40A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F40C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F40E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F410);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F412);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F414);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X3F416);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_byte	(0X3F418);
	create_byte	(0X3F419);
	make_array	(0X3F419,	0X2);
	create_byte	(0X3F41B);
	make_array	(0X3F41B,	0X3);
	create_byte	(0X3F41E);
	make_array	(0X3F41E,	0X4);
	create_byte	(0X3F422);
	make_array	(0X3F422,	0X5);
	create_byte	(0X3F427);
	make_array	(0X3F427,	0X6);
	create_byte	(0X3F42D);
	make_array	(0X3F42D,	0X7);
	create_byte	(0X3F434);
	make_array	(0X3F434,	0X8);
	create_byte	(0X3F43C);
	make_array	(0X3F43C,	0X9);
	create_byte	(0X3F445);
	make_array	(0X3F445,	0XA);
	create_byte	(0X3F44F);
	make_array	(0X3F44F,	0XB);
	create_byte	(0X3F45A);
	make_array	(0X3F45A,	0XC);
	create_byte	(0X3F466);
	make_array	(0X3F466,	0XD);
	create_byte	(0X3F473);
	make_array	(0X3F473,	0XE);
	create_byte	(0X3F481);
	make_array	(0X3F481,	0XF);
	create_byte	(0X3F490);
	make_array	(0X3F490,	0X10);
	create_byte	(0X3F4A0);
	make_array	(0X3F4A0,	0X11);
	create_byte	(0X3F4B1);
	make_array	(0X3F4B1,	0X12);
	create_byte	(0X3F4C3);
	make_array	(0X3F4C3,	0X13);
	create_byte	(0X3F4D6);
	make_array	(0X3F4D6,	0X14);
	create_byte	(0X3F4EA);
	make_array	(0X3F4EA,	0X15);
	create_byte	(0X3F4FF);
	make_array	(0X3F4FF,	0X16);
	create_byte	(0X3F515);
	make_array	(0X3F515,	0X17);
	create_byte	(0X3F52C);
	make_array	(0X3F52C,	0X18);
	create_byte	(0X3F544);
	make_array	(0X3F544,	0X19);
	create_byte	(0X3F55D);
	make_array	(0X3F55D,	0X1A);
	create_byte	(0X3F577);
	make_array	(0X3F577,	0X1B);
	create_byte	(0X3F592);
	make_array	(0X3F592,	0X1C);
	create_byte	(0X3F5AE);
	make_array	(0X3F5AE,	0X1D);
	create_byte	(0X3F5CB);
	make_array	(0X3F5CB,	0X1E);
	create_byte	(0X3F5E9);
	make_array	(0X3F5E9,	0X1F);
	create_byte	(0X3F608);
	make_array	(0X3F608,	0X20);
	create_byte	(0X3F628);
	make_array	(0X3F628,	0X21);
	create_byte	(0X3F649);
	make_array	(0X3F649,	0X22);
	create_byte	(0X3F66B);
	make_array	(0X3F66B,	0X23);
	create_byte	(0X3F68E);
	make_array	(0X3F68E,	0X24);
	create_byte	(0X3F6B2);
	make_array	(0X3F6B2,	0X25);
	create_byte	(0X3F6D7);
	make_array	(0X3F6D7,	0X26);
	create_byte	(0X3F6FD);
	make_array	(0X3F6FD,	0X27);
	create_word	(0X3F724);
	make_array	(0X3F724,	0X16);
	set_name	(0X3F724,	"exitlistfuncs");
	create_strlit	(0X3F750,	0X3F765);
	set_name	(0X3F750,	"aExitListOverflow");
	create_strlit	(0X3F766,	0X3F774);
	set_name	(0X3F766,	"aSFileError_1");
	create_byte	(0X3F774);
	make_array	(0X3F774,	0X64);
	set_name	(0X3F774,	"foundfile");
	create_word	(0X3F7D8);
	set_name	(0X3F7D8,	"foundfileptr");
	create_byte	(0X3F7DA);
	make_array	(0X3F7DA,	0X1E);
	set_name	(0X3F7DA,	"dtatransbuffer");
	create_byte	(0X3F7F8);
	make_array	(0X3F7F8,	0XD);
	set_name	(0X3F7F8,	"foundfilepath");
	create_byte	(0X3F85A);
	create_byte	(0X3F85C);
	create_byte	(0X3F868);
	create_dword	(0X3F874);
	create_dword	(0X3F878);
	set_name	(0X3F878,	"timer_callback_counter");
	create_word	(0X3F87C);
	create_word	(0X3F87E);
	create_byte	(0X3F880);
	create_byte	(0X3F881);
	create_word	(0X3F882);
	create_word	(0X3F884);
	create_word	(0X3F886);
	create_word	(0X3F888);
	create_word	(0X3F88A);
	create_byte	(0X3F88C);
	create_word	(0X3F88E);
	create_dword	(0X3F890);
	set_name	(0X3F890,	"timerintr");
	create_strlit	(0X3F8AC,	0X3F8DA);
	set_name	(0X3F8AC,	"aNoRoomLeftOnTimerInterru");
	create_byte	(0X3F8DA);
	make_array	(0X3F8DA,	0X80);
	set_name	(0X3F8DA,	"callbackflags");
	create_byte	(0X3F95A);
	make_array	(0X3F95A,	0X80);
	set_name	(0X3F95A,	"callbackflags2");
	create_byte	(0X3F9E0);
	set_name	(0X3F9E0,	"in_kb_parse_key");
	create_byte	(0X3F9E2);
	make_array	(0X3F9E2,	0X100);
	set_name	(0X3F9E2,	"callbacks");
	create_word	(0X3FB02);
	create_word	(0X3FB04);
	create_byte	(0X3FB06);
	create_byte	(0X3FB08);
	make_array	(0X3FB08,	0XA);
	set_name	(0X3FB08,	"kbscancodes");
	create_word	(0X3FB12);
	set_name	(0X3FB12,	"joyflag1");
	create_word	(0X3FB14);
	set_name	(0X3FB14,	"joyflag2");
	create_byte	(0X3FB16);
	set_name	(0X3FB16,	"joybutton");
	create_byte	(0X3FB17);
	set_name	(0X3FB17,	"joyinput");
	create_word	(0X3FB18);
	create_word	(0X3FB1A);
	create_word	(0X3FB1C);
	create_word	(0X3FB1E);
	create_word	(0X3FB20);
	create_word	(0X3FB22);
	create_word	(0X3FB24);
	create_word	(0X3FB26);
	create_word	(0X3FB28);
	create_word	(0X3FB2A);
	create_word	(0X3FB2C);
	create_word	(0X3FB2E);
	create_word	(0X3FB30);
	create_word	(0X3FB32);
	create_word	(0X3FB34);
	create_word	(0X3FB36);
	create_byte	(0X3FB38);
	make_array	(0X3FB38,	0X10);
	create_word	(0X3FB48);
	set_name	(0X3FB48,	"old_kb_intr_ofs");
	create_word	(0X3FB4A);
	set_name	(0X3FB4A,	"old_kb_intr_seg");
	create_word	(0X3FB4C);
	set_name	(0X3FB4C,	"old_kb_intr_bios_ofs");
	create_word	(0X3FB4E);
	set_name	(0X3FB4E,	"old_kb_intr_bios_seg");
	create_word	(0X3FB50);
	make_array	(0X3FB50,	0X40);
	set_name	(0X3FB50,	"kb_intr_data_array");
	create_word	(0X3FBD0);
	set_name	(0X3FBD0,	"kb_intr_data");
	create_word	(0X3FBD2);
	set_name	(0X3FBD2,	"kb_intr_data2");
	create_word	(0X3FBD4);
	set_name	(0X3FBD4,	"kb_intr_data3");
	create_word	(0X3FBD6);
	set_name	(0X3FBD6,	"kb_intr_data4");
	create_word	(0X3FBD8);
	set_name	(0X3FBD8,	"kblastinput");
	create_byte	(0X3FBDA);
	make_array	(0X3FBDA,	0X5A);
	set_name	(0X3FBDA,	"kbinput");
	create_byte	(0X3FC34);
	make_array	(0X3FC34,	0X5B);
	set_name	(0X3FC34,	"keymap1");
	create_byte	(0X3FC8F);
	make_array	(0X3FC8F,	0X5B);
	set_name	(0X3FC8F,	"keymap2");
	create_byte	(x=0X3FCEA);
	make_array	(x,	0X5B);
	op_bin		(x,	0);
	set_name	(0X3FCEA,	"keymap3");
	create_byte	(0X3FD45);
	make_array	(0X3FD45,	0X5B);
	set_name	(0X3FD45,	"keymap4");
	create_byte	(0X3FDA0);
	make_array	(0X3FDA0,	0X5B);
	set_name	(0X3FDA0,	"keymap5");
	create_word	(x=0X3FDFC);
	op_plain_offset	(x,	0,	0X2EA20);
	op_plain_offset	(x,	128,	0X2EA20);
	set_name	(0X3FDFC,	"readchar_callback_ofs");
	create_word	(x=0X3FDFE);
	op_seg		(x,	0);
	set_name	(0X3FDFE,	"readchar_callback_seg");
	create_byte	(0X3FE00);
	create_strlit	(0X3FE02,	0X3FE11);
	set_name	(0X3FE02,	"aSFileError");
	create_strlit	(0X3FE11,	0X3FE25);
	set_name	(0X3FE11,	"aSNotPackedFile");
	create_strlit	(0X3FE25,	0X3FE3B);
	set_name	(0X3FE25,	"aSInvalidPackTy");
	create_strlit	(0X3FE3C,	0X3FE62);
	set_name	(0X3FE3C,	"aLocateshape4_4sShapeNotF");
	create_strlit	(0X3FE62,	0X3FE88);
	set_name	(0X3FE62,	"aLocatesound4_4sSoundNotF");
	create_strlit	(0X3FE88,	0X3FEC0);
	set_name	(0X3FE88,	"aReservememoryOutOfMemory");
	create_strlit	(0X3FEC0,	0X3FEF3);
	set_name	(0X3FEC0,	"aReservememoryO");
	create_strlit	(0X3FEF3,	0X3FF21);
	set_name	(0X3FEF3,	"aMemoryManagerB");
	create_strlit	(0X3FF21,	0X3FF51);
	set_name	(0X3FF21,	"aResizememoryCa");
	create_strlit	(0X3FF51,	0X3FF81);
	set_name	(0X3FF51,	"aResizememoryNo");
	create_word	(0X3FF82);
	create_word	(0X3FF84);
	create_word	(0X3FF86);
	set_name	(0X3FF86,	"resmaxsize");
	create_word	(0X3FF88);
	set_name	(0X3FF88,	"pspofs");
	create_word	(0X3FF8A);
	set_name	(0X3FF8A,	"pspseg");
	MakeStruct	(0X3FF8C,	"MEMCHUNK");
	make_array	(0X3FF8C,	0X32);
	set_name	(0X3FF8C,	"resources");
	create_word	(x=0X40310);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40310,	"resptr1");
	create_word	(x=0X40312);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40312,	"resptr2");
	create_word	(x=0X40314);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40314,	"resendptr1");
	create_word	(x=0X40316);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40316,	"resendptr2");
	create_word	(0X40318);
	create_word	(0X4031A);
	set_name	(0X4031A,	"mousehorscale");
	create_word	(0X4031C);
	set_name	(0X4031C,	"showmouse");
	create_word	(0X4031E);
	create_word	(0X40320);
	create_word	(0X40322);
	set_name	(0X40322,	"spritefunc");
	create_word	(x=0X40324);
	op_seg		(x,	0);
	create_word	(0X40326);
	set_name	(0X40326,	"imagefunc");
	create_word	(x=0X40328);
	op_seg		(x,	0);
	create_byte	(0X4032A);
	create_byte	(0X4032B);
	create_byte	(0X4032C);
	create_word	(0X4032E);
	create_word	(0X40330);
	create_word	(0X40332);
	create_word	(0X40334);
	create_word	(0X403AE);
	set_name	(0X403AE,	"projectiondata3");
	create_word	(0X403B0);
	set_name	(0X403B0,	"projectiondata6");
	create_word	(0X403B2);
	set_name	(0X403B2,	"projectiondata4");
	create_word	(0X403B4);
	set_name	(0X403B4,	"projectiondata7");
	create_word	(0X403B6);
	set_name	(0X403B6,	"projectiondata5");
	create_word	(0X403B8);
	set_name	(0X403B8,	"projectiondata8");
	create_word	(0X403BA);
	set_name	(0X403BA,	"projectiondata9");
	create_word	(0X403BC);
	set_name	(0X403BC,	"projectiondata10");
	create_word	(0X403BE);
	set_name	(0X403BE,	"projectiondata1");
	create_word	(0X403C0);
	set_name	(0X403C0,	"projectiondata2");
	create_strlit	(0X403C2,	0X403E1);
	set_name	(0X403C2,	"aWindowReleased");
	create_strlit	(0X403E2,	0X403F1);
	set_name	(0X403E2,	"aSFileError_0");
	create_byte	(0X403F2);
	set_name	(0X403F2,	"currentvideomode");
	create_byte	(0X403F3);
	create_word	(0X403F4);
	make_array	(0X403F4,	0X101);
	set_name	(0X403F4,	"sinetable");
	create_dword	(0X405F6);
	set_name	(0X405F6,	"timer_copy_unk");
	create_dword	(0X405FA);
	set_name	(0X405FA,	"last_timer_callback_counter");
	create_word	(0X405FE);
	create_word	(x=0X40600);
	op_seg		(x,	0);
	set_name	(0X40600,	"fontdefseg");
	create_strlit	(0X40604,	0X40609);
	set_name	(0X40604,	"aHdr1");
	create_dword	(0X4060A);
	set_name	(0X4060A,	"audiodriverbinary");
	create_byte	(0X40630);
	create_byte	(0X40631);
	set_name	(0X40631,	"audioflag2");
	create_byte	(0X40632);
	create_byte	(0X40633);
	set_name	(0X40633,	"audioflag6");
	create_byte	(0X40634);
	create_byte	(0X40635);
	create_byte	(0X40639);
	create_word	(0X4063A);
	create_word	(0X4063C);
	create_strlit	(0X4063F,	0X40643);
	set_name	(0X4063F,	"aDrv");
	create_strlit	(0X40643,	0X4064C);
	set_name	(0X40643,	"aMt32_plb");
	create_strlit	(0X4064C,	0X40660);
	set_name	(0X4064C,	"aCanTFindDriver");
	create_strlit	(0X40660,	0X40663);
	set_name	(0X40660,	"aGe");
	create_strlit	(0X40663,	0X40666);
	set_name	(0X40663,	"aGe_0");
	set_name	(0X40666,	"aBlankstr");
	set_name	(0X40667,	"aBlankstr2");
	create_strlit	(0X40668,	0X4066C);
	set_name	(0X40668,	"aDsf");
	create_strlit	(0X4066C,	0X40670);
	set_name	(0X4066C,	"aSfx");
	create_strlit	(0X40670,	0X40688);
	set_name	(0X40670,	"aCannotLoadSfxFileS");
	create_strlit	(0X40688,	0X4068C);
	set_name	(0X40688,	"aKms");
	create_strlit	(0X4068C,	0X406A5);
	set_name	(0X4068C,	"aCannotLoadSongFileS");
	create_strlit	(0X406A5,	0X406A9);
	set_name	(0X406A5,	"aDvc");
	create_strlit	(0X406A9,	0X406AD);
	set_name	(0X406A9,	"aVce");
	create_strlit	(0X406AD,	0X406C7);
	set_name	(0X406AD,	"aCannotLoadVoiceFileS");
	create_strlit	(0X406C7,	0X406CB);
	set_name	(0X406C7,	"aSlb");
	create_strlit	(0X406CB,	0X406E6);
	set_name	(0X406CB,	"aCannotLoadSampleFileS");
	create_strlit	(0X406E6,	0X406EB);
	set_name	(0X406E6,	"aHdr1_0");
	create_strlit	(0X406EB,	0X406F0);
	set_name	(0X406EB,	"aBasd");
	create_strlit	(0X406F0,	0X406F5);
	set_name	(0X406F0,	"aSnar");
	create_strlit	(0X406F5,	0X406FA);
	set_name	(0X406F5,	"aTomm");
	create_strlit	(0X406FA,	0X406FF);
	set_name	(0X406FA,	"aRide");
	create_strlit	(0X406FF,	0X40704);
	set_name	(0X406FF,	"aCrsh");
	create_strlit	(0X40704,	0X40709);
	set_name	(0X40704,	"aChht");
	create_strlit	(0X40709,	0X4070E);
	set_name	(0X40709,	"aOhht");
	create_strlit	(0X4070E,	0X40713);
	set_name	(0X4070E,	"aHdr1_1");
	create_word	(0X407AA);
	create_word	(0X407CA);
	set_name	(0X407CA,	"dialog_fnt_colour");
	create_word	(0X407CC);
	create_word	(0X407CE);
	create_word	(0X407D0);
	create_word	(0X407D2);
	create_word	(0X407D4);
	create_word	(0X407D6);
	create_word	(0X407D8);
	create_word	(0X407DA);
	create_word	(0X407DC);
	create_word	(0X407DE);
	create_word	(0X407E0);
	create_word	(0X407E2);
	create_word	(0X407E4);
	create_word	(0X407E6);
	create_word	(0X407E8);
	create_word	(0X407EA);
	create_word	(0X407EC);
	create_word	(0X407EE);
	create_word	(0X407F0);
	create_word	(0X407F2);
	create_word	(0X407F4);
	create_word	(0X407F6);
	create_word	(0X407F8);
	create_word	(0X407FA);
	create_word	(0X407FC);
	create_word	(0X407FE);
	create_word	(0X40800);
	set_name	(0X40800,	"performGraphColor");
	create_word	(0X40802);
	set_name	(0X40802,	"dialogarg2");
	create_word	(0X40804);
	make_array	(0X40804,	0X81);
	set_name	(0X40804,	"material_color_list");
	create_word	(0X40906);
	make_array	(0X40906,	0X81);
	set_name	(0X40906,	"material_pattern_list");
	create_word	(0X40A08);
	make_array	(0X40A08,	0X81);
	set_name	(0X40A08,	"material_pattern2_list");
	create_word	(x=0X40B0A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40B0A,	"material_clrlist_ptr");
	create_word	(x=0X40B0C);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40B0C,	"material_clrlist2_ptr");
	create_word	(x=0X40B0E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40B0E,	"material_patlist_ptr");
	create_word	(x=0X40B10);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40B10,	"material_patlist2_ptr");
	create_byte	(0X40B12);
	make_array	(0X40B12,	0X4);
	set_name	(0X40B12,	"audiodriverstring");
	create_strlit	(0X40B17,	0X40B1E);
	set_name	(0X40B17,	"aSdmain");
	create_strlit	(0X40B1E,	0X40B23);
	set_name	(0X40B1E,	"aPal");
	create_strlit	(0X40B23,	0X40B28);
	set_name	(0X40B23,	"aSmou");
	create_strlit	(0X40B28,	0X40B2F);
	set_name	(0X40B28,	"aSdmain_0");
	create_strlit	(0X40B2F,	0X40B34);
	set_name	(0X40B2F,	"aSmou_0");
	create_strlit	(0X40B34,	0X40B39);
	set_name	(0X40B34,	"aMmou");
	create_strlit	(0X40B40,	0X40B87);
	set_name	(0X40B40,	"aCopyrightCUnlimitedSoftwareInc_198");
	create_strlit	(0X40B8C,	0X40B98);
	set_name	(0X40B8C,	"aMcgaWindow");
	create_strlit	(0X40B98,	0X40BBC);
	set_name	(0X40B98,	"aWindowdefOutOfRowTableSpa");
	create_strlit	(0X40BBC,	0X40BC1);
	set_name	(0X40BBC,	"a_pvs_0");
	create_strlit	(0X40BC1,	0X40BC6);
	set_name	(0X40BC1,	"a_xvs_0");
	create_strlit	(0X40BC6,	0X40BCB);
	set_name	(0X40BC6,	"a_vsh");
	create_strlit	(0X40BCB,	0X40BD0);
	set_name	(0X40BCB,	"a_pes_0");
	create_strlit	(0X40BD0,	0X40BD5);
	set_name	(0X40BD0,	"a_esh_0");
	set_name	(0X40BD5,	"shapeextend");
	create_word	(x=0X40BD6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	set_name	(0X40BD6,	"shapeexts");
	create_word	(x=0X40BD8);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X40BDA);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X40BDC);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X40BDE);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(x=0X40BE0);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_byte	(0X40BE2);
	make_array	(0X40BE2,	0X10);
	set_name	(0X40BE2,	"palmap");
	create_strlit	(0X40BF2,	0X40BF7);
	set_name	(0X40BF2,	"a_pvs");
	create_strlit	(0X40BF7,	0X40BFE);
	set_name	(0X40BF7,	"aUnflip_0");
	create_strlit	(0X40BFE,	0X40C03);
	set_name	(0X40BFE,	"a_xvs");
	create_strlit	(0X40C03,	0X40C08);
	set_name	(0X40C03,	"a_pes");
	create_strlit	(0X40C08,	0X40C0F);
	set_name	(0X40C08,	"aUnflip");
	create_strlit	(0X40C0F,	0X40C14);
	set_name	(0X40C0F,	"a_esh");
	create_strlit	(0X40C14,	0X40C19);
	set_name	(0X40C14,	"aMga");
	create_dword	(0X40C1E);
	create_dword	(0X40C22);
	create_dword	(0X40C26);
	create_dword	(x=0X40C2A);
	op_plain_offset	(x,	0,	0X2CC50);
	op_plain_offset	(x,	128,	0X2CC50);
	set_name	(0X40C2A,	"_flushallptr");
	create_strlit	(0X40C2E,	0X40C37);
	set_name	(0X40C2E,	"aNmsg");
	create_strlit	(0X40C38,	0X40C52);
	set_name	(0X40C38,	"aR6000StackOver");
	create_word	(0X40D3A);
	create_word	(0X40D3C);
	create_word	(0X40D3E);
	create_word	(0X40D40);
	create_word	(0X40D42);
	set_name	(0X40D42,	"end_hiscore_random");
	create_word	(0X40D44);
	MakeStruct	(0X40D46,	"MATRIX");
	set_name	(0X40D46,	"mat_unk2");
	MakeStruct	(0X40D58,	"MATRIX");
	set_name	(0X40D58,	"mat_planetmp");
	create_byte	(0X40D6A);
	create_word	(0X40D6C);
	create_word	(0X40D70);
	create_word	(0X40D74);
	create_word	(0X40D78);
	create_dword	(0X40D7C);
	set_name	(0X40D7C,	"stdaresptr");
	create_dword	(0X40D80);
	set_name	(0X40D80,	"whlsprite1");
	create_dword	(0X40D84);
	set_name	(0X40D84,	"stdbresptr");
	create_dword	(0X40D88);
	make_array	(0X40D88,	0XA);
	set_name	(0X40D88,	"digshapes");
	create_dword	(0X40DB0);
	make_array	(0X40DB0,	0X9);
	set_name	(0X40DB0,	"whlshapes");
	create_dword	(0X40DD4);
	make_array	(0X40DD4,	0X6);
	set_name	(0X40DD4,	"gnobshapes");
	create_dword	(0X40DEC);
	set_name	(0X40DEC,	"whlsprite2");
	create_byte	(0X40DF0);
	create_word	(0X40DF2);
	create_word	(0X40DF6);
	create_byte	(0X40DFA);
	create_dword	(0X40DFC);
	set_name	(0X40DFC,	"whlsprite3");
	create_word	(0X40E00);
	create_word	(0X40E04);
	create_byte	(0X40E08);
	create_word	(0X40E0A);
	create_dword	(0X40E0E);
	make_array	(0X40E0E,	0XF);
	set_name	(0X40E0E,	"rplyshapes");
	create_byte	(0X40E6A);
	create_byte	(0X40E6C);
	create_byte	(0X40E6D);
	create_byte	(0X40E74);
	create_word	(0X40E76);
	create_byte	(0X40E7A);
	MakeStruct	(0X40E8C,	"MATRIX");
	set_name	(0X40E8C,	"mat_y200");
	MakeStruct	(0X40E9E,	"MATRIX");
	set_name	(0X40E9E,	"mat_y100");
	MakeStruct	(0X40EB0,	"RECTANGLE");
	set_name	(0X40EB0,	"select_rect_rc");
	MakeStruct	(0X40EB8,	"MATRIX");
	set_name	(0X40EB8,	"mat_y300");
	create_dword	(0X40ECA);
	set_name	(0X40ECA,	"transshapepolyinfo");
	create_word	(0X40ECE);
	create_word	(0X40ED0);
	set_name	(0X40ED0,	"select_rect_param");
	create_dword	(0X40ED2);
	set_name	(0X40ED2,	"polyinfoptr");
	create_word	(0X40ED6);
	make_array	(0X40ED6,	0X190);
	create_word	(0X411F6);
	create_dword	(0X411F8);
	make_array	(0X411F8,	0X190);
	set_name	(0X411F8,	"polyinfoptrs");
	MakeStruct	(0X4183E,	"MATRIX");
	set_name	(0X4183E,	"mat_y0");
	create_word	(0X41850);
	set_name	(0X41850,	"polyinfoptrnext");
	create_word	(0X41852);
	set_name	(0X41852,	"transshapenumpaints");
	create_word	(0X41854);
	make_array	(0X41854,	0XA);
	set_name	(0X41854,	"polyvertpointptrtab");
	create_dword	(0X4186A);
	set_name	(0X4186A,	"transshapeprimptr");
	create_byte	(0X4186E);
	set_name	(0X4186E,	"transshapeflags");
	create_dword	(0X41870);
	set_name	(0X41870,	"transshapeprimitives");
	create_dword	(0X41874);
	set_name	(0X41874,	"transshapeprimindexptr");
	create_word	(0X41878);
	set_name	(0X41878,	"transshaperectptr");
	create_byte	(0X4187A);
	set_name	(0X4187A,	"transshapematerial");
	create_word	(0X4187C);
	set_name	(0X4187C,	"transshapenumverts");
	create_dword	(0X4187E);
	set_name	(0X4187E,	"transshapeverts");
	create_byte	(0X41882);
	set_name	(0X41882,	"transprimitivepaintjob");
	create_dword	(0X41884);
	set_name	(0X41884,	"cos80");
	create_dword	(0X41888);
	set_name	(0X41888,	"sin80");
	create_dword	(0X4188C);
	set_name	(0X4188C,	"cos80_2");
	create_dword	(0X41890);
	set_name	(0X41890,	"sin80_2");
	set_cmt	(0X41AD4,	"array of 25 * 76 bytes",	0);
	create_byte	(0X41AD4);
	make_array	(0X41AD4,	0X76C);
	set_name	(0X41AD4,	"audiotimers");
	create_word	(0X42240);
	create_word	(0X42242);
	create_word	(0X42244);
	create_byte	(0X42246);
	create_word	(0X42248);
	create_word	(0X4224A);
	create_word	(0X4224C);
	create_word	(0X4224E);
	create_word	(0X42250);
	create_word	(0X42252);
	create_word	(0X42254);
	create_word	(0X42256);
	create_dword	(0X42258);
	set_name	(0X42258,	"tracksmenushape2dunk");
	create_dword	(0X42540);
	set_name	(0X42540,	"pboxshape");
	create_dword	(0X42544);
	set_name	(0X42544,	"tracksmenushape2dunk2");
	create_dword	(0X4282C);
	make_array	(0X4282C,	0X4);
	set_name	(0X4282C,	"tracksmenushapes2");
	create_dword	(0X4283C);
	make_array	(0X4283C,	0X13);
	set_name	(0X4283C,	"tracksmenushapes1");
	create_dword	(0X42888);
	make_array	(0X42888,	0X4);
	set_name	(0X42888,	"tracksmenushapes3");
	create_word	(0X42898);
	create_word	(x=0X4289A);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(0X4289C);
	create_word	(0X4289E);
	create_word	(0X428A0);
	create_word	(0X428A2);
	create_word	(0X428A4);
	create_word	(0X428A6);
	create_word	(0X428A8);
	create_word	(0X428AA);
	create_word	(0X428AC);
	create_word	(0X428AE);
	create_word	(0X428B0);
	create_word	(0X428B2);
	create_word	(0X428B4);
	create_word	(x=0X428B6);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(0X428B8);
	create_word	(0X428BA);
	create_word	(0X428BC);
	create_byte	(0X428BE);
	create_byte	(0X428D6);
	create_word	(0X429F2);
	create_word	(0X429F4);
	create_byte	(0X42A02);
	create_byte	(0X42A03);
	create_word	(0X42A04);
	create_word	(0X42A06);
	create_byte	(0X42A08);
	create_word	(0X42A0A);
	create_word	(0X42A0C);
	create_byte	(0X42A0E);
	create_word	(0X42A10);
	create_word	(0X42A12);
	create_word	(0X42A16);
	create_word	(0X42A18);
	create_word	(0X42A1A);
	create_word	(0X42A1C);
	create_word	(x=0X42A1E);
	op_plain_offset	(x,	0,	0X3B770);
	op_plain_offset	(x,	128,	0X3B770);
	create_word	(0X42A20);
	create_word	(0X42A22);
	create_dword	(0X42A30);
	set_name	(0X42A30,	"td10_track_check_rel");
	create_dword	(0X42A34);
	set_name	(0X42A34,	"basdres");
	create_byte	(0X42A38);
	set_name	(0X42A38,	"followOpponentFlag_copy");
	MakeStruct	(0X42A3A,	"TRANSFORMEDSHAPE");
	make_array	(0X42A3A,	0X1D);
	set_name	(0X42A3A,	"currenttransshape");
	create_word	(0X42C7E);
	make_array	(0X42C7E,	0X1E);
	set_name	(0X42C7E,	"terraincenterpos");
	MakeStruct	(0X42CBA,	"VECTOR");
	set_name	(0X42CBA,	"carshapevec");
	MakeStruct	(0X42CC0,	"VECTOR");
	set_name	(0X42CC0,	"carshapevec2");
	create_word	(0X42CC6);
	make_array	(0X42CC6,	0X1E);
	set_name	(0X42CC6,	"trackpos2");
	create_word	(0X42D02);
	set_name	(0X42D02,	"elapsed_time2");
	MakeStruct	(0X42D04,	"VECTOR");
	set_name	(0X42D04,	"oppcarshapevec");
	MakeStruct	(0X42D0A,	"VECTOR");
	set_name	(0X42D0A,	"oppcarshapevec2");
	create_dword	(0X42D10);
	make_array	(0X42D10,	0X4);
	set_name	(0X42D10,	"sprite_ptrs");
	create_word	(0X42D20);
	set_name	(0X42D20,	"wallStartX");
	create_dword	(0X42D22);
	set_name	(0X42D22,	"td01_track_file_cpy");
	create_byte	(0X42D26);
	create_word	(0X42D28);
	set_name	(0X42D28,	"run_game_random");
	create_byte	(0X42D2A);
	create_word	(0X42D2C);
	set_name	(0X42D2C,	"wallStartZ");
	create_byte	(0X42D2E);
	make_array	(0X42D2E,	0X80);
	set_name	(0X42D2E,	"audio_filetemp");
	create_byte	(0X42DAE);
	make_array	(0X42DAE,	0XE);
	set_name	(0X42DAE,	"audiodriverstring2");
	MakeStruct	(0X42DBC,	"SHAPE3D");
	make_array	(0X42DBC,	0X82);
	set_name	(0X42DBC,	"game3dshapes");
	create_dword	(0X438E8);
	set_name	(0X438E8,	"td02_penalty_related");
	create_word	(0X438EC);
	make_array	(0X438EC,	0X1E);
	set_name	(0X438EC,	"trackpos");
	create_dword	(0X43928);
	set_name	(0X43928,	"chhtres");
	create_byte	(0X4392C);
	create_dword	(0X4392E);
	set_name	(0X4392E,	"mcgawndsprite");
	create_word	(0X43932);
	set_name	(0X43932,	"skybox_current");
	set_cmt	(0X43934,	"rect_windshielf = the area on screen between the roof and dashboard bitmaps",	0);
	MakeStruct	(0X43934,	"RECTANGLE");
	set_name	(0X43934,	"rect_windshield");
	create_byte	(0X4393C);
	create_byte	(0X4393D);
	create_dword	(0X4393E);
	set_name	(0X4393E,	"snarres");
	create_dword	(0X43942);
	set_name	(0X43942,	"trackdata3");
	create_dword	(0X4394A);
	set_name	(0X4394A,	"tommres");
	create_word	(0X4394E);
	create_byte	(0X43950);
	set_name	(0X43950,	"dashb_toggle");
	MakeStruct	(0X43952,	"MATRIX");
	set_name	(0X43952,	"mat_z_rot");
	create_word	(0X43964);
	create_byte	(0X43966);
	create_byte	(0X43967);
	make_array	(0X43967,	0X5);
	set_name	(0X43967,	"gsna_string");
	create_byte	(0X4396C);
	make_array	(0X4396C,	0X4C);
	set_name	(0X4396C,	"audiochunks_unk");
	create_byte	(0X439B8);
	make_array	(0X439B8,	0X4C);
	create_byte	(0X43A04);
	make_array	(0X43A04,	0X4C);
	create_byte	(0X43A50);
	make_array	(0X43A50,	0X4C);
	create_byte	(0X43A9C);
	make_array	(0X43A9C,	0X4C);
	create_byte	(0X43AE8);
	make_array	(0X43AE8,	0X4C);
	create_byte	(0X43B34);
	make_array	(0X43B34,	0X4C);
	create_byte	(0X43B80);
	make_array	(0X43B80,	0X4C);
	create_byte	(0X43BCC);
	make_array	(0X43BCC,	0X4C);
	create_byte	(0X43C18);
	make_array	(0X43C18,	0X4C);
	create_byte	(0X43C64);
	make_array	(0X43C64,	0X4C);
	create_byte	(0X43CB0);
	make_array	(0X43CB0,	0X4C);
	create_byte	(0X43CFC);
	make_array	(0X43CFC,	0X4C);
	create_byte	(0X43D48);
	make_array	(0X43D48,	0X4C);
	create_byte	(0X43D94);
	make_array	(0X43D94,	0X4C);
	create_byte	(0X43DE0);
	make_array	(0X43DE0,	0X4C);
	create_byte	(0X43E2C);
	make_array	(0X43E2C,	0X4C);
	set_name	(0X43E2C,	"audiochunks_unk2");
	create_byte	(0X43E78);
	make_array	(0X43E78,	0X4C);
	create_byte	(0X43EC4);
	make_array	(0X43EC4,	0X4C);
	create_byte	(0X43F10);
	make_array	(0X43F10,	0X4C);
	create_byte	(0X43F5C);
	make_array	(0X43F5C,	0X4C);
	create_byte	(0X43FA8);
	make_array	(0X43FA8,	0X4C);
	create_byte	(0X43FF4);
	make_array	(0X43FF4,	0X4C);
	create_byte	(0X44040);
	make_array	(0X44040,	0X4C);
	create_word	(0X4408C);
	create_word	(0X4428E);
	set_name	(0X4428E,	"wallindex");
	create_byte	(0X44290);
	create_byte	(0X44292);
	MakeStruct	(0X442D2,	"MATRIX");
	set_name	(0X442D2,	"mat_unk");
	create_byte	(0X442E4);
	create_word	(0X442E6);
	set_name	(0X442E6,	"polyinfonumpolys");
	create_word	(0X442E8);
	set_name	(0X442E8,	"mouse_butstate");
	create_byte	(0X442EA);
	create_byte	(0X4432A);
	create_dword	(0X4432C);
	set_name	(0X4432C,	"crshres");
	MakeStruct	(0X44330,	"SHAPE3D");
	set_name	(0X44330,	"logoshape");
	create_byte	(0X44346);
	create_dword	(0X44348);
	set_name	(0X44348,	"gState_travDist");
	create_word	(0X4434C);
	set_name	(0X4434C,	"gState_frame");
	create_word	(0X4434E);
	set_name	(0X4434E,	"gState_total_finish_time");
	create_word	(0X44350);
	set_name	(0X44350,	"gState_144");
	create_word	(0X44352);
	set_name	(0X44352,	"gState_pEndFrame");
	create_word	(0X44354);
	set_name	(0X44354,	"gState_oEndFrame");
	create_word	(0X44356);
	set_name	(0X44356,	"gState_penalty");
	create_word	(0X44358);
	set_name	(0X44358,	"gState_impactSpeed");
	create_word	(0X4435A);
	set_name	(0X4435A,	"gState_topSpeed");
	create_word	(0X4435C);
	set_name	(0X4435C,	"gState_jumpCount");
	create_word	(0X4435E);
	set_name	(0X4435E,	"pState_minusRotate_y_1");
	create_dword	(0X44360);
	set_name	(0X44360,	"songfileptr");
	create_dword	(0X44364);
	set_name	(0X44364,	"mmouspriteptr");
	create_dword	(0X44368);
	set_name	(0X44368,	"ohhtres");
	MakeStruct	(0X4436C,	"SHAPE3D");
	set_name	(0X4436C,	"logo2shape");
	create_word	(0X44382);
	set_name	(0X44382,	"waitflag");
	create_byte	(0X44384);
	make_array	(0X44384,	0X28);
	set_name	(0X44384,	"gnam_string");
	create_word	(0X443AC);
	make_array	(0X443AC,	0X1E);
	set_name	(0X443AC,	"terrainrows");
	create_word	(0X443E8);
	create_word	(0X443F2);
	create_word	(0X443F4);
	create_dword	(0X443F6);
	set_name	(0X443F6,	"td20_trk_file_appnd");
	MakeStruct	(0X443FA,	"VECTOR");
	make_array	(0X443FA,	0X6);
	set_name	(0X443FA,	"carshapevecs");
	MakeStruct	(0X4441E,	"VECTOR");
	make_array	(0X4441E,	0X6);
	set_name	(0X4441E,	"carshapevecs2");
	MakeStruct	(0X44442,	"VECTOR");
	make_array	(0X44442,	0X6);
	set_name	(0X44442,	"carshapevecs3");
	MakeStruct	(0X44466,	"VECTOR");
	make_array	(0X44466,	0X6);
	set_name	(0X44466,	"carshapevecs4");
	create_word	(0X4448A);
	MakeStruct	(0X44494,	"GAMESTATE");
	set_name	(0X44494,	"state");
	MakeStruct	(0X448F4,	"VECTOR");
	make_array	(0X448F4,	0X6);
	set_name	(0X448F4,	"oppcarshapevecs");
	MakeStruct	(0X44918,	"VECTOR");
	make_array	(0X44918,	0X6);
	set_name	(0X44918,	"oppcarshapevecs2");
	MakeStruct	(0X4493C,	"VECTOR");
	make_array	(0X4493C,	0X6);
	set_name	(0X4493C,	"oppcarshapevecs3");
	MakeStruct	(0X44960,	"VECTOR");
	make_array	(0X44960,	0X6);
	set_name	(0X44960,	"oppcarshapevecs4");
	create_word	(0X44984);
	set_name	(0X44984,	"timertestflag_copy");
	create_word	(0X44986);
	set_name	(0X44986,	"pState_minusRotate_x_1");
	create_word	(0X44988);
	set_name	(0X44988,	"elRdWallRelated");
	MakeStruct	(0X4498A,	"REGS");
	set_name	(0X4498A,	"regs_x86");
	create_word	(0X44998);
	set_name	(0X44998,	"pState_minusRotate_z_1");
	create_byte	(0X4499A);
	set_name	(0X4499A,	"startcol2");
	create_byte	(0X4499B);
	set_name	(0X4499B,	"hillFlag");
	create_word	(0X4499C);
	create_byte	(0X4499E);
	set_name	(0X4499E,	"startrow2");
	create_byte	(0X4499F);
	set_name	(0X4499F,	"show_penalty_counter");
	create_dword	(0X449A0);
	set_name	(0X449A0,	"gameresptr");
	MakeStruct	(0X449A4,	"GAMEINFO");
	set_name	(0X449A4,	"gameconfig");
	create_dword	(0X449BE);
	set_name	(0X449BE,	"pState_lvec1_x");
	create_dword	(0X449C2);
	set_name	(0X449C2,	"smouspriteptr");
	create_dword	(0X449C6);
	set_name	(0X449C6,	"pState_lvec1_y");
	create_dword	(0X449CA);
	set_name	(0X449CA,	"pState_lvec1_z");
	create_byte	(0X449CE);
	create_word	(0X449D0);
	set_name	(0X449D0,	"framespersec");
	create_dword	(0X449D4);
	set_name	(0X449D4,	"td17_trk_elem_ordered");
	create_byte	(0X449D8);
	create_byte	(0X449DA);
	create_dword	(0X449DC);
	set_name	(0X449DC,	"trackdata9");
	create_word	(0X449E0);
	set_name	(0X449E0,	"elem_xCenter");
	create_byte	(0X449E2);
	create_word	(0X449E4);
	create_byte	(0X449E6);
	create_word	(0X449E8);
	set_name	(0X449E8,	"steerWhlRespTable_ptr");
	create_word	(0X449EA);
	create_word	(0X449EC);
	set_name	(0X449EC,	"terrainHeight");
	create_dword	(0X449EE);
	set_name	(0X449EE,	"trackdata12");
	create_word	(0X449F2);
	set_name	(0X449F2,	"idle_counter");
	create_byte	(0X449F4);
	set_name	(0X449F4,	"transshapenumvertscopy");
	create_word	(0X449F6);
	set_name	(0X449F6,	"elem_zCenter");
	create_dword	(0X449F8);
	set_name	(0X449F8,	"curshapeptr");
	create_word	(0X449FC);
	create_word	(0X449FE);
	create_dword	(0X44A00);
	set_name	(0X44A00,	"opp_res");
	MakeStruct	(0X44A04,	"RECTANGLE");
	set_name	(0X44A04,	"rect_unk");
	MakeStruct	(0X44A0C,	"RECTANGLE");
	set_name	(0X44A0C,	"rect_unk2");
	MakeStruct	(0X44A14,	"RECTANGLE");
	set_name	(0X44A14,	"rect_unk6");
	MakeStruct	(0X44A1C,	"RECTANGLE");
	set_name	(0X44A1C,	"rect_unk12");
	MakeStruct	(0X44A24,	"RECTANGLE");
	set_name	(0X44A24,	"rect_unk15");
	MakeStruct	(0X44A2C,	"RECTANGLE");
	set_name	(0X44A2C,	"rect_skybox");
	MakeStruct	(0X44A34,	"RECTANGLE");
	set_name	(0X44A34,	"rect_unk11");
	MakeStruct	(0X44A3C,	"RECTANGLE");
	set_name	(0X44A3C,	"rect_unk9");
	create_dword	(0X44A7C);
	set_name	(0X44A7C,	"voicefileptr");
	create_word	(0X44A88);
	set_name	(0X44A88,	"skybox_grd_color");
	create_byte	(0X44A8A);
	create_word	(0X44A8C);
	set_name	(0X44A8C,	"wallHeight");
	create_word	(0X44A8E);
	make_array	(0X44A8E,	0X1E);
	set_name	(0X44A8E,	"terrainpos");
	create_byte	(0X44ACA);
	create_byte	(0X44AE2);
	set_name	(0X44AE2,	"idle_expired");
	create_word	(0X44AE4);
	set_name	(0X44AE4,	"video_flag1_is1");
	create_dword	(0X44CE6);
	set_name	(0X44CE6,	"td11_highscores");
	create_word	(0X44CEA);
	set_name	(0X44CEA,	"timertestflag");
	create_dword	(0X44CEC);
	set_name	(0X44CEC,	"mainresptr");
	MakeStruct	(0X44CF0,	"SHAPE3D");
	set_name	(0X44CF0,	"bravshape");
	create_byte	(0X44D06);
	create_word	(0X44D1E);
	create_word	(0X44D20);
	create_dword	(0X44D22);
	set_name	(0X44D22,	"fontnptr");
	create_dword	(0X44D26);
	set_name	(0X44D26,	"wndsprite");
	MakeStruct	(0X44D2A,	"MATRIX");
	set_name	(0X44D2A,	"mat_y_rot");
	create_word	(0X44D3C);
	create_dword	(0X44D3E);
	set_name	(0X44D3E,	"td04_aerotable_pl");
	create_dword	(0X44D42);
	set_name	(0X44D42,	"td14_elem_map_main");
	create_byte	(0X44D46);
	set_name	(0X44D46,	"corkFlag");
	create_byte	(0X44D47);
	set_name	(0X44D47,	"current_surf_type");
	create_word	(0X44D48);
	create_dword	(0X44D4A);
	set_name	(0X44D4A,	"td05_aerotable_op");
	create_word	(0X44D4E);
	set_name	(0X44D4E,	"framespersec2");
	create_byte	(0X44D50);
	make_array	(0X44D50,	0X10);
	set_name	(0X44D50,	"oppnentSped");
	create_word	(0X44D60);
	set_name	(0X44D60,	"meter_needle_color");
	create_word	(0X44D62);
	create_dword	(0X44D64);
	set_name	(0X44D64,	"current_planptr");
	create_byte	(0X44D68);
	make_array	(0X44D68,	0X5E);
	set_name	(0X44D68,	"g_path_buf");
	create_word	(0X44DC6);
	set_name	(0X44DC6,	"planindex");
	create_word	(0X44DC8);
	set_name	(0X44DC8,	"video_flag2_is1");
	create_word	(0X44DCA);
	create_word	(0X44DCC);
	MakeStruct	(0X44DCE,	"RECTANGLE");
	make_array	(0X44DCE,	0X2D);
	set_name	(0X44DCE,	"rect_array_unk3");
	set_cmt	(0X44F36,	"Both this and the following one are likely\nvelocity vectors - pre and post any needed\nrotations.",	0);
	MakeStruct	(0X44F36,	"VECTOR");
	set_name	(0X44F36,	"vec_unk2");
	MakeStruct	(0X44F3C,	"VECTOR");
	set_name	(0X44F3C,	"vec_planerotopresult");
	create_word	(0X44F42);
	set_name	(0X44F42,	"pState_minusRotate_z_2");
	create_word	(0X44F44);
	set_name	(0X44F44,	"pState_minusRotate_x_2");
	create_word	(0X44F46);
	set_name	(0X44F46,	"pState_minusRotate_y_2");
	create_word	(0X44F48);
	set_name	(0X44F48,	"pState_f36Mminf40sar2");
	create_word	(0X44F4A);
	set_name	(0X44F4A,	"planindex_copy");
	create_word	(0X4549C);
	set_name	(0X4549C,	"dastbmp_y2");
	create_word	(0X4549E);
	set_name	(0X4549E,	"dastseg");
	create_dword	(0X454A0);
	set_name	(0X454A0,	"dasmshapeptr");
	create_byte	(0X454A4);
	create_dword	(0X454A6);
	set_name	(0X454A6,	"eng1ptr");
	create_dword	(0X454AA);
	set_name	(0X454AA,	"carresptr");
	create_word	(0X454AE);
	set_name	(0X454AE,	"dashbmp_y_copy");
	create_dword	(0X454B0);
	set_name	(0X454B0,	"car2resptr");
	create_dword	(0X454B4);
	set_name	(0X454B4,	"trackdata7");
	create_byte	(0X454B8);
	set_name	(0X454B8,	"is_in_replay");
	create_word	(0X454BA);
	create_dword	(0X454BC);
	set_name	(0X454BC,	"td15_terr_map_main");
	create_word	(0X454C0);
	set_name	(0X454C0,	"kbjoyflags");
	create_dword	(0X454C2);
	set_name	(0X454C2,	"planptr");
	create_dword	(0X454C6);
	set_name	(0X454C6,	"fontdefptr");
	create_dword	(0X454CA);
	set_name	(0X454CA,	"rideres");
	create_word	(0X454CE);
	create_dword	(0X454D0);
	set_name	(0X454D0,	"trackdata6");
	create_word	(0X454D4);
	set_name	(0X454D4,	"video_flag3_isFFFF");
	create_dword	(0X454D6);
	set_name	(0X454D6,	"trackdata18");
	create_word	(0X454DA);
	set_name	(0X454DA,	"transformedshape_zarray");
	create_byte	(0X45514);
	set_name	(0X45514,	"backlights_paint_override");
	create_word	(0X45516);
	set_name	(0X45516,	"track_angle");
	create_word	(0X45518);
	set_name	(0X45518,	"skybox_ptr1");
	create_word	(0X4551A);
	set_name	(0X4551A,	"skybox_ptr2");
	create_word	(0X4551C);
	set_name	(0X4551C,	"skybox_ptr3");
	create_word	(0X4551E);
	set_name	(0X4551E,	"skybox_ptr4");
	create_byte	(0X45520);
	make_array	(0X45520,	0XF);
	set_name	(0X45520,	"rect_array_unk_indices");
	create_byte	(0X4552F);
	MakeStruct	(0X45530,	"GAMEINFO");
	set_name	(0X45530,	"gameconfigcopy");
	create_word	(0X4554A);
	MakeStruct	(0X4554C,	"RECTANGLE");
	make_array	(0X4554C,	0XF);
	set_name	(0X4554C,	"rect_array_unk");
	create_dword	(0X455C8);
	set_name	(0X455C8,	"mouseunkspriteptr");
	create_dword	(0X455CC);
	set_name	(0X455CC,	"miscptr");
	create_word	(0X455D0);
	set_name	(0X455D0,	"skybox_sky_color");
	create_byte	(0X455D2);
	set_name	(0X455D2,	"replaybar_toggle_copy");
	create_word	(0X455D4);
	make_array	(0X455D4,	0X2D);
	set_name	(0X455D4,	"rect_array_unk3_indices");
	create_dword	(0X4562E);
	set_name	(0X4562E,	"td16_rpl_buffer");
	create_word	(0X45632);
	set_name	(0X45632,	"material_clrlist_ptr_cpy");
	create_byte	(0X45634);
	set_name	(0X45634,	"is_in_replay_copy");
	create_byte	(0X45635);
	create_word	(0X45636);
	set_name	(0X45636,	"sdgame2_widths");
	create_dword	(0X4563C);
	set_name	(0X4563C,	"td21_col_from_path");
	MakeStruct	(0X45640,	"SIMD");
	set_name	(0X45640,	"simd_opponent");
	create_byte	(0X45948);
	create_byte	(0X4594A);
	make_array	(0X4594A,	0X6);
	set_name	(0X4594A,	"g_kevinrandom_seed");
	create_byte	(0X45950);
	MakeStruct	(0X45952,	"RECTANGLE");
	set_name	(0X45952,	"rect_unk3");
	MakeStruct	(0X4595A,	"RECTANGLE");
	make_array	(0X4595A,	0XF);
	set_name	(0X4595A,	"rect_array_unk2");
	create_byte	(0X459D2);
	create_word	(0X459D4);
	set_name	(0X459D4,	"height_above_replaybar");
	create_word	(0X459D6);
	set_name	(0X459D6,	"material_clrlist2_ptr_cpy");
	create_byte	(0X459D8);
	create_dword	(0X459DA);
	set_name	(0X459DA,	"td22_row_from_path");
	create_byte	(0X459E0);
	make_array	(0X459E0,	0X11);
	create_byte	(0X459F1);
	set_name	(0X459F1,	"video_flag6_is1");
	set_cmt	(0X459F2,	"always 8",	0);
	create_word	(0X459F2);
	set_name	(0X459F2,	"fontdef_unk_0E");
	create_dword	(0X459F4);
	set_name	(0X459F4,	"fontledresptr");
	create_word	(0X459FC);
	set_name	(0X459FC,	"someZeroVideoConst");
	create_word	(0X459FE);
	set_name	(0X459FE,	"nextPosAndNormalIP");
	create_word	(0X45A00);
	create_byte	(0X45A02);
	set_name	(0X45A02,	"transformedshape_arg2array");
	create_dword	(0X45A20);
	set_name	(0X45A20,	"cvxptr");
	create_word	(0X45A24);
	set_name	(0X45A24,	"elapsed_time1");
	create_word	(0X45D06);
	create_dword	(0X45D08);
	set_name	(0X45D08,	"sdgameresptr");
	create_byte	(0X45D0C);
	create_byte	(0X45D14);
	create_word	(0X45D1C);
	create_word	(0X45D1E);
	set_name	(0X45D1E,	"material_patlist_ptr_cpy");
	create_dword	(0X45D22);
	set_name	(0X45D22,	"oppresources");
	create_word	(0X45D3E);
	create_word	(0X45D40);
	make_array	(0X45D40,	0X1E);
	set_name	(0X45D40,	"trackrows");
	create_word	(0X45D7C);
	create_byte	(0X45D7E);
	set_name	(0X45D7E,	"transformedshape_counter");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_10(void) {
        auto x;
#define id x

	create_dword	(0X45D80);
	make_array	(0X45D80,	0X4);
	set_name	(0X45D80,	"skyboxes");
	create_byte	(0X45D90);
	create_word	(0X45D92);
	set_name	(0X45D92,	"material_patlist2_ptr_cpy");
	create_word	(0X45D94);
	create_word	(0X45D96);
	set_name	(0X45D96,	"wallOrientation");
	create_word	(0X45D98);
	create_byte	(0X45D9A);
	set_cmt	(0X45DB2,	"0 = playing, 1 = paused, 2 = replay",	0);
	create_byte	(0X45DB2);
	set_name	(0X45DB2,	"game_replay_mode");
	create_dword	(0X45DB4);
	set_name	(0X45DB4,	"td08_direction_related");
	create_word	(0X45DB8);
	set_name	(0X45DB8,	"roofbmpheight_copy");
	create_word	(0X45DBA);
	set_name	(0X45DBA,	"dashbmp_y");
	create_dword	(0X45DBC);
	make_array	(0X45DBC,	0X5);
	set_name	(0X45DBC,	"sdgame2shapes");
	create_word	(0X45DD0);
	set_name	(0X45DD0,	"track_pieces_counter");
	create_word	(0X45DD2);
	make_array	(0X45DD2,	0X1E);
	set_name	(0X45DD2,	"trackcenterpos2");
	create_dword	(0X45E0E);
	set_name	(0X45E0E,	"engptr");
	create_dword	(0X45E12);
	set_name	(0X45E12,	"tempdataptr");
	create_byte	(0X45E16);
	create_byte	(0X45E1A);
	set_name	(0X45E1A,	"passed_security");
	create_word	(0X45E1C);
	set_name	(0X45E1C,	"transformedshape_indices");
	create_dword	(0X45E56);
	set_name	(0X45E56,	"trackdata19");
	MakeStruct	(0X45E5A,	"SIMD");
	set_name	(0X45E5A,	"simd_player");
	create_dword	(0X46162);
	set_name	(0X46162,	"td13_rpl_header");
	create_byte	(0X46166);
	set_name	(0X46166,	"rect_array_unk3_length");
	create_byte	(0X46167);
	create_word	(0X46168);
	set_name	(0X46168,	"skybox_res_ofs");
	create_word	(0X4616A);
	set_name	(0X4616A,	"skybox_res_seg");
	create_word	(0X4616C);
	set_name	(0X4616C,	"mouse_xpos");
	create_byte	(0X4616E);
	create_byte	(0X4616F);
	set_name	(0X4616F,	"replaybar_toggle");
	create_word	(0X46170);
	create_word	(0X46172);
	create_byte	(0X4617A);
	MakeStruct	(0X4617E,	"RECTANGLE");
	set_name	(0X4617E,	"rect_ingame_text");
	create_word	(0X46186);
	make_array	(0X46186,	0X1E);
	set_name	(0X46186,	"trackcenterpos");
	create_word	(0X461C2);
	set_name	(0X461C2,	"dastbmp_y");
	create_dword	(0X461C4);
	set_name	(0X461C4,	"game1ptr");
	create_byte	(0X461C8);
	set_name	(0X461C8,	"game_replay_mode_copy");
	create_word	(0X461CA);
	set_name	(0X461CA,	"penalty_time");
	create_word	(0X461CC);
	set_name	(0X461CC,	"roofbmpheight");
	create_word	(0X461CE);
	set_name	(0X461CE,	"mouse_ypos");
	create_word	(0X461D0);
	set_name	(0X461D0,	"video_flag4_is1");
	create_dword	(0X463D2);
	set_name	(0X463D2,	"game2ptr");
	create_word	(0X463D6);
	create_dword	(0X463D8);
	set_name	(0X463D8,	"sdgame2ptr");
	create_dword	(0X463DC);
	set_name	(0X463DC,	"trackdata23");
	create_byte	(0X463E0);
	set_name	(0X463E0,	"followOpponentFlag");
	create_word	(0X463E2);
	set_name	(0X463E2,	"skybox_wat_color");
	create_byte	(0X463E4);
	set_name	(0X463E4,	"resID_byte1");
	create_byte	(0X463E5);
	set_name	(0X463E5,	"resID_byte2");
	create_byte	(0X463E6);
	set_name	(0X463E6,	"resID_byte3");
	create_byte	(0X463E7);
	set_name	(0X463E7,	"resID_byte4");
	create_word	(0X46434);
	set_name	(0X46434,	"curtransshape_ptr");
	create_byte	(0X46436);
	set_name	(0X46436,	"video_flag5_is0");
	MakeStruct	(0X46438,	"MATRIX");
	set_name	(0X46438,	"mat_rot_temp");
	create_byte	(0X4644A);
	set_name	(0X4644A,	"dashb_toggle_copy");
	MakeStruct	(0X4644C,	"MATRIX");
	set_name	(0X4644C,	"mat_temp");
	create_byte	(0X4645E);
	set_name	(0X4645E,	"textresprefix");
	create_dword	(0X46460);
	set_name	(0X46460,	"wallptr");
	create_byte	(0X46467);
	create_word	(0X46468);
	create_word	(0X4646A);
	MakeStruct	(0X46472,	"MATRIX");
	set_name	(0X46472,	"mat_x_rot");
	create_byte	(0X46484);
	set_name	(0X46484,	"replaybar_enabled");
	create_word	(0X46486);
}

static Functions_0(void) {

	add_func    (0X10000,0X10599);
	set_func_flags(0X10000,0x4412);
	SetType(0X10000, "int __cdecl stuntsmain(int p_argc, const char **p_argv, const char *envp);");
	set_frame_size(0X10000, 0X16, 2, 0);
	define_local_var(0X10000, 0X10599, "[bp-0X4]", "trkptr");
	define_local_var(0X10000, 0X10599, "[bp+0X6]", "p_argc");
	define_local_var(0X10000, 0X10599, "[bp+0X8]", "p_argv");
	define_local_var(0X10000, 0X10599, "[bp+0XC]", "envp");
	set_name(0X102B8, "_tracks_menu0", SN_LOCAL);
	set_name(0X102BA, "_tracks_menu_ax", SN_LOCAL);
	set_name(0X102C6, "_do_opp_menu", SN_LOCAL);
	set_name(0X102D8, "_do_option_menu", SN_LOCAL);
	set_name(0X102ED, "_goto_game1", SN_LOCAL);
	set_name(0X102F4, "_do_car_menu", SN_LOCAL);
	set_name(0X10318, "_do_game0", SN_LOCAL);
	set_name(0X1031C, "_do_game1", SN_LOCAL);
	set_name(0X1037C, "_sec_check1", SN_LOCAL);
	set_name(0X1039E, "_init_replay", SN_LOCAL);
	set_name(0X103DA, "_find_tedit", SN_LOCAL);
	set_name(0X103EA, "_prepare_intro", SN_LOCAL);
	set_name(0X103EF, "_do_intro0", SN_LOCAL);
	set_name(0X103F1, "_do_intro", SN_LOCAL);
	set_name(0X10440, "_show_menu", SN_LOCAL);
	set_name(0X1048B, "_do_show_menu", SN_LOCAL);
	set_name(0X1053A, "_ask_dos", SN_LOCAL);
	add_func    (0X1059A,0X1069A);
	set_func_flags(0X1059A,0x4412);
	set_frame_size(0X1059A, 0X4, 2, 0);
	add_func    (0X1069C,0X10786);
	set_func_flags(0X1069C,0x4012);
	set_frame_size(0X1069C, 0X4, 2, 0);
	add_func    (0X10786,0X10F3C);
	set_func_flags(0X10786,0x4412);
	set_frame_size(0X10786, 0X4A, 2, 0);
	add_func    (0X10F3C,0X110CF);
	set_func_flags(0X10F3C,0x4412);
	set_frame_size(0X10F3C, 0X10, 2, 0);
	add_func    (0X110D0,0X11587);
	set_func_flags(0X110D0,0x4412);
	set_frame_size(0X110D0, 0X1A, 2, 0);
	add_func    (0X11588,0X1168E);
	set_func_flags(0X11588,0x4412);
	set_frame_size(0X11588, 0X3E, 2, 0);
	add_func    (0X1168E,0X118D3);
	set_func_flags(0X1168E,0x4412);
	set_frame_size(0X1168E, 0XA, 2, 0);
	add_func    (0X118D4,0X11A1C);
	set_func_flags(0X118D4,0x4412);
	set_frame_size(0X118D4, 0X4E, 2, 0);
	add_func    (0X11A1C,0X11BB4);
	set_func_flags(0X11A1C,0x4412);
	set_frame_size(0X11A1C, 0X40, 2, 0);
	add_func    (0X11BB4,0X11C41);
	set_func_flags(0X11BB4,0x4412);
	set_frame_size(0X11BB4, 0X172, 2, 0);
	add_func    (0X11C42,0X1293C);
	set_func_flags(0X11C42,0x4412);
	set_frame_size(0X11C42, 0X110, 2, 0);
	set_name(0X1275E, "_menu_done", SN_LOCAL);
	set_name(0X12836, "_menu_nextcar", SN_LOCAL);
	set_name(0X1284E, "_menu_prevcar", SN_LOCAL);
	set_name(0X12864, "_menu_transmission", SN_LOCAL);
	set_name(0X12904, "_menu_color", SN_LOCAL);
	add_func    (0X1293C,0X12F49);
	set_func_flags(0X1293C,0x4412);
	set_frame_size(0X1293C, 0X20, 2, 0);
	add_func    (0X12F4A,0X13178);
	set_func_flags(0X12F4A,0x4412);
	set_frame_size(0X12F4A, 0X6, 2, 0);
	add_func    (0X13178,0X144CE);
	set_func_flags(0X13178,0x4412);
	set_frame_size(0X13178, 0XA2, 2, 0);
	add_func    (0X144CF,0X146E4);
	set_func_flags(0X144CF,0x4412);
	set_frame_size(0X144CF, 0X442, 2, 0);
	add_func    (0X146E4,0X14712);
	set_func_flags(0X146E4,0x4402);
	add_func    (0X14712,0X14D6C);
	set_func_flags(0X14712,0x4412);
	set_frame_size(0X14712, 0X44, 2, 0);
	add_func    (0X14D6C,0X14DA2);
	set_func_flags(0X14D6C,0x4412);
	set_frame_size(0X14D6C, 0X16, 2, 0);
	add_func    (0X14DA2,0X16898);
	set_func_flags(0X14DA2,0x4012);
	set_frame_size(0X14DA2, 0X1E8, 2, 0);
	define_local_var(0X14DA2, 0X16898, "[bp-0X1E4]", "vec_1E4");
	define_local_var(0X14DA2, 0X16898, "[bp-0X1DE]", "vec_1DE");
	define_local_var(0X14DA2, 0X16898, "[bp-0X1C6]", "vec_1C6");
	define_local_var(0X14DA2, 0X16898, "[bp-0X1C0]", "vecl_1C0");
	define_local_var(0X14DA2, 0X16898, "[bp-0X18E]", "vec_18EoStateWorldCrds");
	define_local_var(0X14DA2, 0X16898, "[bp-0X182]", "vec_182");
	define_local_var(0X14DA2, 0X16898, "[bp-0X17C]", "vec_17C");
	define_local_var(0X14DA2, 0X16898, "[bp-0X176]", "vecl_176");
	define_local_var(0X14DA2, 0X16898, "[bp-0X142]", "pState_f40_sar2");
	define_local_var(0X14DA2, 0X16898, "[bp-0X134]", "mat_134");
	define_local_var(0X14DA2, 0X16898, "[bp-0XFC]", "vec_FC");
	define_local_var(0X14DA2, 0X16898, "[bp-0XE4]", "vec_E4");
	define_local_var(0X14DA2, 0X16898, "[bp-0X1C]", "vec_1C");
	define_local_var(0X14DA2, 0X16898, "[bp-0XC]", "vec_C");
	set_name(0X15EE2, "code_update_globalPos", SN_LOCAL);
	set_name(0X15F82, "code_update_rotCoords", SN_LOCAL);
	add_func    (0X16898,0X16B01);
	set_func_flags(0X16898,0x4412);
	set_frame_size(0X16898, 0X12, 2, 0);
	add_func    (0X16B02,0X16F3A);
	set_func_flags(0X16B02,0x4412);
	set_frame_size(0X16B02, 0XE, 2, 0);
	add_func    (0X16F3A,0X17008);
	set_func_flags(0X16F3A,0x4412);
	set_frame_size(0X16F3A, 0X6, 2, 0);
	add_func    (0X17008,0X171E7);
	set_func_flags(0X17008,0x4412);
	set_frame_size(0X17008, 0X8, 2, 0);
	add_func    (0X171E8,0X17816);
	set_func_flags(0X171E8,0x4412);
	set_frame_size(0X171E8, 0X56, 2, 0);
	add_func    (0X17816,0X17A77);
	set_func_flags(0X17816,0x4412);
	set_frame_size(0X17816, 0X5A8, 2, 0);
	add_func    (0X17A78,0X17FD6);
	set_func_flags(0X17A78,0x4412);
	set_frame_size(0X17A78, 0XE, 2, 0);
	add_func    (0X17FD6,0X18466);
	set_func_flags(0X17FD6,0x4412);
	set_frame_size(0X17FD6, 0X14, 2, 0);
	add_func    (0X18466,0X185F5);
	set_func_flags(0X18466,0x4412);
	set_frame_size(0X18466, 0X1A, 2, 0);
	add_func    (0X185F6,0X187B1);
	set_func_flags(0X185F6,0x4412);
	set_frame_size(0X185F6, 0XA, 2, 0);
	add_func    (0X187B2,0X188A3);
	set_func_flags(0X187B2,0x4412);
	set_frame_size(0X187B2, 0XA, 2, 0);
	add_func    (0X188A4,0X18CD8);
	set_func_flags(0X188A4,0x4412);
	set_frame_size(0X188A4, 0X38, 2, 0);
	add_func    (0X18CD8,0X18D06);
	set_func_flags(0X18CD8,0x4412);
	set_frame_size(0X18CD8, 0, 2, 0);
	add_func    (0X18D06,0X18D60);
	set_func_flags(0X18D06,0x4412);
	set_frame_size(0X18D06, 0, 2, 0);
	add_func    (0X18D60,0X19074);
	set_func_flags(0X18D60,0x4412);
	set_frame_size(0X18D60, 0X34, 2, 0);
	add_func    (0X19074,0X193DF);
	set_func_flags(0X19074,0x4412);
	set_frame_size(0X19074, 0X2E, 2, 0);
	add_func    (0X193E0,0X195E0);
	set_func_flags(0X193E0,0x4412);
	set_frame_size(0X193E0, 0X6, 2, 0);
	add_func    (0X195E0,0X195E5);
	set_func_flags(0X195E0,0x4402);
	add_func    (0X195E6,0X19793);
	set_func_flags(0X195E6,0x4412);
	set_frame_size(0X195E6, 0X8, 2, 0);
	add_func    (0X19794,0X19926);
	set_func_flags(0X19794,0x4412);
	set_frame_size(0X19794, 0X3A, 2, 0);
	add_func    (0X19926,0X199B2);
	set_func_flags(0X19926,0x4412);
	set_frame_size(0X19926, 0X10, 2, 0);
	add_func    (0X199B2,0X19A2B);
	set_func_flags(0X199B2,0x4412);
	set_frame_size(0X199B2, 0X8, 2, 0);
	add_func    (0X19A2C,0X19B9F);
	set_func_flags(0X19A2C,0x4412);
	set_frame_size(0X19A2C, 0X1C, 2, 0);
	add_func    (0X19BA0,0X19CA2);
	set_func_flags(0X19BA0,0x4412);
	set_frame_size(0X19BA0, 0X18, 2, 0);
	add_func    (0X19CA2,0X19DC5);
	set_func_flags(0X19CA2,0x4412);
	set_frame_size(0X19CA2, 0X6, 2, 0);
	add_func    (0X19DC6,0X19DE8);
	set_func_flags(0X19DC6,0x4412);
	set_frame_size(0X19DC6, 0X2, 2, 0);
	add_func    (0X19DE8,0X19DFF);
	set_func_flags(0X19DE8,0x4412);
	set_frame_size(0X19DE8, 0X2, 2, 0);
	add_func    (0X19DFF,0X19E09);
	set_func_flags(0X19DFF,0x4412);
	set_frame_size(0X19DFF, 0, 2, 0);
	add_func    (0X19E09,0X19E13);
	set_func_flags(0X19E09,0x4412);
	set_frame_size(0X19E09, 0, 2, 0);
	add_func    (0X19E13,0X19E21);
	set_func_flags(0X19E13,0x4412);
	set_frame_size(0X19E13, 0X4, 2, 0);
	add_func    (0X19E21,0X19E4E);
	set_func_flags(0X19E21,0x4412);
	set_frame_size(0X19E21, 0X2, 2, 0);
	add_func    (0X19E4E,0X19E7B);
	set_func_flags(0X19E4E,0x4412);
	set_frame_size(0X19E4E, 0X2, 2, 0);
	add_func    (0X19E7B,0X19EC9);
	set_func_flags(0X19E7B,0x4402);
	add_func    (0X19EC9,0X19EE8);
	set_func_flags(0X19EC9,0x412);
	set_frame_size(0X19EC9, 0X2, 2, 0);
	add_func    (0X19EE8,0X19F07);
	set_func_flags(0X19EE8,0x4402);
	add_func    (0X19F14,0X1A096);
	set_func_flags(0X19F14,0x4412);
	set_frame_size(0X19F14, 0X8, 2, 0);
	add_func    (0X1A096,0X1A0F4);
	set_func_flags(0X1A096,0x4412);
	set_frame_size(0X1A096, 0X6, 2, 0);
	add_func    (0X1A0F4,0X1C302);
	set_func_flags(0X1A0F4,0x4412);
	set_frame_size(0X1A0F4, 0X158, 2, 0);
	define_local_var(0X1A0F4, 0X1C302, "[bp-0X10C]", "terr_map_value");
	define_local_var(0X1A0F4, 0X1C302, "[bp-0X62]", "elem_map_value");
	add_func    (0X1C302,0X1C473);
	set_func_flags(0X1C302,0x4412);
	set_frame_size(0X1C302, 0X8, 2, 0);
	add_func    (0X1C474,0X1CB80);
	set_func_flags(0X1C474,0x4412);
	set_frame_size(0X1C474, 0X7C, 2, 0);
	add_func    (0X1CB80,0X1CBDB);
	set_func_flags(0X1CB80,0x4412);
	set_frame_size(0X1CB80, 0X10, 2, 0);
	define_local_var(0X1CB80, 0X1CBDB, "[bp-0XC]", "transformedpos");
	define_local_var(0X1CB80, 0X1CBDB, "[bp-0X6]", "shapepos");
	add_func    (0X1CBDC,0X1D12E);
	set_func_flags(0X1CBDC,0x4412);
	set_frame_size(0X1CBDC, 0X46, 2, 0);
	add_func    (0X1D12E,0X1D534);
	set_func_flags(0X1D12E,0x4412);
	set_frame_size(0X1D12E, 0X6, 2, 0);
	add_func    (0X1D534,0X1D5B3);
	set_func_flags(0X1D534,0x4412);
	set_frame_size(0X1D534, 0X6, 2, 0);
	add_func    (0X1D5B4,0X1D7A1);
	set_func_flags(0X1D5B4,0x4412);
	set_frame_size(0X1D5B4, 0X1E, 2, 0);
	add_func    (0X1D7A2,0X1D8B4);
	set_func_flags(0X1D7A2,0x4412);
	set_frame_size(0X1D7A2, 0X6, 2, 0);
	add_func    (0X1D8B4,0X1D8D1);
	set_func_flags(0X1D8B4,0x4402);
	add_func    (0X1D8D2,0X1D929);
	set_func_flags(0X1D8D2,0x4412);
	set_frame_size(0X1D8D2, 0X6, 2, 0);
	add_func    (0X1D92A,0X1D93B);
	set_func_flags(0X1D92A,0x4402);
	add_func    (0X1D93C,0X1DEA6);
	set_func_flags(0X1D93C,0x4412);
	set_frame_size(0X1D93C, 0X5D8, 2, 0);
	add_func    (0X1DEA6,0X1E1A0);
	set_func_flags(0X1DEA6,0x4412);
	set_frame_size(0X1DEA6, 0X46, 2, 0);
	add_func    (0X1E1A0,0X1FAE4);
	set_func_flags(0X1E1A0,0x4412);
	set_frame_size(0X1E1A0, 0X44, 2, 0);
	set_name(0X1E5AF, "code_bto_root", SN_LOCAL);
	set_name(0X1E5B8, "code_bto_sfLine", SN_LOCAL);
	set_name(0X1E5E1, "code_bto_road", SN_LOCAL);
	set_name(0X1E5EA, "code_set_pavement", SN_LOCAL);
	set_name(0X1E5F4, "code_bto_crossroad", SN_LOCAL);
	set_name(0X1E600, "code_bto_chicaneLR", SN_LOCAL);
	set_name(0X1E608, "code_bto_chicaneRL", SN_LOCAL);
	set_name(0X1E624, "code_bto_lCorner", SN_LOCAL);
	set_name(0X1E631, "code_lCorner_radius", SN_LOCAL);
	set_name(0X1E64A, "code_bto_sSplitA", SN_LOCAL);
	set_name(0X1E650, "code_bto_sCorner", SN_LOCAL);
	set_name(0X1E65D, "code_sCorner_radius", SN_LOCAL);
	set_name(0X1E678, "code_bto_sSplitB", SN_LOCAL);
	set_name(0X1E690, "code_bto_lSplitA", SN_LOCAL);
	set_name(0X1E6A4, "code_bto_lSplitB", SN_LOCAL);
	set_name(0X1E6C6, "code_bto_highEntrance", SN_LOCAL);
	set_name(0X1E7DA, "code_bto_highway", SN_LOCAL);
	set_name(0X1E802, "code_bto_ramp", SN_LOCAL);
	set_name(0X1E81E, "code_bto_solidRamp", SN_LOCAL);
	set_name(0X1E8B6, "code_bto_overpass", SN_LOCAL);
	set_name(0X1E8CA, "code_bto_solidRoad", SN_LOCAL);
	set_name(0X1E8E4, "code_bto_elevRoad", SN_LOCAL);
	set_name(0X1E978, "code_bto_elevCorner", SN_LOCAL);
	set_name(0X1EA26, "code_bto_bankEntranceA", SN_LOCAL);
	set_name(0X1EA36, "code_bto_bankEntranceB", SN_LOCAL);
	set_name(0X1EB46, "code_bto_bankRoad", SN_LOCAL);
	set_name(0X1EB6C, "code_bto_bankCorner", SN_LOCAL);
	set_name(0X1EBF0, "code_bto_loop", SN_LOCAL);
	set_name(0X1EDAD, "code_bto_loopBase", SN_LOCAL);
	set_name(0X1EE3E, "code_bto_tunnel", SN_LOCAL);
	set_name(0X1EF24, "code_bto_pipeEntrance", SN_LOCAL);
	set_name(0X1F020, "code_bto_halfPipe", SN_LOCAL);
	set_name(0X1F028, "code_bto_pipe", SN_LOCAL);
	set_name(0X1F1B0, "code_bto_corkLr", SN_LOCAL);
	set_name(0X1F2E0, "code_bto_corkUdLH", SN_LOCAL);
	set_name(0X1F2FA, "code_bto_corkUdRH", SN_LOCAL);
	set_name(0X1F432, "code_bto_slalom", SN_LOCAL);
	set_name(0X1F50E, "code_bto_barn", SN_LOCAL);
	set_name(0X1F56C, "code_bto_gasStation", SN_LOCAL);
	set_name(0X1F5D2, "code_bto_joes", SN_LOCAL);
	set_name(0X1F62E, "code_bto_office", SN_LOCAL);
	set_name(0X1F68C, "code_bto_windmill", SN_LOCAL);
	set_name(0X1F6E6, "code_bto_ship", SN_LOCAL);
	set_name(0X1F750, "bto_branches", SN_LOCAL);
	set_name(0X1F7E6, "code_bto_blank", SN_LOCAL);
	set_name(0X1F7EF, "code_hillslope_parsing", SN_LOCAL);
	add_func    (0X1FAE4,0X1FE94);
	set_func_flags(0X1FAE4,0x4412);
	set_frame_size(0X1FAE4, 0X18, 2, 0);
	add_func    (0X1FE94,0X1FF5E);
	set_func_flags(0X1FE94,0x4412);
	set_frame_size(0X1FE94, 0X4, 2, 0);
	add_func    (0X1FF5E,0X1FF91);
	set_func_flags(0X1FF5E,0x4402);
	add_func    (0X1FF92,0X20438);
	set_func_flags(0X1FF92,0x4412);
	set_frame_size(0X1FF92, 0X14, 2, 0);
	add_func    (0X20438,0X204AE);
	set_func_flags(0X20438,0x4402);
	add_func    (0X204AE,0X206D4);
	set_func_flags(0X204AE,0x4412);
	set_frame_size(0X204AE, 0X18, 2, 0);
	add_func    (0X206D4,0X217C9);
	set_func_flags(0X206D4,0x4412);
	set_frame_size(0X206D4, 0XAF4, 2, 0);
	add_func    (0X217CA,0X21A5A);
	set_func_flags(0X217CA,0x4412);
	set_frame_size(0X217CA, 0XF34, 2, 0);
	add_func    (0X21A5A,0X21B79);
	set_func_flags(0X21A5A,0x4412);
	set_frame_size(0X21A5A, 0, 2, 0);
	add_func    (0X21B7A,0X223F9);
	set_func_flags(0X21B7A,0x4412);
	set_frame_size(0X21B7A, 0X18, 2, 0);
	add_func    (0X223FA,0X22532);
	set_func_flags(0X223FA,0x4412);
	set_frame_size(0X223FA, 0, 2, 0);
	add_func    (0X22532,0X2255A);
	set_func_flags(0X22532,0x4412);
	set_frame_size(0X22532, 0X4, 2, 0);
	add_func    (0X2255A,0X22576);
	set_func_flags(0X2255A,0x4402);
	add_func    (0X22576,0X22595);
	set_func_flags(0X22576,0x4402);
	add_func    (0X22596,0X22697);
	set_func_flags(0X22596,0x4402);
	add_func    (0X22698,0X2298B);
	set_func_flags(0X22698,0x4412);
	set_frame_size(0X22698, 0XE, 2, 0);
	add_func    (0X2298C,0X22C92);
	set_func_flags(0X2298C,0x4412);
	set_frame_size(0X2298C, 0X38, 2, 0);
	add_func    (0X22C92,0X22CE8);
	set_func_flags(0X22C92,0x4412);
	SetType(0X22C92, "int __cdecl __far file_load_replay(char *);");
	set_frame_size(0X22C92, 0X4, 2, 0);
	add_func    (0X22CE8,0X22D2D);
	set_func_flags(0X22CE8,0x4412);
	set_frame_size(0X22CE8, 0XA, 2, 0);
	add_func    (0X22D2E,0X23702);
	set_func_flags(0X22D2E,0x4412);
	set_frame_size(0X22D2E, 0X24, 2, 0);
	add_func    (0X23702,0X239B3);
	set_func_flags(0X23702,0x4412);
	set_frame_size(0X23702, 0X8, 2, 0);
	add_func    (0X239B4,0X23A50);
	set_func_flags(0X239B4,0x4402);
	add_func    (0X23A50,0X23A98);
	set_func_flags(0X23A50,0x4412);
	set_frame_size(0X23A50, 0, 2, 0);
	add_func    (0X23A98,0X23B4B);
	set_func_flags(0X23A98,0x4412);
	set_frame_size(0X23A98, 0XE, 2, 0);
	add_func    (0X23B4C,0X24D64);
	set_func_flags(0X23B4C,0x4412);
	set_frame_size(0X23B4C, 0X48, 2, 0);
	add_func    (0X24D64,0X24DC1);
	set_func_flags(0X24D64,0x4402);
	add_func    (0X24DC2,0X24DE5);
	set_func_flags(0X24DC2,0x4412);
	set_frame_size(0X24DC2, 0, 2, 0);
	add_func    (0X24DE6,0X24E05);
	set_func_flags(0X24DE6,0x4402);
	add_func    (0X24E06,0X24E9E);
	set_func_flags(0X24E06,0x4412);
	set_frame_size(0X24E06, 0X12, 2, 0);
	add_func    (0X24E9E,0X25E23);
	set_func_flags(0X24E9E,0x4412);
	set_frame_size(0X24E9E, 0XB80, 2, 0);
	set_name(0X25216, "_done_ret_neg1", SN_LOCAL);
	set_name(0X25470, "_primtype_poly", SN_LOCAL);
	set_name(0X2585C, "_primtype_line", SN_LOCAL);
	set_name(0X2598E, "_primtype_wheel", SN_LOCAL);
	set_name(0X25BAA, "_primtype_sphere", SN_LOCAL);
	set_name(0X25E11, "_transform_done", SN_LOCAL);
	set_name(0X25E1B, "_done_ret_0", SN_LOCAL);
	add_func    (0X25E24,0X25EE2);
	set_func_flags(0X25E24,0x4412);
	set_frame_size(0X25E24, 0X8, 2, 0);
	add_func    (0X25EE2,0X25F2E);
	set_func_flags(0X25EE2,0x4412);
	set_frame_size(0X25EE2, 0X6, 2, 0);
	add_func    (0X25F2E,0X25FF6);
	set_func_flags(0X25F2E,0x4412);
	set_frame_size(0X25F2E, 0X14, 2, 0);
	add_func    (0X25FF6,0X261FA);
	set_func_flags(0X25FF6,0x4412);
	set_frame_size(0X25FF6, 0X44, 2, 0);
	set_name(0X26006, "_fill_type0", SN_LOCAL);
	set_name(0X2606D, "_do_fill_next", SN_LOCAL);
	set_name(0X26070, "_fill_default", SN_LOCAL);
	set_name(0X2607F, "_fill_next_eop6", SN_LOCAL);
	set_name(0X26084, "_fill_patterned", SN_LOCAL);
	set_name(0X260A8, "_fill_next_eop8", SN_LOCAL);
	set_name(0X260AB, "_fill_next", SN_LOCAL);
	set_name(0X260FB, "_fill_nonzero", SN_LOCAL);
	set_name(0X26115, "_fill_next_jmp", SN_LOCAL);
	set_name(0X26118, "_fill_unk", SN_LOCAL);
	set_name(0X26144, "_fill_solid", SN_LOCAL);
	set_name(0X2615F, "_fill_next_eop10", SN_LOCAL);
	set_name(0X26166, "_fill_wheel0", SN_LOCAL);
	set_name(0X2616B, "_fill_wheel", SN_LOCAL);
	set_name(0X261C0, "_fill_sphere", SN_LOCAL);
	set_name(0X261DA, "_fill_pixel", SN_LOCAL);
	set_name(0X261F0, "_get_a_poly_info_done", SN_LOCAL);
	add_func    (0X261FA,0X2637A);
	set_func_flags(0X261FA,0x4412);
	set_frame_size(0X261FA, 0X8, 2, 0);
	set_name(0X26362, "rotZXY_offset", SN_LOCAL);
	add_func    (0X2637A,0X263C6);
	set_func_flags(0X2637A,0x4412);
	set_frame_size(0X2637A, 0XA, 2, 0);
	add_func    (0X263C6,0X26500);
	set_func_flags(0X263C6,0x4412);
	set_frame_size(0X263C6, 0X12, 2, 0);
	add_func    (0X26500,0X26551);
	set_func_flags(0X26500,0x4402);
	add_func    (0X26552,0X26572);
	set_func_flags(0X26552,0x4412);
	set_frame_size(0X26552, 0, 2, 0);
	add_func    (0X26572,0X265EC);
	set_func_flags(0X26572,0x4412);
	set_frame_size(0X26572, 0X2, 2, 0);
	add_func    (0X265EC,0X26670);
	set_func_flags(0X265EC,0x4412);
	set_frame_size(0X265EC, 0X2, 2, 0);
	add_func    (0X26670,0X2695D);
	set_func_flags(0X26670,0x4412);
	set_frame_size(0X26670, 0X26, 2, 0);
	add_func    (0X2695E,0X2699C);
	set_func_flags(0X2695E,0x4412);
	set_frame_size(0X2695E, 0X2, 2, 0);
	add_func    (0X2699C,0X269CF);
	set_func_flags(0X2699C,0x4412);
	set_frame_size(0X2699C, 0X2, 2, 0);
	add_func    (0X269D0,0X26A52);
	set_func_flags(0X269D0,0x4412);
	set_frame_size(0X269D0, 0X2, 2, 0);
	add_func    (0X26A52,0X26B4A);
	set_func_flags(0X26A52,0x4412);
	set_frame_size(0X26A52, 0X20, 2, 0);
	add_func    (0X26B4A,0X26BAD);
	set_func_flags(0X26B4A,0x4412);
	set_frame_size(0X26B4A, 0X206, 2, 0);
	add_func    (0X26BAE,0X26BD5);
	set_func_flags(0X26BAE,0x4402);
	add_func    (0X26BD5,0X26C06);
	set_func_flags(0X26BD5,0x4402);
	set_frame_size(0X26BD5, 0X2, 0, 0);
	add_func    (0X26C06,0X26C3C);
	set_func_flags(0X26C06,0x4412);
	set_frame_size(0X26C06, 0X2, 2, 0);
	add_func    (0X26C3C,0X26EF4);
	set_func_flags(0X26C3C,0x4412);
	set_frame_size(0X26C3C, 0X1C, 2, 0);
	add_func    (0X26EF4,0X26F6D);
	set_func_flags(0X26EF4,0x4412);
	set_frame_size(0X26EF4, 0X4, 2, 0);
	add_func    (0X26F6D,0X26FA3);
	set_func_flags(0X26F6D,0x4412);
	set_frame_size(0X26F6D, 0X2, 2, 0);
	add_func    (0X26FA3,0X2712D);
	set_func_flags(0X26FA3,0x4412);
	set_frame_size(0X26FA3, 0X8, 2, 0);
	add_func    (0X2712E,0X27220);
	set_func_flags(0X2712E,0x4412);
	set_frame_size(0X2712E, 0X16, 2, 0);
	add_func    (0X27220,0X2726C);
	set_func_flags(0X27220,0x4412);
	set_frame_size(0X27220, 0X2, 2, 0);
	add_func    (0X2726C,0X272B0);
	set_func_flags(0X2726C,0x4412);
	set_frame_size(0X2726C, 0X2, 2, 0);
	add_func    (0X272B0,0X272F4);
	set_func_flags(0X272B0,0x4412);
	set_frame_size(0X272B0, 0X2, 2, 0);
	add_func    (0X272F4,0X27338);
	set_func_flags(0X272F4,0x4412);
	set_frame_size(0X272F4, 0X2, 2, 0);
	add_func    (0X27338,0X27374);
	set_func_flags(0X27338,0x4412);
	set_frame_size(0X27338, 0X2, 2, 0);
	add_func    (0X27374,0X273B0);
	set_func_flags(0X27374,0x4412);
	set_frame_size(0X27374, 0X2, 2, 0);
	add_func    (0X273B0,0X2740B);
	set_func_flags(0X273B0,0x4412);
	set_frame_size(0X273B0, 0X8, 2, 0);
	add_func    (0X2740B,0X27466);
	set_func_flags(0X2740B,0x4412);
	set_frame_size(0X2740B, 0X8, 2, 0);
	add_func    (0X27466,0X27489);
	set_func_flags(0X27466,0x4412);
	set_frame_size(0X27466, 0X2, 2, 0);
	add_func    (0X27489,0X274AF);
	set_func_flags(0X27489,0x4412);
	set_frame_size(0X27489, 0X2, 2, 0);
	add_func    (0X274B0,0X275C5);
	set_func_flags(0X274B0,0x4412);
	set_frame_size(0X274B0, 0X44, 2, 0);
	add_func    (0X275C6,0X27686);
	set_func_flags(0X275C6,0x4412);
	set_frame_size(0X275C6, 0X40, 2, 0);
	add_func    (0X27686,0X27ED3);
	set_func_flags(0X27686,0x4412);
	set_frame_size(0X27686, 0X1DC, 2, 0);
	add_func    (0X27ED4,0X285C1);
	set_func_flags(0X27ED4,0x4412);
	SetType(0X27ED4, "int __cdecl __far do_fileselect_dialog(char *, int, int, int);");
	set_frame_size(0X27ED4, 0X720, 2, 0);
	add_func    (0X285C2,0X28639);
	set_func_flags(0X285C2,0x4412);
	SetType(0X285C2, "int __cdecl __far file_build_path(char *, int, char *);");
	set_frame_size(0X285C2, 0X6, 2, 0);
	add_func    (0X2863A,0X28762);
	set_func_flags(0X2863A,0x4412);
	SetType(0X2863A, "int __cdecl __far do_savefile_dialog(char *, int, int);");
	set_frame_size(0X2863A, 0X16, 2, 0);
	add_func    (0X28762,0X287C4);
	set_func_flags(0X28762,0x4412);
	SetType(0X28762, "int __cdecl __far parse_filepath_separators(int, char *);");
	set_frame_size(0X28762, 0X8, 2, 0);
	add_func    (0X287C4,0X289E1);
	set_func_flags(0X287C4,0x4412);
	set_frame_size(0X287C4, 0X8, 2, 0);
	set_name(0X2898F, "_try_ret_mousebut01", SN_LOCAL);
	set_name(0X289A4, "_try_ret_mousebut2", SN_LOCAL);
	set_name(0X289B0, "_try_ret_joyinput", SN_LOCAL);
	set_name(0X289C8, "_try_ret_mousebutinput", SN_LOCAL);
	add_func    (0X289E2,0X289F1);
	set_func_flags(0X289E2,0x4412);
	set_frame_size(0X289E2, 0, 2, 0);
	add_func    (0X289F2,0X28A78);
	set_func_flags(0X289F2,0x4412);
	set_frame_size(0X289F2, 0X54, 2, 0);
	add_func    (0X28A78,0X28A8B);
	set_func_flags(0X28A78,0x4412);
	set_frame_size(0X28A78, 0, 2, 0);
	add_func    (0X28A8C,0X28AA2);
	set_func_flags(0X28A8C,0x4412);
	set_frame_size(0X28A8C, 0, 2, 0);
	add_func    (0X28AA2,0X28AD5);
	set_func_flags(0X28AA2,0x4412);
	set_frame_size(0X28AA2, 0X4, 2, 0);
	add_func    (0X28AD6,0X28B0E);
	set_func_flags(0X28AD6,0x4412);
	set_frame_size(0X28AD6, 0X6, 2, 0);
	add_func    (0X28B0E,0X28D9E);
	set_func_flags(0X28B0E,0x4412);
	set_frame_size(0X28B0E, 0X1A, 2, 0);
	add_func    (0X28D9E,0X28DB6);
	set_func_flags(0X28D9E,0x4402);
	add_func    (0X28DB6,0X28DC7);
	set_func_flags(0X28DB6,0x4402);
	add_func    (0X28DC8,0X28E04);
	set_func_flags(0X28DC8,0x4412);
	set_frame_size(0X28DC8, 0X3C, 2, 0);
	add_func    (0X28E04,0X28E8F);
	set_func_flags(0X28E04,0x4412);
	set_frame_size(0X28E04, 0X40, 2, 0);
	add_func    (0X28E90,0X28EE3);
	set_func_flags(0X28E90,0x4412);
	set_frame_size(0X28E90, 0X6, 2, 0);
	add_func    (0X28EE4,0X28F26);
	set_func_flags(0X28EE4,0x4412);
	set_frame_size(0X28EE4, 0X2, 2, 0);
	add_func    (0X28F26,0X28F3B);
	set_func_flags(0X28F26,0x4402);
	add_func    (0X28F3C,0X28F4D);
	set_func_flags(0X28F3C,0x4402);
	add_func    (0X28F4E,0X28F6A);
	set_func_flags(0X28F4E,0x4402);
	add_func    (0X28F6A,0X28F7B);
	set_func_flags(0X28F6A,0x4402);
	add_func    (0X28F7C,0X28F98);
	set_func_flags(0X28F7C,0x4402);
	add_func    (0X28F98,0X29008);
	set_func_flags(0X28F98,0x4412);
	set_frame_size(0X28F98, 0, 2, 0);
	add_func    (0X29008,0X290BC);
	set_func_flags(0X29008,0x4412);
	set_frame_size(0X29008, 0, 2, 0);
	add_func    (0X290BC,0X29139);
	set_func_flags(0X290BC,0x4412);
	SetType(0X290BC, "int __cdecl __far call_read_line(char *, int, int, int, int);");
	set_frame_size(0X290BC, 0X6, 2, 0);
	add_func    (0X2913A,0X2916E);
	set_func_flags(0X2913A,0x4412);
	set_frame_size(0X2913A, 0XA, 2, 0);
	add_func    (0X2916E,0X292DC);
	set_func_flags(0X2916E,0x4412);
	set_frame_size(0X2916E, 0X18, 2, 0);
	add_func    (0X292DC,0X2955A);
	set_func_flags(0X292DC,0x4412);
	set_frame_size(0X292DC, 0X76, 2, 0);
	add_func    (0X2955A,0X29606);
	set_func_flags(0X2955A,0x4412);
	set_frame_size(0X2955A, 0X2, 2, 0);
	add_func    (0X29606,0X29620);
	set_func_flags(0X29606,0x4412);
	set_frame_size(0X29606, 0, 2, 0);
	add_func    (0X29620,0X296A9);
	set_func_flags(0X29620,0x4412);
	set_frame_size(0X29620, 0X8, 2, 0);
	add_func    (0X296AA,0X296DF);
	set_func_flags(0X296AA,0x4402);
	add_func    (0X296E0,0X29771);
	set_func_flags(0X296E0,0x4412);
	SetType(0X296E0, "int __cdecl __far print_int_as_string_maybe(char *, int, int);");
	set_frame_size(0X296E0, 0X8, 2, 0);
	add_func    (0X29772,0X29785);
	set_func_flags(0X29772,0x4402);
	add_func    (0X29786,0X297FC);
	set_func_flags(0X29786,0x4412);
	set_frame_size(0X29786, 0XA, 2, 0);
	add_func    (0X297FC,0X29857);
	set_func_flags(0X297FC,0x4412);
	SetType(0X297FC, "int __cdecl __far file_load_audiores(char *);");
	set_frame_size(0X297FC, 0X4, 2, 0);
	add_func    (0X29858,0X2988A);
	set_func_flags(0X29858,0x4402);
	add_func    (0X2988A,0X298A7);
	set_func_flags(0X2988A,0x4412);
	set_frame_size(0X2988A, 0, 2, 0);
	add_func    (0X298A8,0X298B8);
	set_func_flags(0X298A8,0x4402);
	add_func    (0X298B8,0X2998E);
	set_func_flags(0X298B8,0x4412);
	SetType(0X298B8, "int __cdecl __far format_frame_as_string(char *, int);");
	set_frame_size(0X298B8, 0X1C, 2, 0);
	add_func    (0X2998E,0X299CA);
	set_func_flags(0X2998E,0x4412);
	set_frame_size(0X2998E, 0X8, 2, 0);
	add_func    (0X299CA,0X29A85);
	set_func_flags(0X299CA,0x4412);
	SetType(0X299CA, "int __cdecl __far file_load_resource(int, char *);");
	set_frame_size(0X299CA, 0X4, 2, 0);
	add_func    (0X29A86,0X29AEC);
	set_func_flags(0X29A86,0x4412);
	set_frame_size(0X29A86, 0X4, 2, 0);
	add_func    (0X29AEC,0X29B07);
	set_func_flags(0X29AEC,0x4402);
	set_frame_size(0X29AEC, 0X2, 0, 0);
	add_func    (0X29B08,0X29B32);
	set_func_flags(0X29B08,0x4402);
	set_frame_size(0X29B08, 0X2, 0, 0);
	add_func    (0X29B32,0X29D9A);
	set_func_flags(0X29B32,0x4412);
	set_frame_size(0X29B32, 0X5A, 2, 0);
	add_func    (0X29D9A,0X29DF4);
	set_func_flags(0X29D9A,0x4402);
	add_func    (0X29DF4,0X29E49);
	set_func_flags(0X29DF4,0x4402);
	add_func    (0X29E4A,0X29E97);
	set_func_flags(0X29E4A,0x4402);
	add_func    (0X29E98,0X29EFA);
	set_func_flags(0X29E98,0x4402);
	add_func    (0X29EFA,0X29F5C);
	set_func_flags(0X29EFA,0x4402);
	add_func    (0X29F5C,0X29FB6);
	set_func_flags(0X29F5C,0x4402);
	add_func    (0X29FB6,0X2A118);
	set_func_flags(0X29FB6,0x4412);
	set_frame_size(0X29FB6, 0X216, 2, 0);
	add_func    (0X2A118,0X2A1A6);
	set_func_flags(0X2A118,0x4412);
	set_frame_size(0X2A118, 0X2, 2, 0);
	add_func    (0X2A1A6,0X2A1FF);
	set_func_flags(0X2A1A6,0x4412);
	set_frame_size(0X2A1A6, 0, 2, 0);
	add_func    (0X2A200,0X2A22F);
	set_func_flags(0X2A200,0x4402);
	add_func    (0X2A230,0X2A236);
	set_func_flags(0X2A230,0x4402);
	add_func    (0X2A236,0X2A2BC);
	set_func_flags(0X2A236,0x4412);
	set_frame_size(0X2A236, 0X54, 2, 0);
	add_func    (0X2A2BC,0X2BEB6);
	set_func_flags(0X2A2BC,0x4412);
	set_frame_size(0X2A2BC, 0X19C, 2, 0);
	add_func    (0X2BEB6,0X2C0A7);
	set_func_flags(0X2BEB6,0x4412);
	set_frame_size(0X2BEB6, 0X8, 2, 0);
	add_func    (0X2C0A8,0X2C81C);
	set_func_flags(0X2C0A8,0x4412);
	set_frame_size(0X2C0A8, 0X12, 2, 0);
	add_func    (0X2C81C,0X2C9B4);
	set_func_flags(0X2C81C,0x4412);
	set_frame_size(0X2C81C, 0XE, 2, 0);
	add_func    (0X2C9B4,0X2CC52);
	set_func_flags(0X2C9B4,0x4412);
	set_frame_size(0X2C9B4, 0X396, 2, 0);
	add_func    (0X2CC62,0X2CDEC);
	set_func_flags(0X2CC62,0x425);
	set_frame_size(0X2CC62, 0, 0, 0);
	add_func    (0X2CDEC,0X2CE03);
	set_func_flags(0X2CDEC,0x411);
	set_frame_size(0X2CDEC, 0, 2, 0);
	add_func    (0X2CE03,0X2CE4A);
	set_func_flags(0X2CE03,0x411);
	set_frame_size(0X2CE03, 0, 2, 0);
	add_func    (0X2CE4A,0X2CE77);
	set_func_flags(0X2CE4A,0x4400);
	add_func    (0X2CE77,0X2CE8A);
	set_func_flags(0X2CE77,0x4400);
	add_func    (0X2CE8A,0X2CEAE);
	set_func_flags(0X2CE8A,0x4416);
	set_frame_size(0X2CE8A, 0, 2, 0);
	add_func    (0X2CEAE,0X2CEB4);
	set_func_flags(0X2CEAE,0x405);
	add_func    (0X2CEB4,0X2CED8);
	set_func_flags(0X2CEB4,0x4406);
	add_func    (0X2CED8,0X2CEFE);
	set_func_flags(0X2CED8,0x4406);
	set_frame_size(0X2CED8, 0X2, 0, 0);
	add_func    (0X2CEFE,0X2D090);
	set_func_flags(0X2CEFE,0x404);
	add_func    (0X2D090,0X2D0FE);
	set_func_flags(0X2D090,0x4416);
	set_frame_size(0X2D090, 0X2, 2, 0);
	add_func    (0X2D0FE,0X2D129);
	set_func_flags(0X2D0FE,0x4416);
	set_frame_size(0X2D0FE, 0X4, 2, 0X2);
	add_func    (0X2D129,0X2D154);
	set_func_flags(0X2D129,0x4416);
	set_frame_size(0X2D129, 0X2, 2, 0X2);
	add_func    (0X2D154,0X2D196);
	set_func_flags(0X2D154,0x4404);
	add_func    (0X2D1B6,0X2D1BC);
	set_func_flags(0X2D1B6,0x4406);
	add_func    (0X2D1BC,0X2D1EA);
	set_func_flags(0X2D1BC,0x4400);
	add_func    (0X2D1EA,0X2D21E);
	set_func_flags(0X2D1EA,0x4416);
	SetType(0X2D1EA, "int flushall(void);");
	set_frame_size(0X2D1EA, 0X8, 2, 0);
	add_func    (0X2D21E,0X2D260);
	set_func_flags(0X2D21E,0x4416);
	SetType(0X2D21E, "int printf(const char *, ...);");
	set_frame_size(0X2D21E, 0XC, 2, 0);
	add_func    (0X2D260,0X2D3BD);
	set_func_flags(0X2D260,0x4416);
	SetType(0X2D260, "int __cdecl _flsbuf(int, FILE *);");
	set_frame_size(0X2D260, 0XC, 2, 0);
	add_func    (0X2D3BE,0X2D42C);
	set_func_flags(0X2D3BE,0x4414);
	set_frame_size(0X2D3BE, 0X4, 2, 0);
	add_func    (0X2D42C,0X2D4B0);
	set_func_flags(0X2D42C,0x4416);
	set_frame_size(0X2D42C, 0X6, 2, 0);
	add_func    (0X2D4B0,0X2D54E);
	set_func_flags(0X2D4B0,0x4416);
	SetType(0X2D4B0, "int __cdecl __far _ftbuf(int, FILE *);");
	set_frame_size(0X2D4B0, 0X4, 2, 0);
	add_func    (0X2D54E,0X2D5BE);
	set_func_flags(0X2D54E,0x4416);
	SetType(0X2D54E, "int __cdecl fflush(FILE *);");
	set_frame_size(0X2D54E, 0X8, 2, 0);
	add_func    (0X2D5BE,0X2D8E9);
	set_func_flags(0X2D5BE,0x4416);
	set_frame_size(0X2D5BE, 0X168, 2, 0);
	add_func    (0X2D8EA,0X2DA24);
	set_func_flags(0X2D8EA,0x441e);
	set_frame_size(0X2D8EA, 0X1C, 2, 0);
	add_func    (0X2DA24,0X2DB0F);
	set_func_flags(0X2DA24,0x441e);
	set_frame_size(0X2DA24, 0X14, 2, 0);
	add_func    (0X2DB10,0X2DB67);
	set_func_flags(0X2DB10,0x441f);
	set_frame_size(0X2DB10, 0X4, 2, 0);
	add_func    (0X2DBCE,0X2DC0D);
	set_func_flags(0X2DBCE,0x441e);
	set_frame_size(0X2DBCE, 0X2, 2, 0);
	add_func    (0X2DC0E,0X2DC6E);
	set_func_flags(0X2DC0E,0x441e);
	set_frame_size(0X2DC0E, 0X6, 2, 0);
	add_func    (0X2DC6E,0X2DCD8);
	set_func_flags(0X2DC6E,0x441e);
	set_frame_size(0X2DC6E, 0X6, 2, 0);
	add_func    (0X2DCD8,0X2DDC4);
	set_func_flags(0X2DCD8,0x441e);
	set_frame_size(0X2DCD8, 0XE, 2, 0);
	add_func    (0X2DDC4,0X2DDDC);
	set_func_flags(0X2DDC4,0x440e);
	add_func    (0X2DDDC,0X2DE06);
	set_func_flags(0X2DDDC,0x440e);
	add_func    (0X2DE06,0X2DE85);
	set_func_flags(0X2DE06,0x441e);
	set_frame_size(0X2DE06, 0X8, 2, 0);
	add_func    (0X2DE86,0X2DEAD);
	set_func_flags(0X2DE86,0x441e);
	set_frame_size(0X2DE86, 0X4, 2, 0);
	add_func    (0X2DEAE,0X2DF28);
	set_func_flags(0X2DEAE,0x4416);
	SetType(0X2DEAE, "__int32 __cdecl lseek(int, __int32, int);");
	set_frame_size(0X2DEAE, 0X4, 2, 0);
	add_func    (0X2DF28,0X2DFE9);
	set_func_flags(0X2DF28,0x4416);
	SetType(0X2DF28, "int __cdecl write(int, const void *, unsigned int);");
	set_frame_size(0X2DF28, 0X8, 2, 0);
	add_func    (0X2E052,0X2E066);
	set_func_flags(0X2E052,0x4406);
	SetType(0X2E052, "size_t stackavail(void);");
	add_func    (0X2E066,0X2E078);
	set_func_flags(0X2E066,0x4416);
	set_func_cmt(0X2E066,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X2E066, 0, 2, 0);
	add_func    (0X2E078,0X2E0BE);
	set_func_flags(0X2E078,0x4416);
	set_func_cmt(0X2E078,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X2E078, 0X4, 2, 0);
	add_func    (0X2E0C1,0X2E1A4);
	set_func_flags(0X2E0C1,0x4404);
	add_func    (0X2E1A4,0X2E1DE);
	set_func_flags(0X2E1A4,0x4404);
	add_func    (0X2E1DE,0X2E200);
	set_func_flags(0X2E1DE,0x4404);
	add_func    (0X2E200,0X2E221);
	set_func_flags(0X2E200,0x4404);
	set_frame_size(0X2E200, 0X2, 0, 0);
	add_func    (0X2E222,0X2E290);
	set_func_flags(0X2E222,0x4416);
	set_frame_size(0X2E222, 0X4, 2, 0);
	add_func    (0X2E290,0X2E2E6);
	set_func_flags(0X2E290,0x4404);
	add_func    (0X2E2E6,0X2E325);
	set_func_flags(0X2E2E6,0x4416);
	SetType(0X2E2E6, "char *__cdecl strcat(char *, const char *);");
	set_frame_size(0X2E2E6, 0, 2, 0);
	add_func    (0X2E326,0X2E358);
	set_func_flags(0X2E326,0x4416);
	SetType(0X2E326, "char *__cdecl strcpy(char *, const char *);");
	set_frame_size(0X2E326, 0, 2, 0);
	add_func    (0X2E358,0X2E383);
	set_func_flags(0X2E358,0x4416);
	SetType(0X2E358, "int __cdecl strcmp(const char *, const char *);");
	set_frame_size(0X2E358, 0, 2, 0);
	add_func    (0X2E384,0X2E39F);
	set_func_flags(0X2E384,0x4416);
	SetType(0X2E384, "size_t __cdecl strlen(const char *);");
	set_frame_size(0X2E384, 0, 2, 0);
	add_func    (0X2E3A0,0X2E3BB);
	set_func_flags(0X2E3A0,0x4416);
	SetType(0X2E3A0, "char *__cdecl itoa(int, char *, int);");
	set_frame_size(0X2E3A0, 0X4, 2, 0);
	add_func    (0X2E3BC,0X2E3C6);
	set_func_flags(0X2E3BC,0x4414);
	SetType(0X2E3BC, "char *__cdecl ultoa(unsigned __int32, char *, int);");
	set_frame_size(0X2E3BC, 0X4, 2, 0);
	add_func    (0X2E3C6,0X2E3E4);
	set_func_flags(0X2E3C6,0x4417);
	SetType(0X2E3C6, "void abort(void);");
	set_frame_size(0X2E3C6, 0, 2, 0);
	add_func    (0X2E3E8,0X2E40B);
	set_func_flags(0X2E3E8,0x4416);
	SetType(0X2E3E8, "int __cdecl isatty(int);");
	set_frame_size(0X2E3E8, 0, 2, 0);
	add_func    (0X2E40C,0X2E48C);
	set_func_flags(0X2E40C,0x4416);
	SetType(0X2E40C, "int __cdecl int86(int, union REGS *, union REGS *);");
	set_frame_size(0X2E40C, 0XE, 2, 0);
	add_func    (0X2E48C,0X2E4E6);
	set_func_flags(0X2E48C,0x4416);
	SetType(0X2E48C, "int sprintf(char *, const char *, ...);");
	set_frame_size(0X2E48C, 0X12, 2, 0);
	add_func    (0X2E4E6,0X2E528);
	set_func_flags(0X2E4E6,0x4416);
	SetType(0X2E4E6, "int __cdecl stricmp(const char *, const char *);");
	set_frame_size(0X2E4E6, 0, 2, 0);
	add_func    (0X2E588,0X2E59D);
	set_func_flags(0X2E588,0x4416);
	SetType(0X2E588, "int __cdecl abs(int);");
	set_frame_size(0X2E588, 0, 2, 0);
	add_func    (0X2E5AA,0X2E63B);
	set_func_flags(0X2E5AA,0x4416);
	SetType(0X2E5AA, "int __cdecl raise(int);");
	set_frame_size(0X2E5AA, 0X4, 2, 0);
	add_func    (0X2E63C,0X2E64D);
	set_func_flags(0X2E63C,0x4416);
	SetType(0X2E63C, "void __cdecl srand(unsigned int);");
	set_frame_size(0X2E63C, 0, 2, 0);
	add_func    (0X2E64E,0X2E676);
	set_func_flags(0X2E64E,0x4406);
	SetType(0X2E64E, "int rand(void);");
	add_func    (0X2E67C,0X2E71F);
	set_func_flags(0X2E67C,0x4416);
	SetType(0X2E67C, "void (__cdecl *__cdecl signal(int, void (__cdecl *)(int)))(int);");
	set_frame_size(0X2E67C, 0X4, 2, 0);
	add_func    (0X2E71F,0X2E747);
	set_func_flags(0X2E71F,0x4416);
	set_frame_size(0X2E71F, 0, 2, 0);
	add_func    (0X2E810,0X2E83B);
	set_func_flags(0X2E810,0x4416);
	SetType(0X2E810, "char *__cdecl strrchr(const char *, int);");
	set_frame_size(0X2E810, 0X2, 2, 0);
	add_func    (0X2E83C,0X2E8D8);
	set_func_flags(0X2E83C,0x4416);
	set_frame_size(0X2E83C, 0X6, 2, 0X8);
	add_func    (0X2E8D8,0X2E90C);
	set_func_flags(0X2E8D8,0x4416);
	set_frame_size(0X2E8D8, 0, 2, 0X8);
	add_func    (0X2E90C,0X2E917);
	set_func_flags(0X2E90C,0x4406);
	add_func    (0X2E918,0X2E93C);
	set_func_flags(0X2E918,0x4416);
	set_func_cmt(0X2E918,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X2E918, 0, 2, 0X6);
	add_func    (0X2E93C,0X2E960);
	set_func_flags(0X2E93C,0x4416);
	set_frame_size(0X2E93C, 0, 2, 0X6);
	add_func    (0X2E960,0X2E981);
	set_func_flags(0X2E960,0x4416);
	set_func_cmt(0X2E960,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X2E960, 0, 2, 0X4);
	add_func    (0X2E982,0X2E9A6);
	set_func_flags(0X2E982,0x4416);
	set_func_cmt(0X2E982,	"MS Quick C v1.0/v2.01 & MSC v5.1 DOS run-time & graphic", 1);
	set_frame_size(0X2E982, 0, 2, 0X6);
	add_func    (0X2E9A6,0X2EA07);
	set_func_flags(0X2E9A6,0x4416);
	set_frame_size(0X2E9A6, 0X4, 2, 0X8);
	add_func    (0X2EA08,0X2EA29);
	set_func_flags(0X2EA08,0x4412);
	set_frame_size(0X2EA08, 0, 2, 0);
	add_func    (0X2EA2A,0X2EA4D);
	set_func_flags(0X2EA2A,0x401);
	add_func    (0X2EA4E,0X2EAD4);
	set_func_flags(0X2EA4E,0x4412);
	set_frame_size(0X2EA4E, 0X2, 2, 0);
	add_func    (0X2EAD4,0X2EADE);
	set_func_flags(0X2EAD4,0x4402);
	add_func    (0X2EADE,0X2EAF5);
	set_func_flags(0X2EADE,0x4412);
	set_frame_size(0X2EADE, 0, 2, 0);
	add_func    (0X2EB07,0X2EB1E);
	set_func_flags(0X2EB07,0x4402);
	add_func    (0X2EB1E,0X2EB48);
	set_func_flags(0X2EB1E,0x4412);
	set_frame_size(0X2EB1E, 0X4, 2, 0);
	add_func    (0X2EB48,0X2EB56);
	set_func_flags(0X2EB48,0x412);
	set_frame_size(0X2EB48, 0X8, 2, 0);
	add_func    (0X2EB56,0X2F314);
	set_func_flags(0X2EB56,0x4412);
	set_frame_size(0X2EB56, 0X8, 2, 0);
	add_func    (0X2F314,0X2F334);
	set_func_flags(0X2F314,0x4412);
	set_frame_size(0X2F314, 0, 2, 0);
	add_func    (0X2F334,0X2F354);
	set_func_flags(0X2F334,0x4412);
	set_frame_size(0X2F334, 0, 2, 0);
	add_func    (0X2F35C,0X2F377);
	set_func_flags(0X2F35C,0x402);
	set_frame_size(0X2F35C, 0X10, 0, 0);
	add_func    (0X2F377,0X2F3BC);
	set_func_flags(0X2F377,0x4412);
	set_frame_size(0X2F377, 0, 2, 0);
	add_func    (0X2F3BC,0X2F3DA);
	set_func_flags(0X2F3BC,0x4402);
	add_func    (0X2F3DA,0X2F424);
	set_func_flags(0X2F3DA,0x412);
	set_frame_size(0X2F3DA, 0X7D4, 2, 0);
	add_func    (0X2F424,0X2F436);
	set_func_flags(0X2F424,0x412);
	set_frame_size(0X2F424, 0X7D4, 2, 0);
	add_func    (0X2F436,0X2F448);
	set_func_flags(0X2F436,0x412);
	set_frame_size(0X2F436, 0X7D4, 2, 0);
	add_func    (0X2FDDE,0X2FE1C);
	set_func_flags(0X2FDDE,0x4412);
	set_frame_size(0X2FDDE, 0X1C, 2, 0);
	add_func    (0X2FE1C,0X2FE59);
	set_func_flags(0X2FE1C,0x4412);
	set_frame_size(0X2FE1C, 0, 2, 0);
	add_func    (0X2FE59,0X2FE74);
	set_func_flags(0X2FE59,0x4402);
	set_frame_size(0X2FE59, 0X2, 0, 0);
	add_func    (0X2FE74,0X2FE81);
	set_func_flags(0X2FE74,0x401);
	add_func    (0X2FE82,0X2FE93);
	set_func_flags(0X2FE82,0x4412);
	set_frame_size(0X2FE82, 0X6, 2, 0);
	add_func    (0X2FE94,0X2FEA4);
	set_func_flags(0X2FE94,0x4412);
	set_frame_size(0X2FE94, 0X6, 2, 0);
	add_func    (0X2FEA5,0X2FEB3);
	set_func_flags(0X2FEA5,0x410);
	set_frame_size(0X2FEA5, 0X6, 2, 0);
	add_func    (0X2FF26,0X2FF37);
	set_func_flags(0X2FF26,0x4412);
	set_frame_size(0X2FF26, 0X8, 2, 0);
	add_func    (0X2FF38,0X2FF48);
	set_func_flags(0X2FF38,0x4412);
	set_frame_size(0X2FF38, 0X8, 2, 0);
	add_func    (0X2FF49,0X2FF57);
	set_func_flags(0X2FF49,0x410);
	set_frame_size(0X2FF49, 0X8, 2, 0);
	add_func    (0X2FFD4,0X3002E);
	set_func_flags(0X2FFD4,0x4412);
	set_frame_size(0X2FFD4, 0, 2, 0);
	add_func    (0X3002E,0X30043);
	set_func_flags(0X3002E,0x4412);
	set_frame_size(0X3002E, 0, 2, 0);
	add_func    (0X30044,0X3005E);
	set_func_flags(0X30044,0x4412);
	set_frame_size(0X30044, 0, 2, 0);
	add_func    (0X3005E,0X300B5);
	set_func_flags(0X3005E,0x4402);
	set_frame_size(0X3005E, 0X2, 0, 0);
	add_func    (0X300B6,0X30120);
	set_func_flags(0X300B6,0x4412);
	set_frame_size(0X300B6, 0, 2, 0);
	add_func    (0X30120,0X30180);
	set_func_flags(0X30120,0x4402);
	set_frame_size(0X30120, 0X2, 0, 0);
	add_func    (0X30180,0X3019F);
	set_func_flags(0X30180,0x4412);
	set_frame_size(0X30180, 0, 2, 0);
	add_func    (0X301A0,0X30268);
	set_func_flags(0X301A0,0x4402);
	set_frame_size(0X301A0, 0X2, 0, 0);
	add_func    (0X30268,0X302AA);
	set_func_flags(0X30268,0x4402);
	add_func    (0X302AA,0X302DE);
	set_func_flags(0X302AA,0x4412);
	set_frame_size(0X302AA, 0, 2, 0);
	add_func    (0X302DE,0X3031D);
	set_func_flags(0X302DE,0x4412);
	set_frame_size(0X302DE, 0, 2, 0);
	add_func    (0X3031D,0X30329);
	set_func_flags(0X3031D,0x4402);
	add_func    (0X30329,0X303BA);
	set_func_flags(0X30329,0x402);
	set_frame_size(0X30329, 0X12, 0, 0);
	add_func    (0X303BA,0X303D7);
	set_func_flags(0X303BA,0x4400);
	add_func    (0X303D8,0X30404);
	set_func_flags(0X303D8,0x4402);
	add_func    (0X30404,0X3045E);
	set_func_flags(0X30404,0x4412);
	set_frame_size(0X30404, 0, 2, 0);
	add_func    (0X3045E,0X304AF);
	set_func_flags(0X3045E,0x4412);
	set_frame_size(0X3045E, 0, 2, 0);
	add_func    (0X304AF,0X304B6);
	set_func_flags(0X304AF,0x4412);
	set_frame_size(0X304AF, 0, 2, 0);
	add_func    (0X304B6,0X30519);
	set_func_flags(0X304B6,0x4402);
	add_func    (0X30519,0X30538);
	set_func_flags(0X30519,0x4402);
	add_func    (0X30538,0X305C8);
	set_func_flags(0X30538,0x4402);
	add_func    (0X305C8,0X305FC);
	set_func_flags(0X305C8,0x4402);
	add_func    (0X305FC,0X307B4);
	set_func_flags(0X305FC,0x4402);
	add_func    (0X307B4,0X307D2);
	set_func_flags(0X307B4,0x4402);
	add_func    (0X307D2,0X307E3);
	set_func_flags(0X307D2,0x4412);
	set_frame_size(0X307D2, 0, 2, 0);
	add_func    (0X307E3,0X307FA);
	set_func_flags(0X307E3,0x4402);
	add_func    (0X307FA,0X30811);
	set_func_flags(0X307FA,0x4402);
	add_func    (0X30812,0X30883);
	set_func_flags(0X30812,0x4402);
	set_frame_size(0X30812, 0X2, 0, 0);
	add_func    (0X30883,0X308C6);
	set_func_flags(0X30883,0x4402);
	add_func    (0X308C6,0X309A5);
	set_func_flags(0X308C6,0x402);
	add_func    (0X309A5,0X30A0D);
	set_func_flags(0X309A5,0x4402);
	set_frame_size(0X309A5, 0X2, 0, 0X2);
	add_func    (0X30A0D,0X30A1B);
	set_func_flags(0X30A0D,0x4412);
	set_frame_size(0X30A0D, 0, 2, 0);
	add_func    (0X30A1C,0X30A21);
	set_func_flags(0X30A1C,0x4402);
	add_func    (0X30A21,0X30A35);
	set_func_flags(0X30A21,0x4402);
	add_func    (0X30A35,0X30A44);
	set_func_flags(0X30A35,0x4402);
	add_func    (0X30A44,0X30A55);
	set_func_flags(0X30A44,0x4412);
	set_frame_size(0X30A44, 0, 2, 0);
	add_func    (0X30A55,0X30A5D);
	set_func_flags(0X30A55,0x4402);
	add_func    (0X30A5D,0X30A68);
	set_func_flags(0X30A5D,0x4402);
	add_func    (0X30A68,0X30A77);
	set_func_flags(0X30A68,0x4402);
	add_func    (0X30A77,0X30A97);
	set_func_flags(0X30A77,0x4402);
	add_func    (0X30A97,0X30ACF);
	set_func_flags(0X30A97,0x4412);
	set_frame_size(0X30A97, 0X4, 2, 0);
	add_func    (0X30AD0,0X30ADF);
	set_func_flags(0X30AD0,0x412);
	set_frame_size(0X30AD0, 0X8, 2, 0);
	add_func    (0X30AE0,0X30AEE);
	set_func_flags(0X30AE0,0x412);
	set_frame_size(0X30AE0, 0X8, 2, 0);
	add_func    (0X30AEF,0X30B62);
	set_func_flags(0X30AEF,0x4412);
	set_frame_size(0X30AEF, 0X8, 2, 0);
	set_name(0X30B15, "readloop", SN_LOCAL);
	set_name(0X30B43, "error", SN_LOCAL);
	set_name(0X30B52, "fatal", SN_LOCAL);
	add_func    (0X30B62,0X30BF8);
	set_func_flags(0X30B62,0x4412);
	set_frame_size(0X30B62, 0X1A, 2, 0);
	set_name(0X30BC9, "no_remainder", SN_LOCAL);
	set_name(0X30BE6, "skip_seq_pass", SN_LOCAL);
	add_func    (0X30BF8,0X30CCF);
	set_func_flags(0X30BF8,0x4400);
	add_func    (0X30CCF,0X30D79);
	set_func_flags(0X30CCF,0x4400);
	set_name(0X30CD6, "has_codes", SN_LOCAL);
	add_func    (0X30D79,0X30D87);
	set_func_flags(0X30D79,0x412);
	set_frame_size(0X30D79, 0X2, 2, 0);
	add_func    (0X30D88,0X30DE6);
	set_func_flags(0X30D88,0x4412);
	set_frame_size(0X30D88, 0X2, 2, 0);
	set_name(0X30DE2, "emptyfile", SN_LOCAL);
	add_func    (0X30DE6,0X30DF6);
	set_func_flags(0X30DE6,0x412);
	set_frame_size(0X30DE6, 0X10, 2, 0);
	add_func    (0X30DF7,0X30E06);
	set_func_flags(0X30DF7,0x412);
	set_frame_size(0X30DF7, 0X10, 2, 0);
	add_func    (0X30E07,0X30F92);
	set_func_flags(0X30E07,0x4412);
	set_frame_size(0X30E07, 0X10, 2, 0);
	set_name(0X30E2C, "fd_not_found", SN_LOCAL);
	set_name(0X30E9E, "decompress_subfile", SN_LOCAL);
	set_name(0X30F04, "compression_type", SN_LOCAL);
	set_name(0X30F2F, "fd_done", SN_LOCAL);
	add_func    (0X30F92,0X30F9C);
	set_func_flags(0X30F92,0x412);
	set_frame_size(0X30F92, 0, 2, 0);
	add_func    (0X30F9D,0X30FA8);
	set_func_flags(0X30F9D,0x412);
	set_frame_size(0X30F9D, 0, 2, 0);
	add_func    (0X30FA9,0X3107A);
	set_func_flags(0X30FA9,0x4412);
	set_frame_size(0X30FA9, 0, 2, 0);
	set_name(0X30FFF, "_end_of_locate", SN_LOCAL);
	set_name(0X3102D, "_found_resource", SN_LOCAL);
	add_func    (0X3107A,0X310F1);
	set_func_flags(0X3107A,0x4412);
	set_frame_size(0X3107A, 0X4, 2, 0);
	add_func    (0X310F1,0X310FE);
	set_func_flags(0X310F1,0x4402);
	add_func    (0X310FE,0X3111D);
	set_func_flags(0X310FE,0x4412);
	set_frame_size(0X310FE, 0, 2, 0);
	add_func    (0X3111D,0X31157);
	set_func_flags(0X3111D,0x4412);
	set_frame_size(0X3111D, 0X4, 2, 0);
	add_func    (0X31157,0X31169);
	set_func_flags(0X31157,0x4402);
	add_func    (0X31169,0X3117B);
	set_func_flags(0X31169,0x4402);
	add_func    (0X3117B,0X3118D);
	set_func_flags(0X3117B,0x4402);
	add_func    (0X3118D,0X311D5);
	set_func_flags(0X3118D,0x4412);
	set_frame_size(0X3118D, 0, 2, 0);
	add_func    (0X311D5,0X31228);
	set_func_flags(0X311D5,0x4412);
	set_frame_size(0X311D5, 0, 2, 0);
	add_func    (0X31228,0X31248);
	set_func_flags(0X31228,0x4412);
	set_frame_size(0X31228, 0X2, 2, 0);
	add_func    (0X31248,0X312FD);
	set_func_flags(0X31248,0x4412);
	set_frame_size(0X31248, 0X4, 2, 0);
	add_func    (0X312FD,0X3136A);
	set_func_flags(0X312FD,0x4402);
	set_frame_size(0X312FD, 0X4, 0, 0);
	add_func    (0X3136A,0X31429);
	set_func_flags(0X3136A,0x4412);
	set_frame_size(0X3136A, 0X4, 2, 0);
	add_func    (0X31429,0X3147C);
	set_func_flags(0X31429,0x4412);
	set_frame_size(0X31429, 0X4, 2, 0);
	add_func    (0X3147C,0X31525);
	set_func_flags(0X3147C,0x4412);
	set_frame_size(0X3147C, 0X4, 2, 0);
	add_func    (0X31525,0X31641);
	set_func_flags(0X31525,0x4412);
	set_frame_size(0X31525, 0XA, 2, 0);
	add_func    (0X31641,0X3167C);
	set_func_flags(0X31641,0x4412);
	set_frame_size(0X31641, 0X4, 2, 0);
	add_func    (0X3167C,0X316A2);
	set_func_flags(0X3167C,0x4412);
	set_frame_size(0X3167C, 0X4, 2, 0);
	add_func    (0X316A2,0X31732);
	set_func_flags(0X316A2,0x4412);
	set_frame_size(0X316A2, 0X4, 2, 0);
	add_func    (0X31732,0X317B1);
	set_func_flags(0X31732,0x4412);
	set_frame_size(0X31732, 0X4, 2, 0);
	add_func    (0X317B2,0X317C1);
	set_func_flags(0X317B2,0x412);
	set_frame_size(0X317B2, 0X7D4, 2, 0);
	add_func    (0X317C1,0X317DF);
	set_func_flags(0X317C1,0x412);
	set_frame_size(0X317C1, 0X7D4, 2, 0);
	add_func    (0X317DF,0X317EE);
	set_func_flags(0X317DF,0x412);
	set_frame_size(0X317DF, 0X7D4, 2, 0);
	add_func    (0X317EE,0X319CD);
	set_func_flags(0X317EE,0x4412);
	set_frame_size(0X317EE, 0X7D4, 2, 0);
	add_func    (0X319CD,0X31A67);
	set_func_flags(0X319CD,0x400);
	set_frame_size(0X319CD, 0X18, 2, 0);
	add_func    (0X31A67,0X31B5E);
	set_func_flags(0X31A67,0x4400);
	set_frame_size(0X31A67, 0X18, 0, 0);
	add_func    (0X31B5E,0X31F39);
	set_func_flags(0X31B5E,0x4400);
	set_frame_size(0X31B5E, 0X18, 0, 0);
	add_func    (0X31F39,0X31F54);
	set_func_flags(0X31F39,0x4412);
	set_frame_size(0X31F39, 0X7D4, 2, 0);
	add_func    (0X31F55,0X31F6E);
	set_func_flags(0X31F55,0x410);
	set_frame_size(0X31F55, 0X7D4, 2, 0);
	add_func    (0X3215A,0X3216C);
	set_func_flags(0X3215A,0x4402);
	set_frame_size(0X3215A, 0X2, 0, 0);
	add_func    (0X3216C,0X3219D);
	set_func_flags(0X3216C,0x4402);
	set_frame_size(0X3216C, 0X4, 0, 0);
	add_func    (0X3219D,0X322B4);
	set_func_flags(0X3219D,0x4402);
	add_func    (0X322B4,0X322BF);
	set_func_flags(0X322B4,0x4412);
	set_frame_size(0X322B4, 0, 2, 0);
	add_func    (0X322C0,0X322DF);
	set_func_flags(0X322C0,0x4412);
	set_frame_size(0X322C0, 0, 2, 0);
	add_func    (0X322DF,0X322F2);
	set_func_flags(0X322DF,0x4412);
	set_frame_size(0X322DF, 0X4, 2, 0);
	add_func    (0X322F3,0X323D9);
	set_func_flags(0X322F3,0x4412);
	set_frame_size(0X322F3, 0X4, 2, 0);
	add_func    (0X323D9,0X324AA);
	set_func_flags(0X323D9,0x4412);
	set_frame_size(0X323D9, 0X8000, 2, 0);
	add_func    (0X324AA,0X324FA);
	set_func_flags(0X324AA,0x4412);
	set_frame_size(0X324AA, 0, 2, 0);
	add_func    (0X324FA,0X3250A);
	set_func_flags(0X324FA,0x4412);
	set_frame_size(0X324FA, 0X6, 2, 0);
	add_func    (0X3250B,0X325AE);
	set_func_flags(0X3250B,0x4412);
	set_frame_size(0X3250B, 0X6, 2, 0);
	add_func    (0X325AE,0X325D6);
	set_func_flags(0X325AE,0x4402);
	add_func    (0X325D6,0X3260E);
	set_func_flags(0X325D6,0x4402);
	add_func    (0X3260E,0X3262E);
	set_func_flags(0X3260E,0x4412);
	set_frame_size(0X3260E, 0, 2, 0);
	add_func    (0X3262E,0X3264A);
	set_func_flags(0X3262E,0x4412);
	set_frame_size(0X3262E, 0, 2, 0);
	add_func    (0X3264A,0X3265B);
	set_func_flags(0X3264A,0x4412);
	set_frame_size(0X3264A, 0X2, 2, 0);
	add_func    (0X3265B,0X326BA);
	set_func_flags(0X3265B,0x4412);
	set_frame_size(0X3265B, 0X2, 2, 0);
	add_func    (0X326BA,0X326DE);
	set_func_flags(0X326BA,0x4412);
	set_frame_size(0X326BA, 0X2, 2, 0);
	add_func    (0X326DE,0X3272C);
	set_func_flags(0X326DE,0x4412);
	set_frame_size(0X326DE, 0, 2, 0);
	add_func    (0X3272C,0X32737);
	set_func_flags(0X3272C,0x4412);
	set_frame_size(0X3272C, 0, 2, 0);
	add_func    (0X32738,0X32746);
	set_func_flags(0X32738,0x4412);
	set_frame_size(0X32738, 0, 2, 0);
	add_func    (0X32746,0X32751);
	set_func_flags(0X32746,0x4412);
	set_frame_size(0X32746, 0, 2, 0);
	add_func    (0X32751,0X3275C);
	set_func_flags(0X32751,0x4412);
	set_frame_size(0X32751, 0, 2, 0);
	add_func    (0X3275C,0X3276A);
	set_func_flags(0X3275C,0x4412);
	set_frame_size(0X3275C, 0, 2, 0);
	add_func    (0X3276A,0X32778);
	set_func_flags(0X3276A,0x4412);
	set_frame_size(0X3276A, 0, 2, 0);
	add_func    (0X32778,0X32782);
	set_func_flags(0X32778,0x4402);
	add_func    (0X32782,0X3279A);
	set_func_flags(0X32782,0x4412);
	set_frame_size(0X32782, 0, 2, 0);
	add_func    (0X3279A,0X327B7);
	set_func_flags(0X3279A,0x4402);
	add_func    (0X327B7,0X327C0);
	set_func_flags(0X327B7,0x4402);
	add_func    (0X327C0,0X327D7);
	set_func_flags(0X327C0,0x4412);
	set_func_cmt(0X327C0,	"Stores a copy of the timer counter with the given ticks added.", 1);
	set_frame_size(0X327C0, 0, 2, 0);
	add_func    (0X327D7,0X327EB);
	set_func_flags(0X327D7,0x4402);
	add_func    (0X327EB,0X32805);
	set_func_flags(0X327EB,0x4402);
	add_func    (0X32805,0X32831);
	set_func_flags(0X32805,0x4412);
	set_frame_size(0X32805, 0X4, 2, 0);
	add_func    (0X32832,0X32842);
	set_func_flags(0X32832,0x412);
	set_frame_size(0X32832, 0X4, 2, 0);
	add_func    (0X32843,0X32886);
	set_func_flags(0X32843,0x4412);
	set_frame_size(0X32843, 0X4, 2, 0);
	add_func    (0X32886,0X328C9);
	set_func_flags(0X32886,0x4412);
	set_frame_size(0X32886, 0X7D4, 2, 0);
	add_func    (0X328C9,0X328DB);
	set_func_flags(0X328C9,0x4412);
	set_frame_size(0X328C9, 0X7D4, 2, 0);
	add_func    (0X328DB,0X328ED);
	set_func_flags(0X328DB,0x4412);
	set_frame_size(0X328DB, 0X7D4, 2, 0);
	add_func    (0X328EE,0X329F2);
	set_func_flags(0X328EE,0x4412);
	set_frame_size(0X328EE, 0X4, 2, 0);
	add_func    (0X329F2,0X32A72);
	set_func_flags(0X329F2,0x4412);
	set_frame_size(0X329F2, 0X4, 2, 0);
	add_func    (0X32A72,0X32ADB);
	set_func_flags(0X32A72,0x4412);
	set_frame_size(0X32A72, 0X4, 2, 0);
	add_func    (0X32AE2,0X32C3C);
	set_func_flags(0X32AE2,0x4412);
	set_frame_size(0X32AE2, 0XE, 2, 0);
	add_func    (0X32D7C,0X32FED);
	set_func_flags(0X32D7C,0x4412);
	set_frame_size(0X32D7C, 0X210, 2, 0);
	set_name(0X32DC1, "gen_esc", SN_LOCAL);
	set_name(0X32E35, "pad_lens", SN_LOCAL);
	set_name(0X32EB5, "len_gt_8bit", SN_LOCAL);
	add_func    (0X32FEE,0X32FFC);
	set_func_flags(0X32FEE,0x4402);
	add_func    (0X32FFC,0X33005);
	set_func_flags(0X32FFC,0x4402);
	add_func    (0X33006,0X33013);
	set_func_flags(0X33006,0x4412);
	set_frame_size(0X33006, 0X8, 2, 0);
	add_func    (0X33014,0X33069);
	set_func_flags(0X33014,0x4412);
	set_frame_size(0X33014, 0X8, 2, 0);
	add_func    (0X33072,0X3320E);
	set_func_flags(0X33072,0x4412);
	set_frame_size(0X33072, 0X79E, 2, 0);
	add_func    (0X3320E,0X3327F);
	set_func_flags(0X3320E,0x4412);
	set_frame_size(0X3320E, 0, 2, 0);
	add_func    (0X3327F,0X332A8);
	set_func_flags(0X3327F,0x4412);
	set_frame_size(0X3327F, 0, 2, 0);
	add_func    (0X332A8,0X332BF);
	set_func_flags(0X332A8,0x4412);
	set_frame_size(0X332A8, 0X2, 2, 0);
	add_func    (0X332C0,0X3332F);
	set_func_flags(0X332C0,0x4412);
	set_frame_size(0X332C0, 0X4, 2, 0);
	add_func    (0X33330,0X33343);
	set_func_flags(0X33330,0x4412);
	set_frame_size(0X33330, 0X4, 2, 0);
	add_func    (0X33344,0X333C0);
	set_func_flags(0X33344,0x4412);
	set_frame_size(0X33344, 0X4, 2, 0);
	add_func    (0X333C0,0X33578);
	set_func_flags(0X333C0,0x4412);
	set_frame_size(0X333C0, 0X12, 2, 0);
	add_func    (0X33578,0X335D1);
	set_func_flags(0X33578,0x412);
	set_frame_size(0X33578, 0X4, 2, 0);
	add_func    (0X335D2,0X33645);
	set_func_flags(0X335D2,0x4412);
	set_frame_size(0X335D2, 0X4, 2, 0);
	add_func    (0X3367A,0X33742);
	set_func_flags(0X3367A,0x4412);
	set_frame_size(0X3367A, 0X16, 2, 0);
	add_func    (0X33742,0X33816);
	set_func_flags(0X33742,0x4412);
	set_frame_size(0X33742, 0X4, 2, 0);
	add_func    (0X33816,0X33848);
	set_func_flags(0X33816,0x4402);
	add_func    (0X33848,0X3384D);
	set_func_flags(0X33848,0x4482);
	add_func    (0X3384D,0X33852);
	set_func_flags(0X3384D,0x4482);
	add_func    (0X33852,0X33857);
	set_func_flags(0X33852,0x4482);
	add_func    (0X33857,0X3385C);
	set_func_flags(0X33857,0x4482);
	add_func    (0X3385C,0X33861);
	set_func_flags(0X3385C,0x4482);
	add_func    (0X33861,0X33866);
	set_func_flags(0X33861,0x4482);
	add_func    (0X33866,0X3386B);
	set_func_flags(0X33866,0x4482);
	add_func    (0X3386C,0X3388F);
	set_func_flags(0X3386C,0x412);
	set_frame_size(0X3386C, 0XE, 2, 0);
	add_func    (0X33890,0X339F9);
	set_func_flags(0X33890,0x4412);
	set_frame_size(0X33890, 0XE, 2, 0);
	add_func    (0X339FA,0X33A1D);
	set_func_flags(0X339FA,0x4412);
	set_frame_size(0X339FA, 0XA, 2, 0);
	add_func    (0X33A1E,0X33ABF);
	set_func_flags(0X33A1E,0x4412);
	set_frame_size(0X33A1E, 0XA, 2, 0);
	add_func    (0X33AC0,0X33AE3);
	set_func_flags(0X33AC0,0x4412);
	set_frame_size(0X33AC0, 0X10, 2, 0);
	add_func    (0X33AE4,0X33B01);
	set_func_flags(0X33AE4,0x4412);
	set_frame_size(0X33AE4, 0X10, 2, 0);
	add_func    (0X33B02,0X33B98);
	set_func_flags(0X33B02,0x4412);
	set_frame_size(0X33B02, 0X10, 2, 0);
	add_func    (0X33B98,0X33BBB);
	set_func_flags(0X33B98,0x4412);
	set_frame_size(0X33B98, 0XE, 2, 0);
	add_func    (0X33BBC,0X33BD9);
	set_func_flags(0X33BBC,0x412);
	set_frame_size(0X33BBC, 0XE, 2, 0);
	add_func    (0X33BDA,0X33D0C);
	set_func_flags(0X33BDA,0x4412);
	set_frame_size(0X33BDA, 0XE, 2, 0);
	define_local_var(0X33BDA, 0X33D0C, "[bp-0X4]", "shapey");
	define_local_var(0X33BDA, 0X33D0C, "[bp-0X2]", "shapex");
	add_func    (0X33D0C,0X33D2F);
	set_func_flags(0X33D0C,0x4412);
	set_frame_size(0X33D0C, 0XA, 2, 0);
	add_func    (0X33D30,0X33D4D);
	set_func_flags(0X33D30,0x412);
	set_frame_size(0X33D30, 0XA, 2, 0);
	add_func    (0X33D4E,0X33DBD);
	set_func_flags(0X33D4E,0x4412);
	set_frame_size(0X33D4E, 0XA, 2, 0);
	add_func    (0X33DBE,0X33DE1);
	set_func_flags(0X33DBE,0x4412);
	set_frame_size(0X33DBE, 0X10, 2, 0);
	add_func    (0X33DE2,0X33DFF);
	set_func_flags(0X33DE2,0x412);
	set_frame_size(0X33DE2, 0X10, 2, 0);
	add_func    (0X33E00,0X33E8F);
	set_func_flags(0X33E00,0x4412);
	set_frame_size(0X33E00, 0X10, 2, 0);
	add_func    (0X33E90,0X33EB3);
	set_func_flags(0X33E90,0x4412);
	set_frame_size(0X33E90, 0X10, 2, 0);
	add_func    (0X33EB4,0X33ED1);
	set_func_flags(0X33EB4,0x412);
	set_frame_size(0X33EB4, 0X10, 2, 0);
	add_func    (0X33ED2,0X3405F);
	set_func_flags(0X33ED2,0x4412);
	set_frame_size(0X33ED2, 0X10, 2, 0);
	add_func    (0X34060,0X34083);
	set_func_flags(0X34060,0x412);
	set_frame_size(0X34060, 0XE, 2, 0);
	add_func    (0X34084,0X341ED);
	set_func_flags(0X34084,0x4412);
	set_frame_size(0X34084, 0XE, 2, 0);
	add_func    (0X34212,0X342B3);
	set_func_flags(0X34212,0x4412);
	set_frame_size(0X34212, 0XA, 2, 0);
	add_func    (0X342F6,0X3438C);
	set_func_flags(0X342F6,0x4412);
	set_frame_size(0X342F6, 0X10, 2, 0);
	add_func    (0X343B0,0X344E3);
	set_func_flags(0X343B0,0x4412);
	set_frame_size(0X343B0, 0X10, 2, 0);
	define_local_var(0X343B0, 0X344E3, "[bp+0X6]", "shapeptr");
	add_func    (0X34526,0X34594);
	set_func_flags(0X34526,0x4412);
	set_frame_size(0X34526, 0XA, 2, 0);
	add_func    (0X345BC,0X34699);
	set_func_flags(0X345BC,0x4412);
	set_frame_size(0X345BC, 0X4, 2, 0);
	add_func    (0X346A3,0X346BB);
	set_func_flags(0X346A3,0x4412);
	set_frame_size(0X346A3, 0, 2, 0);
	add_func    (0X346BC,0X34735);
	set_func_flags(0X346BC,0x4412);
	set_frame_size(0X346BC, 0X6, 2, 0);
	add_func    (0X34736,0X34759);
	set_func_flags(0X34736,0x4412);
	set_frame_size(0X34736, 0XA, 2, 0);
	add_func    (0X3475A,0X3477D);
	set_func_flags(0X3475A,0x412);
	set_frame_size(0X3475A, 0XA, 2, 0);
	add_func    (0X3477E,0X347DC);
	set_func_flags(0X3477E,0x4412);
	set_frame_size(0X3477E, 0XA, 2, 0);
	add_func    (0X347DC,0X34940);
	set_func_flags(0X347DC,0x4412);
	set_frame_size(0X347DC, 0X16, 2, 0);
	add_func    (0X34B0C,0X34B27);
	set_func_flags(0X34B0C,0x4412);
	set_frame_size(0X34B0C, 0, 2, 0);
	add_func    (0X34B7C,0X34B87);
	set_func_flags(0X34B7C,0x4412);
	set_frame_size(0X34B7C, 0, 2, 0);
	add_func    (0X34B96,0X34C0B);
	set_func_flags(0X34B96,0x4412);
	set_frame_size(0X34B96, 0X4, 2, 0);
	add_func    (0X34C0C,0X34CE3);
	set_func_flags(0X34C0C,0x4412);
	set_frame_size(0X34C0C, 0X8, 2, 0);
	add_func    (0X35AF6,0X35B14);
	set_func_flags(0X35AF6,0x4412);
	set_frame_size(0X35AF6, 0, 2, 0);
	add_func    (0X35B14,0X35B25);
	set_func_flags(0X35B14,0x4402);
	add_func    (0X35B26,0X35B75);
	set_func_flags(0X35B26,0x4412);
	set_frame_size(0X35B26, 0X4, 2, 0);
	add_func    (0X35B76,0X35C4D);
	set_func_flags(0X35B76,0x4412);
	set_frame_size(0X35B76, 0X4, 2, 0);
	add_func    (0X35C4E,0X35CC8);
	set_func_flags(0X35C4E,0x4412);
	set_frame_size(0X35C4E, 0X14, 2, 0);
	add_func    (0X35DC8,0X35DE6);
	set_func_flags(0X35DC8,0x4412);
	set_frame_size(0X35DC8, 0, 2, 0);
	add_func    (0X35DE6,0X35E08);
	set_func_flags(0X35DE6,0x4412);
	set_frame_size(0X35DE6, 0, 2, 0);
	add_func    (0X35E08,0X35ED9);
	set_func_flags(0X35E08,0x4412);
	set_frame_size(0X35E08, 0X16, 2, 0);
	add_func    (0X35F48,0X35FA1);
	set_func_flags(0X35F48,0x4412);
	set_frame_size(0X35F48, 0X8, 2, 0);
	define_local_var(0X35F48, 0X35FA1, "[bp-0X4]", "shapecounter");
	add_func    (0X35FA2,0X360F5);
	set_func_flags(0X35FA2,0x4412);
	set_frame_size(0X35FA2, 0X14, 2, 0);
	add_func    (0X360F6,0X361BC);
	set_func_flags(0X360F6,0x4412);
	set_frame_size(0X360F6, 0X14, 2, 0);
	add_func    (0X361BC,0X36245);
	set_func_flags(0X361BC,0x4412);
	set_frame_size(0X361BC, 0X4, 2, 0);
	add_func    (0X36246,0X36412);
	set_func_flags(0X36246,0x4412);
	set_frame_size(0X36246, 0XE, 2, 0);
	add_func    (0X36412,0X367B1);
	set_func_flags(0X36412,0x4412);
	set_frame_size(0X36412, 0X1E, 2, 0);
	add_func    (0X367B2,0X367E3);
	set_func_flags(0X367B2,0x4412);
	set_frame_size(0X367B2, 0, 2, 0);
	add_func    (0X367E4,0X36826);
	set_func_flags(0X367E4,0x4412);
	set_frame_size(0X367E4, 0X4, 2, 0);
	add_func    (0X36826,0X36868);
	set_func_flags(0X36826,0x4452);
	set_frame_size(0X36826, 0X4, 2, 0);
	add_func    (0X36868,0X368AA);
	set_func_flags(0X36868,0x4412);
	set_frame_size(0X36868, 0X4, 2, 0);
	add_func    (0X368AA,0X368D2);
	set_func_flags(0X368AA,0x4412);
	set_frame_size(0X368AA, 0, 2, 0);
	add_func    (0X368D2,0X3695C);
	set_func_flags(0X368D2,0x4412);
	set_frame_size(0X368D2, 0X2, 2, 0);
	add_func    (0X3695C,0X369AF);
	set_func_flags(0X3695C,0x4412);
	set_frame_size(0X3695C, 0, 2, 0);
	add_func    (0X36A2C,0X36A60);
	set_func_flags(0X36A2C,0x4412);
	set_frame_size(0X36A2C, 0, 2, 0);
	add_func    (0X36A60,0X36A9A);
	set_func_flags(0X36A60,0x4412);
	set_frame_size(0X36A60, 0, 2, 0);
	add_func    (0X36A9A,0X36ACA);
	set_func_flags(0X36A9A,0x4412);
	set_frame_size(0X36A9A, 0, 2, 0);
	add_func    (0X36ACA,0X36AF2);
	set_func_flags(0X36ACA,0x4412);
	set_frame_size(0X36ACA, 0, 2, 0);
	add_func    (0X36AF4,0X36B05);
	set_func_flags(0X36AF4,0x4402);
	add_func    (0X36B05,0X36B16);
	set_func_flags(0X36B05,0x4402);
	add_func    (0X36B16,0X36BBD);
	set_func_flags(0X36B16,0x4412);
	set_frame_size(0X36B16, 0XE, 2, 0);
	add_func    (0X36BBE,0X36BE8);
	set_func_flags(0X36BBE,0x4412);
	set_frame_size(0X36BBE, 0X80, 2, 0);
	add_func    (0X36BE8,0X36C7E);
	set_func_flags(0X36BE8,0x4412);
	set_frame_size(0X36BE8, 0XC, 2, 0);
	add_func    (0X36C7E,0X36EC0);
	set_func_flags(0X36C7E,0x4412);
	set_frame_size(0X36C7E, 0X11C, 2, 0);
	add_func    (0X36EC0,0X36F29);
	set_func_flags(0X36EC0,0x4412);
	set_frame_size(0X36EC0, 0XC, 2, 0);
	add_func    (0X36F2A,0X36F80);
	set_func_flags(0X36F2A,0x4412);
	set_frame_size(0X36F2A, 0X4, 2, 0);
	add_func    (0X36F80,0X36FD8);
	set_func_flags(0X36F80,0x4412);
	set_frame_size(0X36F80, 0X4, 2, 0);
	add_func    (0X36FD8,0X3702D);
	set_func_flags(0X36FD8,0x4412);
	set_frame_size(0X36FD8, 0X4, 2, 0);
	add_func    (0X3702E,0X370BA);
	set_func_flags(0X3702E,0x4412);
	set_frame_size(0X3702E, 0X6, 2, 0);
	add_func    (0X370BA,0X370D2);
	set_func_flags(0X370BA,0x4412);
	set_frame_size(0X370BA, 0, 2, 0);
	add_func    (0X370D2,0X3717C);
	set_func_flags(0X370D2,0x4412);
	set_frame_size(0X370D2, 0XC, 2, 0);
	add_func    (0X3717C,0X37214);
	set_func_flags(0X3717C,0x4412);
	set_frame_size(0X3717C, 0X8, 2, 0);
	add_func    (0X37216,0X372F3);
	set_func_flags(0X37216,0x4412);
	set_frame_size(0X37216, 0X10, 2, 0);
	add_func    (0X372F4,0X3736A);
	set_func_flags(0X372F4,0x4412);
	set_frame_size(0X372F4, 0X8, 2, 0);
	add_func    (0X3736A,0X373B1);
	set_func_flags(0X3736A,0x4402);
	add_func    (0X373B2,0X373B8);
	set_func_flags(0X373B2,0x4402);
	add_func    (0X373B8,0X373E8);
	set_func_flags(0X373B8,0x4402);
	add_func    (0X373E8,0X373FE);
	set_func_flags(0X373E8,0x4402);
	add_func    (0X373FE,0X37455);
	set_func_flags(0X373FE,0x4412);
	set_frame_size(0X373FE, 0XA, 2, 0);
	add_func    (0X37456,0X37470);
	set_func_flags(0X37456,0x4412);
	set_frame_size(0X37456, 0, 2, 0);
	add_func    (0X37470,0X374DD);
	set_func_flags(0X37470,0x4412);
	set_frame_size(0X37470, 0X8, 2, 0);
	add_func    (0X374DE,0X374F9);
	set_func_flags(0X374DE,0x4412);
	set_frame_size(0X374DE, 0, 2, 0);
	add_func    (0X374FA,0X37519);
	set_func_flags(0X374FA,0x4412);
	set_frame_size(0X374FA, 0, 2, 0);
	add_func    (0X3751A,0X37649);
	set_func_flags(0X3751A,0x4412);
	set_frame_size(0X3751A, 0XC, 2, 0);
	add_func    (0X3764A,0X37696);
	set_func_flags(0X3764A,0x4412);
	set_frame_size(0X3764A, 0, 2, 0);
	add_func    (0X37696,0X376CA);
	set_func_flags(0X37696,0x4412);
	set_frame_size(0X37696, 0X4, 2, 0);
	add_func    (0X376CA,0X37708);
	set_func_flags(0X376CA,0x4412);
	set_frame_size(0X376CA, 0X8, 2, 0);
	add_func    (0X37708,0X3771E);
	set_func_flags(0X37708,0x4402);
	add_func    (0X3771E,0X37750);
	set_func_flags(0X3771E,0x4412);
	set_frame_size(0X3771E, 0, 2, 0);
	add_func    (0X37750,0X3776B);
	set_func_flags(0X37750,0x4412);
	set_frame_size(0X37750, 0, 2, 0);
	add_func    (0X3776C,0X37867);
	set_func_flags(0X3776C,0x4412);
	set_frame_size(0X3776C, 0XC, 2, 0);
	add_func    (0X37868,0X37898);
	set_func_flags(0X37868,0x4412);
	set_frame_size(0X37868, 0X6, 2, 0);
	add_func    (0X37898,0X378AD);
	set_func_flags(0X37898,0x4412);
	set_frame_size(0X37898, 0, 2, 0);
	add_func    (0X378AE,0X378BC);
	set_func_flags(0X378AE,0x4412);
	set_frame_size(0X378AE, 0, 2, 0);
	add_func    (0X378BC,0X378CA);
	set_func_flags(0X378BC,0x4412);
	set_frame_size(0X378BC, 0, 2, 0);
	add_func    (0X378CA,0X37A64);
	set_func_flags(0X378CA,0x4412);
	SetType(0X378CA, "int __cdecl __far audio_load_driver(char *, int);");
	set_frame_size(0X378CA, 0X10, 2, 0);
	add_func    (0X37A64,0X37B13);
	set_func_flags(0X37A64,0x4412);
	set_frame_size(0X37A64, 0X4, 2, 0);
	add_func    (0X37B14,0X37C38);
	set_func_flags(0X37B14,0x4412);
	SetType(0X37B14, "int __cdecl __far load_sfx_ge(char *, int);");
	set_frame_size(0X37B14, 0X8, 2, 0);
	add_func    (0X37C38,0X37C43);
	set_func_flags(0X37C38,0x4412);
	set_frame_size(0X37C38, 0, 2, 0);
	add_func    (0X37C44,0X37CB9);
	set_func_flags(0X37C44,0x4412);
	SetType(0X37C44, "int __cdecl __far load_sfx_file(char *);");
	set_frame_size(0X37C44, 0X4, 2, 0);
	add_func    (0X37CBA,0X37D04);
	set_func_flags(0X37CBA,0x4412);
	SetType(0X37CBA, "int __cdecl __far load_song_file(char *);");
	set_frame_size(0X37CBA, 0X4, 2, 0);
	add_func    (0X37D04,0X37D79);
	set_func_flags(0X37D04,0x4412);
	SetType(0X37D04, "int __cdecl __far load_voice_file(char *);");
	set_frame_size(0X37D04, 0X4, 2, 0);
	add_func    (0X37D7A,0X37DBC);
	set_func_flags(0X37D7A,0x4412);
	set_frame_size(0X37D7A, 0X4, 2, 0);
	add_func    (0X37DBC,0X37EC0);
	set_func_flags(0X37DBC,0x4412);
	set_frame_size(0X37DBC, 0XE, 2, 0);
	add_func    (0X37EC0,0X3803C);
	set_func_flags(0X37EC0,0x4412);
	set_frame_size(0X37EC0, 0X26, 2, 0);
	add_func    (0X3803C,0X38155);
	set_func_flags(0X3803C,0x4412);
	set_frame_size(0X3803C, 0X26, 2, 0);
	add_func    (0X38156,0X38178);
	set_func_flags(0X38156,0x4412);
	set_frame_size(0X38156, 0X2, 2, 0);
	add_func    (0X38178,0X38253);
	set_func_flags(0X38178,0x4412);
	set_frame_size(0X38178, 0X14, 2, 0);
	add_func    (0X38254,0X384FA);
	set_func_flags(0X38254,0x4412);
	set_frame_size(0X38254, 0X36, 2, 0);
	set_name(0X382DA, "_trkdata_case13", SN_LOCAL);
	set_name(0X3834E, "_parse_trackdata", SN_LOCAL);
	set_name(0X3835C, "_trkdata_case3__5_7__9_11_16_17", SN_LOCAL);
	set_name(0X38362, "_trkdata_case6_12", SN_LOCAL);
	set_name(0X38368, "_trkdata_case14_15", SN_LOCAL);
	set_name(0X3839A, "_trkdata_case0_1_2_10", SN_LOCAL);
	set_name(0X3843B, "_patch_hdrdata_trackptrs", SN_LOCAL);
	add_func    (0X384FA,0X38514);
	set_func_flags(0X384FA,0x4412);
	set_frame_size(0X384FA, 0X4, 2, 0);
	add_func    (0X38514,0X38527);
	set_func_flags(0X38514,0x4412);
	set_frame_size(0X38514, 0X2, 2, 0);
	add_func    (0X38528,0X3856F);
	set_func_flags(0X38528,0x4412);
	set_frame_size(0X38528, 0, 2, 0);
	add_func    (0X3863C,0X3868A);
	set_func_flags(0X3863C,0x4402);
	add_func    (0X3868A,0X386D5);
	set_func_flags(0X3868A,0x4412);
	set_frame_size(0X3868A, 0X2, 2, 0);
	add_func    (0X386D6,0X38701);
	set_func_flags(0X386D6,0x4412);
	set_frame_size(0X386D6, 0X2, 2, 0);
	add_func    (0X38702,0X38AA7);
	set_func_flags(0X38702,0x4412);
	set_frame_size(0X38702, 0X12, 2, 0);
	add_func    (0X38AC4,0X38AEA);
	set_func_flags(0X38AC4,0x4412);
	set_frame_size(0X38AC4, 0X2, 2, 0);
	add_func    (0X38AEA,0X38BEA);
	set_func_flags(0X38AEA,0x4412);
	set_frame_size(0X38AEA, 0X16, 2, 0);
	add_func    (0X38BEA,0X38C4C);
	set_func_flags(0X38BEA,0x4412);
	set_frame_size(0X38BEA, 0X6, 2, 0);
	add_func    (0X38C4C,0X38CF7);
	set_func_flags(0X38C4C,0x4412);
	set_frame_size(0X38C4C, 0X10, 2, 0);
	add_func    (0X38CF8,0X38DE5);
	set_func_flags(0X38CF8,0x4412);
	set_frame_size(0X38CF8, 0XE, 2, 0);
	add_func    (0X38DE6,0X39050);
	set_func_flags(0X38DE6,0x4412);
	set_frame_size(0X38DE6, 0X6CA6, 2, 0);
	add_func    (0X39050,0X39087);
	set_func_flags(0X39050,0x4412);
	set_frame_size(0X39050, 0X2, 2, 0);
	add_func    (0X39088,0X390C7);
	set_func_flags(0X39088,0x4412);
	set_frame_size(0X39088, 0X6, 2, 0);
	add_func    (0X3945A,0X3963C);
	set_func_flags(0X3945A,0x4412);
	set_frame_size(0X3945A, 0X10, 2, 0);
	add_func    (0X3963C,0X3968A);
	set_func_flags(0X3963C,0x4412);
	set_frame_size(0X3963C, 0XA, 2, 0);
	add_func    (0X3968A,0X396FF);
	set_func_flags(0X3968A,0x4412);
	set_frame_size(0X3968A, 0X4, 2, 0);
	add_func    (0X39700,0X39966);
	set_func_flags(0X39700,0x4412);
	set_frame_size(0X39700, 0XE, 2, 0);
	add_func    (0X39966,0X39AD1);
	set_func_flags(0X39966,0x4412);
	set_frame_size(0X39966, 0X1A, 2, 0);
	add_func    (0X39AD4,0X39B59);
	set_func_flags(0X39AD4,0x4412);
	set_frame_size(0X39AD4, 0X6, 2, 0);
	add_func    (0X39B5A,0X39BDC);
	set_func_flags(0X39B5A,0x4412);
	set_frame_size(0X39B5A, 0X12, 2, 0);
	add_func    (0X39BDC,0X39C84);
	set_func_flags(0X39BDC,0x4412);
	set_frame_size(0X39BDC, 0X10, 2, 0);
	add_func    (0X39C84,0X39CCA);
	set_func_flags(0X39C84,0x4412);
	set_frame_size(0X39C84, 0XA, 2, 0);
	add_func    (0X39CCE,0X39E14);
	set_func_flags(0X39CCE,0x4412);
	SetType(0X39CCE, "int __cdecl __far audio_make_filename(char *, int);");
	set_frame_size(0X39CCE, 0X6, 2, 0);
	add_func    (0X39E14,0X39E24);
	set_func_flags(0X39E14,0x4412);
	set_frame_size(0X39E14, 0, 2, 0);
	add_func    (0X39E24,0X39E4C);
	set_func_flags(0X39E24,0x4412);
	SetType(0X39E24, "int __cdecl __far file_combine_and_find(char *, int);");
	set_frame_size(0X39E24, 0X50, 2, 0);
	add_func    (0X39E4C,0X39E52);
	set_func_flags(0X39E4C,0x4402);
	add_func    (0X39E52,0X39E53);
	set_func_flags(0X39E52,0x4402);
	add_func    (0X39E54,0X39E55);
	set_func_flags(0X39E54,0x4402);
	add_func    (0X39E56,0X3A25C);
	set_func_flags(0X39E56,0x4412);
	set_frame_size(0X39E56, 0X22, 2, 0);
	add_func    (0X3A25C,0X3A2BF);
	set_func_flags(0X3A25C,0x4412);
	set_frame_size(0X3A25C, 0X8, 2, 0);
	add_func    (0X3A2C0,0X3A45C);
	set_func_flags(0X3A2C0,0x4412);
	set_frame_size(0X3A2C0, 0X314, 2, 0);
	add_func    (0X3A45C,0X3A45F);
	set_func_flags(0X3A45C,0x4402);
	add_func    (0X3A460,0X3A483);
	set_func_flags(0X3A460,0x4412);
	set_frame_size(0X3A460, 0, 2, 0);
	add_func    (0X3A484,0X3A496);
	set_func_flags(0X3A484,0x4402);
	add_func    (0X3A496,0X3A4B5);
	set_func_flags(0X3A496,0x4412);
	set_frame_size(0X3A496, 0, 2, 0);
	add_func    (0X3A4B6,0X3A7F5);
	set_func_flags(0X3A4B6,0x4412);
	SetType(0X3A4B6, "int __cdecl __far read_line(char, char *, int, int, int, int, __int32, int, int);");
	set_frame_size(0X3A4B6, 0XC, 2, 0);
	add_func    (0X3A7F6,0X3A895);
	set_func_flags(0X3A7F6,0x4412);
	set_frame_size(0X3A7F6, 0X6, 2, 0);
	add_func    (0X3A896,0X3A958);
	set_func_flags(0X3A896,0x4412);
	set_frame_size(0X3A896, 0X8, 2, 0);
	add_func    (0X3A958,0X3A9A0);
	set_func_flags(0X3A958,0x4402);
	add_func    (0X3A9A0,0X3A9D5);
	set_func_flags(0X3A9A0,0x4402);
	add_func    (0X3A9D6,0X3A9E9);
	set_func_flags(0X3A9D6,0x4412);
	set_frame_size(0X3A9D6, 0, 2, 0);
	add_func    (0X3A9EA,0X3A9FC);
	set_func_flags(0X3A9EA,0x4412);
	set_frame_size(0X3A9EA, 0, 2, 0);
	add_func    (0X3A9FC,0X3ACB0);
	set_func_flags(0X3A9FC,0x4412);
	set_frame_size(0X3A9FC, 0X82, 2, 0);
	set_name(0X3AA87, "_end_load_2dshape", SN_LOCAL);
	set_name(0X3AAA8, "_try_load_pvs", SN_LOCAL);
	set_name(0X3AB24, "_try_load_xvs", SN_LOCAL);
	set_name(0X3AB44, "_do_end_load_2dshape", SN_LOCAL);
	set_name(0X3AB50, "_try_load_pes", SN_LOCAL);
	set_name(0X3AC1C, "_try_load_esh", SN_LOCAL);
	add_func    (0X3ACB0,0X3ACD7);
	set_func_flags(0X3ACB0,0x4412);
	set_frame_size(0X3ACB0, 0X4, 2, 0);
	add_func    (0X3ACD8,0X3ACEB);
	set_func_flags(0X3ACD8,0x4412);
	set_frame_size(0X3ACD8, 0, 2, 0);
	add_func    (0X3ACEC,0X3ACFE);
	set_func_flags(0X3ACEC,0x4412);
	set_frame_size(0X3ACEC, 0, 2, 0);
	add_func    (0X3ACFE,0X3AD9C);
	set_func_flags(0X3ACFE,0x4412);
	set_frame_size(0X3ACFE, 0XA, 2, 0);
	add_func    (0X3AD9C,0X3B08B);
	set_func_flags(0X3AD9C,0x4412);
	set_frame_size(0X3AD9C, 0X3C, 2, 0);
	add_func    (0X3B08C,0X3B0BA);
	set_func_flags(0X3B08C,0x4412);
	set_frame_size(0X3B08C, 0X4, 2, 0);
	add_func    (0X3B0BA,0X3B12A);
	set_func_flags(0X3B0BA,0x4412);
	set_frame_size(0X3B0BA, 0XC, 2, 0);
	add_func    (0X3B12A,0X3B1B4);
	set_func_flags(0X3B12A,0x4412);
	set_frame_size(0X3B12A, 0XE, 2, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X10000,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10326,"es",0X3B77,3);
	split_sreg_range(0X10333,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1033A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1034A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10357,"es",0XFFFFFFFF,3);
	split_sreg_range(0X104DC,"es",0X3B77,3);
	split_sreg_range(0X104E9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X104F0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10500,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1050D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X106CF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X107C6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10D8B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10E4C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10EB0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11123,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11206,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11654,"es",0XFFFFFFFF,3);
	split_sreg_range(0X118F8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11A32,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11A68,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11AFA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11B7D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11BED,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11C54,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11EDA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X11F38,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12382,"es",0XFFFFFFFF,3);
	split_sreg_range(0X123CF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12451,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1251B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12664,"es",0XFFFFFFFF,3);
	split_sreg_range(0X126C2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12714,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12C32,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12CA0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X12CF0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13997,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1399D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13A04,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13A6B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13ACB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13B82,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13DC8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13DEF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13E43,"es",0XFFFFFFFF,3);
	split_sreg_range(0X13E73,"es",0XFFFFFFFF,3);
	split_sreg_range(0X141BE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14236,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1425D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X142B1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X142E1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14712,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14815,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14882,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1489E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X148C3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X148D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14AD2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14AEE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14C52,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14D81,"es",0XFFFFFFFF,3);
	split_sreg_range(0X14E7B,"es",0X3B77,3);
	split_sreg_range(0X14EFB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1501F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X15073,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1535E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X15722,"es",0XFFFFFFFF,3);
	split_sreg_range(0X157FE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X160C6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16188,"es",0XFFFFFFFF,3);
	split_sreg_range(0X162A9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16324,"es",0X3B77,3);
	split_sreg_range(0X16351,"es",0XFFFFFFFF,3);
	split_sreg_range(0X163D6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16662,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16686,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16A8E,"es",0X3B77,3);
	split_sreg_range(0X16B40,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16C88,"es",0X3B77,3);
	split_sreg_range(0X16F25,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16FA9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X16FD9,"es",0X3B77,3);
	split_sreg_range(0X17018,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1706D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17338,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17344,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17359,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17365,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17420,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1742C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X174D4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17508,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17676,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1768E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X176A2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X178C5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1794D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1795E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17998,"es",0XFFFFFFFF,3);
	split_sreg_range(0X179D9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17A25,"es",0XFFFFFFFF,3);
	split_sreg_range(0X17CC4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18267,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18298,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18A61,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18A6C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18A76,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18B5A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18B92,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18D6F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18D79,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18DCE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18E1D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18E3F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18E6B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18E79,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18EA2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18EB9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18F01,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18F0B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X18F2C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1903D,"es",0X3B77,3);
	split_sreg_range(0X191AB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19311,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19414,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1941C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19424,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1942E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19436,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1943F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19448,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19453,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1945C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19465,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1946E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1947B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19484,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1948D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19496,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194A3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194AC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194B5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194BE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194C9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194D2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194D9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194E3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194ED,"es",0XFFFFFFFF,3);
	split_sreg_range(0X194F7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19501,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1950B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19515,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1951F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19529,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19533,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1953D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19547,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19551,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19559,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19563,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1956D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19577,"es",0XFFFFFFFF,3);
	split_sreg_range(0X195D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19788,"es",0X3B77,3);
	split_sreg_range(0X197BE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19804,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19955,"es",0XFFFFFFFF,3);
	split_sreg_range(0X199C9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X199E1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19A00,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19CCD,"es",0X3B77,3);
	split_sreg_range(0X19D13,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19D50,"es",0X3B77,3);
	split_sreg_range(0X19D96,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19DC5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X19F12,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A003,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A04F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A084,"es",0X3B77,3);
	split_sreg_range(0X1A0AE,"es",0X3B77,3);
	split_sreg_range(0X1A0D3,"es",0X3B77,3);
	split_sreg_range(0X1A15A,"es",0X3B77,3);
	split_sreg_range(0X1A4B5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A544,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A74A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A764,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A7DE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1A7F8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1AAAB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1AC53,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1AFA6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B2FA,"es",0X3B77,3);
	split_sreg_range(0X1B398,"es",0X3B77,3);
	split_sreg_range(0X1B486,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B521,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B559,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B593,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B634,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B660,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B680,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B6A2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B6F6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1B975,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BC22,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD09,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD17,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD26,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD35,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD44,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD4F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD5A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1BD65,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1C28A,"es",0X3B77,3);
	split_sreg_range(0X1C2D0,"es",0X3B77,3);
	split_sreg_range(0X1CB94,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1CE4F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1CFA1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1CFF7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D055,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D0B8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D0D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D13F,"es",0X3B77,3);
	split_sreg_range(0X1D607,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D61C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D62C,"es",0X3B77,3);
	split_sreg_range(0X1D63F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D80E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D819,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D824,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D82F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1D916,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DAC6,"es",0X3B77,3);
	split_sreg_range(0X1DD73,"es",0X3B77,3);
	split_sreg_range(0X1DDCF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DDEB,"es",0X3B77,3);
	split_sreg_range(0X1DE05,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1DEB8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E063,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E184,"es",0X3B77,3);
	split_sreg_range(0X1E1A0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E243,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E28C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E342,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E3AA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1E3E6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1F9F3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FA3A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FA68,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FA94,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FAC2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FB00,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FB67,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FBCD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FC0B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X1FD28,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2001B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20056,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20060,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2006E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20079,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20087,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20095,"es",0XFFFFFFFF,3);
	split_sreg_range(0X200A0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X200AE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X200B7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X200C5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2021D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20224,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202AE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202E9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X202F3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20301,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2030C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2031A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20328,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20333,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20341,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2034A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20358,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20530,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20582,"es",0XFFFFFFFF,3);
	split_sreg_range(0X205E1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20633,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2066B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20729,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20770,"es",0XFFFFFFFF,3);
	split_sreg_range(0X207F2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X208A0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X208E5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X209AE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X209BF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20A40,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20AE8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20B02,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20B6C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20CED,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20D01,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20D18,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20D25,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DA0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DAB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DB7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DC2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DCC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DD8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DE3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DEF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20DFB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20E06,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20E12,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20E1E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20E2A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20FC6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20FDA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X20FF1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21004,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21017,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21032,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2117E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X211F5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2123C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21250,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21272,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21292,"es",0XFFFFFFFF,3);
	split_sreg_range(0X212E9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2133A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21358,"es",0XFFFFFFFF,3);
	split_sreg_range(0X214F4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21546,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21558,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2159A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X215B1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X215D0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X215E3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21637,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21683,"es",0XFFFFFFFF,3);
	split_sreg_range(0X216B0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X216C2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X216FA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2170D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21849,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2188A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X218EE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X218F9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21974,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2198C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2199F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21A0A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X21B79,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22894,"es",0XFFFFFFFF,3);
	split_sreg_range(0X228F1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22933,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2297C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X229FE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22C0C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22C78,"es",0X3B77,3);
	split_sreg_range(0X22CD4,"es",0X3B77,3);
	split_sreg_range(0X22CF4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22E11,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22E34,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22E57,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22E9F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22EA7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22EAF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22EB7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22ED2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22F09,"es",0XFFFFFFFF,3);
	split_sreg_range(0X22F39,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23071,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2307D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23182,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2318E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23525,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23531,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2360B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23623,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23637,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2392D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X23B3A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2455D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X24568,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2459B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X24D64,"es",0XFFFFFFFF,3);
	split_sreg_range(0X24E29,"es",0X3B77,3);
	split_sreg_range(0X24E3C,"es",0X3B77,3);
	split_sreg_range(0X24F9A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X250D7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2517A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X251DA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25237,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2526C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25286,"es",0XFFFFFFFF,3);
	split_sreg_range(0X252CF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25341,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2538C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X253EC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X254BF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X254F2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2552B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X255CF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25606,"es",0XFFFFFFFF,3);
	split_sreg_range(0X256C0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X256EF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25738,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25794,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2582F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25860,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25941,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25956,"es",0XFFFFFFFF,3);
	split_sreg_range(0X259A4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X259B9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X259CE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X259E3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A0F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A24,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A39,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A4E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A5A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25A80,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25AA8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25AC8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25AF8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25B22,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25B4C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25B76,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25BAE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25C0E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25C26,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25C84,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25CE4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25D16,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25D44,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25D4F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25D61,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25D6A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25DA3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25E08,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25E63,"es",0XFFFFFFFF,3);
	split_sreg_range(0X25F39,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26009,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2602F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X260D6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2614A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2617D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X261C6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X261E0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X266AA,"es",0X3B77,3);
	split_sreg_range(0X26728,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26771,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2679B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X267CB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2681C,"es",0X3B77,3);
	split_sreg_range(0X26896,"es",0X3B77,3);
	split_sreg_range(0X2694E,"es",0X3B77,3);
	split_sreg_range(0X26A96,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26BAD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26C0D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26C9C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26CC1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26CEC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26D19,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26D46,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26D73,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26DA0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26DCD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26DFA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26E27,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26E54,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26E8E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26E97,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26ECE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X26F2B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X271D8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X273EE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27449,"es",0XFFFFFFFF,3);
	split_sreg_range(0X274B0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27565,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27583,"es",0XFFFFFFFF,3);
	split_sreg_range(0X275A9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X275FD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27623,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27706,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27748,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2775E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X278E6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2791C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2797C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27992,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27A68,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27A98,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27AB2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27B0C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27BFD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27C3A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X27CE0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28AEF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28AFD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28DE3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28E34,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28E4F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X28E6A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X29564,"es",0XFFFFFFFF,3);
	split_sreg_range(0X29571,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2957E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X29639,"es",0XFFFFFFFF,3);
	split_sreg_range(0X29660,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2968E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2989E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A2BC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A31F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A343,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A367,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A38B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A471,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A4CA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2A89C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2AB7D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2ACAA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2ACE0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2AD0F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2AD6C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2AECD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B208,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B2F9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B30B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B32A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B44C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B457,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B481,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B4D1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B571,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B5BE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B622,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B652,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B659,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B944,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2B977,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BA20,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BA5C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BAB4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BAD8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BAFC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BB1D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BB3D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BBF7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BC65,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BD11,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BD76,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2BFDD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C104,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C157,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C1AB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C1FE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C26F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C2C2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C316,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C4B2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C550,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C592,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C5E6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C677,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C68E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C707,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C75A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C7AD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C864,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C886,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C8C6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C8FC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C929,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2C93B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CA4A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CA9F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CADA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CB06,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CB8A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CBAE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CC52,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CCCB,"es",0X3B77,3);
	split_sreg_range(0X2CD52,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CD80,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CD89,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CDA9,"es",0X3B77,3);
	split_sreg_range(0X2CF13,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CF18,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2CFDB,"es",0X3B77,3);
	split_sreg_range(0X2D0AB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2D0DA,"es",0X3B77,3);
	split_sreg_range(0X2D105,"es",0X3B77,3);
	split_sreg_range(0X2D178,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2DAB9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2DACE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2DC89,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2DCB3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2DF5C,"es",0X3B77,3);
	split_sreg_range(0X2DF9B,"es",0X3B77,3);
	split_sreg_range(0X2E087,"es",0X3B77,3);
	split_sreg_range(0X2E0B5,"es",0X3B77,3);
	split_sreg_range(0X2E28A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E2B0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E2D2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E2F1,"es",0X3B77,3);
	split_sreg_range(0X2E336,"es",0X3B77,3);
	split_sreg_range(0X2E363,"es",0X3B77,3);
	split_sreg_range(0X2E38D,"es",0X3B77,3);
	split_sreg_range(0X2E537,"es",0X3B77,3);
	split_sreg_range(0X2E61B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E7BE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E7E3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2E816,"es",0X3B77,3);
	split_sreg_range(0X2EA07,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2EA29,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2F370,"es",0XFFFFFFFF,3);
	split_sreg_range(0X2F39A,"es",0,3);
	split_sreg_range(0X2FFFD,"es",0X3B77,3);
	split_sreg_range(0X30015,"es",0X3B77,3);
	split_sreg_range(0X30069,"es",0X40,3);
	split_sreg_range(0X300A4,"es",0XB800,3);
	split_sreg_range(0X30134,"es",0X40,3);
	split_sreg_range(0X30169,"es",0XB800,3);
	split_sreg_range(0X30224,"es",0,3);
	split_sreg_range(0X3026C,"es",0,3);
	split_sreg_range(0X303B8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X303E8,"es",0X40,3);
	split_sreg_range(0X3081F,"es",0,3);
	split_sreg_range(0X30869,"es",0X3B77,3);
	split_sreg_range(0X3088F,"es",0,3);
	split_sreg_range(0X30B71,"es",0X3B77,3);
	split_sreg_range(0X30C03,"es",0XFFFFFFFF,3);
	split_sreg_range(0X30C2B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X30CCC,"es",0X7FF,3);
	split_sreg_range(0X30CDF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X30D27,"es",0X7FF,3);
	split_sreg_range(0X30FBE,"es",0X3B77,3);
	split_sreg_range(0X310B0,"es",0X4800,3);
	split_sreg_range(0X3119A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X311CE,"es",0XFFF,3);
	split_sreg_range(0X311ED,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3120E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X31821,"es",0XFFFFFFFF,3);
	split_sreg_range(0X31F86,"es",0XFFFFFFFF,3);
	split_sreg_range(0X32160,"es",0XB000,3);
	split_sreg_range(0X321CA,"es",0XB000,3);
	split_sreg_range(0X324B3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X325C1,"es",0X40,3);
	split_sreg_range(0X325DB,"es",0X40,3);
	split_sreg_range(0X325EE,"es",0X40,3);
	split_sreg_range(0X3261F,"es",0X3B77,3);
	split_sreg_range(0X3263B,"es",0X2EA2,3);
	split_sreg_range(0X32651,"es",0XFFFFFFFF,3);
	split_sreg_range(0X32662,"es",0XFFFFFFFF,3);
	split_sreg_range(0X326C1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3284E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X32B30,"es",0XFFFFFFFF,3);
	split_sreg_range(0X32C1C,"es",0X3B77,3);
	split_sreg_range(0X32DEC,"es",0X2EA2,3);
	split_sreg_range(0X32E47,"es",0XFFFFFFFF,3);
	split_sreg_range(0X32E9C,"es",0XFFF,3);
	split_sreg_range(0X32F6A,"es",0X1FFF,3);
	split_sreg_range(0X332B1,"es",0XA000,3);
	split_sreg_range(0X332CB,"es",0XA000,3);
	split_sreg_range(0X3336B,"es",0XA000,3);
	split_sreg_range(0X33400,"es",0XA000,3);
	split_sreg_range(0X335E9,"es",0XA000,3);
	split_sreg_range(0X3366E,"es",0XA000,3);
	split_sreg_range(0X3368E,"es",0XA000,3);
	split_sreg_range(0X33771,"es",0XA000,3);
	split_sreg_range(0X33820,"es",0X40,3);
	split_sreg_range(0X3397B,"es",0XA000,3);
	split_sreg_range(0X33A6C,"es",0XA000,3);
	split_sreg_range(0X33B42,"es",0XA000,3);
	split_sreg_range(0X33CA7,"es",0XA000,3);
	split_sreg_range(0X33D7E,"es",0XA000,3);
	split_sreg_range(0X33E40,"es",0XA000,3);
	split_sreg_range(0X33FC2,"es",0XA000,3);
	split_sreg_range(0X3416F,"es",0XA000,3);
	split_sreg_range(0X34260,"es",0XA000,3);
	split_sreg_range(0X34336,"es",0XA000,3);
	split_sreg_range(0X3449B,"es",0XA000,3);
	split_sreg_range(0X34568,"es",0XA000,3);
	split_sreg_range(0X345EB,"es",0XA000,3);
	split_sreg_range(0X346AA,"es",0X3B77,3);
	split_sreg_range(0X346DB,"es",0XA000,3);
	split_sreg_range(0X347B9,"es",0XFFFFFFFF,3);
	split_sreg_range(0X34B13,"es",0XFFFFFFFF,3);
	split_sreg_range(0X34B2E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X34B4D,"es",0X3B77,3);
	split_sreg_range(0X34B70,"es",0XFFFFFFFF,3);
	split_sreg_range(0X34BBD,"es",0XA000,3);
	split_sreg_range(0X35B0A,"es",0X2EA2,3);
	split_sreg_range(0X35B6B,"es",0XA000,3);
	split_sreg_range(0X35BE7,"es",0XA000,3);
	split_sreg_range(0X35C5E,"es",0XA000,3);
	split_sreg_range(0X35DDB,"es",0X2EA2,3);
	split_sreg_range(0X35DF9,"es",0X2EA2,3);
	split_sreg_range(0X35EDF,"es",0XA000,3);
	split_sreg_range(0X35F53,"es",0XFFFFFFFF,3);
	split_sreg_range(0X35F84,"es",0XFFFFFFFF,3);
	split_sreg_range(0X35FB4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36008,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36072,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3617F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X361A1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X361BC,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36245,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36412,"es",0XFFFFFFFF,3);
	split_sreg_range(0X367B1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X368AA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36AF2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36AF9,"es",0X40,3);
	split_sreg_range(0X36B0A,"es",0X40,3);
	split_sreg_range(0X36B16,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36BBD,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36BE8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36C7E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36EC0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X36F29,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3702D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X370BA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X370D2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X37119,"es",0XFFFFFFFF,3);
	split_sreg_range(0X37143,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3714B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X37198,"es",0XFFFFFFFF,3);
	split_sreg_range(0X371C8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3753D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X37615,"es",0XFFFFFFFF,3);
	split_sreg_range(0X37908,"es",0X3B77,3);
	split_sreg_range(0X37EF3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3805D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X380C0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X380EB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38132,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38141,"es",0XFFFFFFFF,3);
	split_sreg_range(0X382B6,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3836E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38442,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38503,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3851D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3852E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38537,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38540,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38549,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38552,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3855B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38564,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3856A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3863C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X388C8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38ADF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38D1F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38E10,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38F33,"es",0XFFFFFFFF,3);
	split_sreg_range(0X38F63,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39004,"es",0XFFFFFFFF,3);
	split_sreg_range(0X390F1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3922E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3936D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39483,"es",0XFFFFFFFF,3);
	split_sreg_range(0X394AA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39509,"es",0X3B77,3);
	split_sreg_range(0X3951B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3955A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X395DE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X395F7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39620,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39726,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39746,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39760,"es",0XFFFFFFFF,3);
	split_sreg_range(0X397B4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X397E7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39856,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39883,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39916,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39AD1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39AEB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39AF4,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39B04,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39B1D,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39B2E,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39B82,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39BFE,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39CA2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39CCA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X39CDB,"es",0X3B77,3);
	split_sreg_range(0X39D20,"es",0X3B77,3);
	split_sreg_range(0X39D67,"es",0X3B77,3);
	split_sreg_range(0X39D6F,"es",0X3B77,3);
	split_sreg_range(0X39D98,"es",0X3B77,3);
	split_sreg_range(0X39E14,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A308,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A351,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A4B5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A86C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A936,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A958,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A990,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3A9D5,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AC0B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3ACC2,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3ACD7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3ADE7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3ADF0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AE5B,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AE7F,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AE9A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEA3,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEAF,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEB8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEE1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEEB,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AEF1,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AF0A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AF1C,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AF22,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AF51,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AFC8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AFE7,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3AFF0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B013,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B095,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B0A8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B0BA,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B0F8,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B12A,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B170,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B1C0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B1F0,"es",0XFFFFFFFF,3);
	split_sreg_range(0X3B770,"es",0XFFFFFFFF,3);
	split_sreg_range(0X46490,"es",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X14712,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X19DC5,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X19F12,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X1E1A0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X21B79,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X24D64,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X26BAD,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X274B0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X2A2BC,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X2CC52,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X2CC62,"ss",0X4649,3);
	split_sreg_range(0X2CC81,"ss",0X3B77,3);
	split_sreg_range(0X2EA07,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X2EA29,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X361BC,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36245,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36412,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X367B1,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X368AA,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36AF2,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36B16,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36BBD,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36BE8,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36C7E,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36EC0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X36F29,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3702D,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X370BA,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X370D2,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3863C,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X39AD1,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X39CCA,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X39E14,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3A4B5,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3A958,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3A9D5,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3ACD7,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3B0BA,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3B12A,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3B1C0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3B1F0,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X3B770,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X46490,"ss",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"ds",0X3B77,3);
	split_sreg_range(0X118FB,"ds",0X3B77,3);
	split_sreg_range(0X11901,"ds",0X3B77,3);
	split_sreg_range(0X11BF0,"ds",0X3B77,3);
	split_sreg_range(0X11BF6,"ds",0X3B77,3);
	split_sreg_range(0X14712,"ds",0X3B77,3);
	split_sreg_range(0X14D84,"ds",0X3B77,3);
	split_sreg_range(0X14D8A,"ds",0X3B77,3);
	split_sreg_range(0X15801,"ds",0X3B77,3);
	split_sreg_range(0X15807,"ds",0X3B77,3);
	split_sreg_range(0X16FDC,"ds",0X3B77,3);
	split_sreg_range(0X16FE2,"ds",0X3B77,3);
	split_sreg_range(0X18E70,"ds",0X3B77,3);
	split_sreg_range(0X18EA7,"ds",0X3B77,3);
	split_sreg_range(0X18EB2,"ds",0X3B77,3);
	split_sreg_range(0X18EB6,"ds",0X3B77,3);
	split_sreg_range(0X19807,"ds",0X3B77,3);
	split_sreg_range(0X1980D,"ds",0X3B77,3);
	split_sreg_range(0X19CD0,"ds",0X3B77,3);
	split_sreg_range(0X19CD6,"ds",0X3B77,3);
	split_sreg_range(0X19D53,"ds",0X3B77,3);
	split_sreg_range(0X19D59,"ds",0X3B77,3);
	split_sreg_range(0X19DC5,"ds",0X3B77,3);
	split_sreg_range(0X19ED2,"ds",0X3B77,3);
	split_sreg_range(0X19EE6,"ds",0X3B77,3);
	split_sreg_range(0X19EFC,"ds",0X19DC,3);
	split_sreg_range(0X19F06,"ds",0X3B77,3);
	split_sreg_range(0X19F12,"ds",0X3B77,3);
	split_sreg_range(0X19F13,"ds",0X3B77,3);
	split_sreg_range(0X1E1A0,"ds",0X3B77,3);
	split_sreg_range(0X200AD,"ds",0X3B77,3);
	split_sreg_range(0X200B2,"ds",0X3B77,3);
	split_sreg_range(0X200C4,"ds",0X3B77,3);
	split_sreg_range(0X200C9,"ds",0X3B77,3);
	split_sreg_range(0X20340,"ds",0X3B77,3);
	split_sreg_range(0X20345,"ds",0X3B77,3);
	split_sreg_range(0X20357,"ds",0X3B77,3);
	split_sreg_range(0X2035C,"ds",0X3B77,3);
	split_sreg_range(0X21181,"ds",0X3B77,3);
	split_sreg_range(0X21185,"ds",0X3B77,3);
	split_sreg_range(0X214F9,"ds",0X3B77,3);
	split_sreg_range(0X21B79,"ds",0X3B77,3);
	split_sreg_range(0X22900,"ds",0X3B77,3);
	split_sreg_range(0X22906,"ds",0X3B77,3);
	split_sreg_range(0X22CD7,"ds",0X3B77,3);
	split_sreg_range(0X22CDD,"ds",0X3B77,3);
	split_sreg_range(0X24D64,"ds",0X3B77,3);
	split_sreg_range(0X2517D,"ds",0X3B77,3);
	split_sreg_range(0X25181,"ds",0X3B77,3);
	split_sreg_range(0X2538F,"ds",0X3B77,3);
	split_sreg_range(0X25393,"ds",0X3B77,3);
	split_sreg_range(0X26BAD,"ds",0X3B77,3);
	split_sreg_range(0X274B0,"ds",0X3B77,3);
	split_sreg_range(0X27626,"ds",0X3B77,3);
	split_sreg_range(0X2762C,"ds",0X3B77,3);
	split_sreg_range(0X2764E,"ds",0X3B77,3);
	split_sreg_range(0X27654,"ds",0X3B77,3);
	split_sreg_range(0X2A2BC,"ds",0X3B77,3);
	split_sreg_range(0X2CC52,"ds",0X3B77,3);
	split_sreg_range(0X2CC62,"ds",0XFF0,3);
	split_sreg_range(0X2CC8A,"ds",0X3B77,3);
	split_sreg_range(0X2CCDA,"ds",0X3B77,3);
	split_sreg_range(0X2CCE1,"ds",0X3B77,3);
	split_sreg_range(0X2CD09,"ds",0X3B77,3);
	split_sreg_range(0X2CD3E,"ds",0X2CC5,3);
	split_sreg_range(0X2CD48,"ds",0X3B77,3);
	split_sreg_range(0X2CD5B,"ds",0X3B77,3);
	split_sreg_range(0X2CD68,"ds",0X3B77,3);
	split_sreg_range(0X2CD70,"ds",0X3B77,3);
	split_sreg_range(0X2CD7C,"ds",0X3B77,3);
	split_sreg_range(0X2CDAA,"ds",0X3B77,3);
	split_sreg_range(0X2CDBD,"ds",0X3B77,3);
	split_sreg_range(0X2CE5C,"ds",0X3B77,3);
	split_sreg_range(0X2CE62,"ds",0X3B77,3);
	split_sreg_range(0X2CE71,"ds",0X3B77,3);
	split_sreg_range(0X2CE76,"ds",0X3B77,3);
	split_sreg_range(0X2CF42,"ds",0X3B77,3);
	split_sreg_range(0X2CFC0,"ds",0X3B77,3);
	split_sreg_range(0X2CFE4,"ds",0X3B77,3);
	split_sreg_range(0X2CFF2,"ds",0X3B77,3);
	split_sreg_range(0X2D088,"ds",0X3B77,3);
	split_sreg_range(0X2D098,"ds",0X3B77,3);
	split_sreg_range(0X2D0C6,"ds",0X3B77,3);
	split_sreg_range(0X2D0DC,"ds",0X3B77,3);
	split_sreg_range(0X2D0F9,"ds",0X3B77,3);
	split_sreg_range(0X2E152,"ds",0X3B77,3);
	split_sreg_range(0X2E168,"ds",0,3);
	split_sreg_range(0X2E20E,"ds",0X3B77,3);
	split_sreg_range(0X2E21A,"ds",0X3B77,3);
	split_sreg_range(0X2E6E5,"ds",0X2CC5,3);
	split_sreg_range(0X2E6EC,"ds",0X3B77,3);
	split_sreg_range(0X2E751,"ds",0X3B77,3);
	split_sreg_range(0X2E794,"ds",0X3B77,3);
	split_sreg_range(0X2E7C0,"ds",0X3B77,3);
	split_sreg_range(0X2E7DD,"ds",0X3B77,3);
	split_sreg_range(0X2EA07,"ds",0X3B77,3);
	split_sreg_range(0X2EA29,"ds",0X3B77,3);
	split_sreg_range(0X2F368,"ds",0X3B77,3);
	split_sreg_range(0X2F371,"ds",0X3B77,3);
	split_sreg_range(0X2F3B3,"ds",0X2EA2,3);
	split_sreg_range(0X2F3BA,"ds",0X3B77,3);
	split_sreg_range(0X2F3D2,"ds",0X3B77,3);
	split_sreg_range(0X2F3D9,"ds",0X3B77,3);
	split_sreg_range(0X2FEC9,"ds",0X3B77,3);
	split_sreg_range(0X2FED4,"ds",0X3B77,3);
	split_sreg_range(0X2FF22,"ds",0X3B77,3);
	split_sreg_range(0X2FFAA,"ds",0X3B77,3);
	split_sreg_range(0X2FFC0,"ds",0X3B77,3);
	split_sreg_range(0X2FFCB,"ds",0X3B77,3);
	split_sreg_range(0X30028,"ds",0X3B77,3);
	split_sreg_range(0X30338,"ds",0X3B77,3);
	split_sreg_range(0X303B9,"ds",0X3B77,3);
	split_sreg_range(0X308D1,"ds",0X3B77,3);
	split_sreg_range(0X308EF,"ds",0X3B77,3);
	split_sreg_range(0X309AC,"ds",0X3B77,3);
	split_sreg_range(0X309BF,"ds",0X3B77,3);
	split_sreg_range(0X30A00,"ds",0X3B77,3);
	split_sreg_range(0X30B18,"ds",0X3B77,3);
	split_sreg_range(0X30B3F,"ds",0X3B77,3);
	split_sreg_range(0X30B4E,"ds",0X3B77,3);
	split_sreg_range(0X30B59,"ds",0X3B77,3);
	split_sreg_range(0X30B77,"ds",0X3B77,3);
	split_sreg_range(0X30BF6,"ds",0X3B77,3);
	split_sreg_range(0X30C05,"ds",0X3B77,3);
	split_sreg_range(0X30C25,"ds",0X3B77,3);
	split_sreg_range(0X30CBE,"ds",0X4377,3);
	split_sreg_range(0X30CD9,"ds",0X3B77,3);
	split_sreg_range(0X30D19,"ds",0X4377,3);
	split_sreg_range(0X30D50,"ds",0X7FF,3);
	split_sreg_range(0X30D60,"ds",0X3B77,3);
	split_sreg_range(0X30D67,"ds",0X3B77,3);
	split_sreg_range(0X30E8D,"ds",0X3B77,3);
	split_sreg_range(0X30EBD,"ds",0X3B77,3);
	split_sreg_range(0X30F00,"ds",0X3B77,3);
	split_sreg_range(0X30F23,"ds",0X3B77,3);
	split_sreg_range(0X30FB6,"ds",0X3B77,3);
	split_sreg_range(0X31014,"ds",0X3B77,3);
	split_sreg_range(0X31078,"ds",0X3B77,3);
	split_sreg_range(0X31197,"ds",0X3B77,3);
	split_sreg_range(0X311C7,"ds",0X4B77,3);
	split_sreg_range(0X311D3,"ds",0X3B77,3);
	split_sreg_range(0X311E6,"ds",0X3B77,3);
	split_sreg_range(0X31208,"ds",0X3B77,3);
	split_sreg_range(0X31226,"ds",0X3B77,3);
	split_sreg_range(0X3218F,"ds",0XB000,3);
	split_sreg_range(0X3219A,"ds",0X3B77,3);
	split_sreg_range(0X324BA,"ds",0X3B77,3);
	split_sreg_range(0X324DF,"ds",0X3B77,3);
	split_sreg_range(0X324EA,"ds",0X3B77,3);
	split_sreg_range(0X324F0,"ds",0X3B77,3);
	split_sreg_range(0X32556,"ds",0X3B77,3);
	split_sreg_range(0X3257E,"ds",0X3B77,3);
	split_sreg_range(0X32592,"ds",0X3B77,3);
	split_sreg_range(0X325AA,"ds",0X3B77,3);
	split_sreg_range(0X32623,"ds",0X2EA2,3);
	split_sreg_range(0X3262C,"ds",0X3B77,3);
	split_sreg_range(0X32648,"ds",0X3B77,3);
	split_sreg_range(0X32AF1,"ds",0X3B77,3);
	split_sreg_range(0X32B1B,"ds",0X3B77,3);
	split_sreg_range(0X32B2A,"ds",0X3B77,3);
	split_sreg_range(0X32B5B,"ds",0X3B77,3);
	split_sreg_range(0X32C25,"ds",0X3B77,3);
	split_sreg_range(0X32D8D,"ds",0X3B77,3);
	split_sreg_range(0X32EB1,"ds",0X4B77,3);
	split_sreg_range(0X32F12,"ds",0X5B77,3);
	split_sreg_range(0X32F21,"ds",0X3B77,3);
	split_sreg_range(0X32F7F,"ds",0X4B77,3);
	split_sreg_range(0X32FE9,"ds",0X5B77,3);
	split_sreg_range(0X33216,"ds",0X3B77,3);
	split_sreg_range(0X3325B,"ds",0X3B77,3);
	split_sreg_range(0X3327D,"ds",0X3B77,3);
	split_sreg_range(0X33666,"ds",0X3B77,3);
	split_sreg_range(0X33686,"ds",0X3B77,3);
	split_sreg_range(0X3373E,"ds",0X3B77,3);
	split_sreg_range(0X3374F,"ds",0X3B77,3);
	split_sreg_range(0X3376B,"ds",0X3B77,3);
	split_sreg_range(0X337A9,"ds",0X3B77,3);
	split_sreg_range(0X33878,"ds",0X3B77,3);
	split_sreg_range(0X3389C,"ds",0X3B77,3);
	split_sreg_range(0X338BA,"ds",0X3B77,3);
	split_sreg_range(0X338EB,"ds",0X3B77,3);
	split_sreg_range(0X33A06,"ds",0X3B77,3);
	split_sreg_range(0X33A2A,"ds",0X3B77,3);
	split_sreg_range(0X33A48,"ds",0X3B77,3);
	split_sreg_range(0X33A9D,"ds",0X3B77,3);
	split_sreg_range(0X33ACC,"ds",0X3B77,3);
	split_sreg_range(0X33AF0,"ds",0X3B77,3);
	split_sreg_range(0X33B0E,"ds",0X3B77,3);
	split_sreg_range(0X33B52,"ds",0X3B77,3);
	split_sreg_range(0X33BA4,"ds",0X3B77,3);
	split_sreg_range(0X33BC8,"ds",0X3B77,3);
	split_sreg_range(0X33BE6,"ds",0X3B77,3);
	split_sreg_range(0X33C17,"ds",0X3B77,3);
	split_sreg_range(0X33D18,"ds",0X3B77,3);
	split_sreg_range(0X33D3C,"ds",0X3B77,3);
	split_sreg_range(0X33D5A,"ds",0X3B77,3);
	split_sreg_range(0X33DA5,"ds",0X3B77,3);
	split_sreg_range(0X33DCA,"ds",0X3B77,3);
	split_sreg_range(0X33DEE,"ds",0X3B77,3);
	split_sreg_range(0X33E0C,"ds",0X3B77,3);
	split_sreg_range(0X33E50,"ds",0X3B77,3);
	split_sreg_range(0X33E9C,"ds",0X3B77,3);
	split_sreg_range(0X33EC0,"ds",0X3B77,3);
	split_sreg_range(0X33EDE,"ds",0X3B77,3);
	split_sreg_range(0X33F1D,"ds",0X3B77,3);
	split_sreg_range(0X33FD9,"ds",0X3B77,3);
	split_sreg_range(0X3404C,"ds",0X3B77,3);
	split_sreg_range(0X3406C,"ds",0X3B77,3);
	split_sreg_range(0X34090,"ds",0X3B77,3);
	split_sreg_range(0X340AE,"ds",0X3B77,3);
	split_sreg_range(0X340DF,"ds",0X3B77,3);
	split_sreg_range(0X341FA,"ds",0X3B77,3);
	split_sreg_range(0X3421E,"ds",0X3B77,3);
	split_sreg_range(0X3423C,"ds",0X3B77,3);
	split_sreg_range(0X34291,"ds",0X3B77,3);
	split_sreg_range(0X342C0,"ds",0X3B77,3);
	split_sreg_range(0X342E4,"ds",0X3B77,3);
	split_sreg_range(0X34302,"ds",0X3B77,3);
	split_sreg_range(0X34346,"ds",0X3B77,3);
	split_sreg_range(0X34398,"ds",0X3B77,3);
	split_sreg_range(0X343BC,"ds",0X3B77,3);
	split_sreg_range(0X343DA,"ds",0X3B77,3);
	split_sreg_range(0X3440B,"ds",0X3B77,3);
	split_sreg_range(0X344DF,"ds",0X3B77,3);
	split_sreg_range(0X344F0,"ds",0X3B77,3);
	split_sreg_range(0X34514,"ds",0X3B77,3);
	split_sreg_range(0X34532,"ds",0X3B77,3);
	split_sreg_range(0X34590,"ds",0X3B77,3);
	split_sreg_range(0X345AD,"ds",0X3B77,3);
	split_sreg_range(0X345C9,"ds",0X3B77,3);
	split_sreg_range(0X345E5,"ds",0X3B77,3);
	split_sreg_range(0X34622,"ds",0X3B77,3);
	split_sreg_range(0X34742,"ds",0X3B77,3);
	split_sreg_range(0X34766,"ds",0X3B77,3);
	split_sreg_range(0X3478A,"ds",0X3B77,3);
	split_sreg_range(0X347B6,"ds",0XA000,3);
	split_sreg_range(0X347D8,"ds",0X3B77,3);
	split_sreg_range(0X347E8,"ds",0X3B77,3);
	split_sreg_range(0X3481A,"ds",0X3B77,3);
	split_sreg_range(0X3482F,"ds",0X3B77,3);
	split_sreg_range(0X3483F,"ds",0X3B77,3);
	split_sreg_range(0X3493C,"ds",0X3B77,3);
	split_sreg_range(0X34B51,"ds",0X3B77,3);
	split_sreg_range(0X34B5E,"ds",0X3B77,3);
	split_sreg_range(0X34C40,"ds",0X3B77,3);
	split_sreg_range(0X34CD2,"ds",0X3B77,3);
	split_sreg_range(0X34CDA,"ds",0X3B77,3);
	split_sreg_range(0X35B00,"ds",0X3B77,3);
	split_sreg_range(0X35B12,"ds",0X3B77,3);
	split_sreg_range(0X35C64,"ds",0XA000,3);
	split_sreg_range(0X35CC2,"ds",0X3B77,3);
	split_sreg_range(0X35DD4,"ds",0X3B77,3);
	split_sreg_range(0X35DE4,"ds",0X3B77,3);
	split_sreg_range(0X35DF2,"ds",0X3B77,3);
	split_sreg_range(0X35E06,"ds",0X3B77,3);
	split_sreg_range(0X35E14,"ds",0X3B77,3);
	split_sreg_range(0X35E46,"ds",0X3B77,3);
	split_sreg_range(0X35E5B,"ds",0X3B77,3);
	split_sreg_range(0X35E6B,"ds",0X3B77,3);
	split_sreg_range(0X35F43,"ds",0X3B77,3);
	split_sreg_range(0X35FAE,"ds",0X3B77,3);
	split_sreg_range(0X35FE2,"ds",0X3B77,3);
	split_sreg_range(0X35FF3,"ds",0X3B77,3);
	split_sreg_range(0X35FFD,"ds",0X3B77,3);
	split_sreg_range(0X36068,"ds",0X3B77,3);
	split_sreg_range(0X3607A,"ds",0X3B77,3);
	split_sreg_range(0X36104,"ds",0X3B77,3);
	split_sreg_range(0X36122,"ds",0X3B77,3);
	split_sreg_range(0X36134,"ds",0X3B77,3);
	split_sreg_range(0X36159,"ds",0X3B77,3);
	split_sreg_range(0X36185,"ds",0X3B77,3);
	split_sreg_range(0X361A7,"ds",0X3B77,3);
	split_sreg_range(0X361BC,"ds",0X3B77,3);
	split_sreg_range(0X36245,"ds",0X3B77,3);
	split_sreg_range(0X36412,"ds",0X3B77,3);
	split_sreg_range(0X367B1,"ds",0X3B77,3);
	split_sreg_range(0X368AA,"ds",0X3B77,3);
	split_sreg_range(0X36AF2,"ds",0X3B77,3);
	split_sreg_range(0X36B16,"ds",0X3B77,3);
	split_sreg_range(0X36BBD,"ds",0X3B77,3);
	split_sreg_range(0X36BE8,"ds",0X3B77,3);
	split_sreg_range(0X36C7E,"ds",0X3B77,3);
	split_sreg_range(0X36EC0,"ds",0X3B77,3);
	split_sreg_range(0X36F29,"ds",0X3B77,3);
	split_sreg_range(0X3702D,"ds",0X3B77,3);
	split_sreg_range(0X370BA,"ds",0X3B77,3);
	split_sreg_range(0X370D2,"ds",0X3B77,3);
	split_sreg_range(0X37F23,"ds",0X3B77,3);
	split_sreg_range(0X37F3B,"ds",0X3B77,3);
	split_sreg_range(0X3808A,"ds",0X3B77,3);
	split_sreg_range(0X380A2,"ds",0X3B77,3);
	split_sreg_range(0X380EE,"ds",0X3B77,3);
	split_sreg_range(0X380F1,"ds",0X3B77,3);
	split_sreg_range(0X3863C,"ds",0X3B77,3);
	split_sreg_range(0X38642,"ds",0X3B77,3);
	split_sreg_range(0X38689,"ds",0X3B77,3);
	split_sreg_range(0X38696,"ds",0X3B77,3);
	split_sreg_range(0X386D1,"ds",0X3B77,3);
	split_sreg_range(0X386E2,"ds",0X3B77,3);
	split_sreg_range(0X386FD,"ds",0X3B77,3);
	split_sreg_range(0X38710,"ds",0X3B77,3);
	split_sreg_range(0X38AA1,"ds",0X3B77,3);
	split_sreg_range(0X38AB1,"ds",0X3B77,3);
	split_sreg_range(0X38AC1,"ds",0X3B77,3);
	split_sreg_range(0X38ACE,"ds",0X3B77,3);
	split_sreg_range(0X38AE7,"ds",0X3B77,3);
	split_sreg_range(0X38AF8,"ds",0X3B77,3);
	split_sreg_range(0X38BE4,"ds",0X3B77,3);
	split_sreg_range(0X38BF6,"ds",0X3B77,3);
	split_sreg_range(0X38C48,"ds",0X3B77,3);
	split_sreg_range(0X38C5A,"ds",0X3B77,3);
	split_sreg_range(0X38CF1,"ds",0X3B77,3);
	split_sreg_range(0X38D06,"ds",0X3B77,3);
	split_sreg_range(0X38DDF,"ds",0X3B77,3);
	split_sreg_range(0X38DF3,"ds",0X3B77,3);
	split_sreg_range(0X38EAA,"ds",0X3B77,3);
	split_sreg_range(0X3904B,"ds",0X3B77,3);
	split_sreg_range(0X39059,"ds",0X3B77,3);
	split_sreg_range(0X39085,"ds",0X3B77,3);
	split_sreg_range(0X39095,"ds",0X3B77,3);
	split_sreg_range(0X390C2,"ds",0X3B77,3);
	split_sreg_range(0X390D6,"ds",0X3B77,3);
	split_sreg_range(0X39453,"ds",0X3B77,3);
	split_sreg_range(0X39468,"ds",0X3B77,3);
	split_sreg_range(0X3950C,"ds",0X3B77,3);
	split_sreg_range(0X39512,"ds",0X3B77,3);
	split_sreg_range(0X39636,"ds",0X3B77,3);
	split_sreg_range(0X3964A,"ds",0X3B77,3);
	split_sreg_range(0X39684,"ds",0X3B77,3);
	split_sreg_range(0X39696,"ds",0X3B77,3);
	split_sreg_range(0X396E2,"ds",0X3B77,3);
	split_sreg_range(0X396EE,"ds",0X3B77,3);
	split_sreg_range(0X396FB,"ds",0X3B77,3);
	split_sreg_range(0X3970D,"ds",0X3B77,3);
	split_sreg_range(0X39961,"ds",0X3B77,3);
	split_sreg_range(0X39974,"ds",0X3B77,3);
	split_sreg_range(0X39ACB,"ds",0X3B77,3);
	split_sreg_range(0X39AD1,"ds",0X3B77,3);
	split_sreg_range(0X39CA8,"ds",0X3B77,3);
	split_sreg_range(0X39CBE,"ds",0X3B77,3);
	split_sreg_range(0X39CCA,"ds",0X3B77,3);
	split_sreg_range(0X39E14,"ds",0X3B77,3);
	split_sreg_range(0X3A4B5,"ds",0X3B77,3);
	split_sreg_range(0X3A958,"ds",0X3B77,3);
	split_sreg_range(0X3A9D5,"ds",0X3B77,3);
	split_sreg_range(0X3ACD7,"ds",0X3B77,3);
	split_sreg_range(0X3B0BA,"ds",0X3B77,3);
	split_sreg_range(0X3B12A,"ds",0X3B77,3);
	split_sreg_range(0X3B1C0,"ds",0X3B77,3);
	split_sreg_range(0X3B1F0,"ds",0X3B77,3);
	split_sreg_range(0X3B770,"ds",0X3B77,3);
	split_sreg_range(0X46490,"ds",0X3B77,3);
	split_sreg_range(0X10000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X14712,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X19DC5,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X19F12,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X1E1A0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X21B79,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X24D64,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X26BAD,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X274B0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X2A2BC,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X2CC52,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X2EA07,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X2EA29,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X361BC,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36245,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36412,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X367B1,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X368AA,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36AF2,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36B16,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36BBD,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36BE8,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36C7E,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36EC0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X36F29,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3702D,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X370BA,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X370D2,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3863C,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X39AD1,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X39CCA,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X39E14,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3A4B5,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3A958,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3A9D5,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3ACD7,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3B0BA,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3B12A,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3B1C0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3B1F0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X3B770,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X46490,"fs",0XFFFFFFFF,3);
	split_sreg_range(0X10000,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X14712,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X19DC5,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X19F12,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X1E1A0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X21B79,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X24D64,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X26BAD,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X274B0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X2A2BC,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X2CC52,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X2EA07,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X2EA29,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X361BC,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36245,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36412,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X367B1,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X368AA,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36AF2,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36B16,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36BBD,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36BE8,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36C7E,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36EC0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X36F29,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3702D,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X370BA,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X370D2,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3863C,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X39AD1,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X39CCA,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X39E14,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3A4B5,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3A958,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3A9D5,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3ACD7,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3B0BA,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3B12A,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3B1C0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3B1F0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X3B770,"gs",0XFFFFFFFF,3);
	split_sreg_range(0X46490,"gs",0XFFFFFFFF,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
	Bytes_6();
	Bytes_7();
	Bytes_8();
	Bytes_9();
	Bytes_10();
        end_type_updating(UTP_STRUCT);
}

// End of file.
